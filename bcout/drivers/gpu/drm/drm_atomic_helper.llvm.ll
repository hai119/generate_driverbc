; ModuleID = '../bcout/drivers/gpu/drm/drm_atomic_helper.llvm.bc'
source_filename = "drivers/gpu/drm/drm_atomic_helper.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.workqueue_struct = type opaque
%struct.kmem_cache = type opaque
%struct.lock_class_key = type {}
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.46, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.49 }
%union.anon.46 = type { %struct.anon.47 }
%struct.anon.47 = type { i64, i64 }
%union.anon.49 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.45, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.15, [0 x i64] }
%struct.anon.15 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.16, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.16 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.page = type { i64, %union.anon.2, %union.anon.52, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.54, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.55, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.56, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.59, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.62, %struct.list_head, %struct.list_head, %union.anon.63 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.0, i8* }
%union.anon.0 = type { i64 }
%struct.lockref = type { %union.anon.60 }
%union.anon.60 = type { %struct.anon.61 }
%struct.anon.61 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.vfsmount = type opaque
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%union.anon.62 = type { %struct.list_head }
%union.anon.63 = type { %struct.hlist_node }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.53, i32 }
%union.anon.53 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.54 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%union.anon.55 = type { %struct.callback_head }
%union.anon.56 = type { %struct.file_operations* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.wait_queue_head*, %struct.poll_table_struct*)*, i32 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.57 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.57 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.59 = type { %struct.pipe_inode_info* }
%struct.fsnotify_mark_connector = type opaque
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.swap_info_struct = type opaque
%union.anon.52 = type { %struct.atomic_t }
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.user_namespace = type opaque
%struct.file = type { %union.anon, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon = type { %struct.callback_head }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_subscriptions = type opaque
%struct.atomic_t = type { i32 }
%struct.uprobes_state = type {}
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.17 }
%union.anon.17 = type { %struct.anon.18 }
%struct.anon.18 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.kref = type { %struct.refcount_struct }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.30 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.30 = type { %struct.callback_head }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.22, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.23, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.24, %union.anon.28, %struct.key_restriction* }
%union.anon.22 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.23 = type { i64 }
%union.anon.24 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.25, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.25 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.28 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.31, %union.anon.32, i32 }
%struct.request_queue = type opaque
%union.anon.31 = type { %struct.list_head }
%union.anon.32 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.33 }
%struct.anon.33 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.37 }
%struct.anon.37 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.rseq = type { i32, i32, %union.anon.44, i32, [12 x i8] }
%union.anon.44 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.45 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.drm_device = type { %struct.list_head, i32, %struct.kref, %struct.device*, %struct.anon.65, %struct.drm_driver*, i8*, %struct.drm_minor*, %struct.drm_minor*, i8, %struct.drm_master*, i32, i8, %struct.inode*, i8*, %struct.mutex, %struct.mutex, %struct.atomic_t, %struct.mutex, %struct.list_head, %struct.list_head, %struct.mutex, %struct.list_head, i8, i32, i8, %struct.drm_vblank_crtc*, %struct.spinlock, %struct.spinlock, i32, %struct.list_head, %struct.spinlock, %struct.drm_agp_head*, %struct.pci_dev*, i32, %struct.drm_mode_config, %struct.mutex, %struct.idr, %struct.drm_vma_offset_manager*, %struct.drm_vram_mm*, i32, %struct.drm_fb_helper* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.64, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%union.anon.64 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.anon.65 = type { %struct.list_head, i8*, %struct.spinlock }
%struct.drm_driver = type { i32 (%struct.drm_device*, i64)*, i32 (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_device*)*, void (%struct.drm_device*)*, void (%struct.drm_device*)*, i32 (i32, i8*)*, void (%struct.drm_device*)*, i32 (%struct.drm_device*)*, void (%struct.drm_device*)*, void (%struct.drm_device*, %struct.drm_file*, i1)*, void (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_minor*)*, void (%struct.drm_gem_object*)*, i32 (%struct.drm_gem_object*, %struct.drm_file*)*, void (%struct.drm_gem_object*, %struct.drm_file*)*, %struct.drm_gem_object* (%struct.drm_device*, i64)*, i32 (%struct.drm_device*, %struct.drm_file*, i32, i32, i32*)*, i32 (%struct.drm_device*, %struct.drm_file*, i32, i32*)*, %struct.dma_buf* (%struct.drm_gem_object*, i32)*, %struct.drm_gem_object* (%struct.drm_device*, %struct.dma_buf*)*, i32 (%struct.drm_gem_object*)*, void (%struct.drm_gem_object*)*, %struct.sg_table* (%struct.drm_gem_object*)*, %struct.drm_gem_object* (%struct.drm_device*, %struct.dma_buf_attachment*, %struct.sg_table*)*, i8* (%struct.drm_gem_object*)*, void (%struct.drm_gem_object*, i8*)*, i32 (%struct.drm_gem_object*, %struct.vm_area_struct*)*, i32 (%struct.drm_file*, %struct.drm_device*, %struct.drm_mode_create_dumb*)*, i32 (%struct.drm_file*, %struct.drm_device*, i32, i64*)*, i32 (%struct.drm_file*, %struct.drm_device*, i32)*, %struct.vm_operations_struct*, i32, i32, i32, i8*, i8*, i8*, i32, %struct.drm_ioctl_desc*, i32, %struct.file_operations*, %struct.list_head, i32 (%struct.drm_device*)*, void (%struct.drm_device*, %struct.drm_file*)*, i32 (%struct.drm_device*, i8*, %struct.drm_file*)*, i32 (%struct.drm_device*)*, i32 (%struct.drm_device*, i32)*, i32 (%struct.drm_device*, i32)*, i32 (%struct.drm_device*, i32)*, void (%struct.drm_device*, i32)*, i32 }
%struct.drm_file = type { i8, i8, i8, i8, i8, i8, i8, i8, %struct.drm_master*, %struct.pid*, i32, %struct.list_head, %struct.drm_minor*, %struct.idr, %struct.spinlock, %struct.idr, %struct.spinlock, %struct.file*, i8*, %struct.list_head, %struct.mutex, %struct.list_head, %struct.wait_queue_head, %struct.list_head, %struct.list_head, i32, %struct.mutex, %struct.drm_prime_file_private }
%struct.drm_prime_file_private = type { %struct.mutex, %struct.rb_root, %struct.rb_root }
%struct.drm_gem_object = type opaque
%struct.dma_buf = type opaque
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.dma_buf_attachment = type opaque
%struct.drm_mode_create_dumb = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.drm_ioctl_desc = type opaque
%struct.drm_minor = type { i32, i32, %struct.device*, %struct.drm_device*, %struct.dentry*, %struct.list_head, %struct.mutex }
%struct.drm_master = type opaque
%struct.drm_vblank_crtc = type { %struct.drm_device*, %struct.wait_queue_head, %struct.timer_list, %struct.seqlock_t, %struct.atomic64_t, i64, %struct.atomic_t, i32, i32, i32, i32, i32, i32, %struct.drm_display_mode, i8, %struct.kthread_worker*, %struct.list_head, %struct.wait_queue_head }
%struct.drm_display_mode = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %struct.list_head, [32 x i8], i32, i32 }
%struct.kthread_worker = type { i32, %struct.raw_spinlock, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.kthread_work* }
%struct.kthread_work = type { %struct.list_head, void (%struct.kthread_work*)*, %struct.kthread_worker*, i32 }
%struct.drm_agp_head = type opaque
%struct.pci_dev = type opaque
%struct.drm_mode_config = type { %struct.mutex, %struct.drm_modeset_lock, %struct.drm_modeset_acquire_ctx*, %struct.mutex, %struct.idr, %struct.idr, %struct.mutex, i32, %struct.list_head, %struct.spinlock, i32, %struct.ida, %struct.list_head, %struct.llist_head, %struct.work_struct, i32, %struct.list_head, i32, %struct.list_head, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, %struct.drm_mode_config_funcs*, i64, i8, i8, i8, %struct.delayed_work, %struct.mutex, %struct.list_head, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, i32, i32, i8, i8, i8, i8, i8, i8, i8, %struct.drm_property*, i32, i32, %struct.drm_atomic_state*, %struct.drm_mode_config_helper_funcs* }
%struct.drm_modeset_lock = type { %struct.ww_mutex, %struct.list_head }
%struct.ww_mutex = type { %struct.mutex, %struct.ww_acquire_ctx* }
%struct.ww_acquire_ctx = type { %struct.task_struct*, i64, i32, i16, i16 }
%struct.drm_modeset_acquire_ctx = type { %struct.ww_acquire_ctx, %struct.drm_modeset_lock*, %struct.list_head, i8, i8 }
%struct.ida = type { %struct.xarray }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.drm_mode_config_funcs = type { %struct.drm_framebuffer* (%struct.drm_device*, %struct.drm_file*, %struct.drm_mode_fb_cmd2*)*, %struct.drm_format_info* (%struct.drm_mode_fb_cmd2*)*, void (%struct.drm_device*)*, i32 (%struct.drm_device*, %struct.drm_display_mode*)*, {}*, i32 (%struct.drm_device*, %struct.drm_atomic_state*, i1)*, %struct.drm_atomic_state* (%struct.drm_device*)*, void (%struct.drm_atomic_state*)*, void (%struct.drm_atomic_state*)* }
%struct.drm_framebuffer = type { %struct.drm_device*, %struct.list_head, %struct.drm_mode_object, [16 x i8], %struct.drm_format_info*, %struct.drm_framebuffer_funcs*, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, %struct.list_head, [4 x %struct.drm_gem_object*] }
%struct.drm_mode_object = type { i32, i32, %struct.drm_object_properties*, %struct.kref, void (%struct.kref*)* }
%struct.drm_object_properties = type { i32, [24 x %struct.drm_property*], [24 x i64] }
%struct.drm_format_info = type opaque
%struct.drm_framebuffer_funcs = type { void (%struct.drm_framebuffer*)*, i32 (%struct.drm_framebuffer*, %struct.drm_file*, i32*)*, i32 (%struct.drm_framebuffer*, %struct.drm_file*, i32, i32, %struct.drm_clip_rect*, i32)* }
%struct.drm_clip_rect = type { i16, i16, i16, i16 }
%struct.drm_mode_fb_cmd2 = type { i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [4 x i32], [4 x i64] }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.drm_property = type { %struct.list_head, %struct.drm_mode_object, i32, [32 x i8], i32, i64*, %struct.drm_device*, %struct.list_head }
%struct.drm_mode_config_helper_funcs = type { void (%struct.drm_atomic_state*)* }
%struct.drm_vma_offset_manager = type opaque
%struct.drm_vram_mm = type opaque
%struct.drm_fb_helper = type opaque
%struct.drm_atomic_state = type { %struct.kref, %struct.drm_device*, i8, %struct.__drm_planes_state*, %struct.__drm_crtcs_state*, i32, %struct.__drm_connnectors_state*, i32, %struct.__drm_private_objs_state*, %struct.drm_modeset_acquire_ctx*, %struct.drm_crtc_commit*, %struct.work_struct }
%struct.__drm_planes_state = type { %struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_plane_state*, %struct.drm_plane_state* }
%struct.drm_plane = type { %struct.drm_device*, %struct.list_head, i8*, %struct.drm_modeset_lock, %struct.drm_mode_object, i32, i32*, i32, i8, i64*, i32, %struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_framebuffer*, %struct.drm_plane_funcs*, %struct.drm_object_properties, i32, i32, %struct.drm_plane_helper_funcs*, %struct.drm_plane_state*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property* }
%struct.drm_crtc = type { %struct.drm_device*, %struct.device_node*, %struct.list_head, i8*, %struct.drm_modeset_lock, %struct.drm_mode_object, %struct.drm_plane*, %struct.drm_plane*, i32, i32, i32, i8, %struct.drm_display_mode, %struct.drm_display_mode, i32, i32, %struct.drm_crtc_funcs*, i32, i16*, %struct.drm_crtc_helper_funcs*, %struct.drm_object_properties, %struct.drm_crtc_state*, %struct.list_head, %struct.spinlock, %struct.drm_crtc_crc, i32, %struct.spinlock, i64, [32 x i8], %struct.drm_self_refresh_data* }
%struct.drm_crtc_funcs = type { void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, %struct.drm_file*, i32, i32, i32)*, i32 (%struct.drm_crtc*, %struct.drm_file*, i32, i32, i32, i32, i32)*, i32 (%struct.drm_crtc*, i32, i32)*, i32 (%struct.drm_crtc*, i16*, i16*, i16*, i32, %struct.drm_modeset_acquire_ctx*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_mode_set*, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_pending_vblank_event*, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_pending_vblank_event*, i32, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_property*, i64)*, %struct.drm_crtc_state* (%struct.drm_crtc*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_property*, i64*)*, i32 (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, i8*)*, i32 (%struct.drm_crtc*, i8*, i64*)*, i8** (%struct.drm_crtc*, i64*)*, void (%struct.drm_printer*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i1 (%struct.drm_crtc*, i32*, i64*, i1)* }
%struct.drm_mode_set = type { %struct.drm_framebuffer*, %struct.drm_crtc*, %struct.drm_display_mode*, i32, i32, %struct.drm_connector**, i64 }
%struct.drm_connector = type { %struct.drm_device*, %struct.device*, %struct.device_attribute*, %struct.list_head, %struct.drm_mode_object, i8*, %struct.mutex, i32, i32, i32, i8, i8, i8, i8, i32, %struct.list_head, i32, %struct.list_head, %struct.drm_display_info, %struct.drm_connector_funcs*, %struct.drm_property_blob*, %struct.drm_object_properties, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property_blob*, %struct.drm_property*, i8, i32, %struct.drm_connector_helper_funcs*, %struct.drm_cmdline_mode, i32, i8, i64, i32, %struct.drm_encoder*, [128 x i8], [2 x i8], [2 x i32], [2 x i32], %struct.i2c_adapter*, i32, i32, i8, i8, %struct.dentry*, %struct.drm_connector_state*, %struct.drm_property_blob*, i8, %struct.drm_tile_group*, i8, i8, i8, i8, i8, i16, i16, %struct.llist_node, %struct.hdr_sink_metadata }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.drm_display_info = type { i32, i32, i32, i32, i32, i32, i32*, i32, i32, i32, i8, i8, i8, i8, i8, i8, %struct.drm_hdmi_info, i8, %struct.drm_monitor_range_info }
%struct.drm_hdmi_info = type { %struct.drm_scdc, [4 x i64], [4 x i64], i64, i8 }
%struct.drm_scdc = type { i8, i8, %struct.drm_scrambling }
%struct.drm_scrambling = type { i8, i8 }
%struct.drm_monitor_range_info = type { i8, i8 }
%struct.drm_connector_funcs = type { i32 (%struct.drm_connector*, i32)*, void (%struct.drm_connector*)*, i32 (%struct.drm_connector*, i1)*, void (%struct.drm_connector*)*, i32 (%struct.drm_connector*, i32, i32)*, i32 (%struct.drm_connector*, %struct.drm_property*, i64)*, i32 (%struct.drm_connector*)*, void (%struct.drm_connector*)*, void (%struct.drm_connector*)*, %struct.drm_connector_state* (%struct.drm_connector*)*, void (%struct.drm_connector*, %struct.drm_connector_state*)*, i32 (%struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_property*, i64*)*, void (%struct.drm_printer*, %struct.drm_connector_state*)* }
%struct.drm_printer = type { void (%struct.drm_printer*, %struct.va_format*)*, void (%struct.drm_printer*, i8*)*, i8*, i8* }
%struct.va_format = type { i8*, [1 x %struct.__va_list_tag]* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.drm_connector_helper_funcs = type { i32 (%struct.drm_connector*)*, i32 (%struct.drm_connector*, %struct.drm_modeset_acquire_ctx*, i1)*, i32 (%struct.drm_connector*, %struct.drm_display_mode*)*, i32 (%struct.drm_connector*, %struct.drm_display_mode*, %struct.drm_modeset_acquire_ctx*, i32*)*, %struct.drm_encoder* (%struct.drm_connector*)*, %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)*, i32 (%struct.drm_connector*, %struct.drm_atomic_state*)*, void (%struct.drm_connector*, %struct.drm_connector_state*)*, i32 (%struct.drm_writeback_connector*, %struct.drm_writeback_job*)*, void (%struct.drm_writeback_connector*, %struct.drm_writeback_job*)* }
%struct.drm_writeback_connector = type { %struct.drm_connector, %struct.drm_encoder, %struct.drm_property_blob*, %struct.spinlock, %struct.list_head, i32, %struct.spinlock, i64, [32 x i8] }
%struct.drm_encoder = type { %struct.drm_device*, %struct.list_head, %struct.drm_mode_object, i8*, i32, i32, i32, i32, %struct.drm_crtc*, %struct.list_head, %struct.drm_encoder_funcs*, %struct.drm_encoder_helper_funcs* }
%struct.drm_encoder_funcs = type { void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)*, i32 (%struct.drm_encoder*)*, void (%struct.drm_encoder*)* }
%struct.drm_encoder_helper_funcs = type { void (%struct.drm_encoder*, i32)*, i32 (%struct.drm_encoder*, %struct.drm_display_mode*)*, i1 (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)*, void (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)*, i32 (%struct.drm_encoder*, %struct.drm_connector*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)*, i32 (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)* }
%struct.drm_writeback_job = type { %struct.drm_writeback_connector*, i8, %struct.work_struct, %struct.list_head, %struct.drm_framebuffer*, %struct.dma_fence*, i8* }
%struct.dma_fence = type { %struct.spinlock*, %struct.dma_fence_ops*, %union.anon.66, i64, i64, i64, %struct.kref, i32 }
%struct.dma_fence_ops = type { i8, i8* (%struct.dma_fence*)*, i8* (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i64 (%struct.dma_fence*, i1, i64)*, void (%struct.dma_fence*)*, void (%struct.dma_fence*, i8*, i32)*, void (%struct.dma_fence*, i8*, i32)* }
%union.anon.66 = type { %struct.list_head }
%struct.drm_cmdline_mode = type { [32 x i8], i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, %struct.drm_connector_tv_margins }
%struct.drm_connector_tv_margins = type { i32, i32, i32, i32 }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.drm_connector_state = type { %struct.drm_connector*, %struct.drm_crtc*, %struct.drm_encoder*, i32, %struct.drm_atomic_state*, %struct.drm_crtc_commit*, %struct.drm_tv_connector_state, i8, i32, i32, i32, i32, i32, i32, %struct.drm_writeback_job*, i8, i8, %struct.drm_property_blob* }
%struct.drm_tv_connector_state = type { i32, %struct.drm_connector_tv_margins, i32, i32, i32, i32, i32, i32, i32 }
%struct.drm_property_blob = type { %struct.drm_mode_object, %struct.drm_device*, %struct.list_head, %struct.list_head, i64, i8* }
%struct.drm_tile_group = type { %struct.kref, %struct.drm_device*, i32, [8 x i8] }
%struct.hdr_sink_metadata = type { i32, %union.anon.68 }
%union.anon.68 = type { %struct.hdr_static_metadata }
%struct.hdr_static_metadata = type { i8, i8, i16, i16, i16 }
%struct.drm_pending_vblank_event = type { %struct.drm_pending_event, i32, i64, %union.anon.67 }
%struct.drm_pending_event = type { %struct.completion*, void (%struct.completion*)*, %struct.drm_event*, %struct.dma_fence*, %struct.drm_file*, %struct.list_head, %struct.list_head }
%struct.drm_event = type { i32, i32 }
%union.anon.67 = type { %struct.drm_event_vblank }
%struct.drm_event_vblank = type { %struct.drm_event, i64, i32, i32, i32, i32 }
%struct.drm_crtc_helper_funcs = type { void (%struct.drm_crtc*, i32)*, void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, %struct.drm_display_mode*)*, i1 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, i32 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*, i32, i32, %struct.drm_framebuffer*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, i32, i32, %struct.drm_framebuffer*)*, {}*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, i1 (%struct.drm_crtc*, i1, i32*, i32*, i64*, i64*, %struct.drm_display_mode*)* }
%struct.drm_crtc_state = type { %struct.drm_crtc*, i8, i8, i8, i32, i32, i32, %struct.drm_display_mode, %struct.drm_display_mode, %struct.drm_property_blob*, %struct.drm_property_blob*, %struct.drm_property_blob*, %struct.drm_property_blob*, i32, i8, i8, i8, %struct.drm_pending_vblank_event*, %struct.drm_crtc_commit*, %struct.drm_atomic_state* }
%struct.drm_crtc_crc = type { %struct.spinlock, i8*, i8, i8, %struct.drm_crtc_crc_entry*, i32, i32, i64, %struct.wait_queue_head }
%struct.drm_crtc_crc_entry = type { i8, i32, [10 x i32] }
%struct.drm_self_refresh_data = type opaque
%struct.drm_plane_funcs = type { i32 (%struct.drm_plane*, %struct.drm_crtc*, %struct.drm_framebuffer*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_plane*, %struct.drm_modeset_acquire_ctx*)*, void (%struct.drm_plane*)*, void (%struct.drm_plane*)*, i32 (%struct.drm_plane*, %struct.drm_property*, i64)*, %struct.drm_plane_state* (%struct.drm_plane*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_property*, i64*)*, i32 (%struct.drm_plane*)*, void (%struct.drm_plane*)*, void (%struct.drm_printer*, %struct.drm_plane_state*)*, i1 (%struct.drm_plane*, i32, i64)* }
%struct.drm_plane_helper_funcs = type { i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)* }
%struct.drm_plane_state = type { %struct.drm_plane*, %struct.drm_crtc*, %struct.drm_framebuffer*, %struct.dma_fence*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, %struct.drm_property_blob*, %struct.drm_rect, %struct.drm_rect, i8, %struct.drm_crtc_commit*, %struct.drm_atomic_state* }
%struct.drm_rect = type { i32, i32, i32, i32 }
%struct.__drm_crtcs_state = type { %struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_crtc_state*, %struct.drm_crtc_state*, %struct.drm_crtc_commit*, i32*, i64 }
%struct.__drm_connnectors_state = type { %struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_connector_state*, %struct.drm_connector_state*, i32* }
%struct.__drm_private_objs_state = type { %struct.drm_private_obj*, %struct.drm_private_state*, %struct.drm_private_state*, %struct.drm_private_state* }
%struct.drm_private_obj = type { %struct.list_head, %struct.drm_modeset_lock, %struct.drm_private_state*, %struct.drm_private_state_funcs* }
%struct.drm_private_state_funcs = type { %struct.drm_private_state* (%struct.drm_private_obj*)*, void (%struct.drm_private_obj*, %struct.drm_private_state*)* }
%struct.drm_private_state = type { %struct.drm_atomic_state* }
%struct.drm_crtc_commit = type { %struct.drm_crtc*, %struct.kref, %struct.completion, %struct.completion, %struct.completion, %struct.list_head, %struct.drm_pending_vblank_event*, i8 }
%struct.drm_connector_list_iter = type { %struct.drm_device*, %struct.drm_connector* }
%struct.drm_bridge = type { %struct.drm_private_obj, %struct.drm_device*, %struct.drm_encoder*, %struct.list_head, %struct.device_node*, %struct.list_head, %struct.drm_bridge_timings*, %struct.drm_bridge_funcs*, i8*, i32, i32, i8, %struct.i2c_adapter*, %struct.mutex, void (i8*, i32)*, i8* }
%struct.drm_bridge_timings = type { i32, i32, i32, i8 }
%struct.drm_bridge_funcs = type { i32 (%struct.drm_bridge*, i32)*, void (%struct.drm_bridge*)*, i32 (%struct.drm_bridge*, %struct.drm_display_info*, %struct.drm_display_mode*)*, i1 (%struct.drm_bridge*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_bridge*)*, void (%struct.drm_bridge*)*, void (%struct.drm_bridge*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_bridge*)*, void (%struct.drm_bridge*)*, void (%struct.drm_bridge*, %struct.drm_bridge_state*)*, void (%struct.drm_bridge*, %struct.drm_bridge_state*)*, void (%struct.drm_bridge*, %struct.drm_bridge_state*)*, void (%struct.drm_bridge*, %struct.drm_bridge_state*)*, %struct.drm_bridge_state* (%struct.drm_bridge*)*, void (%struct.drm_bridge*, %struct.drm_bridge_state*)*, i32* (%struct.drm_bridge*, %struct.drm_bridge_state*, %struct.drm_crtc_state*, %struct.drm_connector_state*, i32*)*, i32* (%struct.drm_bridge*, %struct.drm_bridge_state*, %struct.drm_crtc_state*, %struct.drm_connector_state*, i32, i32*)*, i32 (%struct.drm_bridge*, %struct.drm_bridge_state*, %struct.drm_crtc_state*, %struct.drm_connector_state*)*, %struct.drm_bridge_state* (%struct.drm_bridge*)*, i32 (%struct.drm_bridge*)*, i32 (%struct.drm_bridge*, %struct.drm_connector*)*, %struct.edid* (%struct.drm_bridge*, %struct.drm_connector*)*, void (%struct.drm_bridge*, i32)*, void (%struct.drm_bridge*)*, void (%struct.drm_bridge*)* }
%struct.drm_bridge_state = type { %struct.drm_private_state, %struct.drm_bridge*, %struct.drm_bus_cfg, %struct.drm_bus_cfg }
%struct.drm_bus_cfg = type { i32, i32 }
%struct.edid = type { [8 x i8], [2 x i8], [2 x i8], i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.est_timings, [8 x %struct.std_timing], [4 x %struct.detailed_timing], i8, i8 }
%struct.est_timings = type { i8, i8, i8 }
%struct.std_timing = type { i8, i8 }
%struct.detailed_timing = type { i16, %union.anon.69 }
%union.anon.69 = type { %struct.detailed_pixel_timing }
%struct.detailed_pixel_timing = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.drm_color_lut = type { i16, i16, i16, i16 }

@.str = private unnamed_addr constant [36 x i8] c"drivers/gpu/drm/drm_atomic_helper.c\00", align 1
@.str.1 = private unnamed_addr constant [27 x i8] c"[CRTC:%d:%s] mode changed\0A\00", align 1
@.str.2 = private unnamed_addr constant [29 x i8] c"[CRTC:%d:%s] enable changed\0A\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"[CRTC:%d:%s] active changed\0A\00", align 1
@.str.4 = private unnamed_addr constant [42 x i8] c"[CRTC:%d:%s] enabled/connectors mismatch\0A\00", align 1
@.str.5 = private unnamed_addr constant [59 x i8] c"[CRTC:%d:%s] needs all connectors, enable: %c, active: %c\0A\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"Cannot update plane of a disabled CRTC.\0A\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"Invalid scaling of plane\0A\00", align 1
@.str.8 = private unnamed_addr constant [6 x i8] c"src: \00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"dst: \00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"Plane must cover entire CRTC\0A\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"clip: \00", align 1
@.str.12 = private unnamed_addr constant [42 x i8] c"[PLANE:%d:%s] atomic driver check failed\0A\00", align 1
@.str.13 = private unnamed_addr constant [41 x i8] c"[CRTC:%d:%s] atomic driver check failed\0A\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"enabling [CRTC:%d:%s]\0A\00", align 1
@.str.15 = private unnamed_addr constant [26 x i8] c"enabling [ENCODER:%d:%s]\0A\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"[CRTC:%d:%s] vblank wait timed out\0A\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"[CRTC:%d:%s] flip_done timed out\0A\00", align 1
@system_unbound_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.18 = private unnamed_addr constant [32 x i8] c"[CRTC:%d:%s] hw_done timed out\0A\00", align 1
@.str.19 = private unnamed_addr constant [37 x i8] c"[CONNECTOR:%d:%s] hw_done timed out\0A\00", align 1
@.str.20 = private unnamed_addr constant [39 x i8] c"[CONNECTOR:%d:%s] flip_done timed out\0A\00", align 1
@.str.21 = private unnamed_addr constant [33 x i8] c"[PLANE:%d:%s] hw_done timed out\0A\00", align 1
@.str.22 = private unnamed_addr constant [35 x i8] c"[PLANE:%d:%s] flip_done timed out\0A\00", align 1
@.str.23 = private unnamed_addr constant [51 x i8] c"Disabling all crtc's during unload failed with %i\0A\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"[ENCODER:%d:%s] on [CONNECTOR:%d:%s] already assigned\0A\00", align 1
@.str.25 = private unnamed_addr constant [61 x i8] c"[ENCODER:%d:%s] in use on [CRTC:%d:%s] by [CONNECTOR:%d:%s]\0A\00", align 1
@.str.26 = private unnamed_addr constant [69 x i8] c"[ENCODER:%d:%s] in use on [CRTC:%d:%s], disabling [CONNECTOR:%d:%s]\0A\00", align 1
@.str.27 = private unnamed_addr constant [40 x i8] c"Updating routing for [CONNECTOR:%d:%s]\0A\00", align 1
@.str.28 = private unnamed_addr constant [29 x i8] c"Disabling [CONNECTOR:%d:%s]\0A\00", align 1
@.str.29 = private unnamed_addr constant [37 x i8] c"[CONNECTOR:%d:%s] is not registered\0A\00", align 1
@.str.30 = private unnamed_addr constant [49 x i8] c"No suitable encoder found for [CONNECTOR:%d:%s]\0A\00", align 1
@.str.31 = private unnamed_addr constant [48 x i8] c"[ENCODER:%d:%s] incompatible with [CRTC:%d:%s]\0A\00", align 1
@.str.32 = private unnamed_addr constant [62 x i8] c"[CONNECTOR:%d:%s] keeps [ENCODER:%d:%s], now on [CRTC:%d:%s]\0A\00", align 1
@.str.33 = private unnamed_addr constant [57 x i8] c"[CONNECTOR:%d:%s] using [ENCODER:%d:%s] on [CRTC:%d:%s]\0A\00", align 1
@.str.34 = private unnamed_addr constant [53 x i8] c"[ENCODER:%d:%s] in use on [CRTC:%d:%s], stealing it\0A\00", align 1
@.str.35 = private unnamed_addr constant [37 x i8] c"[ENCODER:%d:%s] mode_valid() failed\0A\00", align 1
@.str.36 = private unnamed_addr constant [30 x i8] c"[BRIDGE] mode_valid() failed\0A\00", align 1
@.str.37 = private unnamed_addr constant [34 x i8] c"[CRTC:%d:%s] mode_valid() failed\0A\00", align 1
@.str.38 = private unnamed_addr constant [28 x i8] c"Bridge atomic check failed\0A\00", align 1
@.str.39 = private unnamed_addr constant [30 x i8] c"[ENCODER:%d:%s] check failed\0A\00", align 1
@.str.40 = private unnamed_addr constant [30 x i8] c"[ENCODER:%d:%s] fixup failed\0A\00", align 1
@.str.41 = private unnamed_addr constant [27 x i8] c"[CRTC:%d:%s] fixup failed\0A\00", align 1
@.str.42 = private unnamed_addr constant [27 x i8] c"disabling [ENCODER:%d:%s]\0A\00", align 1
@.str.43 = private unnamed_addr constant [24 x i8] c"disabling [CRTC:%d:%s]\0A\00", align 1
@disable_outputs.__warned = internal global i8 0, section ".data.once", align 1, !dbg !0
@.str.44 = private unnamed_addr constant [45 x i8] c"driver forgot to call drm_crtc_vblank_off()\0A\00", align 1
@.str.45 = private unnamed_addr constant [25 x i8] c"modeset on [CRTC:%d:%s]\0A\00", align 1
@.str.46 = private unnamed_addr constant [28 x i8] c"modeset on [ENCODER:%d:%s]\0A\00", align 1
@.str.47 = private unnamed_addr constant [22 x i8] c"include/linux/ktime.h\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.48 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6147
@.str.49 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@.str.50 = private unnamed_addr constant [37 x i8] c"[CRTC:%d:%s] cleanup_done timed out\0A\00", align 1
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@.str.51 = private unnamed_addr constant [32 x i8] c"include/drm/drm_atomic_helper.h\00", align 1
@.str.52 = private unnamed_addr constant [46 x i8] c"[CRTC:%d:%s] disabled, rejecting legacy flip\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_check_modeset(%struct.drm_device* %dev, %struct.drm_atomic_state* %state) #0 !dbg !6156 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %old_connector_state = alloca %struct.drm_connector_state*, align 8
  %new_connector_state = alloca %struct.drm_connector_state*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %connectors_mask = alloca i32, align 4
  %has_connectors = alloca i8, align 1
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %funcs = alloca %struct.drm_connector_helper_funcs*, align 8
  %__ret_warn_on124 = alloca i32, align 4
  %tmp150 = alloca i64, align 8
  %funcs280 = alloca %struct.drm_connector_helper_funcs*, align 8
  %encoder = alloca %struct.drm_encoder*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !6157, metadata !DIExpression()), !dbg !6158
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !6159, metadata !DIExpression()), !dbg !6160
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !6161, metadata !DIExpression()), !dbg !6162
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !6163, metadata !DIExpression()), !dbg !6164
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !6165, metadata !DIExpression()), !dbg !6166
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !6167, metadata !DIExpression()), !dbg !6168
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_connector_state, metadata !6169, metadata !DIExpression()), !dbg !6170
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_connector_state, metadata !6171, metadata !DIExpression()), !dbg !6172
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6173, metadata !DIExpression()), !dbg !6174
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6175, metadata !DIExpression()), !dbg !6176
  call void @llvm.dbg.declare(metadata i32* %connectors_mask, metadata !6177, metadata !DIExpression()), !dbg !6178
  store i32 0, i32* %connectors_mask, align 4, !dbg !6178
  store i32 0, i32* %i, align 4, !dbg !6179
  br label %for.cond, !dbg !6179

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6181
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6181
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !6181
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !6181
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !6181
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !6181
  %3 = load i32, i32* %num_crtc, align 8, !dbg !6181
  %cmp = icmp slt i32 %0, %3, !dbg !6181
  br i1 %cmp, label %for.body, label %for.end, !dbg !6179

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6183
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !6183
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !6183
  %6 = load i32, i32* %i, align 4, !dbg !6183
  %idxprom = sext i32 %6 to i64, !dbg !6183
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !6183
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !6183
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !6183
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !6183
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !6183

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6183
  %crtcs2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !6183
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs2, align 8, !dbg !6183
  %10 = load i32, i32* %i, align 4, !dbg !6183
  %idxprom3 = sext i32 %10 to i64, !dbg !6183
  %arrayidx4 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom3, !dbg !6183
  %ptr5 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx4, i32 0, i32 0, !dbg !6183
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr5, align 8, !dbg !6183
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !6183
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6183
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6183
  %crtcs6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !6183
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs6, align 8, !dbg !6183
  %15 = load i32, i32* %i, align 4, !dbg !6183
  %idxprom7 = sext i32 %15 to i64, !dbg !6183
  %arrayidx8 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom7, !dbg !6183
  %old_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx8, i32 0, i32 2, !dbg !6183
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state, align 8, !dbg !6183
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !6183
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !6183
  %18 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6183
  %crtcs9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %18, i32 0, i32 4, !dbg !6183
  %19 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs9, align 8, !dbg !6183
  %20 = load i32, i32* %i, align 4, !dbg !6183
  %idxprom10 = sext i32 %20 to i64, !dbg !6183
  %arrayidx11 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %19, i64 %idxprom10, !dbg !6183
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx11, i32 0, i32 3, !dbg !6183
  %21 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !6183
  store %struct.drm_crtc_state* %21, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6183
  br i1 true, label %if.else, label %if.then, !dbg !6181

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end96, !dbg !6185

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8* %has_connectors, metadata !6187, metadata !DIExpression()), !dbg !6189
  %22 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6190
  %connector_mask = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %22, i32 0, i32 5, !dbg !6191
  %23 = load i32, i32* %connector_mask, align 8, !dbg !6191
  %tobool12 = icmp ne i32 %23, 0, !dbg !6192
  %lnot = xor i1 %tobool12, true, !dbg !6192
  %lnot13 = xor i1 %lnot, true, !dbg !6193
  %frombool = zext i1 %lnot13 to i8, !dbg !6189
  store i8 %frombool, i8* %has_connectors, align 1, !dbg !6189
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6194, metadata !DIExpression()), !dbg !6196
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6196
  %mutex = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %24, i32 0, i32 4, !dbg !6196
  %call = call zeroext i1 @drm_modeset_is_locked(%struct.drm_modeset_lock* %mutex) #9, !dbg !6196
  %lnot14 = xor i1 %call, true, !dbg !6196
  %lnot15 = xor i1 %lnot14, true, !dbg !6196
  %lnot16 = xor i1 %lnot15, true, !dbg !6196
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !6196
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6196
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !6197
  %tobool17 = icmp ne i32 %25, 0, !dbg !6197
  %lnot18 = xor i1 %tobool17, true, !dbg !6197
  %lnot20 = xor i1 %lnot18, true, !dbg !6197
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !6197
  %conv = sext i32 %lnot.ext21 to i64, !dbg !6197
  %tobool22 = icmp ne i64 %conv, 0, !dbg !6197
  br i1 %tobool22, label %if.then23, label %if.end, !dbg !6196

if.then23:                                        ; preds = %if.else
  br label %do.body, !dbg !6197

do.body:                                          ; preds = %if.then23
  br label %do.body24, !dbg !6199

do.body24:                                        ; preds = %do.body
  br label %do.end, !dbg !6201

do.end:                                           ; preds = %do.body24
  br label %do.body25, !dbg !6199

do.body25:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 619, i32 2305, i64 12) #8, !dbg !6203, !srcloc !6205
  br label %do.end26, !dbg !6203

do.end26:                                         ; preds = %do.body25
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 272) #8, !dbg !6206, !srcloc !6208
  br label %do.body27, !dbg !6199

do.body27:                                        ; preds = %do.end26
  br label %do.end28, !dbg !6209

do.end28:                                         ; preds = %do.body27
  br label %do.end29, !dbg !6199

do.end29:                                         ; preds = %do.end28
  br label %if.end, !dbg !6199

if.end:                                           ; preds = %do.end29, %if.else
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !6196
  %tobool30 = icmp ne i32 %26, 0, !dbg !6196
  %lnot31 = xor i1 %tobool30, true, !dbg !6196
  %lnot33 = xor i1 %lnot31, true, !dbg !6196
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !6196
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !6196
  store i64 %conv35, i64* %tmp, align 8, !dbg !6197
  %27 = load i64, i64* %tmp, align 8, !dbg !6196
  %28 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !6211
  %mode = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %28, i32 0, i32 8, !dbg !6213
  %29 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6214
  %mode36 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %29, i32 0, i32 8, !dbg !6215
  %call37 = call zeroext i1 @drm_mode_equal(%struct.drm_display_mode* %mode, %struct.drm_display_mode* %mode36) #9, !dbg !6216
  br i1 %call37, label %if.end39, label %if.then38, !dbg !6217

if.then38:                                        ; preds = %if.end
  %30 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6218
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %30, i32 0, i32 5, !dbg !6218
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !6218
  %31 = load i32, i32* %id, align 8, !dbg !6218
  %32 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6218
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %32, i32 0, i32 3, !dbg !6218
  %33 = load i8*, i8** %name, align 8, !dbg !6218
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i32 %31, i8* %33) #9, !dbg !6218
  %34 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6220
  %mode_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %34, i32 0, i32 3, !dbg !6221
  %bf.load = load i8, i8* %mode_changed, align 2, !dbg !6222
  %bf.clear = and i8 %bf.load, -3, !dbg !6222
  %bf.set = or i8 %bf.clear, 2, !dbg !6222
  store i8 %bf.set, i8* %mode_changed, align 2, !dbg !6222
  br label %if.end39, !dbg !6223

if.end39:                                         ; preds = %if.then38, %if.end
  %35 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !6224
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %35, i32 0, i32 1, !dbg !6226
  %36 = load i8, i8* %enable, align 8, !dbg !6226
  %tobool40 = trunc i8 %36 to i1, !dbg !6226
  %conv41 = zext i1 %tobool40 to i32, !dbg !6224
  %37 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6227
  %enable42 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %37, i32 0, i32 1, !dbg !6228
  %38 = load i8, i8* %enable42, align 8, !dbg !6228
  %tobool43 = trunc i8 %38 to i1, !dbg !6228
  %conv44 = zext i1 %tobool43 to i32, !dbg !6227
  %cmp45 = icmp ne i32 %conv41, %conv44, !dbg !6229
  br i1 %cmp45, label %if.then47, label %if.end58, !dbg !6230

if.then47:                                        ; preds = %if.end39
  %39 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6231
  %base48 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %39, i32 0, i32 5, !dbg !6231
  %id49 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base48, i32 0, i32 0, !dbg !6231
  %40 = load i32, i32* %id49, align 8, !dbg !6231
  %41 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6231
  %name50 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %41, i32 0, i32 3, !dbg !6231
  %42 = load i8*, i8** %name50, align 8, !dbg !6231
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.2, i64 0, i64 0), i32 %40, i8* %42) #9, !dbg !6231
  %43 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6233
  %mode_changed51 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %43, i32 0, i32 3, !dbg !6234
  %bf.load52 = load i8, i8* %mode_changed51, align 2, !dbg !6235
  %bf.clear53 = and i8 %bf.load52, -3, !dbg !6235
  %bf.set54 = or i8 %bf.clear53, 2, !dbg !6235
  store i8 %bf.set54, i8* %mode_changed51, align 2, !dbg !6235
  %44 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6236
  %connectors_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %44, i32 0, i32 3, !dbg !6237
  %bf.load55 = load i8, i8* %connectors_changed, align 2, !dbg !6238
  %bf.clear56 = and i8 %bf.load55, -9, !dbg !6238
  %bf.set57 = or i8 %bf.clear56, 8, !dbg !6238
  store i8 %bf.set57, i8* %connectors_changed, align 2, !dbg !6238
  br label %if.end58, !dbg !6239

if.end58:                                         ; preds = %if.then47, %if.end39
  %45 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !6240
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %45, i32 0, i32 2, !dbg !6242
  %46 = load i8, i8* %active, align 1, !dbg !6242
  %tobool59 = trunc i8 %46 to i1, !dbg !6242
  %conv60 = zext i1 %tobool59 to i32, !dbg !6240
  %47 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6243
  %active61 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %47, i32 0, i32 2, !dbg !6244
  %48 = load i8, i8* %active61, align 1, !dbg !6244
  %tobool62 = trunc i8 %48 to i1, !dbg !6244
  %conv63 = zext i1 %tobool62 to i32, !dbg !6243
  %cmp64 = icmp ne i32 %conv60, %conv63, !dbg !6245
  br i1 %cmp64, label %if.then66, label %if.end73, !dbg !6246

if.then66:                                        ; preds = %if.end58
  %49 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6247
  %base67 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %49, i32 0, i32 5, !dbg !6247
  %id68 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base67, i32 0, i32 0, !dbg !6247
  %50 = load i32, i32* %id68, align 8, !dbg !6247
  %51 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6247
  %name69 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %51, i32 0, i32 3, !dbg !6247
  %52 = load i8*, i8** %name69, align 8, !dbg !6247
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 %50, i8* %52) #9, !dbg !6247
  %53 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6249
  %active_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %53, i32 0, i32 3, !dbg !6250
  %bf.load70 = load i8, i8* %active_changed, align 2, !dbg !6251
  %bf.clear71 = and i8 %bf.load70, -5, !dbg !6251
  %bf.set72 = or i8 %bf.clear71, 4, !dbg !6251
  store i8 %bf.set72, i8* %active_changed, align 2, !dbg !6251
  br label %if.end73, !dbg !6252

if.end73:                                         ; preds = %if.then66, %if.end58
  %54 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6253
  %enable74 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %54, i32 0, i32 1, !dbg !6255
  %55 = load i8, i8* %enable74, align 8, !dbg !6255
  %tobool75 = trunc i8 %55 to i1, !dbg !6255
  %conv76 = zext i1 %tobool75 to i32, !dbg !6253
  %56 = load i8, i8* %has_connectors, align 1, !dbg !6256
  %tobool77 = trunc i8 %56 to i1, !dbg !6256
  %conv78 = zext i1 %tobool77 to i32, !dbg !6256
  %cmp79 = icmp ne i32 %conv76, %conv78, !dbg !6257
  br i1 %cmp79, label %if.then81, label %if.end85, !dbg !6258

if.then81:                                        ; preds = %if.end73
  %57 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6259
  %base82 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %57, i32 0, i32 5, !dbg !6259
  %id83 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base82, i32 0, i32 0, !dbg !6259
  %58 = load i32, i32* %id83, align 8, !dbg !6259
  %59 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6259
  %name84 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %59, i32 0, i32 3, !dbg !6259
  %60 = load i8*, i8** %name84, align 8, !dbg !6259
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i32 %58, i8* %60) #9, !dbg !6259
  store i32 -22, i32* %retval, align 4, !dbg !6261
  br label %return, !dbg !6261

if.end85:                                         ; preds = %if.end73
  %61 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !6262
  %call86 = call zeroext i1 @drm_dev_has_vblank(%struct.drm_device* %61) #9, !dbg !6264
  br i1 %call86, label %if.then87, label %if.else90, !dbg !6265

if.then87:                                        ; preds = %if.end85
  %62 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6266
  %no_vblank = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %62, i32 0, i32 3, !dbg !6267
  %bf.load88 = load i8, i8* %no_vblank, align 2, !dbg !6268
  %bf.clear89 = and i8 %bf.load88, -65, !dbg !6268
  store i8 %bf.clear89, i8* %no_vblank, align 2, !dbg !6268
  br label %if.end95, !dbg !6266

if.else90:                                        ; preds = %if.end85
  %63 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6269
  %no_vblank91 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %63, i32 0, i32 3, !dbg !6270
  %bf.load92 = load i8, i8* %no_vblank91, align 2, !dbg !6271
  %bf.clear93 = and i8 %bf.load92, -65, !dbg !6271
  %bf.set94 = or i8 %bf.clear93, 64, !dbg !6271
  store i8 %bf.set94, i8* %no_vblank91, align 2, !dbg !6271
  br label %if.end95

if.end95:                                         ; preds = %if.else90, %if.then87
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then
  br label %for.inc, !dbg !6183

for.inc:                                          ; preds = %if.end96
  %64 = load i32, i32* %i, align 4, !dbg !6181
  %inc = add i32 %64, 1, !dbg !6181
  store i32 %inc, i32* %i, align 4, !dbg !6181
  br label %for.cond, !dbg !6181, !llvm.loop !6272

for.end:                                          ; preds = %for.cond
  %65 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6274
  %call97 = call i32 @handle_conflicting_encoders(%struct.drm_atomic_state* %65, i1 zeroext false) #9, !dbg !6275
  store i32 %call97, i32* %ret, align 4, !dbg !6276
  %66 = load i32, i32* %ret, align 4, !dbg !6277
  %tobool98 = icmp ne i32 %66, 0, !dbg !6277
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !6279

if.then99:                                        ; preds = %for.end
  %67 = load i32, i32* %ret, align 4, !dbg !6280
  store i32 %67, i32* %retval, align 4, !dbg !6281
  br label %return, !dbg !6281

if.end100:                                        ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !6282
  br label %for.cond101, !dbg !6282

for.cond101:                                      ; preds = %for.inc198, %if.end100
  %68 = load i32, i32* %i, align 4, !dbg !6284
  %69 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6284
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %69, i32 0, i32 5, !dbg !6284
  %70 = load i32, i32* %num_connector, align 8, !dbg !6284
  %cmp102 = icmp slt i32 %68, %70, !dbg !6284
  br i1 %cmp102, label %for.body104, label %for.end200, !dbg !6282

for.body104:                                      ; preds = %for.cond101
  %71 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6286
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %71, i32 0, i32 6, !dbg !6286
  %72 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !6286
  %73 = load i32, i32* %i, align 4, !dbg !6286
  %idxprom105 = sext i32 %73 to i64, !dbg !6286
  %arrayidx106 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %72, i64 %idxprom105, !dbg !6286
  %ptr107 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx106, i32 0, i32 0, !dbg !6286
  %74 = load %struct.drm_connector*, %struct.drm_connector** %ptr107, align 8, !dbg !6286
  %tobool108 = icmp ne %struct.drm_connector* %74, null, !dbg !6286
  br i1 %tobool108, label %land.lhs.true109, label %if.then122, !dbg !6286

land.lhs.true109:                                 ; preds = %for.body104
  %75 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6286
  %connectors110 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %75, i32 0, i32 6, !dbg !6286
  %76 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors110, align 8, !dbg !6286
  %77 = load i32, i32* %i, align 4, !dbg !6286
  %idxprom111 = sext i32 %77 to i64, !dbg !6286
  %arrayidx112 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %76, i64 %idxprom111, !dbg !6286
  %ptr113 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx112, i32 0, i32 0, !dbg !6286
  %78 = load %struct.drm_connector*, %struct.drm_connector** %ptr113, align 8, !dbg !6286
  store %struct.drm_connector* %78, %struct.drm_connector** %connector, align 8, !dbg !6286
  %79 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6286
  %80 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6286
  %connectors114 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %80, i32 0, i32 6, !dbg !6286
  %81 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors114, align 8, !dbg !6286
  %82 = load i32, i32* %i, align 4, !dbg !6286
  %idxprom115 = sext i32 %82 to i64, !dbg !6286
  %arrayidx116 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %81, i64 %idxprom115, !dbg !6286
  %old_state117 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx116, i32 0, i32 2, !dbg !6286
  %83 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state117, align 8, !dbg !6286
  store %struct.drm_connector_state* %83, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6286
  %84 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6286
  %connectors118 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %84, i32 0, i32 6, !dbg !6286
  %85 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors118, align 8, !dbg !6286
  %86 = load i32, i32* %i, align 4, !dbg !6286
  %idxprom119 = sext i32 %86 to i64, !dbg !6286
  %arrayidx120 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %85, i64 %idxprom119, !dbg !6286
  %new_state121 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx120, i32 0, i32 3, !dbg !6286
  %87 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state121, align 8, !dbg !6286
  store %struct.drm_connector_state* %87, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !6286
  br i1 true, label %if.else123, label %if.then122, !dbg !6284

if.then122:                                       ; preds = %land.lhs.true109, %for.body104
  br label %if.end197, !dbg !6288

if.else123:                                       ; preds = %land.lhs.true109
  call void @llvm.dbg.declare(metadata %struct.drm_connector_helper_funcs** %funcs, metadata !6290, metadata !DIExpression()), !dbg !6292
  %88 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6293
  %helper_private = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %88, i32 0, i32 29, !dbg !6294
  %89 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %helper_private, align 8, !dbg !6294
  store %struct.drm_connector_helper_funcs* %89, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6292
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on124, metadata !6295, metadata !DIExpression()), !dbg !6297
  %90 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !6297
  %mode_config125 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %90, i32 0, i32 35, !dbg !6297
  %connection_mutex = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config125, i32 0, i32 1, !dbg !6297
  %call126 = call zeroext i1 @drm_modeset_is_locked(%struct.drm_modeset_lock* %connection_mutex) #9, !dbg !6297
  %lnot127 = xor i1 %call126, true, !dbg !6297
  %lnot129 = xor i1 %lnot127, true, !dbg !6297
  %lnot131 = xor i1 %lnot129, true, !dbg !6297
  %lnot.ext132 = zext i1 %lnot131 to i32, !dbg !6297
  store i32 %lnot.ext132, i32* %__ret_warn_on124, align 4, !dbg !6297
  %91 = load i32, i32* %__ret_warn_on124, align 4, !dbg !6298
  %tobool133 = icmp ne i32 %91, 0, !dbg !6298
  %lnot134 = xor i1 %tobool133, true, !dbg !6298
  %lnot136 = xor i1 %lnot134, true, !dbg !6298
  %lnot.ext137 = zext i1 %lnot136 to i32, !dbg !6298
  %conv138 = sext i32 %lnot.ext137 to i64, !dbg !6298
  %tobool139 = icmp ne i64 %conv138, 0, !dbg !6298
  br i1 %tobool139, label %if.then140, label %if.end149, !dbg !6297

if.then140:                                       ; preds = %if.else123
  br label %do.body141, !dbg !6298

do.body141:                                       ; preds = %if.then140
  br label %do.body142, !dbg !6300

do.body142:                                       ; preds = %do.body141
  br label %do.end143, !dbg !6302

do.end143:                                        ; preds = %do.body142
  br label %do.body144, !dbg !6300

do.body144:                                       ; preds = %do.end143
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 669, i32 2305, i64 12) #8, !dbg !6304, !srcloc !6306
  br label %do.end145, !dbg !6304

do.end145:                                        ; preds = %do.body144
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 273) #8, !dbg !6307, !srcloc !6309
  br label %do.body146, !dbg !6300

do.body146:                                       ; preds = %do.end145
  br label %do.end147, !dbg !6310

do.end147:                                        ; preds = %do.body146
  br label %do.end148, !dbg !6300

do.end148:                                        ; preds = %do.end147
  br label %if.end149, !dbg !6300

if.end149:                                        ; preds = %do.end148, %if.else123
  %92 = load i32, i32* %__ret_warn_on124, align 4, !dbg !6297
  %tobool151 = icmp ne i32 %92, 0, !dbg !6297
  %lnot152 = xor i1 %tobool151, true, !dbg !6297
  %lnot154 = xor i1 %lnot152, true, !dbg !6297
  %lnot.ext155 = zext i1 %lnot154 to i32, !dbg !6297
  %conv156 = sext i32 %lnot.ext155 to i64, !dbg !6297
  store i64 %conv156, i64* %tmp150, align 8, !dbg !6298
  %93 = load i64, i64* %tmp150, align 8, !dbg !6297
  %94 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6312
  %95 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6313
  %96 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6314
  %97 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !6315
  %call157 = call i32 @update_connector_routing(%struct.drm_atomic_state* %94, %struct.drm_connector* %95, %struct.drm_connector_state* %96, %struct.drm_connector_state* %97) #9, !dbg !6316
  store i32 %call157, i32* %ret, align 4, !dbg !6317
  %98 = load i32, i32* %ret, align 4, !dbg !6318
  %tobool158 = icmp ne i32 %98, 0, !dbg !6318
  br i1 %tobool158, label %if.then159, label %if.end160, !dbg !6320

if.then159:                                       ; preds = %if.end149
  %99 = load i32, i32* %ret, align 4, !dbg !6321
  store i32 %99, i32* %retval, align 4, !dbg !6322
  br label %return, !dbg !6322

if.end160:                                        ; preds = %if.end149
  %100 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6323
  %crtc161 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %100, i32 0, i32 1, !dbg !6325
  %101 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc161, align 8, !dbg !6325
  %tobool162 = icmp ne %struct.drm_crtc* %101, null, !dbg !6323
  br i1 %tobool162, label %if.then163, label %if.end186, !dbg !6326

if.then163:                                       ; preds = %if.end160
  %102 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6327
  %103 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6329
  %crtc164 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %103, i32 0, i32 1, !dbg !6330
  %104 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc164, align 8, !dbg !6330
  %call165 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %102, %struct.drm_crtc* %104) #9, !dbg !6331
  store %struct.drm_crtc_state* %call165, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6332
  %105 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6333
  %link_status = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %105, i32 0, i32 3, !dbg !6335
  %106 = load i32, i32* %link_status, align 8, !dbg !6335
  %107 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !6336
  %link_status166 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %107, i32 0, i32 3, !dbg !6337
  %108 = load i32, i32* %link_status166, align 8, !dbg !6337
  %cmp167 = icmp ne i32 %106, %108, !dbg !6338
  br i1 %cmp167, label %if.then169, label %if.end174, !dbg !6339

if.then169:                                       ; preds = %if.then163
  %109 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6340
  %connectors_changed170 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %109, i32 0, i32 3, !dbg !6341
  %bf.load171 = load i8, i8* %connectors_changed170, align 2, !dbg !6342
  %bf.clear172 = and i8 %bf.load171, -9, !dbg !6342
  %bf.set173 = or i8 %bf.clear172, 8, !dbg !6342
  store i8 %bf.set173, i8* %connectors_changed170, align 2, !dbg !6342
  br label %if.end174, !dbg !6340

if.end174:                                        ; preds = %if.then169, %if.then163
  %110 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6343
  %max_requested_bpc = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %110, i32 0, i32 15, !dbg !6345
  %111 = load i8, i8* %max_requested_bpc, align 8, !dbg !6345
  %conv175 = zext i8 %111 to i32, !dbg !6343
  %112 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !6346
  %max_requested_bpc176 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %112, i32 0, i32 15, !dbg !6347
  %113 = load i8, i8* %max_requested_bpc176, align 8, !dbg !6347
  %conv177 = zext i8 %113 to i32, !dbg !6346
  %cmp178 = icmp ne i32 %conv175, %conv177, !dbg !6348
  br i1 %cmp178, label %if.then180, label %if.end185, !dbg !6349

if.then180:                                       ; preds = %if.end174
  %114 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6350
  %connectors_changed181 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %114, i32 0, i32 3, !dbg !6351
  %bf.load182 = load i8, i8* %connectors_changed181, align 2, !dbg !6352
  %bf.clear183 = and i8 %bf.load182, -9, !dbg !6352
  %bf.set184 = or i8 %bf.clear183, 8, !dbg !6352
  store i8 %bf.set184, i8* %connectors_changed181, align 2, !dbg !6352
  br label %if.end185, !dbg !6350

if.end185:                                        ; preds = %if.then180, %if.end174
  br label %if.end186, !dbg !6353

if.end186:                                        ; preds = %if.end185, %if.end160
  %115 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6354
  %atomic_check = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %115, i32 0, i32 6, !dbg !6356
  %116 = load i32 (%struct.drm_connector*, %struct.drm_atomic_state*)*, i32 (%struct.drm_connector*, %struct.drm_atomic_state*)** %atomic_check, align 8, !dbg !6356
  %tobool187 = icmp ne i32 (%struct.drm_connector*, %struct.drm_atomic_state*)* %116, null, !dbg !6354
  br i1 %tobool187, label %if.then188, label %if.end191, !dbg !6357

if.then188:                                       ; preds = %if.end186
  %117 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6358
  %atomic_check189 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %117, i32 0, i32 6, !dbg !6359
  %118 = load i32 (%struct.drm_connector*, %struct.drm_atomic_state*)*, i32 (%struct.drm_connector*, %struct.drm_atomic_state*)** %atomic_check189, align 8, !dbg !6359
  %119 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6360
  %120 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6361
  %call190 = call i32 %118(%struct.drm_connector* %119, %struct.drm_atomic_state* %120) #9, !dbg !6358
  store i32 %call190, i32* %ret, align 4, !dbg !6362
  br label %if.end191, !dbg !6363

if.end191:                                        ; preds = %if.then188, %if.end186
  %121 = load i32, i32* %ret, align 4, !dbg !6364
  %tobool192 = icmp ne i32 %121, 0, !dbg !6364
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !6366

if.then193:                                       ; preds = %if.end191
  %122 = load i32, i32* %ret, align 4, !dbg !6367
  store i32 %122, i32* %retval, align 4, !dbg !6368
  br label %return, !dbg !6368

if.end194:                                        ; preds = %if.end191
  %123 = load i32, i32* %i, align 4, !dbg !6369
  %sh_prom = zext i32 %123 to i64, !dbg !6369
  %shl = shl i64 1, %sh_prom, !dbg !6369
  %124 = load i32, i32* %connectors_mask, align 4, !dbg !6370
  %conv195 = zext i32 %124 to i64, !dbg !6370
  %or = or i64 %conv195, %shl, !dbg !6370
  %conv196 = trunc i64 %or to i32, !dbg !6370
  store i32 %conv196, i32* %connectors_mask, align 4, !dbg !6370
  br label %if.end197

if.end197:                                        ; preds = %if.end194, %if.then122
  br label %for.inc198, !dbg !6286

for.inc198:                                       ; preds = %if.end197
  %125 = load i32, i32* %i, align 4, !dbg !6284
  %inc199 = add i32 %125, 1, !dbg !6284
  store i32 %inc199, i32* %i, align 4, !dbg !6284
  br label %for.cond101, !dbg !6284, !llvm.loop !6371

for.end200:                                       ; preds = %for.cond101
  store i32 0, i32* %i, align 4, !dbg !6373
  br label %for.cond201, !dbg !6373

for.cond201:                                      ; preds = %for.inc252, %for.end200
  %126 = load i32, i32* %i, align 4, !dbg !6375
  %127 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6375
  %dev202 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %127, i32 0, i32 1, !dbg !6375
  %128 = load %struct.drm_device*, %struct.drm_device** %dev202, align 8, !dbg !6375
  %mode_config203 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %128, i32 0, i32 35, !dbg !6375
  %num_crtc204 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config203, i32 0, i32 19, !dbg !6375
  %129 = load i32, i32* %num_crtc204, align 8, !dbg !6375
  %cmp205 = icmp slt i32 %126, %129, !dbg !6375
  br i1 %cmp205, label %for.body207, label %for.end254, !dbg !6373

for.body207:                                      ; preds = %for.cond201
  %130 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6377
  %crtcs208 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %130, i32 0, i32 4, !dbg !6377
  %131 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs208, align 8, !dbg !6377
  %132 = load i32, i32* %i, align 4, !dbg !6377
  %idxprom209 = sext i32 %132 to i64, !dbg !6377
  %arrayidx210 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %131, i64 %idxprom209, !dbg !6377
  %ptr211 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx210, i32 0, i32 0, !dbg !6377
  %133 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr211, align 8, !dbg !6377
  %tobool212 = icmp ne %struct.drm_crtc* %133, null, !dbg !6377
  br i1 %tobool212, label %land.lhs.true213, label %if.then226, !dbg !6377

land.lhs.true213:                                 ; preds = %for.body207
  %134 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6377
  %crtcs214 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %134, i32 0, i32 4, !dbg !6377
  %135 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs214, align 8, !dbg !6377
  %136 = load i32, i32* %i, align 4, !dbg !6377
  %idxprom215 = sext i32 %136 to i64, !dbg !6377
  %arrayidx216 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %135, i64 %idxprom215, !dbg !6377
  %ptr217 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx216, i32 0, i32 0, !dbg !6377
  %137 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr217, align 8, !dbg !6377
  store %struct.drm_crtc* %137, %struct.drm_crtc** %crtc, align 8, !dbg !6377
  %138 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6377
  %139 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6377
  %crtcs218 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %139, i32 0, i32 4, !dbg !6377
  %140 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs218, align 8, !dbg !6377
  %141 = load i32, i32* %i, align 4, !dbg !6377
  %idxprom219 = sext i32 %141 to i64, !dbg !6377
  %arrayidx220 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %140, i64 %idxprom219, !dbg !6377
  %old_state221 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx220, i32 0, i32 2, !dbg !6377
  %142 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state221, align 8, !dbg !6377
  store %struct.drm_crtc_state* %142, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !6377
  %143 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !6377
  %144 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6377
  %crtcs222 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %144, i32 0, i32 4, !dbg !6377
  %145 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs222, align 8, !dbg !6377
  %146 = load i32, i32* %i, align 4, !dbg !6377
  %idxprom223 = sext i32 %146 to i64, !dbg !6377
  %arrayidx224 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %145, i64 %idxprom223, !dbg !6377
  %new_state225 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx224, i32 0, i32 3, !dbg !6377
  %147 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state225, align 8, !dbg !6377
  store %struct.drm_crtc_state* %147, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6377
  br i1 true, label %if.else227, label %if.then226, !dbg !6375

if.then226:                                       ; preds = %land.lhs.true213, %for.body207
  br label %if.end251, !dbg !6379

if.else227:                                       ; preds = %land.lhs.true213
  %148 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6381
  %call228 = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %148) #9, !dbg !6384
  br i1 %call228, label %if.end230, label %if.then229, !dbg !6385

if.then229:                                       ; preds = %if.else227
  br label %for.inc252, !dbg !6386

if.end230:                                        ; preds = %if.else227
  %149 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6387
  %base231 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %149, i32 0, i32 5, !dbg !6387
  %id232 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base231, i32 0, i32 0, !dbg !6387
  %150 = load i32, i32* %id232, align 8, !dbg !6387
  %151 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6387
  %name233 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %151, i32 0, i32 3, !dbg !6387
  %152 = load i8*, i8** %name233, align 8, !dbg !6387
  %153 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6387
  %enable234 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %153, i32 0, i32 1, !dbg !6387
  %154 = load i8, i8* %enable234, align 8, !dbg !6387
  %tobool235 = trunc i8 %154 to i1, !dbg !6387
  %155 = zext i1 %tobool235 to i64, !dbg !6387
  %cond = select i1 %tobool235, i32 121, i32 110, !dbg !6387
  %156 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6387
  %active237 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %156, i32 0, i32 2, !dbg !6387
  %157 = load i8, i8* %active237, align 1, !dbg !6387
  %tobool238 = trunc i8 %157 to i1, !dbg !6387
  %158 = zext i1 %tobool238 to i64, !dbg !6387
  %cond240 = select i1 %tobool238, i32 121, i32 110, !dbg !6387
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.5, i64 0, i64 0), i32 %150, i8* %152, i32 %cond, i32 %cond240) #9, !dbg !6387
  %159 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6388
  %160 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6389
  %call241 = call i32 @drm_atomic_add_affected_connectors(%struct.drm_atomic_state* %159, %struct.drm_crtc* %160) #9, !dbg !6390
  store i32 %call241, i32* %ret, align 4, !dbg !6391
  %161 = load i32, i32* %ret, align 4, !dbg !6392
  %cmp242 = icmp ne i32 %161, 0, !dbg !6394
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !6395

if.then244:                                       ; preds = %if.end230
  %162 = load i32, i32* %ret, align 4, !dbg !6396
  store i32 %162, i32* %retval, align 4, !dbg !6397
  br label %return, !dbg !6397

if.end245:                                        ; preds = %if.end230
  %163 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6398
  %164 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6399
  %call246 = call i32 @drm_atomic_add_affected_planes(%struct.drm_atomic_state* %163, %struct.drm_crtc* %164) #9, !dbg !6400
  store i32 %call246, i32* %ret, align 4, !dbg !6401
  %165 = load i32, i32* %ret, align 4, !dbg !6402
  %cmp247 = icmp ne i32 %165, 0, !dbg !6404
  br i1 %cmp247, label %if.then249, label %if.end250, !dbg !6405

if.then249:                                       ; preds = %if.end245
  %166 = load i32, i32* %ret, align 4, !dbg !6406
  store i32 %166, i32* %retval, align 4, !dbg !6407
  br label %return, !dbg !6407

if.end250:                                        ; preds = %if.end245
  br label %if.end251

if.end251:                                        ; preds = %if.end250, %if.then226
  br label %for.inc252, !dbg !6377

for.inc252:                                       ; preds = %if.end251, %if.then229
  %167 = load i32, i32* %i, align 4, !dbg !6375
  %inc253 = add i32 %167, 1, !dbg !6375
  store i32 %inc253, i32* %i, align 4, !dbg !6375
  br label %for.cond201, !dbg !6375, !llvm.loop !6408

for.end254:                                       ; preds = %for.cond201
  store i32 0, i32* %i, align 4, !dbg !6410
  br label %for.cond255, !dbg !6410

for.cond255:                                      ; preds = %for.inc298, %for.end254
  %168 = load i32, i32* %i, align 4, !dbg !6412
  %169 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6412
  %num_connector256 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %169, i32 0, i32 5, !dbg !6412
  %170 = load i32, i32* %num_connector256, align 8, !dbg !6412
  %cmp257 = icmp slt i32 %168, %170, !dbg !6412
  br i1 %cmp257, label %for.body259, label %for.end300, !dbg !6410

for.body259:                                      ; preds = %for.cond255
  %171 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6414
  %connectors260 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %171, i32 0, i32 6, !dbg !6414
  %172 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors260, align 8, !dbg !6414
  %173 = load i32, i32* %i, align 4, !dbg !6414
  %idxprom261 = sext i32 %173 to i64, !dbg !6414
  %arrayidx262 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %172, i64 %idxprom261, !dbg !6414
  %ptr263 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx262, i32 0, i32 0, !dbg !6414
  %174 = load %struct.drm_connector*, %struct.drm_connector** %ptr263, align 8, !dbg !6414
  %tobool264 = icmp ne %struct.drm_connector* %174, null, !dbg !6414
  br i1 %tobool264, label %land.lhs.true265, label %if.then278, !dbg !6414

land.lhs.true265:                                 ; preds = %for.body259
  %175 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6414
  %connectors266 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %175, i32 0, i32 6, !dbg !6414
  %176 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors266, align 8, !dbg !6414
  %177 = load i32, i32* %i, align 4, !dbg !6414
  %idxprom267 = sext i32 %177 to i64, !dbg !6414
  %arrayidx268 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %176, i64 %idxprom267, !dbg !6414
  %ptr269 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx268, i32 0, i32 0, !dbg !6414
  %178 = load %struct.drm_connector*, %struct.drm_connector** %ptr269, align 8, !dbg !6414
  store %struct.drm_connector* %178, %struct.drm_connector** %connector, align 8, !dbg !6414
  %179 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6414
  %180 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6414
  %connectors270 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %180, i32 0, i32 6, !dbg !6414
  %181 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors270, align 8, !dbg !6414
  %182 = load i32, i32* %i, align 4, !dbg !6414
  %idxprom271 = sext i32 %182 to i64, !dbg !6414
  %arrayidx272 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %181, i64 %idxprom271, !dbg !6414
  %old_state273 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx272, i32 0, i32 2, !dbg !6414
  %183 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state273, align 8, !dbg !6414
  store %struct.drm_connector_state* %183, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6414
  %184 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6414
  %connectors274 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %184, i32 0, i32 6, !dbg !6414
  %185 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors274, align 8, !dbg !6414
  %186 = load i32, i32* %i, align 4, !dbg !6414
  %idxprom275 = sext i32 %186 to i64, !dbg !6414
  %arrayidx276 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %185, i64 %idxprom275, !dbg !6414
  %new_state277 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx276, i32 0, i32 3, !dbg !6414
  %187 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state277, align 8, !dbg !6414
  store %struct.drm_connector_state* %187, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !6414
  br i1 true, label %if.else279, label %if.then278, !dbg !6412

if.then278:                                       ; preds = %land.lhs.true265, %for.body259
  br label %if.end297, !dbg !6416

if.else279:                                       ; preds = %land.lhs.true265
  call void @llvm.dbg.declare(metadata %struct.drm_connector_helper_funcs** %funcs280, metadata !6418, metadata !DIExpression()), !dbg !6420
  %188 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6421
  %helper_private281 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %188, i32 0, i32 29, !dbg !6422
  %189 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %helper_private281, align 8, !dbg !6422
  store %struct.drm_connector_helper_funcs* %189, %struct.drm_connector_helper_funcs** %funcs280, align 8, !dbg !6420
  %190 = load i32, i32* %connectors_mask, align 4, !dbg !6423
  %conv282 = zext i32 %190 to i64, !dbg !6423
  %191 = load i32, i32* %i, align 4, !dbg !6425
  %sh_prom283 = zext i32 %191 to i64, !dbg !6425
  %shl284 = shl i64 1, %sh_prom283, !dbg !6425
  %and = and i64 %conv282, %shl284, !dbg !6426
  %tobool285 = icmp ne i64 %and, 0, !dbg !6426
  br i1 %tobool285, label %if.then286, label %if.end287, !dbg !6427

if.then286:                                       ; preds = %if.else279
  br label %for.inc298, !dbg !6428

if.end287:                                        ; preds = %if.else279
  %192 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs280, align 8, !dbg !6429
  %atomic_check288 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %192, i32 0, i32 6, !dbg !6431
  %193 = load i32 (%struct.drm_connector*, %struct.drm_atomic_state*)*, i32 (%struct.drm_connector*, %struct.drm_atomic_state*)** %atomic_check288, align 8, !dbg !6431
  %tobool289 = icmp ne i32 (%struct.drm_connector*, %struct.drm_atomic_state*)* %193, null, !dbg !6429
  br i1 %tobool289, label %if.then290, label %if.end293, !dbg !6432

if.then290:                                       ; preds = %if.end287
  %194 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs280, align 8, !dbg !6433
  %atomic_check291 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %194, i32 0, i32 6, !dbg !6434
  %195 = load i32 (%struct.drm_connector*, %struct.drm_atomic_state*)*, i32 (%struct.drm_connector*, %struct.drm_atomic_state*)** %atomic_check291, align 8, !dbg !6434
  %196 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6435
  %197 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6436
  %call292 = call i32 %195(%struct.drm_connector* %196, %struct.drm_atomic_state* %197) #9, !dbg !6433
  store i32 %call292, i32* %ret, align 4, !dbg !6437
  br label %if.end293, !dbg !6438

if.end293:                                        ; preds = %if.then290, %if.end287
  %198 = load i32, i32* %ret, align 4, !dbg !6439
  %tobool294 = icmp ne i32 %198, 0, !dbg !6439
  br i1 %tobool294, label %if.then295, label %if.end296, !dbg !6441

if.then295:                                       ; preds = %if.end293
  %199 = load i32, i32* %ret, align 4, !dbg !6442
  store i32 %199, i32* %retval, align 4, !dbg !6443
  br label %return, !dbg !6443

if.end296:                                        ; preds = %if.end293
  br label %if.end297

if.end297:                                        ; preds = %if.end296, %if.then278
  br label %for.inc298, !dbg !6414

for.inc298:                                       ; preds = %if.end297, %if.then286
  %200 = load i32, i32* %i, align 4, !dbg !6412
  %inc299 = add i32 %200, 1, !dbg !6412
  store i32 %inc299, i32* %i, align 4, !dbg !6412
  br label %for.cond255, !dbg !6412, !llvm.loop !6444

for.end300:                                       ; preds = %for.cond255
  store i32 0, i32* %i, align 4, !dbg !6446
  br label %for.cond301, !dbg !6446

for.cond301:                                      ; preds = %for.inc336, %for.end300
  %201 = load i32, i32* %i, align 4, !dbg !6448
  %202 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6448
  %num_connector302 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %202, i32 0, i32 5, !dbg !6448
  %203 = load i32, i32* %num_connector302, align 8, !dbg !6448
  %cmp303 = icmp slt i32 %201, %203, !dbg !6448
  br i1 %cmp303, label %for.body305, label %for.end338, !dbg !6446

for.body305:                                      ; preds = %for.cond301
  %204 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6450
  %connectors306 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %204, i32 0, i32 6, !dbg !6450
  %205 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors306, align 8, !dbg !6450
  %206 = load i32, i32* %i, align 4, !dbg !6450
  %idxprom307 = sext i32 %206 to i64, !dbg !6450
  %arrayidx308 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %205, i64 %idxprom307, !dbg !6450
  %ptr309 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx308, i32 0, i32 0, !dbg !6450
  %207 = load %struct.drm_connector*, %struct.drm_connector** %ptr309, align 8, !dbg !6450
  %tobool310 = icmp ne %struct.drm_connector* %207, null, !dbg !6450
  br i1 %tobool310, label %land.lhs.true311, label %if.then324, !dbg !6450

land.lhs.true311:                                 ; preds = %for.body305
  %208 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6450
  %connectors312 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %208, i32 0, i32 6, !dbg !6450
  %209 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors312, align 8, !dbg !6450
  %210 = load i32, i32* %i, align 4, !dbg !6450
  %idxprom313 = sext i32 %210 to i64, !dbg !6450
  %arrayidx314 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %209, i64 %idxprom313, !dbg !6450
  %ptr315 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx314, i32 0, i32 0, !dbg !6450
  %211 = load %struct.drm_connector*, %struct.drm_connector** %ptr315, align 8, !dbg !6450
  store %struct.drm_connector* %211, %struct.drm_connector** %connector, align 8, !dbg !6450
  %212 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6450
  %213 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6450
  %connectors316 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %213, i32 0, i32 6, !dbg !6450
  %214 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors316, align 8, !dbg !6450
  %215 = load i32, i32* %i, align 4, !dbg !6450
  %idxprom317 = sext i32 %215 to i64, !dbg !6450
  %arrayidx318 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %214, i64 %idxprom317, !dbg !6450
  %old_state319 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx318, i32 0, i32 2, !dbg !6450
  %216 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state319, align 8, !dbg !6450
  store %struct.drm_connector_state* %216, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6450
  %217 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6450
  %connectors320 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %217, i32 0, i32 6, !dbg !6450
  %218 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors320, align 8, !dbg !6450
  %219 = load i32, i32* %i, align 4, !dbg !6450
  %idxprom321 = sext i32 %219 to i64, !dbg !6450
  %arrayidx322 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %218, i64 %idxprom321, !dbg !6450
  %new_state323 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx322, i32 0, i32 3, !dbg !6450
  %220 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state323, align 8, !dbg !6450
  store %struct.drm_connector_state* %220, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !6450
  br i1 true, label %if.else325, label %if.then324, !dbg !6448

if.then324:                                       ; preds = %land.lhs.true311, %for.body305
  br label %if.end335, !dbg !6452

if.else325:                                       ; preds = %land.lhs.true311
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder, metadata !6454, metadata !DIExpression()), !dbg !6456
  %221 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !6457
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %221, i32 0, i32 2, !dbg !6458
  %222 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !6458
  store %struct.drm_encoder* %222, %struct.drm_encoder** %encoder, align 8, !dbg !6459
  %223 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6460
  %224 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6461
  %call326 = call i32 @drm_atomic_add_encoder_bridges(%struct.drm_atomic_state* %223, %struct.drm_encoder* %224) #9, !dbg !6462
  store i32 %call326, i32* %ret, align 4, !dbg !6463
  %225 = load i32, i32* %ret, align 4, !dbg !6464
  %tobool327 = icmp ne i32 %225, 0, !dbg !6464
  br i1 %tobool327, label %if.then328, label %if.end329, !dbg !6466

if.then328:                                       ; preds = %if.else325
  %226 = load i32, i32* %ret, align 4, !dbg !6467
  store i32 %226, i32* %retval, align 4, !dbg !6468
  br label %return, !dbg !6468

if.end329:                                        ; preds = %if.else325
  %227 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !6469
  %best_encoder330 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %227, i32 0, i32 2, !dbg !6470
  %228 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder330, align 8, !dbg !6470
  store %struct.drm_encoder* %228, %struct.drm_encoder** %encoder, align 8, !dbg !6471
  %229 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6472
  %230 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6473
  %call331 = call i32 @drm_atomic_add_encoder_bridges(%struct.drm_atomic_state* %229, %struct.drm_encoder* %230) #9, !dbg !6474
  store i32 %call331, i32* %ret, align 4, !dbg !6475
  %231 = load i32, i32* %ret, align 4, !dbg !6476
  %tobool332 = icmp ne i32 %231, 0, !dbg !6476
  br i1 %tobool332, label %if.then333, label %if.end334, !dbg !6478

if.then333:                                       ; preds = %if.end329
  %232 = load i32, i32* %ret, align 4, !dbg !6479
  store i32 %232, i32* %retval, align 4, !dbg !6480
  br label %return, !dbg !6480

if.end334:                                        ; preds = %if.end329
  br label %if.end335

if.end335:                                        ; preds = %if.end334, %if.then324
  br label %for.inc336, !dbg !6450

for.inc336:                                       ; preds = %if.end335
  %233 = load i32, i32* %i, align 4, !dbg !6448
  %inc337 = add i32 %233, 1, !dbg !6448
  store i32 %inc337, i32* %i, align 4, !dbg !6448
  br label %for.cond301, !dbg !6448, !llvm.loop !6481

for.end338:                                       ; preds = %for.cond301
  %234 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6483
  %call339 = call i32 @mode_valid(%struct.drm_atomic_state* %234) #9, !dbg !6484
  store i32 %call339, i32* %ret, align 4, !dbg !6485
  %235 = load i32, i32* %ret, align 4, !dbg !6486
  %tobool340 = icmp ne i32 %235, 0, !dbg !6486
  br i1 %tobool340, label %if.then341, label %if.end342, !dbg !6488

if.then341:                                       ; preds = %for.end338
  %236 = load i32, i32* %ret, align 4, !dbg !6489
  store i32 %236, i32* %retval, align 4, !dbg !6490
  br label %return, !dbg !6490

if.end342:                                        ; preds = %for.end338
  %237 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6491
  %call343 = call i32 @mode_fixup(%struct.drm_atomic_state* %237) #9, !dbg !6492
  store i32 %call343, i32* %retval, align 4, !dbg !6493
  br label %return, !dbg !6493

return:                                           ; preds = %if.end342, %if.then341, %if.then333, %if.then328, %if.then295, %if.then249, %if.then244, %if.then193, %if.then159, %if.then99, %if.then81
  %238 = load i32, i32* %retval, align 4, !dbg !6494
  ret i32 %238, !dbg !6494
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_modeset_is_locked(%struct.drm_modeset_lock* %lock) #0 !dbg !6495 {
entry:
  %lock.addr = alloca %struct.drm_modeset_lock*, align 8
  store %struct.drm_modeset_lock* %lock, %struct.drm_modeset_lock** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_lock** %lock.addr, metadata !6498, metadata !DIExpression()), !dbg !6499
  %0 = load %struct.drm_modeset_lock*, %struct.drm_modeset_lock** %lock.addr, align 8, !dbg !6500
  %mutex = getelementptr inbounds %struct.drm_modeset_lock, %struct.drm_modeset_lock* %0, i32 0, i32 0, !dbg !6501
  %call = call zeroext i1 @ww_mutex_is_locked(%struct.ww_mutex* %mutex) #9, !dbg !6502
  ret i1 %call, !dbg !6503
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @drm_mode_equal(%struct.drm_display_mode*, %struct.drm_display_mode*) #2

; Function Attrs: noredzone
declare dso_local void @__drm_dbg(i32, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @drm_dev_has_vblank(%struct.drm_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @handle_conflicting_encoders(%struct.drm_atomic_state* %state, i1 zeroext %disable_conflicting_encoders) #0 !dbg !6504 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %disable_conflicting_encoders.addr = alloca i8, align 1
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %conn_iter = alloca %struct.drm_connector_list_iter, align 8
  %encoder = alloca %struct.drm_encoder*, align 8
  %encoder_mask = alloca i32, align 4
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %funcs = alloca %struct.drm_connector_helper_funcs*, align 8
  %new_encoder = alloca %struct.drm_encoder*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !6507, metadata !DIExpression()), !dbg !6508
  %frombool = zext i1 %disable_conflicting_encoders to i8
  store i8 %frombool, i8* %disable_conflicting_encoders.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %disable_conflicting_encoders.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !6511, metadata !DIExpression()), !dbg !6512
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !6513, metadata !DIExpression()), !dbg !6514
  call void @llvm.dbg.declare(metadata %struct.drm_connector_list_iter* %conn_iter, metadata !6515, metadata !DIExpression()), !dbg !6520
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder, metadata !6521, metadata !DIExpression()), !dbg !6522
  call void @llvm.dbg.declare(metadata i32* %encoder_mask, metadata !6523, metadata !DIExpression()), !dbg !6524
  store i32 0, i32* %encoder_mask, align 4, !dbg !6524
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6525, metadata !DIExpression()), !dbg !6526
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6527, metadata !DIExpression()), !dbg !6528
  store i32 0, i32* %ret, align 4, !dbg !6528
  store i32 0, i32* %i, align 4, !dbg !6529
  br label %for.cond, !dbg !6529

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6531
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6531
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 5, !dbg !6531
  %2 = load i32, i32* %num_connector, align 8, !dbg !6531
  %cmp = icmp slt i32 %0, %2, !dbg !6531
  br i1 %cmp, label %for.body, label %for.end, !dbg !6529

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6533
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 6, !dbg !6533
  %4 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !6533
  %5 = load i32, i32* %i, align 4, !dbg !6533
  %idxprom = sext i32 %5 to i64, !dbg !6533
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %4, i64 %idxprom, !dbg !6533
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !6533
  %6 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !6533
  %tobool = icmp ne %struct.drm_connector* %6, null, !dbg !6533
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !6533

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6533
  %connectors1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 6, !dbg !6533
  %8 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors1, align 8, !dbg !6533
  %9 = load i32, i32* %i, align 4, !dbg !6533
  %idxprom2 = sext i32 %9 to i64, !dbg !6533
  %arrayidx3 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %8, i64 %idxprom2, !dbg !6533
  %ptr4 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx3, i32 0, i32 0, !dbg !6533
  %10 = load %struct.drm_connector*, %struct.drm_connector** %ptr4, align 8, !dbg !6533
  store %struct.drm_connector* %10, %struct.drm_connector** %connector, align 8, !dbg !6533
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6533
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6533
  %connectors5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 6, !dbg !6533
  %13 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors5, align 8, !dbg !6533
  %14 = load i32, i32* %i, align 4, !dbg !6533
  %idxprom6 = sext i32 %14 to i64, !dbg !6533
  %arrayidx7 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %13, i64 %idxprom6, !dbg !6533
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx7, i32 0, i32 3, !dbg !6533
  %15 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !6533
  store %struct.drm_connector_state* %15, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6533
  %16 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6533
  br i1 true, label %if.else, label %if.then, !dbg !6531

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end33, !dbg !6535

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_connector_helper_funcs** %funcs, metadata !6537, metadata !DIExpression()), !dbg !6539
  %17 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6540
  %helper_private = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %17, i32 0, i32 29, !dbg !6541
  %18 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %helper_private, align 8, !dbg !6541
  store %struct.drm_connector_helper_funcs* %18, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6539
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %new_encoder, metadata !6542, metadata !DIExpression()), !dbg !6543
  %19 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6544
  %crtc = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %19, i32 0, i32 1, !dbg !6546
  %20 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6546
  %tobool8 = icmp ne %struct.drm_crtc* %20, null, !dbg !6544
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !6547

if.then9:                                         ; preds = %if.else
  br label %for.inc, !dbg !6548

if.end:                                           ; preds = %if.else
  %21 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6549
  %atomic_best_encoder = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %21, i32 0, i32 5, !dbg !6551
  %22 = load %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)*, %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)** %atomic_best_encoder, align 8, !dbg !6551
  %tobool10 = icmp ne %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)* %22, null, !dbg !6549
  br i1 %tobool10, label %if.then11, label %if.else13, !dbg !6552

if.then11:                                        ; preds = %if.end
  %23 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6553
  %atomic_best_encoder12 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %23, i32 0, i32 5, !dbg !6554
  %24 = load %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)*, %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)** %atomic_best_encoder12, align 8, !dbg !6554
  %25 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6555
  %26 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6556
  %call = call %struct.drm_encoder* %24(%struct.drm_connector* %25, %struct.drm_connector_state* %26) #9, !dbg !6553
  store %struct.drm_encoder* %call, %struct.drm_encoder** %new_encoder, align 8, !dbg !6557
  br label %if.end21, !dbg !6558

if.else13:                                        ; preds = %if.end
  %27 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6559
  %best_encoder = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %27, i32 0, i32 4, !dbg !6561
  %28 = load %struct.drm_encoder* (%struct.drm_connector*)*, %struct.drm_encoder* (%struct.drm_connector*)** %best_encoder, align 8, !dbg !6561
  %tobool14 = icmp ne %struct.drm_encoder* (%struct.drm_connector*)* %28, null, !dbg !6559
  br i1 %tobool14, label %if.then15, label %if.else18, !dbg !6562

if.then15:                                        ; preds = %if.else13
  %29 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6563
  %best_encoder16 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %29, i32 0, i32 4, !dbg !6564
  %30 = load %struct.drm_encoder* (%struct.drm_connector*)*, %struct.drm_encoder* (%struct.drm_connector*)** %best_encoder16, align 8, !dbg !6564
  %31 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6565
  %call17 = call %struct.drm_encoder* %30(%struct.drm_connector* %31) #9, !dbg !6563
  store %struct.drm_encoder* %call17, %struct.drm_encoder** %new_encoder, align 8, !dbg !6566
  br label %if.end20, !dbg !6567

if.else18:                                        ; preds = %if.else13
  %32 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6568
  %call19 = call %struct.drm_encoder* @drm_connector_get_single_encoder(%struct.drm_connector* %32) #9, !dbg !6569
  store %struct.drm_encoder* %call19, %struct.drm_encoder** %new_encoder, align 8, !dbg !6570
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then15
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then11
  %33 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6571
  %tobool22 = icmp ne %struct.drm_encoder* %33, null, !dbg !6571
  br i1 %tobool22, label %if.then23, label %if.end32, !dbg !6573

if.then23:                                        ; preds = %if.end21
  %34 = load i32, i32* %encoder_mask, align 4, !dbg !6574
  %35 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6577
  %call24 = call i32 @drm_encoder_mask(%struct.drm_encoder* %35) #9, !dbg !6578
  %and = and i32 %34, %call24, !dbg !6579
  %tobool25 = icmp ne i32 %and, 0, !dbg !6579
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !6580

if.then26:                                        ; preds = %if.then23
  %36 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6581
  %base = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %36, i32 0, i32 2, !dbg !6581
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !6581
  %37 = load i32, i32* %id, align 8, !dbg !6581
  %38 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6581
  %name = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %38, i32 0, i32 3, !dbg !6581
  %39 = load i8*, i8** %name, align 8, !dbg !6581
  %40 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6581
  %base27 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %40, i32 0, i32 4, !dbg !6581
  %id28 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base27, i32 0, i32 0, !dbg !6581
  %41 = load i32, i32* %id28, align 8, !dbg !6581
  %42 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6581
  %name29 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %42, i32 0, i32 5, !dbg !6581
  %43 = load i8*, i8** %name29, align 8, !dbg !6581
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 %37, i8* %39, i32 %41, i8* %43) #9, !dbg !6581
  store i32 -22, i32* %retval, align 4, !dbg !6583
  br label %return, !dbg !6583

if.end30:                                         ; preds = %if.then23
  %44 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6584
  %call31 = call i32 @drm_encoder_mask(%struct.drm_encoder* %44) #9, !dbg !6585
  %45 = load i32, i32* %encoder_mask, align 4, !dbg !6586
  %or = or i32 %45, %call31, !dbg !6586
  store i32 %or, i32* %encoder_mask, align 4, !dbg !6586
  br label %if.end32, !dbg !6587

if.end32:                                         ; preds = %if.end30, %if.end21
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then
  br label %for.inc, !dbg !6533

for.inc:                                          ; preds = %if.end33, %if.then9
  %46 = load i32, i32* %i, align 4, !dbg !6531
  %inc = add i32 %46, 1, !dbg !6531
  store i32 %inc, i32* %i, align 4, !dbg !6531
  br label %for.cond, !dbg !6531, !llvm.loop !6588

for.end:                                          ; preds = %for.cond
  %47 = load i32, i32* %encoder_mask, align 4, !dbg !6590
  %tobool34 = icmp ne i32 %47, 0, !dbg !6590
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !6592

if.then35:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !6593
  br label %return, !dbg !6593

if.end36:                                         ; preds = %for.end
  %48 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6594
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %48, i32 0, i32 1, !dbg !6595
  %49 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !6595
  call void @drm_connector_list_iter_begin(%struct.drm_device* %49, %struct.drm_connector_list_iter* %conn_iter) #9, !dbg !6596
  br label %while.cond, !dbg !6597

while.cond:                                       ; preds = %if.end96, %if.then49, %if.then41, %if.end36
  %call37 = call %struct.drm_connector* @drm_connector_list_iter_next(%struct.drm_connector_list_iter* %conn_iter) #9, !dbg !6597
  store %struct.drm_connector* %call37, %struct.drm_connector** %connector, align 8, !dbg !6597
  %tobool38 = icmp ne %struct.drm_connector* %call37, null, !dbg !6597
  br i1 %tobool38, label %while.body, label %while.end, !dbg !6597

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !6598, metadata !DIExpression()), !dbg !6600
  %50 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6601
  %51 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6603
  %call39 = call %struct.drm_connector_state* @drm_atomic_get_new_connector_state(%struct.drm_atomic_state* %50, %struct.drm_connector* %51) #9, !dbg !6604
  %tobool40 = icmp ne %struct.drm_connector_state* %call39, null, !dbg !6604
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !6605

if.then41:                                        ; preds = %while.body
  br label %while.cond, !dbg !6606, !llvm.loop !6607

if.end42:                                         ; preds = %while.body
  %52 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6609
  %state43 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %52, i32 0, i32 46, !dbg !6610
  %53 = load %struct.drm_connector_state*, %struct.drm_connector_state** %state43, align 8, !dbg !6610
  %best_encoder44 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %53, i32 0, i32 2, !dbg !6611
  %54 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder44, align 8, !dbg !6611
  store %struct.drm_encoder* %54, %struct.drm_encoder** %encoder, align 8, !dbg !6612
  %55 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6613
  %tobool45 = icmp ne %struct.drm_encoder* %55, null, !dbg !6613
  br i1 %tobool45, label %lor.lhs.false, label %if.then49, !dbg !6615

lor.lhs.false:                                    ; preds = %if.end42
  %56 = load i32, i32* %encoder_mask, align 4, !dbg !6616
  %57 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6617
  %call46 = call i32 @drm_encoder_mask(%struct.drm_encoder* %57) #9, !dbg !6618
  %and47 = and i32 %56, %call46, !dbg !6619
  %tobool48 = icmp ne i32 %and47, 0, !dbg !6619
  br i1 %tobool48, label %if.end50, label %if.then49, !dbg !6620

if.then49:                                        ; preds = %lor.lhs.false, %if.end42
  br label %while.cond, !dbg !6621, !llvm.loop !6607

if.end50:                                         ; preds = %lor.lhs.false
  %58 = load i8, i8* %disable_conflicting_encoders.addr, align 1, !dbg !6622
  %tobool51 = trunc i8 %58 to i1, !dbg !6622
  br i1 %tobool51, label %if.end66, label %if.then52, !dbg !6624

if.then52:                                        ; preds = %if.end50
  %59 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6625
  %base53 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %59, i32 0, i32 2, !dbg !6625
  %id54 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base53, i32 0, i32 0, !dbg !6625
  %60 = load i32, i32* %id54, align 8, !dbg !6625
  %61 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6625
  %name55 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %61, i32 0, i32 3, !dbg !6625
  %62 = load i8*, i8** %name55, align 8, !dbg !6625
  %63 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6625
  %state56 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %63, i32 0, i32 46, !dbg !6625
  %64 = load %struct.drm_connector_state*, %struct.drm_connector_state** %state56, align 8, !dbg !6625
  %crtc57 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %64, i32 0, i32 1, !dbg !6625
  %65 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc57, align 8, !dbg !6625
  %base58 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %65, i32 0, i32 5, !dbg !6625
  %id59 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base58, i32 0, i32 0, !dbg !6625
  %66 = load i32, i32* %id59, align 8, !dbg !6625
  %67 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6625
  %state60 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %67, i32 0, i32 46, !dbg !6625
  %68 = load %struct.drm_connector_state*, %struct.drm_connector_state** %state60, align 8, !dbg !6625
  %crtc61 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %68, i32 0, i32 1, !dbg !6625
  %69 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc61, align 8, !dbg !6625
  %name62 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %69, i32 0, i32 3, !dbg !6625
  %70 = load i8*, i8** %name62, align 8, !dbg !6625
  %71 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6625
  %base63 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %71, i32 0, i32 4, !dbg !6625
  %id64 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base63, i32 0, i32 0, !dbg !6625
  %72 = load i32, i32* %id64, align 8, !dbg !6625
  %73 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6625
  %name65 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %73, i32 0, i32 5, !dbg !6625
  %74 = load i8*, i8** %name65, align 8, !dbg !6625
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.25, i64 0, i64 0), i32 %60, i8* %62, i32 %66, i8* %70, i32 %72, i8* %74) #9, !dbg !6625
  store i32 -22, i32* %ret, align 4, !dbg !6627
  br label %out, !dbg !6628

if.end66:                                         ; preds = %if.end50
  %75 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6629
  %76 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6630
  %call67 = call %struct.drm_connector_state* @drm_atomic_get_connector_state(%struct.drm_atomic_state* %75, %struct.drm_connector* %76) #9, !dbg !6631
  store %struct.drm_connector_state* %call67, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6632
  %77 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6633
  %78 = bitcast %struct.drm_connector_state* %77 to i8*, !dbg !6633
  %call68 = call zeroext i1 @IS_ERR(i8* %78) #9, !dbg !6635
  br i1 %call68, label %if.then69, label %if.end71, !dbg !6636

if.then69:                                        ; preds = %if.end66
  %79 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6637
  %80 = bitcast %struct.drm_connector_state* %79 to i8*, !dbg !6637
  %call70 = call i64 @PTR_ERR(i8* %80) #9, !dbg !6639
  %conv = trunc i64 %call70 to i32, !dbg !6639
  store i32 %conv, i32* %ret, align 4, !dbg !6640
  br label %out, !dbg !6641

if.end71:                                         ; preds = %if.end66
  %81 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6642
  %base72 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %81, i32 0, i32 2, !dbg !6642
  %id73 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base72, i32 0, i32 0, !dbg !6642
  %82 = load i32, i32* %id73, align 8, !dbg !6642
  %83 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6642
  %name74 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %83, i32 0, i32 3, !dbg !6642
  %84 = load i8*, i8** %name74, align 8, !dbg !6642
  %85 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6642
  %crtc75 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %85, i32 0, i32 1, !dbg !6642
  %86 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc75, align 8, !dbg !6642
  %base76 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %86, i32 0, i32 5, !dbg !6642
  %id77 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base76, i32 0, i32 0, !dbg !6642
  %87 = load i32, i32* %id77, align 8, !dbg !6642
  %88 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6642
  %crtc78 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %88, i32 0, i32 1, !dbg !6642
  %89 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc78, align 8, !dbg !6642
  %name79 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %89, i32 0, i32 3, !dbg !6642
  %90 = load i8*, i8** %name79, align 8, !dbg !6642
  %91 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6642
  %base80 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %91, i32 0, i32 4, !dbg !6642
  %id81 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base80, i32 0, i32 0, !dbg !6642
  %92 = load i32, i32* %id81, align 8, !dbg !6642
  %93 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6642
  %name82 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %93, i32 0, i32 5, !dbg !6642
  %94 = load i8*, i8** %name82, align 8, !dbg !6642
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.26, i64 0, i64 0), i32 %82, i8* %84, i32 %87, i8* %90, i32 %92, i8* %94) #9, !dbg !6642
  %95 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6643
  %96 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6644
  %crtc83 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %96, i32 0, i32 1, !dbg !6645
  %97 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc83, align 8, !dbg !6645
  %call84 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %95, %struct.drm_crtc* %97) #9, !dbg !6646
  store %struct.drm_crtc_state* %call84, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6647
  %98 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6648
  %call85 = call i32 @drm_atomic_set_crtc_for_connector(%struct.drm_connector_state* %98, %struct.drm_crtc* null) #9, !dbg !6649
  store i32 %call85, i32* %ret, align 4, !dbg !6650
  %99 = load i32, i32* %ret, align 4, !dbg !6651
  %tobool86 = icmp ne i32 %99, 0, !dbg !6651
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !6653

if.then87:                                        ; preds = %if.end71
  br label %out, !dbg !6654

if.end88:                                         ; preds = %if.end71
  %100 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6655
  %connector_mask = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %100, i32 0, i32 5, !dbg !6657
  %101 = load i32, i32* %connector_mask, align 8, !dbg !6657
  %tobool89 = icmp ne i32 %101, 0, !dbg !6655
  br i1 %tobool89, label %if.end96, label %if.then90, !dbg !6658

if.then90:                                        ; preds = %if.end88
  %102 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6659
  %call91 = call i32 @drm_atomic_set_mode_prop_for_crtc(%struct.drm_crtc_state* %102, %struct.drm_property_blob* null) #9, !dbg !6661
  store i32 %call91, i32* %ret, align 4, !dbg !6662
  %103 = load i32, i32* %ret, align 4, !dbg !6663
  %cmp92 = icmp slt i32 %103, 0, !dbg !6665
  br i1 %cmp92, label %if.then94, label %if.end95, !dbg !6666

if.then94:                                        ; preds = %if.then90
  br label %out, !dbg !6667

if.end95:                                         ; preds = %if.then90
  %104 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6668
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %104, i32 0, i32 2, !dbg !6669
  store i8 0, i8* %active, align 1, !dbg !6670
  br label %if.end96, !dbg !6671

if.end96:                                         ; preds = %if.end95, %if.end88
  br label %while.cond, !dbg !6597, !llvm.loop !6607

while.end:                                        ; preds = %while.cond
  br label %out, !dbg !6597

out:                                              ; preds = %while.end, %if.then94, %if.then87, %if.then69, %if.then52
  call void @llvm.dbg.label(metadata !6672), !dbg !6673
  call void @drm_connector_list_iter_end(%struct.drm_connector_list_iter* %conn_iter) #9, !dbg !6674
  %105 = load i32, i32* %ret, align 4, !dbg !6675
  store i32 %105, i32* %retval, align 4, !dbg !6676
  br label %return, !dbg !6676

return:                                           ; preds = %out, %if.then35, %if.then26
  %106 = load i32, i32* %retval, align 4, !dbg !6677
  ret i32 %106, !dbg !6677
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @update_connector_routing(%struct.drm_atomic_state* %state, %struct.drm_connector* %connector, %struct.drm_connector_state* %old_connector_state, %struct.drm_connector_state* %new_connector_state) #0 !dbg !6678 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %old_connector_state.addr = alloca %struct.drm_connector_state*, align 8
  %new_connector_state.addr = alloca %struct.drm_connector_state*, align 8
  %funcs = alloca %struct.drm_connector_helper_funcs*, align 8
  %new_encoder = alloca %struct.drm_encoder*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !6681, metadata !DIExpression()), !dbg !6682
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !6683, metadata !DIExpression()), !dbg !6684
  store %struct.drm_connector_state* %old_connector_state, %struct.drm_connector_state** %old_connector_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_connector_state.addr, metadata !6685, metadata !DIExpression()), !dbg !6686
  store %struct.drm_connector_state* %new_connector_state, %struct.drm_connector_state** %new_connector_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_connector_state.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  call void @llvm.dbg.declare(metadata %struct.drm_connector_helper_funcs** %funcs, metadata !6689, metadata !DIExpression()), !dbg !6690
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %new_encoder, metadata !6691, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !6693, metadata !DIExpression()), !dbg !6694
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6695
  %base = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 4, !dbg !6695
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !6695
  %1 = load i32, i32* %id, align 8, !dbg !6695
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6695
  %name = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 5, !dbg !6695
  %3 = load i8*, i8** %name, align 8, !dbg !6695
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.27, i64 0, i64 0), i32 %1, i8* %3) #9, !dbg !6695
  %4 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state.addr, align 8, !dbg !6696
  %crtc = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %4, i32 0, i32 1, !dbg !6698
  %5 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6698
  %6 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6699
  %crtc1 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %6, i32 0, i32 1, !dbg !6700
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc1, align 8, !dbg !6700
  %cmp = icmp ne %struct.drm_crtc* %5, %7, !dbg !6701
  br i1 %cmp, label %if.then, label %if.end15, !dbg !6702

if.then:                                          ; preds = %entry
  %8 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state.addr, align 8, !dbg !6703
  %crtc2 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %8, i32 0, i32 1, !dbg !6706
  %9 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc2, align 8, !dbg !6706
  %tobool = icmp ne %struct.drm_crtc* %9, null, !dbg !6703
  br i1 %tobool, label %if.then3, label %if.end, !dbg !6707

if.then3:                                         ; preds = %if.then
  %10 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6708
  %11 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state.addr, align 8, !dbg !6710
  %crtc4 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %11, i32 0, i32 1, !dbg !6711
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc4, align 8, !dbg !6711
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %10, %struct.drm_crtc* %12) #9, !dbg !6712
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6713
  %13 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6714
  %connectors_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %13, i32 0, i32 3, !dbg !6715
  %bf.load = load i8, i8* %connectors_changed, align 2, !dbg !6716
  %bf.clear = and i8 %bf.load, -9, !dbg !6716
  %bf.set = or i8 %bf.clear, 8, !dbg !6716
  store i8 %bf.set, i8* %connectors_changed, align 2, !dbg !6716
  br label %if.end, !dbg !6717

if.end:                                           ; preds = %if.then3, %if.then
  %14 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6718
  %crtc5 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %14, i32 0, i32 1, !dbg !6720
  %15 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc5, align 8, !dbg !6720
  %tobool6 = icmp ne %struct.drm_crtc* %15, null, !dbg !6718
  br i1 %tobool6, label %if.then7, label %if.end14, !dbg !6721

if.then7:                                         ; preds = %if.end
  %16 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6722
  %17 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6724
  %crtc8 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %17, i32 0, i32 1, !dbg !6725
  %18 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc8, align 8, !dbg !6725
  %call9 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %16, %struct.drm_crtc* %18) #9, !dbg !6726
  store %struct.drm_crtc_state* %call9, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6727
  %19 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6728
  %connectors_changed10 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %19, i32 0, i32 3, !dbg !6729
  %bf.load11 = load i8, i8* %connectors_changed10, align 2, !dbg !6730
  %bf.clear12 = and i8 %bf.load11, -9, !dbg !6730
  %bf.set13 = or i8 %bf.clear12, 8, !dbg !6730
  store i8 %bf.set13, i8* %connectors_changed10, align 2, !dbg !6730
  br label %if.end14, !dbg !6731

if.end14:                                         ; preds = %if.then7, %if.end
  br label %if.end15, !dbg !6732

if.end15:                                         ; preds = %if.end14, %entry
  %20 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6733
  %crtc16 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %20, i32 0, i32 1, !dbg !6735
  %21 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc16, align 8, !dbg !6735
  %tobool17 = icmp ne %struct.drm_crtc* %21, null, !dbg !6733
  br i1 %tobool17, label %if.end22, label %if.then18, !dbg !6736

if.then18:                                        ; preds = %if.end15
  %22 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6737
  %base19 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %22, i32 0, i32 4, !dbg !6737
  %id20 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base19, i32 0, i32 0, !dbg !6737
  %23 = load i32, i32* %id20, align 8, !dbg !6737
  %24 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6737
  %name21 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %24, i32 0, i32 5, !dbg !6737
  %25 = load i8*, i8** %name21, align 8, !dbg !6737
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28, i64 0, i64 0), i32 %23, i8* %25) #9, !dbg !6737
  %26 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6739
  %27 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6740
  call void @set_best_encoder(%struct.drm_atomic_state* %26, %struct.drm_connector_state* %27, %struct.drm_encoder* null) #9, !dbg !6741
  store i32 0, i32* %retval, align 4, !dbg !6742
  br label %return, !dbg !6742

if.end22:                                         ; preds = %if.end15
  %28 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6743
  %29 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6744
  %crtc23 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %29, i32 0, i32 1, !dbg !6745
  %30 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc23, align 8, !dbg !6745
  %call24 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %28, %struct.drm_crtc* %30) #9, !dbg !6746
  store %struct.drm_crtc_state* %call24, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6747
  %31 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6748
  %duplicated = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %31, i32 0, i32 2, !dbg !6750
  %bf.load25 = load i8, i8* %duplicated, align 8, !dbg !6750
  %bf.lshr = lshr i8 %bf.load25, 3, !dbg !6750
  %bf.clear26 = and i8 %bf.lshr, 1, !dbg !6750
  %bf.cast = trunc i8 %bf.clear26 to i1, !dbg !6750
  br i1 %bf.cast, label %if.end34, label %land.lhs.true, !dbg !6751

land.lhs.true:                                    ; preds = %if.end22
  %32 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6752
  %call27 = call zeroext i1 @drm_connector_is_unregistered(%struct.drm_connector* %32) #9, !dbg !6753
  br i1 %call27, label %land.lhs.true28, label %if.end34, !dbg !6754

land.lhs.true28:                                  ; preds = %land.lhs.true
  %33 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6755
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %33, i32 0, i32 2, !dbg !6756
  %34 = load i8, i8* %active, align 1, !dbg !6756
  %tobool29 = trunc i8 %34 to i1, !dbg !6756
  br i1 %tobool29, label %if.then30, label %if.end34, !dbg !6757

if.then30:                                        ; preds = %land.lhs.true28
  %35 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6758
  %base31 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %35, i32 0, i32 4, !dbg !6758
  %id32 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base31, i32 0, i32 0, !dbg !6758
  %36 = load i32, i32* %id32, align 8, !dbg !6758
  %37 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6758
  %name33 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %37, i32 0, i32 5, !dbg !6758
  %38 = load i8*, i8** %name33, align 8, !dbg !6758
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.29, i64 0, i64 0), i32 %36, i8* %38) #9, !dbg !6758
  store i32 -22, i32* %retval, align 4, !dbg !6760
  br label %return, !dbg !6760

if.end34:                                         ; preds = %land.lhs.true28, %land.lhs.true, %if.end22
  %39 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6761
  %helper_private = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %39, i32 0, i32 29, !dbg !6762
  %40 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %helper_private, align 8, !dbg !6762
  store %struct.drm_connector_helper_funcs* %40, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6763
  %41 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6764
  %atomic_best_encoder = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %41, i32 0, i32 5, !dbg !6766
  %42 = load %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)*, %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)** %atomic_best_encoder, align 8, !dbg !6766
  %tobool35 = icmp ne %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)* %42, null, !dbg !6764
  br i1 %tobool35, label %if.then36, label %if.else, !dbg !6767

if.then36:                                        ; preds = %if.end34
  %43 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6768
  %atomic_best_encoder37 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %43, i32 0, i32 5, !dbg !6769
  %44 = load %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)*, %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)** %atomic_best_encoder37, align 8, !dbg !6769
  %45 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6770
  %46 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6771
  %call38 = call %struct.drm_encoder* %44(%struct.drm_connector* %45, %struct.drm_connector_state* %46) #9, !dbg !6768
  store %struct.drm_encoder* %call38, %struct.drm_encoder** %new_encoder, align 8, !dbg !6772
  br label %if.end46, !dbg !6773

if.else:                                          ; preds = %if.end34
  %47 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6774
  %best_encoder = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %47, i32 0, i32 4, !dbg !6776
  %48 = load %struct.drm_encoder* (%struct.drm_connector*)*, %struct.drm_encoder* (%struct.drm_connector*)** %best_encoder, align 8, !dbg !6776
  %tobool39 = icmp ne %struct.drm_encoder* (%struct.drm_connector*)* %48, null, !dbg !6774
  br i1 %tobool39, label %if.then40, label %if.else43, !dbg !6777

if.then40:                                        ; preds = %if.else
  %49 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !6778
  %best_encoder41 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %49, i32 0, i32 4, !dbg !6779
  %50 = load %struct.drm_encoder* (%struct.drm_connector*)*, %struct.drm_encoder* (%struct.drm_connector*)** %best_encoder41, align 8, !dbg !6779
  %51 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6780
  %call42 = call %struct.drm_encoder* %50(%struct.drm_connector* %51) #9, !dbg !6778
  store %struct.drm_encoder* %call42, %struct.drm_encoder** %new_encoder, align 8, !dbg !6781
  br label %if.end45, !dbg !6782

if.else43:                                        ; preds = %if.else
  %52 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6783
  %call44 = call %struct.drm_encoder* @drm_connector_get_single_encoder(%struct.drm_connector* %52) #9, !dbg !6784
  store %struct.drm_encoder* %call44, %struct.drm_encoder** %new_encoder, align 8, !dbg !6785
  br label %if.end45

if.end45:                                         ; preds = %if.else43, %if.then40
  br label %if.end46

if.end46:                                         ; preds = %if.end45, %if.then36
  %53 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6786
  %tobool47 = icmp ne %struct.drm_encoder* %53, null, !dbg !6786
  br i1 %tobool47, label %if.end52, label %if.then48, !dbg !6788

if.then48:                                        ; preds = %if.end46
  %54 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6789
  %base49 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %54, i32 0, i32 4, !dbg !6789
  %id50 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base49, i32 0, i32 0, !dbg !6789
  %55 = load i32, i32* %id50, align 8, !dbg !6789
  %56 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6789
  %name51 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %56, i32 0, i32 5, !dbg !6789
  %57 = load i8*, i8** %name51, align 8, !dbg !6789
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.30, i64 0, i64 0), i32 %55, i8* %57) #9, !dbg !6789
  store i32 -22, i32* %retval, align 4, !dbg !6791
  br label %return, !dbg !6791

if.end52:                                         ; preds = %if.end46
  %58 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6792
  %59 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6794
  %crtc53 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %59, i32 0, i32 1, !dbg !6795
  %60 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc53, align 8, !dbg !6795
  %call54 = call zeroext i1 @drm_encoder_crtc_ok(%struct.drm_encoder* %58, %struct.drm_crtc* %60) #9, !dbg !6796
  br i1 %call54, label %if.end64, label %if.then55, !dbg !6797

if.then55:                                        ; preds = %if.end52
  %61 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6798
  %base56 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %61, i32 0, i32 2, !dbg !6798
  %id57 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base56, i32 0, i32 0, !dbg !6798
  %62 = load i32, i32* %id57, align 8, !dbg !6798
  %63 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6798
  %name58 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %63, i32 0, i32 3, !dbg !6798
  %64 = load i8*, i8** %name58, align 8, !dbg !6798
  %65 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6798
  %crtc59 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %65, i32 0, i32 1, !dbg !6798
  %66 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc59, align 8, !dbg !6798
  %base60 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %66, i32 0, i32 5, !dbg !6798
  %id61 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base60, i32 0, i32 0, !dbg !6798
  %67 = load i32, i32* %id61, align 8, !dbg !6798
  %68 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6798
  %crtc62 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %68, i32 0, i32 1, !dbg !6798
  %69 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc62, align 8, !dbg !6798
  %name63 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %69, i32 0, i32 3, !dbg !6798
  %70 = load i8*, i8** %name63, align 8, !dbg !6798
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.31, i64 0, i64 0), i32 %62, i8* %64, i32 %67, i8* %70) #9, !dbg !6798
  store i32 -22, i32* %retval, align 4, !dbg !6800
  br label %return, !dbg !6800

if.end64:                                         ; preds = %if.end52
  %71 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6801
  %72 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6803
  %best_encoder65 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %72, i32 0, i32 2, !dbg !6804
  %73 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder65, align 8, !dbg !6804
  %cmp66 = icmp eq %struct.drm_encoder* %71, %73, !dbg !6805
  br i1 %cmp66, label %if.then67, label %if.end79, !dbg !6806

if.then67:                                        ; preds = %if.end64
  %74 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6807
  %75 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6809
  %76 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6810
  call void @set_best_encoder(%struct.drm_atomic_state* %74, %struct.drm_connector_state* %75, %struct.drm_encoder* %76) #9, !dbg !6811
  %77 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6812
  %base68 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %77, i32 0, i32 4, !dbg !6812
  %id69 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base68, i32 0, i32 0, !dbg !6812
  %78 = load i32, i32* %id69, align 8, !dbg !6812
  %79 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6812
  %name70 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %79, i32 0, i32 5, !dbg !6812
  %80 = load i8*, i8** %name70, align 8, !dbg !6812
  %81 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6812
  %base71 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %81, i32 0, i32 2, !dbg !6812
  %id72 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base71, i32 0, i32 0, !dbg !6812
  %82 = load i32, i32* %id72, align 8, !dbg !6812
  %83 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6812
  %name73 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %83, i32 0, i32 3, !dbg !6812
  %84 = load i8*, i8** %name73, align 8, !dbg !6812
  %85 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6812
  %crtc74 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %85, i32 0, i32 1, !dbg !6812
  %86 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc74, align 8, !dbg !6812
  %base75 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %86, i32 0, i32 5, !dbg !6812
  %id76 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base75, i32 0, i32 0, !dbg !6812
  %87 = load i32, i32* %id76, align 8, !dbg !6812
  %88 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6812
  %crtc77 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %88, i32 0, i32 1, !dbg !6812
  %89 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc77, align 8, !dbg !6812
  %name78 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %89, i32 0, i32 3, !dbg !6812
  %90 = load i8*, i8** %name78, align 8, !dbg !6812
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.32, i64 0, i64 0), i32 %78, i8* %80, i32 %82, i8* %84, i32 %87, i8* %90) #9, !dbg !6812
  store i32 0, i32* %retval, align 4, !dbg !6813
  br label %return, !dbg !6813

if.end79:                                         ; preds = %if.end64
  %91 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6814
  %92 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6815
  call void @steal_encoder(%struct.drm_atomic_state* %91, %struct.drm_encoder* %92) #9, !dbg !6816
  %93 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6817
  %94 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6818
  %95 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6819
  call void @set_best_encoder(%struct.drm_atomic_state* %93, %struct.drm_connector_state* %94, %struct.drm_encoder* %95) #9, !dbg !6820
  %96 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6821
  %connectors_changed80 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %96, i32 0, i32 3, !dbg !6822
  %bf.load81 = load i8, i8* %connectors_changed80, align 2, !dbg !6823
  %bf.clear82 = and i8 %bf.load81, -9, !dbg !6823
  %bf.set83 = or i8 %bf.clear82, 8, !dbg !6823
  store i8 %bf.set83, i8* %connectors_changed80, align 2, !dbg !6823
  %97 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6824
  %base84 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %97, i32 0, i32 4, !dbg !6824
  %id85 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base84, i32 0, i32 0, !dbg !6824
  %98 = load i32, i32* %id85, align 8, !dbg !6824
  %99 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !6824
  %name86 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %99, i32 0, i32 5, !dbg !6824
  %100 = load i8*, i8** %name86, align 8, !dbg !6824
  %101 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6824
  %base87 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %101, i32 0, i32 2, !dbg !6824
  %id88 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base87, i32 0, i32 0, !dbg !6824
  %102 = load i32, i32* %id88, align 8, !dbg !6824
  %103 = load %struct.drm_encoder*, %struct.drm_encoder** %new_encoder, align 8, !dbg !6824
  %name89 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %103, i32 0, i32 3, !dbg !6824
  %104 = load i8*, i8** %name89, align 8, !dbg !6824
  %105 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6824
  %crtc90 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %105, i32 0, i32 1, !dbg !6824
  %106 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc90, align 8, !dbg !6824
  %base91 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %106, i32 0, i32 5, !dbg !6824
  %id92 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base91, i32 0, i32 0, !dbg !6824
  %107 = load i32, i32* %id92, align 8, !dbg !6824
  %108 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state.addr, align 8, !dbg !6824
  %crtc93 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %108, i32 0, i32 1, !dbg !6824
  %109 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc93, align 8, !dbg !6824
  %name94 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %109, i32 0, i32 3, !dbg !6824
  %110 = load i8*, i8** %name94, align 8, !dbg !6824
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.33, i64 0, i64 0), i32 %98, i8* %100, i32 %102, i8* %104, i32 %107, i8* %110) #9, !dbg !6824
  store i32 0, i32* %retval, align 4, !dbg !6825
  br label %return, !dbg !6825

return:                                           ; preds = %if.end79, %if.then67, %if.then55, %if.then48, %if.then30, %if.then18
  %111 = load i32, i32* %retval, align 4, !dbg !6826
  ret i32 %111, !dbg !6826
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %state, %struct.drm_crtc* %crtc) #0 !dbg !6827 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !6830, metadata !DIExpression()), !dbg !6831
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !6832, metadata !DIExpression()), !dbg !6833
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6834
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 4, !dbg !6835
  %1 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !6835
  %2 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !6836
  %call = call i32 @drm_crtc_index(%struct.drm_crtc* %2) #9, !dbg !6837
  %idxprom = zext i32 %call to i64, !dbg !6834
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %1, i64 %idxprom, !dbg !6834
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 3, !dbg !6838
  %3 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !6838
  ret %struct.drm_crtc_state* %3, !dbg !6839
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %state) #0 !dbg !6840 {
entry:
  %state.addr = alloca %struct.drm_crtc_state*, align 8
  store %struct.drm_crtc_state* %state, %struct.drm_crtc_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %state.addr, metadata !6843, metadata !DIExpression()), !dbg !6844
  %0 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state.addr, align 8, !dbg !6845
  %mode_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %0, i32 0, i32 3, !dbg !6846
  %bf.load = load i8, i8* %mode_changed, align 2, !dbg !6846
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !6846
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6846
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !6846
  br i1 %bf.cast, label %lor.end, label %lor.lhs.false, !dbg !6847

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state.addr, align 8, !dbg !6848
  %active_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %1, i32 0, i32 3, !dbg !6849
  %bf.load1 = load i8, i8* %active_changed, align 2, !dbg !6849
  %bf.lshr2 = lshr i8 %bf.load1, 2, !dbg !6849
  %bf.clear3 = and i8 %bf.lshr2, 1, !dbg !6849
  %bf.cast4 = trunc i8 %bf.clear3 to i1, !dbg !6849
  br i1 %bf.cast4, label %lor.end, label %lor.rhs, !dbg !6850

lor.rhs:                                          ; preds = %lor.lhs.false
  %2 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state.addr, align 8, !dbg !6851
  %connectors_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %2, i32 0, i32 3, !dbg !6852
  %bf.load5 = load i8, i8* %connectors_changed, align 2, !dbg !6852
  %bf.lshr6 = lshr i8 %bf.load5, 3, !dbg !6852
  %bf.clear7 = and i8 %bf.lshr6, 1, !dbg !6852
  %bf.cast8 = trunc i8 %bf.clear7 to i1, !dbg !6852
  br label %lor.end, !dbg !6850

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %3 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %bf.cast8, %lor.rhs ]
  ret i1 %3, !dbg !6853
}

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_add_affected_connectors(%struct.drm_atomic_state*, %struct.drm_crtc*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_add_affected_planes(%struct.drm_atomic_state*, %struct.drm_crtc*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_add_encoder_bridges(%struct.drm_atomic_state*, %struct.drm_encoder*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mode_valid(%struct.drm_atomic_state* %state) #0 !dbg !6854 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %conn_state = alloca %struct.drm_connector_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %i = alloca i32, align 4
  %encoder = alloca %struct.drm_encoder*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %mode_status = alloca i32, align 4
  %mode = alloca %struct.drm_display_mode*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !6857, metadata !DIExpression()), !dbg !6858
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state, metadata !6859, metadata !DIExpression()), !dbg !6860
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !6861, metadata !DIExpression()), !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6863, metadata !DIExpression()), !dbg !6864
  store i32 0, i32* %i, align 4, !dbg !6865
  br label %for.cond, !dbg !6865

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6867
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6867
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 5, !dbg !6867
  %2 = load i32, i32* %num_connector, align 8, !dbg !6867
  %cmp = icmp slt i32 %0, %2, !dbg !6867
  br i1 %cmp, label %for.body, label %for.end, !dbg !6865

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6869
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 6, !dbg !6869
  %4 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !6869
  %5 = load i32, i32* %i, align 4, !dbg !6869
  %idxprom = sext i32 %5 to i64, !dbg !6869
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %4, i64 %idxprom, !dbg !6869
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !6869
  %6 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !6869
  %tobool = icmp ne %struct.drm_connector* %6, null, !dbg !6869
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !6869

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6869
  %connectors1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 6, !dbg !6869
  %8 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors1, align 8, !dbg !6869
  %9 = load i32, i32* %i, align 4, !dbg !6869
  %idxprom2 = sext i32 %9 to i64, !dbg !6869
  %arrayidx3 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %8, i64 %idxprom2, !dbg !6869
  %ptr4 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx3, i32 0, i32 0, !dbg !6869
  %10 = load %struct.drm_connector*, %struct.drm_connector** %ptr4, align 8, !dbg !6869
  store %struct.drm_connector* %10, %struct.drm_connector** %connector, align 8, !dbg !6869
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6869
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6869
  %connectors5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 6, !dbg !6869
  %13 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors5, align 8, !dbg !6869
  %14 = load i32, i32* %i, align 4, !dbg !6869
  %idxprom6 = sext i32 %14 to i64, !dbg !6869
  %arrayidx7 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %13, i64 %idxprom6, !dbg !6869
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx7, i32 0, i32 3, !dbg !6869
  %15 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !6869
  store %struct.drm_connector_state* %15, %struct.drm_connector_state** %conn_state, align 8, !dbg !6869
  %16 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !6869
  br i1 true, label %if.else, label %if.then, !dbg !6867

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end27, !dbg !6871

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder, metadata !6873, metadata !DIExpression()), !dbg !6875
  %17 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !6876
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %17, i32 0, i32 2, !dbg !6877
  %18 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !6877
  store %struct.drm_encoder* %18, %struct.drm_encoder** %encoder, align 8, !dbg !6875
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !6878, metadata !DIExpression()), !dbg !6879
  %19 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !6880
  %crtc8 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %19, i32 0, i32 1, !dbg !6881
  %20 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc8, align 8, !dbg !6881
  store %struct.drm_crtc* %20, %struct.drm_crtc** %crtc, align 8, !dbg !6879
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !6882, metadata !DIExpression()), !dbg !6883
  call void @llvm.dbg.declare(metadata i32* %mode_status, metadata !6884, metadata !DIExpression()), !dbg !6885
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !6886, metadata !DIExpression()), !dbg !6887
  %21 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6888
  %tobool9 = icmp ne %struct.drm_crtc* %21, null, !dbg !6888
  br i1 %tobool9, label %lor.lhs.false, label %if.then11, !dbg !6890

lor.lhs.false:                                    ; preds = %if.else
  %22 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6891
  %tobool10 = icmp ne %struct.drm_encoder* %22, null, !dbg !6891
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !6892

if.then11:                                        ; preds = %lor.lhs.false, %if.else
  br label %for.inc, !dbg !6893

if.end:                                           ; preds = %lor.lhs.false
  %23 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6894
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6895
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %23, %struct.drm_crtc* %24) #9, !dbg !6896
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6897
  %25 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6898
  %tobool12 = icmp ne %struct.drm_crtc_state* %25, null, !dbg !6898
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !6900

if.then13:                                        ; preds = %if.end
  br label %for.inc, !dbg !6901

if.end14:                                         ; preds = %if.end
  %26 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6902
  %mode_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %26, i32 0, i32 3, !dbg !6904
  %bf.load = load i8, i8* %mode_changed, align 2, !dbg !6904
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !6904
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6904
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !6904
  br i1 %bf.cast, label %if.end21, label %land.lhs.true15, !dbg !6905

land.lhs.true15:                                  ; preds = %if.end14
  %27 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6906
  %connectors_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %27, i32 0, i32 3, !dbg !6907
  %bf.load16 = load i8, i8* %connectors_changed, align 2, !dbg !6907
  %bf.lshr17 = lshr i8 %bf.load16, 3, !dbg !6907
  %bf.clear18 = and i8 %bf.lshr17, 1, !dbg !6907
  %bf.cast19 = trunc i8 %bf.clear18 to i1, !dbg !6907
  br i1 %bf.cast19, label %if.end21, label %if.then20, !dbg !6908

if.then20:                                        ; preds = %land.lhs.true15
  br label %for.inc, !dbg !6909

if.end21:                                         ; preds = %land.lhs.true15, %if.end14
  %28 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !6910
  %mode22 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %28, i32 0, i32 8, !dbg !6911
  store %struct.drm_display_mode* %mode22, %struct.drm_display_mode** %mode, align 8, !dbg !6912
  %29 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6913
  %30 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !6914
  %31 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6915
  %32 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !6916
  %call23 = call i32 @mode_valid_path(%struct.drm_connector* %29, %struct.drm_encoder* %30, %struct.drm_crtc* %31, %struct.drm_display_mode* %32) #9, !dbg !6917
  store i32 %call23, i32* %mode_status, align 4, !dbg !6918
  %33 = load i32, i32* %mode_status, align 4, !dbg !6919
  %cmp24 = icmp ne i32 %33, 0, !dbg !6921
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !6922

if.then25:                                        ; preds = %if.end21
  store i32 -22, i32* %retval, align 4, !dbg !6923
  br label %return, !dbg !6923

if.end26:                                         ; preds = %if.end21
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then
  br label %for.inc, !dbg !6869

for.inc:                                          ; preds = %if.end27, %if.then20, %if.then13, %if.then11
  %34 = load i32, i32* %i, align 4, !dbg !6867
  %inc = add i32 %34, 1, !dbg !6867
  store i32 %inc, i32* %i, align 4, !dbg !6867
  br label %for.cond, !dbg !6867, !llvm.loop !6924

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6926
  br label %return, !dbg !6926

return:                                           ; preds = %for.end, %if.then25
  %35 = load i32, i32* %retval, align 4, !dbg !6927
  ret i32 %35, !dbg !6927
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mode_fixup(%struct.drm_atomic_state* %state) #0 !dbg !6928 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %funcs = alloca %struct.drm_encoder_helper_funcs*, align 8
  %encoder = alloca %struct.drm_encoder*, align 8
  %bridge = alloca %struct.drm_bridge*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %funcs133 = alloca %struct.drm_crtc_helper_funcs*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !6929, metadata !DIExpression()), !dbg !6930
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !6931, metadata !DIExpression()), !dbg !6932
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !6933, metadata !DIExpression()), !dbg !6934
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !6935, metadata !DIExpression()), !dbg !6936
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !6937, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6939, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !6941, metadata !DIExpression()), !dbg !6942
  store i32 0, i32* %i, align 4, !dbg !6943
  br label %for.cond, !dbg !6943

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !6945
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6945
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !6945
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !6945
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !6945
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !6945
  %3 = load i32, i32* %num_crtc, align 8, !dbg !6945
  %cmp = icmp slt i32 %0, %3, !dbg !6945
  br i1 %cmp, label %for.body, label %for.end, !dbg !6943

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6947
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !6947
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !6947
  %6 = load i32, i32* %i, align 4, !dbg !6947
  %idxprom = sext i32 %6 to i64, !dbg !6947
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !6947
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !6947
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !6947
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !6947
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !6947

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6947
  %crtcs1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !6947
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs1, align 8, !dbg !6947
  %10 = load i32, i32* %i, align 4, !dbg !6947
  %idxprom2 = sext i32 %10 to i64, !dbg !6947
  %arrayidx3 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom2, !dbg !6947
  %ptr4 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx3, i32 0, i32 0, !dbg !6947
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr4, align 8, !dbg !6947
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !6947
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !6947
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6947
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !6947
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !6947
  %15 = load i32, i32* %i, align 4, !dbg !6947
  %idxprom6 = sext i32 %15 to i64, !dbg !6947
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom6, !dbg !6947
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 3, !dbg !6947
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !6947
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6947
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6947
  br i1 true, label %if.else, label %if.then, !dbg !6945

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end14, !dbg !6949

if.else:                                          ; preds = %land.lhs.true
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6951
  %mode_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %18, i32 0, i32 3, !dbg !6954
  %bf.load = load i8, i8* %mode_changed, align 2, !dbg !6954
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !6954
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6954
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !6954
  br i1 %bf.cast, label %if.end, label %land.lhs.true8, !dbg !6955

land.lhs.true8:                                   ; preds = %if.else
  %19 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6956
  %connectors_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %19, i32 0, i32 3, !dbg !6957
  %bf.load9 = load i8, i8* %connectors_changed, align 2, !dbg !6957
  %bf.lshr10 = lshr i8 %bf.load9, 3, !dbg !6957
  %bf.clear11 = and i8 %bf.lshr10, 1, !dbg !6957
  %bf.cast12 = trunc i8 %bf.clear11 to i1, !dbg !6957
  br i1 %bf.cast12, label %if.end, label %if.then13, !dbg !6958

if.then13:                                        ; preds = %land.lhs.true8
  br label %for.inc, !dbg !6959

if.end:                                           ; preds = %land.lhs.true8, %if.else
  %20 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6960
  %adjusted_mode = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %20, i32 0, i32 7, !dbg !6961
  %21 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !6962
  %mode = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %21, i32 0, i32 8, !dbg !6963
  call void @drm_mode_copy(%struct.drm_display_mode* %adjusted_mode, %struct.drm_display_mode* %mode) #9, !dbg !6964
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !6947

for.inc:                                          ; preds = %if.end14, %if.then13
  %22 = load i32, i32* %i, align 4, !dbg !6945
  %inc = add i32 %22, 1, !dbg !6945
  store i32 %inc, i32* %i, align 4, !dbg !6945
  br label %for.cond, !dbg !6945, !llvm.loop !6965

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6967
  br label %for.cond15, !dbg !6967

for.cond15:                                       ; preds = %for.inc107, %for.end
  %23 = load i32, i32* %i, align 4, !dbg !6969
  %24 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6969
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %24, i32 0, i32 5, !dbg !6969
  %25 = load i32, i32* %num_connector, align 8, !dbg !6969
  %cmp16 = icmp slt i32 %23, %25, !dbg !6969
  br i1 %cmp16, label %for.body17, label %for.end109, !dbg !6967

for.body17:                                       ; preds = %for.cond15
  %26 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6971
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %26, i32 0, i32 6, !dbg !6971
  %27 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !6971
  %28 = load i32, i32* %i, align 4, !dbg !6971
  %idxprom18 = sext i32 %28 to i64, !dbg !6971
  %arrayidx19 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %27, i64 %idxprom18, !dbg !6971
  %ptr20 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx19, i32 0, i32 0, !dbg !6971
  %29 = load %struct.drm_connector*, %struct.drm_connector** %ptr20, align 8, !dbg !6971
  %tobool21 = icmp ne %struct.drm_connector* %29, null, !dbg !6971
  br i1 %tobool21, label %land.lhs.true22, label %if.then31, !dbg !6971

land.lhs.true22:                                  ; preds = %for.body17
  %30 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6971
  %connectors23 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %30, i32 0, i32 6, !dbg !6971
  %31 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors23, align 8, !dbg !6971
  %32 = load i32, i32* %i, align 4, !dbg !6971
  %idxprom24 = sext i32 %32 to i64, !dbg !6971
  %arrayidx25 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %31, i64 %idxprom24, !dbg !6971
  %ptr26 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx25, i32 0, i32 0, !dbg !6971
  %33 = load %struct.drm_connector*, %struct.drm_connector** %ptr26, align 8, !dbg !6971
  store %struct.drm_connector* %33, %struct.drm_connector** %connector, align 8, !dbg !6971
  %34 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !6971
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !6971
  %connectors27 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %35, i32 0, i32 6, !dbg !6971
  %36 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors27, align 8, !dbg !6971
  %37 = load i32, i32* %i, align 4, !dbg !6971
  %idxprom28 = sext i32 %37 to i64, !dbg !6971
  %arrayidx29 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %36, i64 %idxprom28, !dbg !6971
  %new_state30 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx29, i32 0, i32 3, !dbg !6971
  %38 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state30, align 8, !dbg !6971
  store %struct.drm_connector_state* %38, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6971
  %39 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6971
  br i1 true, label %if.else32, label %if.then31, !dbg !6969

if.then31:                                        ; preds = %land.lhs.true22, %for.body17
  br label %if.end106, !dbg !6973

if.else32:                                        ; preds = %land.lhs.true22
  call void @llvm.dbg.declare(metadata %struct.drm_encoder_helper_funcs** %funcs, metadata !6975, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder, metadata !6978, metadata !DIExpression()), !dbg !6979
  call void @llvm.dbg.declare(metadata %struct.drm_bridge** %bridge, metadata !6980, metadata !DIExpression()), !dbg !6981
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6982, metadata !DIExpression()), !dbg !6984
  %40 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6984
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %40, i32 0, i32 2, !dbg !6984
  %41 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !6984
  %tobool33 = icmp ne %struct.drm_encoder* %41, null, !dbg !6984
  %lnot = xor i1 %tobool33, true, !dbg !6984
  %lnot34 = xor i1 %lnot, true, !dbg !6984
  %lnot.ext = zext i1 %lnot34 to i32, !dbg !6984
  %42 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6984
  %crtc35 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %42, i32 0, i32 1, !dbg !6984
  %43 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc35, align 8, !dbg !6984
  %tobool36 = icmp ne %struct.drm_crtc* %43, null, !dbg !6984
  %lnot37 = xor i1 %tobool36, true, !dbg !6984
  %lnot39 = xor i1 %lnot37, true, !dbg !6984
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !6984
  %cmp41 = icmp ne i32 %lnot.ext, %lnot.ext40, !dbg !6984
  %lnot42 = xor i1 %cmp41, true, !dbg !6984
  %lnot44 = xor i1 %lnot42, true, !dbg !6984
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !6984
  store i32 %lnot.ext45, i32* %__ret_warn_on, align 4, !dbg !6984
  %44 = load i32, i32* %__ret_warn_on, align 4, !dbg !6985
  %tobool46 = icmp ne i32 %44, 0, !dbg !6985
  %lnot47 = xor i1 %tobool46, true, !dbg !6985
  %lnot49 = xor i1 %lnot47, true, !dbg !6985
  %lnot.ext50 = zext i1 %lnot49 to i32, !dbg !6985
  %conv = sext i32 %lnot.ext50 to i64, !dbg !6985
  %tobool51 = icmp ne i64 %conv, 0, !dbg !6985
  br i1 %tobool51, label %if.then52, label %if.end59, !dbg !6984

if.then52:                                        ; preds = %if.else32
  br label %do.body, !dbg !6985

do.body:                                          ; preds = %if.then52
  br label %do.body53, !dbg !6987

do.body53:                                        ; preds = %do.body
  br label %do.end, !dbg !6989

do.end:                                           ; preds = %do.body53
  br label %do.body54, !dbg !6987

do.body54:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 425, i32 2305, i64 12) #8, !dbg !6991, !srcloc !6993
  br label %do.end55, !dbg !6991

do.end55:                                         ; preds = %do.body54
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 271) #8, !dbg !6994, !srcloc !6996
  br label %do.body56, !dbg !6987

do.body56:                                        ; preds = %do.end55
  br label %do.end57, !dbg !6997

do.end57:                                         ; preds = %do.body56
  br label %do.end58, !dbg !6987

do.end58:                                         ; preds = %do.end57
  br label %if.end59, !dbg !6987

if.end59:                                         ; preds = %do.end58, %if.else32
  %45 = load i32, i32* %__ret_warn_on, align 4, !dbg !6984
  %tobool60 = icmp ne i32 %45, 0, !dbg !6984
  %lnot61 = xor i1 %tobool60, true, !dbg !6984
  %lnot63 = xor i1 %lnot61, true, !dbg !6984
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !6984
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !6984
  store i64 %conv65, i64* %tmp, align 8, !dbg !6985
  %46 = load i64, i64* %tmp, align 8, !dbg !6984
  %47 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !6999
  %crtc66 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %47, i32 0, i32 1, !dbg !7001
  %48 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc66, align 8, !dbg !7001
  %tobool67 = icmp ne %struct.drm_crtc* %48, null, !dbg !6999
  br i1 %tobool67, label %lor.lhs.false, label %if.then70, !dbg !7002

lor.lhs.false:                                    ; preds = %if.end59
  %49 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7003
  %best_encoder68 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %49, i32 0, i32 2, !dbg !7004
  %50 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder68, align 8, !dbg !7004
  %tobool69 = icmp ne %struct.drm_encoder* %50, null, !dbg !7003
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !7005

if.then70:                                        ; preds = %lor.lhs.false, %if.end59
  br label %for.inc107, !dbg !7006

if.end71:                                         ; preds = %lor.lhs.false
  %51 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7007
  %52 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7008
  %crtc72 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %52, i32 0, i32 1, !dbg !7009
  %53 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc72, align 8, !dbg !7009
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %51, %struct.drm_crtc* %53) #9, !dbg !7010
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7011
  %54 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7012
  %best_encoder73 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %54, i32 0, i32 2, !dbg !7013
  %55 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder73, align 8, !dbg !7013
  store %struct.drm_encoder* %55, %struct.drm_encoder** %encoder, align 8, !dbg !7014
  %56 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7015
  %helper_private = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %56, i32 0, i32 11, !dbg !7016
  %57 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %helper_private, align 8, !dbg !7016
  store %struct.drm_encoder_helper_funcs* %57, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !7017
  %58 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7018
  %call74 = call %struct.drm_bridge* @drm_bridge_chain_get_first_bridge(%struct.drm_encoder* %58) #9, !dbg !7019
  store %struct.drm_bridge* %call74, %struct.drm_bridge** %bridge, align 8, !dbg !7020
  %59 = load %struct.drm_bridge*, %struct.drm_bridge** %bridge, align 8, !dbg !7021
  %60 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7022
  %61 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7023
  %call75 = call i32 @drm_atomic_bridge_chain_check(%struct.drm_bridge* %59, %struct.drm_crtc_state* %60, %struct.drm_connector_state* %61) #9, !dbg !7024
  store i32 %call75, i32* %ret, align 4, !dbg !7025
  %62 = load i32, i32* %ret, align 4, !dbg !7026
  %tobool76 = icmp ne i32 %62, 0, !dbg !7026
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !7028

if.then77:                                        ; preds = %if.end71
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.38, i64 0, i64 0)) #9, !dbg !7029
  %63 = load i32, i32* %ret, align 4, !dbg !7031
  store i32 %63, i32* %retval, align 4, !dbg !7032
  br label %return, !dbg !7032

if.end78:                                         ; preds = %if.end71
  %64 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !7033
  %tobool79 = icmp ne %struct.drm_encoder_helper_funcs* %64, null, !dbg !7033
  br i1 %tobool79, label %land.lhs.true80, label %if.else88, !dbg !7035

land.lhs.true80:                                  ; preds = %if.end78
  %65 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !7036
  %atomic_check = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %65, i32 0, i32 12, !dbg !7037
  %66 = load i32 (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)*, i32 (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)** %atomic_check, align 8, !dbg !7037
  %tobool81 = icmp ne i32 (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)* %66, null, !dbg !7036
  br i1 %tobool81, label %if.then82, label %if.else88, !dbg !7038

if.then82:                                        ; preds = %land.lhs.true80
  %67 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !7039
  %atomic_check83 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %67, i32 0, i32 12, !dbg !7041
  %68 = load i32 (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)*, i32 (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)** %atomic_check83, align 8, !dbg !7041
  %69 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7042
  %70 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7043
  %71 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7044
  %call84 = call i32 %68(%struct.drm_encoder* %69, %struct.drm_crtc_state* %70, %struct.drm_connector_state* %71) #9, !dbg !7039
  store i32 %call84, i32* %ret, align 4, !dbg !7045
  %72 = load i32, i32* %ret, align 4, !dbg !7046
  %tobool85 = icmp ne i32 %72, 0, !dbg !7046
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !7048

if.then86:                                        ; preds = %if.then82
  %73 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7049
  %base = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %73, i32 0, i32 2, !dbg !7049
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !7049
  %74 = load i32, i32* %id, align 8, !dbg !7049
  %75 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7049
  %name = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %75, i32 0, i32 3, !dbg !7049
  %76 = load i8*, i8** %name, align 8, !dbg !7049
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39, i64 0, i64 0), i32 %74, i8* %76) #9, !dbg !7049
  %77 = load i32, i32* %ret, align 4, !dbg !7051
  store i32 %77, i32* %retval, align 4, !dbg !7052
  br label %return, !dbg !7052

if.end87:                                         ; preds = %if.then82
  br label %if.end105, !dbg !7053

if.else88:                                        ; preds = %land.lhs.true80, %if.end78
  %78 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !7054
  %tobool89 = icmp ne %struct.drm_encoder_helper_funcs* %78, null, !dbg !7054
  br i1 %tobool89, label %land.lhs.true90, label %if.end104, !dbg !7056

land.lhs.true90:                                  ; preds = %if.else88
  %79 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !7057
  %mode_fixup = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %79, i32 0, i32 2, !dbg !7058
  %80 = load i1 (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, i1 (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)** %mode_fixup, align 8, !dbg !7058
  %tobool91 = icmp ne i1 (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)* %80, null, !dbg !7057
  br i1 %tobool91, label %if.then92, label %if.end104, !dbg !7059

if.then92:                                        ; preds = %land.lhs.true90
  %81 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !7060
  %mode_fixup93 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %81, i32 0, i32 2, !dbg !7062
  %82 = load i1 (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, i1 (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)** %mode_fixup93, align 8, !dbg !7062
  %83 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7063
  %84 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7064
  %mode94 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %84, i32 0, i32 8, !dbg !7065
  %85 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7066
  %adjusted_mode95 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %85, i32 0, i32 7, !dbg !7067
  %call96 = call zeroext i1 %82(%struct.drm_encoder* %83, %struct.drm_display_mode* %mode94, %struct.drm_display_mode* %adjusted_mode95) #9, !dbg !7060
  %conv97 = zext i1 %call96 to i32, !dbg !7060
  store i32 %conv97, i32* %ret, align 4, !dbg !7068
  %86 = load i32, i32* %ret, align 4, !dbg !7069
  %tobool98 = icmp ne i32 %86, 0, !dbg !7069
  br i1 %tobool98, label %if.end103, label %if.then99, !dbg !7071

if.then99:                                        ; preds = %if.then92
  %87 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7072
  %base100 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %87, i32 0, i32 2, !dbg !7072
  %id101 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base100, i32 0, i32 0, !dbg !7072
  %88 = load i32, i32* %id101, align 8, !dbg !7072
  %89 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7072
  %name102 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %89, i32 0, i32 3, !dbg !7072
  %90 = load i8*, i8** %name102, align 8, !dbg !7072
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.40, i64 0, i64 0), i32 %88, i8* %90) #9, !dbg !7072
  store i32 -22, i32* %retval, align 4, !dbg !7074
  br label %return, !dbg !7074

if.end103:                                        ; preds = %if.then92
  br label %if.end104, !dbg !7075

if.end104:                                        ; preds = %if.end103, %land.lhs.true90, %if.else88
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.end87
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then31
  br label %for.inc107, !dbg !6971

for.inc107:                                       ; preds = %if.end106, %if.then70
  %91 = load i32, i32* %i, align 4, !dbg !6969
  %inc108 = add i32 %91, 1, !dbg !6969
  store i32 %inc108, i32* %i, align 4, !dbg !6969
  br label %for.cond15, !dbg !6969, !llvm.loop !7076

for.end109:                                       ; preds = %for.cond15
  store i32 0, i32* %i, align 4, !dbg !7078
  br label %for.cond110, !dbg !7078

for.cond110:                                      ; preds = %for.inc169, %for.end109
  %92 = load i32, i32* %i, align 4, !dbg !7080
  %93 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7080
  %dev111 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %93, i32 0, i32 1, !dbg !7080
  %94 = load %struct.drm_device*, %struct.drm_device** %dev111, align 8, !dbg !7080
  %mode_config112 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %94, i32 0, i32 35, !dbg !7080
  %num_crtc113 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config112, i32 0, i32 19, !dbg !7080
  %95 = load i32, i32* %num_crtc113, align 8, !dbg !7080
  %cmp114 = icmp slt i32 %92, %95, !dbg !7080
  br i1 %cmp114, label %for.body116, label %for.end171, !dbg !7078

for.body116:                                      ; preds = %for.cond110
  %96 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7082
  %crtcs117 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %96, i32 0, i32 4, !dbg !7082
  %97 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs117, align 8, !dbg !7082
  %98 = load i32, i32* %i, align 4, !dbg !7082
  %idxprom118 = sext i32 %98 to i64, !dbg !7082
  %arrayidx119 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %97, i64 %idxprom118, !dbg !7082
  %ptr120 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx119, i32 0, i32 0, !dbg !7082
  %99 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr120, align 8, !dbg !7082
  %tobool121 = icmp ne %struct.drm_crtc* %99, null, !dbg !7082
  br i1 %tobool121, label %land.lhs.true122, label %if.then131, !dbg !7082

land.lhs.true122:                                 ; preds = %for.body116
  %100 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7082
  %crtcs123 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %100, i32 0, i32 4, !dbg !7082
  %101 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs123, align 8, !dbg !7082
  %102 = load i32, i32* %i, align 4, !dbg !7082
  %idxprom124 = sext i32 %102 to i64, !dbg !7082
  %arrayidx125 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %101, i64 %idxprom124, !dbg !7082
  %ptr126 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx125, i32 0, i32 0, !dbg !7082
  %103 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr126, align 8, !dbg !7082
  store %struct.drm_crtc* %103, %struct.drm_crtc** %crtc, align 8, !dbg !7082
  %104 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7082
  %105 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7082
  %crtcs127 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %105, i32 0, i32 4, !dbg !7082
  %106 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs127, align 8, !dbg !7082
  %107 = load i32, i32* %i, align 4, !dbg !7082
  %idxprom128 = sext i32 %107 to i64, !dbg !7082
  %arrayidx129 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %106, i64 %idxprom128, !dbg !7082
  %new_state130 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx129, i32 0, i32 3, !dbg !7082
  %108 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state130, align 8, !dbg !7082
  store %struct.drm_crtc_state* %108, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7082
  %109 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7082
  br i1 true, label %if.else132, label %if.then131, !dbg !7080

if.then131:                                       ; preds = %land.lhs.true122, %for.body116
  br label %if.end168, !dbg !7084

if.else132:                                       ; preds = %land.lhs.true122
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %funcs133, metadata !7086, metadata !DIExpression()), !dbg !7088
  %110 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7089
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %110, i32 0, i32 1, !dbg !7091
  %111 = load i8, i8* %enable, align 8, !dbg !7091
  %tobool134 = trunc i8 %111 to i1, !dbg !7091
  br i1 %tobool134, label %if.end136, label %if.then135, !dbg !7092

if.then135:                                       ; preds = %if.else132
  br label %for.inc169, !dbg !7093

if.end136:                                        ; preds = %if.else132
  %112 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7094
  %mode_changed137 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %112, i32 0, i32 3, !dbg !7096
  %bf.load138 = load i8, i8* %mode_changed137, align 2, !dbg !7096
  %bf.lshr139 = lshr i8 %bf.load138, 1, !dbg !7096
  %bf.clear140 = and i8 %bf.lshr139, 1, !dbg !7096
  %bf.cast141 = trunc i8 %bf.clear140 to i1, !dbg !7096
  br i1 %bf.cast141, label %if.end149, label %land.lhs.true142, !dbg !7097

land.lhs.true142:                                 ; preds = %if.end136
  %113 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7098
  %connectors_changed143 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %113, i32 0, i32 3, !dbg !7099
  %bf.load144 = load i8, i8* %connectors_changed143, align 2, !dbg !7099
  %bf.lshr145 = lshr i8 %bf.load144, 3, !dbg !7099
  %bf.clear146 = and i8 %bf.lshr145, 1, !dbg !7099
  %bf.cast147 = trunc i8 %bf.clear146 to i1, !dbg !7099
  br i1 %bf.cast147, label %if.end149, label %if.then148, !dbg !7100

if.then148:                                       ; preds = %land.lhs.true142
  br label %for.inc169, !dbg !7101

if.end149:                                        ; preds = %land.lhs.true142, %if.end136
  %114 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7102
  %helper_private150 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %114, i32 0, i32 19, !dbg !7103
  %115 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private150, align 8, !dbg !7103
  store %struct.drm_crtc_helper_funcs* %115, %struct.drm_crtc_helper_funcs** %funcs133, align 8, !dbg !7104
  %116 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs133, align 8, !dbg !7105
  %tobool151 = icmp ne %struct.drm_crtc_helper_funcs* %116, null, !dbg !7105
  br i1 %tobool151, label %lor.lhs.false152, label %if.then155, !dbg !7107

lor.lhs.false152:                                 ; preds = %if.end149
  %117 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs133, align 8, !dbg !7108
  %mode_fixup153 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %117, i32 0, i32 4, !dbg !7109
  %118 = load i1 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, i1 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*)** %mode_fixup153, align 8, !dbg !7109
  %tobool154 = icmp ne i1 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*)* %118, null, !dbg !7108
  br i1 %tobool154, label %if.end156, label %if.then155, !dbg !7110

if.then155:                                       ; preds = %lor.lhs.false152, %if.end149
  br label %for.inc169, !dbg !7111

if.end156:                                        ; preds = %lor.lhs.false152
  %119 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs133, align 8, !dbg !7112
  %mode_fixup157 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %119, i32 0, i32 4, !dbg !7113
  %120 = load i1 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, i1 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*)** %mode_fixup157, align 8, !dbg !7113
  %121 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7114
  %122 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7115
  %mode158 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %122, i32 0, i32 8, !dbg !7116
  %123 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7117
  %adjusted_mode159 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %123, i32 0, i32 7, !dbg !7118
  %call160 = call zeroext i1 %120(%struct.drm_crtc* %121, %struct.drm_display_mode* %mode158, %struct.drm_display_mode* %adjusted_mode159) #9, !dbg !7112
  %conv161 = zext i1 %call160 to i32, !dbg !7112
  store i32 %conv161, i32* %ret, align 4, !dbg !7119
  %124 = load i32, i32* %ret, align 4, !dbg !7120
  %tobool162 = icmp ne i32 %124, 0, !dbg !7120
  br i1 %tobool162, label %if.end167, label %if.then163, !dbg !7122

if.then163:                                       ; preds = %if.end156
  %125 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7123
  %base164 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %125, i32 0, i32 5, !dbg !7123
  %id165 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base164, i32 0, i32 0, !dbg !7123
  %126 = load i32, i32* %id165, align 8, !dbg !7123
  %127 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7123
  %name166 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %127, i32 0, i32 3, !dbg !7123
  %128 = load i8*, i8** %name166, align 8, !dbg !7123
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.41, i64 0, i64 0), i32 %126, i8* %128) #9, !dbg !7123
  store i32 -22, i32* %retval, align 4, !dbg !7125
  br label %return, !dbg !7125

if.end167:                                        ; preds = %if.end156
  br label %if.end168

if.end168:                                        ; preds = %if.end167, %if.then131
  br label %for.inc169, !dbg !7082

for.inc169:                                       ; preds = %if.end168, %if.then155, %if.then148, %if.then135
  %129 = load i32, i32* %i, align 4, !dbg !7080
  %inc170 = add i32 %129, 1, !dbg !7080
  store i32 %inc170, i32* %i, align 4, !dbg !7080
  br label %for.cond110, !dbg !7080, !llvm.loop !7126

for.end171:                                       ; preds = %for.cond110
  store i32 0, i32* %retval, align 4, !dbg !7128
  br label %return, !dbg !7128

return:                                           ; preds = %for.end171, %if.then163, %if.then99, %if.then86, %if.then77
  %130 = load i32, i32* %retval, align 4, !dbg !7129
  ret i32 %130, !dbg !7129
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_check_plane_state(%struct.drm_plane_state* %plane_state, %struct.drm_crtc_state* %crtc_state, i32 %min_scale, i32 %max_scale, i1 zeroext %can_position, i1 zeroext %can_update_disabled) #0 !dbg !7130 {
entry:
  %retval = alloca i32, align 4
  %plane_state.addr = alloca %struct.drm_plane_state*, align 8
  %crtc_state.addr = alloca %struct.drm_crtc_state*, align 8
  %min_scale.addr = alloca i32, align 4
  %max_scale.addr = alloca i32, align 4
  %can_position.addr = alloca i8, align 1
  %can_update_disabled.addr = alloca i8, align 1
  %fb = alloca %struct.drm_framebuffer*, align 8
  %src = alloca %struct.drm_rect*, align 8
  %dst = alloca %struct.drm_rect*, align 8
  %rotation = alloca i32, align 4
  %clip = alloca %struct.drm_rect, align 4
  %hscale = alloca i32, align 4
  %vscale = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %tmp27 = alloca %struct.drm_rect, align 4
  %tmp28 = alloca %struct.drm_rect, align 4
  %__ret_warn_on33 = alloca i32, align 4
  %tmp59 = alloca i64, align 8
  store %struct.drm_plane_state* %plane_state, %struct.drm_plane_state** %plane_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state.addr, metadata !7133, metadata !DIExpression()), !dbg !7134
  store %struct.drm_crtc_state* %crtc_state, %struct.drm_crtc_state** %crtc_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state.addr, metadata !7135, metadata !DIExpression()), !dbg !7136
  store i32 %min_scale, i32* %min_scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %min_scale.addr, metadata !7137, metadata !DIExpression()), !dbg !7138
  store i32 %max_scale, i32* %max_scale.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_scale.addr, metadata !7139, metadata !DIExpression()), !dbg !7140
  %frombool = zext i1 %can_position to i8
  store i8 %frombool, i8* %can_position.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %can_position.addr, metadata !7141, metadata !DIExpression()), !dbg !7142
  %frombool1 = zext i1 %can_update_disabled to i8
  store i8 %frombool1, i8* %can_update_disabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %can_update_disabled.addr, metadata !7143, metadata !DIExpression()), !dbg !7144
  call void @llvm.dbg.declare(metadata %struct.drm_framebuffer** %fb, metadata !7145, metadata !DIExpression()), !dbg !7146
  %0 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7147
  %fb2 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %0, i32 0, i32 2, !dbg !7148
  %1 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb2, align 8, !dbg !7148
  store %struct.drm_framebuffer* %1, %struct.drm_framebuffer** %fb, align 8, !dbg !7146
  call void @llvm.dbg.declare(metadata %struct.drm_rect** %src, metadata !7149, metadata !DIExpression()), !dbg !7151
  %2 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7152
  %src3 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %2, i32 0, i32 20, !dbg !7153
  store %struct.drm_rect* %src3, %struct.drm_rect** %src, align 8, !dbg !7151
  call void @llvm.dbg.declare(metadata %struct.drm_rect** %dst, metadata !7154, metadata !DIExpression()), !dbg !7155
  %3 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7156
  %dst4 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %3, i32 0, i32 21, !dbg !7157
  store %struct.drm_rect* %dst4, %struct.drm_rect** %dst, align 8, !dbg !7155
  call void @llvm.dbg.declare(metadata i32* %rotation, metadata !7158, metadata !DIExpression()), !dbg !7159
  %4 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7160
  %rotation5 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %4, i32 0, i32 14, !dbg !7161
  %5 = load i32, i32* %rotation5, align 4, !dbg !7161
  store i32 %5, i32* %rotation, align 4, !dbg !7159
  call void @llvm.dbg.declare(metadata %struct.drm_rect* %clip, metadata !7162, metadata !DIExpression()), !dbg !7163
  %6 = bitcast %struct.drm_rect* %clip to i8*, !dbg !7163
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 16, i1 false), !dbg !7163
  call void @llvm.dbg.declare(metadata i32* %hscale, metadata !7164, metadata !DIExpression()), !dbg !7165
  call void @llvm.dbg.declare(metadata i32* %vscale, metadata !7166, metadata !DIExpression()), !dbg !7167
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7168, metadata !DIExpression()), !dbg !7170
  %7 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7170
  %crtc = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %7, i32 0, i32 1, !dbg !7170
  %8 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7170
  %tobool = icmp ne %struct.drm_crtc* %8, null, !dbg !7170
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7170

land.rhs:                                         ; preds = %entry
  %9 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7170
  %crtc6 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %9, i32 0, i32 1, !dbg !7170
  %10 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc6, align 8, !dbg !7170
  %11 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state.addr, align 8, !dbg !7170
  %crtc7 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %11, i32 0, i32 0, !dbg !7170
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc7, align 8, !dbg !7170
  %cmp = icmp ne %struct.drm_crtc* %10, %12, !dbg !7170
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %13 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7171
  %lnot = xor i1 %13, true, !dbg !7170
  %lnot8 = xor i1 %lnot, true, !dbg !7170
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !7170
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7170
  %14 = load i32, i32* %__ret_warn_on, align 4, !dbg !7172
  %tobool9 = icmp ne i32 %14, 0, !dbg !7172
  %lnot10 = xor i1 %tobool9, true, !dbg !7172
  %lnot12 = xor i1 %lnot10, true, !dbg !7172
  %lnot.ext13 = zext i1 %lnot12 to i32, !dbg !7172
  %conv = sext i32 %lnot.ext13 to i64, !dbg !7172
  %tobool14 = icmp ne i64 %conv, 0, !dbg !7172
  br i1 %tobool14, label %if.then, label %if.end, !dbg !7170

if.then:                                          ; preds = %land.end
  br label %do.body, !dbg !7172

do.body:                                          ; preds = %if.then
  br label %do.body15, !dbg !7174

do.body15:                                        ; preds = %do.body
  br label %do.end, !dbg !7176

do.end:                                           ; preds = %do.body15
  br label %do.body16, !dbg !7174

do.body16:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 804, i32 2305, i64 12) #8, !dbg !7178, !srcloc !7180
  br label %do.end17, !dbg !7178

do.end17:                                         ; preds = %do.body16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 274) #8, !dbg !7181, !srcloc !7183
  br label %do.body18, !dbg !7174

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !7184

do.end19:                                         ; preds = %do.body18
  br label %do.end20, !dbg !7174

do.end20:                                         ; preds = %do.end19
  br label %if.end, !dbg !7174

if.end:                                           ; preds = %do.end20, %land.end
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !7170
  %tobool21 = icmp ne i32 %15, 0, !dbg !7170
  %lnot22 = xor i1 %tobool21, true, !dbg !7170
  %lnot24 = xor i1 %lnot22, true, !dbg !7170
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !7170
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !7170
  store i64 %conv26, i64* %tmp, align 8, !dbg !7172
  %16 = load i64, i64* %tmp, align 8, !dbg !7170
  %17 = load %struct.drm_rect*, %struct.drm_rect** %src, align 8, !dbg !7186
  %18 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7187
  %call = call { i64, i64 } @drm_plane_state_src(%struct.drm_plane_state* %18) #9, !dbg !7188
  %19 = bitcast %struct.drm_rect* %tmp27 to { i64, i64 }*, !dbg !7188
  %20 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 0, !dbg !7188
  %21 = extractvalue { i64, i64 } %call, 0, !dbg !7188
  store i64 %21, i64* %20, align 4, !dbg !7188
  %22 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %19, i32 0, i32 1, !dbg !7188
  %23 = extractvalue { i64, i64 } %call, 1, !dbg !7188
  store i64 %23, i64* %22, align 4, !dbg !7188
  %24 = bitcast %struct.drm_rect* %17 to i8*, !dbg !7188
  %25 = bitcast %struct.drm_rect* %tmp27 to i8*, !dbg !7188
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %24, i8* align 4 %25, i64 16, i1 false), !dbg !7188
  %26 = load %struct.drm_rect*, %struct.drm_rect** %dst, align 8, !dbg !7189
  %27 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7190
  %call29 = call { i64, i64 } @drm_plane_state_dest(%struct.drm_plane_state* %27) #9, !dbg !7191
  %28 = bitcast %struct.drm_rect* %tmp28 to { i64, i64 }*, !dbg !7191
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0, !dbg !7191
  %30 = extractvalue { i64, i64 } %call29, 0, !dbg !7191
  store i64 %30, i64* %29, align 4, !dbg !7191
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1, !dbg !7191
  %32 = extractvalue { i64, i64 } %call29, 1, !dbg !7191
  store i64 %32, i64* %31, align 4, !dbg !7191
  %33 = bitcast %struct.drm_rect* %26 to i8*, !dbg !7191
  %34 = bitcast %struct.drm_rect* %tmp28 to i8*, !dbg !7191
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %33, i8* align 4 %34, i64 16, i1 false), !dbg !7191
  %35 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !7192
  %tobool30 = icmp ne %struct.drm_framebuffer* %35, null, !dbg !7192
  br i1 %tobool30, label %if.end32, label %if.then31, !dbg !7194

if.then31:                                        ; preds = %if.end
  %36 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7195
  %visible = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %36, i32 0, i32 22, !dbg !7197
  store i8 0, i8* %visible, align 8, !dbg !7198
  store i32 0, i32* %retval, align 4, !dbg !7199
  br label %return, !dbg !7199

if.end32:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on33, metadata !7200, metadata !DIExpression()), !dbg !7203
  %37 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7203
  %crtc34 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %37, i32 0, i32 1, !dbg !7203
  %38 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc34, align 8, !dbg !7203
  %tobool35 = icmp ne %struct.drm_crtc* %38, null, !dbg !7203
  %lnot36 = xor i1 %tobool35, true, !dbg !7203
  %lnot38 = xor i1 %lnot36, true, !dbg !7203
  %lnot40 = xor i1 %lnot38, true, !dbg !7203
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !7203
  store i32 %lnot.ext41, i32* %__ret_warn_on33, align 4, !dbg !7203
  %39 = load i32, i32* %__ret_warn_on33, align 4, !dbg !7204
  %tobool42 = icmp ne i32 %39, 0, !dbg !7204
  %lnot43 = xor i1 %tobool42, true, !dbg !7204
  %lnot45 = xor i1 %lnot43, true, !dbg !7204
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !7204
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !7204
  %tobool48 = icmp ne i64 %conv47, 0, !dbg !7204
  br i1 %tobool48, label %if.then49, label %if.end58, !dbg !7203

if.then49:                                        ; preds = %if.end32
  br label %do.body50, !dbg !7204

do.body50:                                        ; preds = %if.then49
  br label %do.body51, !dbg !7206

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !7208

do.end52:                                         ; preds = %do.body51
  br label %do.body53, !dbg !7206

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 815, i32 2305, i64 12) #8, !dbg !7210, !srcloc !7212
  br label %do.end54, !dbg !7210

do.end54:                                         ; preds = %do.body53
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 275) #8, !dbg !7213, !srcloc !7215
  br label %do.body55, !dbg !7206

do.body55:                                        ; preds = %do.end54
  br label %do.end56, !dbg !7216

do.end56:                                         ; preds = %do.body55
  br label %do.end57, !dbg !7206

do.end57:                                         ; preds = %do.end56
  br label %if.end58, !dbg !7206

if.end58:                                         ; preds = %do.end57, %if.end32
  %40 = load i32, i32* %__ret_warn_on33, align 4, !dbg !7203
  %tobool60 = icmp ne i32 %40, 0, !dbg !7203
  %lnot61 = xor i1 %tobool60, true, !dbg !7203
  %lnot63 = xor i1 %lnot61, true, !dbg !7203
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !7203
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !7203
  store i64 %conv65, i64* %tmp59, align 8, !dbg !7204
  %41 = load i64, i64* %tmp59, align 8, !dbg !7203
  %tobool66 = icmp ne i64 %41, 0, !dbg !7218
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !7219

if.then67:                                        ; preds = %if.end58
  %42 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7220
  %visible68 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %42, i32 0, i32 22, !dbg !7222
  store i8 0, i8* %visible68, align 8, !dbg !7223
  store i32 0, i32* %retval, align 4, !dbg !7224
  br label %return, !dbg !7224

if.end69:                                         ; preds = %if.end58
  %43 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state.addr, align 8, !dbg !7225
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %43, i32 0, i32 1, !dbg !7227
  %44 = load i8, i8* %enable, align 8, !dbg !7227
  %tobool70 = trunc i8 %44 to i1, !dbg !7227
  br i1 %tobool70, label %if.end73, label %land.lhs.true, !dbg !7228

land.lhs.true:                                    ; preds = %if.end69
  %45 = load i8, i8* %can_update_disabled.addr, align 1, !dbg !7229
  %tobool71 = trunc i8 %45 to i1, !dbg !7229
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !7230

if.then72:                                        ; preds = %land.lhs.true
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #9, !dbg !7231
  store i32 -22, i32* %retval, align 4, !dbg !7233
  br label %return, !dbg !7233

if.end73:                                         ; preds = %land.lhs.true, %if.end69
  %46 = load %struct.drm_rect*, %struct.drm_rect** %src, align 8, !dbg !7234
  %47 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !7235
  %width = getelementptr inbounds %struct.drm_framebuffer, %struct.drm_framebuffer* %47, i32 0, i32 9, !dbg !7236
  %48 = load i32, i32* %width, align 8, !dbg !7236
  %shl = shl i32 %48, 16, !dbg !7237
  %49 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !7238
  %height = getelementptr inbounds %struct.drm_framebuffer, %struct.drm_framebuffer* %49, i32 0, i32 10, !dbg !7239
  %50 = load i32, i32* %height, align 4, !dbg !7239
  %shl74 = shl i32 %50, 16, !dbg !7240
  %51 = load i32, i32* %rotation, align 4, !dbg !7241
  call void @drm_rect_rotate(%struct.drm_rect* %46, i32 %shl, i32 %shl74, i32 %51) #9, !dbg !7242
  %52 = load %struct.drm_rect*, %struct.drm_rect** %src, align 8, !dbg !7243
  %53 = load %struct.drm_rect*, %struct.drm_rect** %dst, align 8, !dbg !7244
  %54 = load i32, i32* %min_scale.addr, align 4, !dbg !7245
  %55 = load i32, i32* %max_scale.addr, align 4, !dbg !7246
  %call75 = call i32 @drm_rect_calc_hscale(%struct.drm_rect* %52, %struct.drm_rect* %53, i32 %54, i32 %55) #9, !dbg !7247
  store i32 %call75, i32* %hscale, align 4, !dbg !7248
  %56 = load %struct.drm_rect*, %struct.drm_rect** %src, align 8, !dbg !7249
  %57 = load %struct.drm_rect*, %struct.drm_rect** %dst, align 8, !dbg !7250
  %58 = load i32, i32* %min_scale.addr, align 4, !dbg !7251
  %59 = load i32, i32* %max_scale.addr, align 4, !dbg !7252
  %call76 = call i32 @drm_rect_calc_vscale(%struct.drm_rect* %56, %struct.drm_rect* %57, i32 %58, i32 %59) #9, !dbg !7253
  store i32 %call76, i32* %vscale, align 4, !dbg !7254
  %60 = load i32, i32* %hscale, align 4, !dbg !7255
  %cmp77 = icmp slt i32 %60, 0, !dbg !7257
  br i1 %cmp77, label %if.then81, label %lor.lhs.false, !dbg !7258

lor.lhs.false:                                    ; preds = %if.end73
  %61 = load i32, i32* %vscale, align 4, !dbg !7259
  %cmp79 = icmp slt i32 %61, 0, !dbg !7260
  br i1 %cmp79, label %if.then81, label %if.end84, !dbg !7261

if.then81:                                        ; preds = %lor.lhs.false, %if.end73
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0)) #9, !dbg !7262
  %62 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7264
  %src82 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %62, i32 0, i32 20, !dbg !7265
  call void @drm_rect_debug_print(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.8, i64 0, i64 0), %struct.drm_rect* %src82, i1 zeroext true) #9, !dbg !7266
  %63 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7267
  %dst83 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %63, i32 0, i32 21, !dbg !7268
  call void @drm_rect_debug_print(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), %struct.drm_rect* %dst83, i1 zeroext false) #9, !dbg !7269
  store i32 -34, i32* %retval, align 4, !dbg !7270
  br label %return, !dbg !7270

if.end84:                                         ; preds = %lor.lhs.false
  %64 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state.addr, align 8, !dbg !7271
  %enable85 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %64, i32 0, i32 1, !dbg !7273
  %65 = load i8, i8* %enable85, align 8, !dbg !7273
  %tobool86 = trunc i8 %65 to i1, !dbg !7273
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !7274

if.then87:                                        ; preds = %if.end84
  %66 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state.addr, align 8, !dbg !7275
  %mode = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %66, i32 0, i32 8, !dbg !7276
  %x2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %clip, i32 0, i32 2, !dbg !7277
  %y2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %clip, i32 0, i32 3, !dbg !7278
  call void @drm_mode_get_hv_timing(%struct.drm_display_mode* %mode, i32* %x2, i32* %y2) #9, !dbg !7279
  br label %if.end88, !dbg !7279

if.end88:                                         ; preds = %if.then87, %if.end84
  %67 = load %struct.drm_rect*, %struct.drm_rect** %src, align 8, !dbg !7280
  %68 = load %struct.drm_rect*, %struct.drm_rect** %dst, align 8, !dbg !7281
  %call89 = call zeroext i1 @drm_rect_clip_scaled(%struct.drm_rect* %67, %struct.drm_rect* %68, %struct.drm_rect* %clip) #9, !dbg !7282
  %69 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7283
  %visible90 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %69, i32 0, i32 22, !dbg !7284
  %frombool91 = zext i1 %call89 to i8, !dbg !7285
  store i8 %frombool91, i8* %visible90, align 8, !dbg !7285
  %70 = load %struct.drm_rect*, %struct.drm_rect** %src, align 8, !dbg !7286
  %71 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !7287
  %width92 = getelementptr inbounds %struct.drm_framebuffer, %struct.drm_framebuffer* %71, i32 0, i32 9, !dbg !7288
  %72 = load i32, i32* %width92, align 8, !dbg !7288
  %shl93 = shl i32 %72, 16, !dbg !7289
  %73 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !7290
  %height94 = getelementptr inbounds %struct.drm_framebuffer, %struct.drm_framebuffer* %73, i32 0, i32 10, !dbg !7291
  %74 = load i32, i32* %height94, align 4, !dbg !7291
  %shl95 = shl i32 %74, 16, !dbg !7292
  %75 = load i32, i32* %rotation, align 4, !dbg !7293
  call void @drm_rect_rotate_inv(%struct.drm_rect* %70, i32 %shl93, i32 %shl95, i32 %75) #9, !dbg !7294
  %76 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7295
  %visible96 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %76, i32 0, i32 22, !dbg !7297
  %77 = load i8, i8* %visible96, align 8, !dbg !7297
  %tobool97 = trunc i8 %77 to i1, !dbg !7297
  br i1 %tobool97, label %if.end99, label %if.then98, !dbg !7298

if.then98:                                        ; preds = %if.end88
  store i32 0, i32* %retval, align 4, !dbg !7299
  br label %return, !dbg !7299

if.end99:                                         ; preds = %if.end88
  %78 = load i8, i8* %can_position.addr, align 1, !dbg !7300
  %tobool100 = trunc i8 %78 to i1, !dbg !7300
  br i1 %tobool100, label %if.end104, label %land.lhs.true101, !dbg !7302

land.lhs.true101:                                 ; preds = %if.end99
  %79 = load %struct.drm_rect*, %struct.drm_rect** %dst, align 8, !dbg !7303
  %call102 = call zeroext i1 @drm_rect_equals(%struct.drm_rect* %79, %struct.drm_rect* %clip) #9, !dbg !7304
  br i1 %call102, label %if.end104, label %if.then103, !dbg !7305

if.then103:                                       ; preds = %land.lhs.true101
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #9, !dbg !7306
  %80 = load %struct.drm_rect*, %struct.drm_rect** %dst, align 8, !dbg !7308
  call void @drm_rect_debug_print(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), %struct.drm_rect* %80, i1 zeroext false) #9, !dbg !7309
  call void @drm_rect_debug_print(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), %struct.drm_rect* %clip, i1 zeroext false) #9, !dbg !7310
  store i32 -22, i32* %retval, align 4, !dbg !7311
  br label %return, !dbg !7311

if.end104:                                        ; preds = %land.lhs.true101, %if.end99
  store i32 0, i32* %retval, align 4, !dbg !7312
  br label %return, !dbg !7312

return:                                           ; preds = %if.end104, %if.then103, %if.then98, %if.then81, %if.then72, %if.then67, %if.then31
  %81 = load i32, i32* %retval, align 4, !dbg !7313
  ret i32 %81, !dbg !7313
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal { i64, i64 } @drm_plane_state_src(%struct.drm_plane_state* %state) #0 !dbg !7314 {
entry:
  %retval = alloca %struct.drm_rect, align 4
  %state.addr = alloca %struct.drm_plane_state*, align 8
  store %struct.drm_plane_state* %state, %struct.drm_plane_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %state.addr, metadata !7317, metadata !DIExpression()), !dbg !7318
  call void @llvm.dbg.declare(metadata %struct.drm_rect* %retval, metadata !7319, metadata !DIExpression()), !dbg !7320
  %x1 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 0, !dbg !7321
  %0 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7322
  %src_x = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %0, i32 0, i32 8, !dbg !7323
  %1 = load i32, i32* %src_x, align 8, !dbg !7323
  store i32 %1, i32* %x1, align 4, !dbg !7321
  %y1 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 1, !dbg !7321
  %2 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7324
  %src_y = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %2, i32 0, i32 9, !dbg !7325
  %3 = load i32, i32* %src_y, align 4, !dbg !7325
  store i32 %3, i32* %y1, align 4, !dbg !7321
  %x2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 2, !dbg !7321
  %4 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7326
  %src_x1 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %4, i32 0, i32 8, !dbg !7327
  %5 = load i32, i32* %src_x1, align 8, !dbg !7327
  %6 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7328
  %src_w = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %6, i32 0, i32 11, !dbg !7329
  %7 = load i32, i32* %src_w, align 4, !dbg !7329
  %add = add i32 %5, %7, !dbg !7330
  store i32 %add, i32* %x2, align 4, !dbg !7321
  %y2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 3, !dbg !7321
  %8 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7331
  %src_y2 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %8, i32 0, i32 9, !dbg !7332
  %9 = load i32, i32* %src_y2, align 4, !dbg !7332
  %10 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7333
  %src_h = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %10, i32 0, i32 10, !dbg !7334
  %11 = load i32, i32* %src_h, align 8, !dbg !7334
  %add3 = add i32 %9, %11, !dbg !7335
  store i32 %add3, i32* %y2, align 4, !dbg !7321
  %12 = bitcast %struct.drm_rect* %retval to { i64, i64 }*, !dbg !7336
  %13 = load { i64, i64 }, { i64, i64 }* %12, align 4, !dbg !7336
  ret { i64, i64 } %13, !dbg !7336
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal { i64, i64 } @drm_plane_state_dest(%struct.drm_plane_state* %state) #0 !dbg !7337 {
entry:
  %retval = alloca %struct.drm_rect, align 4
  %state.addr = alloca %struct.drm_plane_state*, align 8
  store %struct.drm_plane_state* %state, %struct.drm_plane_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %state.addr, metadata !7338, metadata !DIExpression()), !dbg !7339
  call void @llvm.dbg.declare(metadata %struct.drm_rect* %retval, metadata !7340, metadata !DIExpression()), !dbg !7341
  %x1 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 0, !dbg !7342
  %0 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7343
  %crtc_x = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %0, i32 0, i32 4, !dbg !7344
  %1 = load i32, i32* %crtc_x, align 8, !dbg !7344
  store i32 %1, i32* %x1, align 4, !dbg !7342
  %y1 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 1, !dbg !7342
  %2 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7345
  %crtc_y = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %2, i32 0, i32 5, !dbg !7346
  %3 = load i32, i32* %crtc_y, align 4, !dbg !7346
  store i32 %3, i32* %y1, align 4, !dbg !7342
  %x2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 2, !dbg !7342
  %4 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7347
  %crtc_x1 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %4, i32 0, i32 4, !dbg !7348
  %5 = load i32, i32* %crtc_x1, align 8, !dbg !7348
  %6 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7349
  %crtc_w = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %6, i32 0, i32 6, !dbg !7350
  %7 = load i32, i32* %crtc_w, align 8, !dbg !7350
  %add = add i32 %5, %7, !dbg !7351
  store i32 %add, i32* %x2, align 4, !dbg !7342
  %y2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %retval, i32 0, i32 3, !dbg !7342
  %8 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7352
  %crtc_y2 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %8, i32 0, i32 5, !dbg !7353
  %9 = load i32, i32* %crtc_y2, align 4, !dbg !7353
  %10 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !7354
  %crtc_h = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %10, i32 0, i32 7, !dbg !7355
  %11 = load i32, i32* %crtc_h, align 4, !dbg !7355
  %add3 = add i32 %9, %11, !dbg !7356
  store i32 %add3, i32* %y2, align 4, !dbg !7342
  %12 = bitcast %struct.drm_rect* %retval to { i64, i64 }*, !dbg !7357
  %13 = load { i64, i64 }, { i64, i64 }* %12, align 4, !dbg !7357
  ret { i64, i64 } %13, !dbg !7357
}

; Function Attrs: noredzone
declare dso_local void @drm_rect_rotate(%struct.drm_rect*, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_rect_calc_hscale(%struct.drm_rect*, %struct.drm_rect*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_rect_calc_vscale(%struct.drm_rect*, %struct.drm_rect*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @drm_rect_debug_print(i8*, %struct.drm_rect*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @drm_mode_get_hv_timing(%struct.drm_display_mode*, i32*, i32*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @drm_rect_clip_scaled(%struct.drm_rect*, %struct.drm_rect*, %struct.drm_rect*) #2

; Function Attrs: noredzone
declare dso_local void @drm_rect_rotate_inv(%struct.drm_rect*, i32, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_rect_equals(%struct.drm_rect* %r1, %struct.drm_rect* %r2) #0 !dbg !7358 {
entry:
  %r1.addr = alloca %struct.drm_rect*, align 8
  %r2.addr = alloca %struct.drm_rect*, align 8
  store %struct.drm_rect* %r1, %struct.drm_rect** %r1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_rect** %r1.addr, metadata !7363, metadata !DIExpression()), !dbg !7364
  store %struct.drm_rect* %r2, %struct.drm_rect** %r2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_rect** %r2.addr, metadata !7365, metadata !DIExpression()), !dbg !7366
  %0 = load %struct.drm_rect*, %struct.drm_rect** %r1.addr, align 8, !dbg !7367
  %x1 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %0, i32 0, i32 0, !dbg !7368
  %1 = load i32, i32* %x1, align 4, !dbg !7368
  %2 = load %struct.drm_rect*, %struct.drm_rect** %r2.addr, align 8, !dbg !7369
  %x11 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %2, i32 0, i32 0, !dbg !7370
  %3 = load i32, i32* %x11, align 4, !dbg !7370
  %cmp = icmp eq i32 %1, %3, !dbg !7371
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !7372

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.drm_rect*, %struct.drm_rect** %r1.addr, align 8, !dbg !7373
  %x2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %4, i32 0, i32 2, !dbg !7374
  %5 = load i32, i32* %x2, align 4, !dbg !7374
  %6 = load %struct.drm_rect*, %struct.drm_rect** %r2.addr, align 8, !dbg !7375
  %x22 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %6, i32 0, i32 2, !dbg !7376
  %7 = load i32, i32* %x22, align 4, !dbg !7376
  %cmp3 = icmp eq i32 %5, %7, !dbg !7377
  br i1 %cmp3, label %land.lhs.true4, label %land.end, !dbg !7378

land.lhs.true4:                                   ; preds = %land.lhs.true
  %8 = load %struct.drm_rect*, %struct.drm_rect** %r1.addr, align 8, !dbg !7379
  %y1 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %8, i32 0, i32 1, !dbg !7380
  %9 = load i32, i32* %y1, align 4, !dbg !7380
  %10 = load %struct.drm_rect*, %struct.drm_rect** %r2.addr, align 8, !dbg !7381
  %y15 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %10, i32 0, i32 1, !dbg !7382
  %11 = load i32, i32* %y15, align 4, !dbg !7382
  %cmp6 = icmp eq i32 %9, %11, !dbg !7383
  br i1 %cmp6, label %land.rhs, label %land.end, !dbg !7384

land.rhs:                                         ; preds = %land.lhs.true4
  %12 = load %struct.drm_rect*, %struct.drm_rect** %r1.addr, align 8, !dbg !7385
  %y2 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %12, i32 0, i32 3, !dbg !7386
  %13 = load i32, i32* %y2, align 4, !dbg !7386
  %14 = load %struct.drm_rect*, %struct.drm_rect** %r2.addr, align 8, !dbg !7387
  %y27 = getelementptr inbounds %struct.drm_rect, %struct.drm_rect* %14, i32 0, i32 3, !dbg !7388
  %15 = load i32, i32* %y27, align 4, !dbg !7388
  %cmp8 = icmp eq i32 %13, %15, !dbg !7389
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true4, %land.lhs.true, %entry
  %16 = phi i1 [ false, %land.lhs.true4 ], [ false, %land.lhs.true ], [ false, %entry ], [ %cmp8, %land.rhs ], !dbg !7390
  ret i1 %16, !dbg !7391
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_check_planes(%struct.drm_device* %dev, %struct.drm_atomic_state* %state) #0 !dbg !7392 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %funcs = alloca %struct.drm_plane_helper_funcs*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %funcs64 = alloca %struct.drm_crtc_helper_funcs*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7393, metadata !DIExpression()), !dbg !7394
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !7395, metadata !DIExpression()), !dbg !7396
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !7397, metadata !DIExpression()), !dbg !7398
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !7399, metadata !DIExpression()), !dbg !7400
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !7401, metadata !DIExpression()), !dbg !7402
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !7403, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !7405, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7407, metadata !DIExpression()), !dbg !7408
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7409, metadata !DIExpression()), !dbg !7410
  store i32 0, i32* %ret, align 4, !dbg !7410
  store i32 0, i32* %i, align 4, !dbg !7411
  br label %for.cond, !dbg !7411

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7413
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7413
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !7413
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !7413
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !7413
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 17, !dbg !7413
  %3 = load i32, i32* %num_total_plane, align 8, !dbg !7413
  %cmp = icmp slt i32 %0, %3, !dbg !7413
  br i1 %cmp, label %for.body, label %for.end, !dbg !7411

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7415
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 3, !dbg !7415
  %5 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !7415
  %6 = load i32, i32* %i, align 4, !dbg !7415
  %idxprom = sext i32 %6 to i64, !dbg !7415
  %arrayidx = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %5, i64 %idxprom, !dbg !7415
  %ptr = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx, i32 0, i32 0, !dbg !7415
  %7 = load %struct.drm_plane*, %struct.drm_plane** %ptr, align 8, !dbg !7415
  %tobool = icmp ne %struct.drm_plane* %7, null, !dbg !7415
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !7415

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7415
  %planes2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 3, !dbg !7415
  %9 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes2, align 8, !dbg !7415
  %10 = load i32, i32* %i, align 4, !dbg !7415
  %idxprom3 = sext i32 %10 to i64, !dbg !7415
  %arrayidx4 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %9, i64 %idxprom3, !dbg !7415
  %ptr5 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx4, i32 0, i32 0, !dbg !7415
  %11 = load %struct.drm_plane*, %struct.drm_plane** %ptr5, align 8, !dbg !7415
  store %struct.drm_plane* %11, %struct.drm_plane** %plane, align 8, !dbg !7415
  %12 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7415
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7415
  %planes6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 3, !dbg !7415
  %14 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes6, align 8, !dbg !7415
  %15 = load i32, i32* %i, align 4, !dbg !7415
  %idxprom7 = sext i32 %15 to i64, !dbg !7415
  %arrayidx8 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %14, i64 %idxprom7, !dbg !7415
  %old_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx8, i32 0, i32 2, !dbg !7415
  %16 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state, align 8, !dbg !7415
  store %struct.drm_plane_state* %16, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !7415
  %17 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7415
  %planes9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %17, i32 0, i32 3, !dbg !7415
  %18 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes9, align 8, !dbg !7415
  %19 = load i32, i32* %i, align 4, !dbg !7415
  %idxprom10 = sext i32 %19 to i64, !dbg !7415
  %arrayidx11 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %18, i64 %idxprom10, !dbg !7415
  %new_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx11, i32 0, i32 3, !dbg !7415
  %20 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state, align 8, !dbg !7415
  store %struct.drm_plane_state* %20, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7415
  br i1 true, label %if.else, label %if.then, !dbg !7413

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end42, !dbg !7417

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %funcs, metadata !7419, metadata !DIExpression()), !dbg !7421
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7422, metadata !DIExpression()), !dbg !7424
  %21 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7424
  %mutex = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %21, i32 0, i32 3, !dbg !7424
  %call = call zeroext i1 @drm_modeset_is_locked(%struct.drm_modeset_lock* %mutex) #9, !dbg !7424
  %lnot = xor i1 %call, true, !dbg !7424
  %lnot12 = xor i1 %lnot, true, !dbg !7424
  %lnot13 = xor i1 %lnot12, true, !dbg !7424
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !7424
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7424
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !7425
  %tobool14 = icmp ne i32 %22, 0, !dbg !7425
  %lnot15 = xor i1 %tobool14, true, !dbg !7425
  %lnot17 = xor i1 %lnot15, true, !dbg !7425
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !7425
  %conv = sext i32 %lnot.ext18 to i64, !dbg !7425
  %tobool19 = icmp ne i64 %conv, 0, !dbg !7425
  br i1 %tobool19, label %if.then20, label %if.end, !dbg !7424

if.then20:                                        ; preds = %if.else
  br label %do.body, !dbg !7425

do.body:                                          ; preds = %if.then20
  br label %do.body21, !dbg !7427

do.body21:                                        ; preds = %do.body
  br label %do.end, !dbg !7429

do.end:                                           ; preds = %do.body21
  br label %do.body22, !dbg !7427

do.body22:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 894, i32 2305, i64 12) #8, !dbg !7431, !srcloc !7433
  br label %do.end23, !dbg !7431

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 276) #8, !dbg !7434, !srcloc !7436
  br label %do.body24, !dbg !7427

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !7437

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !7427

do.end26:                                         ; preds = %do.end25
  br label %if.end, !dbg !7427

if.end:                                           ; preds = %do.end26, %if.else
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !7424
  %tobool27 = icmp ne i32 %23, 0, !dbg !7424
  %lnot28 = xor i1 %tobool27, true, !dbg !7424
  %lnot30 = xor i1 %lnot28, true, !dbg !7424
  %lnot.ext31 = zext i1 %lnot30 to i32, !dbg !7424
  %conv32 = sext i32 %lnot.ext31 to i64, !dbg !7424
  store i64 %conv32, i64* %tmp, align 8, !dbg !7425
  %24 = load i64, i64* %tmp, align 8, !dbg !7424
  %25 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7439
  %helper_private = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %25, i32 0, i32 18, !dbg !7440
  %26 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private, align 8, !dbg !7440
  store %struct.drm_plane_helper_funcs* %26, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !7441
  %27 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7442
  %28 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !7443
  %29 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7444
  %30 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7445
  call void @drm_atomic_helper_plane_changed(%struct.drm_atomic_state* %27, %struct.drm_plane_state* %28, %struct.drm_plane_state* %29, %struct.drm_plane* %30) #9, !dbg !7446
  %31 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7447
  %32 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7448
  call void @drm_atomic_helper_check_plane_damage(%struct.drm_atomic_state* %31, %struct.drm_plane_state* %32) #9, !dbg !7449
  %33 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !7450
  %tobool33 = icmp ne %struct.drm_plane_helper_funcs* %33, null, !dbg !7450
  br i1 %tobool33, label %lor.lhs.false, label %if.then35, !dbg !7452

lor.lhs.false:                                    ; preds = %if.end
  %34 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !7453
  %atomic_check = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %34, i32 0, i32 2, !dbg !7454
  %35 = load i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_check, align 8, !dbg !7454
  %tobool34 = icmp ne i32 (%struct.drm_plane*, %struct.drm_plane_state*)* %35, null, !dbg !7453
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !7455

if.then35:                                        ; preds = %lor.lhs.false, %if.end
  br label %for.inc, !dbg !7456

if.end36:                                         ; preds = %lor.lhs.false
  %36 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !7457
  %atomic_check37 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %36, i32 0, i32 2, !dbg !7458
  %37 = load i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_check37, align 8, !dbg !7458
  %38 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7459
  %39 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7460
  %call38 = call i32 %37(%struct.drm_plane* %38, %struct.drm_plane_state* %39) #9, !dbg !7457
  store i32 %call38, i32* %ret, align 4, !dbg !7461
  %40 = load i32, i32* %ret, align 4, !dbg !7462
  %tobool39 = icmp ne i32 %40, 0, !dbg !7462
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !7464

if.then40:                                        ; preds = %if.end36
  %41 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7465
  %base = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %41, i32 0, i32 4, !dbg !7465
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !7465
  %42 = load i32, i32* %id, align 8, !dbg !7465
  %43 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7465
  %name = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %43, i32 0, i32 2, !dbg !7465
  %44 = load i8*, i8** %name, align 8, !dbg !7465
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.12, i64 0, i64 0), i32 %42, i8* %44) #9, !dbg !7465
  %45 = load i32, i32* %ret, align 4, !dbg !7467
  store i32 %45, i32* %retval, align 4, !dbg !7468
  br label %return, !dbg !7468

if.end41:                                         ; preds = %if.end36
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then
  br label %for.inc, !dbg !7415

for.inc:                                          ; preds = %if.end42, %if.then35
  %46 = load i32, i32* %i, align 4, !dbg !7413
  %inc = add i32 %46, 1, !dbg !7413
  store i32 %inc, i32* %i, align 4, !dbg !7413
  br label %for.cond, !dbg !7413, !llvm.loop !7469

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7471
  br label %for.cond43, !dbg !7471

for.cond43:                                       ; preds = %for.inc81, %for.end
  %47 = load i32, i32* %i, align 4, !dbg !7473
  %48 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7473
  %dev44 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %48, i32 0, i32 1, !dbg !7473
  %49 = load %struct.drm_device*, %struct.drm_device** %dev44, align 8, !dbg !7473
  %mode_config45 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %49, i32 0, i32 35, !dbg !7473
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config45, i32 0, i32 19, !dbg !7473
  %50 = load i32, i32* %num_crtc, align 8, !dbg !7473
  %cmp46 = icmp slt i32 %47, %50, !dbg !7473
  br i1 %cmp46, label %for.body48, label %for.end83, !dbg !7471

for.body48:                                       ; preds = %for.cond43
  %51 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7475
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %51, i32 0, i32 4, !dbg !7475
  %52 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !7475
  %53 = load i32, i32* %i, align 4, !dbg !7475
  %idxprom49 = sext i32 %53 to i64, !dbg !7475
  %arrayidx50 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %52, i64 %idxprom49, !dbg !7475
  %ptr51 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx50, i32 0, i32 0, !dbg !7475
  %54 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr51, align 8, !dbg !7475
  %tobool52 = icmp ne %struct.drm_crtc* %54, null, !dbg !7475
  br i1 %tobool52, label %land.lhs.true53, label %if.then62, !dbg !7475

land.lhs.true53:                                  ; preds = %for.body48
  %55 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7475
  %crtcs54 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %55, i32 0, i32 4, !dbg !7475
  %56 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs54, align 8, !dbg !7475
  %57 = load i32, i32* %i, align 4, !dbg !7475
  %idxprom55 = sext i32 %57 to i64, !dbg !7475
  %arrayidx56 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %56, i64 %idxprom55, !dbg !7475
  %ptr57 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx56, i32 0, i32 0, !dbg !7475
  %58 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr57, align 8, !dbg !7475
  store %struct.drm_crtc* %58, %struct.drm_crtc** %crtc, align 8, !dbg !7475
  %59 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7475
  %60 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7475
  %crtcs58 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %60, i32 0, i32 4, !dbg !7475
  %61 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs58, align 8, !dbg !7475
  %62 = load i32, i32* %i, align 4, !dbg !7475
  %idxprom59 = sext i32 %62 to i64, !dbg !7475
  %arrayidx60 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %61, i64 %idxprom59, !dbg !7475
  %new_state61 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx60, i32 0, i32 3, !dbg !7475
  %63 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state61, align 8, !dbg !7475
  store %struct.drm_crtc_state* %63, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7475
  %64 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7475
  br i1 true, label %if.else63, label %if.then62, !dbg !7473

if.then62:                                        ; preds = %land.lhs.true53, %for.body48
  br label %if.end80, !dbg !7477

if.else63:                                        ; preds = %land.lhs.true53
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %funcs64, metadata !7479, metadata !DIExpression()), !dbg !7481
  %65 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7482
  %helper_private65 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %65, i32 0, i32 19, !dbg !7483
  %66 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private65, align 8, !dbg !7483
  store %struct.drm_crtc_helper_funcs* %66, %struct.drm_crtc_helper_funcs** %funcs64, align 8, !dbg !7484
  %67 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs64, align 8, !dbg !7485
  %tobool66 = icmp ne %struct.drm_crtc_helper_funcs* %67, null, !dbg !7485
  br i1 %tobool66, label %lor.lhs.false67, label %if.then70, !dbg !7487

lor.lhs.false67:                                  ; preds = %if.else63
  %68 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs64, align 8, !dbg !7488
  %atomic_check68 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %68, i32 0, i32 10, !dbg !7489
  %69 = load i32 (%struct.drm_crtc*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_check68, align 8, !dbg !7489
  %tobool69 = icmp ne i32 (%struct.drm_crtc*, %struct.drm_crtc_state*)* %69, null, !dbg !7488
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !7490

if.then70:                                        ; preds = %lor.lhs.false67, %if.else63
  br label %for.inc81, !dbg !7491

if.end71:                                         ; preds = %lor.lhs.false67
  %70 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs64, align 8, !dbg !7492
  %atomic_check72 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %70, i32 0, i32 10, !dbg !7493
  %71 = load i32 (%struct.drm_crtc*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_check72, align 8, !dbg !7493
  %72 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7494
  %73 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7495
  %call73 = call i32 %71(%struct.drm_crtc* %72, %struct.drm_crtc_state* %73) #9, !dbg !7492
  store i32 %call73, i32* %ret, align 4, !dbg !7496
  %74 = load i32, i32* %ret, align 4, !dbg !7497
  %tobool74 = icmp ne i32 %74, 0, !dbg !7497
  br i1 %tobool74, label %if.then75, label %if.end79, !dbg !7499

if.then75:                                        ; preds = %if.end71
  %75 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7500
  %base76 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %75, i32 0, i32 5, !dbg !7500
  %id77 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base76, i32 0, i32 0, !dbg !7500
  %76 = load i32, i32* %id77, align 8, !dbg !7500
  %77 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7500
  %name78 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %77, i32 0, i32 3, !dbg !7500
  %78 = load i8*, i8** %name78, align 8, !dbg !7500
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.13, i64 0, i64 0), i32 %76, i8* %78) #9, !dbg !7500
  %79 = load i32, i32* %ret, align 4, !dbg !7502
  store i32 %79, i32* %retval, align 4, !dbg !7503
  br label %return, !dbg !7503

if.end79:                                         ; preds = %if.end71
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then62
  br label %for.inc81, !dbg !7475

for.inc81:                                        ; preds = %if.end80, %if.then70
  %80 = load i32, i32* %i, align 4, !dbg !7473
  %inc82 = add i32 %80, 1, !dbg !7473
  store i32 %inc82, i32* %i, align 4, !dbg !7473
  br label %for.cond43, !dbg !7473, !llvm.loop !7504

for.end83:                                        ; preds = %for.cond43
  %81 = load i32, i32* %ret, align 4, !dbg !7506
  store i32 %81, i32* %retval, align 4, !dbg !7507
  br label %return, !dbg !7507

return:                                           ; preds = %for.end83, %if.then75, %if.then40
  %82 = load i32, i32* %retval, align 4, !dbg !7508
  ret i32 %82, !dbg !7508
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_atomic_helper_plane_changed(%struct.drm_atomic_state* %state, %struct.drm_plane_state* %old_plane_state, %struct.drm_plane_state* %plane_state, %struct.drm_plane* %plane) #0 !dbg !7509 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %old_plane_state.addr = alloca %struct.drm_plane_state*, align 8
  %plane_state.addr = alloca %struct.drm_plane_state*, align 8
  %plane.addr = alloca %struct.drm_plane*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on33 = alloca i32, align 4
  %tmp58 = alloca i64, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !7512, metadata !DIExpression()), !dbg !7513
  store %struct.drm_plane_state* %old_plane_state, %struct.drm_plane_state** %old_plane_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state.addr, metadata !7514, metadata !DIExpression()), !dbg !7515
  store %struct.drm_plane_state* %plane_state, %struct.drm_plane_state** %plane_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state.addr, metadata !7516, metadata !DIExpression()), !dbg !7517
  store %struct.drm_plane* %plane, %struct.drm_plane** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane.addr, metadata !7518, metadata !DIExpression()), !dbg !7519
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !7520, metadata !DIExpression()), !dbg !7521
  %0 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state.addr, align 8, !dbg !7522
  %crtc = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %0, i32 0, i32 1, !dbg !7524
  %1 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7524
  %tobool = icmp ne %struct.drm_crtc* %1, null, !dbg !7522
  br i1 %tobool, label %if.then, label %if.end27, !dbg !7525

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7526
  %3 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state.addr, align 8, !dbg !7528
  %crtc1 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %3, i32 0, i32 1, !dbg !7529
  %4 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc1, align 8, !dbg !7529
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %2, %struct.drm_crtc* %4) #9, !dbg !7530
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7531
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7532, metadata !DIExpression()), !dbg !7535
  %5 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7535
  %tobool2 = icmp ne %struct.drm_crtc_state* %5, null, !dbg !7535
  %lnot = xor i1 %tobool2, true, !dbg !7535
  %lnot3 = xor i1 %lnot, true, !dbg !7535
  %lnot4 = xor i1 %lnot3, true, !dbg !7535
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !7535
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7535
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !7536
  %tobool5 = icmp ne i32 %6, 0, !dbg !7536
  %lnot6 = xor i1 %tobool5, true, !dbg !7536
  %lnot8 = xor i1 %lnot6, true, !dbg !7536
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !7536
  %conv = sext i32 %lnot.ext9 to i64, !dbg !7536
  %tobool10 = icmp ne i64 %conv, 0, !dbg !7536
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !7535

if.then11:                                        ; preds = %if.then
  br label %do.body, !dbg !7536

do.body:                                          ; preds = %if.then11
  br label %do.body12, !dbg !7538

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !7540

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !7538

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 86, i32 2305, i64 12) #8, !dbg !7542, !srcloc !7544
  br label %do.end14, !dbg !7542

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 267) #8, !dbg !7545, !srcloc !7547
  br label %do.body15, !dbg !7538

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !7548

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !7538

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !7538

if.end:                                           ; preds = %do.end17, %if.then
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !7535
  %tobool18 = icmp ne i32 %7, 0, !dbg !7535
  %lnot19 = xor i1 %tobool18, true, !dbg !7535
  %lnot21 = xor i1 %lnot19, true, !dbg !7535
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !7535
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !7535
  store i64 %conv23, i64* %tmp, align 8, !dbg !7536
  %8 = load i64, i64* %tmp, align 8, !dbg !7535
  %tobool24 = icmp ne i64 %8, 0, !dbg !7550
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !7551

if.then25:                                        ; preds = %if.end
  br label %if.end72, !dbg !7552

if.end26:                                         ; preds = %if.end
  %9 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7553
  %planes_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %9, i32 0, i32 3, !dbg !7554
  %bf.load = load i8, i8* %planes_changed, align 2, !dbg !7555
  %bf.clear = and i8 %bf.load, -2, !dbg !7555
  %bf.set = or i8 %bf.clear, 1, !dbg !7555
  store i8 %bf.set, i8* %planes_changed, align 2, !dbg !7555
  br label %if.end27, !dbg !7556

if.end27:                                         ; preds = %if.end26, %entry
  %10 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7557
  %crtc28 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %10, i32 0, i32 1, !dbg !7559
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc28, align 8, !dbg !7559
  %tobool29 = icmp ne %struct.drm_crtc* %11, null, !dbg !7557
  br i1 %tobool29, label %if.then30, label %if.end72, !dbg !7560

if.then30:                                        ; preds = %if.end27
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7561
  %13 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state.addr, align 8, !dbg !7563
  %crtc31 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %13, i32 0, i32 1, !dbg !7564
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc31, align 8, !dbg !7564
  %call32 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %12, %struct.drm_crtc* %14) #9, !dbg !7565
  store %struct.drm_crtc_state* %call32, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7566
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on33, metadata !7567, metadata !DIExpression()), !dbg !7570
  %15 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7570
  %tobool34 = icmp ne %struct.drm_crtc_state* %15, null, !dbg !7570
  %lnot35 = xor i1 %tobool34, true, !dbg !7570
  %lnot37 = xor i1 %lnot35, true, !dbg !7570
  %lnot39 = xor i1 %lnot37, true, !dbg !7570
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !7570
  store i32 %lnot.ext40, i32* %__ret_warn_on33, align 4, !dbg !7570
  %16 = load i32, i32* %__ret_warn_on33, align 4, !dbg !7571
  %tobool41 = icmp ne i32 %16, 0, !dbg !7571
  %lnot42 = xor i1 %tobool41, true, !dbg !7571
  %lnot44 = xor i1 %lnot42, true, !dbg !7571
  %lnot.ext45 = zext i1 %lnot44 to i32, !dbg !7571
  %conv46 = sext i32 %lnot.ext45 to i64, !dbg !7571
  %tobool47 = icmp ne i64 %conv46, 0, !dbg !7571
  br i1 %tobool47, label %if.then48, label %if.end57, !dbg !7570

if.then48:                                        ; preds = %if.then30
  br label %do.body49, !dbg !7571

do.body49:                                        ; preds = %if.then48
  br label %do.body50, !dbg !7573

do.body50:                                        ; preds = %do.body49
  br label %do.end51, !dbg !7575

do.end51:                                         ; preds = %do.body50
  br label %do.body52, !dbg !7573

do.body52:                                        ; preds = %do.end51
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 95, i32 2305, i64 12) #8, !dbg !7577, !srcloc !7579
  br label %do.end53, !dbg !7577

do.end53:                                         ; preds = %do.body52
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 268) #8, !dbg !7580, !srcloc !7582
  br label %do.body54, !dbg !7573

do.body54:                                        ; preds = %do.end53
  br label %do.end55, !dbg !7583

do.end55:                                         ; preds = %do.body54
  br label %do.end56, !dbg !7573

do.end56:                                         ; preds = %do.end55
  br label %if.end57, !dbg !7573

if.end57:                                         ; preds = %do.end56, %if.then30
  %17 = load i32, i32* %__ret_warn_on33, align 4, !dbg !7570
  %tobool59 = icmp ne i32 %17, 0, !dbg !7570
  %lnot60 = xor i1 %tobool59, true, !dbg !7570
  %lnot62 = xor i1 %lnot60, true, !dbg !7570
  %lnot.ext63 = zext i1 %lnot62 to i32, !dbg !7570
  %conv64 = sext i32 %lnot.ext63 to i64, !dbg !7570
  store i64 %conv64, i64* %tmp58, align 8, !dbg !7571
  %18 = load i64, i64* %tmp58, align 8, !dbg !7570
  %tobool65 = icmp ne i64 %18, 0, !dbg !7585
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !7586

if.then66:                                        ; preds = %if.end57
  br label %if.end72, !dbg !7587

if.end67:                                         ; preds = %if.end57
  %19 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7588
  %planes_changed68 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %19, i32 0, i32 3, !dbg !7589
  %bf.load69 = load i8, i8* %planes_changed68, align 2, !dbg !7590
  %bf.clear70 = and i8 %bf.load69, -2, !dbg !7590
  %bf.set71 = or i8 %bf.clear70, 1, !dbg !7590
  store i8 %bf.set71, i8* %planes_changed68, align 2, !dbg !7590
  br label %if.end72, !dbg !7591

if.end72:                                         ; preds = %if.then25, %if.then66, %if.end67, %if.end27
  ret void, !dbg !7592
}

; Function Attrs: noredzone
declare dso_local void @drm_atomic_helper_check_plane_damage(%struct.drm_atomic_state*, %struct.drm_plane_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_check(%struct.drm_device* %dev, %struct.drm_atomic_state* %state) #0 !dbg !7593 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7594, metadata !DIExpression()), !dbg !7595
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !7596, metadata !DIExpression()), !dbg !7597
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7598, metadata !DIExpression()), !dbg !7599
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7600
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7601
  %call = call i32 @drm_atomic_helper_check_modeset(%struct.drm_device* %0, %struct.drm_atomic_state* %1) #9, !dbg !7602
  store i32 %call, i32* %ret, align 4, !dbg !7603
  %2 = load i32, i32* %ret, align 4, !dbg !7604
  %tobool = icmp ne i32 %2, 0, !dbg !7604
  br i1 %tobool, label %if.then, label %if.end, !dbg !7606

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %ret, align 4, !dbg !7607
  store i32 %3, i32* %retval, align 4, !dbg !7608
  br label %return, !dbg !7608

if.end:                                           ; preds = %entry
  %4 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7609
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %4, i32 0, i32 35, !dbg !7611
  %normalize_zpos = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 99, !dbg !7612
  %5 = load i8, i8* %normalize_zpos, align 2, !dbg !7612
  %tobool1 = trunc i8 %5 to i1, !dbg !7612
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !7613

if.then2:                                         ; preds = %if.end
  %6 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7614
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7616
  %call3 = call i32 @drm_atomic_normalize_zpos(%struct.drm_device* %6, %struct.drm_atomic_state* %7) #9, !dbg !7617
  store i32 %call3, i32* %ret, align 4, !dbg !7618
  %8 = load i32, i32* %ret, align 4, !dbg !7619
  %tobool4 = icmp ne i32 %8, 0, !dbg !7619
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !7621

if.then5:                                         ; preds = %if.then2
  %9 = load i32, i32* %ret, align 4, !dbg !7622
  store i32 %9, i32* %retval, align 4, !dbg !7623
  br label %return, !dbg !7623

if.end6:                                          ; preds = %if.then2
  br label %if.end7, !dbg !7624

if.end7:                                          ; preds = %if.end6, %if.end
  %10 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7625
  %11 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7626
  %call8 = call i32 @drm_atomic_helper_check_planes(%struct.drm_device* %10, %struct.drm_atomic_state* %11) #9, !dbg !7627
  store i32 %call8, i32* %ret, align 4, !dbg !7628
  %12 = load i32, i32* %ret, align 4, !dbg !7629
  %tobool9 = icmp ne i32 %12, 0, !dbg !7629
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !7631

if.then10:                                        ; preds = %if.end7
  %13 = load i32, i32* %ret, align 4, !dbg !7632
  store i32 %13, i32* %retval, align 4, !dbg !7633
  br label %return, !dbg !7633

if.end11:                                         ; preds = %if.end7
  %14 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7634
  %legacy_cursor_update = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %14, i32 0, i32 2, !dbg !7636
  %bf.load = load i8, i8* %legacy_cursor_update, align 8, !dbg !7636
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !7636
  %bf.clear = and i8 %bf.lshr, 1, !dbg !7636
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !7636
  br i1 %bf.cast, label %if.then12, label %if.end18, !dbg !7637

if.then12:                                        ; preds = %if.end11
  %15 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7638
  %16 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7639
  %call13 = call i32 @drm_atomic_helper_async_check(%struct.drm_device* %15, %struct.drm_atomic_state* %16) #9, !dbg !7640
  %tobool14 = icmp ne i32 %call13, 0, !dbg !7641
  %lnot = xor i1 %tobool14, true, !dbg !7641
  %17 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7642
  %async_update = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %17, i32 0, i32 2, !dbg !7643
  %18 = zext i1 %lnot to i8, !dbg !7644
  %bf.load15 = load i8, i8* %async_update, align 8, !dbg !7644
  %bf.shl = shl i8 %18, 2, !dbg !7644
  %bf.clear16 = and i8 %bf.load15, -5, !dbg !7644
  %bf.set = or i8 %bf.clear16, %bf.shl, !dbg !7644
  store i8 %bf.set, i8* %async_update, align 8, !dbg !7644
  %tobool17 = trunc i8 %18 to i1, !dbg !7644
  br label %if.end18, !dbg !7642

if.end18:                                         ; preds = %if.then12, %if.end11
  %19 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7645
  call void @drm_self_refresh_helper_alter_state(%struct.drm_atomic_state* %19) #9, !dbg !7646
  %20 = load i32, i32* %ret, align 4, !dbg !7647
  store i32 %20, i32* %retval, align 4, !dbg !7648
  br label %return, !dbg !7648

return:                                           ; preds = %if.end18, %if.then10, %if.then5, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !7649
  ret i32 %21, !dbg !7649
}

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_normalize_zpos(%struct.drm_device*, %struct.drm_atomic_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_async_check(%struct.drm_device* %dev, %struct.drm_atomic_state* %state) #0 !dbg !7650 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %funcs = alloca %struct.drm_plane_helper_funcs*, align 8
  %i = alloca i32, align 4
  %n_planes = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7651, metadata !DIExpression()), !dbg !7652
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !7655, metadata !DIExpression()), !dbg !7656
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !7657, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !7659, metadata !DIExpression()), !dbg !7660
  store %struct.drm_plane* null, %struct.drm_plane** %plane, align 8, !dbg !7660
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !7661, metadata !DIExpression()), !dbg !7662
  store %struct.drm_plane_state* null, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !7662
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !7663, metadata !DIExpression()), !dbg !7664
  store %struct.drm_plane_state* null, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7664
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %funcs, metadata !7665, metadata !DIExpression()), !dbg !7666
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7667, metadata !DIExpression()), !dbg !7668
  call void @llvm.dbg.declare(metadata i32* %n_planes, metadata !7669, metadata !DIExpression()), !dbg !7670
  store i32 0, i32* %n_planes, align 4, !dbg !7670
  store i32 0, i32* %i, align 4, !dbg !7671
  br label %for.cond, !dbg !7671

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7673
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7673
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !7673
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !7673
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !7673
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !7673
  %3 = load i32, i32* %num_crtc, align 8, !dbg !7673
  %cmp = icmp slt i32 %0, %3, !dbg !7673
  br i1 %cmp, label %for.body, label %for.end, !dbg !7671

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7675
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !7675
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !7675
  %6 = load i32, i32* %i, align 4, !dbg !7675
  %idxprom = sext i32 %6 to i64, !dbg !7675
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !7675
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !7675
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !7675
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !7675
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !7675

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7675
  %crtcs2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !7675
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs2, align 8, !dbg !7675
  %10 = load i32, i32* %i, align 4, !dbg !7675
  %idxprom3 = sext i32 %10 to i64, !dbg !7675
  %arrayidx4 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom3, !dbg !7675
  %ptr5 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx4, i32 0, i32 0, !dbg !7675
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr5, align 8, !dbg !7675
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !7675
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7675
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7675
  %crtcs6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !7675
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs6, align 8, !dbg !7675
  %15 = load i32, i32* %i, align 4, !dbg !7675
  %idxprom7 = sext i32 %15 to i64, !dbg !7675
  %arrayidx8 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom7, !dbg !7675
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx8, i32 0, i32 3, !dbg !7675
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !7675
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7675
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7675
  br i1 true, label %if.else, label %if.then, !dbg !7673

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end10, !dbg !7677

if.else:                                          ; preds = %land.lhs.true
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !7679
  %call = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %18) #9, !dbg !7682
  br i1 %call, label %if.then9, label %if.end, !dbg !7683

if.then9:                                         ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !7684
  br label %return, !dbg !7684

if.end:                                           ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7675

for.inc:                                          ; preds = %if.end10
  %19 = load i32, i32* %i, align 4, !dbg !7673
  %inc = add i32 %19, 1, !dbg !7673
  store i32 %inc, i32* %i, align 4, !dbg !7673
  br label %for.cond, !dbg !7673, !llvm.loop !7685

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7687
  br label %for.cond11, !dbg !7687

for.cond11:                                       ; preds = %for.inc36, %for.end
  %20 = load i32, i32* %i, align 4, !dbg !7689
  %21 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7689
  %dev12 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %21, i32 0, i32 1, !dbg !7689
  %22 = load %struct.drm_device*, %struct.drm_device** %dev12, align 8, !dbg !7689
  %mode_config13 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %22, i32 0, i32 35, !dbg !7689
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config13, i32 0, i32 17, !dbg !7689
  %23 = load i32, i32* %num_total_plane, align 8, !dbg !7689
  %cmp14 = icmp slt i32 %20, %23, !dbg !7689
  br i1 %cmp14, label %for.body15, label %for.end38, !dbg !7687

for.body15:                                       ; preds = %for.cond11
  %24 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7691
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %24, i32 0, i32 3, !dbg !7691
  %25 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !7691
  %26 = load i32, i32* %i, align 4, !dbg !7691
  %idxprom16 = sext i32 %26 to i64, !dbg !7691
  %arrayidx17 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %25, i64 %idxprom16, !dbg !7691
  %ptr18 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx17, i32 0, i32 0, !dbg !7691
  %27 = load %struct.drm_plane*, %struct.drm_plane** %ptr18, align 8, !dbg !7691
  %tobool19 = icmp ne %struct.drm_plane* %27, null, !dbg !7691
  br i1 %tobool19, label %land.lhs.true20, label %if.then32, !dbg !7691

land.lhs.true20:                                  ; preds = %for.body15
  %28 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7691
  %planes21 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %28, i32 0, i32 3, !dbg !7691
  %29 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes21, align 8, !dbg !7691
  %30 = load i32, i32* %i, align 4, !dbg !7691
  %idxprom22 = sext i32 %30 to i64, !dbg !7691
  %arrayidx23 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %29, i64 %idxprom22, !dbg !7691
  %ptr24 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx23, i32 0, i32 0, !dbg !7691
  %31 = load %struct.drm_plane*, %struct.drm_plane** %ptr24, align 8, !dbg !7691
  store %struct.drm_plane* %31, %struct.drm_plane** %plane, align 8, !dbg !7691
  %32 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7691
  %33 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7691
  %planes25 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %33, i32 0, i32 3, !dbg !7691
  %34 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes25, align 8, !dbg !7691
  %35 = load i32, i32* %i, align 4, !dbg !7691
  %idxprom26 = sext i32 %35 to i64, !dbg !7691
  %arrayidx27 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %34, i64 %idxprom26, !dbg !7691
  %old_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx27, i32 0, i32 2, !dbg !7691
  %36 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state, align 8, !dbg !7691
  store %struct.drm_plane_state* %36, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !7691
  %37 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7691
  %planes28 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %37, i32 0, i32 3, !dbg !7691
  %38 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes28, align 8, !dbg !7691
  %39 = load i32, i32* %i, align 4, !dbg !7691
  %idxprom29 = sext i32 %39 to i64, !dbg !7691
  %arrayidx30 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %38, i64 %idxprom29, !dbg !7691
  %new_state31 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx30, i32 0, i32 3, !dbg !7691
  %40 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state31, align 8, !dbg !7691
  store %struct.drm_plane_state* %40, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7691
  br i1 true, label %if.else33, label %if.then32, !dbg !7689

if.then32:                                        ; preds = %land.lhs.true20, %for.body15
  br label %if.end35, !dbg !7693

if.else33:                                        ; preds = %land.lhs.true20
  %41 = load i32, i32* %n_planes, align 4, !dbg !7695
  %inc34 = add i32 %41, 1, !dbg !7695
  store i32 %inc34, i32* %n_planes, align 4, !dbg !7695
  br label %if.end35

if.end35:                                         ; preds = %if.else33, %if.then32
  br label %for.inc36, !dbg !7691

for.inc36:                                        ; preds = %if.end35
  %42 = load i32, i32* %i, align 4, !dbg !7689
  %inc37 = add i32 %42, 1, !dbg !7689
  store i32 %inc37, i32* %i, align 4, !dbg !7689
  br label %for.cond11, !dbg !7689, !llvm.loop !7696

for.end38:                                        ; preds = %for.cond11
  %43 = load i32, i32* %n_planes, align 4, !dbg !7698
  %cmp39 = icmp ne i32 %43, 1, !dbg !7700
  br i1 %cmp39, label %if.then40, label %if.end41, !dbg !7701

if.then40:                                        ; preds = %for.end38
  store i32 -22, i32* %retval, align 4, !dbg !7702
  br label %return, !dbg !7702

if.end41:                                         ; preds = %for.end38
  %44 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7703
  %crtc42 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %44, i32 0, i32 1, !dbg !7705
  %45 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc42, align 8, !dbg !7705
  %tobool43 = icmp ne %struct.drm_crtc* %45, null, !dbg !7703
  br i1 %tobool43, label %lor.lhs.false, label %if.then47, !dbg !7706

lor.lhs.false:                                    ; preds = %if.end41
  %46 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !7707
  %crtc44 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %46, i32 0, i32 1, !dbg !7708
  %47 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc44, align 8, !dbg !7708
  %48 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7709
  %crtc45 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %48, i32 0, i32 1, !dbg !7710
  %49 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc45, align 8, !dbg !7710
  %cmp46 = icmp ne %struct.drm_crtc* %47, %49, !dbg !7711
  br i1 %cmp46, label %if.then47, label %if.end48, !dbg !7712

if.then47:                                        ; preds = %lor.lhs.false, %if.end41
  store i32 -22, i32* %retval, align 4, !dbg !7713
  br label %return, !dbg !7713

if.end48:                                         ; preds = %lor.lhs.false
  %50 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7714
  %helper_private = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %50, i32 0, i32 18, !dbg !7715
  %51 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private, align 8, !dbg !7715
  store %struct.drm_plane_helper_funcs* %51, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !7716
  %52 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !7717
  %atomic_async_update = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %52, i32 0, i32 6, !dbg !7719
  %53 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_async_update, align 8, !dbg !7719
  %tobool49 = icmp ne void (%struct.drm_plane*, %struct.drm_plane_state*)* %53, null, !dbg !7717
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !7720

if.then50:                                        ; preds = %if.end48
  store i32 -22, i32* %retval, align 4, !dbg !7721
  br label %return, !dbg !7721

if.end51:                                         ; preds = %if.end48
  %54 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7722
  %fence = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %54, i32 0, i32 3, !dbg !7724
  %55 = load %struct.dma_fence*, %struct.dma_fence** %fence, align 8, !dbg !7724
  %tobool52 = icmp ne %struct.dma_fence* %55, null, !dbg !7722
  br i1 %tobool52, label %if.then53, label %if.end54, !dbg !7725

if.then53:                                        ; preds = %if.end51
  store i32 -22, i32* %retval, align 4, !dbg !7726
  br label %return, !dbg !7726

if.end54:                                         ; preds = %if.end51
  %56 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !7727
  %commit = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %56, i32 0, i32 23, !dbg !7729
  %57 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !7729
  %tobool55 = icmp ne %struct.drm_crtc_commit* %57, null, !dbg !7727
  br i1 %tobool55, label %land.lhs.true56, label %if.end60, !dbg !7730

land.lhs.true56:                                  ; preds = %if.end54
  %58 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !7731
  %commit57 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %58, i32 0, i32 23, !dbg !7732
  %59 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit57, align 8, !dbg !7732
  %hw_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %59, i32 0, i32 3, !dbg !7733
  %call58 = call zeroext i1 @try_wait_for_completion(%struct.completion* %hw_done) #9, !dbg !7734
  br i1 %call58, label %if.end60, label %if.then59, !dbg !7735

if.then59:                                        ; preds = %land.lhs.true56
  store i32 -16, i32* %retval, align 4, !dbg !7736
  br label %return, !dbg !7736

if.end60:                                         ; preds = %land.lhs.true56, %if.end54
  %60 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !7737
  %atomic_async_check = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %60, i32 0, i32 5, !dbg !7738
  %61 = load i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_async_check, align 8, !dbg !7738
  %62 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !7739
  %63 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7740
  %call61 = call i32 %61(%struct.drm_plane* %62, %struct.drm_plane_state* %63) #9, !dbg !7737
  store i32 %call61, i32* %retval, align 4, !dbg !7741
  br label %return, !dbg !7741

return:                                           ; preds = %if.end60, %if.then59, %if.then53, %if.then50, %if.then47, %if.then40, %if.then9
  %64 = load i32, i32* %retval, align 4, !dbg !7742
  ret i32 %64, !dbg !7742
}

; Function Attrs: noredzone
declare dso_local void @drm_self_refresh_helper_alter_state(%struct.drm_atomic_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_update_legacy_modeset_state(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !7743 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %old_conn_state = alloca %struct.drm_connector_state*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %mode = alloca i32, align 4
  %__ret_warn_on85 = alloca i32, align 4
  %tmp110 = alloca i64, align 8
  %primary = alloca %struct.drm_plane*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !7746, metadata !DIExpression()), !dbg !7747
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !7748, metadata !DIExpression()), !dbg !7749
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_conn_state, metadata !7750, metadata !DIExpression()), !dbg !7751
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !7752, metadata !DIExpression()), !dbg !7753
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !7754, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !7756, metadata !DIExpression()), !dbg !7757
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7758, metadata !DIExpression()), !dbg !7759
  store i32 0, i32* %i, align 4, !dbg !7760
  br label %for.cond, !dbg !7760

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7762
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7762
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 5, !dbg !7762
  %2 = load i32, i32* %num_connector, align 8, !dbg !7762
  %cmp = icmp slt i32 %0, %2, !dbg !7762
  br i1 %cmp, label %for.body, label %for.end, !dbg !7760

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7764
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 6, !dbg !7764
  %4 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !7764
  %5 = load i32, i32* %i, align 4, !dbg !7764
  %idxprom = sext i32 %5 to i64, !dbg !7764
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %4, i64 %idxprom, !dbg !7764
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !7764
  %6 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !7764
  %tobool = icmp ne %struct.drm_connector* %6, null, !dbg !7764
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !7764

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7764
  %connectors1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 6, !dbg !7764
  %8 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors1, align 8, !dbg !7764
  %9 = load i32, i32* %i, align 4, !dbg !7764
  %idxprom2 = sext i32 %9 to i64, !dbg !7764
  %arrayidx3 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %8, i64 %idxprom2, !dbg !7764
  %ptr4 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx3, i32 0, i32 0, !dbg !7764
  %10 = load %struct.drm_connector*, %struct.drm_connector** %ptr4, align 8, !dbg !7764
  store %struct.drm_connector* %10, %struct.drm_connector** %connector, align 8, !dbg !7764
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7764
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7764
  %connectors5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 6, !dbg !7764
  %13 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors5, align 8, !dbg !7764
  %14 = load i32, i32* %i, align 4, !dbg !7764
  %idxprom6 = sext i32 %14 to i64, !dbg !7764
  %arrayidx7 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %13, i64 %idxprom6, !dbg !7764
  %old_state8 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx7, i32 0, i32 2, !dbg !7764
  %15 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state8, align 8, !dbg !7764
  store %struct.drm_connector_state* %15, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !7764
  %16 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7764
  %connectors9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %16, i32 0, i32 6, !dbg !7764
  %17 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors9, align 8, !dbg !7764
  %18 = load i32, i32* %i, align 4, !dbg !7764
  %idxprom10 = sext i32 %18 to i64, !dbg !7764
  %arrayidx11 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %17, i64 %idxprom10, !dbg !7764
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx11, i32 0, i32 3, !dbg !7764
  %19 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !7764
  store %struct.drm_connector_state* %19, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7764
  br i1 true, label %if.else, label %if.then, !dbg !7762

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end59, !dbg !7766

if.else:                                          ; preds = %land.lhs.true
  %20 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7768
  %encoder = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %20, i32 0, i32 35, !dbg !7771
  %21 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !7771
  %tobool12 = icmp ne %struct.drm_encoder* %21, null, !dbg !7768
  br i1 %tobool12, label %if.then13, label %if.end41, !dbg !7772

if.then13:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7773, metadata !DIExpression()), !dbg !7776
  %22 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7776
  %encoder14 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %22, i32 0, i32 35, !dbg !7776
  %23 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder14, align 8, !dbg !7776
  %crtc15 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %23, i32 0, i32 8, !dbg !7776
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc15, align 8, !dbg !7776
  %tobool16 = icmp ne %struct.drm_crtc* %24, null, !dbg !7776
  %lnot = xor i1 %tobool16, true, !dbg !7776
  %lnot17 = xor i1 %lnot, true, !dbg !7776
  %lnot18 = xor i1 %lnot17, true, !dbg !7776
  %lnot.ext = zext i1 %lnot18 to i32, !dbg !7776
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !7776
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !7777
  %tobool19 = icmp ne i32 %25, 0, !dbg !7777
  %lnot20 = xor i1 %tobool19, true, !dbg !7777
  %lnot22 = xor i1 %lnot20, true, !dbg !7777
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !7777
  %conv = sext i32 %lnot.ext23 to i64, !dbg !7777
  %tobool24 = icmp ne i64 %conv, 0, !dbg !7777
  br i1 %tobool24, label %if.then25, label %if.end, !dbg !7776

if.then25:                                        ; preds = %if.then13
  br label %do.body, !dbg !7777

do.body:                                          ; preds = %if.then25
  br label %do.body26, !dbg !7779

do.body26:                                        ; preds = %do.body
  br label %do.end, !dbg !7781

do.end:                                           ; preds = %do.body26
  br label %do.body27, !dbg !7779

do.body27:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1142, i32 2305, i64 12) #8, !dbg !7783, !srcloc !7785
  br label %do.end28, !dbg !7783

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 279) #8, !dbg !7786, !srcloc !7788
  br label %do.body29, !dbg !7779

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !7789

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !7779

do.end31:                                         ; preds = %do.end30
  br label %if.end, !dbg !7779

if.end:                                           ; preds = %do.end31, %if.then13
  %26 = load i32, i32* %__ret_warn_on, align 4, !dbg !7776
  %tobool32 = icmp ne i32 %26, 0, !dbg !7776
  %lnot33 = xor i1 %tobool32, true, !dbg !7776
  %lnot35 = xor i1 %lnot33, true, !dbg !7776
  %lnot.ext36 = zext i1 %lnot35 to i32, !dbg !7776
  %conv37 = sext i32 %lnot.ext36 to i64, !dbg !7776
  store i64 %conv37, i64* %tmp, align 8, !dbg !7777
  %27 = load i64, i64* %tmp, align 8, !dbg !7776
  %28 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7791
  %encoder38 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %28, i32 0, i32 35, !dbg !7792
  %29 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder38, align 8, !dbg !7792
  %crtc39 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %29, i32 0, i32 8, !dbg !7793
  store %struct.drm_crtc* null, %struct.drm_crtc** %crtc39, align 8, !dbg !7794
  %30 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7795
  %encoder40 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %30, i32 0, i32 35, !dbg !7796
  store %struct.drm_encoder* null, %struct.drm_encoder** %encoder40, align 8, !dbg !7797
  br label %if.end41, !dbg !7798

if.end41:                                         ; preds = %if.end, %if.else
  %31 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7799
  %crtc42 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %31, i32 0, i32 1, !dbg !7800
  %32 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc42, align 8, !dbg !7800
  store %struct.drm_crtc* %32, %struct.drm_crtc** %crtc, align 8, !dbg !7801
  %33 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7802
  %tobool43 = icmp ne %struct.drm_crtc* %33, null, !dbg !7802
  br i1 %tobool43, label %lor.lhs.false, label %land.lhs.true44, !dbg !7804

land.lhs.true44:                                  ; preds = %if.end41
  %34 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !7805
  %crtc45 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %34, i32 0, i32 1, !dbg !7806
  %35 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc45, align 8, !dbg !7806
  %tobool46 = icmp ne %struct.drm_crtc* %35, null, !dbg !7805
  br i1 %tobool46, label %if.then50, label %lor.lhs.false, !dbg !7807

lor.lhs.false:                                    ; preds = %land.lhs.true44, %if.end41
  %36 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7808
  %tobool47 = icmp ne %struct.drm_crtc* %36, null, !dbg !7808
  br i1 %tobool47, label %land.lhs.true48, label %if.end58, !dbg !7809

land.lhs.true48:                                  ; preds = %lor.lhs.false
  %37 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7810
  %state = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %37, i32 0, i32 21, !dbg !7811
  %38 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state, align 8, !dbg !7811
  %call = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %38) #9, !dbg !7812
  br i1 %call, label %if.then50, label %if.end58, !dbg !7813

if.then50:                                        ; preds = %land.lhs.true48, %land.lhs.true44
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7814, metadata !DIExpression()), !dbg !7816
  store i32 3, i32* %mode, align 4, !dbg !7816
  %39 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7817
  %tobool51 = icmp ne %struct.drm_crtc* %39, null, !dbg !7817
  br i1 %tobool51, label %land.lhs.true52, label %if.end57, !dbg !7819

land.lhs.true52:                                  ; preds = %if.then50
  %40 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7820
  %state53 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %40, i32 0, i32 21, !dbg !7821
  %41 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state53, align 8, !dbg !7821
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %41, i32 0, i32 2, !dbg !7822
  %42 = load i8, i8* %active, align 1, !dbg !7822
  %tobool54 = trunc i8 %42 to i1, !dbg !7822
  br i1 %tobool54, label %if.then56, label %if.end57, !dbg !7823

if.then56:                                        ; preds = %land.lhs.true52
  store i32 0, i32* %mode, align 4, !dbg !7824
  br label %if.end57, !dbg !7825

if.end57:                                         ; preds = %if.then56, %land.lhs.true52, %if.then50
  %43 = load i32, i32* %mode, align 4, !dbg !7826
  %44 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7827
  %dpms = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %44, i32 0, i32 28, !dbg !7828
  store i32 %43, i32* %dpms, align 4, !dbg !7829
  br label %if.end58, !dbg !7830

if.end58:                                         ; preds = %if.end57, %land.lhs.true48, %lor.lhs.false
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then
  br label %for.inc, !dbg !7764

for.inc:                                          ; preds = %if.end59
  %45 = load i32, i32* %i, align 4, !dbg !7762
  %inc = add i32 %45, 1, !dbg !7762
  store i32 %inc, i32* %i, align 4, !dbg !7762
  br label %for.cond, !dbg !7762, !llvm.loop !7831

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7833
  br label %for.cond60, !dbg !7833

for.cond60:                                       ; preds = %for.inc126, %for.end
  %46 = load i32, i32* %i, align 4, !dbg !7835
  %47 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7835
  %num_connector61 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %47, i32 0, i32 5, !dbg !7835
  %48 = load i32, i32* %num_connector61, align 8, !dbg !7835
  %cmp62 = icmp slt i32 %46, %48, !dbg !7835
  br i1 %cmp62, label %for.body64, label %for.end128, !dbg !7833

for.body64:                                       ; preds = %for.cond60
  %49 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7837
  %connectors65 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %49, i32 0, i32 6, !dbg !7837
  %50 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors65, align 8, !dbg !7837
  %51 = load i32, i32* %i, align 4, !dbg !7837
  %idxprom66 = sext i32 %51 to i64, !dbg !7837
  %arrayidx67 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %50, i64 %idxprom66, !dbg !7837
  %ptr68 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx67, i32 0, i32 0, !dbg !7837
  %52 = load %struct.drm_connector*, %struct.drm_connector** %ptr68, align 8, !dbg !7837
  %tobool69 = icmp ne %struct.drm_connector* %52, null, !dbg !7837
  br i1 %tobool69, label %land.lhs.true70, label %if.then79, !dbg !7837

land.lhs.true70:                                  ; preds = %for.body64
  %53 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7837
  %connectors71 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %53, i32 0, i32 6, !dbg !7837
  %54 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors71, align 8, !dbg !7837
  %55 = load i32, i32* %i, align 4, !dbg !7837
  %idxprom72 = sext i32 %55 to i64, !dbg !7837
  %arrayidx73 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %54, i64 %idxprom72, !dbg !7837
  %ptr74 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx73, i32 0, i32 0, !dbg !7837
  %56 = load %struct.drm_connector*, %struct.drm_connector** %ptr74, align 8, !dbg !7837
  store %struct.drm_connector* %56, %struct.drm_connector** %connector, align 8, !dbg !7837
  %57 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7837
  %58 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7837
  %connectors75 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %58, i32 0, i32 6, !dbg !7837
  %59 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors75, align 8, !dbg !7837
  %60 = load i32, i32* %i, align 4, !dbg !7837
  %idxprom76 = sext i32 %60 to i64, !dbg !7837
  %arrayidx77 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %59, i64 %idxprom76, !dbg !7837
  %new_state78 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx77, i32 0, i32 3, !dbg !7837
  %61 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state78, align 8, !dbg !7837
  store %struct.drm_connector_state* %61, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7837
  %62 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7837
  br i1 true, label %if.else80, label %if.then79, !dbg !7835

if.then79:                                        ; preds = %land.lhs.true70, %for.body64
  br label %if.end125, !dbg !7839

if.else80:                                        ; preds = %land.lhs.true70
  %63 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7841
  %crtc81 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %63, i32 0, i32 1, !dbg !7844
  %64 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc81, align 8, !dbg !7844
  %tobool82 = icmp ne %struct.drm_crtc* %64, null, !dbg !7841
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !7845

if.then83:                                        ; preds = %if.else80
  br label %for.inc126, !dbg !7846

if.end84:                                         ; preds = %if.else80
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on85, metadata !7847, metadata !DIExpression()), !dbg !7850
  %65 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7850
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %65, i32 0, i32 2, !dbg !7850
  %66 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !7850
  %tobool86 = icmp ne %struct.drm_encoder* %66, null, !dbg !7850
  %lnot87 = xor i1 %tobool86, true, !dbg !7850
  %lnot89 = xor i1 %lnot87, true, !dbg !7850
  %lnot91 = xor i1 %lnot89, true, !dbg !7850
  %lnot.ext92 = zext i1 %lnot91 to i32, !dbg !7850
  store i32 %lnot.ext92, i32* %__ret_warn_on85, align 4, !dbg !7850
  %67 = load i32, i32* %__ret_warn_on85, align 4, !dbg !7851
  %tobool93 = icmp ne i32 %67, 0, !dbg !7851
  %lnot94 = xor i1 %tobool93, true, !dbg !7851
  %lnot96 = xor i1 %lnot94, true, !dbg !7851
  %lnot.ext97 = zext i1 %lnot96 to i32, !dbg !7851
  %conv98 = sext i32 %lnot.ext97 to i64, !dbg !7851
  %tobool99 = icmp ne i64 %conv98, 0, !dbg !7851
  br i1 %tobool99, label %if.then100, label %if.end109, !dbg !7850

if.then100:                                       ; preds = %if.end84
  br label %do.body101, !dbg !7851

do.body101:                                       ; preds = %if.then100
  br label %do.body102, !dbg !7853

do.body102:                                       ; preds = %do.body101
  br label %do.end103, !dbg !7855

do.end103:                                        ; preds = %do.body102
  br label %do.body104, !dbg !7853

do.body104:                                       ; preds = %do.end103
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1165, i32 2305, i64 12) #8, !dbg !7857, !srcloc !7859
  br label %do.end105, !dbg !7857

do.end105:                                        ; preds = %do.body104
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 280) #8, !dbg !7860, !srcloc !7862
  br label %do.body106, !dbg !7853

do.body106:                                       ; preds = %do.end105
  br label %do.end107, !dbg !7863

do.end107:                                        ; preds = %do.body106
  br label %do.end108, !dbg !7853

do.end108:                                        ; preds = %do.end107
  br label %if.end109, !dbg !7853

if.end109:                                        ; preds = %do.end108, %if.end84
  %68 = load i32, i32* %__ret_warn_on85, align 4, !dbg !7850
  %tobool111 = icmp ne i32 %68, 0, !dbg !7850
  %lnot112 = xor i1 %tobool111, true, !dbg !7850
  %lnot114 = xor i1 %lnot112, true, !dbg !7850
  %lnot.ext115 = zext i1 %lnot114 to i32, !dbg !7850
  %conv116 = sext i32 %lnot.ext115 to i64, !dbg !7850
  store i64 %conv116, i64* %tmp110, align 8, !dbg !7851
  %69 = load i64, i64* %tmp110, align 8, !dbg !7850
  %tobool117 = icmp ne i64 %69, 0, !dbg !7865
  br i1 %tobool117, label %if.then118, label %if.end119, !dbg !7866

if.then118:                                       ; preds = %if.end109
  br label %for.inc126, !dbg !7867

if.end119:                                        ; preds = %if.end109
  %70 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7868
  %best_encoder120 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %70, i32 0, i32 2, !dbg !7869
  %71 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder120, align 8, !dbg !7869
  %72 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7870
  %encoder121 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %72, i32 0, i32 35, !dbg !7871
  store %struct.drm_encoder* %71, %struct.drm_encoder** %encoder121, align 8, !dbg !7872
  %73 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !7873
  %crtc122 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %73, i32 0, i32 1, !dbg !7874
  %74 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc122, align 8, !dbg !7874
  %75 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !7875
  %encoder123 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %75, i32 0, i32 35, !dbg !7876
  %76 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder123, align 8, !dbg !7876
  %crtc124 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %76, i32 0, i32 8, !dbg !7877
  store %struct.drm_crtc* %74, %struct.drm_crtc** %crtc124, align 8, !dbg !7878
  br label %if.end125

if.end125:                                        ; preds = %if.end119, %if.then79
  br label %for.inc126, !dbg !7837

for.inc126:                                       ; preds = %if.end125, %if.then118, %if.then83
  %77 = load i32, i32* %i, align 4, !dbg !7835
  %inc127 = add i32 %77, 1, !dbg !7835
  store i32 %inc127, i32* %i, align 4, !dbg !7835
  br label %for.cond60, !dbg !7835, !llvm.loop !7879

for.end128:                                       ; preds = %for.cond60
  store i32 0, i32* %i, align 4, !dbg !7881
  br label %for.cond129, !dbg !7881

for.cond129:                                      ; preds = %for.inc163, %for.end128
  %78 = load i32, i32* %i, align 4, !dbg !7883
  %79 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7883
  %dev130 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %79, i32 0, i32 1, !dbg !7883
  %80 = load %struct.drm_device*, %struct.drm_device** %dev130, align 8, !dbg !7883
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %80, i32 0, i32 35, !dbg !7883
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !7883
  %81 = load i32, i32* %num_crtc, align 8, !dbg !7883
  %cmp131 = icmp slt i32 %78, %81, !dbg !7883
  br i1 %cmp131, label %for.body133, label %for.end165, !dbg !7881

for.body133:                                      ; preds = %for.cond129
  %82 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7885
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %82, i32 0, i32 4, !dbg !7885
  %83 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !7885
  %84 = load i32, i32* %i, align 4, !dbg !7885
  %idxprom134 = sext i32 %84 to i64, !dbg !7885
  %arrayidx135 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %83, i64 %idxprom134, !dbg !7885
  %ptr136 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx135, i32 0, i32 0, !dbg !7885
  %85 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr136, align 8, !dbg !7885
  %tobool137 = icmp ne %struct.drm_crtc* %85, null, !dbg !7885
  br i1 %tobool137, label %land.lhs.true138, label %if.then147, !dbg !7885

land.lhs.true138:                                 ; preds = %for.body133
  %86 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7885
  %crtcs139 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %86, i32 0, i32 4, !dbg !7885
  %87 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs139, align 8, !dbg !7885
  %88 = load i32, i32* %i, align 4, !dbg !7885
  %idxprom140 = sext i32 %88 to i64, !dbg !7885
  %arrayidx141 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %87, i64 %idxprom140, !dbg !7885
  %ptr142 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx141, i32 0, i32 0, !dbg !7885
  %89 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr142, align 8, !dbg !7885
  store %struct.drm_crtc* %89, %struct.drm_crtc** %crtc, align 8, !dbg !7885
  %90 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7885
  %91 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7885
  %crtcs143 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %91, i32 0, i32 4, !dbg !7885
  %92 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs143, align 8, !dbg !7885
  %93 = load i32, i32* %i, align 4, !dbg !7885
  %idxprom144 = sext i32 %93 to i64, !dbg !7885
  %arrayidx145 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %92, i64 %idxprom144, !dbg !7885
  %new_state146 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx145, i32 0, i32 3, !dbg !7885
  %94 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state146, align 8, !dbg !7885
  store %struct.drm_crtc_state* %94, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7885
  %95 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7885
  br i1 true, label %if.else148, label %if.then147, !dbg !7883

if.then147:                                       ; preds = %land.lhs.true138, %for.body133
  br label %if.end162, !dbg !7887

if.else148:                                       ; preds = %land.lhs.true138
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %primary, metadata !7889, metadata !DIExpression()), !dbg !7891
  %96 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7892
  %primary149 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %96, i32 0, i32 6, !dbg !7893
  %97 = load %struct.drm_plane*, %struct.drm_plane** %primary149, align 8, !dbg !7893
  store %struct.drm_plane* %97, %struct.drm_plane** %primary, align 8, !dbg !7891
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !7894, metadata !DIExpression()), !dbg !7895
  %98 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7896
  %mode150 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %98, i32 0, i32 12, !dbg !7897
  %99 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7898
  %mode151 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %99, i32 0, i32 8, !dbg !7899
  %100 = bitcast %struct.drm_display_mode* %mode150 to i8*, !dbg !7899
  %101 = bitcast %struct.drm_display_mode* %mode151 to i8*, !dbg !7899
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 120, i1 false), !dbg !7899
  %102 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7900
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %102, i32 0, i32 1, !dbg !7901
  %103 = load i8, i8* %enable, align 8, !dbg !7901
  %tobool152 = trunc i8 %103 to i1, !dbg !7901
  %104 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7902
  %enabled = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %104, i32 0, i32 11, !dbg !7903
  %frombool = zext i1 %tobool152 to i8, !dbg !7904
  store i8 %frombool, i8* %enabled, align 4, !dbg !7904
  %105 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7905
  %106 = load %struct.drm_plane*, %struct.drm_plane** %primary, align 8, !dbg !7906
  %call153 = call %struct.drm_plane_state* @drm_atomic_get_new_plane_state(%struct.drm_atomic_state* %105, %struct.drm_plane* %106) #9, !dbg !7907
  store %struct.drm_plane_state* %call153, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7908
  %107 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7909
  %tobool154 = icmp ne %struct.drm_plane_state* %107, null, !dbg !7909
  br i1 %tobool154, label %land.lhs.true155, label %if.end161, !dbg !7911

land.lhs.true155:                                 ; preds = %if.else148
  %108 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7912
  %crtc156 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %108, i32 0, i32 1, !dbg !7913
  %109 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc156, align 8, !dbg !7913
  %110 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7914
  %cmp157 = icmp eq %struct.drm_crtc* %109, %110, !dbg !7915
  br i1 %cmp157, label %if.then159, label %if.end161, !dbg !7916

if.then159:                                       ; preds = %land.lhs.true155
  %111 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7917
  %src_x = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %111, i32 0, i32 8, !dbg !7919
  %112 = load i32, i32* %src_x, align 8, !dbg !7919
  %shr = lshr i32 %112, 16, !dbg !7920
  %113 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7921
  %x = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %113, i32 0, i32 14, !dbg !7922
  store i32 %shr, i32* %x, align 8, !dbg !7923
  %114 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !7924
  %src_y = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %114, i32 0, i32 9, !dbg !7925
  %115 = load i32, i32* %src_y, align 4, !dbg !7925
  %shr160 = lshr i32 %115, 16, !dbg !7926
  %116 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7927
  %y = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %116, i32 0, i32 15, !dbg !7928
  store i32 %shr160, i32* %y, align 4, !dbg !7929
  br label %if.end161, !dbg !7930

if.end161:                                        ; preds = %if.then159, %land.lhs.true155, %if.else148
  br label %if.end162

if.end162:                                        ; preds = %if.end161, %if.then147
  br label %for.inc163, !dbg !7885

for.inc163:                                       ; preds = %if.end162
  %117 = load i32, i32* %i, align 4, !dbg !7883
  %inc164 = add i32 %117, 1, !dbg !7883
  store i32 %inc164, i32* %i, align 4, !dbg !7883
  br label %for.cond129, !dbg !7883, !llvm.loop !7931

for.end165:                                       ; preds = %for.cond129
  ret void, !dbg !7933
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_plane_state* @drm_atomic_get_new_plane_state(%struct.drm_atomic_state* %state, %struct.drm_plane* %plane) #0 !dbg !7934 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %plane.addr = alloca %struct.drm_plane*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !7937, metadata !DIExpression()), !dbg !7938
  store %struct.drm_plane* %plane, %struct.drm_plane** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane.addr, metadata !7939, metadata !DIExpression()), !dbg !7940
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7941
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 3, !dbg !7942
  %1 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !7942
  %2 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !7943
  %call = call i32 @drm_plane_index(%struct.drm_plane* %2) #9, !dbg !7944
  %idxprom = zext i32 %call to i64, !dbg !7941
  %arrayidx = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %1, i64 %idxprom, !dbg !7941
  %new_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx, i32 0, i32 3, !dbg !7945
  %3 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state, align 8, !dbg !7945
  ret %struct.drm_plane_state* %3, !dbg !7946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_calc_timestamping_constants(%struct.drm_atomic_state* %state) #0 !dbg !7947 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %i = alloca i32, align 4
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7954, metadata !DIExpression()), !dbg !7955
  store i32 0, i32* %i, align 4, !dbg !7956
  br label %for.cond, !dbg !7956

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7958
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7958
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !7958
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !7958
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !7958
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !7958
  %3 = load i32, i32* %num_crtc, align 8, !dbg !7958
  %cmp = icmp slt i32 %0, %3, !dbg !7958
  br i1 %cmp, label %for.body, label %for.end, !dbg !7956

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7960
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !7960
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !7960
  %6 = load i32, i32* %i, align 4, !dbg !7960
  %idxprom = sext i32 %6 to i64, !dbg !7960
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !7960
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !7960
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !7960
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !7960
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !7960

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7960
  %crtcs1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !7960
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs1, align 8, !dbg !7960
  %10 = load i32, i32* %i, align 4, !dbg !7960
  %idxprom2 = sext i32 %10 to i64, !dbg !7960
  %arrayidx3 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom2, !dbg !7960
  %ptr4 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx3, i32 0, i32 0, !dbg !7960
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr4, align 8, !dbg !7960
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !7960
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7960
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !7960
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !7960
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !7960
  %15 = load i32, i32* %i, align 4, !dbg !7960
  %idxprom6 = sext i32 %15 to i64, !dbg !7960
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom6, !dbg !7960
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 3, !dbg !7960
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !7960
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7960
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7960
  br i1 true, label %if.else, label %if.then, !dbg !7958

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end10, !dbg !7962

if.else:                                          ; preds = %land.lhs.true
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7964
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %18, i32 0, i32 1, !dbg !7967
  %19 = load i8, i8* %enable, align 8, !dbg !7967
  %tobool8 = trunc i8 %19 to i1, !dbg !7967
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !7968

if.then9:                                         ; preds = %if.else
  %20 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !7969
  %21 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !7970
  %adjusted_mode = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %21, i32 0, i32 7, !dbg !7971
  call void @drm_calc_timestamping_constants(%struct.drm_crtc* %20, %struct.drm_display_mode* %adjusted_mode) #9, !dbg !7972
  br label %if.end, !dbg !7972

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !7960

for.inc:                                          ; preds = %if.end10
  %22 = load i32, i32* %i, align 4, !dbg !7958
  %inc = add i32 %22, 1, !dbg !7958
  store i32 %inc, i32* %i, align 4, !dbg !7958
  br label %for.cond, !dbg !7958, !llvm.loop !7973

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7975
}

; Function Attrs: noredzone
declare dso_local void @drm_calc_timestamping_constants(%struct.drm_crtc*, %struct.drm_display_mode*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_modeset_disables(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !7976 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7977, metadata !DIExpression()), !dbg !7978
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !7979, metadata !DIExpression()), !dbg !7980
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7981
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7982
  call void @disable_outputs(%struct.drm_device* %0, %struct.drm_atomic_state* %1) #9, !dbg !7983
  %2 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7984
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7985
  call void @drm_atomic_helper_update_legacy_modeset_state(%struct.drm_device* %2, %struct.drm_atomic_state* %3) #9, !dbg !7986
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7987
  call void @drm_atomic_helper_calc_timestamping_constants(%struct.drm_atomic_state* %4) #9, !dbg !7988
  %5 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !7989
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !7990
  call void @crtc_set_mode(%struct.drm_device* %5, %struct.drm_atomic_state* %6) #9, !dbg !7991
  ret void, !dbg !7992
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @disable_outputs(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !2 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %old_conn_state = alloca %struct.drm_connector_state*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %i = alloca i32, align 4
  %funcs = alloca %struct.drm_encoder_helper_funcs*, align 8
  %encoder = alloca %struct.drm_encoder*, align 8
  %bridge = alloca %struct.drm_bridge*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %funcs105 = alloca %struct.drm_crtc_helper_funcs*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_once = alloca i32, align 4
  %__ret_warn_on163 = alloca i32, align 4
  %tmp187 = alloca i64, align 8
  %tmp195 = alloca i64, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !7993, metadata !DIExpression()), !dbg !7994
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !7995, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !7997, metadata !DIExpression()), !dbg !7998
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_conn_state, metadata !7999, metadata !DIExpression()), !dbg !8000
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !8001, metadata !DIExpression()), !dbg !8002
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !8003, metadata !DIExpression()), !dbg !8004
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !8005, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !8007, metadata !DIExpression()), !dbg !8008
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8009, metadata !DIExpression()), !dbg !8010
  store i32 0, i32* %i, align 4, !dbg !8011
  br label %for.cond, !dbg !8011

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8013
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8013
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 5, !dbg !8013
  %2 = load i32, i32* %num_connector, align 8, !dbg !8013
  %cmp = icmp slt i32 %0, %2, !dbg !8013
  br i1 %cmp, label %for.body, label %for.end, !dbg !8011

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8015
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 6, !dbg !8015
  %4 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !8015
  %5 = load i32, i32* %i, align 4, !dbg !8015
  %idxprom = sext i32 %5 to i64, !dbg !8015
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %4, i64 %idxprom, !dbg !8015
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !8015
  %6 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !8015
  %tobool = icmp ne %struct.drm_connector* %6, null, !dbg !8015
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !8015

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8015
  %connectors1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 6, !dbg !8015
  %8 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors1, align 8, !dbg !8015
  %9 = load i32, i32* %i, align 4, !dbg !8015
  %idxprom2 = sext i32 %9 to i64, !dbg !8015
  %arrayidx3 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %8, i64 %idxprom2, !dbg !8015
  %ptr4 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx3, i32 0, i32 0, !dbg !8015
  %10 = load %struct.drm_connector*, %struct.drm_connector** %ptr4, align 8, !dbg !8015
  store %struct.drm_connector* %10, %struct.drm_connector** %connector, align 8, !dbg !8015
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !8015
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8015
  %connectors5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 6, !dbg !8015
  %13 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors5, align 8, !dbg !8015
  %14 = load i32, i32* %i, align 4, !dbg !8015
  %idxprom6 = sext i32 %14 to i64, !dbg !8015
  %arrayidx7 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %13, i64 %idxprom6, !dbg !8015
  %old_state8 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx7, i32 0, i32 2, !dbg !8015
  %15 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state8, align 8, !dbg !8015
  store %struct.drm_connector_state* %15, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !8015
  %16 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8015
  %connectors9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %16, i32 0, i32 6, !dbg !8015
  %17 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors9, align 8, !dbg !8015
  %18 = load i32, i32* %i, align 4, !dbg !8015
  %idxprom10 = sext i32 %18 to i64, !dbg !8015
  %arrayidx11 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %17, i64 %idxprom10, !dbg !8015
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx11, i32 0, i32 3, !dbg !8015
  %19 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !8015
  store %struct.drm_connector_state* %19, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8015
  br i1 true, label %if.else, label %if.then, !dbg !8013

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end80, !dbg !8017

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_encoder_helper_funcs** %funcs, metadata !8019, metadata !DIExpression()), !dbg !8021
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder, metadata !8022, metadata !DIExpression()), !dbg !8023
  call void @llvm.dbg.declare(metadata %struct.drm_bridge** %bridge, metadata !8024, metadata !DIExpression()), !dbg !8025
  %20 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !8026
  %crtc12 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %20, i32 0, i32 1, !dbg !8028
  %21 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc12, align 8, !dbg !8028
  %tobool13 = icmp ne %struct.drm_crtc* %21, null, !dbg !8026
  br i1 %tobool13, label %if.end, label %if.then14, !dbg !8029

if.then14:                                        ; preds = %if.else
  br label %for.inc, !dbg !8030

if.end:                                           ; preds = %if.else
  %22 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8031
  %23 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !8032
  %crtc15 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %23, i32 0, i32 1, !dbg !8033
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc15, align 8, !dbg !8033
  %call = call %struct.drm_crtc_state* @drm_atomic_get_old_crtc_state(%struct.drm_atomic_state* %22, %struct.drm_crtc* %24) #9, !dbg !8034
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8035
  %25 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8036
  %crtc16 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %25, i32 0, i32 1, !dbg !8038
  %26 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc16, align 8, !dbg !8038
  %tobool17 = icmp ne %struct.drm_crtc* %26, null, !dbg !8036
  br i1 %tobool17, label %if.then18, label %if.else21, !dbg !8039

if.then18:                                        ; preds = %if.end
  %27 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8040
  %28 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8041
  %crtc19 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %28, i32 0, i32 1, !dbg !8042
  %29 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc19, align 8, !dbg !8042
  %call20 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %27, %struct.drm_crtc* %29) #9, !dbg !8043
  store %struct.drm_crtc_state* %call20, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8044
  br label %if.end22, !dbg !8045

if.else21:                                        ; preds = %if.end
  store %struct.drm_crtc_state* null, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8046
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then18
  %30 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8047
  %31 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8049
  %call23 = call zeroext i1 @crtc_needs_disable(%struct.drm_crtc_state* %30, %struct.drm_crtc_state* %31) #9, !dbg !8050
  br i1 %call23, label %lor.lhs.false, label %if.then26, !dbg !8051

lor.lhs.false:                                    ; preds = %if.end22
  %32 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !8052
  %crtc24 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %32, i32 0, i32 1, !dbg !8053
  %33 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc24, align 8, !dbg !8053
  %state = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %33, i32 0, i32 21, !dbg !8054
  %34 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state, align 8, !dbg !8054
  %call25 = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %34) #9, !dbg !8055
  br i1 %call25, label %if.end27, label %if.then26, !dbg !8056

if.then26:                                        ; preds = %lor.lhs.false, %if.end22
  br label %for.inc, !dbg !8057

if.end27:                                         ; preds = %lor.lhs.false
  %35 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !8058
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %35, i32 0, i32 2, !dbg !8059
  %36 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !8059
  store %struct.drm_encoder* %36, %struct.drm_encoder** %encoder, align 8, !dbg !8060
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8061, metadata !DIExpression()), !dbg !8064
  %37 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8064
  %tobool28 = icmp ne %struct.drm_encoder* %37, null, !dbg !8064
  %lnot = xor i1 %tobool28, true, !dbg !8064
  %lnot29 = xor i1 %lnot, true, !dbg !8064
  %lnot30 = xor i1 %lnot29, true, !dbg !8064
  %lnot.ext = zext i1 %lnot30 to i32, !dbg !8064
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8064
  %38 = load i32, i32* %__ret_warn_on, align 4, !dbg !8065
  %tobool31 = icmp ne i32 %38, 0, !dbg !8065
  %lnot32 = xor i1 %tobool31, true, !dbg !8065
  %lnot34 = xor i1 %lnot32, true, !dbg !8065
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !8065
  %conv = sext i32 %lnot.ext35 to i64, !dbg !8065
  %tobool36 = icmp ne i64 %conv, 0, !dbg !8065
  br i1 %tobool36, label %if.then37, label %if.end44, !dbg !8064

if.then37:                                        ; preds = %if.end27
  br label %do.body, !dbg !8065

do.body:                                          ; preds = %if.then37
  br label %do.body38, !dbg !8067

do.body38:                                        ; preds = %do.body
  br label %do.end, !dbg !8069

do.end:                                           ; preds = %do.body38
  br label %do.body39, !dbg !8067

do.body39:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1045, i32 2305, i64 12) #8, !dbg !8071, !srcloc !8073
  br label %do.end40, !dbg !8071

do.end40:                                         ; preds = %do.body39
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 277) #8, !dbg !8074, !srcloc !8076
  br label %do.body41, !dbg !8067

do.body41:                                        ; preds = %do.end40
  br label %do.end42, !dbg !8077

do.end42:                                         ; preds = %do.body41
  br label %do.end43, !dbg !8067

do.end43:                                         ; preds = %do.end42
  br label %if.end44, !dbg !8067

if.end44:                                         ; preds = %do.end43, %if.end27
  %39 = load i32, i32* %__ret_warn_on, align 4, !dbg !8064
  %tobool45 = icmp ne i32 %39, 0, !dbg !8064
  %lnot46 = xor i1 %tobool45, true, !dbg !8064
  %lnot48 = xor i1 %lnot46, true, !dbg !8064
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !8064
  %conv50 = sext i32 %lnot.ext49 to i64, !dbg !8064
  store i64 %conv50, i64* %tmp, align 8, !dbg !8065
  %40 = load i64, i64* %tmp, align 8, !dbg !8064
  %tobool51 = icmp ne i64 %40, 0, !dbg !8079
  br i1 %tobool51, label %if.then52, label %if.end53, !dbg !8080

if.then52:                                        ; preds = %if.end44
  br label %for.inc, !dbg !8081

if.end53:                                         ; preds = %if.end44
  %41 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8082
  %helper_private = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %41, i32 0, i32 11, !dbg !8083
  %42 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %helper_private, align 8, !dbg !8083
  store %struct.drm_encoder_helper_funcs* %42, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8084
  %43 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8085
  %base = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %43, i32 0, i32 2, !dbg !8085
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !8085
  %44 = load i32, i32* %id, align 8, !dbg !8085
  %45 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8085
  %name = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %45, i32 0, i32 3, !dbg !8085
  %46 = load i8*, i8** %name, align 8, !dbg !8085
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.42, i64 0, i64 0), i32 %44, i8* %46) #9, !dbg !8085
  %47 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8086
  %call54 = call %struct.drm_bridge* @drm_bridge_chain_get_first_bridge(%struct.drm_encoder* %47) #9, !dbg !8087
  store %struct.drm_bridge* %call54, %struct.drm_bridge** %bridge, align 8, !dbg !8088
  %48 = load %struct.drm_bridge*, %struct.drm_bridge** %bridge, align 8, !dbg !8089
  %49 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8090
  call void @drm_atomic_bridge_chain_disable(%struct.drm_bridge* %48, %struct.drm_atomic_state* %49) #9, !dbg !8091
  %50 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8092
  %tobool55 = icmp ne %struct.drm_encoder_helper_funcs* %50, null, !dbg !8092
  br i1 %tobool55, label %if.then56, label %if.end79, !dbg !8094

if.then56:                                        ; preds = %if.end53
  %51 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8095
  %atomic_disable = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %51, i32 0, i32 8, !dbg !8098
  %52 = load void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)** %atomic_disable, align 8, !dbg !8098
  %tobool57 = icmp ne void (%struct.drm_encoder*, %struct.drm_atomic_state*)* %52, null, !dbg !8095
  br i1 %tobool57, label %if.then58, label %if.else60, !dbg !8099

if.then58:                                        ; preds = %if.then56
  %53 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8100
  %atomic_disable59 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %53, i32 0, i32 8, !dbg !8101
  %54 = load void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)** %atomic_disable59, align 8, !dbg !8101
  %55 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8102
  %56 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8103
  call void %54(%struct.drm_encoder* %55, %struct.drm_atomic_state* %56) #9, !dbg !8100
  br label %if.end78, !dbg !8100

if.else60:                                        ; preds = %if.then56
  %57 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8104
  %crtc61 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %57, i32 0, i32 1, !dbg !8106
  %58 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc61, align 8, !dbg !8106
  %tobool62 = icmp ne %struct.drm_crtc* %58, null, !dbg !8104
  br i1 %tobool62, label %land.lhs.true63, label %if.else67, !dbg !8107

land.lhs.true63:                                  ; preds = %if.else60
  %59 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8108
  %prepare = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %59, i32 0, i32 3, !dbg !8109
  %60 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %prepare, align 8, !dbg !8109
  %tobool64 = icmp ne void (%struct.drm_encoder*)* %60, null, !dbg !8108
  br i1 %tobool64, label %if.then65, label %if.else67, !dbg !8110

if.then65:                                        ; preds = %land.lhs.true63
  %61 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8111
  %prepare66 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %61, i32 0, i32 3, !dbg !8112
  %62 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %prepare66, align 8, !dbg !8112
  %63 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8113
  call void %62(%struct.drm_encoder* %63) #9, !dbg !8111
  br label %if.end77, !dbg !8111

if.else67:                                        ; preds = %land.lhs.true63, %if.else60
  %64 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8114
  %disable = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %64, i32 0, i32 10, !dbg !8116
  %65 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %disable, align 8, !dbg !8116
  %tobool68 = icmp ne void (%struct.drm_encoder*)* %65, null, !dbg !8114
  br i1 %tobool68, label %if.then69, label %if.else71, !dbg !8117

if.then69:                                        ; preds = %if.else67
  %66 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8118
  %disable70 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %66, i32 0, i32 10, !dbg !8119
  %67 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %disable70, align 8, !dbg !8119
  %68 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8120
  call void %67(%struct.drm_encoder* %68) #9, !dbg !8118
  br label %if.end76, !dbg !8118

if.else71:                                        ; preds = %if.else67
  %69 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8121
  %dpms = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %69, i32 0, i32 0, !dbg !8123
  %70 = load void (%struct.drm_encoder*, i32)*, void (%struct.drm_encoder*, i32)** %dpms, align 8, !dbg !8123
  %tobool72 = icmp ne void (%struct.drm_encoder*, i32)* %70, null, !dbg !8121
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !8124

if.then73:                                        ; preds = %if.else71
  %71 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs, align 8, !dbg !8125
  %dpms74 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %71, i32 0, i32 0, !dbg !8126
  %72 = load void (%struct.drm_encoder*, i32)*, void (%struct.drm_encoder*, i32)** %dpms74, align 8, !dbg !8126
  %73 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8127
  call void %72(%struct.drm_encoder* %73, i32 3) #9, !dbg !8125
  br label %if.end75, !dbg !8125

if.end75:                                         ; preds = %if.then73, %if.else71
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %if.then69
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then65
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.then58
  br label %if.end79, !dbg !8128

if.end79:                                         ; preds = %if.end78, %if.end53
  %74 = load %struct.drm_bridge*, %struct.drm_bridge** %bridge, align 8, !dbg !8129
  %75 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8130
  call void @drm_atomic_bridge_chain_post_disable(%struct.drm_bridge* %74, %struct.drm_atomic_state* %75) #9, !dbg !8131
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then
  br label %for.inc, !dbg !8015

for.inc:                                          ; preds = %if.end80, %if.then52, %if.then26, %if.then14
  %76 = load i32, i32* %i, align 4, !dbg !8013
  %inc = add i32 %76, 1, !dbg !8013
  store i32 %inc, i32* %i, align 4, !dbg !8013
  br label %for.cond, !dbg !8013, !llvm.loop !8132

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8134
  br label %for.cond81, !dbg !8134

for.cond81:                                       ; preds = %for.inc207, %for.end
  %77 = load i32, i32* %i, align 4, !dbg !8136
  %78 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8136
  %dev82 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %78, i32 0, i32 1, !dbg !8136
  %79 = load %struct.drm_device*, %struct.drm_device** %dev82, align 8, !dbg !8136
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %79, i32 0, i32 35, !dbg !8136
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !8136
  %80 = load i32, i32* %num_crtc, align 8, !dbg !8136
  %cmp83 = icmp slt i32 %77, %80, !dbg !8136
  br i1 %cmp83, label %for.body85, label %for.end209, !dbg !8134

for.body85:                                       ; preds = %for.cond81
  %81 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8138
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %81, i32 0, i32 4, !dbg !8138
  %82 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !8138
  %83 = load i32, i32* %i, align 4, !dbg !8138
  %idxprom86 = sext i32 %83 to i64, !dbg !8138
  %arrayidx87 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %82, i64 %idxprom86, !dbg !8138
  %ptr88 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx87, i32 0, i32 0, !dbg !8138
  %84 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr88, align 8, !dbg !8138
  %tobool89 = icmp ne %struct.drm_crtc* %84, null, !dbg !8138
  br i1 %tobool89, label %land.lhs.true90, label %if.then103, !dbg !8138

land.lhs.true90:                                  ; preds = %for.body85
  %85 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8138
  %crtcs91 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %85, i32 0, i32 4, !dbg !8138
  %86 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs91, align 8, !dbg !8138
  %87 = load i32, i32* %i, align 4, !dbg !8138
  %idxprom92 = sext i32 %87 to i64, !dbg !8138
  %arrayidx93 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %86, i64 %idxprom92, !dbg !8138
  %ptr94 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx93, i32 0, i32 0, !dbg !8138
  %88 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr94, align 8, !dbg !8138
  store %struct.drm_crtc* %88, %struct.drm_crtc** %crtc, align 8, !dbg !8138
  %89 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8138
  %90 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8138
  %crtcs95 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %90, i32 0, i32 4, !dbg !8138
  %91 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs95, align 8, !dbg !8138
  %92 = load i32, i32* %i, align 4, !dbg !8138
  %idxprom96 = sext i32 %92 to i64, !dbg !8138
  %arrayidx97 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %91, i64 %idxprom96, !dbg !8138
  %old_state98 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx97, i32 0, i32 2, !dbg !8138
  %93 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state98, align 8, !dbg !8138
  store %struct.drm_crtc_state* %93, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8138
  %94 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8138
  %95 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8138
  %crtcs99 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %95, i32 0, i32 4, !dbg !8138
  %96 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs99, align 8, !dbg !8138
  %97 = load i32, i32* %i, align 4, !dbg !8138
  %idxprom100 = sext i32 %97 to i64, !dbg !8138
  %arrayidx101 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %96, i64 %idxprom100, !dbg !8138
  %new_state102 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx101, i32 0, i32 3, !dbg !8138
  %98 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state102, align 8, !dbg !8138
  store %struct.drm_crtc_state* %98, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8138
  br i1 true, label %if.else104, label %if.then103, !dbg !8136

if.then103:                                       ; preds = %land.lhs.true90, %for.body85
  br label %if.end206, !dbg !8140

if.else104:                                       ; preds = %land.lhs.true90
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %funcs105, metadata !8142, metadata !DIExpression()), !dbg !8144
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8145, metadata !DIExpression()), !dbg !8146
  %99 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8147
  %call106 = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %99) #9, !dbg !8149
  br i1 %call106, label %if.end108, label %if.then107, !dbg !8150

if.then107:                                       ; preds = %if.else104
  br label %for.inc207, !dbg !8151

if.end108:                                        ; preds = %if.else104
  %100 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8152
  %101 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8154
  %call109 = call zeroext i1 @crtc_needs_disable(%struct.drm_crtc_state* %100, %struct.drm_crtc_state* %101) #9, !dbg !8155
  br i1 %call109, label %if.end111, label %if.then110, !dbg !8156

if.then110:                                       ; preds = %if.end108
  br label %for.inc207, !dbg !8157

if.end111:                                        ; preds = %if.end108
  %102 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8158
  %helper_private112 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %102, i32 0, i32 19, !dbg !8159
  %103 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private112, align 8, !dbg !8159
  store %struct.drm_crtc_helper_funcs* %103, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8160
  %104 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8161
  %base113 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %104, i32 0, i32 5, !dbg !8161
  %id114 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base113, i32 0, i32 0, !dbg !8161
  %105 = load i32, i32* %id114, align 8, !dbg !8161
  %106 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8161
  %name115 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %106, i32 0, i32 3, !dbg !8161
  %107 = load i8*, i8** %name115, align 8, !dbg !8161
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.43, i64 0, i64 0), i32 %105, i8* %107) #9, !dbg !8161
  %108 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8162
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %108, i32 0, i32 1, !dbg !8164
  %109 = load i8, i8* %enable, align 8, !dbg !8164
  %tobool116 = trunc i8 %109 to i1, !dbg !8164
  br i1 %tobool116, label %land.lhs.true118, label %if.else123, !dbg !8165

land.lhs.true118:                                 ; preds = %if.end111
  %110 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8166
  %prepare119 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %110, i32 0, i32 1, !dbg !8167
  %111 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %prepare119, align 8, !dbg !8167
  %tobool120 = icmp ne void (%struct.drm_crtc*)* %111, null, !dbg !8166
  br i1 %tobool120, label %if.then121, label %if.else123, !dbg !8168

if.then121:                                       ; preds = %land.lhs.true118
  %112 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8169
  %prepare122 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %112, i32 0, i32 1, !dbg !8170
  %113 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %prepare122, align 8, !dbg !8170
  %114 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8171
  call void %113(%struct.drm_crtc* %114) #9, !dbg !8169
  br label %if.end141, !dbg !8169

if.else123:                                       ; preds = %land.lhs.true118, %if.end111
  %115 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8172
  %atomic_disable124 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %115, i32 0, i32 14, !dbg !8174
  %116 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_disable124, align 8, !dbg !8174
  %tobool125 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %116, null, !dbg !8172
  br i1 %tobool125, label %if.then126, label %if.else128, !dbg !8175

if.then126:                                       ; preds = %if.else123
  %117 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8176
  %atomic_disable127 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %117, i32 0, i32 14, !dbg !8177
  %118 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_disable127, align 8, !dbg !8177
  %119 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8178
  %120 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8179
  call void %118(%struct.drm_crtc* %119, %struct.drm_crtc_state* %120) #9, !dbg !8176
  br label %if.end140, !dbg !8176

if.else128:                                       ; preds = %if.else123
  %121 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8180
  %disable129 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %121, i32 0, i32 9, !dbg !8182
  %122 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %disable129, align 8, !dbg !8182
  %tobool130 = icmp ne void (%struct.drm_crtc*)* %122, null, !dbg !8180
  br i1 %tobool130, label %if.then131, label %if.else133, !dbg !8183

if.then131:                                       ; preds = %if.else128
  %123 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8184
  %disable132 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %123, i32 0, i32 9, !dbg !8185
  %124 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %disable132, align 8, !dbg !8185
  %125 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8186
  call void %124(%struct.drm_crtc* %125) #9, !dbg !8184
  br label %if.end139, !dbg !8184

if.else133:                                       ; preds = %if.else128
  %126 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8187
  %dpms134 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %126, i32 0, i32 0, !dbg !8189
  %127 = load void (%struct.drm_crtc*, i32)*, void (%struct.drm_crtc*, i32)** %dpms134, align 8, !dbg !8189
  %tobool135 = icmp ne void (%struct.drm_crtc*, i32)* %127, null, !dbg !8187
  br i1 %tobool135, label %if.then136, label %if.end138, !dbg !8190

if.then136:                                       ; preds = %if.else133
  %128 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs105, align 8, !dbg !8191
  %dpms137 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %128, i32 0, i32 0, !dbg !8192
  %129 = load void (%struct.drm_crtc*, i32)*, void (%struct.drm_crtc*, i32)** %dpms137, align 8, !dbg !8192
  %130 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8193
  call void %129(%struct.drm_crtc* %130, i32 3) #9, !dbg !8191
  br label %if.end138, !dbg !8191

if.end138:                                        ; preds = %if.then136, %if.else133
  br label %if.end139

if.end139:                                        ; preds = %if.end138, %if.then131
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then126
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then121
  %131 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !8194
  %call142 = call zeroext i1 @drm_dev_has_vblank(%struct.drm_device* %131) #9, !dbg !8196
  br i1 %call142, label %if.end144, label %if.then143, !dbg !8197

if.then143:                                       ; preds = %if.end141
  br label %for.inc207, !dbg !8198

if.end144:                                        ; preds = %if.end141
  %132 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8199
  %call145 = call i32 @drm_crtc_vblank_get(%struct.drm_crtc* %132) #9, !dbg !8200
  store i32 %call145, i32* %ret, align 4, !dbg !8201
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_once, metadata !8202, metadata !DIExpression()), !dbg !8204
  %133 = load i32, i32* %ret, align 4, !dbg !8204
  %cmp146 = icmp ne i32 %133, -22, !dbg !8204
  %lnot148 = xor i1 %cmp146, true, !dbg !8204
  %lnot150 = xor i1 %lnot148, true, !dbg !8204
  %lnot.ext151 = zext i1 %lnot150 to i32, !dbg !8204
  store i32 %lnot.ext151, i32* %__ret_warn_once, align 4, !dbg !8204
  %134 = load i32, i32* %__ret_warn_once, align 4, !dbg !8205
  %tobool152 = icmp ne i32 %134, 0, !dbg !8205
  br i1 %tobool152, label %land.rhs, label %land.end, !dbg !8205

land.rhs:                                         ; preds = %if.end144
  %135 = load i8, i8* @disable_outputs.__warned, align 1, !dbg !8205
  %tobool153 = trunc i8 %135 to i1, !dbg !8205
  %lnot154 = xor i1 %tobool153, true, !dbg !8205
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end144
  %136 = phi i1 [ false, %if.end144 ], [ %lnot154, %land.rhs ], !dbg !8207
  %lnot156 = xor i1 %136, true, !dbg !8205
  %lnot158 = xor i1 %lnot156, true, !dbg !8205
  %lnot.ext159 = zext i1 %lnot158 to i32, !dbg !8205
  %conv160 = sext i32 %lnot.ext159 to i64, !dbg !8205
  %tobool161 = icmp ne i64 %conv160, 0, !dbg !8205
  br i1 %tobool161, label %if.then162, label %if.end194, !dbg !8204

if.then162:                                       ; preds = %land.end
  store i8 1, i8* @disable_outputs.__warned, align 1, !dbg !8208
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on163, metadata !8210, metadata !DIExpression()), !dbg !8212
  store i32 1, i32* %__ret_warn_on163, align 4, !dbg !8212
  %137 = load i32, i32* %__ret_warn_on163, align 4, !dbg !8213
  %tobool164 = icmp ne i32 %137, 0, !dbg !8213
  %lnot165 = xor i1 %tobool164, true, !dbg !8213
  %lnot167 = xor i1 %lnot165, true, !dbg !8213
  %lnot.ext168 = zext i1 %lnot167 to i32, !dbg !8213
  %conv169 = sext i32 %lnot.ext168 to i64, !dbg !8213
  %tobool170 = icmp ne i64 %conv169, 0, !dbg !8213
  br i1 %tobool170, label %if.then171, label %if.end186, !dbg !8212

if.then171:                                       ; preds = %if.then162
  br label %do.body172, !dbg !8213

do.body172:                                       ; preds = %if.then171
  br label %do.body173, !dbg !8215

do.body173:                                       ; preds = %do.body172
  br label %do.end174, !dbg !8217

do.end174:                                        ; preds = %do.body173
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.44, i64 0, i64 0)) #9, !dbg !8215
  br label %do.body175, !dbg !8215

do.body175:                                       ; preds = %do.end174
  br label %do.body176, !dbg !8219

do.body176:                                       ; preds = %do.body175
  br label %do.end177, !dbg !8221

do.end177:                                        ; preds = %do.body176
  br label %do.body178, !dbg !8219

do.body178:                                       ; preds = %do.end177
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1106, i32 2313, i64 12) #8, !dbg !8223, !srcloc !8225
  br label %do.end179, !dbg !8223

do.end179:                                        ; preds = %do.body178
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 278) #8, !dbg !8226, !srcloc !8228
  br label %do.body180, !dbg !8219

do.body180:                                       ; preds = %do.end179
  br label %do.end181, !dbg !8229

do.end181:                                        ; preds = %do.body180
  br label %do.end182, !dbg !8219

do.end182:                                        ; preds = %do.end181
  br label %do.body183, !dbg !8215

do.body183:                                       ; preds = %do.end182
  br label %do.end184, !dbg !8231

do.end184:                                        ; preds = %do.body183
  br label %do.end185, !dbg !8215

do.end185:                                        ; preds = %do.end184
  br label %if.end186, !dbg !8215

if.end186:                                        ; preds = %do.end185, %if.then162
  %138 = load i32, i32* %__ret_warn_on163, align 4, !dbg !8212
  %tobool188 = icmp ne i32 %138, 0, !dbg !8212
  %lnot189 = xor i1 %tobool188, true, !dbg !8212
  %lnot191 = xor i1 %lnot189, true, !dbg !8212
  %lnot.ext192 = zext i1 %lnot191 to i32, !dbg !8212
  %conv193 = sext i32 %lnot.ext192 to i64, !dbg !8212
  store i64 %conv193, i64* %tmp187, align 8, !dbg !8213
  %139 = load i64, i64* %tmp187, align 8, !dbg !8212
  br label %if.end194, !dbg !8208

if.end194:                                        ; preds = %if.end186, %land.end
  %140 = load i32, i32* %__ret_warn_once, align 4, !dbg !8204
  %tobool196 = icmp ne i32 %140, 0, !dbg !8204
  %lnot197 = xor i1 %tobool196, true, !dbg !8204
  %lnot199 = xor i1 %lnot197, true, !dbg !8204
  %lnot.ext200 = zext i1 %lnot199 to i32, !dbg !8204
  %conv201 = sext i32 %lnot.ext200 to i64, !dbg !8204
  store i64 %conv201, i64* %tmp195, align 8, !dbg !8205
  %141 = load i64, i64* %tmp195, align 8, !dbg !8204
  %142 = load i32, i32* %ret, align 4, !dbg !8233
  %cmp202 = icmp eq i32 %142, 0, !dbg !8235
  br i1 %cmp202, label %if.then204, label %if.end205, !dbg !8236

if.then204:                                       ; preds = %if.end194
  %143 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8237
  call void @drm_crtc_vblank_put(%struct.drm_crtc* %143) #9, !dbg !8238
  br label %if.end205, !dbg !8238

if.end205:                                        ; preds = %if.then204, %if.end194
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.then103
  br label %for.inc207, !dbg !8138

for.inc207:                                       ; preds = %if.end206, %if.then143, %if.then110, %if.then107
  %144 = load i32, i32* %i, align 4, !dbg !8136
  %inc208 = add i32 %144, 1, !dbg !8136
  store i32 %inc208, i32* %i, align 4, !dbg !8136
  br label %for.cond81, !dbg !8136, !llvm.loop !8239

for.end209:                                       ; preds = %for.cond81
  ret void, !dbg !8241
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @crtc_set_mode(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !8242 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %i = alloca i32, align 4
  %funcs = alloca %struct.drm_crtc_helper_funcs*, align 8
  %funcs35 = alloca %struct.drm_encoder_helper_funcs*, align 8
  %encoder = alloca %struct.drm_encoder*, align 8
  %mode = alloca %struct.drm_display_mode*, align 8
  %adjusted_mode = alloca %struct.drm_display_mode*, align 8
  %bridge = alloca %struct.drm_bridge*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !8243, metadata !DIExpression()), !dbg !8244
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !8245, metadata !DIExpression()), !dbg !8246
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !8247, metadata !DIExpression()), !dbg !8248
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !8249, metadata !DIExpression()), !dbg !8250
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !8251, metadata !DIExpression()), !dbg !8252
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !8253, metadata !DIExpression()), !dbg !8254
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8255, metadata !DIExpression()), !dbg !8256
  store i32 0, i32* %i, align 4, !dbg !8257
  br label %for.cond, !dbg !8257

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8259
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8259
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !8259
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !8259
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !8259
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !8259
  %3 = load i32, i32* %num_crtc, align 8, !dbg !8259
  %cmp = icmp slt i32 %0, %3, !dbg !8259
  br i1 %cmp, label %for.body, label %for.end, !dbg !8257

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8261
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !8261
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !8261
  %6 = load i32, i32* %i, align 4, !dbg !8261
  %idxprom = sext i32 %6 to i64, !dbg !8261
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !8261
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !8261
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !8261
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !8261
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !8261

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8261
  %crtcs2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !8261
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs2, align 8, !dbg !8261
  %10 = load i32, i32* %i, align 4, !dbg !8261
  %idxprom3 = sext i32 %10 to i64, !dbg !8261
  %arrayidx4 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom3, !dbg !8261
  %ptr5 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx4, i32 0, i32 0, !dbg !8261
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr5, align 8, !dbg !8261
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !8261
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8261
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8261
  %crtcs6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !8261
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs6, align 8, !dbg !8261
  %15 = load i32, i32* %i, align 4, !dbg !8261
  %idxprom7 = sext i32 %15 to i64, !dbg !8261
  %arrayidx8 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom7, !dbg !8261
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx8, i32 0, i32 3, !dbg !8261
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !8261
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8261
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8261
  br i1 true, label %if.else, label %if.then, !dbg !8259

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end16, !dbg !8263

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %funcs, metadata !8265, metadata !DIExpression()), !dbg !8267
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8268
  %mode_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %18, i32 0, i32 3, !dbg !8270
  %bf.load = load i8, i8* %mode_changed, align 2, !dbg !8270
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !8270
  %bf.clear = and i8 %bf.lshr, 1, !dbg !8270
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !8270
  br i1 %bf.cast, label %if.end, label %if.then9, !dbg !8271

if.then9:                                         ; preds = %if.else
  br label %for.inc, !dbg !8272

if.end:                                           ; preds = %if.else
  %19 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8273
  %helper_private = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %19, i32 0, i32 19, !dbg !8274
  %20 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private, align 8, !dbg !8274
  store %struct.drm_crtc_helper_funcs* %20, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8275
  %21 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8276
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %21, i32 0, i32 1, !dbg !8278
  %22 = load i8, i8* %enable, align 8, !dbg !8278
  %tobool10 = trunc i8 %22 to i1, !dbg !8278
  br i1 %tobool10, label %land.lhs.true11, label %if.end15, !dbg !8279

land.lhs.true11:                                  ; preds = %if.end
  %23 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8280
  %mode_set_nofb = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %23, i32 0, i32 6, !dbg !8281
  %24 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %mode_set_nofb, align 8, !dbg !8281
  %tobool12 = icmp ne void (%struct.drm_crtc*)* %24, null, !dbg !8280
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !8282

if.then13:                                        ; preds = %land.lhs.true11
  %25 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8283
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %25, i32 0, i32 5, !dbg !8283
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !8283
  %26 = load i32, i32* %id, align 8, !dbg !8283
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8283
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %27, i32 0, i32 3, !dbg !8283
  %28 = load i8*, i8** %name, align 8, !dbg !8283
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.45, i64 0, i64 0), i32 %26, i8* %28) #9, !dbg !8283
  %29 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8285
  %mode_set_nofb14 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %29, i32 0, i32 6, !dbg !8286
  %30 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %mode_set_nofb14, align 8, !dbg !8286
  %31 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8287
  call void %30(%struct.drm_crtc* %31) #9, !dbg !8285
  br label %if.end15, !dbg !8288

if.end15:                                         ; preds = %if.then13, %land.lhs.true11, %if.end
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then
  br label %for.inc, !dbg !8261

for.inc:                                          ; preds = %if.end16, %if.then9
  %32 = load i32, i32* %i, align 4, !dbg !8259
  %inc = add i32 %32, 1, !dbg !8259
  store i32 %inc, i32* %i, align 4, !dbg !8259
  br label %for.cond, !dbg !8259, !llvm.loop !8289

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8291
  br label %for.cond17, !dbg !8291

for.cond17:                                       ; preds = %for.inc68, %for.end
  %33 = load i32, i32* %i, align 4, !dbg !8293
  %34 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8293
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %34, i32 0, i32 5, !dbg !8293
  %35 = load i32, i32* %num_connector, align 8, !dbg !8293
  %cmp18 = icmp slt i32 %33, %35, !dbg !8293
  br i1 %cmp18, label %for.body19, label %for.end70, !dbg !8291

for.body19:                                       ; preds = %for.cond17
  %36 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8295
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %36, i32 0, i32 6, !dbg !8295
  %37 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !8295
  %38 = load i32, i32* %i, align 4, !dbg !8295
  %idxprom20 = sext i32 %38 to i64, !dbg !8295
  %arrayidx21 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %37, i64 %idxprom20, !dbg !8295
  %ptr22 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx21, i32 0, i32 0, !dbg !8295
  %39 = load %struct.drm_connector*, %struct.drm_connector** %ptr22, align 8, !dbg !8295
  %tobool23 = icmp ne %struct.drm_connector* %39, null, !dbg !8295
  br i1 %tobool23, label %land.lhs.true24, label %if.then33, !dbg !8295

land.lhs.true24:                                  ; preds = %for.body19
  %40 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8295
  %connectors25 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %40, i32 0, i32 6, !dbg !8295
  %41 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors25, align 8, !dbg !8295
  %42 = load i32, i32* %i, align 4, !dbg !8295
  %idxprom26 = sext i32 %42 to i64, !dbg !8295
  %arrayidx27 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %41, i64 %idxprom26, !dbg !8295
  %ptr28 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx27, i32 0, i32 0, !dbg !8295
  %43 = load %struct.drm_connector*, %struct.drm_connector** %ptr28, align 8, !dbg !8295
  store %struct.drm_connector* %43, %struct.drm_connector** %connector, align 8, !dbg !8295
  %44 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !8295
  %45 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8295
  %connectors29 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %45, i32 0, i32 6, !dbg !8295
  %46 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors29, align 8, !dbg !8295
  %47 = load i32, i32* %i, align 4, !dbg !8295
  %idxprom30 = sext i32 %47 to i64, !dbg !8295
  %arrayidx31 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %46, i64 %idxprom30, !dbg !8295
  %new_state32 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx31, i32 0, i32 3, !dbg !8295
  %48 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state32, align 8, !dbg !8295
  store %struct.drm_connector_state* %48, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8295
  %49 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8295
  br i1 true, label %if.else34, label %if.then33, !dbg !8293

if.then33:                                        ; preds = %land.lhs.true24, %for.body19
  br label %if.end67, !dbg !8297

if.else34:                                        ; preds = %land.lhs.true24
  call void @llvm.dbg.declare(metadata %struct.drm_encoder_helper_funcs** %funcs35, metadata !8299, metadata !DIExpression()), !dbg !8301
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder, metadata !8302, metadata !DIExpression()), !dbg !8303
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode, metadata !8304, metadata !DIExpression()), !dbg !8305
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %adjusted_mode, metadata !8306, metadata !DIExpression()), !dbg !8307
  call void @llvm.dbg.declare(metadata %struct.drm_bridge** %bridge, metadata !8308, metadata !DIExpression()), !dbg !8309
  %50 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8310
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %50, i32 0, i32 2, !dbg !8312
  %51 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !8312
  %tobool36 = icmp ne %struct.drm_encoder* %51, null, !dbg !8310
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !8313

if.then37:                                        ; preds = %if.else34
  br label %for.inc68, !dbg !8314

if.end38:                                         ; preds = %if.else34
  %52 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8315
  %best_encoder39 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %52, i32 0, i32 2, !dbg !8316
  %53 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder39, align 8, !dbg !8316
  store %struct.drm_encoder* %53, %struct.drm_encoder** %encoder, align 8, !dbg !8317
  %54 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8318
  %helper_private40 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %54, i32 0, i32 11, !dbg !8319
  %55 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %helper_private40, align 8, !dbg !8319
  store %struct.drm_encoder_helper_funcs* %55, %struct.drm_encoder_helper_funcs** %funcs35, align 8, !dbg !8320
  %56 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8321
  %crtc41 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %56, i32 0, i32 1, !dbg !8322
  %57 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc41, align 8, !dbg !8322
  %state = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %57, i32 0, i32 21, !dbg !8323
  %58 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state, align 8, !dbg !8323
  store %struct.drm_crtc_state* %58, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8324
  %59 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8325
  %mode42 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %59, i32 0, i32 8, !dbg !8326
  store %struct.drm_display_mode* %mode42, %struct.drm_display_mode** %mode, align 8, !dbg !8327
  %60 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8328
  %adjusted_mode43 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %60, i32 0, i32 7, !dbg !8329
  store %struct.drm_display_mode* %adjusted_mode43, %struct.drm_display_mode** %adjusted_mode, align 8, !dbg !8330
  %61 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8331
  %mode_changed44 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %61, i32 0, i32 3, !dbg !8333
  %bf.load45 = load i8, i8* %mode_changed44, align 2, !dbg !8333
  %bf.lshr46 = lshr i8 %bf.load45, 1, !dbg !8333
  %bf.clear47 = and i8 %bf.lshr46, 1, !dbg !8333
  %bf.cast48 = trunc i8 %bf.clear47 to i1, !dbg !8333
  br i1 %bf.cast48, label %if.end50, label %if.then49, !dbg !8334

if.then49:                                        ; preds = %if.end38
  br label %for.inc68, !dbg !8335

if.end50:                                         ; preds = %if.end38
  %62 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8336
  %base51 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %62, i32 0, i32 2, !dbg !8336
  %id52 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base51, i32 0, i32 0, !dbg !8336
  %63 = load i32, i32* %id52, align 8, !dbg !8336
  %64 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8336
  %name53 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %64, i32 0, i32 3, !dbg !8336
  %65 = load i8*, i8** %name53, align 8, !dbg !8336
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.46, i64 0, i64 0), i32 %63, i8* %65) #9, !dbg !8336
  %66 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs35, align 8, !dbg !8337
  %tobool54 = icmp ne %struct.drm_encoder_helper_funcs* %66, null, !dbg !8337
  br i1 %tobool54, label %land.lhs.true55, label %if.else59, !dbg !8339

land.lhs.true55:                                  ; preds = %if.end50
  %67 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs35, align 8, !dbg !8340
  %atomic_mode_set = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %67, i32 0, i32 6, !dbg !8341
  %68 = load void (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)*, void (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)** %atomic_mode_set, align 8, !dbg !8341
  %tobool56 = icmp ne void (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)* %68, null, !dbg !8340
  br i1 %tobool56, label %if.then57, label %if.else59, !dbg !8342

if.then57:                                        ; preds = %land.lhs.true55
  %69 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs35, align 8, !dbg !8343
  %atomic_mode_set58 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %69, i32 0, i32 6, !dbg !8345
  %70 = load void (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)*, void (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)** %atomic_mode_set58, align 8, !dbg !8345
  %71 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8346
  %72 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8347
  %73 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8348
  call void %70(%struct.drm_encoder* %71, %struct.drm_crtc_state* %72, %struct.drm_connector_state* %73) #9, !dbg !8343
  br label %if.end66, !dbg !8349

if.else59:                                        ; preds = %land.lhs.true55, %if.end50
  %74 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs35, align 8, !dbg !8350
  %tobool60 = icmp ne %struct.drm_encoder_helper_funcs* %74, null, !dbg !8350
  br i1 %tobool60, label %land.lhs.true61, label %if.end65, !dbg !8352

land.lhs.true61:                                  ; preds = %if.else59
  %75 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs35, align 8, !dbg !8353
  %mode_set = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %75, i32 0, i32 5, !dbg !8354
  %76 = load void (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)** %mode_set, align 8, !dbg !8354
  %tobool62 = icmp ne void (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)* %76, null, !dbg !8353
  br i1 %tobool62, label %if.then63, label %if.end65, !dbg !8355

if.then63:                                        ; preds = %land.lhs.true61
  %77 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs35, align 8, !dbg !8356
  %mode_set64 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %77, i32 0, i32 5, !dbg !8358
  %78 = load void (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)** %mode_set64, align 8, !dbg !8358
  %79 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8359
  %80 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !8360
  %81 = load %struct.drm_display_mode*, %struct.drm_display_mode** %adjusted_mode, align 8, !dbg !8361
  call void %78(%struct.drm_encoder* %79, %struct.drm_display_mode* %80, %struct.drm_display_mode* %81) #9, !dbg !8356
  br label %if.end65, !dbg !8362

if.end65:                                         ; preds = %if.then63, %land.lhs.true61, %if.else59
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.then57
  %82 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8363
  %call = call %struct.drm_bridge* @drm_bridge_chain_get_first_bridge(%struct.drm_encoder* %82) #9, !dbg !8364
  store %struct.drm_bridge* %call, %struct.drm_bridge** %bridge, align 8, !dbg !8365
  %83 = load %struct.drm_bridge*, %struct.drm_bridge** %bridge, align 8, !dbg !8366
  %84 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode, align 8, !dbg !8367
  %85 = load %struct.drm_display_mode*, %struct.drm_display_mode** %adjusted_mode, align 8, !dbg !8368
  call void @drm_bridge_chain_mode_set(%struct.drm_bridge* %83, %struct.drm_display_mode* %84, %struct.drm_display_mode* %85) #9, !dbg !8369
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.then33
  br label %for.inc68, !dbg !8295

for.inc68:                                        ; preds = %if.end67, %if.then49, %if.then37
  %86 = load i32, i32* %i, align 4, !dbg !8293
  %inc69 = add i32 %86, 1, !dbg !8293
  store i32 %inc69, i32* %i, align 4, !dbg !8293
  br label %for.cond17, !dbg !8293, !llvm.loop !8370

for.end70:                                        ; preds = %for.cond17
  ret void, !dbg !8372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_modeset_enables(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !8373 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %i = alloca i32, align 4
  %funcs = alloca %struct.drm_crtc_helper_funcs*, align 8
  %funcs48 = alloca %struct.drm_encoder_helper_funcs*, align 8
  %encoder = alloca %struct.drm_encoder*, align 8
  %bridge = alloca %struct.drm_bridge*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !8374, metadata !DIExpression()), !dbg !8375
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !8378, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !8380, metadata !DIExpression()), !dbg !8381
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !8382, metadata !DIExpression()), !dbg !8383
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !8384, metadata !DIExpression()), !dbg !8385
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !8386, metadata !DIExpression()), !dbg !8387
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8388, metadata !DIExpression()), !dbg !8389
  store i32 0, i32* %i, align 4, !dbg !8390
  br label %for.cond, !dbg !8390

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8392
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8392
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !8392
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !8392
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !8392
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !8392
  %3 = load i32, i32* %num_crtc, align 8, !dbg !8392
  %cmp = icmp slt i32 %0, %3, !dbg !8392
  br i1 %cmp, label %for.body, label %for.end, !dbg !8390

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8394
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !8394
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !8394
  %6 = load i32, i32* %i, align 4, !dbg !8394
  %idxprom = sext i32 %6 to i64, !dbg !8394
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !8394
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !8394
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !8394
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !8394
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !8394

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8394
  %crtcs2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !8394
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs2, align 8, !dbg !8394
  %10 = load i32, i32* %i, align 4, !dbg !8394
  %idxprom3 = sext i32 %10 to i64, !dbg !8394
  %arrayidx4 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom3, !dbg !8394
  %ptr5 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx4, i32 0, i32 0, !dbg !8394
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr5, align 8, !dbg !8394
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !8394
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8394
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8394
  %crtcs6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !8394
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs6, align 8, !dbg !8394
  %15 = load i32, i32* %i, align 4, !dbg !8394
  %idxprom7 = sext i32 %15 to i64, !dbg !8394
  %arrayidx8 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom7, !dbg !8394
  %old_state9 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx8, i32 0, i32 2, !dbg !8394
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state9, align 8, !dbg !8394
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8394
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8394
  %18 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8394
  %crtcs10 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %18, i32 0, i32 4, !dbg !8394
  %19 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs10, align 8, !dbg !8394
  %20 = load i32, i32* %i, align 4, !dbg !8394
  %idxprom11 = sext i32 %20 to i64, !dbg !8394
  %arrayidx12 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %19, i64 %idxprom11, !dbg !8394
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx12, i32 0, i32 3, !dbg !8394
  %21 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !8394
  store %struct.drm_crtc_state* %21, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8394
  br i1 true, label %if.else, label %if.then, !dbg !8392

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end29, !dbg !8396

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %funcs, metadata !8398, metadata !DIExpression()), !dbg !8400
  %22 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8401
  %call = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %22) #9, !dbg !8403
  br i1 %call, label %if.end, label %if.then13, !dbg !8404

if.then13:                                        ; preds = %if.else
  br label %for.inc, !dbg !8405

if.end:                                           ; preds = %if.else
  %23 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8406
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %23, i32 0, i32 2, !dbg !8408
  %24 = load i8, i8* %active, align 1, !dbg !8408
  %tobool14 = trunc i8 %24 to i1, !dbg !8408
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !8409

if.then15:                                        ; preds = %if.end
  br label %for.inc, !dbg !8410

if.end16:                                         ; preds = %if.end
  %25 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8411
  %helper_private = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %25, i32 0, i32 19, !dbg !8412
  %26 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private, align 8, !dbg !8412
  store %struct.drm_crtc_helper_funcs* %26, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8413
  %27 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8414
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %27, i32 0, i32 1, !dbg !8416
  %28 = load i8, i8* %enable, align 8, !dbg !8416
  %tobool17 = trunc i8 %28 to i1, !dbg !8416
  br i1 %tobool17, label %if.then18, label %if.end28, !dbg !8417

if.then18:                                        ; preds = %if.end16
  %29 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8418
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %29, i32 0, i32 5, !dbg !8418
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !8418
  %30 = load i32, i32* %id, align 8, !dbg !8418
  %31 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8418
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %31, i32 0, i32 3, !dbg !8418
  %32 = load i8*, i8** %name, align 8, !dbg !8418
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i32 %30, i8* %32) #9, !dbg !8418
  %33 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8420
  %atomic_enable = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %33, i32 0, i32 13, !dbg !8422
  %34 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_enable, align 8, !dbg !8422
  %tobool19 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %34, null, !dbg !8420
  br i1 %tobool19, label %if.then20, label %if.else22, !dbg !8423

if.then20:                                        ; preds = %if.then18
  %35 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8424
  %atomic_enable21 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %35, i32 0, i32 13, !dbg !8425
  %36 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_enable21, align 8, !dbg !8425
  %37 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8426
  %38 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8427
  call void %36(%struct.drm_crtc* %37, %struct.drm_crtc_state* %38) #9, !dbg !8424
  br label %if.end27, !dbg !8424

if.else22:                                        ; preds = %if.then18
  %39 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8428
  %commit = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %39, i32 0, i32 2, !dbg !8430
  %40 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %commit, align 8, !dbg !8430
  %tobool23 = icmp ne void (%struct.drm_crtc*)* %40, null, !dbg !8428
  br i1 %tobool23, label %if.then24, label %if.end26, !dbg !8431

if.then24:                                        ; preds = %if.else22
  %41 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !8432
  %commit25 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %41, i32 0, i32 2, !dbg !8433
  %42 = load void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)** %commit25, align 8, !dbg !8433
  %43 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8434
  call void %42(%struct.drm_crtc* %43) #9, !dbg !8432
  br label %if.end26, !dbg !8432

if.end26:                                         ; preds = %if.then24, %if.else22
  br label %if.end27

if.end27:                                         ; preds = %if.end26, %if.then20
  br label %if.end28, !dbg !8435

if.end28:                                         ; preds = %if.end27, %if.end16
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then
  br label %for.inc, !dbg !8394

for.inc:                                          ; preds = %if.end29, %if.then15, %if.then13
  %44 = load i32, i32* %i, align 4, !dbg !8392
  %inc = add i32 %44, 1, !dbg !8392
  store i32 %inc, i32* %i, align 4, !dbg !8392
  br label %for.cond, !dbg !8392, !llvm.loop !8436

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8438
  br label %for.cond30, !dbg !8438

for.cond30:                                       ; preds = %for.inc87, %for.end
  %45 = load i32, i32* %i, align 4, !dbg !8440
  %46 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8440
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %46, i32 0, i32 5, !dbg !8440
  %47 = load i32, i32* %num_connector, align 8, !dbg !8440
  %cmp31 = icmp slt i32 %45, %47, !dbg !8440
  br i1 %cmp31, label %for.body32, label %for.end89, !dbg !8438

for.body32:                                       ; preds = %for.cond30
  %48 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8442
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %48, i32 0, i32 6, !dbg !8442
  %49 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !8442
  %50 = load i32, i32* %i, align 4, !dbg !8442
  %idxprom33 = sext i32 %50 to i64, !dbg !8442
  %arrayidx34 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %49, i64 %idxprom33, !dbg !8442
  %ptr35 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx34, i32 0, i32 0, !dbg !8442
  %51 = load %struct.drm_connector*, %struct.drm_connector** %ptr35, align 8, !dbg !8442
  %tobool36 = icmp ne %struct.drm_connector* %51, null, !dbg !8442
  br i1 %tobool36, label %land.lhs.true37, label %if.then46, !dbg !8442

land.lhs.true37:                                  ; preds = %for.body32
  %52 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8442
  %connectors38 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %52, i32 0, i32 6, !dbg !8442
  %53 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors38, align 8, !dbg !8442
  %54 = load i32, i32* %i, align 4, !dbg !8442
  %idxprom39 = sext i32 %54 to i64, !dbg !8442
  %arrayidx40 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %53, i64 %idxprom39, !dbg !8442
  %ptr41 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx40, i32 0, i32 0, !dbg !8442
  %55 = load %struct.drm_connector*, %struct.drm_connector** %ptr41, align 8, !dbg !8442
  store %struct.drm_connector* %55, %struct.drm_connector** %connector, align 8, !dbg !8442
  %56 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !8442
  %57 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8442
  %connectors42 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %57, i32 0, i32 6, !dbg !8442
  %58 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors42, align 8, !dbg !8442
  %59 = load i32, i32* %i, align 4, !dbg !8442
  %idxprom43 = sext i32 %59 to i64, !dbg !8442
  %arrayidx44 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %58, i64 %idxprom43, !dbg !8442
  %new_state45 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx44, i32 0, i32 3, !dbg !8442
  %60 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state45, align 8, !dbg !8442
  store %struct.drm_connector_state* %60, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8442
  %61 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8442
  br i1 true, label %if.else47, label %if.then46, !dbg !8440

if.then46:                                        ; preds = %land.lhs.true37, %for.body32
  br label %if.end86, !dbg !8444

if.else47:                                        ; preds = %land.lhs.true37
  call void @llvm.dbg.declare(metadata %struct.drm_encoder_helper_funcs** %funcs48, metadata !8446, metadata !DIExpression()), !dbg !8448
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder, metadata !8449, metadata !DIExpression()), !dbg !8450
  call void @llvm.dbg.declare(metadata %struct.drm_bridge** %bridge, metadata !8451, metadata !DIExpression()), !dbg !8452
  %62 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8453
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %62, i32 0, i32 2, !dbg !8455
  %63 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !8455
  %tobool49 = icmp ne %struct.drm_encoder* %63, null, !dbg !8453
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !8456

if.then50:                                        ; preds = %if.else47
  br label %for.inc87, !dbg !8457

if.end51:                                         ; preds = %if.else47
  %64 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8458
  %crtc52 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %64, i32 0, i32 1, !dbg !8460
  %65 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc52, align 8, !dbg !8460
  %state = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %65, i32 0, i32 21, !dbg !8461
  %66 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state, align 8, !dbg !8461
  %active53 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %66, i32 0, i32 2, !dbg !8462
  %67 = load i8, i8* %active53, align 1, !dbg !8462
  %tobool54 = trunc i8 %67 to i1, !dbg !8462
  br i1 %tobool54, label %lor.lhs.false, label %if.then58, !dbg !8463

lor.lhs.false:                                    ; preds = %if.end51
  %68 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8464
  %crtc55 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %68, i32 0, i32 1, !dbg !8465
  %69 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc55, align 8, !dbg !8465
  %state56 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %69, i32 0, i32 21, !dbg !8466
  %70 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state56, align 8, !dbg !8466
  %call57 = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %70) #9, !dbg !8467
  br i1 %call57, label %if.end59, label %if.then58, !dbg !8468

if.then58:                                        ; preds = %lor.lhs.false, %if.end51
  br label %for.inc87, !dbg !8469

if.end59:                                         ; preds = %lor.lhs.false
  %71 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8470
  %best_encoder60 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %71, i32 0, i32 2, !dbg !8471
  %72 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder60, align 8, !dbg !8471
  store %struct.drm_encoder* %72, %struct.drm_encoder** %encoder, align 8, !dbg !8472
  %73 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8473
  %helper_private61 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %73, i32 0, i32 11, !dbg !8474
  %74 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %helper_private61, align 8, !dbg !8474
  store %struct.drm_encoder_helper_funcs* %74, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8475
  %75 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8476
  %base62 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %75, i32 0, i32 2, !dbg !8476
  %id63 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base62, i32 0, i32 0, !dbg !8476
  %76 = load i32, i32* %id63, align 8, !dbg !8476
  %77 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8476
  %name64 = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %77, i32 0, i32 3, !dbg !8476
  %78 = load i8*, i8** %name64, align 8, !dbg !8476
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.15, i64 0, i64 0), i32 %76, i8* %78) #9, !dbg !8476
  %79 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8477
  %call65 = call %struct.drm_bridge* @drm_bridge_chain_get_first_bridge(%struct.drm_encoder* %79) #9, !dbg !8478
  store %struct.drm_bridge* %call65, %struct.drm_bridge** %bridge, align 8, !dbg !8479
  %80 = load %struct.drm_bridge*, %struct.drm_bridge** %bridge, align 8, !dbg !8480
  %81 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8481
  call void @drm_atomic_bridge_chain_pre_enable(%struct.drm_bridge* %80, %struct.drm_atomic_state* %81) #9, !dbg !8482
  %82 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8483
  %tobool66 = icmp ne %struct.drm_encoder_helper_funcs* %82, null, !dbg !8483
  br i1 %tobool66, label %if.then67, label %if.end85, !dbg !8485

if.then67:                                        ; preds = %if.end59
  %83 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8486
  %atomic_enable68 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %83, i32 0, i32 9, !dbg !8489
  %84 = load void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)** %atomic_enable68, align 8, !dbg !8489
  %tobool69 = icmp ne void (%struct.drm_encoder*, %struct.drm_atomic_state*)* %84, null, !dbg !8486
  br i1 %tobool69, label %if.then70, label %if.else72, !dbg !8490

if.then70:                                        ; preds = %if.then67
  %85 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8491
  %atomic_enable71 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %85, i32 0, i32 9, !dbg !8492
  %86 = load void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)** %atomic_enable71, align 8, !dbg !8492
  %87 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8493
  %88 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8494
  call void %86(%struct.drm_encoder* %87, %struct.drm_atomic_state* %88) #9, !dbg !8491
  br label %if.end84, !dbg !8491

if.else72:                                        ; preds = %if.then67
  %89 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8495
  %enable73 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %89, i32 0, i32 11, !dbg !8497
  %90 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %enable73, align 8, !dbg !8497
  %tobool74 = icmp ne void (%struct.drm_encoder*)* %90, null, !dbg !8495
  br i1 %tobool74, label %if.then75, label %if.else77, !dbg !8498

if.then75:                                        ; preds = %if.else72
  %91 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8499
  %enable76 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %91, i32 0, i32 11, !dbg !8500
  %92 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %enable76, align 8, !dbg !8500
  %93 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8501
  call void %92(%struct.drm_encoder* %93) #9, !dbg !8499
  br label %if.end83, !dbg !8499

if.else77:                                        ; preds = %if.else72
  %94 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8502
  %commit78 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %94, i32 0, i32 4, !dbg !8504
  %95 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %commit78, align 8, !dbg !8504
  %tobool79 = icmp ne void (%struct.drm_encoder*)* %95, null, !dbg !8502
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !8505

if.then80:                                        ; preds = %if.else77
  %96 = load %struct.drm_encoder_helper_funcs*, %struct.drm_encoder_helper_funcs** %funcs48, align 8, !dbg !8506
  %commit81 = getelementptr inbounds %struct.drm_encoder_helper_funcs, %struct.drm_encoder_helper_funcs* %96, i32 0, i32 4, !dbg !8507
  %97 = load void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)** %commit81, align 8, !dbg !8507
  %98 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder, align 8, !dbg !8508
  call void %97(%struct.drm_encoder* %98) #9, !dbg !8506
  br label %if.end82, !dbg !8506

if.end82:                                         ; preds = %if.then80, %if.else77
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.then75
  br label %if.end84

if.end84:                                         ; preds = %if.end83, %if.then70
  br label %if.end85, !dbg !8509

if.end85:                                         ; preds = %if.end84, %if.end59
  %99 = load %struct.drm_bridge*, %struct.drm_bridge** %bridge, align 8, !dbg !8510
  %100 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8511
  call void @drm_atomic_bridge_chain_enable(%struct.drm_bridge* %99, %struct.drm_atomic_state* %100) #9, !dbg !8512
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.then46
  br label %for.inc87, !dbg !8442

for.inc87:                                        ; preds = %if.end86, %if.then58, %if.then50
  %101 = load i32, i32* %i, align 4, !dbg !8440
  %inc88 = add i32 %101, 1, !dbg !8440
  store i32 %inc88, i32* %i, align 4, !dbg !8440
  br label %for.cond30, !dbg !8440, !llvm.loop !8513

for.end89:                                        ; preds = %for.cond30
  %102 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !8515
  %103 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8516
  call void @drm_atomic_helper_commit_writebacks(%struct.drm_device* %102, %struct.drm_atomic_state* %103) #9, !dbg !8517
  ret void, !dbg !8518
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_bridge* @drm_bridge_chain_get_first_bridge(%struct.drm_encoder* %encoder) #0 !dbg !8519 {
entry:
  %encoder.addr = alloca %struct.drm_encoder*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp1 = alloca %struct.drm_bridge*, align 8
  %__mptr = alloca i8*, align 8
  %tmp4 = alloca %struct.drm_bridge*, align 8
  store %struct.drm_encoder* %encoder, %struct.drm_encoder** %encoder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder.addr, metadata !8522, metadata !DIExpression()), !dbg !8523
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !8524, metadata !DIExpression()), !dbg !8526
  %0 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !8526
  %bridge_chain = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %0, i32 0, i32 9, !dbg !8526
  store %struct.list_head* %bridge_chain, %struct.list_head** %head__, align 8, !dbg !8526
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !8527, metadata !DIExpression()), !dbg !8526
  br label %do.body, !dbg !8528

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !8530

do.end:                                           ; preds = %do.body
  %1 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !8528
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8528
  %2 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8528
  store %struct.list_head* %2, %struct.list_head** %tmp, align 8, !dbg !8530
  %3 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !8528
  store %struct.list_head* %3, %struct.list_head** %pos__, align 8, !dbg !8526
  %4 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !8526
  %5 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !8526
  %cmp = icmp ne %struct.list_head* %4, %5, !dbg !8526
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8526

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8532, metadata !DIExpression()), !dbg !8534
  %6 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !8534
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !8534
  store i8* %7, i8** %__mptr, align 8, !dbg !8534
  br label %do.body2, !dbg !8534

do.body2:                                         ; preds = %cond.true
  br label %do.end3, !dbg !8535

do.end3:                                          ; preds = %do.body2
  %8 = load i8*, i8** %__mptr, align 8, !dbg !8534
  %add.ptr = getelementptr i8, i8* %8, i64 -96, !dbg !8534
  %9 = bitcast i8* %add.ptr to %struct.drm_bridge*, !dbg !8534
  store %struct.drm_bridge* %9, %struct.drm_bridge** %tmp4, align 8, !dbg !8535
  %10 = load %struct.drm_bridge*, %struct.drm_bridge** %tmp4, align 8, !dbg !8534
  br label %cond.end, !dbg !8526

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !8526

cond.end:                                         ; preds = %cond.false, %do.end3
  %cond = phi %struct.drm_bridge* [ %10, %do.end3 ], [ null, %cond.false ], !dbg !8526
  store %struct.drm_bridge* %cond, %struct.drm_bridge** %tmp1, align 8, !dbg !8526
  %11 = load %struct.drm_bridge*, %struct.drm_bridge** %tmp1, align 8, !dbg !8526
  ret %struct.drm_bridge* %11, !dbg !8537
}

; Function Attrs: noredzone
declare dso_local void @drm_atomic_bridge_chain_pre_enable(%struct.drm_bridge*, %struct.drm_atomic_state*) #2

; Function Attrs: noredzone
declare dso_local void @drm_atomic_bridge_chain_enable(%struct.drm_bridge*, %struct.drm_atomic_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_atomic_helper_commit_writebacks(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !8538 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %i = alloca i32, align 4
  %funcs = alloca %struct.drm_connector_helper_funcs*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !8539, metadata !DIExpression()), !dbg !8540
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !8541, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !8543, metadata !DIExpression()), !dbg !8544
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !8545, metadata !DIExpression()), !dbg !8546
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8547, metadata !DIExpression()), !dbg !8548
  store i32 0, i32* %i, align 4, !dbg !8549
  br label %for.cond, !dbg !8549

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8551
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8551
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 5, !dbg !8551
  %2 = load i32, i32* %num_connector, align 8, !dbg !8551
  %cmp = icmp slt i32 %0, %2, !dbg !8551
  br i1 %cmp, label %for.body, label %for.end, !dbg !8549

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8553
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 6, !dbg !8553
  %4 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !8553
  %5 = load i32, i32* %i, align 4, !dbg !8553
  %idxprom = sext i32 %5 to i64, !dbg !8553
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %4, i64 %idxprom, !dbg !8553
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !8553
  %6 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !8553
  %tobool = icmp ne %struct.drm_connector* %6, null, !dbg !8553
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !8553

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8553
  %connectors1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 6, !dbg !8553
  %8 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors1, align 8, !dbg !8553
  %9 = load i32, i32* %i, align 4, !dbg !8553
  %idxprom2 = sext i32 %9 to i64, !dbg !8553
  %arrayidx3 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %8, i64 %idxprom2, !dbg !8553
  %ptr4 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx3, i32 0, i32 0, !dbg !8553
  %10 = load %struct.drm_connector*, %struct.drm_connector** %ptr4, align 8, !dbg !8553
  store %struct.drm_connector* %10, %struct.drm_connector** %connector, align 8, !dbg !8553
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !8553
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8553
  %connectors5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 6, !dbg !8553
  %13 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors5, align 8, !dbg !8553
  %14 = load i32, i32* %i, align 4, !dbg !8553
  %idxprom6 = sext i32 %14 to i64, !dbg !8553
  %arrayidx7 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %13, i64 %idxprom6, !dbg !8553
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx7, i32 0, i32 3, !dbg !8553
  %15 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !8553
  store %struct.drm_connector_state* %15, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8553
  %16 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8553
  br i1 true, label %if.else, label %if.then, !dbg !8551

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end39, !dbg !8555

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_connector_helper_funcs** %funcs, metadata !8557, metadata !DIExpression()), !dbg !8559
  %17 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !8560
  %helper_private = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %17, i32 0, i32 29, !dbg !8561
  %18 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %helper_private, align 8, !dbg !8561
  store %struct.drm_connector_helper_funcs* %18, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !8562
  %19 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !8563
  %atomic_commit = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %19, i32 0, i32 7, !dbg !8565
  %20 = load void (%struct.drm_connector*, %struct.drm_connector_state*)*, void (%struct.drm_connector*, %struct.drm_connector_state*)** %atomic_commit, align 8, !dbg !8565
  %tobool8 = icmp ne void (%struct.drm_connector*, %struct.drm_connector_state*)* %20, null, !dbg !8563
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !8566

if.then9:                                         ; preds = %if.else
  br label %for.inc, !dbg !8567

if.end:                                           ; preds = %if.else
  %21 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8568
  %writeback_job = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %21, i32 0, i32 14, !dbg !8570
  %22 = load %struct.drm_writeback_job*, %struct.drm_writeback_job** %writeback_job, align 8, !dbg !8570
  %tobool10 = icmp ne %struct.drm_writeback_job* %22, null, !dbg !8568
  br i1 %tobool10, label %land.lhs.true11, label %if.end38, !dbg !8571

land.lhs.true11:                                  ; preds = %if.end
  %23 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8572
  %writeback_job12 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %23, i32 0, i32 14, !dbg !8573
  %24 = load %struct.drm_writeback_job*, %struct.drm_writeback_job** %writeback_job12, align 8, !dbg !8573
  %fb = getelementptr inbounds %struct.drm_writeback_job, %struct.drm_writeback_job* %24, i32 0, i32 4, !dbg !8574
  %25 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !8574
  %tobool13 = icmp ne %struct.drm_framebuffer* %25, null, !dbg !8572
  br i1 %tobool13, label %if.then14, label %if.end38, !dbg !8575

if.then14:                                        ; preds = %land.lhs.true11
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8576, metadata !DIExpression()), !dbg !8579
  %26 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !8579
  %connector_type = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %26, i32 0, i32 8, !dbg !8579
  %27 = load i32, i32* %connector_type, align 4, !dbg !8579
  %cmp15 = icmp ne i32 %27, 18, !dbg !8579
  %lnot = xor i1 %cmp15, true, !dbg !8579
  %lnot16 = xor i1 %lnot, true, !dbg !8579
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !8579
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8579
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !8580
  %tobool17 = icmp ne i32 %28, 0, !dbg !8580
  %lnot18 = xor i1 %tobool17, true, !dbg !8580
  %lnot20 = xor i1 %lnot18, true, !dbg !8580
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !8580
  %conv = sext i32 %lnot.ext21 to i64, !dbg !8580
  %tobool22 = icmp ne i64 %conv, 0, !dbg !8580
  br i1 %tobool22, label %if.then23, label %if.end30, !dbg !8579

if.then23:                                        ; preds = %if.then14
  br label %do.body, !dbg !8580

do.body:                                          ; preds = %if.then23
  br label %do.body24, !dbg !8582

do.body24:                                        ; preds = %do.body
  br label %do.end, !dbg !8584

do.end:                                           ; preds = %do.body24
  br label %do.body25, !dbg !8582

do.body25:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1315, i32 2305, i64 12) #8, !dbg !8586, !srcloc !8588
  br label %do.end26, !dbg !8586

do.end26:                                         ; preds = %do.body25
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 281) #8, !dbg !8589, !srcloc !8591
  br label %do.body27, !dbg !8582

do.body27:                                        ; preds = %do.end26
  br label %do.end28, !dbg !8592

do.end28:                                         ; preds = %do.body27
  br label %do.end29, !dbg !8582

do.end29:                                         ; preds = %do.end28
  br label %if.end30, !dbg !8582

if.end30:                                         ; preds = %do.end29, %if.then14
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !8579
  %tobool31 = icmp ne i32 %29, 0, !dbg !8579
  %lnot32 = xor i1 %tobool31, true, !dbg !8579
  %lnot34 = xor i1 %lnot32, true, !dbg !8579
  %lnot.ext35 = zext i1 %lnot34 to i32, !dbg !8579
  %conv36 = sext i32 %lnot.ext35 to i64, !dbg !8579
  store i64 %conv36, i64* %tmp, align 8, !dbg !8580
  %30 = load i64, i64* %tmp, align 8, !dbg !8579
  %31 = load %struct.drm_connector_helper_funcs*, %struct.drm_connector_helper_funcs** %funcs, align 8, !dbg !8594
  %atomic_commit37 = getelementptr inbounds %struct.drm_connector_helper_funcs, %struct.drm_connector_helper_funcs* %31, i32 0, i32 7, !dbg !8595
  %32 = load void (%struct.drm_connector*, %struct.drm_connector_state*)*, void (%struct.drm_connector*, %struct.drm_connector_state*)** %atomic_commit37, align 8, !dbg !8595
  %33 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !8596
  %34 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !8597
  call void %32(%struct.drm_connector* %33, %struct.drm_connector_state* %34) #9, !dbg !8594
  br label %if.end38, !dbg !8598

if.end38:                                         ; preds = %if.end30, %land.lhs.true11, %if.end
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then
  br label %for.inc, !dbg !8553

for.inc:                                          ; preds = %if.end39, %if.then9
  %35 = load i32, i32* %i, align 4, !dbg !8551
  %inc = add i32 %35, 1, !dbg !8551
  store i32 %inc, i32* %i, align 4, !dbg !8551
  br label %for.cond, !dbg !8551, !llvm.loop !8599

for.end:                                          ; preds = %for.cond
  ret void, !dbg !8601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_wait_for_fences(%struct.drm_device* %dev, %struct.drm_atomic_state* %state, i1 zeroext %pre_swap) #0 !dbg !8602 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %pre_swap.addr = alloca i8, align 1
  %plane = alloca %struct.drm_plane*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !8603, metadata !DIExpression()), !dbg !8604
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !8605, metadata !DIExpression()), !dbg !8606
  %frombool = zext i1 %pre_swap to i8
  store i8 %frombool, i8* %pre_swap.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pre_swap.addr, metadata !8607, metadata !DIExpression()), !dbg !8608
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !8609, metadata !DIExpression()), !dbg !8610
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !8611, metadata !DIExpression()), !dbg !8612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8613, metadata !DIExpression()), !dbg !8614
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8615, metadata !DIExpression()), !dbg !8616
  store i32 0, i32* %i, align 4, !dbg !8617
  br label %for.cond, !dbg !8617

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8619
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !8619
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !8619
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !8619
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !8619
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 17, !dbg !8619
  %3 = load i32, i32* %num_total_plane, align 8, !dbg !8619
  %cmp = icmp slt i32 %0, %3, !dbg !8619
  br i1 %cmp, label %for.body, label %for.end, !dbg !8617

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !8621
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 3, !dbg !8621
  %5 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !8621
  %6 = load i32, i32* %i, align 4, !dbg !8621
  %idxprom = sext i32 %6 to i64, !dbg !8621
  %arrayidx = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %5, i64 %idxprom, !dbg !8621
  %ptr = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx, i32 0, i32 0, !dbg !8621
  %7 = load %struct.drm_plane*, %struct.drm_plane** %ptr, align 8, !dbg !8621
  %tobool = icmp ne %struct.drm_plane* %7, null, !dbg !8621
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !8621

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !8621
  %planes2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 3, !dbg !8621
  %9 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes2, align 8, !dbg !8621
  %10 = load i32, i32* %i, align 4, !dbg !8621
  %idxprom3 = sext i32 %10 to i64, !dbg !8621
  %arrayidx4 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %9, i64 %idxprom3, !dbg !8621
  %ptr5 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx4, i32 0, i32 0, !dbg !8621
  %11 = load %struct.drm_plane*, %struct.drm_plane** %ptr5, align 8, !dbg !8621
  store %struct.drm_plane* %11, %struct.drm_plane** %plane, align 8, !dbg !8621
  %12 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !8621
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !8621
  %planes6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 3, !dbg !8621
  %14 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes6, align 8, !dbg !8621
  %15 = load i32, i32* %i, align 4, !dbg !8621
  %idxprom7 = sext i32 %15 to i64, !dbg !8621
  %arrayidx8 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %14, i64 %idxprom7, !dbg !8621
  %new_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx8, i32 0, i32 3, !dbg !8621
  %16 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state, align 8, !dbg !8621
  store %struct.drm_plane_state* %16, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !8621
  %17 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !8621
  br i1 true, label %if.else, label %if.then, !dbg !8619

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end42, !dbg !8623

if.else:                                          ; preds = %land.lhs.true
  %18 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !8625
  %fence = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %18, i32 0, i32 3, !dbg !8628
  %19 = load %struct.dma_fence*, %struct.dma_fence** %fence, align 8, !dbg !8628
  %tobool9 = icmp ne %struct.dma_fence* %19, null, !dbg !8625
  br i1 %tobool9, label %if.end, label %if.then10, !dbg !8629

if.then10:                                        ; preds = %if.else
  br label %for.inc, !dbg !8630

if.end:                                           ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8631, metadata !DIExpression()), !dbg !8633
  %20 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !8633
  %fb = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %20, i32 0, i32 2, !dbg !8633
  %21 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !8633
  %tobool11 = icmp ne %struct.drm_framebuffer* %21, null, !dbg !8633
  %lnot = xor i1 %tobool11, true, !dbg !8633
  %lnot12 = xor i1 %lnot, true, !dbg !8633
  %lnot13 = xor i1 %lnot12, true, !dbg !8633
  %lnot.ext = zext i1 %lnot13 to i32, !dbg !8633
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8633
  %22 = load i32, i32* %__ret_warn_on, align 4, !dbg !8634
  %tobool14 = icmp ne i32 %22, 0, !dbg !8634
  %lnot15 = xor i1 %tobool14, true, !dbg !8634
  %lnot17 = xor i1 %lnot15, true, !dbg !8634
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !8634
  %conv = sext i32 %lnot.ext18 to i64, !dbg !8634
  %tobool19 = icmp ne i64 %conv, 0, !dbg !8634
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !8633

if.then20:                                        ; preds = %if.end
  br label %do.body, !dbg !8634

do.body:                                          ; preds = %if.then20
  br label %do.body21, !dbg !8636

do.body21:                                        ; preds = %do.body
  br label %do.end, !dbg !8638

do.end:                                           ; preds = %do.body21
  br label %do.body22, !dbg !8636

do.body22:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1441, i32 2305, i64 12) #8, !dbg !8640, !srcloc !8642
  br label %do.end23, !dbg !8640

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 282) #8, !dbg !8643, !srcloc !8645
  br label %do.body24, !dbg !8636

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !8646

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !8636

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !8636

if.end27:                                         ; preds = %do.end26, %if.end
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !8633
  %tobool28 = icmp ne i32 %23, 0, !dbg !8633
  %lnot29 = xor i1 %tobool28, true, !dbg !8633
  %lnot31 = xor i1 %lnot29, true, !dbg !8633
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !8633
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !8633
  store i64 %conv33, i64* %tmp, align 8, !dbg !8634
  %24 = load i64, i64* %tmp, align 8, !dbg !8633
  %25 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !8648
  %fence34 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %25, i32 0, i32 3, !dbg !8649
  %26 = load %struct.dma_fence*, %struct.dma_fence** %fence34, align 8, !dbg !8649
  %27 = load i8, i8* %pre_swap.addr, align 1, !dbg !8650
  %tobool35 = trunc i8 %27 to i1, !dbg !8650
  %call = call i64 @dma_fence_wait(%struct.dma_fence* %26, i1 zeroext %tobool35) #9, !dbg !8651
  %conv36 = trunc i64 %call to i32, !dbg !8651
  store i32 %conv36, i32* %ret, align 4, !dbg !8652
  %28 = load i32, i32* %ret, align 4, !dbg !8653
  %tobool37 = icmp ne i32 %28, 0, !dbg !8653
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !8655

if.then38:                                        ; preds = %if.end27
  %29 = load i32, i32* %ret, align 4, !dbg !8656
  store i32 %29, i32* %retval, align 4, !dbg !8657
  br label %return, !dbg !8657

if.end39:                                         ; preds = %if.end27
  %30 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !8658
  %fence40 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %30, i32 0, i32 3, !dbg !8659
  %31 = load %struct.dma_fence*, %struct.dma_fence** %fence40, align 8, !dbg !8659
  call void @dma_fence_put(%struct.dma_fence* %31) #9, !dbg !8660
  %32 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !8661
  %fence41 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %32, i32 0, i32 3, !dbg !8662
  store %struct.dma_fence* null, %struct.dma_fence** %fence41, align 8, !dbg !8663
  br label %if.end42

if.end42:                                         ; preds = %if.end39, %if.then
  br label %for.inc, !dbg !8621

for.inc:                                          ; preds = %if.end42, %if.then10
  %33 = load i32, i32* %i, align 4, !dbg !8619
  %inc = add i32 %33, 1, !dbg !8619
  store i32 %inc, i32* %i, align 4, !dbg !8619
  br label %for.cond, !dbg !8619, !llvm.loop !8664

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !8666
  br label %return, !dbg !8666

return:                                           ; preds = %for.end, %if.then38
  %34 = load i32, i32* %retval, align 4, !dbg !8667
  ret i32 %34, !dbg !8667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @dma_fence_wait(%struct.dma_fence* %fence, i1 zeroext %intr) #0 !dbg !8668 {
entry:
  %fence.addr = alloca %struct.dma_fence*, align 8
  %intr.addr = alloca i8, align 1
  %ret = alloca i64, align 8
  store %struct.dma_fence* %fence, %struct.dma_fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %fence.addr, metadata !8671, metadata !DIExpression()), !dbg !8672
  %frombool = zext i1 %intr to i8
  store i8 %frombool, i8* %intr.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %intr.addr, metadata !8673, metadata !DIExpression()), !dbg !8674
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !8675, metadata !DIExpression()), !dbg !8676
  %0 = load %struct.dma_fence*, %struct.dma_fence** %fence.addr, align 8, !dbg !8677
  %1 = load i8, i8* %intr.addr, align 1, !dbg !8678
  %tobool = trunc i8 %1 to i1, !dbg !8678
  %call = call i64 @dma_fence_wait_timeout(%struct.dma_fence* %0, i1 zeroext %tobool, i64 9223372036854775807) #9, !dbg !8679
  store i64 %call, i64* %ret, align 8, !dbg !8680
  %2 = load i64, i64* %ret, align 8, !dbg !8681
  %cmp = icmp slt i64 %2, 0, !dbg !8682
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8681

cond.true:                                        ; preds = %entry
  %3 = load i64, i64* %ret, align 8, !dbg !8683
  br label %cond.end, !dbg !8681

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !8681

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %3, %cond.true ], [ 0, %cond.false ], !dbg !8681
  ret i64 %cond, !dbg !8684
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dma_fence_put(%struct.dma_fence* %fence) #0 !dbg !8685 {
entry:
  %fence.addr = alloca %struct.dma_fence*, align 8
  store %struct.dma_fence* %fence, %struct.dma_fence** %fence.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dma_fence** %fence.addr, metadata !8686, metadata !DIExpression()), !dbg !8687
  %0 = load %struct.dma_fence*, %struct.dma_fence** %fence.addr, align 8, !dbg !8688
  %tobool = icmp ne %struct.dma_fence* %0, null, !dbg !8688
  br i1 %tobool, label %if.then, label %if.end, !dbg !8690

if.then:                                          ; preds = %entry
  %1 = load %struct.dma_fence*, %struct.dma_fence** %fence.addr, align 8, !dbg !8691
  %refcount = getelementptr inbounds %struct.dma_fence, %struct.dma_fence* %1, i32 0, i32 6, !dbg !8692
  %call = call i32 @kref_put(%struct.kref* %refcount, void (%struct.kref*)* @dma_fence_release) #9, !dbg !8693
  br label %if.end, !dbg !8693

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !8694
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_wait_for_vblanks(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !8695 {
entry:
  %retval.i146 = alloca i64, align 8
  %m.addr.i147 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i147, metadata !8696, metadata !DIExpression()), !dbg !8701
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8696, metadata !DIExpression()), !dbg !8710
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %crtc_mask = alloca i32, align 4
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret70 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond76 = alloca i8, align 1
  %tmp89 = alloca i32, align 4
  %tmp105 = alloca i64, align 8
  %tmp107 = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp135 = alloca i64, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !8712, metadata !DIExpression()), !dbg !8713
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !8714, metadata !DIExpression()), !dbg !8715
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !8716, metadata !DIExpression()), !dbg !8717
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !8718, metadata !DIExpression()), !dbg !8719
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !8720, metadata !DIExpression()), !dbg !8721
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8722, metadata !DIExpression()), !dbg !8723
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8724, metadata !DIExpression()), !dbg !8725
  call void @llvm.dbg.declare(metadata i32* %crtc_mask, metadata !8726, metadata !DIExpression()), !dbg !8727
  store i32 0, i32* %crtc_mask, align 4, !dbg !8727
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8728
  %legacy_cursor_update = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 2, !dbg !8730
  %bf.load = load i8, i8* %legacy_cursor_update, align 8, !dbg !8730
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !8730
  %bf.clear = and i8 %bf.lshr, 1, !dbg !8730
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !8730
  br i1 %bf.cast, label %if.then, label %if.end, !dbg !8731

if.then:                                          ; preds = %entry
  br label %for.end145, !dbg !8732

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !8733
  br label %for.cond, !dbg !8733

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !8735
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8735
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %2, i32 0, i32 1, !dbg !8735
  %3 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !8735
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %3, i32 0, i32 35, !dbg !8735
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !8735
  %4 = load i32, i32* %num_crtc, align 8, !dbg !8735
  %cmp = icmp slt i32 %1, %4, !dbg !8735
  br i1 %cmp, label %for.body, label %for.end, !dbg !8733

for.body:                                         ; preds = %for.cond
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8737
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %5, i32 0, i32 4, !dbg !8737
  %6 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !8737
  %7 = load i32, i32* %i, align 4, !dbg !8737
  %idxprom = sext i32 %7 to i64, !dbg !8737
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %6, i64 %idxprom, !dbg !8737
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !8737
  %8 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !8737
  %tobool = icmp ne %struct.drm_crtc* %8, null, !dbg !8737
  br i1 %tobool, label %land.lhs.true, label %if.then13, !dbg !8737

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8737
  %crtcs2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %9, i32 0, i32 4, !dbg !8737
  %10 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs2, align 8, !dbg !8737
  %11 = load i32, i32* %i, align 4, !dbg !8737
  %idxprom3 = sext i32 %11 to i64, !dbg !8737
  %arrayidx4 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %10, i64 %idxprom3, !dbg !8737
  %ptr5 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx4, i32 0, i32 0, !dbg !8737
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr5, align 8, !dbg !8737
  store %struct.drm_crtc* %12, %struct.drm_crtc** %crtc, align 8, !dbg !8737
  %13 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8737
  %14 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8737
  %crtcs6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %14, i32 0, i32 4, !dbg !8737
  %15 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs6, align 8, !dbg !8737
  %16 = load i32, i32* %i, align 4, !dbg !8737
  %idxprom7 = sext i32 %16 to i64, !dbg !8737
  %arrayidx8 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %15, i64 %idxprom7, !dbg !8737
  %old_state9 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx8, i32 0, i32 2, !dbg !8737
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state9, align 8, !dbg !8737
  store %struct.drm_crtc_state* %17, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8737
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8737
  %19 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8737
  %crtcs10 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %19, i32 0, i32 4, !dbg !8737
  %20 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs10, align 8, !dbg !8737
  %21 = load i32, i32* %i, align 4, !dbg !8737
  %idxprom11 = sext i32 %21 to i64, !dbg !8737
  %arrayidx12 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %20, i64 %idxprom11, !dbg !8737
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx12, i32 0, i32 3, !dbg !8737
  %22 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !8737
  store %struct.drm_crtc_state* %22, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8737
  br i1 true, label %if.else, label %if.then13, !dbg !8735

if.then13:                                        ; preds = %land.lhs.true, %for.body
  br label %if.end25, !dbg !8739

if.else:                                          ; preds = %land.lhs.true
  %23 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !8741
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %23, i32 0, i32 2, !dbg !8744
  %24 = load i8, i8* %active, align 1, !dbg !8744
  %tobool14 = trunc i8 %24 to i1, !dbg !8744
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !8745

if.then15:                                        ; preds = %if.else
  br label %for.inc, !dbg !8746

if.end16:                                         ; preds = %if.else
  %25 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8747
  %call = call i32 @drm_crtc_vblank_get(%struct.drm_crtc* %25) #9, !dbg !8748
  store i32 %call, i32* %ret, align 4, !dbg !8749
  %26 = load i32, i32* %ret, align 4, !dbg !8750
  %cmp17 = icmp ne i32 %26, 0, !dbg !8752
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !8753

if.then18:                                        ; preds = %if.end16
  br label %for.inc, !dbg !8754

if.end19:                                         ; preds = %if.end16
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8755
  %call20 = call i32 @drm_crtc_mask(%struct.drm_crtc* %27) #9, !dbg !8756
  %28 = load i32, i32* %crtc_mask, align 4, !dbg !8757
  %or = or i32 %28, %call20, !dbg !8757
  store i32 %or, i32* %crtc_mask, align 4, !dbg !8757
  %29 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8758
  %call21 = call i64 @drm_crtc_vblank_count(%struct.drm_crtc* %29) #9, !dbg !8759
  %30 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8760
  %crtcs22 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %30, i32 0, i32 4, !dbg !8761
  %31 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs22, align 8, !dbg !8761
  %32 = load i32, i32* %i, align 4, !dbg !8762
  %idxprom23 = sext i32 %32 to i64, !dbg !8760
  %arrayidx24 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %31, i64 %idxprom23, !dbg !8760
  %last_vblank_count = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx24, i32 0, i32 6, !dbg !8763
  store i64 %call21, i64* %last_vblank_count, align 8, !dbg !8764
  br label %if.end25

if.end25:                                         ; preds = %if.end19, %if.then13
  br label %for.inc, !dbg !8737

for.inc:                                          ; preds = %if.end25, %if.then18, %if.then15
  %33 = load i32, i32* %i, align 4, !dbg !8735
  %inc = add i32 %33, 1, !dbg !8735
  store i32 %inc, i32* %i, align 4, !dbg !8735
  br label %for.cond, !dbg !8735, !llvm.loop !8765

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8767
  br label %for.cond26, !dbg !8767

for.cond26:                                       ; preds = %for.inc143, %for.end
  %34 = load i32, i32* %i, align 4, !dbg !8768
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8768
  %dev27 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %35, i32 0, i32 1, !dbg !8768
  %36 = load %struct.drm_device*, %struct.drm_device** %dev27, align 8, !dbg !8768
  %mode_config28 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %36, i32 0, i32 35, !dbg !8768
  %num_crtc29 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config28, i32 0, i32 19, !dbg !8768
  %37 = load i32, i32* %num_crtc29, align 8, !dbg !8768
  %cmp30 = icmp slt i32 %34, %37, !dbg !8768
  br i1 %cmp30, label %for.body31, label %for.end145, !dbg !8767

for.body31:                                       ; preds = %for.cond26
  %38 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8769
  %crtcs32 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %38, i32 0, i32 4, !dbg !8769
  %39 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs32, align 8, !dbg !8769
  %40 = load i32, i32* %i, align 4, !dbg !8769
  %idxprom33 = sext i32 %40 to i64, !dbg !8769
  %arrayidx34 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %39, i64 %idxprom33, !dbg !8769
  %ptr35 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx34, i32 0, i32 0, !dbg !8769
  %41 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr35, align 8, !dbg !8769
  %tobool36 = icmp ne %struct.drm_crtc* %41, null, !dbg !8769
  br i1 %tobool36, label %land.lhs.true37, label %if.then46, !dbg !8769

land.lhs.true37:                                  ; preds = %for.body31
  %42 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8769
  %crtcs38 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %42, i32 0, i32 4, !dbg !8769
  %43 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs38, align 8, !dbg !8769
  %44 = load i32, i32* %i, align 4, !dbg !8769
  %idxprom39 = sext i32 %44 to i64, !dbg !8769
  %arrayidx40 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %43, i64 %idxprom39, !dbg !8769
  %ptr41 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx40, i32 0, i32 0, !dbg !8769
  %45 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr41, align 8, !dbg !8769
  store %struct.drm_crtc* %45, %struct.drm_crtc** %crtc, align 8, !dbg !8769
  %46 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8769
  %crtcs42 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %46, i32 0, i32 4, !dbg !8769
  %47 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs42, align 8, !dbg !8769
  %48 = load i32, i32* %i, align 4, !dbg !8769
  %idxprom43 = sext i32 %48 to i64, !dbg !8769
  %arrayidx44 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %47, i64 %idxprom43, !dbg !8769
  %old_state45 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx44, i32 0, i32 2, !dbg !8769
  %49 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state45, align 8, !dbg !8769
  store %struct.drm_crtc_state* %49, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !8769
  br i1 true, label %if.else47, label %if.then46, !dbg !8768

if.then46:                                        ; preds = %land.lhs.true37, %for.body31
  br label %if.end142, !dbg !8770

if.else47:                                        ; preds = %land.lhs.true37
  %50 = load i32, i32* %crtc_mask, align 4, !dbg !8772
  %51 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8774
  %call48 = call i32 @drm_crtc_mask(%struct.drm_crtc* %51) #9, !dbg !8775
  %and = and i32 %50, %call48, !dbg !8776
  %tobool49 = icmp ne i32 %and, 0, !dbg !8776
  br i1 %tobool49, label %if.end51, label %if.then50, !dbg !8777

if.then50:                                        ; preds = %if.else47
  br label %for.inc143, !dbg !8778

if.end51:                                         ; preds = %if.else47
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8779, metadata !DIExpression()), !dbg !8780
  store i32 100, i32* %m.addr.i, align 4
  %52 = load i32, i32* %m.addr.i, align 4, !dbg !8781
  %53 = call i1 @llvm.is.constant.i32(i32 %52) #8, !dbg !8783
  br i1 %53, label %if.then.i, label %if.else.i, !dbg !8784

if.then.i:                                        ; preds = %if.end51
  %54 = load i32, i32* %m.addr.i, align 4, !dbg !8785
  %cmp.i = icmp slt i32 %54, 0, !dbg !8788
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8789

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8790
  br label %msecs_to_jiffies.exit, !dbg !8790

if.end.i:                                         ; preds = %if.then.i
  %55 = load i32, i32* %m.addr.i, align 4, !dbg !8791
  %call.i = call i64 @_msecs_to_jiffies(i32 %55) #10, !dbg !8792
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8793
  br label %msecs_to_jiffies.exit, !dbg !8793

if.else.i:                                        ; preds = %if.end51
  %56 = load i32, i32* %m.addr.i, align 4, !dbg !8794
  %call2.i = call i64 @__msecs_to_jiffies(i32 %56) #10, !dbg !8796
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8797
  br label %msecs_to_jiffies.exit, !dbg !8797

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %57 = load i64, i64* %retval.i, align 8, !dbg !8798
  store i64 %57, i64* %__ret, align 8, !dbg !8780
  br label %do.body, !dbg !8780

do.body:                                          ; preds = %msecs_to_jiffies.exit
  br label %do.body53, !dbg !8799

do.body53:                                        ; preds = %do.body
  br label %do.end, !dbg !8801

do.end:                                           ; preds = %do.body53
  br label %do.end54, !dbg !8799

do.end54:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !8803, metadata !DIExpression()), !dbg !8805
  %58 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8805
  %crtcs55 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %58, i32 0, i32 4, !dbg !8805
  %59 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs55, align 8, !dbg !8805
  %60 = load i32, i32* %i, align 4, !dbg !8805
  %idxprom56 = sext i32 %60 to i64, !dbg !8805
  %arrayidx57 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %59, i64 %idxprom56, !dbg !8805
  %last_vblank_count58 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx57, i32 0, i32 6, !dbg !8805
  %61 = load i64, i64* %last_vblank_count58, align 8, !dbg !8805
  %62 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8805
  %call59 = call i64 @drm_crtc_vblank_count(%struct.drm_crtc* %62) #9, !dbg !8805
  %cmp60 = icmp ne i64 %61, %call59, !dbg !8805
  %frombool = zext i1 %cmp60 to i8, !dbg !8805
  store i8 %frombool, i8* %__cond, align 1, !dbg !8805
  %63 = load i8, i8* %__cond, align 1, !dbg !8806
  %tobool61 = trunc i8 %63 to i1, !dbg !8806
  br i1 %tobool61, label %land.lhs.true62, label %if.end65, !dbg !8806

land.lhs.true62:                                  ; preds = %do.end54
  %64 = load i64, i64* %__ret, align 8, !dbg !8806
  %tobool63 = icmp ne i64 %64, 0, !dbg !8806
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !8805

if.then64:                                        ; preds = %land.lhs.true62
  store i64 1, i64* %__ret, align 8, !dbg !8806
  br label %if.end65, !dbg !8806

if.end65:                                         ; preds = %if.then64, %land.lhs.true62, %do.end54
  %65 = load i8, i8* %__cond, align 1, !dbg !8805
  %tobool66 = trunc i8 %65 to i1, !dbg !8805
  br i1 %tobool66, label %lor.end, label %lor.rhs, !dbg !8805

lor.rhs:                                          ; preds = %if.end65
  %66 = load i64, i64* %__ret, align 8, !dbg !8805
  %tobool67 = icmp ne i64 %66, 0, !dbg !8805
  %lnot = xor i1 %tobool67, true, !dbg !8805
  br label %lor.end, !dbg !8805

lor.end:                                          ; preds = %lor.rhs, %if.end65
  %67 = phi i1 [ true, %if.end65 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %67 to i32, !dbg !8805
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !8806
  %68 = load i32, i32* %tmp, align 4, !dbg !8805
  %tobool68 = icmp ne i32 %68, 0, !dbg !8808
  br i1 %tobool68, label %if.end106, label %if.then69, !dbg !8780

if.then69:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !8809, metadata !DIExpression()), !dbg !8821
  call void @llvm.dbg.declare(metadata i64* %__ret70, metadata !8822, metadata !DIExpression()), !dbg !8821
  store i32 100, i32* %m.addr.i147, align 4
  %69 = load i32, i32* %m.addr.i147, align 4, !dbg !8823
  %70 = call i1 @llvm.is.constant.i32(i32 %69) #8, !dbg !8824
  br i1 %70, label %if.then.i149, label %if.else.i154, !dbg !8825

if.then.i149:                                     ; preds = %if.then69
  %71 = load i32, i32* %m.addr.i147, align 4, !dbg !8826
  %cmp.i148 = icmp slt i32 %71, 0, !dbg !8827
  br i1 %cmp.i148, label %if.then1.i150, label %if.end.i152, !dbg !8828

if.then1.i150:                                    ; preds = %if.then.i149
  store i64 4611686018427387902, i64* %retval.i146, align 8, !dbg !8829
  br label %msecs_to_jiffies.exit155, !dbg !8829

if.end.i152:                                      ; preds = %if.then.i149
  %72 = load i32, i32* %m.addr.i147, align 4, !dbg !8830
  %call.i151 = call i64 @_msecs_to_jiffies(i32 %72) #10, !dbg !8831
  store i64 %call.i151, i64* %retval.i146, align 8, !dbg !8832
  br label %msecs_to_jiffies.exit155, !dbg !8832

if.else.i154:                                     ; preds = %if.then69
  %73 = load i32, i32* %m.addr.i147, align 4, !dbg !8833
  %call2.i153 = call i64 @__msecs_to_jiffies(i32 %73) #10, !dbg !8834
  store i64 %call2.i153, i64* %retval.i146, align 8, !dbg !8835
  br label %msecs_to_jiffies.exit155, !dbg !8835

msecs_to_jiffies.exit155:                         ; preds = %if.then1.i150, %if.end.i152, %if.else.i154
  %74 = load i64, i64* %retval.i146, align 8, !dbg !8836
  store i64 %74, i64* %__ret70, align 8, !dbg !8821
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #9, !dbg !8821
  br label %for.cond72, !dbg !8821

for.cond72:                                       ; preds = %if.end98, %msecs_to_jiffies.exit155
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !8837, metadata !DIExpression()), !dbg !8841
  %75 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !8841
  %vblank = getelementptr inbounds %struct.drm_device, %struct.drm_device* %75, i32 0, i32 26, !dbg !8841
  %76 = load %struct.drm_vblank_crtc*, %struct.drm_vblank_crtc** %vblank, align 8, !dbg !8841
  %77 = load i32, i32* %i, align 4, !dbg !8841
  %idxprom73 = sext i32 %77 to i64, !dbg !8841
  %arrayidx74 = getelementptr %struct.drm_vblank_crtc, %struct.drm_vblank_crtc* %76, i64 %idxprom73, !dbg !8841
  %queue = getelementptr inbounds %struct.drm_vblank_crtc, %struct.drm_vblank_crtc* %arrayidx74, i32 0, i32 1, !dbg !8841
  %call75 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %queue, %struct.wait_queue_entry* %__wq_entry, i32 2) #9, !dbg !8841
  store i64 %call75, i64* %__int, align 8, !dbg !8841
  call void @llvm.dbg.declare(metadata i8* %__cond76, metadata !8842, metadata !DIExpression()), !dbg !8845
  %78 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8845
  %crtcs77 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %78, i32 0, i32 4, !dbg !8845
  %79 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs77, align 8, !dbg !8845
  %80 = load i32, i32* %i, align 4, !dbg !8845
  %idxprom78 = sext i32 %80 to i64, !dbg !8845
  %arrayidx79 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %79, i64 %idxprom78, !dbg !8845
  %last_vblank_count80 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx79, i32 0, i32 6, !dbg !8845
  %81 = load i64, i64* %last_vblank_count80, align 8, !dbg !8845
  %82 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8845
  %call81 = call i64 @drm_crtc_vblank_count(%struct.drm_crtc* %82) #9, !dbg !8845
  %cmp82 = icmp ne i64 %81, %call81, !dbg !8845
  %frombool83 = zext i1 %cmp82 to i8, !dbg !8845
  store i8 %frombool83, i8* %__cond76, align 1, !dbg !8845
  %83 = load i8, i8* %__cond76, align 1, !dbg !8846
  %tobool84 = trunc i8 %83 to i1, !dbg !8846
  br i1 %tobool84, label %land.lhs.true85, label %if.end88, !dbg !8846

land.lhs.true85:                                  ; preds = %for.cond72
  %84 = load i64, i64* %__ret70, align 8, !dbg !8846
  %tobool86 = icmp ne i64 %84, 0, !dbg !8846
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !8845

if.then87:                                        ; preds = %land.lhs.true85
  store i64 1, i64* %__ret70, align 8, !dbg !8846
  br label %if.end88, !dbg !8846

if.end88:                                         ; preds = %if.then87, %land.lhs.true85, %for.cond72
  %85 = load i8, i8* %__cond76, align 1, !dbg !8845
  %tobool90 = trunc i8 %85 to i1, !dbg !8845
  br i1 %tobool90, label %lor.end94, label %lor.rhs91, !dbg !8845

lor.rhs91:                                        ; preds = %if.end88
  %86 = load i64, i64* %__ret70, align 8, !dbg !8845
  %tobool92 = icmp ne i64 %86, 0, !dbg !8845
  %lnot93 = xor i1 %tobool92, true, !dbg !8845
  br label %lor.end94, !dbg !8845

lor.end94:                                        ; preds = %lor.rhs91, %if.end88
  %87 = phi i1 [ true, %if.end88 ], [ %lnot93, %lor.rhs91 ]
  %lor.ext95 = zext i1 %87 to i32, !dbg !8845
  store i32 %lor.ext95, i32* %tmp89, align 4, !dbg !8846
  %88 = load i32, i32* %tmp89, align 4, !dbg !8845
  %tobool96 = icmp ne i32 %88, 0, !dbg !8848
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !8841

if.then97:                                        ; preds = %lor.end94
  br label %for.end100, !dbg !8848

if.end98:                                         ; preds = %lor.end94
  %89 = load i64, i64* %__ret70, align 8, !dbg !8841
  %call99 = call i64 @schedule_timeout(i64 %89) #9, !dbg !8841
  store i64 %call99, i64* %__ret70, align 8, !dbg !8841
  br label %for.cond72, !dbg !8849, !llvm.loop !8850

for.end100:                                       ; preds = %if.then97
  %90 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !8821
  %vblank101 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %90, i32 0, i32 26, !dbg !8821
  %91 = load %struct.drm_vblank_crtc*, %struct.drm_vblank_crtc** %vblank101, align 8, !dbg !8821
  %92 = load i32, i32* %i, align 4, !dbg !8821
  %idxprom102 = sext i32 %92 to i64, !dbg !8821
  %arrayidx103 = getelementptr %struct.drm_vblank_crtc, %struct.drm_vblank_crtc* %91, i64 %idxprom102, !dbg !8821
  %queue104 = getelementptr inbounds %struct.drm_vblank_crtc, %struct.drm_vblank_crtc* %arrayidx103, i32 0, i32 1, !dbg !8821
  call void @finish_wait(%struct.wait_queue_head* %queue104, %struct.wait_queue_entry* %__wq_entry) #9, !dbg !8821
  br label %__out, !dbg !8821

__out:                                            ; preds = %for.end100
  call void @llvm.dbg.label(metadata !8852), !dbg !8821
  %93 = load i64, i64* %__ret70, align 8, !dbg !8821
  store i64 %93, i64* %tmp105, align 8, !dbg !8821
  %94 = load i64, i64* %tmp105, align 8, !dbg !8821
  store i64 %94, i64* %__ret, align 8, !dbg !8808
  br label %if.end106, !dbg !8808

if.end106:                                        ; preds = %__out, %lor.end
  %95 = load i64, i64* %__ret, align 8, !dbg !8780
  store i64 %95, i64* %tmp107, align 8, !dbg !8808
  %96 = load i64, i64* %tmp107, align 8, !dbg !8780
  %conv = trunc i64 %96 to i32, !dbg !8853
  store i32 %conv, i32* %ret, align 4, !dbg !8854
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8855, metadata !DIExpression()), !dbg !8857
  %97 = load i32, i32* %ret, align 4, !dbg !8857
  %tobool108 = icmp ne i32 %97, 0, !dbg !8857
  %lnot109 = xor i1 %tobool108, true, !dbg !8857
  %lnot110 = xor i1 %lnot109, true, !dbg !8857
  %lnot111 = xor i1 %lnot110, true, !dbg !8857
  %lnot.ext = zext i1 %lnot111 to i32, !dbg !8857
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8857
  %98 = load i32, i32* %__ret_warn_on, align 4, !dbg !8858
  %tobool112 = icmp ne i32 %98, 0, !dbg !8858
  %lnot113 = xor i1 %tobool112, true, !dbg !8858
  %lnot115 = xor i1 %lnot113, true, !dbg !8858
  %lnot.ext116 = zext i1 %lnot115 to i32, !dbg !8858
  %conv117 = sext i32 %lnot.ext116 to i64, !dbg !8858
  %tobool118 = icmp ne i64 %conv117, 0, !dbg !8858
  br i1 %tobool118, label %if.then119, label %if.end134, !dbg !8857

if.then119:                                       ; preds = %if.end106
  br label %do.body120, !dbg !8858

do.body120:                                       ; preds = %if.then119
  br label %do.body121, !dbg !8860

do.body121:                                       ; preds = %do.body120
  br label %do.end122, !dbg !8862

do.end122:                                        ; preds = %do.body121
  %99 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8860
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %99, i32 0, i32 5, !dbg !8860
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !8860
  %100 = load i32, i32* %id, align 8, !dbg !8860
  %101 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8860
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %101, i32 0, i32 3, !dbg !8860
  %102 = load i8*, i8** %name, align 8, !dbg !8860
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0), i32 %100, i8* %102) #9, !dbg !8860
  br label %do.body123, !dbg !8860

do.body123:                                       ; preds = %do.end122
  br label %do.body124, !dbg !8864

do.body124:                                       ; preds = %do.body123
  br label %do.end125, !dbg !8866

do.end125:                                        ; preds = %do.body124
  br label %do.body126, !dbg !8864

do.body126:                                       ; preds = %do.end125
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1513, i32 2313, i64 12) #8, !dbg !8868, !srcloc !8870
  br label %do.end127, !dbg !8868

do.end127:                                        ; preds = %do.body126
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 283) #8, !dbg !8871, !srcloc !8873
  br label %do.body128, !dbg !8864

do.body128:                                       ; preds = %do.end127
  br label %do.end129, !dbg !8874

do.end129:                                        ; preds = %do.body128
  br label %do.end130, !dbg !8864

do.end130:                                        ; preds = %do.end129
  br label %do.body131, !dbg !8860

do.body131:                                       ; preds = %do.end130
  br label %do.end132, !dbg !8876

do.end132:                                        ; preds = %do.body131
  br label %do.end133, !dbg !8860

do.end133:                                        ; preds = %do.end132
  br label %if.end134, !dbg !8860

if.end134:                                        ; preds = %do.end133, %if.end106
  %103 = load i32, i32* %__ret_warn_on, align 4, !dbg !8857
  %tobool136 = icmp ne i32 %103, 0, !dbg !8857
  %lnot137 = xor i1 %tobool136, true, !dbg !8857
  %lnot139 = xor i1 %lnot137, true, !dbg !8857
  %lnot.ext140 = zext i1 %lnot139 to i32, !dbg !8857
  %conv141 = sext i32 %lnot.ext140 to i64, !dbg !8857
  store i64 %conv141, i64* %tmp135, align 8, !dbg !8858
  %104 = load i64, i64* %tmp135, align 8, !dbg !8857
  %105 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8878
  call void @drm_crtc_vblank_put(%struct.drm_crtc* %105) #9, !dbg !8879
  br label %if.end142

if.end142:                                        ; preds = %if.end134, %if.then46
  br label %for.inc143, !dbg !8769

for.inc143:                                       ; preds = %if.end142, %if.then50
  %106 = load i32, i32* %i, align 4, !dbg !8768
  %inc144 = add i32 %106, 1, !dbg !8768
  store i32 %inc144, i32* %i, align 4, !dbg !8768
  br label %for.cond26, !dbg !8768, !llvm.loop !8880

for.end145:                                       ; preds = %if.then, %for.cond26
  ret void, !dbg !8882
}

; Function Attrs: noredzone
declare dso_local i32 @drm_crtc_vblank_get(%struct.drm_crtc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_crtc_mask(%struct.drm_crtc* %crtc) #0 !dbg !8883 {
entry:
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !8888, metadata !DIExpression()), !dbg !8889
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !8890
  %call = call i32 @drm_crtc_index(%struct.drm_crtc* %0) #9, !dbg !8891
  %shl = shl i32 1, %call, !dbg !8892
  ret i32 %shl, !dbg !8893
}

; Function Attrs: noredzone
declare dso_local i64 @drm_crtc_vblank_count(%struct.drm_crtc*) #2

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #2

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #2

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @drm_crtc_vblank_put(%struct.drm_crtc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_wait_for_flip_done(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !8894 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %i = alloca i32, align 4
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !8895, metadata !DIExpression()), !dbg !8896
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !8897, metadata !DIExpression()), !dbg !8898
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !8899, metadata !DIExpression()), !dbg !8900
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8901, metadata !DIExpression()), !dbg !8902
  store i32 0, i32* %i, align 4, !dbg !8903
  br label %for.cond, !dbg !8905

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !8906
  %1 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !8908
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %1, i32 0, i32 35, !dbg !8909
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !8910
  %2 = load i32, i32* %num_crtc, align 8, !dbg !8910
  %cmp = icmp slt i32 %0, %2, !dbg !8911
  br i1 %cmp, label %for.body, label %for.end, !dbg !8912

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !8913, metadata !DIExpression()), !dbg !8915
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8916
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 4, !dbg !8917
  %4 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !8917
  %5 = load i32, i32* %i, align 4, !dbg !8918
  %idxprom = sext i32 %5 to i64, !dbg !8916
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %4, i64 %idxprom, !dbg !8916
  %commit1 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 4, !dbg !8919
  %6 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit1, align 8, !dbg !8919
  store %struct.drm_crtc_commit* %6, %struct.drm_crtc_commit** %commit, align 8, !dbg !8915
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8920, metadata !DIExpression()), !dbg !8921
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8922
  %crtcs2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 4, !dbg !8923
  %8 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs2, align 8, !dbg !8923
  %9 = load i32, i32* %i, align 4, !dbg !8924
  %idxprom3 = sext i32 %9 to i64, !dbg !8922
  %arrayidx4 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %8, i64 %idxprom3, !dbg !8922
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx4, i32 0, i32 0, !dbg !8925
  %10 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !8925
  store %struct.drm_crtc* %10, %struct.drm_crtc** %crtc, align 8, !dbg !8926
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8927
  %tobool = icmp ne %struct.drm_crtc* %11, null, !dbg !8927
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !8929

lor.lhs.false:                                    ; preds = %for.body
  %12 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !8930
  %tobool5 = icmp ne %struct.drm_crtc_commit* %12, null, !dbg !8930
  br i1 %tobool5, label %if.end, label %if.then, !dbg !8931

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !8932

if.end:                                           ; preds = %lor.lhs.false
  %13 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !8933
  %flip_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %13, i32 0, i32 2, !dbg !8934
  %call = call i64 @wait_for_completion_timeout(%struct.completion* %flip_done, i64 2500) #9, !dbg !8935
  %conv = trunc i64 %call to i32, !dbg !8935
  store i32 %conv, i32* %ret, align 4, !dbg !8936
  %14 = load i32, i32* %ret, align 4, !dbg !8937
  %cmp6 = icmp eq i32 %14, 0, !dbg !8939
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !8940

if.then8:                                         ; preds = %if.end
  %15 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8941
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %15, i32 0, i32 5, !dbg !8941
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !8941
  %16 = load i32, i32* %id, align 8, !dbg !8941
  %17 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !8941
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %17, i32 0, i32 3, !dbg !8941
  %18 = load i8*, i8** %name, align 8, !dbg !8941
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 %16, i8* %18) #9, !dbg !8941
  br label %if.end9, !dbg !8941

if.end9:                                          ; preds = %if.then8, %if.end
  br label %for.inc, !dbg !8942

for.inc:                                          ; preds = %if.end9, %if.then
  %19 = load i32, i32* %i, align 4, !dbg !8943
  %inc = add i32 %19, 1, !dbg !8943
  store i32 %inc, i32* %i, align 4, !dbg !8943
  br label %for.cond, !dbg !8944, !llvm.loop !8945

for.end:                                          ; preds = %for.cond
  %20 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8947
  %fake_commit = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %20, i32 0, i32 10, !dbg !8949
  %21 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit, align 8, !dbg !8949
  %tobool10 = icmp ne %struct.drm_crtc_commit* %21, null, !dbg !8947
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !8950

if.then11:                                        ; preds = %for.end
  %22 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8951
  %fake_commit12 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %22, i32 0, i32 10, !dbg !8952
  %23 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit12, align 8, !dbg !8952
  %flip_done13 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %23, i32 0, i32 2, !dbg !8953
  call void @complete_all(%struct.completion* %flip_done13) #9, !dbg !8954
  br label %if.end14, !dbg !8954

if.end14:                                         ; preds = %if.then11, %for.end
  ret void, !dbg !8955
}

; Function Attrs: noredzone
declare dso_local i64 @wait_for_completion_timeout(%struct.completion*, i64) #2

; Function Attrs: noredzone
declare dso_local void @__drm_err(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local void @complete_all(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_tail(%struct.drm_atomic_state* %old_state) #0 !dbg !8956 {
entry:
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %dev = alloca %struct.drm_device*, align 8
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !8957, metadata !DIExpression()), !dbg !8958
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !8959, metadata !DIExpression()), !dbg !8960
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8961
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 1, !dbg !8962
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !8962
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !8960
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !8963
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8964
  call void @drm_atomic_helper_commit_modeset_disables(%struct.drm_device* %2, %struct.drm_atomic_state* %3) #9, !dbg !8965
  %4 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !8966
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8967
  call void @drm_atomic_helper_commit_planes(%struct.drm_device* %4, %struct.drm_atomic_state* %5, i32 0) #9, !dbg !8968
  %6 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !8969
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8970
  call void @drm_atomic_helper_commit_modeset_enables(%struct.drm_device* %6, %struct.drm_atomic_state* %7) #9, !dbg !8971
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8972
  call void @drm_atomic_helper_fake_vblank(%struct.drm_atomic_state* %8) #9, !dbg !8973
  %9 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8974
  call void @drm_atomic_helper_commit_hw_done(%struct.drm_atomic_state* %9) #9, !dbg !8975
  %10 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !8976
  %11 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8977
  call void @drm_atomic_helper_wait_for_vblanks(%struct.drm_device* %10, %struct.drm_atomic_state* %11) #9, !dbg !8978
  %12 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !8979
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !8980
  call void @drm_atomic_helper_cleanup_planes(%struct.drm_device* %12, %struct.drm_atomic_state* %13) #9, !dbg !8981
  ret void, !dbg !8982
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_planes(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state, i32 %flags) #0 !dbg !8983 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %flags.addr = alloca i32, align 4
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %i = alloca i32, align 4
  %active_only = alloca i8, align 1
  %no_disable = alloca i8, align 1
  %funcs = alloca %struct.drm_crtc_helper_funcs*, align 8
  %funcs55 = alloca %struct.drm_plane_helper_funcs*, align 8
  %disabling = alloca i8, align 1
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %funcs129 = alloca %struct.drm_crtc_helper_funcs*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !8986, metadata !DIExpression()), !dbg !8987
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !8988, metadata !DIExpression()), !dbg !8989
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !8990, metadata !DIExpression()), !dbg !8991
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !8992, metadata !DIExpression()), !dbg !8993
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !8994, metadata !DIExpression()), !dbg !8995
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !8996, metadata !DIExpression()), !dbg !8997
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !8998, metadata !DIExpression()), !dbg !8999
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !9000, metadata !DIExpression()), !dbg !9001
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !9002, metadata !DIExpression()), !dbg !9003
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9004, metadata !DIExpression()), !dbg !9005
  call void @llvm.dbg.declare(metadata i8* %active_only, metadata !9006, metadata !DIExpression()), !dbg !9007
  %0 = load i32, i32* %flags.addr, align 4, !dbg !9008
  %conv = zext i32 %0 to i64, !dbg !9008
  %and = and i64 %conv, 1, !dbg !9009
  %tobool = icmp ne i64 %and, 0, !dbg !9008
  %frombool = zext i1 %tobool to i8, !dbg !9007
  store i8 %frombool, i8* %active_only, align 1, !dbg !9007
  call void @llvm.dbg.declare(metadata i8* %no_disable, metadata !9010, metadata !DIExpression()), !dbg !9011
  %1 = load i32, i32* %flags.addr, align 4, !dbg !9012
  %conv1 = zext i32 %1 to i64, !dbg !9012
  %and2 = and i64 %conv1, 2, !dbg !9013
  %tobool3 = icmp ne i64 %and2, 0, !dbg !9012
  %frombool4 = zext i1 %tobool3 to i8, !dbg !9011
  store i8 %frombool4, i8* %no_disable, align 1, !dbg !9011
  store i32 0, i32* %i, align 4, !dbg !9014
  br label %for.cond, !dbg !9014

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !9016
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9016
  %dev5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 1, !dbg !9016
  %4 = load %struct.drm_device*, %struct.drm_device** %dev5, align 8, !dbg !9016
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %4, i32 0, i32 35, !dbg !9016
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !9016
  %5 = load i32, i32* %num_crtc, align 8, !dbg !9016
  %cmp = icmp slt i32 %2, %5, !dbg !9016
  br i1 %cmp, label %for.body, label %for.end, !dbg !9014

for.body:                                         ; preds = %for.cond
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9018
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %6, i32 0, i32 4, !dbg !9018
  %7 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !9018
  %8 = load i32, i32* %i, align 4, !dbg !9018
  %idxprom = sext i32 %8 to i64, !dbg !9018
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %7, i64 %idxprom, !dbg !9018
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !9018
  %9 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !9018
  %tobool7 = icmp ne %struct.drm_crtc* %9, null, !dbg !9018
  br i1 %tobool7, label %land.lhs.true, label %if.then, !dbg !9018

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9018
  %crtcs8 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %10, i32 0, i32 4, !dbg !9018
  %11 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs8, align 8, !dbg !9018
  %12 = load i32, i32* %i, align 4, !dbg !9018
  %idxprom9 = sext i32 %12 to i64, !dbg !9018
  %arrayidx10 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %11, i64 %idxprom9, !dbg !9018
  %ptr11 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx10, i32 0, i32 0, !dbg !9018
  %13 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr11, align 8, !dbg !9018
  store %struct.drm_crtc* %13, %struct.drm_crtc** %crtc, align 8, !dbg !9018
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9018
  %15 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9018
  %crtcs12 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %15, i32 0, i32 4, !dbg !9018
  %16 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs12, align 8, !dbg !9018
  %17 = load i32, i32* %i, align 4, !dbg !9018
  %idxprom13 = sext i32 %17 to i64, !dbg !9018
  %arrayidx14 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %16, i64 %idxprom13, !dbg !9018
  %old_state15 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx14, i32 0, i32 2, !dbg !9018
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state15, align 8, !dbg !9018
  store %struct.drm_crtc_state* %18, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9018
  %19 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9018
  %20 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9018
  %crtcs16 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %20, i32 0, i32 4, !dbg !9018
  %21 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs16, align 8, !dbg !9018
  %22 = load i32, i32* %i, align 4, !dbg !9018
  %idxprom17 = sext i32 %22 to i64, !dbg !9018
  %arrayidx18 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %21, i64 %idxprom17, !dbg !9018
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx18, i32 0, i32 3, !dbg !9018
  %23 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !9018
  store %struct.drm_crtc_state* %23, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9018
  br i1 true, label %if.else, label %if.then, !dbg !9016

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end29, !dbg !9020

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %funcs, metadata !9022, metadata !DIExpression()), !dbg !9024
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9025
  %helper_private = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %24, i32 0, i32 19, !dbg !9026
  %25 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private, align 8, !dbg !9026
  store %struct.drm_crtc_helper_funcs* %25, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !9027
  %26 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !9028
  %tobool19 = icmp ne %struct.drm_crtc_helper_funcs* %26, null, !dbg !9028
  br i1 %tobool19, label %lor.lhs.false, label %if.then21, !dbg !9030

lor.lhs.false:                                    ; preds = %if.else
  %27 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !9031
  %atomic_begin = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %27, i32 0, i32 11, !dbg !9032
  %28 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_begin, align 8, !dbg !9032
  %tobool20 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %28, null, !dbg !9031
  br i1 %tobool20, label %if.end, label %if.then21, !dbg !9033

if.then21:                                        ; preds = %lor.lhs.false, %if.else
  br label %for.inc, !dbg !9034

if.end:                                           ; preds = %lor.lhs.false
  %29 = load i8, i8* %active_only, align 1, !dbg !9035
  %tobool22 = trunc i8 %29 to i1, !dbg !9035
  br i1 %tobool22, label %land.lhs.true24, label %if.end27, !dbg !9037

land.lhs.true24:                                  ; preds = %if.end
  %30 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9038
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %30, i32 0, i32 2, !dbg !9039
  %31 = load i8, i8* %active, align 1, !dbg !9039
  %tobool25 = trunc i8 %31 to i1, !dbg !9039
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !9040

if.then26:                                        ; preds = %land.lhs.true24
  br label %for.inc, !dbg !9041

if.end27:                                         ; preds = %land.lhs.true24, %if.end
  %32 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs, align 8, !dbg !9042
  %atomic_begin28 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %32, i32 0, i32 11, !dbg !9043
  %33 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_begin28, align 8, !dbg !9043
  %34 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9044
  %35 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9045
  call void %33(%struct.drm_crtc* %34, %struct.drm_crtc_state* %35) #9, !dbg !9042
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %if.then
  br label %for.inc, !dbg !9018

for.inc:                                          ; preds = %if.end29, %if.then26, %if.then21
  %36 = load i32, i32* %i, align 4, !dbg !9016
  %inc = add i32 %36, 1, !dbg !9016
  store i32 %inc, i32* %i, align 4, !dbg !9016
  br label %for.cond, !dbg !9016, !llvm.loop !9046

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9048
  br label %for.cond30, !dbg !9048

for.cond30:                                       ; preds = %for.inc99, %for.end
  %37 = load i32, i32* %i, align 4, !dbg !9050
  %38 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9050
  %dev31 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %38, i32 0, i32 1, !dbg !9050
  %39 = load %struct.drm_device*, %struct.drm_device** %dev31, align 8, !dbg !9050
  %mode_config32 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %39, i32 0, i32 35, !dbg !9050
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config32, i32 0, i32 17, !dbg !9050
  %40 = load i32, i32* %num_total_plane, align 8, !dbg !9050
  %cmp33 = icmp slt i32 %37, %40, !dbg !9050
  br i1 %cmp33, label %for.body35, label %for.end101, !dbg !9048

for.body35:                                       ; preds = %for.cond30
  %41 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9052
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %41, i32 0, i32 3, !dbg !9052
  %42 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !9052
  %43 = load i32, i32* %i, align 4, !dbg !9052
  %idxprom36 = sext i32 %43 to i64, !dbg !9052
  %arrayidx37 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %42, i64 %idxprom36, !dbg !9052
  %ptr38 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx37, i32 0, i32 0, !dbg !9052
  %44 = load %struct.drm_plane*, %struct.drm_plane** %ptr38, align 8, !dbg !9052
  %tobool39 = icmp ne %struct.drm_plane* %44, null, !dbg !9052
  br i1 %tobool39, label %land.lhs.true40, label %if.then53, !dbg !9052

land.lhs.true40:                                  ; preds = %for.body35
  %45 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9052
  %planes41 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %45, i32 0, i32 3, !dbg !9052
  %46 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes41, align 8, !dbg !9052
  %47 = load i32, i32* %i, align 4, !dbg !9052
  %idxprom42 = sext i32 %47 to i64, !dbg !9052
  %arrayidx43 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %46, i64 %idxprom42, !dbg !9052
  %ptr44 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx43, i32 0, i32 0, !dbg !9052
  %48 = load %struct.drm_plane*, %struct.drm_plane** %ptr44, align 8, !dbg !9052
  store %struct.drm_plane* %48, %struct.drm_plane** %plane, align 8, !dbg !9052
  %49 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9052
  %50 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9052
  %planes45 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %50, i32 0, i32 3, !dbg !9052
  %51 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes45, align 8, !dbg !9052
  %52 = load i32, i32* %i, align 4, !dbg !9052
  %idxprom46 = sext i32 %52 to i64, !dbg !9052
  %arrayidx47 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %51, i64 %idxprom46, !dbg !9052
  %old_state48 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx47, i32 0, i32 2, !dbg !9052
  %53 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state48, align 8, !dbg !9052
  store %struct.drm_plane_state* %53, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9052
  %54 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9052
  %planes49 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %54, i32 0, i32 3, !dbg !9052
  %55 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes49, align 8, !dbg !9052
  %56 = load i32, i32* %i, align 4, !dbg !9052
  %idxprom50 = sext i32 %56 to i64, !dbg !9052
  %arrayidx51 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %55, i64 %idxprom50, !dbg !9052
  %new_state52 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx51, i32 0, i32 3, !dbg !9052
  %57 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state52, align 8, !dbg !9052
  store %struct.drm_plane_state* %57, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9052
  br i1 true, label %if.else54, label %if.then53, !dbg !9050

if.then53:                                        ; preds = %land.lhs.true40, %for.body35
  br label %if.end98, !dbg !9054

if.else54:                                        ; preds = %land.lhs.true40
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %funcs55, metadata !9056, metadata !DIExpression()), !dbg !9058
  call void @llvm.dbg.declare(metadata i8* %disabling, metadata !9059, metadata !DIExpression()), !dbg !9060
  %58 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9061
  %helper_private56 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %58, i32 0, i32 18, !dbg !9062
  %59 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private56, align 8, !dbg !9062
  store %struct.drm_plane_helper_funcs* %59, %struct.drm_plane_helper_funcs** %funcs55, align 8, !dbg !9063
  %60 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs55, align 8, !dbg !9064
  %tobool57 = icmp ne %struct.drm_plane_helper_funcs* %60, null, !dbg !9064
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !9066

if.then58:                                        ; preds = %if.else54
  br label %for.inc99, !dbg !9067

if.end59:                                         ; preds = %if.else54
  %61 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9068
  %62 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9069
  %call = call zeroext i1 @drm_atomic_plane_disabling(%struct.drm_plane_state* %61, %struct.drm_plane_state* %62) #9, !dbg !9070
  %frombool60 = zext i1 %call to i8, !dbg !9071
  store i8 %frombool60, i8* %disabling, align 1, !dbg !9071
  %63 = load i8, i8* %active_only, align 1, !dbg !9072
  %tobool61 = trunc i8 %63 to i1, !dbg !9072
  br i1 %tobool61, label %if.then62, label %if.end74, !dbg !9074

if.then62:                                        ; preds = %if.end59
  %64 = load i8, i8* %disabling, align 1, !dbg !9075
  %tobool63 = trunc i8 %64 to i1, !dbg !9075
  br i1 %tobool63, label %if.end67, label %land.lhs.true64, !dbg !9078

land.lhs.true64:                                  ; preds = %if.then62
  %65 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9079
  %call65 = call zeroext i1 @plane_crtc_active(%struct.drm_plane_state* %65) #9, !dbg !9080
  br i1 %call65, label %if.end67, label %if.then66, !dbg !9081

if.then66:                                        ; preds = %land.lhs.true64
  br label %for.inc99, !dbg !9082

if.end67:                                         ; preds = %land.lhs.true64, %if.then62
  %66 = load i8, i8* %disabling, align 1, !dbg !9083
  %tobool68 = trunc i8 %66 to i1, !dbg !9083
  br i1 %tobool68, label %land.lhs.true70, label %if.end73, !dbg !9085

land.lhs.true70:                                  ; preds = %if.end67
  %67 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9086
  %call71 = call zeroext i1 @plane_crtc_active(%struct.drm_plane_state* %67) #9, !dbg !9087
  br i1 %call71, label %if.end73, label %if.then72, !dbg !9088

if.then72:                                        ; preds = %land.lhs.true70
  br label %for.inc99, !dbg !9089

if.end73:                                         ; preds = %land.lhs.true70, %if.end67
  br label %if.end74, !dbg !9090

if.end74:                                         ; preds = %if.end73, %if.end59
  %68 = load i8, i8* %disabling, align 1, !dbg !9091
  %tobool75 = trunc i8 %68 to i1, !dbg !9091
  br i1 %tobool75, label %land.lhs.true77, label %if.else89, !dbg !9093

land.lhs.true77:                                  ; preds = %if.end74
  %69 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs55, align 8, !dbg !9094
  %atomic_disable = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %69, i32 0, i32 4, !dbg !9095
  %70 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_disable, align 8, !dbg !9095
  %tobool78 = icmp ne void (%struct.drm_plane*, %struct.drm_plane_state*)* %70, null, !dbg !9094
  br i1 %tobool78, label %if.then79, label %if.else89, !dbg !9096

if.then79:                                        ; preds = %land.lhs.true77
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !9097, metadata !DIExpression()), !dbg !9099
  %71 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9100
  %crtc80 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %71, i32 0, i32 1, !dbg !9101
  %72 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc80, align 8, !dbg !9101
  %state = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %72, i32 0, i32 21, !dbg !9102
  %73 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state, align 8, !dbg !9102
  store %struct.drm_crtc_state* %73, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !9103
  %74 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !9104
  %call81 = call zeroext i1 @drm_atomic_crtc_needs_modeset(%struct.drm_crtc_state* %74) #9, !dbg !9106
  br i1 %call81, label %land.lhs.true83, label %if.end87, !dbg !9107

land.lhs.true83:                                  ; preds = %if.then79
  %75 = load i8, i8* %no_disable, align 1, !dbg !9108
  %tobool84 = trunc i8 %75 to i1, !dbg !9108
  br i1 %tobool84, label %if.then86, label %if.end87, !dbg !9109

if.then86:                                        ; preds = %land.lhs.true83
  br label %for.inc99, !dbg !9110

if.end87:                                         ; preds = %land.lhs.true83, %if.then79
  %76 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs55, align 8, !dbg !9111
  %atomic_disable88 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %76, i32 0, i32 4, !dbg !9112
  %77 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_disable88, align 8, !dbg !9112
  %78 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9113
  %79 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9114
  call void %77(%struct.drm_plane* %78, %struct.drm_plane_state* %79) #9, !dbg !9111
  br label %if.end97, !dbg !9115

if.else89:                                        ; preds = %land.lhs.true77, %if.end74
  %80 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9116
  %crtc90 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %80, i32 0, i32 1, !dbg !9118
  %81 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc90, align 8, !dbg !9118
  %tobool91 = icmp ne %struct.drm_crtc* %81, null, !dbg !9116
  br i1 %tobool91, label %if.then95, label %lor.lhs.false92, !dbg !9119

lor.lhs.false92:                                  ; preds = %if.else89
  %82 = load i8, i8* %disabling, align 1, !dbg !9120
  %tobool93 = trunc i8 %82 to i1, !dbg !9120
  br i1 %tobool93, label %if.then95, label %if.end96, !dbg !9121

if.then95:                                        ; preds = %lor.lhs.false92, %if.else89
  %83 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs55, align 8, !dbg !9122
  %atomic_update = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %83, i32 0, i32 3, !dbg !9124
  %84 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_update, align 8, !dbg !9124
  %85 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9125
  %86 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9126
  call void %84(%struct.drm_plane* %85, %struct.drm_plane_state* %86) #9, !dbg !9122
  br label %if.end96, !dbg !9127

if.end96:                                         ; preds = %if.then95, %lor.lhs.false92
  br label %if.end97

if.end97:                                         ; preds = %if.end96, %if.end87
  br label %if.end98

if.end98:                                         ; preds = %if.end97, %if.then53
  br label %for.inc99, !dbg !9052

for.inc99:                                        ; preds = %if.end98, %if.then86, %if.then72, %if.then66, %if.then58
  %87 = load i32, i32* %i, align 4, !dbg !9050
  %inc100 = add i32 %87, 1, !dbg !9050
  store i32 %inc100, i32* %i, align 4, !dbg !9050
  br label %for.cond30, !dbg !9050, !llvm.loop !9128

for.end101:                                       ; preds = %for.cond30
  store i32 0, i32* %i, align 4, !dbg !9130
  br label %for.cond102, !dbg !9130

for.cond102:                                      ; preds = %for.inc145, %for.end101
  %88 = load i32, i32* %i, align 4, !dbg !9132
  %89 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9132
  %dev103 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %89, i32 0, i32 1, !dbg !9132
  %90 = load %struct.drm_device*, %struct.drm_device** %dev103, align 8, !dbg !9132
  %mode_config104 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %90, i32 0, i32 35, !dbg !9132
  %num_crtc105 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config104, i32 0, i32 19, !dbg !9132
  %91 = load i32, i32* %num_crtc105, align 8, !dbg !9132
  %cmp106 = icmp slt i32 %88, %91, !dbg !9132
  br i1 %cmp106, label %for.body108, label %for.end147, !dbg !9130

for.body108:                                      ; preds = %for.cond102
  %92 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9134
  %crtcs109 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %92, i32 0, i32 4, !dbg !9134
  %93 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs109, align 8, !dbg !9134
  %94 = load i32, i32* %i, align 4, !dbg !9134
  %idxprom110 = sext i32 %94 to i64, !dbg !9134
  %arrayidx111 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %93, i64 %idxprom110, !dbg !9134
  %ptr112 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx111, i32 0, i32 0, !dbg !9134
  %95 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr112, align 8, !dbg !9134
  %tobool113 = icmp ne %struct.drm_crtc* %95, null, !dbg !9134
  br i1 %tobool113, label %land.lhs.true114, label %if.then127, !dbg !9134

land.lhs.true114:                                 ; preds = %for.body108
  %96 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9134
  %crtcs115 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %96, i32 0, i32 4, !dbg !9134
  %97 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs115, align 8, !dbg !9134
  %98 = load i32, i32* %i, align 4, !dbg !9134
  %idxprom116 = sext i32 %98 to i64, !dbg !9134
  %arrayidx117 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %97, i64 %idxprom116, !dbg !9134
  %ptr118 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx117, i32 0, i32 0, !dbg !9134
  %99 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr118, align 8, !dbg !9134
  store %struct.drm_crtc* %99, %struct.drm_crtc** %crtc, align 8, !dbg !9134
  %100 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9134
  %101 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9134
  %crtcs119 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %101, i32 0, i32 4, !dbg !9134
  %102 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs119, align 8, !dbg !9134
  %103 = load i32, i32* %i, align 4, !dbg !9134
  %idxprom120 = sext i32 %103 to i64, !dbg !9134
  %arrayidx121 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %102, i64 %idxprom120, !dbg !9134
  %old_state122 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx121, i32 0, i32 2, !dbg !9134
  %104 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state122, align 8, !dbg !9134
  store %struct.drm_crtc_state* %104, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9134
  %105 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9134
  %106 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9134
  %crtcs123 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %106, i32 0, i32 4, !dbg !9134
  %107 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs123, align 8, !dbg !9134
  %108 = load i32, i32* %i, align 4, !dbg !9134
  %idxprom124 = sext i32 %108 to i64, !dbg !9134
  %arrayidx125 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %107, i64 %idxprom124, !dbg !9134
  %new_state126 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx125, i32 0, i32 3, !dbg !9134
  %109 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state126, align 8, !dbg !9134
  store %struct.drm_crtc_state* %109, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9134
  br i1 true, label %if.else128, label %if.then127, !dbg !9132

if.then127:                                       ; preds = %land.lhs.true114, %for.body108
  br label %if.end144, !dbg !9136

if.else128:                                       ; preds = %land.lhs.true114
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %funcs129, metadata !9138, metadata !DIExpression()), !dbg !9140
  %110 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9141
  %helper_private130 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %110, i32 0, i32 19, !dbg !9142
  %111 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private130, align 8, !dbg !9142
  store %struct.drm_crtc_helper_funcs* %111, %struct.drm_crtc_helper_funcs** %funcs129, align 8, !dbg !9143
  %112 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs129, align 8, !dbg !9144
  %tobool131 = icmp ne %struct.drm_crtc_helper_funcs* %112, null, !dbg !9144
  br i1 %tobool131, label %lor.lhs.false132, label %if.then134, !dbg !9146

lor.lhs.false132:                                 ; preds = %if.else128
  %113 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs129, align 8, !dbg !9147
  %atomic_flush = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %113, i32 0, i32 12, !dbg !9148
  %114 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_flush, align 8, !dbg !9148
  %tobool133 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %114, null, !dbg !9147
  br i1 %tobool133, label %if.end135, label %if.then134, !dbg !9149

if.then134:                                       ; preds = %lor.lhs.false132, %if.else128
  br label %for.inc145, !dbg !9150

if.end135:                                        ; preds = %lor.lhs.false132
  %115 = load i8, i8* %active_only, align 1, !dbg !9151
  %tobool136 = trunc i8 %115 to i1, !dbg !9151
  br i1 %tobool136, label %land.lhs.true138, label %if.end142, !dbg !9153

land.lhs.true138:                                 ; preds = %if.end135
  %116 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9154
  %active139 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %116, i32 0, i32 2, !dbg !9155
  %117 = load i8, i8* %active139, align 1, !dbg !9155
  %tobool140 = trunc i8 %117 to i1, !dbg !9155
  br i1 %tobool140, label %if.end142, label %if.then141, !dbg !9156

if.then141:                                       ; preds = %land.lhs.true138
  br label %for.inc145, !dbg !9157

if.end142:                                        ; preds = %land.lhs.true138, %if.end135
  %118 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %funcs129, align 8, !dbg !9158
  %atomic_flush143 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %118, i32 0, i32 12, !dbg !9159
  %119 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_flush143, align 8, !dbg !9159
  %120 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9160
  %121 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9161
  call void %119(%struct.drm_crtc* %120, %struct.drm_crtc_state* %121) #9, !dbg !9158
  br label %if.end144

if.end144:                                        ; preds = %if.end142, %if.then127
  br label %for.inc145, !dbg !9134

for.inc145:                                       ; preds = %if.end144, %if.then141, %if.then134
  %122 = load i32, i32* %i, align 4, !dbg !9132
  %inc146 = add i32 %122, 1, !dbg !9132
  store i32 %inc146, i32* %i, align 4, !dbg !9132
  br label %for.cond102, !dbg !9132, !llvm.loop !9162

for.end147:                                       ; preds = %for.cond102
  ret void, !dbg !9164
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_fake_vblank(%struct.drm_atomic_state* %old_state) #0 !dbg !9165 {
entry:
  %lock.addr.i37 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i37, metadata !9166, metadata !DIExpression()), !dbg !9171
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !9177, metadata !DIExpression()), !dbg !9178
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !9179, metadata !DIExpression()), !dbg !9184
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %i = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !9191, metadata !DIExpression()), !dbg !9192
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !9193, metadata !DIExpression()), !dbg !9194
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !9195, metadata !DIExpression()), !dbg !9196
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9197, metadata !DIExpression()), !dbg !9198
  store i32 0, i32* %i, align 4, !dbg !9199
  br label %for.cond, !dbg !9199

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9200
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9200
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !9200
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9200
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !9200
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !9200
  %3 = load i32, i32* %num_crtc, align 8, !dbg !9200
  %cmp = icmp slt i32 %0, %3, !dbg !9200
  br i1 %cmp, label %for.body, label %for.end, !dbg !9199

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9201
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !9201
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !9201
  %6 = load i32, i32* %i, align 4, !dbg !9201
  %idxprom = sext i32 %6 to i64, !dbg !9201
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !9201
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !9201
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !9201
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !9201
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9201

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9201
  %crtcs1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !9201
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs1, align 8, !dbg !9201
  %10 = load i32, i32* %i, align 4, !dbg !9201
  %idxprom2 = sext i32 %10 to i64, !dbg !9201
  %arrayidx3 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom2, !dbg !9201
  %ptr4 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx3, i32 0, i32 0, !dbg !9201
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr4, align 8, !dbg !9201
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !9201
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9201
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9201
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !9201
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !9201
  %15 = load i32, i32* %i, align 4, !dbg !9201
  %idxprom6 = sext i32 %15 to i64, !dbg !9201
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom6, !dbg !9201
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 3, !dbg !9201
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !9201
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9201
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9201
  br i1 true, label %if.else, label %if.then, !dbg !9200

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end36, !dbg !9202

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9204, metadata !DIExpression()), !dbg !9205
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9206
  %no_vblank = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %18, i32 0, i32 3, !dbg !9208
  %bf.load = load i8, i8* %no_vblank, align 2, !dbg !9208
  %bf.lshr = lshr i8 %bf.load, 6, !dbg !9208
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9208
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !9208
  br i1 %bf.cast, label %if.end, label %if.then8, !dbg !9209

if.then8:                                         ; preds = %if.else
  br label %for.inc, !dbg !9210

if.end:                                           ; preds = %if.else
  br label %do.body, !dbg !9211

do.body:                                          ; preds = %if.end
  br label %do.body9, !dbg !9212

do.body9:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9213, metadata !DIExpression()), !dbg !9215
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9216, metadata !DIExpression()), !dbg !9215
  %cmp10 = icmp eq i64* %__dummy, %__dummy2, !dbg !9215
  %conv = zext i1 %cmp10 to i32, !dbg !9215
  store i32 1, i32* %tmp, align 4, !dbg !9215
  %19 = load i32, i32* %tmp, align 4, !dbg !9215
  br label %do.body11, !dbg !9217

do.body11:                                        ; preds = %do.body9
  br label %do.body12, !dbg !9218

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !9219

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !9221, metadata !DIExpression()), !dbg !9224
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !9225, metadata !DIExpression()), !dbg !9224
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !9224
  %conv17 = zext i1 %cmp16 to i32, !dbg !9224
  store i32 1, i32* %tmp18, align 4, !dbg !9224
  %20 = load i32, i32* %tmp18, align 4, !dbg !9224
  %call = call i64 @arch_local_irq_save() #9, !dbg !9226
  store i64 %call, i64* %flags, align 8, !dbg !9226
  br label %do.end, !dbg !9226

do.end:                                           ; preds = %do.body13
  br label %do.end19, !dbg !9219

do.end19:                                         ; preds = %do.end
  br label %do.body20, !dbg !9218

do.body20:                                        ; preds = %do.end19
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9227, !srcloc !9228
  br label %do.body21, !dbg !9227

do.body21:                                        ; preds = %do.body20
  %21 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9229
  %dev22 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %21, i32 0, i32 1, !dbg !9229
  %22 = load %struct.drm_device*, %struct.drm_device** %dev22, align 8, !dbg !9229
  %event_lock = getelementptr inbounds %struct.drm_device, %struct.drm_device* %22, i32 0, i32 31, !dbg !9229
  store %struct.spinlock* %event_lock, %struct.spinlock** %lock.addr.i, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9230
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9231
  %rlock.i = bitcast %union.anon.1* %24 to %struct.raw_spinlock*, !dbg !9231
  br label %do.end24, !dbg !9229

do.end24:                                         ; preds = %do.body21
  br label %do.end25, !dbg !9227

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !9218

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !9217

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !9212

do.end28:                                         ; preds = %do.end27
  %25 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9232
  %event = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %25, i32 0, i32 17, !dbg !9234
  %26 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event, align 8, !dbg !9234
  %tobool29 = icmp ne %struct.drm_pending_vblank_event* %26, null, !dbg !9232
  br i1 %tobool29, label %if.then30, label %if.end33, !dbg !9235

if.then30:                                        ; preds = %do.end28
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9236
  %28 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9238
  %event31 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %28, i32 0, i32 17, !dbg !9239
  %29 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event31, align 8, !dbg !9239
  call void @drm_crtc_send_vblank_event(%struct.drm_crtc* %27, %struct.drm_pending_vblank_event* %29) #9, !dbg !9240
  %30 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9241
  %event32 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %30, i32 0, i32 17, !dbg !9242
  store %struct.drm_pending_vblank_event* null, %struct.drm_pending_vblank_event** %event32, align 8, !dbg !9243
  br label %if.end33, !dbg !9244

if.end33:                                         ; preds = %if.then30, %do.end28
  %31 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9245
  %dev34 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %31, i32 0, i32 1, !dbg !9246
  %32 = load %struct.drm_device*, %struct.drm_device** %dev34, align 8, !dbg !9246
  %event_lock35 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %32, i32 0, i32 31, !dbg !9247
  %33 = load i64, i64* %flags, align 8, !dbg !9248
  store %struct.spinlock* %event_lock35, %struct.spinlock** %lock.addr.i37, align 8
  store i64 %33, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !69, metadata !9249, metadata !DIExpression()) #8, !dbg !9252
  call void @llvm.dbg.declare(metadata !69, metadata !9253, metadata !DIExpression()) #8, !dbg !9252
  store i32 1, i32* %tmp.i, align 4, !dbg !9252
  %34 = load i32, i32* %tmp.i, align 4, !dbg !9252
  call void @llvm.dbg.declare(metadata !69, metadata !9254, metadata !DIExpression()) #8, !dbg !9259
  call void @llvm.dbg.declare(metadata !69, metadata !9260, metadata !DIExpression()) #8, !dbg !9259
  store i32 1, i32* %tmp8.i, align 4, !dbg !9259
  %35 = load i32, i32* %tmp8.i, align 4, !dbg !9259
  %36 = load i64, i64* %flags.addr.i, align 8, !dbg !9261
  call void @arch_local_irq_restore(i64 %36) #10, !dbg !9261
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !9262, !srcloc !9264
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i37, align 8, !dbg !9265
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !9265
  %rlock.i38 = bitcast %union.anon.1* %38 to %struct.raw_spinlock*, !dbg !9265
  br label %if.end36

if.end36:                                         ; preds = %if.end33, %if.then
  br label %for.inc, !dbg !9201

for.inc:                                          ; preds = %if.end36, %if.then8
  %39 = load i32, i32* %i, align 4, !dbg !9200
  %inc = add i32 %39, 1, !dbg !9200
  store i32 %inc, i32* %i, align 4, !dbg !9200
  br label %for.cond, !dbg !9200, !llvm.loop !9267

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_hw_done(%struct.drm_atomic_state* %old_state) #0 !dbg !9270 {
entry:
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !9271, metadata !DIExpression()), !dbg !9272
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !9273, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !9275, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !9277, metadata !DIExpression()), !dbg !9278
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !9279, metadata !DIExpression()), !dbg !9280
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9281, metadata !DIExpression()), !dbg !9282
  store i32 0, i32* %i, align 4, !dbg !9283
  br label %for.cond, !dbg !9283

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9285
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9285
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !9285
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9285
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !9285
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !9285
  %3 = load i32, i32* %num_crtc, align 8, !dbg !9285
  %cmp = icmp slt i32 %0, %3, !dbg !9285
  br i1 %cmp, label %for.body, label %for.end, !dbg !9283

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9287
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !9287
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !9287
  %6 = load i32, i32* %i, align 4, !dbg !9287
  %idxprom = sext i32 %6 to i64, !dbg !9287
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !9287
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !9287
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !9287
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !9287
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9287

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9287
  %crtcs1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !9287
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs1, align 8, !dbg !9287
  %10 = load i32, i32* %i, align 4, !dbg !9287
  %idxprom2 = sext i32 %10 to i64, !dbg !9287
  %arrayidx3 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom2, !dbg !9287
  %ptr4 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx3, i32 0, i32 0, !dbg !9287
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr4, align 8, !dbg !9287
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !9287
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9287
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9287
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !9287
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !9287
  %15 = load i32, i32* %i, align 4, !dbg !9287
  %idxprom6 = sext i32 %15 to i64, !dbg !9287
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom6, !dbg !9287
  %old_state8 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 2, !dbg !9287
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state8, align 8, !dbg !9287
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9287
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9287
  %18 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9287
  %crtcs9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %18, i32 0, i32 4, !dbg !9287
  %19 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs9, align 8, !dbg !9287
  %20 = load i32, i32* %i, align 4, !dbg !9287
  %idxprom10 = sext i32 %20 to i64, !dbg !9287
  %arrayidx11 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %19, i64 %idxprom10, !dbg !9287
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx11, i32 0, i32 3, !dbg !9287
  %21 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !9287
  store %struct.drm_crtc_state* %21, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9287
  br i1 true, label %if.else, label %if.then, !dbg !9285

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end43, !dbg !9289

if.else:                                          ; preds = %land.lhs.true
  %22 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9291
  %commit12 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %22, i32 0, i32 18, !dbg !9293
  %23 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit12, align 8, !dbg !9293
  store %struct.drm_crtc_commit* %23, %struct.drm_crtc_commit** %commit, align 8, !dbg !9294
  %24 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9295
  %tobool13 = icmp ne %struct.drm_crtc_commit* %24, null, !dbg !9295
  br i1 %tobool13, label %if.end, label %if.then14, !dbg !9297

if.then14:                                        ; preds = %if.else
  br label %for.inc, !dbg !9298

if.end:                                           ; preds = %if.else
  %25 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9299
  %commit15 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %25, i32 0, i32 18, !dbg !9301
  %26 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit15, align 8, !dbg !9301
  %tobool16 = icmp ne %struct.drm_crtc_commit* %26, null, !dbg !9299
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !9302

if.then17:                                        ; preds = %if.end
  %27 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9303
  %commit18 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %27, i32 0, i32 18, !dbg !9304
  %28 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit18, align 8, !dbg !9304
  call void @drm_crtc_commit_put(%struct.drm_crtc_commit* %28) #9, !dbg !9305
  br label %if.end19, !dbg !9305

if.end19:                                         ; preds = %if.then17, %if.end
  %29 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9306
  %call = call %struct.drm_crtc_commit* @drm_crtc_commit_get(%struct.drm_crtc_commit* %29) #9, !dbg !9307
  %30 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9308
  %commit20 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %30, i32 0, i32 18, !dbg !9309
  store %struct.drm_crtc_commit* %call, %struct.drm_crtc_commit** %commit20, align 8, !dbg !9310
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9311, metadata !DIExpression()), !dbg !9313
  %31 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9313
  %event = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %31, i32 0, i32 17, !dbg !9313
  %32 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event, align 8, !dbg !9313
  %tobool21 = icmp ne %struct.drm_pending_vblank_event* %32, null, !dbg !9313
  %lnot = xor i1 %tobool21, true, !dbg !9313
  %lnot22 = xor i1 %lnot, true, !dbg !9313
  %lnot.ext = zext i1 %lnot22 to i32, !dbg !9313
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9313
  %33 = load i32, i32* %__ret_warn_on, align 4, !dbg !9314
  %tobool23 = icmp ne i32 %33, 0, !dbg !9314
  %lnot24 = xor i1 %tobool23, true, !dbg !9314
  %lnot26 = xor i1 %lnot24, true, !dbg !9314
  %lnot.ext27 = zext i1 %lnot26 to i32, !dbg !9314
  %conv = sext i32 %lnot.ext27 to i64, !dbg !9314
  %tobool28 = icmp ne i64 %conv, 0, !dbg !9314
  br i1 %tobool28, label %if.then29, label %if.end36, !dbg !9313

if.then29:                                        ; preds = %if.end19
  br label %do.body, !dbg !9314

do.body:                                          ; preds = %if.then29
  br label %do.body30, !dbg !9316

do.body30:                                        ; preds = %do.body
  br label %do.end, !dbg !9318

do.end:                                           ; preds = %do.body30
  br label %do.body31, !dbg !9316

do.body31:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2330, i32 2305, i64 12) #8, !dbg !9320, !srcloc !9322
  br label %do.end32, !dbg !9320

do.end32:                                         ; preds = %do.body31
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 294) #8, !dbg !9323, !srcloc !9325
  br label %do.body33, !dbg !9316

do.body33:                                        ; preds = %do.end32
  br label %do.end34, !dbg !9326

do.end34:                                         ; preds = %do.body33
  br label %do.end35, !dbg !9316

do.end35:                                         ; preds = %do.end34
  br label %if.end36, !dbg !9316

if.end36:                                         ; preds = %do.end35, %if.end19
  %34 = load i32, i32* %__ret_warn_on, align 4, !dbg !9313
  %tobool37 = icmp ne i32 %34, 0, !dbg !9313
  %lnot38 = xor i1 %tobool37, true, !dbg !9313
  %lnot40 = xor i1 %lnot38, true, !dbg !9313
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !9313
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !9313
  store i64 %conv42, i64* %tmp, align 8, !dbg !9314
  %35 = load i64, i64* %tmp, align 8, !dbg !9313
  %36 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9328
  %hw_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %36, i32 0, i32 3, !dbg !9329
  call void @complete_all(%struct.completion* %hw_done) #9, !dbg !9330
  br label %if.end43

if.end43:                                         ; preds = %if.end36, %if.then
  br label %for.inc, !dbg !9287

for.inc:                                          ; preds = %if.end43, %if.then14
  %37 = load i32, i32* %i, align 4, !dbg !9285
  %inc = add i32 %37, 1, !dbg !9285
  store i32 %inc, i32* %i, align 4, !dbg !9285
  br label %for.cond, !dbg !9285, !llvm.loop !9331

for.end:                                          ; preds = %for.cond
  %38 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9333
  %fake_commit = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %38, i32 0, i32 10, !dbg !9335
  %39 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit, align 8, !dbg !9335
  %tobool44 = icmp ne %struct.drm_crtc_commit* %39, null, !dbg !9333
  br i1 %tobool44, label %if.then45, label %if.end49, !dbg !9336

if.then45:                                        ; preds = %for.end
  %40 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9337
  %fake_commit46 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %40, i32 0, i32 10, !dbg !9339
  %41 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit46, align 8, !dbg !9339
  %hw_done47 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %41, i32 0, i32 3, !dbg !9340
  call void @complete_all(%struct.completion* %hw_done47) #9, !dbg !9341
  %42 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9342
  %fake_commit48 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %42, i32 0, i32 10, !dbg !9343
  %43 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit48, align 8, !dbg !9343
  %flip_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %43, i32 0, i32 2, !dbg !9344
  call void @complete_all(%struct.completion* %flip_done) #9, !dbg !9345
  br label %if.end49, !dbg !9346

if.end49:                                         ; preds = %if.then45, %for.end
  ret void, !dbg !9347
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_cleanup_planes(%struct.drm_device* %dev, %struct.drm_atomic_state* %old_state) #0 !dbg !9348 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %i = alloca i32, align 4
  %funcs = alloca %struct.drm_plane_helper_funcs*, align 8
  %plane_state = alloca %struct.drm_plane_state*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !9349, metadata !DIExpression()), !dbg !9350
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !9351, metadata !DIExpression()), !dbg !9352
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !9353, metadata !DIExpression()), !dbg !9354
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !9355, metadata !DIExpression()), !dbg !9356
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !9357, metadata !DIExpression()), !dbg !9358
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9359, metadata !DIExpression()), !dbg !9360
  store i32 0, i32* %i, align 4, !dbg !9361
  br label %for.cond, !dbg !9361

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9363
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9363
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !9363
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !9363
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !9363
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 17, !dbg !9363
  %3 = load i32, i32* %num_total_plane, align 8, !dbg !9363
  %cmp = icmp slt i32 %0, %3, !dbg !9363
  br i1 %cmp, label %for.body, label %for.end, !dbg !9361

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9365
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 3, !dbg !9365
  %5 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !9365
  %6 = load i32, i32* %i, align 4, !dbg !9365
  %idxprom = sext i32 %6 to i64, !dbg !9365
  %arrayidx = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %5, i64 %idxprom, !dbg !9365
  %ptr = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx, i32 0, i32 0, !dbg !9365
  %7 = load %struct.drm_plane*, %struct.drm_plane** %ptr, align 8, !dbg !9365
  %tobool = icmp ne %struct.drm_plane* %7, null, !dbg !9365
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9365

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9365
  %planes2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 3, !dbg !9365
  %9 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes2, align 8, !dbg !9365
  %10 = load i32, i32* %i, align 4, !dbg !9365
  %idxprom3 = sext i32 %10 to i64, !dbg !9365
  %arrayidx4 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %9, i64 %idxprom3, !dbg !9365
  %ptr5 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx4, i32 0, i32 0, !dbg !9365
  %11 = load %struct.drm_plane*, %struct.drm_plane** %ptr5, align 8, !dbg !9365
  store %struct.drm_plane* %11, %struct.drm_plane** %plane, align 8, !dbg !9365
  %12 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9365
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9365
  %planes6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 3, !dbg !9365
  %14 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes6, align 8, !dbg !9365
  %15 = load i32, i32* %i, align 4, !dbg !9365
  %idxprom7 = sext i32 %15 to i64, !dbg !9365
  %arrayidx8 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %14, i64 %idxprom7, !dbg !9365
  %old_state9 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx8, i32 0, i32 2, !dbg !9365
  %16 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state9, align 8, !dbg !9365
  store %struct.drm_plane_state* %16, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9365
  %17 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9365
  %planes10 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %17, i32 0, i32 3, !dbg !9365
  %18 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes10, align 8, !dbg !9365
  %19 = load i32, i32* %i, align 4, !dbg !9365
  %idxprom11 = sext i32 %19 to i64, !dbg !9365
  %arrayidx12 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %18, i64 %idxprom11, !dbg !9365
  %new_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx12, i32 0, i32 3, !dbg !9365
  %20 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state, align 8, !dbg !9365
  store %struct.drm_plane_state* %20, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9365
  br i1 true, label %if.else, label %if.then, !dbg !9363

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end20, !dbg !9367

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %funcs, metadata !9369, metadata !DIExpression()), !dbg !9371
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state, metadata !9372, metadata !DIExpression()), !dbg !9373
  %21 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9374
  %22 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9376
  %state = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %22, i32 0, i32 19, !dbg !9377
  %23 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state, align 8, !dbg !9377
  %cmp13 = icmp eq %struct.drm_plane_state* %21, %23, !dbg !9378
  br i1 %cmp13, label %if.then14, label %if.else15, !dbg !9379

if.then14:                                        ; preds = %if.else
  %24 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9380
  store %struct.drm_plane_state* %24, %struct.drm_plane_state** %plane_state, align 8, !dbg !9381
  br label %if.end, !dbg !9382

if.else15:                                        ; preds = %if.else
  %25 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9383
  store %struct.drm_plane_state* %25, %struct.drm_plane_state** %plane_state, align 8, !dbg !9384
  br label %if.end

if.end:                                           ; preds = %if.else15, %if.then14
  %26 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9385
  %helper_private = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %26, i32 0, i32 18, !dbg !9386
  %27 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private, align 8, !dbg !9386
  store %struct.drm_plane_helper_funcs* %27, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9387
  %28 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9388
  %cleanup_fb = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %28, i32 0, i32 1, !dbg !9390
  %29 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %cleanup_fb, align 8, !dbg !9390
  %tobool16 = icmp ne void (%struct.drm_plane*, %struct.drm_plane_state*)* %29, null, !dbg !9388
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !9391

if.then17:                                        ; preds = %if.end
  %30 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9392
  %cleanup_fb18 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %30, i32 0, i32 1, !dbg !9393
  %31 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %cleanup_fb18, align 8, !dbg !9393
  %32 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9394
  %33 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9395
  call void %31(%struct.drm_plane* %32, %struct.drm_plane_state* %33) #9, !dbg !9392
  br label %if.end19, !dbg !9392

if.end19:                                         ; preds = %if.then17, %if.end
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then
  br label %for.inc, !dbg !9365

for.inc:                                          ; preds = %if.end20
  %34 = load i32, i32* %i, align 4, !dbg !9363
  %inc = add i32 %34, 1, !dbg !9363
  store i32 %inc, i32* %i, align 4, !dbg !9363
  br label %for.cond, !dbg !9363, !llvm.loop !9396

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_tail_rpm(%struct.drm_atomic_state* %old_state) #0 !dbg !9399 {
entry:
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %dev = alloca %struct.drm_device*, align 8
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !9400, metadata !DIExpression()), !dbg !9401
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !9402, metadata !DIExpression()), !dbg !9403
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9404
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 1, !dbg !9405
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !9405
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !9403
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9406
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9407
  call void @drm_atomic_helper_commit_modeset_disables(%struct.drm_device* %2, %struct.drm_atomic_state* %3) #9, !dbg !9408
  %4 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9409
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9410
  call void @drm_atomic_helper_commit_modeset_enables(%struct.drm_device* %4, %struct.drm_atomic_state* %5) #9, !dbg !9411
  %6 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9412
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9413
  call void @drm_atomic_helper_commit_planes(%struct.drm_device* %6, %struct.drm_atomic_state* %7, i32 1) #9, !dbg !9414
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9415
  call void @drm_atomic_helper_fake_vblank(%struct.drm_atomic_state* %8) #9, !dbg !9416
  %9 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9417
  call void @drm_atomic_helper_commit_hw_done(%struct.drm_atomic_state* %9) #9, !dbg !9418
  %10 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9419
  %11 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9420
  call void @drm_atomic_helper_wait_for_vblanks(%struct.drm_device* %10, %struct.drm_atomic_state* %11) #9, !dbg !9421
  %12 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9422
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !9423
  call void @drm_atomic_helper_cleanup_planes(%struct.drm_device* %12, %struct.drm_atomic_state* %13) #9, !dbg !9424
  ret void, !dbg !9425
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @try_wait_for_completion(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_async_commit(%struct.drm_device* %dev, %struct.drm_atomic_state* %state) #0 !dbg !9426 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %plane_state = alloca %struct.drm_plane_state*, align 8
  %funcs = alloca %struct.drm_plane_helper_funcs*, align 8
  %i = alloca i32, align 4
  %new_fb = alloca %struct.drm_framebuffer*, align 8
  %old_fb = alloca %struct.drm_framebuffer*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on34 = alloca i32, align 4
  %tmp60 = alloca i64, align 8
  %__ret_warn_on67 = alloca i32, align 4
  %tmp93 = alloca i64, align 8
  %__ret_warn_on100 = alloca i32, align 4
  %tmp126 = alloca i64, align 8
  %__ret_warn_on133 = alloca i32, align 4
  %tmp159 = alloca i64, align 8
  %__ret_warn_on166 = alloca i32, align 4
  %tmp191 = alloca i64, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !9427, metadata !DIExpression()), !dbg !9428
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !9429, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state, metadata !9433, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %funcs, metadata !9435, metadata !DIExpression()), !dbg !9436
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9437, metadata !DIExpression()), !dbg !9438
  store i32 0, i32* %i, align 4, !dbg !9439
  br label %for.cond, !dbg !9439

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9441
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9441
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !9441
  %2 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !9441
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !9441
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 17, !dbg !9441
  %3 = load i32, i32* %num_total_plane, align 8, !dbg !9441
  %cmp = icmp slt i32 %0, %3, !dbg !9441
  br i1 %cmp, label %for.body, label %for.end, !dbg !9439

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9443
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 3, !dbg !9443
  %5 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !9443
  %6 = load i32, i32* %i, align 4, !dbg !9443
  %idxprom = sext i32 %6 to i64, !dbg !9443
  %arrayidx = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %5, i64 %idxprom, !dbg !9443
  %ptr = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx, i32 0, i32 0, !dbg !9443
  %7 = load %struct.drm_plane*, %struct.drm_plane** %ptr, align 8, !dbg !9443
  %tobool = icmp ne %struct.drm_plane* %7, null, !dbg !9443
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9443

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9443
  %planes2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 3, !dbg !9443
  %9 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes2, align 8, !dbg !9443
  %10 = load i32, i32* %i, align 4, !dbg !9443
  %idxprom3 = sext i32 %10 to i64, !dbg !9443
  %arrayidx4 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %9, i64 %idxprom3, !dbg !9443
  %ptr5 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx4, i32 0, i32 0, !dbg !9443
  %11 = load %struct.drm_plane*, %struct.drm_plane** %ptr5, align 8, !dbg !9443
  store %struct.drm_plane* %11, %struct.drm_plane** %plane, align 8, !dbg !9443
  %12 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9443
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9443
  %planes6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 3, !dbg !9443
  %14 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes6, align 8, !dbg !9443
  %15 = load i32, i32* %i, align 4, !dbg !9443
  %idxprom7 = sext i32 %15 to i64, !dbg !9443
  %arrayidx8 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %14, i64 %idxprom7, !dbg !9443
  %new_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx8, i32 0, i32 3, !dbg !9443
  %16 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state, align 8, !dbg !9443
  store %struct.drm_plane_state* %16, %struct.drm_plane_state** %plane_state, align 8, !dbg !9443
  %17 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9443
  br i1 true, label %if.else, label %if.then, !dbg !9441

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end198, !dbg !9445

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_framebuffer** %new_fb, metadata !9447, metadata !DIExpression()), !dbg !9449
  %18 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9450
  %fb = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %18, i32 0, i32 2, !dbg !9451
  %19 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !9451
  store %struct.drm_framebuffer* %19, %struct.drm_framebuffer** %new_fb, align 8, !dbg !9449
  call void @llvm.dbg.declare(metadata %struct.drm_framebuffer** %old_fb, metadata !9452, metadata !DIExpression()), !dbg !9453
  %20 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9454
  %state9 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %20, i32 0, i32 19, !dbg !9455
  %21 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state9, align 8, !dbg !9455
  %fb10 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %21, i32 0, i32 2, !dbg !9456
  %22 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb10, align 8, !dbg !9456
  store %struct.drm_framebuffer* %22, %struct.drm_framebuffer** %old_fb, align 8, !dbg !9453
  %23 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9457
  %helper_private = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %23, i32 0, i32 18, !dbg !9458
  %24 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private, align 8, !dbg !9458
  store %struct.drm_plane_helper_funcs* %24, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9459
  %25 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9460
  %atomic_async_update = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %25, i32 0, i32 6, !dbg !9461
  %26 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_async_update, align 8, !dbg !9461
  %27 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9462
  %28 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9463
  call void %26(%struct.drm_plane* %27, %struct.drm_plane_state* %28) #9, !dbg !9460
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9464, metadata !DIExpression()), !dbg !9466
  %29 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9466
  %state11 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %29, i32 0, i32 19, !dbg !9466
  %30 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state11, align 8, !dbg !9466
  %fb12 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %30, i32 0, i32 2, !dbg !9466
  %31 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb12, align 8, !dbg !9466
  %32 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %new_fb, align 8, !dbg !9466
  %cmp13 = icmp ne %struct.drm_framebuffer* %31, %32, !dbg !9466
  %lnot = xor i1 %cmp13, true, !dbg !9466
  %lnot14 = xor i1 %lnot, true, !dbg !9466
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !9466
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9466
  %33 = load i32, i32* %__ret_warn_on, align 4, !dbg !9467
  %tobool15 = icmp ne i32 %33, 0, !dbg !9467
  %lnot16 = xor i1 %tobool15, true, !dbg !9467
  %lnot18 = xor i1 %lnot16, true, !dbg !9467
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !9467
  %conv = sext i32 %lnot.ext19 to i64, !dbg !9467
  %tobool20 = icmp ne i64 %conv, 0, !dbg !9467
  br i1 %tobool20, label %if.then21, label %if.end, !dbg !9466

if.then21:                                        ; preds = %if.else
  br label %do.body, !dbg !9467

do.body:                                          ; preds = %if.then21
  br label %do.body22, !dbg !9469

do.body22:                                        ; preds = %do.body
  br label %do.end, !dbg !9471

do.end:                                           ; preds = %do.body22
  br label %do.body23, !dbg !9469

do.body23:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1779, i32 2307, i64 12) #8, !dbg !9473, !srcloc !9475
  br label %do.end24, !dbg !9473

do.end24:                                         ; preds = %do.body23
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 285) #8, !dbg !9476, !srcloc !9478
  br label %do.body25, !dbg !9469

do.body25:                                        ; preds = %do.end24
  br label %do.end26, !dbg !9479

do.end26:                                         ; preds = %do.body25
  br label %do.end27, !dbg !9469

do.end27:                                         ; preds = %do.end26
  br label %if.end, !dbg !9469

if.end:                                           ; preds = %do.end27, %if.else
  %34 = load i32, i32* %__ret_warn_on, align 4, !dbg !9466
  %tobool28 = icmp ne i32 %34, 0, !dbg !9466
  %lnot29 = xor i1 %tobool28, true, !dbg !9466
  %lnot31 = xor i1 %lnot29, true, !dbg !9466
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !9466
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !9466
  store i64 %conv33, i64* %tmp, align 8, !dbg !9467
  %35 = load i64, i64* %tmp, align 8, !dbg !9466
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on34, metadata !9481, metadata !DIExpression()), !dbg !9483
  %36 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9483
  %state35 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %36, i32 0, i32 19, !dbg !9483
  %37 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state35, align 8, !dbg !9483
  %crtc_x = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %37, i32 0, i32 4, !dbg !9483
  %38 = load i32, i32* %crtc_x, align 8, !dbg !9483
  %39 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9483
  %crtc_x36 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %39, i32 0, i32 4, !dbg !9483
  %40 = load i32, i32* %crtc_x36, align 8, !dbg !9483
  %cmp37 = icmp ne i32 %38, %40, !dbg !9483
  %lnot39 = xor i1 %cmp37, true, !dbg !9483
  %lnot41 = xor i1 %lnot39, true, !dbg !9483
  %lnot.ext42 = zext i1 %lnot41 to i32, !dbg !9483
  store i32 %lnot.ext42, i32* %__ret_warn_on34, align 4, !dbg !9483
  %41 = load i32, i32* %__ret_warn_on34, align 4, !dbg !9484
  %tobool43 = icmp ne i32 %41, 0, !dbg !9484
  %lnot44 = xor i1 %tobool43, true, !dbg !9484
  %lnot46 = xor i1 %lnot44, true, !dbg !9484
  %lnot.ext47 = zext i1 %lnot46 to i32, !dbg !9484
  %conv48 = sext i32 %lnot.ext47 to i64, !dbg !9484
  %tobool49 = icmp ne i64 %conv48, 0, !dbg !9484
  br i1 %tobool49, label %if.then50, label %if.end59, !dbg !9483

if.then50:                                        ; preds = %if.end
  br label %do.body51, !dbg !9484

do.body51:                                        ; preds = %if.then50
  br label %do.body52, !dbg !9486

do.body52:                                        ; preds = %do.body51
  br label %do.end53, !dbg !9488

do.end53:                                         ; preds = %do.body52
  br label %do.body54, !dbg !9486

do.body54:                                        ; preds = %do.end53
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1780, i32 2307, i64 12) #8, !dbg !9490, !srcloc !9492
  br label %do.end55, !dbg !9490

do.end55:                                         ; preds = %do.body54
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 286) #8, !dbg !9493, !srcloc !9495
  br label %do.body56, !dbg !9486

do.body56:                                        ; preds = %do.end55
  br label %do.end57, !dbg !9496

do.end57:                                         ; preds = %do.body56
  br label %do.end58, !dbg !9486

do.end58:                                         ; preds = %do.end57
  br label %if.end59, !dbg !9486

if.end59:                                         ; preds = %do.end58, %if.end
  %42 = load i32, i32* %__ret_warn_on34, align 4, !dbg !9483
  %tobool61 = icmp ne i32 %42, 0, !dbg !9483
  %lnot62 = xor i1 %tobool61, true, !dbg !9483
  %lnot64 = xor i1 %lnot62, true, !dbg !9483
  %lnot.ext65 = zext i1 %lnot64 to i32, !dbg !9483
  %conv66 = sext i32 %lnot.ext65 to i64, !dbg !9483
  store i64 %conv66, i64* %tmp60, align 8, !dbg !9484
  %43 = load i64, i64* %tmp60, align 8, !dbg !9483
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on67, metadata !9498, metadata !DIExpression()), !dbg !9500
  %44 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9500
  %state68 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %44, i32 0, i32 19, !dbg !9500
  %45 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state68, align 8, !dbg !9500
  %crtc_y = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %45, i32 0, i32 5, !dbg !9500
  %46 = load i32, i32* %crtc_y, align 4, !dbg !9500
  %47 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9500
  %crtc_y69 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %47, i32 0, i32 5, !dbg !9500
  %48 = load i32, i32* %crtc_y69, align 4, !dbg !9500
  %cmp70 = icmp ne i32 %46, %48, !dbg !9500
  %lnot72 = xor i1 %cmp70, true, !dbg !9500
  %lnot74 = xor i1 %lnot72, true, !dbg !9500
  %lnot.ext75 = zext i1 %lnot74 to i32, !dbg !9500
  store i32 %lnot.ext75, i32* %__ret_warn_on67, align 4, !dbg !9500
  %49 = load i32, i32* %__ret_warn_on67, align 4, !dbg !9501
  %tobool76 = icmp ne i32 %49, 0, !dbg !9501
  %lnot77 = xor i1 %tobool76, true, !dbg !9501
  %lnot79 = xor i1 %lnot77, true, !dbg !9501
  %lnot.ext80 = zext i1 %lnot79 to i32, !dbg !9501
  %conv81 = sext i32 %lnot.ext80 to i64, !dbg !9501
  %tobool82 = icmp ne i64 %conv81, 0, !dbg !9501
  br i1 %tobool82, label %if.then83, label %if.end92, !dbg !9500

if.then83:                                        ; preds = %if.end59
  br label %do.body84, !dbg !9501

do.body84:                                        ; preds = %if.then83
  br label %do.body85, !dbg !9503

do.body85:                                        ; preds = %do.body84
  br label %do.end86, !dbg !9505

do.end86:                                         ; preds = %do.body85
  br label %do.body87, !dbg !9503

do.body87:                                        ; preds = %do.end86
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1781, i32 2307, i64 12) #8, !dbg !9507, !srcloc !9509
  br label %do.end88, !dbg !9507

do.end88:                                         ; preds = %do.body87
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 287) #8, !dbg !9510, !srcloc !9512
  br label %do.body89, !dbg !9503

do.body89:                                        ; preds = %do.end88
  br label %do.end90, !dbg !9513

do.end90:                                         ; preds = %do.body89
  br label %do.end91, !dbg !9503

do.end91:                                         ; preds = %do.end90
  br label %if.end92, !dbg !9503

if.end92:                                         ; preds = %do.end91, %if.end59
  %50 = load i32, i32* %__ret_warn_on67, align 4, !dbg !9500
  %tobool94 = icmp ne i32 %50, 0, !dbg !9500
  %lnot95 = xor i1 %tobool94, true, !dbg !9500
  %lnot97 = xor i1 %lnot95, true, !dbg !9500
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !9500
  %conv99 = sext i32 %lnot.ext98 to i64, !dbg !9500
  store i64 %conv99, i64* %tmp93, align 8, !dbg !9501
  %51 = load i64, i64* %tmp93, align 8, !dbg !9500
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on100, metadata !9515, metadata !DIExpression()), !dbg !9517
  %52 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9517
  %state101 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %52, i32 0, i32 19, !dbg !9517
  %53 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state101, align 8, !dbg !9517
  %src_x = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %53, i32 0, i32 8, !dbg !9517
  %54 = load i32, i32* %src_x, align 8, !dbg !9517
  %55 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9517
  %src_x102 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %55, i32 0, i32 8, !dbg !9517
  %56 = load i32, i32* %src_x102, align 8, !dbg !9517
  %cmp103 = icmp ne i32 %54, %56, !dbg !9517
  %lnot105 = xor i1 %cmp103, true, !dbg !9517
  %lnot107 = xor i1 %lnot105, true, !dbg !9517
  %lnot.ext108 = zext i1 %lnot107 to i32, !dbg !9517
  store i32 %lnot.ext108, i32* %__ret_warn_on100, align 4, !dbg !9517
  %57 = load i32, i32* %__ret_warn_on100, align 4, !dbg !9518
  %tobool109 = icmp ne i32 %57, 0, !dbg !9518
  %lnot110 = xor i1 %tobool109, true, !dbg !9518
  %lnot112 = xor i1 %lnot110, true, !dbg !9518
  %lnot.ext113 = zext i1 %lnot112 to i32, !dbg !9518
  %conv114 = sext i32 %lnot.ext113 to i64, !dbg !9518
  %tobool115 = icmp ne i64 %conv114, 0, !dbg !9518
  br i1 %tobool115, label %if.then116, label %if.end125, !dbg !9517

if.then116:                                       ; preds = %if.end92
  br label %do.body117, !dbg !9518

do.body117:                                       ; preds = %if.then116
  br label %do.body118, !dbg !9520

do.body118:                                       ; preds = %do.body117
  br label %do.end119, !dbg !9522

do.end119:                                        ; preds = %do.body118
  br label %do.body120, !dbg !9520

do.body120:                                       ; preds = %do.end119
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1782, i32 2307, i64 12) #8, !dbg !9524, !srcloc !9526
  br label %do.end121, !dbg !9524

do.end121:                                        ; preds = %do.body120
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 288) #8, !dbg !9527, !srcloc !9529
  br label %do.body122, !dbg !9520

do.body122:                                       ; preds = %do.end121
  br label %do.end123, !dbg !9530

do.end123:                                        ; preds = %do.body122
  br label %do.end124, !dbg !9520

do.end124:                                        ; preds = %do.end123
  br label %if.end125, !dbg !9520

if.end125:                                        ; preds = %do.end124, %if.end92
  %58 = load i32, i32* %__ret_warn_on100, align 4, !dbg !9517
  %tobool127 = icmp ne i32 %58, 0, !dbg !9517
  %lnot128 = xor i1 %tobool127, true, !dbg !9517
  %lnot130 = xor i1 %lnot128, true, !dbg !9517
  %lnot.ext131 = zext i1 %lnot130 to i32, !dbg !9517
  %conv132 = sext i32 %lnot.ext131 to i64, !dbg !9517
  store i64 %conv132, i64* %tmp126, align 8, !dbg !9518
  %59 = load i64, i64* %tmp126, align 8, !dbg !9517
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on133, metadata !9532, metadata !DIExpression()), !dbg !9534
  %60 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9534
  %state134 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %60, i32 0, i32 19, !dbg !9534
  %61 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state134, align 8, !dbg !9534
  %src_y = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %61, i32 0, i32 9, !dbg !9534
  %62 = load i32, i32* %src_y, align 4, !dbg !9534
  %63 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9534
  %src_y135 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %63, i32 0, i32 9, !dbg !9534
  %64 = load i32, i32* %src_y135, align 4, !dbg !9534
  %cmp136 = icmp ne i32 %62, %64, !dbg !9534
  %lnot138 = xor i1 %cmp136, true, !dbg !9534
  %lnot140 = xor i1 %lnot138, true, !dbg !9534
  %lnot.ext141 = zext i1 %lnot140 to i32, !dbg !9534
  store i32 %lnot.ext141, i32* %__ret_warn_on133, align 4, !dbg !9534
  %65 = load i32, i32* %__ret_warn_on133, align 4, !dbg !9535
  %tobool142 = icmp ne i32 %65, 0, !dbg !9535
  %lnot143 = xor i1 %tobool142, true, !dbg !9535
  %lnot145 = xor i1 %lnot143, true, !dbg !9535
  %lnot.ext146 = zext i1 %lnot145 to i32, !dbg !9535
  %conv147 = sext i32 %lnot.ext146 to i64, !dbg !9535
  %tobool148 = icmp ne i64 %conv147, 0, !dbg !9535
  br i1 %tobool148, label %if.then149, label %if.end158, !dbg !9534

if.then149:                                       ; preds = %if.end125
  br label %do.body150, !dbg !9535

do.body150:                                       ; preds = %if.then149
  br label %do.body151, !dbg !9537

do.body151:                                       ; preds = %do.body150
  br label %do.end152, !dbg !9539

do.end152:                                        ; preds = %do.body151
  br label %do.body153, !dbg !9537

do.body153:                                       ; preds = %do.end152
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1783, i32 2307, i64 12) #8, !dbg !9541, !srcloc !9543
  br label %do.end154, !dbg !9541

do.end154:                                        ; preds = %do.body153
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 289) #8, !dbg !9544, !srcloc !9546
  br label %do.body155, !dbg !9537

do.body155:                                       ; preds = %do.end154
  br label %do.end156, !dbg !9547

do.end156:                                        ; preds = %do.body155
  br label %do.end157, !dbg !9537

do.end157:                                        ; preds = %do.end156
  br label %if.end158, !dbg !9537

if.end158:                                        ; preds = %do.end157, %if.end125
  %66 = load i32, i32* %__ret_warn_on133, align 4, !dbg !9534
  %tobool160 = icmp ne i32 %66, 0, !dbg !9534
  %lnot161 = xor i1 %tobool160, true, !dbg !9534
  %lnot163 = xor i1 %lnot161, true, !dbg !9534
  %lnot.ext164 = zext i1 %lnot163 to i32, !dbg !9534
  %conv165 = sext i32 %lnot.ext164 to i64, !dbg !9534
  store i64 %conv165, i64* %tmp159, align 8, !dbg !9535
  %67 = load i64, i64* %tmp159, align 8, !dbg !9534
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on166, metadata !9549, metadata !DIExpression()), !dbg !9551
  %68 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !9551
  %fb167 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %68, i32 0, i32 2, !dbg !9551
  %69 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb167, align 8, !dbg !9551
  %70 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %old_fb, align 8, !dbg !9551
  %cmp168 = icmp ne %struct.drm_framebuffer* %69, %70, !dbg !9551
  %lnot170 = xor i1 %cmp168, true, !dbg !9551
  %lnot172 = xor i1 %lnot170, true, !dbg !9551
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !9551
  store i32 %lnot.ext173, i32* %__ret_warn_on166, align 4, !dbg !9551
  %71 = load i32, i32* %__ret_warn_on166, align 4, !dbg !9552
  %tobool174 = icmp ne i32 %71, 0, !dbg !9552
  %lnot175 = xor i1 %tobool174, true, !dbg !9552
  %lnot177 = xor i1 %lnot175, true, !dbg !9552
  %lnot.ext178 = zext i1 %lnot177 to i32, !dbg !9552
  %conv179 = sext i32 %lnot.ext178 to i64, !dbg !9552
  %tobool180 = icmp ne i64 %conv179, 0, !dbg !9552
  br i1 %tobool180, label %if.then181, label %if.end190, !dbg !9551

if.then181:                                       ; preds = %if.end158
  br label %do.body182, !dbg !9552

do.body182:                                       ; preds = %if.then181
  br label %do.body183, !dbg !9554

do.body183:                                       ; preds = %do.body182
  br label %do.end184, !dbg !9556

do.end184:                                        ; preds = %do.body183
  br label %do.body185, !dbg !9554

do.body185:                                       ; preds = %do.end184
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 1789, i32 2307, i64 12) #8, !dbg !9558, !srcloc !9560
  br label %do.end186, !dbg !9558

do.end186:                                        ; preds = %do.body185
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 290) #8, !dbg !9561, !srcloc !9563
  br label %do.body187, !dbg !9554

do.body187:                                       ; preds = %do.end186
  br label %do.end188, !dbg !9564

do.end188:                                        ; preds = %do.body187
  br label %do.end189, !dbg !9554

do.end189:                                        ; preds = %do.end188
  br label %if.end190, !dbg !9554

if.end190:                                        ; preds = %do.end189, %if.end158
  %72 = load i32, i32* %__ret_warn_on166, align 4, !dbg !9551
  %tobool192 = icmp ne i32 %72, 0, !dbg !9551
  %lnot193 = xor i1 %tobool192, true, !dbg !9551
  %lnot195 = xor i1 %lnot193, true, !dbg !9551
  %lnot.ext196 = zext i1 %lnot195 to i32, !dbg !9551
  %conv197 = sext i32 %lnot.ext196 to i64, !dbg !9551
  store i64 %conv197, i64* %tmp191, align 8, !dbg !9552
  %73 = load i64, i64* %tmp191, align 8, !dbg !9551
  br label %if.end198

if.end198:                                        ; preds = %if.end190, %if.then
  br label %for.inc, !dbg !9443

for.inc:                                          ; preds = %if.end198
  %74 = load i32, i32* %i, align 4, !dbg !9441
  %inc = add i32 %74, 1, !dbg !9441
  store i32 %inc, i32* %i, align 4, !dbg !9441
  br label %for.cond, !dbg !9441, !llvm.loop !9566

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9568
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_commit(%struct.drm_device* %dev, %struct.drm_atomic_state* %state, i1 zeroext %nonblock) #0 !dbg !9569 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %nonblock.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !9570, metadata !DIExpression()), !dbg !9571
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !9572, metadata !DIExpression()), !dbg !9573
  %frombool = zext i1 %nonblock to i8
  store i8 %frombool, i8* %nonblock.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonblock.addr, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9576, metadata !DIExpression()), !dbg !9577
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9578
  %async_update = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 2, !dbg !9580
  %bf.load = load i8, i8* %async_update, align 8, !dbg !9580
  %bf.lshr = lshr i8 %bf.load, 2, !dbg !9580
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9580
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !9580
  br i1 %bf.cast, label %if.then, label %if.end2, !dbg !9581

if.then:                                          ; preds = %entry
  %1 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !9582
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9584
  %call = call i32 @drm_atomic_helper_prepare_planes(%struct.drm_device* %1, %struct.drm_atomic_state* %2) #9, !dbg !9585
  store i32 %call, i32* %ret, align 4, !dbg !9586
  %3 = load i32, i32* %ret, align 4, !dbg !9587
  %tobool = icmp ne i32 %3, 0, !dbg !9587
  br i1 %tobool, label %if.then1, label %if.end, !dbg !9589

if.then1:                                         ; preds = %if.then
  %4 = load i32, i32* %ret, align 4, !dbg !9590
  store i32 %4, i32* %retval, align 4, !dbg !9591
  br label %return, !dbg !9591

if.end:                                           ; preds = %if.then
  %5 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !9592
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9593
  call void @drm_atomic_helper_async_commit(%struct.drm_device* %5, %struct.drm_atomic_state* %6) #9, !dbg !9594
  %7 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !9595
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9596
  call void @drm_atomic_helper_cleanup_planes(%struct.drm_device* %7, %struct.drm_atomic_state* %8) #9, !dbg !9597
  store i32 0, i32* %retval, align 4, !dbg !9598
  br label %return, !dbg !9598

if.end2:                                          ; preds = %entry
  %9 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9599
  %10 = load i8, i8* %nonblock.addr, align 1, !dbg !9600
  %tobool3 = trunc i8 %10 to i1, !dbg !9600
  %call4 = call i32 @drm_atomic_helper_setup_commit(%struct.drm_atomic_state* %9, i1 zeroext %tobool3) #9, !dbg !9601
  store i32 %call4, i32* %ret, align 4, !dbg !9602
  %11 = load i32, i32* %ret, align 4, !dbg !9603
  %tobool5 = icmp ne i32 %11, 0, !dbg !9603
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !9605

if.then6:                                         ; preds = %if.end2
  %12 = load i32, i32* %ret, align 4, !dbg !9606
  store i32 %12, i32* %retval, align 4, !dbg !9607
  br label %return, !dbg !9607

if.end7:                                          ; preds = %if.end2
  br label %do.body, !dbg !9608

do.body:                                          ; preds = %if.end7
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9609
  %commit_work = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 11, !dbg !9609
  call void @__init_work(%struct.work_struct* %commit_work, i32 0) #9, !dbg !9609
  %14 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9609
  %commit_work8 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %14, i32 0, i32 11, !dbg !9609
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %commit_work8, i32 0, i32 0, !dbg !9609
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !9609
  store i64 68719476704, i64* %counter, align 8, !dbg !9609
  %15 = bitcast %struct.atomic64_t* %data to i8*, !dbg !9609
  %16 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !9609
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false), !dbg !9609
  %17 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9609
  %commit_work9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %17, i32 0, i32 11, !dbg !9609
  %entry10 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %commit_work9, i32 0, i32 1, !dbg !9609
  call void @INIT_LIST_HEAD(%struct.list_head* %entry10) #9, !dbg !9609
  %18 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9609
  %commit_work11 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %18, i32 0, i32 11, !dbg !9609
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %commit_work11, i32 0, i32 2, !dbg !9609
  store void (%struct.work_struct*)* @commit_work, void (%struct.work_struct*)** %func, align 8, !dbg !9609
  br label %do.end, !dbg !9609

do.end:                                           ; preds = %do.body
  %19 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !9611
  %20 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9612
  %call12 = call i32 @drm_atomic_helper_prepare_planes(%struct.drm_device* %19, %struct.drm_atomic_state* %20) #9, !dbg !9613
  store i32 %call12, i32* %ret, align 4, !dbg !9614
  %21 = load i32, i32* %ret, align 4, !dbg !9615
  %tobool13 = icmp ne i32 %21, 0, !dbg !9615
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !9617

if.then14:                                        ; preds = %do.end
  %22 = load i32, i32* %ret, align 4, !dbg !9618
  store i32 %22, i32* %retval, align 4, !dbg !9619
  br label %return, !dbg !9619

if.end15:                                         ; preds = %do.end
  %23 = load i8, i8* %nonblock.addr, align 1, !dbg !9620
  %tobool16 = trunc i8 %23 to i1, !dbg !9620
  br i1 %tobool16, label %if.end22, label %if.then17, !dbg !9622

if.then17:                                        ; preds = %if.end15
  %24 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !9623
  %25 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9625
  %call18 = call i32 @drm_atomic_helper_wait_for_fences(%struct.drm_device* %24, %struct.drm_atomic_state* %25, i1 zeroext true) #9, !dbg !9626
  store i32 %call18, i32* %ret, align 4, !dbg !9627
  %26 = load i32, i32* %ret, align 4, !dbg !9628
  %tobool19 = icmp ne i32 %26, 0, !dbg !9628
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !9630

if.then20:                                        ; preds = %if.then17
  br label %err, !dbg !9631

if.end21:                                         ; preds = %if.then17
  br label %if.end22, !dbg !9632

if.end22:                                         ; preds = %if.end21, %if.end15
  %27 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9633
  %call23 = call i32 @drm_atomic_helper_swap_state(%struct.drm_atomic_state* %27, i1 zeroext true) #9, !dbg !9634
  store i32 %call23, i32* %ret, align 4, !dbg !9635
  %28 = load i32, i32* %ret, align 4, !dbg !9636
  %tobool24 = icmp ne i32 %28, 0, !dbg !9636
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !9638

if.then25:                                        ; preds = %if.end22
  br label %err, !dbg !9639

if.end26:                                         ; preds = %if.end22
  %29 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9640
  %call27 = call %struct.drm_atomic_state* @drm_atomic_state_get(%struct.drm_atomic_state* %29) #9, !dbg !9641
  %30 = load i8, i8* %nonblock.addr, align 1, !dbg !9642
  %tobool28 = trunc i8 %30 to i1, !dbg !9642
  br i1 %tobool28, label %if.then29, label %if.else, !dbg !9644

if.then29:                                        ; preds = %if.end26
  %31 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_unbound_wq, align 8, !dbg !9645
  %32 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9646
  %commit_work30 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %32, i32 0, i32 11, !dbg !9647
  %call31 = call zeroext i1 @queue_work(%struct.workqueue_struct* %31, %struct.work_struct* %commit_work30) #9, !dbg !9648
  br label %if.end32, !dbg !9648

if.else:                                          ; preds = %if.end26
  %33 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9649
  call void @commit_tail(%struct.drm_atomic_state* %33) #9, !dbg !9650
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then29
  store i32 0, i32* %retval, align 4, !dbg !9651
  br label %return, !dbg !9651

err:                                              ; preds = %if.then25, %if.then20
  call void @llvm.dbg.label(metadata !9652), !dbg !9653
  %34 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !9654
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9655
  call void @drm_atomic_helper_cleanup_planes(%struct.drm_device* %34, %struct.drm_atomic_state* %35) #9, !dbg !9656
  %36 = load i32, i32* %ret, align 4, !dbg !9657
  store i32 %36, i32* %retval, align 4, !dbg !9658
  br label %return, !dbg !9658

return:                                           ; preds = %err, %if.end32, %if.then14, %if.then6, %if.end, %if.then1
  %37 = load i32, i32* %retval, align 4, !dbg !9659
  ret i32 %37, !dbg !9659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_prepare_planes(%struct.drm_device* %dev, %struct.drm_atomic_state* %state) #0 !dbg !9660 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %funcs = alloca %struct.drm_plane_helper_funcs*, align 8
  %funcs68 = alloca %struct.drm_plane_helper_funcs*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !9661, metadata !DIExpression()), !dbg !9662
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !9663, metadata !DIExpression()), !dbg !9664
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !9665, metadata !DIExpression()), !dbg !9666
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !9667, metadata !DIExpression()), !dbg !9668
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !9669, metadata !DIExpression()), !dbg !9670
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !9671, metadata !DIExpression()), !dbg !9672
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9673, metadata !DIExpression()), !dbg !9674
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9675, metadata !DIExpression()), !dbg !9676
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9677, metadata !DIExpression()), !dbg !9678
  store i32 0, i32* %i, align 4, !dbg !9679
  br label %for.cond, !dbg !9679

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9681
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9681
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 5, !dbg !9681
  %2 = load i32, i32* %num_connector, align 8, !dbg !9681
  %cmp = icmp slt i32 %0, %2, !dbg !9681
  br i1 %cmp, label %for.body, label %for.end, !dbg !9679

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9683
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 6, !dbg !9683
  %4 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !9683
  %5 = load i32, i32* %i, align 4, !dbg !9683
  %idxprom = sext i32 %5 to i64, !dbg !9683
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %4, i64 %idxprom, !dbg !9683
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !9683
  %6 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !9683
  %tobool = icmp ne %struct.drm_connector* %6, null, !dbg !9683
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9683

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9683
  %connectors1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 6, !dbg !9683
  %8 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors1, align 8, !dbg !9683
  %9 = load i32, i32* %i, align 4, !dbg !9683
  %idxprom2 = sext i32 %9 to i64, !dbg !9683
  %arrayidx3 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %8, i64 %idxprom2, !dbg !9683
  %ptr4 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx3, i32 0, i32 0, !dbg !9683
  %10 = load %struct.drm_connector*, %struct.drm_connector** %ptr4, align 8, !dbg !9683
  store %struct.drm_connector* %10, %struct.drm_connector** %connector, align 8, !dbg !9683
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !9683
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9683
  %connectors5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 6, !dbg !9683
  %13 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors5, align 8, !dbg !9683
  %14 = load i32, i32* %i, align 4, !dbg !9683
  %idxprom6 = sext i32 %14 to i64, !dbg !9683
  %arrayidx7 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %13, i64 %idxprom6, !dbg !9683
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx7, i32 0, i32 3, !dbg !9683
  %15 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !9683
  store %struct.drm_connector_state* %15, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !9683
  %16 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !9683
  br i1 true, label %if.else, label %if.then, !dbg !9681

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end14, !dbg !9685

if.else:                                          ; preds = %land.lhs.true
  %17 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !9687
  %writeback_job = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %17, i32 0, i32 14, !dbg !9690
  %18 = load %struct.drm_writeback_job*, %struct.drm_writeback_job** %writeback_job, align 8, !dbg !9690
  %tobool8 = icmp ne %struct.drm_writeback_job* %18, null, !dbg !9687
  br i1 %tobool8, label %if.end, label %if.then9, !dbg !9691

if.then9:                                         ; preds = %if.else
  br label %for.inc, !dbg !9692

if.end:                                           ; preds = %if.else
  %19 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !9693
  %writeback_job10 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %19, i32 0, i32 14, !dbg !9694
  %20 = load %struct.drm_writeback_job*, %struct.drm_writeback_job** %writeback_job10, align 8, !dbg !9694
  %call = call i32 @drm_writeback_prepare_job(%struct.drm_writeback_job* %20) #9, !dbg !9695
  store i32 %call, i32* %ret, align 4, !dbg !9696
  %21 = load i32, i32* %ret, align 4, !dbg !9697
  %cmp11 = icmp slt i32 %21, 0, !dbg !9699
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !9700

if.then12:                                        ; preds = %if.end
  %22 = load i32, i32* %ret, align 4, !dbg !9701
  store i32 %22, i32* %retval, align 4, !dbg !9702
  br label %return, !dbg !9702

if.end13:                                         ; preds = %if.end
  br label %if.end14

if.end14:                                         ; preds = %if.end13, %if.then
  br label %for.inc, !dbg !9683

for.inc:                                          ; preds = %if.end14, %if.then9
  %23 = load i32, i32* %i, align 4, !dbg !9681
  %inc = add i32 %23, 1, !dbg !9681
  store i32 %inc, i32* %i, align 4, !dbg !9681
  br label %for.cond, !dbg !9681, !llvm.loop !9703

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9705
  br label %for.cond15, !dbg !9705

for.cond15:                                       ; preds = %for.inc43, %for.end
  %24 = load i32, i32* %i, align 4, !dbg !9707
  %25 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9707
  %dev16 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %25, i32 0, i32 1, !dbg !9707
  %26 = load %struct.drm_device*, %struct.drm_device** %dev16, align 8, !dbg !9707
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %26, i32 0, i32 35, !dbg !9707
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 17, !dbg !9707
  %27 = load i32, i32* %num_total_plane, align 8, !dbg !9707
  %cmp17 = icmp slt i32 %24, %27, !dbg !9707
  br i1 %cmp17, label %for.body18, label %for.end45, !dbg !9705

for.body18:                                       ; preds = %for.cond15
  %28 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9709
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %28, i32 0, i32 3, !dbg !9709
  %29 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !9709
  %30 = load i32, i32* %i, align 4, !dbg !9709
  %idxprom19 = sext i32 %30 to i64, !dbg !9709
  %arrayidx20 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %29, i64 %idxprom19, !dbg !9709
  %ptr21 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx20, i32 0, i32 0, !dbg !9709
  %31 = load %struct.drm_plane*, %struct.drm_plane** %ptr21, align 8, !dbg !9709
  %tobool22 = icmp ne %struct.drm_plane* %31, null, !dbg !9709
  br i1 %tobool22, label %land.lhs.true23, label %if.then32, !dbg !9709

land.lhs.true23:                                  ; preds = %for.body18
  %32 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9709
  %planes24 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %32, i32 0, i32 3, !dbg !9709
  %33 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes24, align 8, !dbg !9709
  %34 = load i32, i32* %i, align 4, !dbg !9709
  %idxprom25 = sext i32 %34 to i64, !dbg !9709
  %arrayidx26 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %33, i64 %idxprom25, !dbg !9709
  %ptr27 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx26, i32 0, i32 0, !dbg !9709
  %35 = load %struct.drm_plane*, %struct.drm_plane** %ptr27, align 8, !dbg !9709
  store %struct.drm_plane* %35, %struct.drm_plane** %plane, align 8, !dbg !9709
  %36 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9709
  %37 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9709
  %planes28 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %37, i32 0, i32 3, !dbg !9709
  %38 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes28, align 8, !dbg !9709
  %39 = load i32, i32* %i, align 4, !dbg !9709
  %idxprom29 = sext i32 %39 to i64, !dbg !9709
  %arrayidx30 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %38, i64 %idxprom29, !dbg !9709
  %new_state31 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx30, i32 0, i32 3, !dbg !9709
  %40 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state31, align 8, !dbg !9709
  store %struct.drm_plane_state* %40, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9709
  %41 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9709
  br i1 true, label %if.else33, label %if.then32, !dbg !9707

if.then32:                                        ; preds = %land.lhs.true23, %for.body18
  br label %if.end42, !dbg !9711

if.else33:                                        ; preds = %land.lhs.true23
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %funcs, metadata !9713, metadata !DIExpression()), !dbg !9715
  %42 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9716
  %helper_private = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %42, i32 0, i32 18, !dbg !9717
  %43 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private, align 8, !dbg !9717
  store %struct.drm_plane_helper_funcs* %43, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9718
  %44 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9719
  %prepare_fb = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %44, i32 0, i32 0, !dbg !9721
  %45 = load i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)** %prepare_fb, align 8, !dbg !9721
  %tobool34 = icmp ne i32 (%struct.drm_plane*, %struct.drm_plane_state*)* %45, null, !dbg !9719
  br i1 %tobool34, label %if.then35, label %if.end41, !dbg !9722

if.then35:                                        ; preds = %if.else33
  %46 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs, align 8, !dbg !9723
  %prepare_fb36 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %46, i32 0, i32 0, !dbg !9725
  %47 = load i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)** %prepare_fb36, align 8, !dbg !9725
  %48 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9726
  %49 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9727
  %call37 = call i32 %47(%struct.drm_plane* %48, %struct.drm_plane_state* %49) #9, !dbg !9723
  store i32 %call37, i32* %ret, align 4, !dbg !9728
  %50 = load i32, i32* %ret, align 4, !dbg !9729
  %tobool38 = icmp ne i32 %50, 0, !dbg !9729
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !9731

if.then39:                                        ; preds = %if.then35
  br label %fail, !dbg !9732

if.end40:                                         ; preds = %if.then35
  br label %if.end41, !dbg !9733

if.end41:                                         ; preds = %if.end40, %if.else33
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then32
  br label %for.inc43, !dbg !9709

for.inc43:                                        ; preds = %if.end42
  %51 = load i32, i32* %i, align 4, !dbg !9707
  %inc44 = add i32 %51, 1, !dbg !9707
  store i32 %inc44, i32* %i, align 4, !dbg !9707
  br label %for.cond15, !dbg !9707, !llvm.loop !9734

for.end45:                                        ; preds = %for.cond15
  store i32 0, i32* %retval, align 4, !dbg !9736
  br label %return, !dbg !9736

fail:                                             ; preds = %if.then39
  call void @llvm.dbg.label(metadata !9737), !dbg !9738
  store i32 0, i32* %j, align 4, !dbg !9739
  br label %for.cond46, !dbg !9739

for.cond46:                                       ; preds = %for.inc78, %fail
  %52 = load i32, i32* %j, align 4, !dbg !9741
  %53 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9741
  %dev47 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %53, i32 0, i32 1, !dbg !9741
  %54 = load %struct.drm_device*, %struct.drm_device** %dev47, align 8, !dbg !9741
  %mode_config48 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %54, i32 0, i32 35, !dbg !9741
  %num_total_plane49 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config48, i32 0, i32 17, !dbg !9741
  %55 = load i32, i32* %num_total_plane49, align 8, !dbg !9741
  %cmp50 = icmp slt i32 %52, %55, !dbg !9741
  br i1 %cmp50, label %for.body51, label %for.end80, !dbg !9739

for.body51:                                       ; preds = %for.cond46
  %56 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9743
  %planes52 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %56, i32 0, i32 3, !dbg !9743
  %57 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes52, align 8, !dbg !9743
  %58 = load i32, i32* %j, align 4, !dbg !9743
  %idxprom53 = sext i32 %58 to i64, !dbg !9743
  %arrayidx54 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %57, i64 %idxprom53, !dbg !9743
  %ptr55 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx54, i32 0, i32 0, !dbg !9743
  %59 = load %struct.drm_plane*, %struct.drm_plane** %ptr55, align 8, !dbg !9743
  %tobool56 = icmp ne %struct.drm_plane* %59, null, !dbg !9743
  br i1 %tobool56, label %land.lhs.true57, label %if.then66, !dbg !9743

land.lhs.true57:                                  ; preds = %for.body51
  %60 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9743
  %planes58 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %60, i32 0, i32 3, !dbg !9743
  %61 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes58, align 8, !dbg !9743
  %62 = load i32, i32* %j, align 4, !dbg !9743
  %idxprom59 = sext i32 %62 to i64, !dbg !9743
  %arrayidx60 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %61, i64 %idxprom59, !dbg !9743
  %ptr61 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx60, i32 0, i32 0, !dbg !9743
  %63 = load %struct.drm_plane*, %struct.drm_plane** %ptr61, align 8, !dbg !9743
  store %struct.drm_plane* %63, %struct.drm_plane** %plane, align 8, !dbg !9743
  %64 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9743
  %65 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9743
  %planes62 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %65, i32 0, i32 3, !dbg !9743
  %66 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes62, align 8, !dbg !9743
  %67 = load i32, i32* %j, align 4, !dbg !9743
  %idxprom63 = sext i32 %67 to i64, !dbg !9743
  %arrayidx64 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %66, i64 %idxprom63, !dbg !9743
  %new_state65 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx64, i32 0, i32 3, !dbg !9743
  %68 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state65, align 8, !dbg !9743
  store %struct.drm_plane_state* %68, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9743
  %69 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9743
  br i1 true, label %if.else67, label %if.then66, !dbg !9741

if.then66:                                        ; preds = %land.lhs.true57, %for.body51
  br label %if.end77, !dbg !9745

if.else67:                                        ; preds = %land.lhs.true57
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %funcs68, metadata !9747, metadata !DIExpression()), !dbg !9749
  %70 = load i32, i32* %j, align 4, !dbg !9750
  %71 = load i32, i32* %i, align 4, !dbg !9752
  %cmp69 = icmp sge i32 %70, %71, !dbg !9753
  br i1 %cmp69, label %if.then70, label %if.end71, !dbg !9754

if.then70:                                        ; preds = %if.else67
  br label %for.inc78, !dbg !9755

if.end71:                                         ; preds = %if.else67
  %72 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9756
  %helper_private72 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %72, i32 0, i32 18, !dbg !9757
  %73 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private72, align 8, !dbg !9757
  store %struct.drm_plane_helper_funcs* %73, %struct.drm_plane_helper_funcs** %funcs68, align 8, !dbg !9758
  %74 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs68, align 8, !dbg !9759
  %cleanup_fb = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %74, i32 0, i32 1, !dbg !9761
  %75 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %cleanup_fb, align 8, !dbg !9761
  %tobool73 = icmp ne void (%struct.drm_plane*, %struct.drm_plane_state*)* %75, null, !dbg !9759
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !9762

if.then74:                                        ; preds = %if.end71
  %76 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %funcs68, align 8, !dbg !9763
  %cleanup_fb75 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %76, i32 0, i32 1, !dbg !9764
  %77 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %cleanup_fb75, align 8, !dbg !9764
  %78 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9765
  %79 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9766
  call void %77(%struct.drm_plane* %78, %struct.drm_plane_state* %79) #9, !dbg !9763
  br label %if.end76, !dbg !9763

if.end76:                                         ; preds = %if.then74, %if.end71
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then66
  br label %for.inc78, !dbg !9743

for.inc78:                                        ; preds = %if.end77, %if.then70
  %80 = load i32, i32* %j, align 4, !dbg !9741
  %inc79 = add i32 %80, 1, !dbg !9741
  store i32 %inc79, i32* %j, align 4, !dbg !9741
  br label %for.cond46, !dbg !9741, !llvm.loop !9767

for.end80:                                        ; preds = %for.cond46
  %81 = load i32, i32* %ret, align 4, !dbg !9769
  store i32 %81, i32* %retval, align 4, !dbg !9770
  br label %return, !dbg !9770

return:                                           ; preds = %for.end80, %for.end45, %if.then12
  %82 = load i32, i32* %retval, align 4, !dbg !9771
  ret i32 %82, !dbg !9771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_setup_commit(%struct.drm_atomic_state* %state, i1 zeroext %nonblock) #0 !dbg !9772 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %nonblock.addr = alloca i8, align 1
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %conn = alloca %struct.drm_connector*, align 8
  %old_conn_state = alloca %struct.drm_connector_state*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !9773, metadata !DIExpression()), !dbg !9774
  %frombool = zext i1 %nonblock to i8
  store i8 %frombool, i8* %nonblock.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonblock.addr, metadata !9775, metadata !DIExpression()), !dbg !9776
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !9777, metadata !DIExpression()), !dbg !9778
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !9779, metadata !DIExpression()), !dbg !9780
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !9781, metadata !DIExpression()), !dbg !9782
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %conn, metadata !9783, metadata !DIExpression()), !dbg !9784
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_conn_state, metadata !9785, metadata !DIExpression()), !dbg !9786
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !9787, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !9789, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !9791, metadata !DIExpression()), !dbg !9792
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !9793, metadata !DIExpression()), !dbg !9794
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !9795, metadata !DIExpression()), !dbg !9796
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9797, metadata !DIExpression()), !dbg !9798
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9799, metadata !DIExpression()), !dbg !9800
  store i32 0, i32* %i, align 4, !dbg !9801
  br label %for.cond, !dbg !9801

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9803
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9803
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !9803
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !9803
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !9803
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !9803
  %3 = load i32, i32* %num_crtc, align 8, !dbg !9803
  %cmp = icmp slt i32 %0, %3, !dbg !9803
  br i1 %cmp, label %for.body, label %for.end, !dbg !9801

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9805
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !9805
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !9805
  %6 = load i32, i32* %i, align 4, !dbg !9805
  %idxprom = sext i32 %6 to i64, !dbg !9805
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !9805
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !9805
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !9805
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !9805
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !9805

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9805
  %crtcs1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !9805
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs1, align 8, !dbg !9805
  %10 = load i32, i32* %i, align 4, !dbg !9805
  %idxprom2 = sext i32 %10 to i64, !dbg !9805
  %arrayidx3 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom2, !dbg !9805
  %ptr4 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx3, i32 0, i32 0, !dbg !9805
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr4, align 8, !dbg !9805
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !9805
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9805
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9805
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !9805
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !9805
  %15 = load i32, i32* %i, align 4, !dbg !9805
  %idxprom6 = sext i32 %15 to i64, !dbg !9805
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom6, !dbg !9805
  %old_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 2, !dbg !9805
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state, align 8, !dbg !9805
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9805
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9805
  %18 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9805
  %crtcs8 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %18, i32 0, i32 4, !dbg !9805
  %19 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs8, align 8, !dbg !9805
  %20 = load i32, i32* %i, align 4, !dbg !9805
  %idxprom9 = sext i32 %20 to i64, !dbg !9805
  %arrayidx10 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %19, i64 %idxprom9, !dbg !9805
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx10, i32 0, i32 3, !dbg !9805
  %21 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !9805
  store %struct.drm_crtc_state* %21, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9805
  br i1 true, label %if.else, label %if.then, !dbg !9803

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end49, !dbg !9807

if.else:                                          ; preds = %land.lhs.true
  %call = call i8* @kzalloc(i64 120, i32 3264) #9, !dbg !9809
  %22 = bitcast i8* %call to %struct.drm_crtc_commit*, !dbg !9809
  store %struct.drm_crtc_commit* %22, %struct.drm_crtc_commit** %commit, align 8, !dbg !9811
  %23 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9812
  %tobool11 = icmp ne %struct.drm_crtc_commit* %23, null, !dbg !9812
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !9814

if.then12:                                        ; preds = %if.else
  store i32 -12, i32* %retval, align 4, !dbg !9815
  br label %return, !dbg !9815

if.end:                                           ; preds = %if.else
  %24 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9816
  %25 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9817
  call void @init_commit(%struct.drm_crtc_commit* %24, %struct.drm_crtc* %25) #9, !dbg !9818
  %26 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9819
  %27 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9820
  %commit13 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %27, i32 0, i32 18, !dbg !9821
  store %struct.drm_crtc_commit* %26, %struct.drm_crtc_commit** %commit13, align 8, !dbg !9822
  %28 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !9823
  %29 = load i8, i8* %nonblock.addr, align 1, !dbg !9824
  %tobool14 = trunc i8 %29 to i1, !dbg !9824
  %call15 = call i32 @stall_checks(%struct.drm_crtc* %28, i1 zeroext %tobool14) #9, !dbg !9825
  store i32 %call15, i32* %ret, align 4, !dbg !9826
  %30 = load i32, i32* %ret, align 4, !dbg !9827
  %tobool16 = icmp ne i32 %30, 0, !dbg !9827
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !9829

if.then17:                                        ; preds = %if.end
  %31 = load i32, i32* %ret, align 4, !dbg !9830
  store i32 %31, i32* %retval, align 4, !dbg !9831
  br label %return, !dbg !9831

if.end18:                                         ; preds = %if.end
  %32 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !9832
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %32, i32 0, i32 2, !dbg !9834
  %33 = load i8, i8* %active, align 1, !dbg !9834
  %tobool19 = trunc i8 %33 to i1, !dbg !9834
  br i1 %tobool19, label %if.end24, label %land.lhs.true20, !dbg !9835

land.lhs.true20:                                  ; preds = %if.end18
  %34 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9836
  %active21 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %34, i32 0, i32 2, !dbg !9837
  %35 = load i8, i8* %active21, align 1, !dbg !9837
  %tobool22 = trunc i8 %35 to i1, !dbg !9837
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !9838

if.then23:                                        ; preds = %land.lhs.true20
  %36 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9839
  %flip_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %36, i32 0, i32 2, !dbg !9841
  call void @complete_all(%struct.completion* %flip_done) #9, !dbg !9842
  br label %for.inc, !dbg !9843

if.end24:                                         ; preds = %land.lhs.true20, %if.end18
  %37 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9844
  %legacy_cursor_update = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %37, i32 0, i32 2, !dbg !9846
  %bf.load = load i8, i8* %legacy_cursor_update, align 8, !dbg !9846
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !9846
  %bf.clear = and i8 %bf.lshr, 1, !dbg !9846
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !9846
  br i1 %bf.cast, label %if.then25, label %if.end27, !dbg !9847

if.then25:                                        ; preds = %if.end24
  %38 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9848
  %flip_done26 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %38, i32 0, i32 2, !dbg !9850
  call void @complete_all(%struct.completion* %flip_done26) #9, !dbg !9851
  br label %for.inc, !dbg !9852

if.end27:                                         ; preds = %if.end24
  %39 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9853
  %event = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %39, i32 0, i32 17, !dbg !9855
  %40 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event, align 8, !dbg !9855
  %tobool28 = icmp ne %struct.drm_pending_vblank_event* %40, null, !dbg !9853
  br i1 %tobool28, label %if.end38, label %if.then29, !dbg !9856

if.then29:                                        ; preds = %if.end27
  %call30 = call i8* @kzalloc(i64 120, i32 3264) #9, !dbg !9857
  %41 = bitcast i8* %call30 to %struct.drm_pending_vblank_event*, !dbg !9857
  %42 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9859
  %event31 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %42, i32 0, i32 6, !dbg !9860
  store %struct.drm_pending_vblank_event* %41, %struct.drm_pending_vblank_event** %event31, align 8, !dbg !9861
  %43 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9862
  %event32 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %43, i32 0, i32 6, !dbg !9864
  %44 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event32, align 8, !dbg !9864
  %tobool33 = icmp ne %struct.drm_pending_vblank_event* %44, null, !dbg !9862
  br i1 %tobool33, label %if.end35, label %if.then34, !dbg !9865

if.then34:                                        ; preds = %if.then29
  store i32 -12, i32* %retval, align 4, !dbg !9866
  br label %return, !dbg !9866

if.end35:                                         ; preds = %if.then29
  %45 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9867
  %event36 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %45, i32 0, i32 6, !dbg !9868
  %46 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event36, align 8, !dbg !9868
  %47 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9869
  %event37 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %47, i32 0, i32 17, !dbg !9870
  store %struct.drm_pending_vblank_event* %46, %struct.drm_pending_vblank_event** %event37, align 8, !dbg !9871
  br label %if.end38, !dbg !9872

if.end38:                                         ; preds = %if.end35, %if.end27
  %48 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9873
  %flip_done39 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %48, i32 0, i32 2, !dbg !9874
  %49 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9875
  %event40 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %49, i32 0, i32 17, !dbg !9876
  %50 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event40, align 8, !dbg !9876
  %base = getelementptr inbounds %struct.drm_pending_vblank_event, %struct.drm_pending_vblank_event* %50, i32 0, i32 0, !dbg !9877
  %completion = getelementptr inbounds %struct.drm_pending_event, %struct.drm_pending_event* %base, i32 0, i32 0, !dbg !9878
  store %struct.completion* %flip_done39, %struct.completion** %completion, align 8, !dbg !9879
  %51 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !9880
  %event41 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %51, i32 0, i32 17, !dbg !9881
  %52 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event41, align 8, !dbg !9881
  %base42 = getelementptr inbounds %struct.drm_pending_vblank_event, %struct.drm_pending_vblank_event* %52, i32 0, i32 0, !dbg !9882
  %completion_release = getelementptr inbounds %struct.drm_pending_event, %struct.drm_pending_event* %base42, i32 0, i32 1, !dbg !9883
  store void (%struct.completion*)* @release_crtc_commit, void (%struct.completion*)** %completion_release, align 8, !dbg !9884
  %53 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9885
  %call43 = call %struct.drm_crtc_commit* @drm_crtc_commit_get(%struct.drm_crtc_commit* %53) #9, !dbg !9886
  %54 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9887
  %abort_completion = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %54, i32 0, i32 7, !dbg !9888
  store i8 1, i8* %abort_completion, align 8, !dbg !9889
  %55 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9890
  %56 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9891
  %crtcs44 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %56, i32 0, i32 4, !dbg !9892
  %57 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs44, align 8, !dbg !9892
  %58 = load i32, i32* %i, align 4, !dbg !9893
  %idxprom45 = sext i32 %58 to i64, !dbg !9891
  %arrayidx46 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %57, i64 %idxprom45, !dbg !9891
  %commit47 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx46, i32 0, i32 4, !dbg !9894
  store %struct.drm_crtc_commit* %55, %struct.drm_crtc_commit** %commit47, align 8, !dbg !9895
  %59 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9896
  %call48 = call %struct.drm_crtc_commit* @drm_crtc_commit_get(%struct.drm_crtc_commit* %59) #9, !dbg !9897
  br label %if.end49

if.end49:                                         ; preds = %if.end38, %if.then
  br label %for.inc, !dbg !9805

for.inc:                                          ; preds = %if.end49, %if.then25, %if.then23
  %60 = load i32, i32* %i, align 4, !dbg !9803
  %inc = add i32 %60, 1, !dbg !9803
  store i32 %inc, i32* %i, align 4, !dbg !9803
  br label %for.cond, !dbg !9803, !llvm.loop !9898

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9900
  br label %for.cond50, !dbg !9900

for.cond50:                                       ; preds = %for.inc92, %for.end
  %61 = load i32, i32* %i, align 4, !dbg !9902
  %62 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9902
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %62, i32 0, i32 5, !dbg !9902
  %63 = load i32, i32* %num_connector, align 8, !dbg !9902
  %cmp51 = icmp slt i32 %61, %63, !dbg !9902
  br i1 %cmp51, label %for.body52, label %for.end94, !dbg !9900

for.body52:                                       ; preds = %for.cond50
  %64 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9904
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %64, i32 0, i32 6, !dbg !9904
  %65 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !9904
  %66 = load i32, i32* %i, align 4, !dbg !9904
  %idxprom53 = sext i32 %66 to i64, !dbg !9904
  %arrayidx54 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %65, i64 %idxprom53, !dbg !9904
  %ptr55 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx54, i32 0, i32 0, !dbg !9904
  %67 = load %struct.drm_connector*, %struct.drm_connector** %ptr55, align 8, !dbg !9904
  %tobool56 = icmp ne %struct.drm_connector* %67, null, !dbg !9904
  br i1 %tobool56, label %land.lhs.true57, label %if.then70, !dbg !9904

land.lhs.true57:                                  ; preds = %for.body52
  %68 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9904
  %connectors58 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %68, i32 0, i32 6, !dbg !9904
  %69 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors58, align 8, !dbg !9904
  %70 = load i32, i32* %i, align 4, !dbg !9904
  %idxprom59 = sext i32 %70 to i64, !dbg !9904
  %arrayidx60 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %69, i64 %idxprom59, !dbg !9904
  %ptr61 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx60, i32 0, i32 0, !dbg !9904
  %71 = load %struct.drm_connector*, %struct.drm_connector** %ptr61, align 8, !dbg !9904
  store %struct.drm_connector* %71, %struct.drm_connector** %conn, align 8, !dbg !9904
  %72 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !9904
  %73 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9904
  %connectors62 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %73, i32 0, i32 6, !dbg !9904
  %74 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors62, align 8, !dbg !9904
  %75 = load i32, i32* %i, align 4, !dbg !9904
  %idxprom63 = sext i32 %75 to i64, !dbg !9904
  %arrayidx64 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %74, i64 %idxprom63, !dbg !9904
  %old_state65 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx64, i32 0, i32 2, !dbg !9904
  %76 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state65, align 8, !dbg !9904
  store %struct.drm_connector_state* %76, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !9904
  %77 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9904
  %connectors66 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %77, i32 0, i32 6, !dbg !9904
  %78 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors66, align 8, !dbg !9904
  %79 = load i32, i32* %i, align 4, !dbg !9904
  %idxprom67 = sext i32 %79 to i64, !dbg !9904
  %arrayidx68 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %78, i64 %idxprom67, !dbg !9904
  %new_state69 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx68, i32 0, i32 3, !dbg !9904
  %80 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state69, align 8, !dbg !9904
  store %struct.drm_connector_state* %80, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !9904
  br i1 true, label %if.else71, label %if.then70, !dbg !9902

if.then70:                                        ; preds = %land.lhs.true57, %for.body52
  br label %if.end91, !dbg !9906

if.else71:                                        ; preds = %land.lhs.true57
  %81 = load i8, i8* %nonblock.addr, align 1, !dbg !9908
  %tobool72 = trunc i8 %81 to i1, !dbg !9908
  br i1 %tobool72, label %land.lhs.true73, label %if.end81, !dbg !9911

land.lhs.true73:                                  ; preds = %if.else71
  %82 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !9912
  %commit74 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %82, i32 0, i32 5, !dbg !9913
  %83 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit74, align 8, !dbg !9913
  %tobool75 = icmp ne %struct.drm_crtc_commit* %83, null, !dbg !9912
  br i1 %tobool75, label %land.lhs.true76, label %if.end81, !dbg !9914

land.lhs.true76:                                  ; preds = %land.lhs.true73
  %84 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !9915
  %commit77 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %84, i32 0, i32 5, !dbg !9916
  %85 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit77, align 8, !dbg !9916
  %flip_done78 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %85, i32 0, i32 2, !dbg !9917
  %call79 = call zeroext i1 @try_wait_for_completion(%struct.completion* %flip_done78) #9, !dbg !9918
  br i1 %call79, label %if.end81, label %if.then80, !dbg !9919

if.then80:                                        ; preds = %land.lhs.true76
  store i32 -16, i32* %retval, align 4, !dbg !9920
  br label %return, !dbg !9920

if.end81:                                         ; preds = %land.lhs.true76, %land.lhs.true73, %if.else71
  %86 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9921
  %87 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !9922
  %crtc82 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %87, i32 0, i32 1, !dbg !9923
  %88 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc82, align 8, !dbg !9923
  %tobool83 = icmp ne %struct.drm_crtc* %88, null, !dbg !9922
  br i1 %tobool83, label %cond.true, label %cond.false, !dbg !9922

cond.true:                                        ; preds = %if.end81
  br label %cond.end, !dbg !9922

cond.false:                                       ; preds = %if.end81
  %89 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !9924
  %crtc84 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %89, i32 0, i32 1, !dbg !9925
  %90 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc84, align 8, !dbg !9925
  br label %cond.end, !dbg !9922

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.drm_crtc* [ %88, %cond.true ], [ %90, %cond.false ], !dbg !9922
  %call85 = call %struct.drm_crtc_commit* @crtc_or_fake_commit(%struct.drm_atomic_state* %86, %struct.drm_crtc* %cond) #9, !dbg !9926
  store %struct.drm_crtc_commit* %call85, %struct.drm_crtc_commit** %commit, align 8, !dbg !9927
  %91 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9928
  %tobool86 = icmp ne %struct.drm_crtc_commit* %91, null, !dbg !9928
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !9930

if.then87:                                        ; preds = %cond.end
  store i32 -12, i32* %retval, align 4, !dbg !9931
  br label %return, !dbg !9931

if.end88:                                         ; preds = %cond.end
  %92 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9932
  %call89 = call %struct.drm_crtc_commit* @drm_crtc_commit_get(%struct.drm_crtc_commit* %92) #9, !dbg !9933
  %93 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !9934
  %commit90 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %93, i32 0, i32 5, !dbg !9935
  store %struct.drm_crtc_commit* %call89, %struct.drm_crtc_commit** %commit90, align 8, !dbg !9936
  br label %if.end91

if.end91:                                         ; preds = %if.end88, %if.then70
  br label %for.inc92, !dbg !9904

for.inc92:                                        ; preds = %if.end91
  %94 = load i32, i32* %i, align 4, !dbg !9902
  %inc93 = add i32 %94, 1, !dbg !9902
  store i32 %inc93, i32* %i, align 4, !dbg !9902
  br label %for.cond50, !dbg !9902, !llvm.loop !9937

for.end94:                                        ; preds = %for.cond50
  store i32 0, i32* %i, align 4, !dbg !9939
  br label %for.cond95, !dbg !9939

for.cond95:                                       ; preds = %for.inc143, %for.end94
  %95 = load i32, i32* %i, align 4, !dbg !9941
  %96 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9941
  %dev96 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %96, i32 0, i32 1, !dbg !9941
  %97 = load %struct.drm_device*, %struct.drm_device** %dev96, align 8, !dbg !9941
  %mode_config97 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %97, i32 0, i32 35, !dbg !9941
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config97, i32 0, i32 17, !dbg !9941
  %98 = load i32, i32* %num_total_plane, align 8, !dbg !9941
  %cmp98 = icmp slt i32 %95, %98, !dbg !9941
  br i1 %cmp98, label %for.body99, label %for.end145, !dbg !9939

for.body99:                                       ; preds = %for.cond95
  %99 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9943
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %99, i32 0, i32 3, !dbg !9943
  %100 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !9943
  %101 = load i32, i32* %i, align 4, !dbg !9943
  %idxprom100 = sext i32 %101 to i64, !dbg !9943
  %arrayidx101 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %100, i64 %idxprom100, !dbg !9943
  %ptr102 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx101, i32 0, i32 0, !dbg !9943
  %102 = load %struct.drm_plane*, %struct.drm_plane** %ptr102, align 8, !dbg !9943
  %tobool103 = icmp ne %struct.drm_plane* %102, null, !dbg !9943
  br i1 %tobool103, label %land.lhs.true104, label %if.then117, !dbg !9943

land.lhs.true104:                                 ; preds = %for.body99
  %103 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9943
  %planes105 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %103, i32 0, i32 3, !dbg !9943
  %104 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes105, align 8, !dbg !9943
  %105 = load i32, i32* %i, align 4, !dbg !9943
  %idxprom106 = sext i32 %105 to i64, !dbg !9943
  %arrayidx107 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %104, i64 %idxprom106, !dbg !9943
  %ptr108 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx107, i32 0, i32 0, !dbg !9943
  %106 = load %struct.drm_plane*, %struct.drm_plane** %ptr108, align 8, !dbg !9943
  store %struct.drm_plane* %106, %struct.drm_plane** %plane, align 8, !dbg !9943
  %107 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !9943
  %108 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9943
  %planes109 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %108, i32 0, i32 3, !dbg !9943
  %109 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes109, align 8, !dbg !9943
  %110 = load i32, i32* %i, align 4, !dbg !9943
  %idxprom110 = sext i32 %110 to i64, !dbg !9943
  %arrayidx111 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %109, i64 %idxprom110, !dbg !9943
  %old_state112 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx111, i32 0, i32 2, !dbg !9943
  %111 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state112, align 8, !dbg !9943
  store %struct.drm_plane_state* %111, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9943
  %112 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9943
  %planes113 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %112, i32 0, i32 3, !dbg !9943
  %113 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes113, align 8, !dbg !9943
  %114 = load i32, i32* %i, align 4, !dbg !9943
  %idxprom114 = sext i32 %114 to i64, !dbg !9943
  %arrayidx115 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %113, i64 %idxprom114, !dbg !9943
  %new_state116 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx115, i32 0, i32 3, !dbg !9943
  %115 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state116, align 8, !dbg !9943
  store %struct.drm_plane_state* %115, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9943
  br i1 true, label %if.else118, label %if.then117, !dbg !9941

if.then117:                                       ; preds = %land.lhs.true104, %for.body99
  br label %if.end142, !dbg !9945

if.else118:                                       ; preds = %land.lhs.true104
  %116 = load i8, i8* %nonblock.addr, align 1, !dbg !9947
  %tobool119 = trunc i8 %116 to i1, !dbg !9947
  br i1 %tobool119, label %land.lhs.true120, label %if.end128, !dbg !9950

land.lhs.true120:                                 ; preds = %if.else118
  %117 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9951
  %commit121 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %117, i32 0, i32 23, !dbg !9952
  %118 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit121, align 8, !dbg !9952
  %tobool122 = icmp ne %struct.drm_crtc_commit* %118, null, !dbg !9951
  br i1 %tobool122, label %land.lhs.true123, label %if.end128, !dbg !9953

land.lhs.true123:                                 ; preds = %land.lhs.true120
  %119 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9954
  %commit124 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %119, i32 0, i32 23, !dbg !9955
  %120 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit124, align 8, !dbg !9955
  %flip_done125 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %120, i32 0, i32 2, !dbg !9956
  %call126 = call zeroext i1 @try_wait_for_completion(%struct.completion* %flip_done125) #9, !dbg !9957
  br i1 %call126, label %if.end128, label %if.then127, !dbg !9958

if.then127:                                       ; preds = %land.lhs.true123
  store i32 -16, i32* %retval, align 4, !dbg !9959
  br label %return, !dbg !9959

if.end128:                                        ; preds = %land.lhs.true123, %land.lhs.true120, %if.else118
  %121 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !9960
  %122 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9961
  %crtc129 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %122, i32 0, i32 1, !dbg !9962
  %123 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc129, align 8, !dbg !9962
  %tobool130 = icmp ne %struct.drm_crtc* %123, null, !dbg !9961
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !9961

cond.true131:                                     ; preds = %if.end128
  br label %cond.end134, !dbg !9961

cond.false132:                                    ; preds = %if.end128
  %124 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !9963
  %crtc133 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %124, i32 0, i32 1, !dbg !9964
  %125 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc133, align 8, !dbg !9964
  br label %cond.end134, !dbg !9961

cond.end134:                                      ; preds = %cond.false132, %cond.true131
  %cond135 = phi %struct.drm_crtc* [ %123, %cond.true131 ], [ %125, %cond.false132 ], !dbg !9961
  %call136 = call %struct.drm_crtc_commit* @crtc_or_fake_commit(%struct.drm_atomic_state* %121, %struct.drm_crtc* %cond135) #9, !dbg !9965
  store %struct.drm_crtc_commit* %call136, %struct.drm_crtc_commit** %commit, align 8, !dbg !9966
  %126 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9967
  %tobool137 = icmp ne %struct.drm_crtc_commit* %126, null, !dbg !9967
  br i1 %tobool137, label %if.end139, label %if.then138, !dbg !9969

if.then138:                                       ; preds = %cond.end134
  store i32 -12, i32* %retval, align 4, !dbg !9970
  br label %return, !dbg !9970

if.end139:                                        ; preds = %cond.end134
  %127 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !9971
  %call140 = call %struct.drm_crtc_commit* @drm_crtc_commit_get(%struct.drm_crtc_commit* %127) #9, !dbg !9972
  %128 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !9973
  %commit141 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %128, i32 0, i32 23, !dbg !9974
  store %struct.drm_crtc_commit* %call140, %struct.drm_crtc_commit** %commit141, align 8, !dbg !9975
  br label %if.end142

if.end142:                                        ; preds = %if.end139, %if.then117
  br label %for.inc143, !dbg !9943

for.inc143:                                       ; preds = %if.end142
  %129 = load i32, i32* %i, align 4, !dbg !9941
  %inc144 = add i32 %129, 1, !dbg !9941
  store i32 %inc144, i32* %i, align 4, !dbg !9941
  br label %for.cond95, !dbg !9941, !llvm.loop !9976

for.end145:                                       ; preds = %for.cond95
  store i32 0, i32* %retval, align 4, !dbg !9978
  br label %return, !dbg !9978

return:                                           ; preds = %for.end145, %if.then138, %if.then127, %if.then87, %if.then80, %if.then34, %if.then17, %if.then12
  %130 = load i32, i32* %retval, align 4, !dbg !9979
  ret i32 %130, !dbg !9979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !9980 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9983, metadata !DIExpression()), !dbg !9984
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !9985, metadata !DIExpression()), !dbg !9986
  ret void, !dbg !9987
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !9988 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  br label %do.body, !dbg !9994

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9995

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !9997

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !9995

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9999
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !9999
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9999
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !9999
  br label %do.end3, !dbg !9999

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !9995

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10001
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10002
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !10003
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !10004
  ret void, !dbg !10005
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @commit_work(%struct.work_struct* %work) #0 !dbg !10006 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_atomic_state*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10007, metadata !DIExpression()), !dbg !10008
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !10009, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10011, metadata !DIExpression()), !dbg !10013
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10013
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !10013
  store i8* %1, i8** %__mptr, align 8, !dbg !10013
  br label %do.body, !dbg !10013

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10014

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10013
  %add.ptr = getelementptr i8, i8* %2, i64 -88, !dbg !10013
  %3 = bitcast i8* %add.ptr to %struct.drm_atomic_state*, !dbg !10013
  store %struct.drm_atomic_state* %3, %struct.drm_atomic_state** %tmp, align 8, !dbg !10014
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %tmp, align 8, !dbg !10013
  store %struct.drm_atomic_state* %4, %struct.drm_atomic_state** %state, align 8, !dbg !10010
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !10016
  call void @commit_tail(%struct.drm_atomic_state* %5) #9, !dbg !10017
  ret void, !dbg !10018
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_swap_state(%struct.drm_atomic_state* %state, i1 zeroext %stall) #0 !dbg !10019 {
entry:
  %lock.addr.i343 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i343, metadata !10020, metadata !DIExpression()), !dbg !10024
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10032, metadata !DIExpression()), !dbg !10034
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %stall.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %connector = alloca %struct.drm_connector*, align 8
  %old_conn_state = alloca %struct.drm_connector_state*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %obj = alloca %struct.drm_private_obj*, align 8
  %old_obj_state = alloca %struct.drm_private_state*, align 8
  %new_obj_state = alloca %struct.drm_private_state*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on166 = alloca i32, align 4
  %tmp191 = alloca i64, align 8
  %__ret_warn_on243 = alloca i32, align 4
  %tmp268 = alloca i64, align 8
  %__ret_warn_on301 = alloca i32, align 4
  %tmp326 = alloca i64, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !10036, metadata !DIExpression()), !dbg !10037
  %frombool = zext i1 %stall to i8
  store i8 %frombool, i8* %stall.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %stall.addr, metadata !10038, metadata !DIExpression()), !dbg !10039
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10040, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10042, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !10044, metadata !DIExpression()), !dbg !10045
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_conn_state, metadata !10046, metadata !DIExpression()), !dbg !10047
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !10048, metadata !DIExpression()), !dbg !10049
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !10050, metadata !DIExpression()), !dbg !10051
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !10052, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !10054, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !10056, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !10058, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !10062, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata %struct.drm_private_obj** %obj, metadata !10064, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.declare(metadata %struct.drm_private_state** %old_obj_state, metadata !10066, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.declare(metadata %struct.drm_private_state** %new_obj_state, metadata !10068, metadata !DIExpression()), !dbg !10069
  %0 = load i8, i8* %stall.addr, align 1, !dbg !10070
  %tobool = trunc i8 %0 to i1, !dbg !10070
  br i1 %tobool, label %if.then, label %if.end81, !dbg !10072

if.then:                                          ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !10073
  br label %for.cond, !dbg !10073

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load i32, i32* %i, align 4, !dbg !10076
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10076
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %2, i32 0, i32 1, !dbg !10076
  %3 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !10076
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %3, i32 0, i32 35, !dbg !10076
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !10076
  %4 = load i32, i32* %num_crtc, align 8, !dbg !10076
  %cmp = icmp slt i32 %1, %4, !dbg !10076
  br i1 %cmp, label %for.body, label %for.end, !dbg !10073

for.body:                                         ; preds = %for.cond
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10078
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %5, i32 0, i32 4, !dbg !10078
  %6 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !10078
  %7 = load i32, i32* %i, align 4, !dbg !10078
  %idxprom = sext i32 %7 to i64, !dbg !10078
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %6, i64 %idxprom, !dbg !10078
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !10078
  %8 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !10078
  %tobool1 = icmp ne %struct.drm_crtc* %8, null, !dbg !10078
  br i1 %tobool1, label %land.lhs.true, label %if.then9, !dbg !10078

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10078
  %crtcs2 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %9, i32 0, i32 4, !dbg !10078
  %10 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs2, align 8, !dbg !10078
  %11 = load i32, i32* %i, align 4, !dbg !10078
  %idxprom3 = sext i32 %11 to i64, !dbg !10078
  %arrayidx4 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %10, i64 %idxprom3, !dbg !10078
  %ptr5 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx4, i32 0, i32 0, !dbg !10078
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr5, align 8, !dbg !10078
  store %struct.drm_crtc* %12, %struct.drm_crtc** %crtc, align 8, !dbg !10078
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10078
  %crtcs6 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 4, !dbg !10078
  %14 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs6, align 8, !dbg !10078
  %15 = load i32, i32* %i, align 4, !dbg !10078
  %idxprom7 = sext i32 %15 to i64, !dbg !10078
  %arrayidx8 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %14, i64 %idxprom7, !dbg !10078
  %old_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx8, i32 0, i32 2, !dbg !10078
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state, align 8, !dbg !10078
  store %struct.drm_crtc_state* %16, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10078
  br i1 true, label %if.else, label %if.then9, !dbg !10076

if.then9:                                         ; preds = %land.lhs.true, %for.body
  br label %if.end16, !dbg !10080

if.else:                                          ; preds = %land.lhs.true
  %17 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10082
  %commit10 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %17, i32 0, i32 18, !dbg !10084
  %18 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit10, align 8, !dbg !10084
  store %struct.drm_crtc_commit* %18, %struct.drm_crtc_commit** %commit, align 8, !dbg !10085
  %19 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10086
  %tobool11 = icmp ne %struct.drm_crtc_commit* %19, null, !dbg !10086
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !10088

if.then12:                                        ; preds = %if.else
  br label %for.inc, !dbg !10089

if.end:                                           ; preds = %if.else
  %20 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10090
  %hw_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %20, i32 0, i32 3, !dbg !10091
  %call = call i32 @wait_for_completion_interruptible(%struct.completion* %hw_done) #9, !dbg !10092
  store i32 %call, i32* %ret, align 4, !dbg !10093
  %21 = load i32, i32* %ret, align 4, !dbg !10094
  %tobool13 = icmp ne i32 %21, 0, !dbg !10094
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !10096

if.then14:                                        ; preds = %if.end
  %22 = load i32, i32* %ret, align 4, !dbg !10097
  store i32 %22, i32* %retval, align 4, !dbg !10098
  br label %return, !dbg !10098

if.end15:                                         ; preds = %if.end
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then9
  br label %for.inc, !dbg !10078

for.inc:                                          ; preds = %if.end16, %if.then12
  %23 = load i32, i32* %i, align 4, !dbg !10076
  %inc = add i32 %23, 1, !dbg !10076
  store i32 %inc, i32* %i, align 4, !dbg !10076
  br label %for.cond, !dbg !10076, !llvm.loop !10099

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10101
  br label %for.cond17, !dbg !10101

for.cond17:                                       ; preds = %for.inc45, %for.end
  %24 = load i32, i32* %i, align 4, !dbg !10103
  %25 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10103
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %25, i32 0, i32 5, !dbg !10103
  %26 = load i32, i32* %num_connector, align 8, !dbg !10103
  %cmp18 = icmp slt i32 %24, %26, !dbg !10103
  br i1 %cmp18, label %for.body19, label %for.end47, !dbg !10101

for.body19:                                       ; preds = %for.cond17
  %27 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10105
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %27, i32 0, i32 6, !dbg !10105
  %28 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !10105
  %29 = load i32, i32* %i, align 4, !dbg !10105
  %idxprom20 = sext i32 %29 to i64, !dbg !10105
  %arrayidx21 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %28, i64 %idxprom20, !dbg !10105
  %ptr22 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx21, i32 0, i32 0, !dbg !10105
  %30 = load %struct.drm_connector*, %struct.drm_connector** %ptr22, align 8, !dbg !10105
  %tobool23 = icmp ne %struct.drm_connector* %30, null, !dbg !10105
  br i1 %tobool23, label %land.lhs.true24, label %if.then33, !dbg !10105

land.lhs.true24:                                  ; preds = %for.body19
  %31 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10105
  %connectors25 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %31, i32 0, i32 6, !dbg !10105
  %32 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors25, align 8, !dbg !10105
  %33 = load i32, i32* %i, align 4, !dbg !10105
  %idxprom26 = sext i32 %33 to i64, !dbg !10105
  %arrayidx27 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %32, i64 %idxprom26, !dbg !10105
  %ptr28 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx27, i32 0, i32 0, !dbg !10105
  %34 = load %struct.drm_connector*, %struct.drm_connector** %ptr28, align 8, !dbg !10105
  store %struct.drm_connector* %34, %struct.drm_connector** %connector, align 8, !dbg !10105
  %35 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !10105
  %36 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10105
  %connectors29 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %36, i32 0, i32 6, !dbg !10105
  %37 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors29, align 8, !dbg !10105
  %38 = load i32, i32* %i, align 4, !dbg !10105
  %idxprom30 = sext i32 %38 to i64, !dbg !10105
  %arrayidx31 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %37, i64 %idxprom30, !dbg !10105
  %old_state32 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx31, i32 0, i32 2, !dbg !10105
  %39 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state32, align 8, !dbg !10105
  store %struct.drm_connector_state* %39, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10105
  br i1 true, label %if.else34, label %if.then33, !dbg !10103

if.then33:                                        ; preds = %land.lhs.true24, %for.body19
  br label %if.end44, !dbg !10107

if.else34:                                        ; preds = %land.lhs.true24
  %40 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10109
  %commit35 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %40, i32 0, i32 5, !dbg !10111
  %41 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit35, align 8, !dbg !10111
  store %struct.drm_crtc_commit* %41, %struct.drm_crtc_commit** %commit, align 8, !dbg !10112
  %42 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10113
  %tobool36 = icmp ne %struct.drm_crtc_commit* %42, null, !dbg !10113
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !10115

if.then37:                                        ; preds = %if.else34
  br label %for.inc45, !dbg !10116

if.end38:                                         ; preds = %if.else34
  %43 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10117
  %hw_done39 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %43, i32 0, i32 3, !dbg !10118
  %call40 = call i32 @wait_for_completion_interruptible(%struct.completion* %hw_done39) #9, !dbg !10119
  store i32 %call40, i32* %ret, align 4, !dbg !10120
  %44 = load i32, i32* %ret, align 4, !dbg !10121
  %tobool41 = icmp ne i32 %44, 0, !dbg !10121
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !10123

if.then42:                                        ; preds = %if.end38
  %45 = load i32, i32* %ret, align 4, !dbg !10124
  store i32 %45, i32* %retval, align 4, !dbg !10125
  br label %return, !dbg !10125

if.end43:                                         ; preds = %if.end38
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.then33
  br label %for.inc45, !dbg !10105

for.inc45:                                        ; preds = %if.end44, %if.then37
  %46 = load i32, i32* %i, align 4, !dbg !10103
  %inc46 = add i32 %46, 1, !dbg !10103
  store i32 %inc46, i32* %i, align 4, !dbg !10103
  br label %for.cond17, !dbg !10103, !llvm.loop !10126

for.end47:                                        ; preds = %for.cond17
  store i32 0, i32* %i, align 4, !dbg !10128
  br label %for.cond48, !dbg !10128

for.cond48:                                       ; preds = %for.inc78, %for.end47
  %47 = load i32, i32* %i, align 4, !dbg !10130
  %48 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10130
  %dev49 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %48, i32 0, i32 1, !dbg !10130
  %49 = load %struct.drm_device*, %struct.drm_device** %dev49, align 8, !dbg !10130
  %mode_config50 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %49, i32 0, i32 35, !dbg !10130
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config50, i32 0, i32 17, !dbg !10130
  %50 = load i32, i32* %num_total_plane, align 8, !dbg !10130
  %cmp51 = icmp slt i32 %47, %50, !dbg !10130
  br i1 %cmp51, label %for.body52, label %for.end80, !dbg !10128

for.body52:                                       ; preds = %for.cond48
  %51 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10132
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %51, i32 0, i32 3, !dbg !10132
  %52 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !10132
  %53 = load i32, i32* %i, align 4, !dbg !10132
  %idxprom53 = sext i32 %53 to i64, !dbg !10132
  %arrayidx54 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %52, i64 %idxprom53, !dbg !10132
  %ptr55 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx54, i32 0, i32 0, !dbg !10132
  %54 = load %struct.drm_plane*, %struct.drm_plane** %ptr55, align 8, !dbg !10132
  %tobool56 = icmp ne %struct.drm_plane* %54, null, !dbg !10132
  br i1 %tobool56, label %land.lhs.true57, label %if.then66, !dbg !10132

land.lhs.true57:                                  ; preds = %for.body52
  %55 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10132
  %planes58 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %55, i32 0, i32 3, !dbg !10132
  %56 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes58, align 8, !dbg !10132
  %57 = load i32, i32* %i, align 4, !dbg !10132
  %idxprom59 = sext i32 %57 to i64, !dbg !10132
  %arrayidx60 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %56, i64 %idxprom59, !dbg !10132
  %ptr61 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx60, i32 0, i32 0, !dbg !10132
  %58 = load %struct.drm_plane*, %struct.drm_plane** %ptr61, align 8, !dbg !10132
  store %struct.drm_plane* %58, %struct.drm_plane** %plane, align 8, !dbg !10132
  %59 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10132
  %planes62 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %59, i32 0, i32 3, !dbg !10132
  %60 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes62, align 8, !dbg !10132
  %61 = load i32, i32* %i, align 4, !dbg !10132
  %idxprom63 = sext i32 %61 to i64, !dbg !10132
  %arrayidx64 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %60, i64 %idxprom63, !dbg !10132
  %old_state65 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx64, i32 0, i32 2, !dbg !10132
  %62 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state65, align 8, !dbg !10132
  store %struct.drm_plane_state* %62, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !10132
  br i1 true, label %if.else67, label %if.then66, !dbg !10130

if.then66:                                        ; preds = %land.lhs.true57, %for.body52
  br label %if.end77, !dbg !10134

if.else67:                                        ; preds = %land.lhs.true57
  %63 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !10136
  %commit68 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %63, i32 0, i32 23, !dbg !10138
  %64 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit68, align 8, !dbg !10138
  store %struct.drm_crtc_commit* %64, %struct.drm_crtc_commit** %commit, align 8, !dbg !10139
  %65 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10140
  %tobool69 = icmp ne %struct.drm_crtc_commit* %65, null, !dbg !10140
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !10142

if.then70:                                        ; preds = %if.else67
  br label %for.inc78, !dbg !10143

if.end71:                                         ; preds = %if.else67
  %66 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10144
  %hw_done72 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %66, i32 0, i32 3, !dbg !10145
  %call73 = call i32 @wait_for_completion_interruptible(%struct.completion* %hw_done72) #9, !dbg !10146
  store i32 %call73, i32* %ret, align 4, !dbg !10147
  %67 = load i32, i32* %ret, align 4, !dbg !10148
  %tobool74 = icmp ne i32 %67, 0, !dbg !10148
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !10150

if.then75:                                        ; preds = %if.end71
  %68 = load i32, i32* %ret, align 4, !dbg !10151
  store i32 %68, i32* %retval, align 4, !dbg !10152
  br label %return, !dbg !10152

if.end76:                                         ; preds = %if.end71
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then66
  br label %for.inc78, !dbg !10132

for.inc78:                                        ; preds = %if.end77, %if.then70
  %69 = load i32, i32* %i, align 4, !dbg !10130
  %inc79 = add i32 %69, 1, !dbg !10130
  store i32 %inc79, i32* %i, align 4, !dbg !10130
  br label %for.cond48, !dbg !10130, !llvm.loop !10153

for.end80:                                        ; preds = %for.cond48
  br label %if.end81, !dbg !10155

if.end81:                                         ; preds = %for.end80, %entry
  store i32 0, i32* %i, align 4, !dbg !10156
  br label %for.cond82, !dbg !10156

for.cond82:                                       ; preds = %for.inc136, %if.end81
  %70 = load i32, i32* %i, align 4, !dbg !10158
  %71 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10158
  %num_connector83 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %71, i32 0, i32 5, !dbg !10158
  %72 = load i32, i32* %num_connector83, align 8, !dbg !10158
  %cmp84 = icmp slt i32 %70, %72, !dbg !10158
  br i1 %cmp84, label %for.body85, label %for.end138, !dbg !10156

for.body85:                                       ; preds = %for.cond82
  %73 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10160
  %connectors86 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %73, i32 0, i32 6, !dbg !10160
  %74 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors86, align 8, !dbg !10160
  %75 = load i32, i32* %i, align 4, !dbg !10160
  %idxprom87 = sext i32 %75 to i64, !dbg !10160
  %arrayidx88 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %74, i64 %idxprom87, !dbg !10160
  %ptr89 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx88, i32 0, i32 0, !dbg !10160
  %76 = load %struct.drm_connector*, %struct.drm_connector** %ptr89, align 8, !dbg !10160
  %tobool90 = icmp ne %struct.drm_connector* %76, null, !dbg !10160
  br i1 %tobool90, label %land.lhs.true91, label %if.then103, !dbg !10160

land.lhs.true91:                                  ; preds = %for.body85
  %77 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10160
  %connectors92 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %77, i32 0, i32 6, !dbg !10160
  %78 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors92, align 8, !dbg !10160
  %79 = load i32, i32* %i, align 4, !dbg !10160
  %idxprom93 = sext i32 %79 to i64, !dbg !10160
  %arrayidx94 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %78, i64 %idxprom93, !dbg !10160
  %ptr95 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx94, i32 0, i32 0, !dbg !10160
  %80 = load %struct.drm_connector*, %struct.drm_connector** %ptr95, align 8, !dbg !10160
  store %struct.drm_connector* %80, %struct.drm_connector** %connector, align 8, !dbg !10160
  %81 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !10160
  %82 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10160
  %connectors96 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %82, i32 0, i32 6, !dbg !10160
  %83 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors96, align 8, !dbg !10160
  %84 = load i32, i32* %i, align 4, !dbg !10160
  %idxprom97 = sext i32 %84 to i64, !dbg !10160
  %arrayidx98 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %83, i64 %idxprom97, !dbg !10160
  %old_state99 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx98, i32 0, i32 2, !dbg !10160
  %85 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state99, align 8, !dbg !10160
  store %struct.drm_connector_state* %85, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10160
  %86 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10160
  %connectors100 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %86, i32 0, i32 6, !dbg !10160
  %87 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors100, align 8, !dbg !10160
  %88 = load i32, i32* %i, align 4, !dbg !10160
  %idxprom101 = sext i32 %88 to i64, !dbg !10160
  %arrayidx102 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %87, i64 %idxprom101, !dbg !10160
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx102, i32 0, i32 3, !dbg !10160
  %89 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !10160
  store %struct.drm_connector_state* %89, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !10160
  br i1 true, label %if.else104, label %if.then103, !dbg !10158

if.then103:                                       ; preds = %land.lhs.true91, %for.body85
  br label %if.end135, !dbg !10162

if.else104:                                       ; preds = %land.lhs.true91
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10164, metadata !DIExpression()), !dbg !10167
  %90 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !10167
  %state105 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %90, i32 0, i32 46, !dbg !10167
  %91 = load %struct.drm_connector_state*, %struct.drm_connector_state** %state105, align 8, !dbg !10167
  %92 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10167
  %cmp106 = icmp ne %struct.drm_connector_state* %91, %92, !dbg !10167
  %lnot = xor i1 %cmp106, true, !dbg !10167
  %lnot107 = xor i1 %lnot, true, !dbg !10167
  %lnot.ext = zext i1 %lnot107 to i32, !dbg !10167
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10167
  %93 = load i32, i32* %__ret_warn_on, align 4, !dbg !10168
  %tobool108 = icmp ne i32 %93, 0, !dbg !10168
  %lnot109 = xor i1 %tobool108, true, !dbg !10168
  %lnot111 = xor i1 %lnot109, true, !dbg !10168
  %lnot.ext112 = zext i1 %lnot111 to i32, !dbg !10168
  %conv = sext i32 %lnot.ext112 to i64, !dbg !10168
  %tobool113 = icmp ne i64 %conv, 0, !dbg !10168
  br i1 %tobool113, label %if.then114, label %if.end121, !dbg !10167

if.then114:                                       ; preds = %if.else104
  br label %do.body, !dbg !10168

do.body:                                          ; preds = %if.then114
  br label %do.body115, !dbg !10170

do.body115:                                       ; preds = %do.body
  br label %do.end, !dbg !10172

do.end:                                           ; preds = %do.body115
  br label %do.body116, !dbg !10170

do.body116:                                       ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2815, i32 2305, i64 12) #8, !dbg !10174, !srcloc !10176
  br label %do.end117, !dbg !10174

do.end117:                                        ; preds = %do.body116
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 304) #8, !dbg !10177, !srcloc !10179
  br label %do.body118, !dbg !10170

do.body118:                                       ; preds = %do.end117
  br label %do.end119, !dbg !10180

do.end119:                                        ; preds = %do.body118
  br label %do.end120, !dbg !10170

do.end120:                                        ; preds = %do.end119
  br label %if.end121, !dbg !10170

if.end121:                                        ; preds = %do.end120, %if.else104
  %94 = load i32, i32* %__ret_warn_on, align 4, !dbg !10167
  %tobool122 = icmp ne i32 %94, 0, !dbg !10167
  %lnot123 = xor i1 %tobool122, true, !dbg !10167
  %lnot125 = xor i1 %lnot123, true, !dbg !10167
  %lnot.ext126 = zext i1 %lnot125 to i32, !dbg !10167
  %conv127 = sext i32 %lnot.ext126 to i64, !dbg !10167
  store i64 %conv127, i64* %tmp, align 8, !dbg !10168
  %95 = load i64, i64* %tmp, align 8, !dbg !10167
  %96 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10182
  %97 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10183
  %state128 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %97, i32 0, i32 4, !dbg !10184
  store %struct.drm_atomic_state* %96, %struct.drm_atomic_state** %state128, align 8, !dbg !10185
  %98 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !10186
  %state129 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %98, i32 0, i32 4, !dbg !10187
  store %struct.drm_atomic_state* null, %struct.drm_atomic_state** %state129, align 8, !dbg !10188
  %99 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10189
  %100 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10190
  %connectors130 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %100, i32 0, i32 6, !dbg !10191
  %101 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors130, align 8, !dbg !10191
  %102 = load i32, i32* %i, align 4, !dbg !10192
  %idxprom131 = sext i32 %102 to i64, !dbg !10190
  %arrayidx132 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %101, i64 %idxprom131, !dbg !10190
  %state133 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx132, i32 0, i32 1, !dbg !10193
  store %struct.drm_connector_state* %99, %struct.drm_connector_state** %state133, align 8, !dbg !10194
  %103 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !10195
  %104 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !10196
  %state134 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %104, i32 0, i32 46, !dbg !10197
  store %struct.drm_connector_state* %103, %struct.drm_connector_state** %state134, align 8, !dbg !10198
  br label %if.end135

if.end135:                                        ; preds = %if.end121, %if.then103
  br label %for.inc136, !dbg !10160

for.inc136:                                       ; preds = %if.end135
  %105 = load i32, i32* %i, align 4, !dbg !10158
  %inc137 = add i32 %105, 1, !dbg !10158
  store i32 %inc137, i32* %i, align 4, !dbg !10158
  br label %for.cond82, !dbg !10158, !llvm.loop !10199

for.end138:                                       ; preds = %for.cond82
  store i32 0, i32* %i, align 4, !dbg !10201
  br label %for.cond139, !dbg !10201

for.cond139:                                      ; preds = %for.inc213, %for.end138
  %106 = load i32, i32* %i, align 4, !dbg !10202
  %107 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10202
  %dev140 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %107, i32 0, i32 1, !dbg !10202
  %108 = load %struct.drm_device*, %struct.drm_device** %dev140, align 8, !dbg !10202
  %mode_config141 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %108, i32 0, i32 35, !dbg !10202
  %num_crtc142 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config141, i32 0, i32 19, !dbg !10202
  %109 = load i32, i32* %num_crtc142, align 8, !dbg !10202
  %cmp143 = icmp slt i32 %106, %109, !dbg !10202
  br i1 %cmp143, label %for.body145, label %for.end215, !dbg !10201

for.body145:                                      ; preds = %for.cond139
  %110 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10203
  %crtcs146 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %110, i32 0, i32 4, !dbg !10203
  %111 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs146, align 8, !dbg !10203
  %112 = load i32, i32* %i, align 4, !dbg !10203
  %idxprom147 = sext i32 %112 to i64, !dbg !10203
  %arrayidx148 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %111, i64 %idxprom147, !dbg !10203
  %ptr149 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx148, i32 0, i32 0, !dbg !10203
  %113 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr149, align 8, !dbg !10203
  %tobool150 = icmp ne %struct.drm_crtc* %113, null, !dbg !10203
  br i1 %tobool150, label %land.lhs.true151, label %if.then164, !dbg !10203

land.lhs.true151:                                 ; preds = %for.body145
  %114 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10203
  %crtcs152 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %114, i32 0, i32 4, !dbg !10203
  %115 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs152, align 8, !dbg !10203
  %116 = load i32, i32* %i, align 4, !dbg !10203
  %idxprom153 = sext i32 %116 to i64, !dbg !10203
  %arrayidx154 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %115, i64 %idxprom153, !dbg !10203
  %ptr155 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx154, i32 0, i32 0, !dbg !10203
  %117 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr155, align 8, !dbg !10203
  store %struct.drm_crtc* %117, %struct.drm_crtc** %crtc, align 8, !dbg !10203
  %118 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10203
  %119 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10203
  %crtcs156 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %119, i32 0, i32 4, !dbg !10203
  %120 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs156, align 8, !dbg !10203
  %121 = load i32, i32* %i, align 4, !dbg !10203
  %idxprom157 = sext i32 %121 to i64, !dbg !10203
  %arrayidx158 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %120, i64 %idxprom157, !dbg !10203
  %old_state159 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx158, i32 0, i32 2, !dbg !10203
  %122 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state159, align 8, !dbg !10203
  store %struct.drm_crtc_state* %122, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10203
  %123 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10203
  %124 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10203
  %crtcs160 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %124, i32 0, i32 4, !dbg !10203
  %125 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs160, align 8, !dbg !10203
  %126 = load i32, i32* %i, align 4, !dbg !10203
  %idxprom161 = sext i32 %126 to i64, !dbg !10203
  %arrayidx162 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %125, i64 %idxprom161, !dbg !10203
  %new_state163 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx162, i32 0, i32 3, !dbg !10203
  %127 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state163, align 8, !dbg !10203
  store %struct.drm_crtc_state* %127, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10203
  br i1 true, label %if.else165, label %if.then164, !dbg !10202

if.then164:                                       ; preds = %land.lhs.true151, %for.body145
  br label %if.end212, !dbg !10204

if.else165:                                       ; preds = %land.lhs.true151
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on166, metadata !10206, metadata !DIExpression()), !dbg !10208
  %128 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10208
  %state167 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %128, i32 0, i32 21, !dbg !10208
  %129 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state167, align 8, !dbg !10208
  %130 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10208
  %cmp168 = icmp ne %struct.drm_crtc_state* %129, %130, !dbg !10208
  %lnot170 = xor i1 %cmp168, true, !dbg !10208
  %lnot172 = xor i1 %lnot170, true, !dbg !10208
  %lnot.ext173 = zext i1 %lnot172 to i32, !dbg !10208
  store i32 %lnot.ext173, i32* %__ret_warn_on166, align 4, !dbg !10208
  %131 = load i32, i32* %__ret_warn_on166, align 4, !dbg !10209
  %tobool174 = icmp ne i32 %131, 0, !dbg !10209
  %lnot175 = xor i1 %tobool174, true, !dbg !10209
  %lnot177 = xor i1 %lnot175, true, !dbg !10209
  %lnot.ext178 = zext i1 %lnot177 to i32, !dbg !10209
  %conv179 = sext i32 %lnot.ext178 to i64, !dbg !10209
  %tobool180 = icmp ne i64 %conv179, 0, !dbg !10209
  br i1 %tobool180, label %if.then181, label %if.end190, !dbg !10208

if.then181:                                       ; preds = %if.else165
  br label %do.body182, !dbg !10209

do.body182:                                       ; preds = %if.then181
  br label %do.body183, !dbg !10211

do.body183:                                       ; preds = %do.body182
  br label %do.end184, !dbg !10213

do.end184:                                        ; preds = %do.body183
  br label %do.body185, !dbg !10211

do.body185:                                       ; preds = %do.end184
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2825, i32 2305, i64 12) #8, !dbg !10215, !srcloc !10217
  br label %do.end186, !dbg !10215

do.end186:                                        ; preds = %do.body185
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 305) #8, !dbg !10218, !srcloc !10220
  br label %do.body187, !dbg !10211

do.body187:                                       ; preds = %do.end186
  br label %do.end188, !dbg !10221

do.end188:                                        ; preds = %do.body187
  br label %do.end189, !dbg !10211

do.end189:                                        ; preds = %do.end188
  br label %if.end190, !dbg !10211

if.end190:                                        ; preds = %do.end189, %if.else165
  %132 = load i32, i32* %__ret_warn_on166, align 4, !dbg !10208
  %tobool192 = icmp ne i32 %132, 0, !dbg !10208
  %lnot193 = xor i1 %tobool192, true, !dbg !10208
  %lnot195 = xor i1 %lnot193, true, !dbg !10208
  %lnot.ext196 = zext i1 %lnot195 to i32, !dbg !10208
  %conv197 = sext i32 %lnot.ext196 to i64, !dbg !10208
  store i64 %conv197, i64* %tmp191, align 8, !dbg !10209
  %133 = load i64, i64* %tmp191, align 8, !dbg !10208
  %134 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10223
  %135 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10224
  %state198 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %135, i32 0, i32 19, !dbg !10225
  store %struct.drm_atomic_state* %134, %struct.drm_atomic_state** %state198, align 8, !dbg !10226
  %136 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10227
  %state199 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %136, i32 0, i32 19, !dbg !10228
  store %struct.drm_atomic_state* null, %struct.drm_atomic_state** %state199, align 8, !dbg !10229
  %137 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10230
  %138 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10231
  %crtcs200 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %138, i32 0, i32 4, !dbg !10232
  %139 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs200, align 8, !dbg !10232
  %140 = load i32, i32* %i, align 4, !dbg !10233
  %idxprom201 = sext i32 %140 to i64, !dbg !10231
  %arrayidx202 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %139, i64 %idxprom201, !dbg !10231
  %state203 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx202, i32 0, i32 1, !dbg !10234
  store %struct.drm_crtc_state* %137, %struct.drm_crtc_state** %state203, align 8, !dbg !10235
  %141 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10236
  %142 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10237
  %state204 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %142, i32 0, i32 21, !dbg !10238
  store %struct.drm_crtc_state* %141, %struct.drm_crtc_state** %state204, align 8, !dbg !10239
  %143 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10240
  %commit205 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %143, i32 0, i32 18, !dbg !10241
  %144 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit205, align 8, !dbg !10241
  %tobool206 = icmp ne %struct.drm_crtc_commit* %144, null, !dbg !10240
  br i1 %tobool206, label %if.then207, label %if.end211, !dbg !10242

if.then207:                                       ; preds = %if.end190
  %145 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10243
  %commit_lock = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %145, i32 0, i32 23, !dbg !10244
  store %struct.spinlock* %commit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10245, !srcloc !10247
  %146 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10248
  %147 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %146, i32 0, i32 0, !dbg !10248
  %rlock.i = bitcast %union.anon.1* %147 to %struct.raw_spinlock*, !dbg !10248
  %148 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10250
  %commit208 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %148, i32 0, i32 18, !dbg !10251
  %149 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit208, align 8, !dbg !10251
  %commit_entry = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %149, i32 0, i32 5, !dbg !10252
  %150 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10253
  %commit_list = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %150, i32 0, i32 22, !dbg !10254
  call void @list_add(%struct.list_head* %commit_entry, %struct.list_head* %commit_list) #9, !dbg !10255
  %151 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10256
  %commit_lock209 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %151, i32 0, i32 23, !dbg !10257
  store %struct.spinlock* %commit_lock209, %struct.spinlock** %lock.addr.i343, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10258, !srcloc !10260
  %152 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i343, align 8, !dbg !10261
  %153 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %152, i32 0, i32 0, !dbg !10261
  %rlock.i344 = bitcast %union.anon.1* %153 to %struct.raw_spinlock*, !dbg !10261
  %154 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10263
  %commit210 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %154, i32 0, i32 18, !dbg !10264
  %155 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit210, align 8, !dbg !10264
  %event = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %155, i32 0, i32 6, !dbg !10265
  store %struct.drm_pending_vblank_event* null, %struct.drm_pending_vblank_event** %event, align 8, !dbg !10266
  br label %if.end211, !dbg !10267

if.end211:                                        ; preds = %if.then207, %if.end190
  br label %if.end212

if.end212:                                        ; preds = %if.end211, %if.then164
  br label %for.inc213, !dbg !10203

for.inc213:                                       ; preds = %if.end212
  %156 = load i32, i32* %i, align 4, !dbg !10202
  %inc214 = add i32 %156, 1, !dbg !10202
  store i32 %inc214, i32* %i, align 4, !dbg !10202
  br label %for.cond139, !dbg !10202, !llvm.loop !10268

for.end215:                                       ; preds = %for.cond139
  store i32 0, i32* %i, align 4, !dbg !10270
  br label %for.cond216, !dbg !10270

for.cond216:                                      ; preds = %for.inc283, %for.end215
  %157 = load i32, i32* %i, align 4, !dbg !10272
  %158 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10272
  %dev217 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %158, i32 0, i32 1, !dbg !10272
  %159 = load %struct.drm_device*, %struct.drm_device** %dev217, align 8, !dbg !10272
  %mode_config218 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %159, i32 0, i32 35, !dbg !10272
  %num_total_plane219 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config218, i32 0, i32 17, !dbg !10272
  %160 = load i32, i32* %num_total_plane219, align 8, !dbg !10272
  %cmp220 = icmp slt i32 %157, %160, !dbg !10272
  br i1 %cmp220, label %for.body222, label %for.end285, !dbg !10270

for.body222:                                      ; preds = %for.cond216
  %161 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10274
  %planes223 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %161, i32 0, i32 3, !dbg !10274
  %162 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes223, align 8, !dbg !10274
  %163 = load i32, i32* %i, align 4, !dbg !10274
  %idxprom224 = sext i32 %163 to i64, !dbg !10274
  %arrayidx225 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %162, i64 %idxprom224, !dbg !10274
  %ptr226 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx225, i32 0, i32 0, !dbg !10274
  %164 = load %struct.drm_plane*, %struct.drm_plane** %ptr226, align 8, !dbg !10274
  %tobool227 = icmp ne %struct.drm_plane* %164, null, !dbg !10274
  br i1 %tobool227, label %land.lhs.true228, label %if.then241, !dbg !10274

land.lhs.true228:                                 ; preds = %for.body222
  %165 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10274
  %planes229 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %165, i32 0, i32 3, !dbg !10274
  %166 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes229, align 8, !dbg !10274
  %167 = load i32, i32* %i, align 4, !dbg !10274
  %idxprom230 = sext i32 %167 to i64, !dbg !10274
  %arrayidx231 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %166, i64 %idxprom230, !dbg !10274
  %ptr232 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx231, i32 0, i32 0, !dbg !10274
  %168 = load %struct.drm_plane*, %struct.drm_plane** %ptr232, align 8, !dbg !10274
  store %struct.drm_plane* %168, %struct.drm_plane** %plane, align 8, !dbg !10274
  %169 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !10274
  %170 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10274
  %planes233 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %170, i32 0, i32 3, !dbg !10274
  %171 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes233, align 8, !dbg !10274
  %172 = load i32, i32* %i, align 4, !dbg !10274
  %idxprom234 = sext i32 %172 to i64, !dbg !10274
  %arrayidx235 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %171, i64 %idxprom234, !dbg !10274
  %old_state236 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx235, i32 0, i32 2, !dbg !10274
  %173 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state236, align 8, !dbg !10274
  store %struct.drm_plane_state* %173, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !10274
  %174 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10274
  %planes237 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %174, i32 0, i32 3, !dbg !10274
  %175 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes237, align 8, !dbg !10274
  %176 = load i32, i32* %i, align 4, !dbg !10274
  %idxprom238 = sext i32 %176 to i64, !dbg !10274
  %arrayidx239 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %175, i64 %idxprom238, !dbg !10274
  %new_state240 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx239, i32 0, i32 3, !dbg !10274
  %177 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state240, align 8, !dbg !10274
  store %struct.drm_plane_state* %177, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !10274
  br i1 true, label %if.else242, label %if.then241, !dbg !10272

if.then241:                                       ; preds = %land.lhs.true228, %for.body222
  br label %if.end282, !dbg !10276

if.else242:                                       ; preds = %land.lhs.true228
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on243, metadata !10278, metadata !DIExpression()), !dbg !10281
  %178 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !10281
  %state244 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %178, i32 0, i32 19, !dbg !10281
  %179 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state244, align 8, !dbg !10281
  %180 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !10281
  %cmp245 = icmp ne %struct.drm_plane_state* %179, %180, !dbg !10281
  %lnot247 = xor i1 %cmp245, true, !dbg !10281
  %lnot249 = xor i1 %lnot247, true, !dbg !10281
  %lnot.ext250 = zext i1 %lnot249 to i32, !dbg !10281
  store i32 %lnot.ext250, i32* %__ret_warn_on243, align 4, !dbg !10281
  %181 = load i32, i32* %__ret_warn_on243, align 4, !dbg !10282
  %tobool251 = icmp ne i32 %181, 0, !dbg !10282
  %lnot252 = xor i1 %tobool251, true, !dbg !10282
  %lnot254 = xor i1 %lnot252, true, !dbg !10282
  %lnot.ext255 = zext i1 %lnot254 to i32, !dbg !10282
  %conv256 = sext i32 %lnot.ext255 to i64, !dbg !10282
  %tobool257 = icmp ne i64 %conv256, 0, !dbg !10282
  br i1 %tobool257, label %if.then258, label %if.end267, !dbg !10281

if.then258:                                       ; preds = %if.else242
  br label %do.body259, !dbg !10282

do.body259:                                       ; preds = %if.then258
  br label %do.body260, !dbg !10284

do.body260:                                       ; preds = %do.body259
  br label %do.end261, !dbg !10286

do.end261:                                        ; preds = %do.body260
  br label %do.body262, !dbg !10284

do.body262:                                       ; preds = %do.end261
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2844, i32 2305, i64 12) #8, !dbg !10288, !srcloc !10290
  br label %do.end263, !dbg !10288

do.end263:                                        ; preds = %do.body262
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 306) #8, !dbg !10291, !srcloc !10293
  br label %do.body264, !dbg !10284

do.body264:                                       ; preds = %do.end263
  br label %do.end265, !dbg !10294

do.end265:                                        ; preds = %do.body264
  br label %do.end266, !dbg !10284

do.end266:                                        ; preds = %do.end265
  br label %if.end267, !dbg !10284

if.end267:                                        ; preds = %do.end266, %if.else242
  %182 = load i32, i32* %__ret_warn_on243, align 4, !dbg !10281
  %tobool269 = icmp ne i32 %182, 0, !dbg !10281
  %lnot270 = xor i1 %tobool269, true, !dbg !10281
  %lnot272 = xor i1 %lnot270, true, !dbg !10281
  %lnot.ext273 = zext i1 %lnot272 to i32, !dbg !10281
  %conv274 = sext i32 %lnot.ext273 to i64, !dbg !10281
  store i64 %conv274, i64* %tmp268, align 8, !dbg !10282
  %183 = load i64, i64* %tmp268, align 8, !dbg !10281
  %184 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10296
  %185 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !10297
  %state275 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %185, i32 0, i32 24, !dbg !10298
  store %struct.drm_atomic_state* %184, %struct.drm_atomic_state** %state275, align 8, !dbg !10299
  %186 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !10300
  %state276 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %186, i32 0, i32 24, !dbg !10301
  store %struct.drm_atomic_state* null, %struct.drm_atomic_state** %state276, align 8, !dbg !10302
  %187 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !10303
  %188 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10304
  %planes277 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %188, i32 0, i32 3, !dbg !10305
  %189 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes277, align 8, !dbg !10305
  %190 = load i32, i32* %i, align 4, !dbg !10306
  %idxprom278 = sext i32 %190 to i64, !dbg !10304
  %arrayidx279 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %189, i64 %idxprom278, !dbg !10304
  %state280 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx279, i32 0, i32 1, !dbg !10307
  store %struct.drm_plane_state* %187, %struct.drm_plane_state** %state280, align 8, !dbg !10308
  %191 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !10309
  %192 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !10310
  %state281 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %192, i32 0, i32 19, !dbg !10311
  store %struct.drm_plane_state* %191, %struct.drm_plane_state** %state281, align 8, !dbg !10312
  br label %if.end282

if.end282:                                        ; preds = %if.end267, %if.then241
  br label %for.inc283, !dbg !10274

for.inc283:                                       ; preds = %if.end282
  %193 = load i32, i32* %i, align 4, !dbg !10272
  %inc284 = add i32 %193, 1, !dbg !10272
  store i32 %inc284, i32* %i, align 4, !dbg !10272
  br label %for.cond216, !dbg !10272, !llvm.loop !10313

for.end285:                                       ; preds = %for.cond216
  store i32 0, i32* %i, align 4, !dbg !10315
  br label %for.cond286, !dbg !10315

for.cond286:                                      ; preds = %for.inc340, %for.end285
  %194 = load i32, i32* %i, align 4, !dbg !10317
  %195 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10317
  %num_private_objs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %195, i32 0, i32 7, !dbg !10317
  %196 = load i32, i32* %num_private_objs, align 8, !dbg !10317
  %cmp287 = icmp slt i32 %194, %196, !dbg !10317
  br i1 %cmp287, label %land.rhs, label %land.end, !dbg !10317

land.rhs:                                         ; preds = %for.cond286
  %197 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10317
  %private_objs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %197, i32 0, i32 8, !dbg !10317
  %198 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %private_objs, align 8, !dbg !10317
  %199 = load i32, i32* %i, align 4, !dbg !10317
  %idxprom289 = sext i32 %199 to i64, !dbg !10317
  %arrayidx290 = getelementptr %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %198, i64 %idxprom289, !dbg !10317
  %ptr291 = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %arrayidx290, i32 0, i32 0, !dbg !10317
  %200 = load %struct.drm_private_obj*, %struct.drm_private_obj** %ptr291, align 8, !dbg !10317
  store %struct.drm_private_obj* %200, %struct.drm_private_obj** %obj, align 8, !dbg !10317
  %201 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10317
  %private_objs292 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %201, i32 0, i32 8, !dbg !10317
  %202 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %private_objs292, align 8, !dbg !10317
  %203 = load i32, i32* %i, align 4, !dbg !10317
  %idxprom293 = sext i32 %203 to i64, !dbg !10317
  %arrayidx294 = getelementptr %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %202, i64 %idxprom293, !dbg !10317
  %old_state295 = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %arrayidx294, i32 0, i32 2, !dbg !10317
  %204 = load %struct.drm_private_state*, %struct.drm_private_state** %old_state295, align 8, !dbg !10317
  store %struct.drm_private_state* %204, %struct.drm_private_state** %old_obj_state, align 8, !dbg !10317
  %205 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10317
  %private_objs296 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %205, i32 0, i32 8, !dbg !10317
  %206 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %private_objs296, align 8, !dbg !10317
  %207 = load i32, i32* %i, align 4, !dbg !10317
  %idxprom297 = sext i32 %207 to i64, !dbg !10317
  %arrayidx298 = getelementptr %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %206, i64 %idxprom297, !dbg !10317
  %new_state299 = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %arrayidx298, i32 0, i32 3, !dbg !10317
  %208 = load %struct.drm_private_state*, %struct.drm_private_state** %new_state299, align 8, !dbg !10317
  store %struct.drm_private_state* %208, %struct.drm_private_state** %new_obj_state, align 8, !dbg !10317
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond286
  %209 = phi i1 [ false, %for.cond286 ], [ true, %land.rhs ], !dbg !10319
  br i1 %209, label %for.body300, label %for.end342, !dbg !10315

for.body300:                                      ; preds = %land.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on301, metadata !10320, metadata !DIExpression()), !dbg !10323
  %210 = load %struct.drm_private_obj*, %struct.drm_private_obj** %obj, align 8, !dbg !10323
  %state302 = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %210, i32 0, i32 2, !dbg !10323
  %211 = load %struct.drm_private_state*, %struct.drm_private_state** %state302, align 8, !dbg !10323
  %212 = load %struct.drm_private_state*, %struct.drm_private_state** %old_obj_state, align 8, !dbg !10323
  %cmp303 = icmp ne %struct.drm_private_state* %211, %212, !dbg !10323
  %lnot305 = xor i1 %cmp303, true, !dbg !10323
  %lnot307 = xor i1 %lnot305, true, !dbg !10323
  %lnot.ext308 = zext i1 %lnot307 to i32, !dbg !10323
  store i32 %lnot.ext308, i32* %__ret_warn_on301, align 4, !dbg !10323
  %213 = load i32, i32* %__ret_warn_on301, align 4, !dbg !10324
  %tobool309 = icmp ne i32 %213, 0, !dbg !10324
  %lnot310 = xor i1 %tobool309, true, !dbg !10324
  %lnot312 = xor i1 %lnot310, true, !dbg !10324
  %lnot.ext313 = zext i1 %lnot312 to i32, !dbg !10324
  %conv314 = sext i32 %lnot.ext313 to i64, !dbg !10324
  %tobool315 = icmp ne i64 %conv314, 0, !dbg !10324
  br i1 %tobool315, label %if.then316, label %if.end325, !dbg !10323

if.then316:                                       ; preds = %for.body300
  br label %do.body317, !dbg !10324

do.body317:                                       ; preds = %if.then316
  br label %do.body318, !dbg !10326

do.body318:                                       ; preds = %do.body317
  br label %do.end319, !dbg !10328

do.end319:                                        ; preds = %do.body318
  br label %do.body320, !dbg !10326

do.body320:                                       ; preds = %do.end319
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2854, i32 2305, i64 12) #8, !dbg !10330, !srcloc !10332
  br label %do.end321, !dbg !10330

do.end321:                                        ; preds = %do.body320
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 307) #8, !dbg !10333, !srcloc !10335
  br label %do.body322, !dbg !10326

do.body322:                                       ; preds = %do.end321
  br label %do.end323, !dbg !10336

do.end323:                                        ; preds = %do.body322
  br label %do.end324, !dbg !10326

do.end324:                                        ; preds = %do.end323
  br label %if.end325, !dbg !10326

if.end325:                                        ; preds = %do.end324, %for.body300
  %214 = load i32, i32* %__ret_warn_on301, align 4, !dbg !10323
  %tobool327 = icmp ne i32 %214, 0, !dbg !10323
  %lnot328 = xor i1 %tobool327, true, !dbg !10323
  %lnot330 = xor i1 %lnot328, true, !dbg !10323
  %lnot.ext331 = zext i1 %lnot330 to i32, !dbg !10323
  %conv332 = sext i32 %lnot.ext331 to i64, !dbg !10323
  store i64 %conv332, i64* %tmp326, align 8, !dbg !10324
  %215 = load i64, i64* %tmp326, align 8, !dbg !10323
  %216 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10338
  %217 = load %struct.drm_private_state*, %struct.drm_private_state** %old_obj_state, align 8, !dbg !10339
  %state333 = getelementptr inbounds %struct.drm_private_state, %struct.drm_private_state* %217, i32 0, i32 0, !dbg !10340
  store %struct.drm_atomic_state* %216, %struct.drm_atomic_state** %state333, align 8, !dbg !10341
  %218 = load %struct.drm_private_state*, %struct.drm_private_state** %new_obj_state, align 8, !dbg !10342
  %state334 = getelementptr inbounds %struct.drm_private_state, %struct.drm_private_state* %218, i32 0, i32 0, !dbg !10343
  store %struct.drm_atomic_state* null, %struct.drm_atomic_state** %state334, align 8, !dbg !10344
  %219 = load %struct.drm_private_state*, %struct.drm_private_state** %old_obj_state, align 8, !dbg !10345
  %220 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10346
  %private_objs335 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %220, i32 0, i32 8, !dbg !10347
  %221 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %private_objs335, align 8, !dbg !10347
  %222 = load i32, i32* %i, align 4, !dbg !10348
  %idxprom336 = sext i32 %222 to i64, !dbg !10346
  %arrayidx337 = getelementptr %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %221, i64 %idxprom336, !dbg !10346
  %state338 = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %arrayidx337, i32 0, i32 1, !dbg !10349
  store %struct.drm_private_state* %219, %struct.drm_private_state** %state338, align 8, !dbg !10350
  %223 = load %struct.drm_private_state*, %struct.drm_private_state** %new_obj_state, align 8, !dbg !10351
  %224 = load %struct.drm_private_obj*, %struct.drm_private_obj** %obj, align 8, !dbg !10352
  %state339 = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %224, i32 0, i32 2, !dbg !10353
  store %struct.drm_private_state* %223, %struct.drm_private_state** %state339, align 8, !dbg !10354
  br label %for.inc340, !dbg !10355

for.inc340:                                       ; preds = %if.end325
  %225 = load i32, i32* %i, align 4, !dbg !10317
  %inc341 = add i32 %225, 1, !dbg !10317
  store i32 %inc341, i32* %i, align 4, !dbg !10317
  br label %for.cond286, !dbg !10317, !llvm.loop !10356

for.end342:                                       ; preds = %land.end
  store i32 0, i32* %retval, align 4, !dbg !10358
  br label %return, !dbg !10358

return:                                           ; preds = %for.end342, %if.then75, %if.then42, %if.then14
  %226 = load i32, i32* %retval, align 4, !dbg !10359
  ret i32 %226, !dbg !10359
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_atomic_state* @drm_atomic_state_get(%struct.drm_atomic_state* %state) #0 !dbg !10360 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !10363, metadata !DIExpression()), !dbg !10364
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10365
  %ref = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 0, !dbg !10366
  call void @kref_get(%struct.kref* %ref) #9, !dbg !10367
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10368
  ret %struct.drm_atomic_state* %1, !dbg !10369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !10370 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !10373, metadata !DIExpression()), !dbg !10374
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !10375, metadata !DIExpression()), !dbg !10376
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !10377
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !10378
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #9, !dbg !10379
  ret i1 %call, !dbg !10380
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @commit_tail(%struct.drm_atomic_state* %old_state) #0 !dbg !10381 {
entry:
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %funcs = alloca %struct.drm_mode_config_helper_funcs*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %start = alloca i64, align 8
  %commit_time_ms = alloca i64, align 8
  %i = alloca i32, align 4
  %new_self_refresh_mask = alloca i32, align 4
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !10382, metadata !DIExpression()), !dbg !10383
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !10384, metadata !DIExpression()), !dbg !10385
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10386
  %dev1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 1, !dbg !10387
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !10387
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !10385
  call void @llvm.dbg.declare(metadata %struct.drm_mode_config_helper_funcs** %funcs, metadata !10388, metadata !DIExpression()), !dbg !10389
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !10390, metadata !DIExpression()), !dbg !10391
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !10392, metadata !DIExpression()), !dbg !10393
  call void @llvm.dbg.declare(metadata i64* %start, metadata !10394, metadata !DIExpression()), !dbg !10395
  call void @llvm.dbg.declare(metadata i64* %commit_time_ms, metadata !10396, metadata !DIExpression()), !dbg !10397
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10398, metadata !DIExpression()), !dbg !10399
  call void @llvm.dbg.declare(metadata i32* %new_self_refresh_mask, metadata !10400, metadata !DIExpression()), !dbg !10401
  store i32 0, i32* %new_self_refresh_mask, align 4, !dbg !10401
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !10402
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !10403
  %helper_private = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 104, !dbg !10404
  %3 = load %struct.drm_mode_config_helper_funcs*, %struct.drm_mode_config_helper_funcs** %helper_private, align 8, !dbg !10404
  store %struct.drm_mode_config_helper_funcs* %3, %struct.drm_mode_config_helper_funcs** %funcs, align 8, !dbg !10405
  %call = call i64 @ktime_get() #9, !dbg !10406
  store i64 %call, i64* %start, align 8, !dbg !10407
  %4 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !10408
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10409
  %call2 = call i32 @drm_atomic_helper_wait_for_fences(%struct.drm_device* %4, %struct.drm_atomic_state* %5, i1 zeroext false) #9, !dbg !10410
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10411
  call void @drm_atomic_helper_wait_for_dependencies(%struct.drm_atomic_state* %6) #9, !dbg !10412
  store i32 0, i32* %i, align 4, !dbg !10413
  br label %for.cond, !dbg !10413

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load i32, i32* %i, align 4, !dbg !10415
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10415
  %dev3 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 1, !dbg !10415
  %9 = load %struct.drm_device*, %struct.drm_device** %dev3, align 8, !dbg !10415
  %mode_config4 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %9, i32 0, i32 35, !dbg !10415
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config4, i32 0, i32 19, !dbg !10415
  %10 = load i32, i32* %num_crtc, align 8, !dbg !10415
  %cmp = icmp ult i32 %7, %10, !dbg !10415
  br i1 %cmp, label %for.body, label %for.end, !dbg !10413

for.body:                                         ; preds = %for.cond
  %11 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10417
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %11, i32 0, i32 4, !dbg !10417
  %12 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !10417
  %13 = load i32, i32* %i, align 4, !dbg !10417
  %idxprom = zext i32 %13 to i64, !dbg !10417
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %12, i64 %idxprom, !dbg !10417
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !10417
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !10417
  %tobool = icmp ne %struct.drm_crtc* %14, null, !dbg !10417
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !10417

land.lhs.true:                                    ; preds = %for.body
  %15 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10417
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %15, i32 0, i32 4, !dbg !10417
  %16 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !10417
  %17 = load i32, i32* %i, align 4, !dbg !10417
  %idxprom6 = zext i32 %17 to i64, !dbg !10417
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %16, i64 %idxprom6, !dbg !10417
  %ptr8 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 0, !dbg !10417
  %18 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr8, align 8, !dbg !10417
  store %struct.drm_crtc* %18, %struct.drm_crtc** %crtc, align 8, !dbg !10417
  %19 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10417
  %20 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10417
  %crtcs9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %20, i32 0, i32 4, !dbg !10417
  %21 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs9, align 8, !dbg !10417
  %22 = load i32, i32* %i, align 4, !dbg !10417
  %idxprom10 = zext i32 %22 to i64, !dbg !10417
  %arrayidx11 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %21, i64 %idxprom10, !dbg !10417
  %new_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx11, i32 0, i32 3, !dbg !10417
  %23 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state, align 8, !dbg !10417
  store %struct.drm_crtc_state* %23, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10417
  %24 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10417
  br i1 true, label %if.else, label %if.then, !dbg !10415

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end15, !dbg !10419

if.else:                                          ; preds = %land.lhs.true
  %25 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10421
  %self_refresh_active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %25, i32 0, i32 16, !dbg !10423
  %26 = load i8, i8* %self_refresh_active, align 2, !dbg !10423
  %tobool12 = trunc i8 %26 to i1, !dbg !10423
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !10424

if.then13:                                        ; preds = %if.else
  %27 = load i32, i32* %i, align 4, !dbg !10425
  %sh_prom = zext i32 %27 to i64, !dbg !10425
  %shl = shl i64 1, %sh_prom, !dbg !10425
  %28 = load i32, i32* %new_self_refresh_mask, align 4, !dbg !10426
  %conv = zext i32 %28 to i64, !dbg !10426
  %or = or i64 %conv, %shl, !dbg !10426
  %conv14 = trunc i64 %or to i32, !dbg !10426
  store i32 %conv14, i32* %new_self_refresh_mask, align 4, !dbg !10426
  br label %if.end, !dbg !10427

if.end:                                           ; preds = %if.then13, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %for.inc, !dbg !10417

for.inc:                                          ; preds = %if.end15
  %29 = load i32, i32* %i, align 4, !dbg !10415
  %inc = add i32 %29, 1, !dbg !10415
  store i32 %inc, i32* %i, align 4, !dbg !10415
  br label %for.cond, !dbg !10415, !llvm.loop !10428

for.end:                                          ; preds = %for.cond
  %30 = load %struct.drm_mode_config_helper_funcs*, %struct.drm_mode_config_helper_funcs** %funcs, align 8, !dbg !10430
  %tobool16 = icmp ne %struct.drm_mode_config_helper_funcs* %30, null, !dbg !10430
  br i1 %tobool16, label %land.lhs.true17, label %if.else21, !dbg !10432

land.lhs.true17:                                  ; preds = %for.end
  %31 = load %struct.drm_mode_config_helper_funcs*, %struct.drm_mode_config_helper_funcs** %funcs, align 8, !dbg !10433
  %atomic_commit_tail = getelementptr inbounds %struct.drm_mode_config_helper_funcs, %struct.drm_mode_config_helper_funcs* %31, i32 0, i32 0, !dbg !10434
  %32 = load void (%struct.drm_atomic_state*)*, void (%struct.drm_atomic_state*)** %atomic_commit_tail, align 8, !dbg !10434
  %tobool18 = icmp ne void (%struct.drm_atomic_state*)* %32, null, !dbg !10433
  br i1 %tobool18, label %if.then19, label %if.else21, !dbg !10435

if.then19:                                        ; preds = %land.lhs.true17
  %33 = load %struct.drm_mode_config_helper_funcs*, %struct.drm_mode_config_helper_funcs** %funcs, align 8, !dbg !10436
  %atomic_commit_tail20 = getelementptr inbounds %struct.drm_mode_config_helper_funcs, %struct.drm_mode_config_helper_funcs* %33, i32 0, i32 0, !dbg !10437
  %34 = load void (%struct.drm_atomic_state*)*, void (%struct.drm_atomic_state*)** %atomic_commit_tail20, align 8, !dbg !10437
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10438
  call void %34(%struct.drm_atomic_state* %35) #9, !dbg !10436
  br label %if.end22, !dbg !10436

if.else21:                                        ; preds = %land.lhs.true17, %for.end
  %36 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10439
  call void @drm_atomic_helper_commit_tail(%struct.drm_atomic_state* %36) #9, !dbg !10440
  br label %if.end22

if.end22:                                         ; preds = %if.else21, %if.then19
  %call23 = call i64 @ktime_get() #9, !dbg !10441
  %37 = load i64, i64* %start, align 8, !dbg !10442
  %call24 = call i64 @ktime_ms_delta(i64 %call23, i64 %37) #9, !dbg !10443
  store i64 %call24, i64* %commit_time_ms, align 8, !dbg !10444
  %38 = load i64, i64* %commit_time_ms, align 8, !dbg !10445
  %cmp25 = icmp sgt i64 %38, 0, !dbg !10447
  br i1 %cmp25, label %if.then27, label %if.end29, !dbg !10448

if.then27:                                        ; preds = %if.end22
  %39 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10449
  %40 = load i64, i64* %commit_time_ms, align 8, !dbg !10450
  %conv28 = trunc i64 %40 to i32, !dbg !10451
  %41 = load i32, i32* %new_self_refresh_mask, align 4, !dbg !10452
  call void @drm_self_refresh_helper_update_avg_times(%struct.drm_atomic_state* %39, i32 %conv28, i32 %41) #9, !dbg !10453
  br label %if.end29, !dbg !10453

if.end29:                                         ; preds = %if.then27, %if.end22
  %42 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10454
  call void @drm_atomic_helper_commit_cleanup_done(%struct.drm_atomic_state* %42) #9, !dbg !10455
  %43 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10456
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %43) #9, !dbg !10457
  ret void, !dbg !10458
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !10459 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !10462, metadata !DIExpression()), !dbg !10466
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !10472, metadata !DIExpression()), !dbg !10473
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !10474, metadata !DIExpression()), !dbg !10475
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !10476, metadata !DIExpression()), !dbg !10477
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !10478, metadata !DIExpression()), !dbg !10482
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !10484, metadata !DIExpression()), !dbg !10488
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !10490, metadata !DIExpression()), !dbg !10494
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !10499, metadata !DIExpression()), !dbg !10500
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !10501, metadata !DIExpression()), !dbg !10502
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10503, metadata !DIExpression()), !dbg !10504
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !10505, metadata !DIExpression()), !dbg !10506
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !10507, metadata !DIExpression()), !dbg !10508
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10509, metadata !DIExpression()), !dbg !10510
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !10511, metadata !DIExpression()), !dbg !10512
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !10513, metadata !DIExpression()), !dbg !10514
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !10515, metadata !DIExpression()), !dbg !10516
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !10517, metadata !DIExpression()), !dbg !10518
  %0 = load i64, i64* %size.addr, align 8, !dbg !10519
  %1 = load i32, i32* %flags.addr, align 4, !dbg !10520
  %or = or i32 %1, 256, !dbg !10521
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !10522
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #8, !dbg !10523
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !10524

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !10525
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !10526
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !10527

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !10528
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !10529
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !10530
  %call.i.i = call i32 @get_order(i64 %7) #11, !dbg !10531
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !10508
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !10532
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !10533
  %10 = load i32, i32* %order.i.i, align 4, !dbg !10534
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !10535
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !10536
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !10537
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #10, !dbg !10538
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !10538
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !10538
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !10538
  call void @llvm.assume(i1 %maskcond.i.i.i) #8, !dbg !10538
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !10539
  br label %kmalloc.exit, !dbg !10539

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !10540
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10541
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !10541
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !10543

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !10544
  br label %kmalloc_index.exit.i, !dbg !10544

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10545
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !10547
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !10548

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10549
  br label %kmalloc_index.exit.i, !dbg !10549

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10550
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !10552
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !10553

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10554
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !10555
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !10556

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !10557
  br label %kmalloc_index.exit.i, !dbg !10557

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10558
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !10560
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !10561

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10562
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !10563
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !10564

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !10565
  br label %kmalloc_index.exit.i, !dbg !10565

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10566
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !10568
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !10569

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !10570
  br label %kmalloc_index.exit.i, !dbg !10570

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10571
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !10573
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !10574

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !10575
  br label %kmalloc_index.exit.i, !dbg !10575

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10576
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !10578
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !10579

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !10580
  br label %kmalloc_index.exit.i, !dbg !10580

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10581
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !10583
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !10584

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !10585
  br label %kmalloc_index.exit.i, !dbg !10585

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10586
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !10588
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !10589

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !10590
  br label %kmalloc_index.exit.i, !dbg !10590

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10591
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !10593
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !10594

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !10595
  br label %kmalloc_index.exit.i, !dbg !10595

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10596
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !10598
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !10599

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !10600
  br label %kmalloc_index.exit.i, !dbg !10600

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10601
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !10603
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !10604

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !10605
  br label %kmalloc_index.exit.i, !dbg !10605

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10606
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !10608
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !10609

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !10610
  br label %kmalloc_index.exit.i, !dbg !10610

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10611
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !10613
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !10614

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !10615
  br label %kmalloc_index.exit.i, !dbg !10615

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10616
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !10618
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !10619

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !10620
  br label %kmalloc_index.exit.i, !dbg !10620

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10621
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !10623
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !10624

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !10625
  br label %kmalloc_index.exit.i, !dbg !10625

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10626
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !10628
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !10629

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !10630
  br label %kmalloc_index.exit.i, !dbg !10630

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10631
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !10633
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !10634

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !10635
  br label %kmalloc_index.exit.i, !dbg !10635

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10636
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !10638
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !10639

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !10640
  br label %kmalloc_index.exit.i, !dbg !10640

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10641
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !10643
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !10644

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !10645
  br label %kmalloc_index.exit.i, !dbg !10645

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10646
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !10648
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !10649

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !10650
  br label %kmalloc_index.exit.i, !dbg !10650

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10651
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !10653
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !10654

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !10655
  br label %kmalloc_index.exit.i, !dbg !10655

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10656
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !10658
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !10659

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !10660
  br label %kmalloc_index.exit.i, !dbg !10660

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10661
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !10663
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !10664

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !10665
  br label %kmalloc_index.exit.i, !dbg !10665

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10666
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !10668
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !10669

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !10670
  br label %kmalloc_index.exit.i, !dbg !10670

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10671
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !10673
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !10674

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !10675
  br label %kmalloc_index.exit.i, !dbg !10675

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10676
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !10678
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !10679

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !10680
  br label %kmalloc_index.exit.i, !dbg !10680

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !10681
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !10683
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !10684

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !10685
  br label %kmalloc_index.exit.i, !dbg !10685

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.48, i64 0, i64 0), i32 382, i32 0, i64 12) #8, !dbg !10686, !srcloc !10689
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 162) #8, !dbg !10690, !srcloc !10693
  unreachable, !dbg !10694

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !10695
  store i32 %45, i32* %index.i, align 4, !dbg !10696
  %46 = load i32, i32* %index.i, align 4, !dbg !10697
  %tobool.i = icmp ne i32 %46, 0, !dbg !10697
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !10699

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !10700
  br label %kmalloc.exit, !dbg !10700

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !10701
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10702
  %and.i.i = and i32 %48, 17, !dbg !10702
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !10702
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !10702
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !10702
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !10702
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !10704

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !10705
  br label %kmalloc_type.exit.i, !dbg !10705

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !10706
  %and2.i.i = and i32 %49, 1, !dbg !10707
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !10706
  %50 = zext i1 %tobool3.i.i to i64, !dbg !10706
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !10706
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !10708
  br label %kmalloc_type.exit.i, !dbg !10708

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !10709
  %idxprom.i = zext i32 %51 to i64, !dbg !10710
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !10710
  %52 = load i32, i32* %index.i, align 4, !dbg !10711
  %idxprom6.i = zext i32 %52 to i64, !dbg !10710
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !10710
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !10710
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !10712
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !10713
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10714
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10715
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #10, !dbg !10716
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !10716
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !10716
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !10716
  call void @llvm.assume(i1 %maskcond.i.i) #8, !dbg !10716
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !10477
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !10717
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !10718
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !10719
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !10720
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #10, !dbg !10721
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !10722
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !10723
  store i8* %62, i8** %retval.i, align 8, !dbg !10724
  br label %kmalloc.exit, !dbg !10724

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !10725
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !10726
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #10, !dbg !10727
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !10727
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !10727
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !10727
  call void @llvm.assume(i1 %maskcond.i) #8, !dbg !10727
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !10728
  br label %kmalloc.exit, !dbg !10728

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !10729
  ret i8* %65, !dbg !10730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @init_commit(%struct.drm_crtc_commit* %commit, %struct.drm_crtc* %crtc) #0 !dbg !10731 {
entry:
  %commit.addr = alloca %struct.drm_crtc_commit*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  store %struct.drm_crtc_commit* %commit, %struct.drm_crtc_commit** %commit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit.addr, metadata !10734, metadata !DIExpression()), !dbg !10735
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !10736, metadata !DIExpression()), !dbg !10737
  %0 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10738
  %flip_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %0, i32 0, i32 2, !dbg !10738
  call void @__init_completion(%struct.completion* %flip_done) #9, !dbg !10738
  %1 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10739
  %hw_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %1, i32 0, i32 3, !dbg !10739
  call void @__init_completion(%struct.completion* %hw_done) #9, !dbg !10739
  %2 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10740
  %cleanup_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %2, i32 0, i32 4, !dbg !10740
  call void @__init_completion(%struct.completion* %cleanup_done) #9, !dbg !10740
  %3 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10741
  %commit_entry = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %3, i32 0, i32 5, !dbg !10742
  call void @INIT_LIST_HEAD(%struct.list_head* %commit_entry) #9, !dbg !10743
  %4 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10744
  %ref = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %4, i32 0, i32 1, !dbg !10745
  call void @kref_init(%struct.kref* %ref) #9, !dbg !10746
  %5 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10747
  %6 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10748
  %crtc1 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %6, i32 0, i32 0, !dbg !10749
  store %struct.drm_crtc* %5, %struct.drm_crtc** %crtc1, align 8, !dbg !10750
  ret void, !dbg !10751
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @stall_checks(%struct.drm_crtc* %crtc, i1 zeroext %nonblock) #0 !dbg !10752 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !10020, metadata !DIExpression()), !dbg !10755
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !10020, metadata !DIExpression()), !dbg !10757
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10032, metadata !DIExpression()), !dbg !10766
  %retval = alloca i32, align 4
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %nonblock.addr = alloca i8, align 1
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %stall_commit = alloca %struct.drm_crtc_commit*, align 8
  %completed = alloca i8, align 1
  %i = alloca i32, align 4
  %ret = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_crtc_commit*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.drm_crtc_commit*, align 8
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !10768, metadata !DIExpression()), !dbg !10769
  %frombool = zext i1 %nonblock to i8
  store i8 %frombool, i8* %nonblock.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nonblock.addr, metadata !10770, metadata !DIExpression()), !dbg !10771
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !10772, metadata !DIExpression()), !dbg !10773
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %stall_commit, metadata !10774, metadata !DIExpression()), !dbg !10775
  store %struct.drm_crtc_commit* null, %struct.drm_crtc_commit** %stall_commit, align 8, !dbg !10775
  call void @llvm.dbg.declare(metadata i8* %completed, metadata !10776, metadata !DIExpression()), !dbg !10777
  store i8 1, i8* %completed, align 1, !dbg !10777
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10780, metadata !DIExpression()), !dbg !10781
  store i64 0, i64* %ret, align 8, !dbg !10781
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10782
  %commit_lock = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %0, i32 0, i32 23, !dbg !10783
  store %struct.spinlock* %commit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10784, !srcloc !10247
  %1 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10785
  %2 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %1, i32 0, i32 0, !dbg !10785
  %rlock.i = bitcast %union.anon.1* %2 to %struct.raw_spinlock*, !dbg !10785
  store i32 0, i32* %i, align 4, !dbg !10786
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10787, metadata !DIExpression()), !dbg !10789
  %3 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10789
  %commit_list = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %3, i32 0, i32 22, !dbg !10789
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %commit_list, i32 0, i32 0, !dbg !10789
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10789
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !10789
  store i8* %5, i8** %__mptr, align 8, !dbg !10789
  br label %do.body, !dbg !10789

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10790

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !10789
  %add.ptr = getelementptr i8, i8* %6, i64 -88, !dbg !10789
  %7 = bitcast i8* %add.ptr to %struct.drm_crtc_commit*, !dbg !10789
  store %struct.drm_crtc_commit* %7, %struct.drm_crtc_commit** %tmp, align 8, !dbg !10790
  %8 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %tmp, align 8, !dbg !10789
  store %struct.drm_crtc_commit* %8, %struct.drm_crtc_commit** %commit, align 8, !dbg !10792
  br label %for.cond, !dbg !10792

for.cond:                                         ; preds = %do.end16, %do.end
  %9 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10793
  %commit_entry = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %9, i32 0, i32 5, !dbg !10793
  %10 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10793
  %commit_list1 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %10, i32 0, i32 22, !dbg !10793
  %cmp = icmp eq %struct.list_head* %commit_entry, %commit_list1, !dbg !10793
  %lnot = xor i1 %cmp, true, !dbg !10793
  br i1 %lnot, label %for.body, label %for.end, !dbg !10792

for.body:                                         ; preds = %for.cond
  %11 = load i32, i32* %i, align 4, !dbg !10794
  %cmp2 = icmp eq i32 %11, 0, !dbg !10795
  br i1 %cmp2, label %if.then, label %if.else, !dbg !10796

if.then:                                          ; preds = %for.body
  %12 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10797
  %flip_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %12, i32 0, i32 2, !dbg !10798
  %call = call zeroext i1 @try_wait_for_completion(%struct.completion* %flip_done) #9, !dbg !10799
  %frombool3 = zext i1 %call to i8, !dbg !10800
  store i8 %frombool3, i8* %completed, align 1, !dbg !10800
  %13 = load i8, i8* %completed, align 1, !dbg !10801
  %tobool = trunc i8 %13 to i1, !dbg !10801
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !10802

land.lhs.true:                                    ; preds = %if.then
  %14 = load i8, i8* %nonblock.addr, align 1, !dbg !10803
  %tobool4 = trunc i8 %14 to i1, !dbg !10803
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !10804

if.then5:                                         ; preds = %land.lhs.true
  %15 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10805
  %commit_lock6 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %15, i32 0, i32 23, !dbg !10806
  store %struct.spinlock* %commit_lock6, %struct.spinlock** %lock.addr.i28, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10807, !srcloc !10260
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !10808
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !10808
  %rlock.i29 = bitcast %union.anon.1* %17 to %struct.raw_spinlock*, !dbg !10808
  store i32 -16, i32* %retval, align 4, !dbg !10809
  br label %return, !dbg !10809

if.end:                                           ; preds = %land.lhs.true, %if.then
  br label %if.end11, !dbg !10810

if.else:                                          ; preds = %for.body
  %18 = load i32, i32* %i, align 4, !dbg !10811
  %cmp7 = icmp eq i32 %18, 1, !dbg !10813
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !10814

if.then8:                                         ; preds = %if.else
  %19 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10815
  %call9 = call %struct.drm_crtc_commit* @drm_crtc_commit_get(%struct.drm_crtc_commit* %19) #9, !dbg !10817
  store %struct.drm_crtc_commit* %call9, %struct.drm_crtc_commit** %stall_commit, align 8, !dbg !10818
  br label %for.end, !dbg !10819

if.end10:                                         ; preds = %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end
  %20 = load i32, i32* %i, align 4, !dbg !10820
  %inc = add i32 %20, 1, !dbg !10820
  store i32 %inc, i32* %i, align 4, !dbg !10820
  br label %for.inc, !dbg !10821

for.inc:                                          ; preds = %if.end11
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !10822, metadata !DIExpression()), !dbg !10824
  %21 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10824
  %commit_entry13 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %21, i32 0, i32 5, !dbg !10824
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %commit_entry13, i32 0, i32 0, !dbg !10824
  %22 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !10824
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !10824
  store i8* %23, i8** %__mptr12, align 8, !dbg !10824
  br label %do.body15, !dbg !10824

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !10825

do.end16:                                         ; preds = %do.body15
  %24 = load i8*, i8** %__mptr12, align 8, !dbg !10824
  %add.ptr18 = getelementptr i8, i8* %24, i64 -88, !dbg !10824
  %25 = bitcast i8* %add.ptr18 to %struct.drm_crtc_commit*, !dbg !10824
  store %struct.drm_crtc_commit* %25, %struct.drm_crtc_commit** %tmp17, align 8, !dbg !10825
  %26 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %tmp17, align 8, !dbg !10824
  store %struct.drm_crtc_commit* %26, %struct.drm_crtc_commit** %commit, align 8, !dbg !10793
  br label %for.cond, !dbg !10793, !llvm.loop !10827

for.end:                                          ; preds = %if.then8, %for.cond
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10829
  %commit_lock19 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %27, i32 0, i32 23, !dbg !10830
  store %struct.spinlock* %commit_lock19, %struct.spinlock** %lock.addr.i30, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !10831, !srcloc !10260
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !10832
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !10832
  %rlock.i31 = bitcast %union.anon.1* %29 to %struct.raw_spinlock*, !dbg !10832
  %30 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %stall_commit, align 8, !dbg !10833
  %tobool20 = icmp ne %struct.drm_crtc_commit* %30, null, !dbg !10833
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !10835

if.then21:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !10836
  br label %return, !dbg !10836

if.end22:                                         ; preds = %for.end
  %31 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %stall_commit, align 8, !dbg !10837
  %cleanup_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %31, i32 0, i32 4, !dbg !10838
  %call23 = call i64 @wait_for_completion_interruptible_timeout(%struct.completion* %cleanup_done, i64 2500) #9, !dbg !10839
  store i64 %call23, i64* %ret, align 8, !dbg !10840
  %32 = load i64, i64* %ret, align 8, !dbg !10841
  %cmp24 = icmp eq i64 %32, 0, !dbg !10843
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !10844

if.then25:                                        ; preds = %if.end22
  %33 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10845
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %33, i32 0, i32 5, !dbg !10845
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !10845
  %34 = load i32, i32* %id, align 8, !dbg !10845
  %35 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10845
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %35, i32 0, i32 3, !dbg !10845
  %36 = load i8*, i8** %name, align 8, !dbg !10845
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.50, i64 0, i64 0), i32 %34, i8* %36) #9, !dbg !10845
  br label %if.end26, !dbg !10845

if.end26:                                         ; preds = %if.then25, %if.end22
  %37 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %stall_commit, align 8, !dbg !10846
  call void @drm_crtc_commit_put(%struct.drm_crtc_commit* %37) #9, !dbg !10847
  %38 = load i64, i64* %ret, align 8, !dbg !10848
  %cmp27 = icmp slt i64 %38, 0, !dbg !10849
  br i1 %cmp27, label %cond.true, label %cond.false, !dbg !10848

cond.true:                                        ; preds = %if.end26
  %39 = load i64, i64* %ret, align 8, !dbg !10850
  br label %cond.end, !dbg !10848

cond.false:                                       ; preds = %if.end26
  br label %cond.end, !dbg !10848

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %39, %cond.true ], [ 0, %cond.false ], !dbg !10848
  %conv = trunc i64 %cond to i32, !dbg !10848
  store i32 %conv, i32* %retval, align 4, !dbg !10851
  br label %return, !dbg !10851

return:                                           ; preds = %cond.end, %if.then21, %if.then5
  %40 = load i32, i32* %retval, align 4, !dbg !10852
  ret i32 %40, !dbg !10852
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @release_crtc_commit(%struct.completion* %completion) #0 !dbg !10853 {
entry:
  %completion.addr = alloca %struct.completion*, align 8
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_crtc_commit*, align 8
  store %struct.completion* %completion, %struct.completion** %completion.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %completion.addr, metadata !10854, metadata !DIExpression()), !dbg !10855
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !10856, metadata !DIExpression()), !dbg !10857
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10858, metadata !DIExpression()), !dbg !10860
  %0 = load %struct.completion*, %struct.completion** %completion.addr, align 8, !dbg !10860
  %1 = bitcast %struct.completion* %0 to i8*, !dbg !10860
  store i8* %1, i8** %__mptr, align 8, !dbg !10860
  br label %do.body, !dbg !10860

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10861

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !10860
  %add.ptr = getelementptr i8, i8* %2, i64 -16, !dbg !10860
  %3 = bitcast i8* %add.ptr to %struct.drm_crtc_commit*, !dbg !10860
  store %struct.drm_crtc_commit* %3, %struct.drm_crtc_commit** %tmp, align 8, !dbg !10861
  %4 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %tmp, align 8, !dbg !10860
  store %struct.drm_crtc_commit* %4, %struct.drm_crtc_commit** %commit, align 8, !dbg !10857
  %5 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10863
  call void @drm_crtc_commit_put(%struct.drm_crtc_commit* %5) #9, !dbg !10864
  ret void, !dbg !10865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_crtc_commit* @drm_crtc_commit_get(%struct.drm_crtc_commit* %commit) #0 !dbg !10866 {
entry:
  %commit.addr = alloca %struct.drm_crtc_commit*, align 8
  store %struct.drm_crtc_commit* %commit, %struct.drm_crtc_commit** %commit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit.addr, metadata !10869, metadata !DIExpression()), !dbg !10870
  %0 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10871
  %ref = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %0, i32 0, i32 1, !dbg !10872
  call void @kref_get(%struct.kref* %ref) #9, !dbg !10873
  %1 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !10874
  ret %struct.drm_crtc_commit* %1, !dbg !10875
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_crtc_commit* @crtc_or_fake_commit(%struct.drm_atomic_state* %state, %struct.drm_crtc* %crtc) #0 !dbg !10876 {
entry:
  %retval = alloca %struct.drm_crtc_commit*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !10879, metadata !DIExpression()), !dbg !10880
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !10881, metadata !DIExpression()), !dbg !10882
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10883
  %tobool = icmp ne %struct.drm_crtc* %0, null, !dbg !10883
  br i1 %tobool, label %if.then, label %if.end, !dbg !10885

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !10886, metadata !DIExpression()), !dbg !10888
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10889
  %2 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !10890
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %1, %struct.drm_crtc* %2) #9, !dbg !10891
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10892
  %3 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !10893
  %commit = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %3, i32 0, i32 18, !dbg !10894
  %4 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10894
  store %struct.drm_crtc_commit* %4, %struct.drm_crtc_commit** %retval, align 8, !dbg !10895
  br label %return, !dbg !10895

if.end:                                           ; preds = %entry
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10896
  %fake_commit = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %5, i32 0, i32 10, !dbg !10898
  %6 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit, align 8, !dbg !10898
  %tobool1 = icmp ne %struct.drm_crtc_commit* %6, null, !dbg !10896
  br i1 %tobool1, label %if.end10, label %if.then2, !dbg !10899

if.then2:                                         ; preds = %if.end
  %call3 = call i8* @kzalloc(i64 120, i32 3264) #9, !dbg !10900
  %7 = bitcast i8* %call3 to %struct.drm_crtc_commit*, !dbg !10900
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10902
  %fake_commit4 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 10, !dbg !10903
  store %struct.drm_crtc_commit* %7, %struct.drm_crtc_commit** %fake_commit4, align 8, !dbg !10904
  %9 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10905
  %fake_commit5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %9, i32 0, i32 10, !dbg !10907
  %10 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit5, align 8, !dbg !10907
  %tobool6 = icmp ne %struct.drm_crtc_commit* %10, null, !dbg !10905
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10908

if.then7:                                         ; preds = %if.then2
  store %struct.drm_crtc_commit* null, %struct.drm_crtc_commit** %retval, align 8, !dbg !10909
  br label %return, !dbg !10909

if.end8:                                          ; preds = %if.then2
  %11 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10910
  %fake_commit9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %11, i32 0, i32 10, !dbg !10911
  %12 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit9, align 8, !dbg !10911
  call void @init_commit(%struct.drm_crtc_commit* %12, %struct.drm_crtc* null) #9, !dbg !10912
  br label %if.end10, !dbg !10913

if.end10:                                         ; preds = %if.end8, %if.end
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10914
  %fake_commit11 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %13, i32 0, i32 10, !dbg !10915
  %14 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit11, align 8, !dbg !10915
  store %struct.drm_crtc_commit* %14, %struct.drm_crtc_commit** %retval, align 8, !dbg !10916
  br label %return, !dbg !10916

return:                                           ; preds = %if.end10, %if.then7, %if.then
  %15 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %retval, align 8, !dbg !10917
  ret %struct.drm_crtc_commit* %15, !dbg !10917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_wait_for_dependencies(%struct.drm_atomic_state* %old_state) #0 !dbg !10918 {
entry:
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %conn = alloca %struct.drm_connector*, align 8
  %old_conn_state = alloca %struct.drm_connector_state*, align 8
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %i = alloca i32, align 4
  %ret = alloca i64, align 8
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !10919, metadata !DIExpression()), !dbg !10920
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !10921, metadata !DIExpression()), !dbg !10922
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !10923, metadata !DIExpression()), !dbg !10924
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !10925, metadata !DIExpression()), !dbg !10926
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !10927, metadata !DIExpression()), !dbg !10928
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %conn, metadata !10929, metadata !DIExpression()), !dbg !10930
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_conn_state, metadata !10931, metadata !DIExpression()), !dbg !10932
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !10933, metadata !DIExpression()), !dbg !10934
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10935, metadata !DIExpression()), !dbg !10936
  call void @llvm.dbg.declare(metadata i64* %ret, metadata !10937, metadata !DIExpression()), !dbg !10938
  store i32 0, i32* %i, align 4, !dbg !10939
  br label %for.cond, !dbg !10939

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10941
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10941
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !10941
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !10941
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !10941
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !10941
  %3 = load i32, i32* %num_crtc, align 8, !dbg !10941
  %cmp = icmp slt i32 %0, %3, !dbg !10941
  br i1 %cmp, label %for.body, label %for.end, !dbg !10939

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10943
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !10943
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !10943
  %6 = load i32, i32* %i, align 4, !dbg !10943
  %idxprom = sext i32 %6 to i64, !dbg !10943
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !10943
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !10943
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !10943
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !10943
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !10943

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10943
  %crtcs1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !10943
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs1, align 8, !dbg !10943
  %10 = load i32, i32* %i, align 4, !dbg !10943
  %idxprom2 = sext i32 %10 to i64, !dbg !10943
  %arrayidx3 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom2, !dbg !10943
  %ptr4 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx3, i32 0, i32 0, !dbg !10943
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr4, align 8, !dbg !10943
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !10943
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10943
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 4, !dbg !10943
  %13 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !10943
  %14 = load i32, i32* %i, align 4, !dbg !10943
  %idxprom6 = sext i32 %14 to i64, !dbg !10943
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %13, i64 %idxprom6, !dbg !10943
  %old_state8 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 2, !dbg !10943
  %15 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state8, align 8, !dbg !10943
  store %struct.drm_crtc_state* %15, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10943
  br i1 true, label %if.else, label %if.then, !dbg !10941

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end22, !dbg !10945

if.else:                                          ; preds = %land.lhs.true
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !10947
  %commit9 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %16, i32 0, i32 18, !dbg !10949
  %17 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit9, align 8, !dbg !10949
  store %struct.drm_crtc_commit* %17, %struct.drm_crtc_commit** %commit, align 8, !dbg !10950
  %18 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10951
  %tobool10 = icmp ne %struct.drm_crtc_commit* %18, null, !dbg !10951
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !10953

if.then11:                                        ; preds = %if.else
  br label %for.inc, !dbg !10954

if.end:                                           ; preds = %if.else
  %19 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10955
  %hw_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %19, i32 0, i32 3, !dbg !10956
  %call = call i64 @wait_for_completion_timeout(%struct.completion* %hw_done, i64 2500) #9, !dbg !10957
  store i64 %call, i64* %ret, align 8, !dbg !10958
  %20 = load i64, i64* %ret, align 8, !dbg !10959
  %cmp12 = icmp eq i64 %20, 0, !dbg !10961
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10962

if.then13:                                        ; preds = %if.end
  %21 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10963
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %21, i32 0, i32 5, !dbg !10963
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !10963
  %22 = load i32, i32* %id, align 8, !dbg !10963
  %23 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10963
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %23, i32 0, i32 3, !dbg !10963
  %24 = load i8*, i8** %name, align 8, !dbg !10963
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i32 %22, i8* %24) #9, !dbg !10963
  br label %if.end14, !dbg !10963

if.end14:                                         ; preds = %if.then13, %if.end
  %25 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10964
  %flip_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %25, i32 0, i32 2, !dbg !10965
  %call15 = call i64 @wait_for_completion_timeout(%struct.completion* %flip_done, i64 2500) #9, !dbg !10966
  store i64 %call15, i64* %ret, align 8, !dbg !10967
  %26 = load i64, i64* %ret, align 8, !dbg !10968
  %cmp16 = icmp eq i64 %26, 0, !dbg !10970
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !10971

if.then17:                                        ; preds = %if.end14
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10972
  %base18 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %27, i32 0, i32 5, !dbg !10972
  %id19 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base18, i32 0, i32 0, !dbg !10972
  %28 = load i32, i32* %id19, align 8, !dbg !10972
  %29 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !10972
  %name20 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %29, i32 0, i32 3, !dbg !10972
  %30 = load i8*, i8** %name20, align 8, !dbg !10972
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i32 %28, i8* %30) #9, !dbg !10972
  br label %if.end21, !dbg !10972

if.end21:                                         ; preds = %if.then17, %if.end14
  br label %if.end22

if.end22:                                         ; preds = %if.end21, %if.then
  br label %for.inc, !dbg !10943

for.inc:                                          ; preds = %if.end22, %if.then11
  %31 = load i32, i32* %i, align 4, !dbg !10941
  %inc = add i32 %31, 1, !dbg !10941
  store i32 %inc, i32* %i, align 4, !dbg !10941
  br label %for.cond, !dbg !10941, !llvm.loop !10973

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10975
  br label %for.cond23, !dbg !10975

for.cond23:                                       ; preds = %for.inc62, %for.end
  %32 = load i32, i32* %i, align 4, !dbg !10977
  %33 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10977
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %33, i32 0, i32 5, !dbg !10977
  %34 = load i32, i32* %num_connector, align 8, !dbg !10977
  %cmp24 = icmp slt i32 %32, %34, !dbg !10977
  br i1 %cmp24, label %for.body25, label %for.end64, !dbg !10975

for.body25:                                       ; preds = %for.cond23
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10979
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %35, i32 0, i32 6, !dbg !10979
  %36 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !10979
  %37 = load i32, i32* %i, align 4, !dbg !10979
  %idxprom26 = sext i32 %37 to i64, !dbg !10979
  %arrayidx27 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %36, i64 %idxprom26, !dbg !10979
  %ptr28 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx27, i32 0, i32 0, !dbg !10979
  %38 = load %struct.drm_connector*, %struct.drm_connector** %ptr28, align 8, !dbg !10979
  %tobool29 = icmp ne %struct.drm_connector* %38, null, !dbg !10979
  br i1 %tobool29, label %land.lhs.true30, label %if.then39, !dbg !10979

land.lhs.true30:                                  ; preds = %for.body25
  %39 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10979
  %connectors31 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %39, i32 0, i32 6, !dbg !10979
  %40 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors31, align 8, !dbg !10979
  %41 = load i32, i32* %i, align 4, !dbg !10979
  %idxprom32 = sext i32 %41 to i64, !dbg !10979
  %arrayidx33 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %40, i64 %idxprom32, !dbg !10979
  %ptr34 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx33, i32 0, i32 0, !dbg !10979
  %42 = load %struct.drm_connector*, %struct.drm_connector** %ptr34, align 8, !dbg !10979
  store %struct.drm_connector* %42, %struct.drm_connector** %conn, align 8, !dbg !10979
  %43 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !10979
  %44 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !10979
  %connectors35 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %44, i32 0, i32 6, !dbg !10979
  %45 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors35, align 8, !dbg !10979
  %46 = load i32, i32* %i, align 4, !dbg !10979
  %idxprom36 = sext i32 %46 to i64, !dbg !10979
  %arrayidx37 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %45, i64 %idxprom36, !dbg !10979
  %old_state38 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx37, i32 0, i32 2, !dbg !10979
  %47 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state38, align 8, !dbg !10979
  store %struct.drm_connector_state* %47, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10979
  br i1 true, label %if.else40, label %if.then39, !dbg !10977

if.then39:                                        ; preds = %land.lhs.true30, %for.body25
  br label %if.end61, !dbg !10981

if.else40:                                        ; preds = %land.lhs.true30
  %48 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_conn_state, align 8, !dbg !10983
  %commit41 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %48, i32 0, i32 5, !dbg !10985
  %49 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit41, align 8, !dbg !10985
  store %struct.drm_crtc_commit* %49, %struct.drm_crtc_commit** %commit, align 8, !dbg !10986
  %50 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10987
  %tobool42 = icmp ne %struct.drm_crtc_commit* %50, null, !dbg !10987
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !10989

if.then43:                                        ; preds = %if.else40
  br label %for.inc62, !dbg !10990

if.end44:                                         ; preds = %if.else40
  %51 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !10991
  %hw_done45 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %51, i32 0, i32 3, !dbg !10992
  %call46 = call i64 @wait_for_completion_timeout(%struct.completion* %hw_done45, i64 2500) #9, !dbg !10993
  store i64 %call46, i64* %ret, align 8, !dbg !10994
  %52 = load i64, i64* %ret, align 8, !dbg !10995
  %cmp47 = icmp eq i64 %52, 0, !dbg !10997
  br i1 %cmp47, label %if.then48, label %if.end52, !dbg !10998

if.then48:                                        ; preds = %if.end44
  %53 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !10999
  %base49 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %53, i32 0, i32 4, !dbg !10999
  %id50 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base49, i32 0, i32 0, !dbg !10999
  %54 = load i32, i32* %id50, align 8, !dbg !10999
  %55 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !10999
  %name51 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %55, i32 0, i32 5, !dbg !10999
  %56 = load i8*, i8** %name51, align 8, !dbg !10999
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.19, i64 0, i64 0), i32 %54, i8* %56) #9, !dbg !10999
  br label %if.end52, !dbg !10999

if.end52:                                         ; preds = %if.then48, %if.end44
  %57 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11000
  %flip_done53 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %57, i32 0, i32 2, !dbg !11001
  %call54 = call i64 @wait_for_completion_timeout(%struct.completion* %flip_done53, i64 2500) #9, !dbg !11002
  store i64 %call54, i64* %ret, align 8, !dbg !11003
  %58 = load i64, i64* %ret, align 8, !dbg !11004
  %cmp55 = icmp eq i64 %58, 0, !dbg !11006
  br i1 %cmp55, label %if.then56, label %if.end60, !dbg !11007

if.then56:                                        ; preds = %if.end52
  %59 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !11008
  %base57 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %59, i32 0, i32 4, !dbg !11008
  %id58 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base57, i32 0, i32 0, !dbg !11008
  %60 = load i32, i32* %id58, align 8, !dbg !11008
  %61 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !11008
  %name59 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %61, i32 0, i32 5, !dbg !11008
  %62 = load i8*, i8** %name59, align 8, !dbg !11008
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.20, i64 0, i64 0), i32 %60, i8* %62) #9, !dbg !11008
  br label %if.end60, !dbg !11008

if.end60:                                         ; preds = %if.then56, %if.end52
  br label %if.end61

if.end61:                                         ; preds = %if.end60, %if.then39
  br label %for.inc62, !dbg !10979

for.inc62:                                        ; preds = %if.end61, %if.then43
  %63 = load i32, i32* %i, align 4, !dbg !10977
  %inc63 = add i32 %63, 1, !dbg !10977
  store i32 %inc63, i32* %i, align 4, !dbg !10977
  br label %for.cond23, !dbg !10977, !llvm.loop !11009

for.end64:                                        ; preds = %for.cond23
  store i32 0, i32* %i, align 4, !dbg !11011
  br label %for.cond65, !dbg !11011

for.cond65:                                       ; preds = %for.inc106, %for.end64
  %64 = load i32, i32* %i, align 4, !dbg !11013
  %65 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11013
  %dev66 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %65, i32 0, i32 1, !dbg !11013
  %66 = load %struct.drm_device*, %struct.drm_device** %dev66, align 8, !dbg !11013
  %mode_config67 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %66, i32 0, i32 35, !dbg !11013
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config67, i32 0, i32 17, !dbg !11013
  %67 = load i32, i32* %num_total_plane, align 8, !dbg !11013
  %cmp68 = icmp slt i32 %64, %67, !dbg !11013
  br i1 %cmp68, label %for.body69, label %for.end108, !dbg !11011

for.body69:                                       ; preds = %for.cond65
  %68 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11015
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %68, i32 0, i32 3, !dbg !11015
  %69 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !11015
  %70 = load i32, i32* %i, align 4, !dbg !11015
  %idxprom70 = sext i32 %70 to i64, !dbg !11015
  %arrayidx71 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %69, i64 %idxprom70, !dbg !11015
  %ptr72 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx71, i32 0, i32 0, !dbg !11015
  %71 = load %struct.drm_plane*, %struct.drm_plane** %ptr72, align 8, !dbg !11015
  %tobool73 = icmp ne %struct.drm_plane* %71, null, !dbg !11015
  br i1 %tobool73, label %land.lhs.true74, label %if.then83, !dbg !11015

land.lhs.true74:                                  ; preds = %for.body69
  %72 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11015
  %planes75 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %72, i32 0, i32 3, !dbg !11015
  %73 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes75, align 8, !dbg !11015
  %74 = load i32, i32* %i, align 4, !dbg !11015
  %idxprom76 = sext i32 %74 to i64, !dbg !11015
  %arrayidx77 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %73, i64 %idxprom76, !dbg !11015
  %ptr78 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx77, i32 0, i32 0, !dbg !11015
  %75 = load %struct.drm_plane*, %struct.drm_plane** %ptr78, align 8, !dbg !11015
  store %struct.drm_plane* %75, %struct.drm_plane** %plane, align 8, !dbg !11015
  %76 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11015
  %planes79 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %76, i32 0, i32 3, !dbg !11015
  %77 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes79, align 8, !dbg !11015
  %78 = load i32, i32* %i, align 4, !dbg !11015
  %idxprom80 = sext i32 %78 to i64, !dbg !11015
  %arrayidx81 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %77, i64 %idxprom80, !dbg !11015
  %old_state82 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx81, i32 0, i32 2, !dbg !11015
  %79 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state82, align 8, !dbg !11015
  store %struct.drm_plane_state* %79, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11015
  br i1 true, label %if.else84, label %if.then83, !dbg !11013

if.then83:                                        ; preds = %land.lhs.true74, %for.body69
  br label %if.end105, !dbg !11017

if.else84:                                        ; preds = %land.lhs.true74
  %80 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11019
  %commit85 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %80, i32 0, i32 23, !dbg !11021
  %81 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit85, align 8, !dbg !11021
  store %struct.drm_crtc_commit* %81, %struct.drm_crtc_commit** %commit, align 8, !dbg !11022
  %82 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11023
  %tobool86 = icmp ne %struct.drm_crtc_commit* %82, null, !dbg !11023
  br i1 %tobool86, label %if.end88, label %if.then87, !dbg !11025

if.then87:                                        ; preds = %if.else84
  br label %for.inc106, !dbg !11026

if.end88:                                         ; preds = %if.else84
  %83 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11027
  %hw_done89 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %83, i32 0, i32 3, !dbg !11028
  %call90 = call i64 @wait_for_completion_timeout(%struct.completion* %hw_done89, i64 2500) #9, !dbg !11029
  store i64 %call90, i64* %ret, align 8, !dbg !11030
  %84 = load i64, i64* %ret, align 8, !dbg !11031
  %cmp91 = icmp eq i64 %84, 0, !dbg !11033
  br i1 %cmp91, label %if.then92, label %if.end96, !dbg !11034

if.then92:                                        ; preds = %if.end88
  %85 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11035
  %base93 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %85, i32 0, i32 4, !dbg !11035
  %id94 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base93, i32 0, i32 0, !dbg !11035
  %86 = load i32, i32* %id94, align 8, !dbg !11035
  %87 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11035
  %name95 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %87, i32 0, i32 2, !dbg !11035
  %88 = load i8*, i8** %name95, align 8, !dbg !11035
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.21, i64 0, i64 0), i32 %86, i8* %88) #9, !dbg !11035
  br label %if.end96, !dbg !11035

if.end96:                                         ; preds = %if.then92, %if.end88
  %89 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11036
  %flip_done97 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %89, i32 0, i32 2, !dbg !11037
  %call98 = call i64 @wait_for_completion_timeout(%struct.completion* %flip_done97, i64 2500) #9, !dbg !11038
  store i64 %call98, i64* %ret, align 8, !dbg !11039
  %90 = load i64, i64* %ret, align 8, !dbg !11040
  %cmp99 = icmp eq i64 %90, 0, !dbg !11042
  br i1 %cmp99, label %if.then100, label %if.end104, !dbg !11043

if.then100:                                       ; preds = %if.end96
  %91 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11044
  %base101 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %91, i32 0, i32 4, !dbg !11044
  %id102 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base101, i32 0, i32 0, !dbg !11044
  %92 = load i32, i32* %id102, align 8, !dbg !11044
  %93 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11044
  %name103 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %93, i32 0, i32 2, !dbg !11044
  %94 = load i8*, i8** %name103, align 8, !dbg !11044
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.22, i64 0, i64 0), i32 %92, i8* %94) #9, !dbg !11044
  br label %if.end104, !dbg !11044

if.end104:                                        ; preds = %if.then100, %if.end96
  br label %if.end105

if.end105:                                        ; preds = %if.end104, %if.then83
  br label %for.inc106, !dbg !11015

for.inc106:                                       ; preds = %if.end105, %if.then87
  %95 = load i32, i32* %i, align 4, !dbg !11013
  %inc107 = add i32 %95, 1, !dbg !11013
  store i32 %inc107, i32* %i, align 4, !dbg !11013
  br label %for.cond65, !dbg !11013, !llvm.loop !11045

for.end108:                                       ; preds = %for.cond65
  ret void, !dbg !11047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !11048 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !11052, metadata !DIExpression()), !dbg !11053
  %call = call i64 @arch_local_save_flags() #9, !dbg !11054
  store i64 %call, i64* %f, align 8, !dbg !11055
  call void @arch_local_irq_disable() #9, !dbg !11056
  %0 = load i64, i64* %f, align 8, !dbg !11057
  ret i64 %0, !dbg !11058
}

; Function Attrs: noredzone
declare dso_local void @drm_crtc_send_vblank_event(%struct.drm_crtc*, %struct.drm_pending_vblank_event*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_crtc_commit_put(%struct.drm_crtc_commit* %commit) #0 !dbg !11059 {
entry:
  %commit.addr = alloca %struct.drm_crtc_commit*, align 8
  store %struct.drm_crtc_commit* %commit, %struct.drm_crtc_commit** %commit.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit.addr, metadata !11062, metadata !DIExpression()), !dbg !11063
  %0 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit.addr, align 8, !dbg !11064
  %ref = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %0, i32 0, i32 1, !dbg !11065
  %call = call i32 @kref_put(%struct.kref* %ref, void (%struct.kref*)* @__drm_crtc_commit_free) #9, !dbg !11066
  ret void, !dbg !11067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_cleanup_done(%struct.drm_atomic_state* %old_state) #0 !dbg !11068 {
entry:
  %lock.addr.i107 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i107, metadata !10020, metadata !DIExpression()), !dbg !11069
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !10032, metadata !DIExpression()), !dbg !11075
  %old_state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %commit = alloca %struct.drm_crtc_commit*, align 8
  %i = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on35 = alloca i32, align 4
  %tmp59 = alloca i64, align 8
  %__ret_warn_on72 = alloca i32, align 4
  %tmp99 = alloca i64, align 8
  store %struct.drm_atomic_state* %old_state, %struct.drm_atomic_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state.addr, metadata !11077, metadata !DIExpression()), !dbg !11078
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !11079, metadata !DIExpression()), !dbg !11080
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state, metadata !11081, metadata !DIExpression()), !dbg !11082
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_commit** %commit, metadata !11083, metadata !DIExpression()), !dbg !11084
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11085, metadata !DIExpression()), !dbg !11086
  store i32 0, i32* %i, align 4, !dbg !11087
  br label %for.cond, !dbg !11087

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11088
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11088
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 1, !dbg !11088
  %2 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !11088
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !11088
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 19, !dbg !11088
  %3 = load i32, i32* %num_crtc, align 8, !dbg !11088
  %cmp = icmp slt i32 %0, %3, !dbg !11088
  br i1 %cmp, label %for.body, label %for.end, !dbg !11087

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11089
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 4, !dbg !11089
  %5 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !11089
  %6 = load i32, i32* %i, align 4, !dbg !11089
  %idxprom = sext i32 %6 to i64, !dbg !11089
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %5, i64 %idxprom, !dbg !11089
  %ptr = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 0, !dbg !11089
  %7 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr, align 8, !dbg !11089
  %tobool = icmp ne %struct.drm_crtc* %7, null, !dbg !11089
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !11089

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11089
  %crtcs1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %8, i32 0, i32 4, !dbg !11089
  %9 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs1, align 8, !dbg !11089
  %10 = load i32, i32* %i, align 4, !dbg !11089
  %idxprom2 = sext i32 %10 to i64, !dbg !11089
  %arrayidx3 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %9, i64 %idxprom2, !dbg !11089
  %ptr4 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx3, i32 0, i32 0, !dbg !11089
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr4, align 8, !dbg !11089
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !11089
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11089
  %crtcs5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 4, !dbg !11089
  %13 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs5, align 8, !dbg !11089
  %14 = load i32, i32* %i, align 4, !dbg !11089
  %idxprom6 = sext i32 %14 to i64, !dbg !11089
  %arrayidx7 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %13, i64 %idxprom6, !dbg !11089
  %old_state8 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx7, i32 0, i32 2, !dbg !11089
  %15 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state8, align 8, !dbg !11089
  store %struct.drm_crtc_state* %15, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !11089
  br i1 true, label %if.else, label %if.then, !dbg !11088

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end67, !dbg !11090

if.else:                                          ; preds = %land.lhs.true
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state, align 8, !dbg !11092
  %commit9 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %16, i32 0, i32 18, !dbg !11093
  %17 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit9, align 8, !dbg !11093
  store %struct.drm_crtc_commit* %17, %struct.drm_crtc_commit** %commit, align 8, !dbg !11094
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11095, metadata !DIExpression()), !dbg !11098
  %18 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11098
  %tobool10 = icmp ne %struct.drm_crtc_commit* %18, null, !dbg !11098
  %lnot = xor i1 %tobool10, true, !dbg !11098
  %lnot11 = xor i1 %lnot, true, !dbg !11098
  %lnot12 = xor i1 %lnot11, true, !dbg !11098
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !11098
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11098
  %19 = load i32, i32* %__ret_warn_on, align 4, !dbg !11099
  %tobool13 = icmp ne i32 %19, 0, !dbg !11099
  %lnot14 = xor i1 %tobool13, true, !dbg !11099
  %lnot16 = xor i1 %lnot14, true, !dbg !11099
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !11099
  %conv = sext i32 %lnot.ext17 to i64, !dbg !11099
  %tobool18 = icmp ne i64 %conv, 0, !dbg !11099
  br i1 %tobool18, label %if.then19, label %if.end, !dbg !11098

if.then19:                                        ; preds = %if.else
  br label %do.body, !dbg !11099

do.body:                                          ; preds = %if.then19
  br label %do.body20, !dbg !11101

do.body20:                                        ; preds = %do.body
  br label %do.end, !dbg !11103

do.end:                                           ; preds = %do.body20
  br label %do.body21, !dbg !11101

do.body21:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2361, i32 2305, i64 12) #8, !dbg !11105, !srcloc !11107
  br label %do.end22, !dbg !11105

do.end22:                                         ; preds = %do.body21
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 295) #8, !dbg !11108, !srcloc !11110
  br label %do.body23, !dbg !11101

do.body23:                                        ; preds = %do.end22
  br label %do.end24, !dbg !11111

do.end24:                                         ; preds = %do.body23
  br label %do.end25, !dbg !11101

do.end25:                                         ; preds = %do.end24
  br label %if.end, !dbg !11101

if.end:                                           ; preds = %do.end25, %if.else
  %20 = load i32, i32* %__ret_warn_on, align 4, !dbg !11098
  %tobool26 = icmp ne i32 %20, 0, !dbg !11098
  %lnot27 = xor i1 %tobool26, true, !dbg !11098
  %lnot29 = xor i1 %lnot27, true, !dbg !11098
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !11098
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !11098
  store i64 %conv31, i64* %tmp, align 8, !dbg !11099
  %21 = load i64, i64* %tmp, align 8, !dbg !11098
  %tobool32 = icmp ne i64 %21, 0, !dbg !11113
  br i1 %tobool32, label %if.then33, label %if.end34, !dbg !11114

if.then33:                                        ; preds = %if.end
  br label %for.inc, !dbg !11115

if.end34:                                         ; preds = %if.end
  %22 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11116
  %cleanup_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %22, i32 0, i32 4, !dbg !11117
  call void @complete_all(%struct.completion* %cleanup_done) #9, !dbg !11118
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on35, metadata !11119, metadata !DIExpression()), !dbg !11121
  %23 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11121
  %hw_done = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %23, i32 0, i32 3, !dbg !11121
  %call = call zeroext i1 @try_wait_for_completion(%struct.completion* %hw_done) #9, !dbg !11121
  %lnot36 = xor i1 %call, true, !dbg !11121
  %lnot38 = xor i1 %lnot36, true, !dbg !11121
  %lnot40 = xor i1 %lnot38, true, !dbg !11121
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !11121
  store i32 %lnot.ext41, i32* %__ret_warn_on35, align 4, !dbg !11121
  %24 = load i32, i32* %__ret_warn_on35, align 4, !dbg !11122
  %tobool42 = icmp ne i32 %24, 0, !dbg !11122
  %lnot43 = xor i1 %tobool42, true, !dbg !11122
  %lnot45 = xor i1 %lnot43, true, !dbg !11122
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !11122
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !11122
  %tobool48 = icmp ne i64 %conv47, 0, !dbg !11122
  br i1 %tobool48, label %if.then49, label %if.end58, !dbg !11121

if.then49:                                        ; preds = %if.end34
  br label %do.body50, !dbg !11122

do.body50:                                        ; preds = %if.then49
  br label %do.body51, !dbg !11124

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !11126

do.end52:                                         ; preds = %do.body51
  br label %do.body53, !dbg !11124

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2365, i32 2305, i64 12) #8, !dbg !11128, !srcloc !11130
  br label %do.end54, !dbg !11128

do.end54:                                         ; preds = %do.body53
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 296) #8, !dbg !11131, !srcloc !11133
  br label %do.body55, !dbg !11124

do.body55:                                        ; preds = %do.end54
  br label %do.end56, !dbg !11134

do.end56:                                         ; preds = %do.body55
  br label %do.end57, !dbg !11124

do.end57:                                         ; preds = %do.end56
  br label %if.end58, !dbg !11124

if.end58:                                         ; preds = %do.end57, %if.end34
  %25 = load i32, i32* %__ret_warn_on35, align 4, !dbg !11121
  %tobool60 = icmp ne i32 %25, 0, !dbg !11121
  %lnot61 = xor i1 %tobool60, true, !dbg !11121
  %lnot63 = xor i1 %lnot61, true, !dbg !11121
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !11121
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !11121
  store i64 %conv65, i64* %tmp59, align 8, !dbg !11122
  %26 = load i64, i64* %tmp59, align 8, !dbg !11121
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11136
  %commit_lock = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %27, i32 0, i32 23, !dbg !11137
  store %struct.spinlock* %commit_lock, %struct.spinlock** %lock.addr.i, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11138, !srcloc !10247
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11139
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !11139
  %rlock.i = bitcast %union.anon.1* %29 to %struct.raw_spinlock*, !dbg !11139
  %30 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %commit, align 8, !dbg !11140
  %commit_entry = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %30, i32 0, i32 5, !dbg !11141
  call void @list_del(%struct.list_head* %commit_entry) #9, !dbg !11142
  %31 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11143
  %commit_lock66 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %31, i32 0, i32 23, !dbg !11144
  store %struct.spinlock* %commit_lock66, %struct.spinlock** %lock.addr.i107, align 8
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !11145, !srcloc !10260
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i107, align 8, !dbg !11146
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !11146
  %rlock.i108 = bitcast %union.anon.1* %33 to %struct.raw_spinlock*, !dbg !11146
  br label %if.end67

if.end67:                                         ; preds = %if.end58, %if.then
  br label %for.inc, !dbg !11089

for.inc:                                          ; preds = %if.end67, %if.then33
  %34 = load i32, i32* %i, align 4, !dbg !11088
  %inc = add i32 %34, 1, !dbg !11088
  store i32 %inc, i32* %i, align 4, !dbg !11088
  br label %for.cond, !dbg !11088, !llvm.loop !11147

for.end:                                          ; preds = %for.cond
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11149
  %fake_commit = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %35, i32 0, i32 10, !dbg !11151
  %36 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit, align 8, !dbg !11151
  %tobool68 = icmp ne %struct.drm_crtc_commit* %36, null, !dbg !11149
  br i1 %tobool68, label %if.then69, label %if.end106, !dbg !11152

if.then69:                                        ; preds = %for.end
  %37 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11153
  %fake_commit70 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %37, i32 0, i32 10, !dbg !11155
  %38 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit70, align 8, !dbg !11155
  %cleanup_done71 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %38, i32 0, i32 4, !dbg !11156
  call void @complete_all(%struct.completion* %cleanup_done71) #9, !dbg !11157
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on72, metadata !11158, metadata !DIExpression()), !dbg !11160
  %39 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state.addr, align 8, !dbg !11160
  %fake_commit73 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %39, i32 0, i32 10, !dbg !11160
  %40 = load %struct.drm_crtc_commit*, %struct.drm_crtc_commit** %fake_commit73, align 8, !dbg !11160
  %hw_done74 = getelementptr inbounds %struct.drm_crtc_commit, %struct.drm_crtc_commit* %40, i32 0, i32 3, !dbg !11160
  %call75 = call zeroext i1 @try_wait_for_completion(%struct.completion* %hw_done74) #9, !dbg !11160
  %lnot76 = xor i1 %call75, true, !dbg !11160
  %lnot78 = xor i1 %lnot76, true, !dbg !11160
  %lnot80 = xor i1 %lnot78, true, !dbg !11160
  %lnot.ext81 = zext i1 %lnot80 to i32, !dbg !11160
  store i32 %lnot.ext81, i32* %__ret_warn_on72, align 4, !dbg !11160
  %41 = load i32, i32* %__ret_warn_on72, align 4, !dbg !11161
  %tobool82 = icmp ne i32 %41, 0, !dbg !11161
  %lnot83 = xor i1 %tobool82, true, !dbg !11161
  %lnot85 = xor i1 %lnot83, true, !dbg !11161
  %lnot.ext86 = zext i1 %lnot85 to i32, !dbg !11161
  %conv87 = sext i32 %lnot.ext86 to i64, !dbg !11161
  %tobool88 = icmp ne i64 %conv87, 0, !dbg !11161
  br i1 %tobool88, label %if.then89, label %if.end98, !dbg !11160

if.then89:                                        ; preds = %if.then69
  br label %do.body90, !dbg !11161

do.body90:                                        ; preds = %if.then89
  br label %do.body91, !dbg !11163

do.body91:                                        ; preds = %do.body90
  br label %do.end92, !dbg !11165

do.end92:                                         ; preds = %do.body91
  br label %do.body93, !dbg !11163

do.body93:                                        ; preds = %do.end92
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2374, i32 2305, i64 12) #8, !dbg !11167, !srcloc !11169
  br label %do.end94, !dbg !11167

do.end94:                                         ; preds = %do.body93
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 297) #8, !dbg !11170, !srcloc !11172
  br label %do.body95, !dbg !11163

do.body95:                                        ; preds = %do.end94
  br label %do.end96, !dbg !11173

do.end96:                                         ; preds = %do.body95
  br label %do.end97, !dbg !11163

do.end97:                                         ; preds = %do.end96
  br label %if.end98, !dbg !11163

if.end98:                                         ; preds = %do.end97, %if.then69
  %42 = load i32, i32* %__ret_warn_on72, align 4, !dbg !11160
  %tobool100 = icmp ne i32 %42, 0, !dbg !11160
  %lnot101 = xor i1 %tobool100, true, !dbg !11160
  %lnot103 = xor i1 %lnot101, true, !dbg !11160
  %lnot.ext104 = zext i1 %lnot103 to i32, !dbg !11160
  %conv105 = sext i32 %lnot.ext104 to i64, !dbg !11160
  store i64 %conv105, i64* %tmp99, align 8, !dbg !11161
  %43 = load i64, i64* %tmp99, align 8, !dbg !11160
  br label %if.end106, !dbg !11175

if.end106:                                        ; preds = %if.end98, %for.end
  ret void, !dbg !11176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !11177 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !11178, metadata !DIExpression()), !dbg !11179
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11180
  call void @__list_del_entry(%struct.list_head* %0) #9, !dbg !11181
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11182
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !11183
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !11184
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !11185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !11186
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !11187
  ret void, !dbg !11188
}

; Function Attrs: noredzone
declare dso_local i32 @drm_writeback_prepare_job(%struct.drm_writeback_job*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_atomic_plane_disabling(%struct.drm_plane_state* %old_plane_state, %struct.drm_plane_state* %new_plane_state) #0 !dbg !11189 {
entry:
  %old_plane_state.addr = alloca %struct.drm_plane_state*, align 8
  %new_plane_state.addr = alloca %struct.drm_plane_state*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_plane_state* %old_plane_state, %struct.drm_plane_state** %old_plane_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state.addr, metadata !11193, metadata !DIExpression()), !dbg !11194
  store %struct.drm_plane_state* %new_plane_state, %struct.drm_plane_state** %new_plane_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state.addr, metadata !11195, metadata !DIExpression()), !dbg !11196
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11197, metadata !DIExpression()), !dbg !11199
  %0 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state.addr, align 8, !dbg !11199
  %crtc = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %0, i32 0, i32 1, !dbg !11199
  %1 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11199
  %cmp = icmp eq %struct.drm_crtc* %1, null, !dbg !11199
  br i1 %cmp, label %land.lhs.true, label %lor.rhs, !dbg !11199

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state.addr, align 8, !dbg !11199
  %fb = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %2, i32 0, i32 2, !dbg !11199
  %3 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb, align 8, !dbg !11199
  %cmp1 = icmp ne %struct.drm_framebuffer* %3, null, !dbg !11199
  br i1 %cmp1, label %lor.end, label %lor.rhs, !dbg !11199

lor.rhs:                                          ; preds = %land.lhs.true, %entry
  %4 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state.addr, align 8, !dbg !11199
  %crtc2 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %4, i32 0, i32 1, !dbg !11199
  %5 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc2, align 8, !dbg !11199
  %cmp3 = icmp ne %struct.drm_crtc* %5, null, !dbg !11199
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !11199

land.rhs:                                         ; preds = %lor.rhs
  %6 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state.addr, align 8, !dbg !11199
  %fb4 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %6, i32 0, i32 2, !dbg !11199
  %7 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb4, align 8, !dbg !11199
  %cmp5 = icmp eq %struct.drm_framebuffer* %7, null, !dbg !11199
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %8 = phi i1 [ false, %lor.rhs ], [ %cmp5, %land.rhs ], !dbg !11200
  br label %lor.end, !dbg !11199

lor.end:                                          ; preds = %land.end, %land.lhs.true
  %9 = phi i1 [ true, %land.lhs.true ], [ %8, %land.end ]
  %lnot = xor i1 %9, true, !dbg !11199
  %lnot6 = xor i1 %lnot, true, !dbg !11199
  %lnot.ext = zext i1 %lnot6 to i32, !dbg !11199
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11199
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !11201
  %tobool = icmp ne i32 %10, 0, !dbg !11201
  %lnot7 = xor i1 %tobool, true, !dbg !11201
  %lnot9 = xor i1 %lnot7, true, !dbg !11201
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !11201
  %conv = sext i32 %lnot.ext10 to i64, !dbg !11201
  %tobool11 = icmp ne i64 %conv, 0, !dbg !11201
  br i1 %tobool11, label %if.then, label %if.end, !dbg !11199

if.then:                                          ; preds = %lor.end
  br label %do.body, !dbg !11201

do.body:                                          ; preds = %if.then
  br label %do.body12, !dbg !11203

do.body12:                                        ; preds = %do.body
  br label %do.end, !dbg !11205

do.end:                                           ; preds = %do.body12
  br label %do.body13, !dbg !11203

do.body13:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.51, i64 0, i64 0), i32 225, i32 2305, i64 12) #8, !dbg !11207, !srcloc !11209
  br label %do.end14, !dbg !11207

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 257) #8, !dbg !11210, !srcloc !11212
  br label %do.body15, !dbg !11203

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !11213

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !11203

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !11203

if.end:                                           ; preds = %do.end17, %lor.end
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !11199
  %tobool18 = icmp ne i32 %11, 0, !dbg !11199
  %lnot19 = xor i1 %tobool18, true, !dbg !11199
  %lnot21 = xor i1 %lnot19, true, !dbg !11199
  %lnot.ext22 = zext i1 %lnot21 to i32, !dbg !11199
  %conv23 = sext i32 %lnot.ext22 to i64, !dbg !11199
  store i64 %conv23, i64* %tmp, align 8, !dbg !11201
  %12 = load i64, i64* %tmp, align 8, !dbg !11199
  %13 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state.addr, align 8, !dbg !11215
  %crtc24 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %13, i32 0, i32 1, !dbg !11216
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc24, align 8, !dbg !11216
  %tobool25 = icmp ne %struct.drm_crtc* %14, null, !dbg !11215
  br i1 %tobool25, label %land.rhs26, label %land.end31, !dbg !11217

land.rhs26:                                       ; preds = %if.end
  %15 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state.addr, align 8, !dbg !11218
  %crtc27 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %15, i32 0, i32 1, !dbg !11219
  %16 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc27, align 8, !dbg !11219
  %tobool28 = icmp ne %struct.drm_crtc* %16, null, !dbg !11220
  %lnot29 = xor i1 %tobool28, true, !dbg !11220
  br label %land.end31

land.end31:                                       ; preds = %land.rhs26, %if.end
  %17 = phi i1 [ false, %if.end ], [ %lnot29, %land.rhs26 ], !dbg !11221
  ret i1 %17, !dbg !11222
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @plane_crtc_active(%struct.drm_plane_state* %state) #0 !dbg !11223 {
entry:
  %state.addr = alloca %struct.drm_plane_state*, align 8
  store %struct.drm_plane_state* %state, %struct.drm_plane_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %state.addr, metadata !11226, metadata !DIExpression()), !dbg !11227
  %0 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !11228
  %crtc = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %0, i32 0, i32 1, !dbg !11229
  %1 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11229
  %tobool = icmp ne %struct.drm_crtc* %1, null, !dbg !11228
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11230

land.rhs:                                         ; preds = %entry
  %2 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state.addr, align 8, !dbg !11231
  %crtc1 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %2, i32 0, i32 1, !dbg !11232
  %3 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc1, align 8, !dbg !11232
  %state2 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %3, i32 0, i32 21, !dbg !11233
  %4 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state2, align 8, !dbg !11233
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %4, i32 0, i32 2, !dbg !11234
  %5 = load i8, i8* %active, align 1, !dbg !11234
  %tobool3 = trunc i8 %5 to i1, !dbg !11234
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %6 = phi i1 [ false, %entry ], [ %tobool3, %land.rhs ], !dbg !11235
  ret i1 %6, !dbg !11236
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_commit_planes_on_crtc(%struct.drm_crtc_state* %old_crtc_state) #0 !dbg !11237 {
entry:
  %old_crtc_state.addr = alloca %struct.drm_crtc_state*, align 8
  %crtc_funcs = alloca %struct.drm_crtc_helper_funcs*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %old_state = alloca %struct.drm_atomic_state*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %plane_mask = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_plane*, align 8
  %old_plane_state = alloca %struct.drm_plane_state*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %plane_funcs = alloca %struct.drm_plane_helper_funcs*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp41 = alloca i64, align 8
  %__mptr64 = alloca i8*, align 8
  %tmp69 = alloca %struct.drm_plane*, align 8
  store %struct.drm_crtc_state* %old_crtc_state, %struct.drm_crtc_state** %old_crtc_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state.addr, metadata !11240, metadata !DIExpression()), !dbg !11241
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %crtc_funcs, metadata !11242, metadata !DIExpression()), !dbg !11243
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !11244, metadata !DIExpression()), !dbg !11245
  %0 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11246
  %crtc1 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %0, i32 0, i32 0, !dbg !11247
  %1 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc1, align 8, !dbg !11247
  store %struct.drm_crtc* %1, %struct.drm_crtc** %crtc, align 8, !dbg !11245
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %old_state, metadata !11248, metadata !DIExpression()), !dbg !11249
  %2 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11250
  %state = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %2, i32 0, i32 19, !dbg !11251
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11251
  store %struct.drm_atomic_state* %3, %struct.drm_atomic_state** %old_state, align 8, !dbg !11249
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !11252, metadata !DIExpression()), !dbg !11253
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state, align 8, !dbg !11254
  %5 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11255
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %4, %struct.drm_crtc* %5) #9, !dbg !11256
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !11253
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !11257, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.declare(metadata i32* %plane_mask, metadata !11259, metadata !DIExpression()), !dbg !11260
  %6 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11261
  %plane_mask2 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %6, i32 0, i32 4, !dbg !11262
  %7 = load i32, i32* %plane_mask2, align 4, !dbg !11262
  store i32 %7, i32* %plane_mask, align 4, !dbg !11263
  %8 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !11264
  %plane_mask3 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %8, i32 0, i32 4, !dbg !11265
  %9 = load i32, i32* %plane_mask3, align 4, !dbg !11265
  %10 = load i32, i32* %plane_mask, align 4, !dbg !11266
  %or = or i32 %10, %9, !dbg !11266
  store i32 %or, i32* %plane_mask, align 4, !dbg !11266
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11267
  %helper_private = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %11, i32 0, i32 19, !dbg !11268
  %12 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private, align 8, !dbg !11268
  store %struct.drm_crtc_helper_funcs* %12, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11269
  %13 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11270
  %tobool = icmp ne %struct.drm_crtc_helper_funcs* %13, null, !dbg !11270
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11272

land.lhs.true:                                    ; preds = %entry
  %14 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11273
  %atomic_begin = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %14, i32 0, i32 11, !dbg !11274
  %15 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_begin, align 8, !dbg !11274
  %tobool4 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %15, null, !dbg !11273
  br i1 %tobool4, label %if.then, label %if.end, !dbg !11275

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11276
  %atomic_begin5 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %16, i32 0, i32 11, !dbg !11277
  %17 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_begin5, align 8, !dbg !11277
  %18 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11278
  %19 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11279
  call void %17(%struct.drm_crtc* %18, %struct.drm_crtc_state* %19) #9, !dbg !11276
  br label %if.end, !dbg !11276

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11280, metadata !DIExpression()), !dbg !11283
  %20 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11283
  %dev = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %20, i32 0, i32 0, !dbg !11283
  %21 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !11283
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %21, i32 0, i32 35, !dbg !11283
  %plane_list = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 18, !dbg !11283
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %plane_list, i32 0, i32 0, !dbg !11283
  %22 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11283
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !11283
  store i8* %23, i8** %__mptr, align 8, !dbg !11283
  br label %do.body, !dbg !11283

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11284

do.end:                                           ; preds = %do.body
  %24 = load i8*, i8** %__mptr, align 8, !dbg !11283
  %add.ptr = getelementptr i8, i8* %24, i64 -8, !dbg !11283
  %25 = bitcast i8* %add.ptr to %struct.drm_plane*, !dbg !11283
  store %struct.drm_plane* %25, %struct.drm_plane** %tmp, align 8, !dbg !11284
  %26 = load %struct.drm_plane*, %struct.drm_plane** %tmp, align 8, !dbg !11283
  store %struct.drm_plane* %26, %struct.drm_plane** %plane, align 8, !dbg !11286
  br label %for.cond, !dbg !11286

for.cond:                                         ; preds = %do.end68, %do.end
  %27 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11287
  %head = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %27, i32 0, i32 1, !dbg !11287
  %28 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11287
  %dev6 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %28, i32 0, i32 0, !dbg !11287
  %29 = load %struct.drm_device*, %struct.drm_device** %dev6, align 8, !dbg !11287
  %mode_config7 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %29, i32 0, i32 35, !dbg !11287
  %plane_list8 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config7, i32 0, i32 18, !dbg !11287
  %cmp = icmp eq %struct.list_head* %head, %plane_list8, !dbg !11287
  %lnot = xor i1 %cmp, true, !dbg !11287
  br i1 %lnot, label %for.body, label %for.end, !dbg !11286

for.body:                                         ; preds = %for.cond
  %30 = load i32, i32* %plane_mask, align 4, !dbg !11289
  %31 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11289
  %call9 = call i32 @drm_plane_mask(%struct.drm_plane* %31) #9, !dbg !11289
  %and = and i32 %30, %call9, !dbg !11289
  %tobool10 = icmp ne i32 %and, 0, !dbg !11289
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !11287

if.then11:                                        ; preds = %for.body
  br label %if.end63, !dbg !11291

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %old_plane_state, metadata !11293, metadata !DIExpression()), !dbg !11295
  %32 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state, align 8, !dbg !11296
  %33 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11297
  %call12 = call %struct.drm_plane_state* @drm_atomic_get_old_plane_state(%struct.drm_atomic_state* %32, %struct.drm_plane* %33) #9, !dbg !11298
  store %struct.drm_plane_state* %call12, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11295
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !11299, metadata !DIExpression()), !dbg !11300
  %34 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %old_state, align 8, !dbg !11301
  %35 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11302
  %call13 = call %struct.drm_plane_state* @drm_atomic_get_new_plane_state(%struct.drm_atomic_state* %34, %struct.drm_plane* %35) #9, !dbg !11303
  store %struct.drm_plane_state* %call13, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !11300
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %plane_funcs, metadata !11304, metadata !DIExpression()), !dbg !11305
  %36 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11306
  %helper_private14 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %36, i32 0, i32 18, !dbg !11307
  %37 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private14, align 8, !dbg !11307
  store %struct.drm_plane_helper_funcs* %37, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11308
  %38 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11309
  %tobool15 = icmp ne %struct.drm_plane_state* %38, null, !dbg !11309
  br i1 %tobool15, label %lor.lhs.false, label %if.then17, !dbg !11311

lor.lhs.false:                                    ; preds = %if.else
  %39 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11312
  %tobool16 = icmp ne %struct.drm_plane_helper_funcs* %39, null, !dbg !11312
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !11313

if.then17:                                        ; preds = %lor.lhs.false, %if.else
  br label %for.inc, !dbg !11314

if.end18:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11315, metadata !DIExpression()), !dbg !11317
  %40 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !11317
  %crtc19 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %40, i32 0, i32 1, !dbg !11317
  %41 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc19, align 8, !dbg !11317
  %tobool20 = icmp ne %struct.drm_crtc* %41, null, !dbg !11317
  br i1 %tobool20, label %land.rhs, label %land.end, !dbg !11317

land.rhs:                                         ; preds = %if.end18
  %42 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !11317
  %crtc21 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %42, i32 0, i32 1, !dbg !11317
  %43 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc21, align 8, !dbg !11317
  %44 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11317
  %cmp22 = icmp ne %struct.drm_crtc* %43, %44, !dbg !11317
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end18
  %45 = phi i1 [ false, %if.end18 ], [ %cmp22, %land.rhs ], !dbg !11318
  %lnot23 = xor i1 %45, true, !dbg !11317
  %lnot24 = xor i1 %lnot23, true, !dbg !11317
  %lnot.ext = zext i1 %lnot24 to i32, !dbg !11317
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11317
  %46 = load i32, i32* %__ret_warn_on, align 4, !dbg !11319
  %tobool25 = icmp ne i32 %46, 0, !dbg !11319
  %lnot26 = xor i1 %tobool25, true, !dbg !11319
  %lnot28 = xor i1 %lnot26, true, !dbg !11319
  %lnot.ext29 = zext i1 %lnot28 to i32, !dbg !11319
  %conv = sext i32 %lnot.ext29 to i64, !dbg !11319
  %tobool30 = icmp ne i64 %conv, 0, !dbg !11319
  br i1 %tobool30, label %if.then31, label %if.end40, !dbg !11317

if.then31:                                        ; preds = %land.end
  br label %do.body32, !dbg !11319

do.body32:                                        ; preds = %if.then31
  br label %do.body33, !dbg !11321

do.body33:                                        ; preds = %do.body32
  br label %do.end34, !dbg !11323

do.end34:                                         ; preds = %do.body33
  br label %do.body35, !dbg !11321

do.body35:                                        ; preds = %do.end34
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2621, i32 2305, i64 12) #8, !dbg !11325, !srcloc !11327
  br label %do.end36, !dbg !11325

do.end36:                                         ; preds = %do.body35
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 300) #8, !dbg !11328, !srcloc !11330
  br label %do.body37, !dbg !11321

do.body37:                                        ; preds = %do.end36
  br label %do.end38, !dbg !11331

do.end38:                                         ; preds = %do.body37
  br label %do.end39, !dbg !11321

do.end39:                                         ; preds = %do.end38
  br label %if.end40, !dbg !11321

if.end40:                                         ; preds = %do.end39, %land.end
  %47 = load i32, i32* %__ret_warn_on, align 4, !dbg !11317
  %tobool42 = icmp ne i32 %47, 0, !dbg !11317
  %lnot43 = xor i1 %tobool42, true, !dbg !11317
  %lnot45 = xor i1 %lnot43, true, !dbg !11317
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !11317
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !11317
  store i64 %conv47, i64* %tmp41, align 8, !dbg !11319
  %48 = load i64, i64* %tmp41, align 8, !dbg !11317
  %49 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11333
  %50 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !11335
  %call48 = call zeroext i1 @drm_atomic_plane_disabling(%struct.drm_plane_state* %49, %struct.drm_plane_state* %50) #9, !dbg !11336
  br i1 %call48, label %land.lhs.true50, label %if.else54, !dbg !11337

land.lhs.true50:                                  ; preds = %if.end40
  %51 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11338
  %atomic_disable = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %51, i32 0, i32 4, !dbg !11339
  %52 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_disable, align 8, !dbg !11339
  %tobool51 = icmp ne void (%struct.drm_plane*, %struct.drm_plane_state*)* %52, null, !dbg !11338
  br i1 %tobool51, label %if.then52, label %if.else54, !dbg !11340

if.then52:                                        ; preds = %land.lhs.true50
  %53 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11341
  %atomic_disable53 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %53, i32 0, i32 4, !dbg !11342
  %54 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_disable53, align 8, !dbg !11342
  %55 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11343
  %56 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11344
  call void %54(%struct.drm_plane* %55, %struct.drm_plane_state* %56) #9, !dbg !11341
  br label %if.end62, !dbg !11341

if.else54:                                        ; preds = %land.lhs.true50, %if.end40
  %57 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !11345
  %crtc55 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %57, i32 0, i32 1, !dbg !11347
  %58 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc55, align 8, !dbg !11347
  %tobool56 = icmp ne %struct.drm_crtc* %58, null, !dbg !11345
  br i1 %tobool56, label %if.then60, label %lor.lhs.false57, !dbg !11348

lor.lhs.false57:                                  ; preds = %if.else54
  %59 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11349
  %60 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !11350
  %call58 = call zeroext i1 @drm_atomic_plane_disabling(%struct.drm_plane_state* %59, %struct.drm_plane_state* %60) #9, !dbg !11351
  br i1 %call58, label %if.then60, label %if.end61, !dbg !11352

if.then60:                                        ; preds = %lor.lhs.false57, %if.else54
  %61 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11353
  %atomic_update = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %61, i32 0, i32 3, !dbg !11354
  %62 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_update, align 8, !dbg !11354
  %63 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11355
  %64 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_plane_state, align 8, !dbg !11356
  call void %62(%struct.drm_plane* %63, %struct.drm_plane_state* %64) #9, !dbg !11353
  br label %if.end61, !dbg !11353

if.end61:                                         ; preds = %if.then60, %lor.lhs.false57
  br label %if.end62

if.end62:                                         ; preds = %if.end61, %if.then52
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then11
  br label %for.inc, !dbg !11289

for.inc:                                          ; preds = %if.end63, %if.then17
  call void @llvm.dbg.declare(metadata i8** %__mptr64, metadata !11357, metadata !DIExpression()), !dbg !11359
  %65 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11359
  %head65 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %65, i32 0, i32 1, !dbg !11359
  %next66 = getelementptr inbounds %struct.list_head, %struct.list_head* %head65, i32 0, i32 0, !dbg !11359
  %66 = load %struct.list_head*, %struct.list_head** %next66, align 8, !dbg !11359
  %67 = bitcast %struct.list_head* %66 to i8*, !dbg !11359
  store i8* %67, i8** %__mptr64, align 8, !dbg !11359
  br label %do.body67, !dbg !11359

do.body67:                                        ; preds = %for.inc
  br label %do.end68, !dbg !11360

do.end68:                                         ; preds = %do.body67
  %68 = load i8*, i8** %__mptr64, align 8, !dbg !11359
  %add.ptr70 = getelementptr i8, i8* %68, i64 -8, !dbg !11359
  %69 = bitcast i8* %add.ptr70 to %struct.drm_plane*, !dbg !11359
  store %struct.drm_plane* %69, %struct.drm_plane** %tmp69, align 8, !dbg !11360
  %70 = load %struct.drm_plane*, %struct.drm_plane** %tmp69, align 8, !dbg !11359
  store %struct.drm_plane* %70, %struct.drm_plane** %plane, align 8, !dbg !11287
  br label %for.cond, !dbg !11287, !llvm.loop !11362

for.end:                                          ; preds = %for.cond
  %71 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11364
  %tobool71 = icmp ne %struct.drm_crtc_helper_funcs* %71, null, !dbg !11364
  br i1 %tobool71, label %land.lhs.true72, label %if.end76, !dbg !11366

land.lhs.true72:                                  ; preds = %for.end
  %72 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11367
  %atomic_flush = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %72, i32 0, i32 12, !dbg !11368
  %73 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_flush, align 8, !dbg !11368
  %tobool73 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %73, null, !dbg !11367
  br i1 %tobool73, label %if.then74, label %if.end76, !dbg !11369

if.then74:                                        ; preds = %land.lhs.true72
  %74 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11370
  %atomic_flush75 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %74, i32 0, i32 12, !dbg !11371
  %75 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_flush75, align 8, !dbg !11371
  %76 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11372
  %77 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11373
  call void %75(%struct.drm_crtc* %76, %struct.drm_crtc_state* %77) #9, !dbg !11370
  br label %if.end76, !dbg !11370

if.end76:                                         ; preds = %if.then74, %land.lhs.true72, %for.end
  ret void, !dbg !11374
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_plane_mask(%struct.drm_plane* %plane) #0 !dbg !11375 {
entry:
  %plane.addr = alloca %struct.drm_plane*, align 8
  store %struct.drm_plane* %plane, %struct.drm_plane** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane.addr, metadata !11380, metadata !DIExpression()), !dbg !11381
  %0 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11382
  %call = call i32 @drm_plane_index(%struct.drm_plane* %0) #9, !dbg !11383
  %shl = shl i32 1, %call, !dbg !11384
  ret i32 %shl, !dbg !11385
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_plane_state* @drm_atomic_get_old_plane_state(%struct.drm_atomic_state* %state, %struct.drm_plane* %plane) #0 !dbg !11386 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %plane.addr = alloca %struct.drm_plane*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !11387, metadata !DIExpression()), !dbg !11388
  store %struct.drm_plane* %plane, %struct.drm_plane** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane.addr, metadata !11389, metadata !DIExpression()), !dbg !11390
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11391
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 3, !dbg !11392
  %1 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !11392
  %2 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11393
  %call = call i32 @drm_plane_index(%struct.drm_plane* %2) #9, !dbg !11394
  %idxprom = zext i32 %call to i64, !dbg !11391
  %arrayidx = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %1, i64 %idxprom, !dbg !11391
  %old_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx, i32 0, i32 2, !dbg !11395
  %3 = load %struct.drm_plane_state*, %struct.drm_plane_state** %old_state, align 8, !dbg !11395
  ret %struct.drm_plane_state* %3, !dbg !11396
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_disable_planes_on_crtc(%struct.drm_crtc_state* %old_crtc_state, i1 zeroext %atomic) #0 !dbg !11397 {
entry:
  %old_crtc_state.addr = alloca %struct.drm_crtc_state*, align 8
  %atomic.addr = alloca i8, align 1
  %crtc = alloca %struct.drm_crtc*, align 8
  %crtc_funcs = alloca %struct.drm_crtc_helper_funcs*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_plane*, align 8
  %plane_funcs = alloca %struct.drm_plane_helper_funcs*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp36 = alloca i64, align 8
  %__mptr49 = alloca i8*, align 8
  %tmp54 = alloca %struct.drm_plane*, align 8
  store %struct.drm_crtc_state* %old_crtc_state, %struct.drm_crtc_state** %old_crtc_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_crtc_state.addr, metadata !11400, metadata !DIExpression()), !dbg !11401
  %frombool = zext i1 %atomic to i8
  store i8 %frombool, i8* %atomic.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %atomic.addr, metadata !11402, metadata !DIExpression()), !dbg !11403
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !11404, metadata !DIExpression()), !dbg !11405
  %0 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11406
  %crtc1 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %0, i32 0, i32 0, !dbg !11407
  %1 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc1, align 8, !dbg !11407
  store %struct.drm_crtc* %1, %struct.drm_crtc** %crtc, align 8, !dbg !11405
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_helper_funcs** %crtc_funcs, metadata !11408, metadata !DIExpression()), !dbg !11409
  %2 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11410
  %helper_private = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %2, i32 0, i32 19, !dbg !11411
  %3 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %helper_private, align 8, !dbg !11411
  store %struct.drm_crtc_helper_funcs* %3, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11409
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !11412, metadata !DIExpression()), !dbg !11413
  %4 = load i8, i8* %atomic.addr, align 1, !dbg !11414
  %tobool = trunc i8 %4 to i1, !dbg !11414
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !11416

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11417
  %tobool2 = icmp ne %struct.drm_crtc_helper_funcs* %5, null, !dbg !11417
  br i1 %tobool2, label %land.lhs.true3, label %if.end, !dbg !11418

land.lhs.true3:                                   ; preds = %land.lhs.true
  %6 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11419
  %atomic_begin = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %6, i32 0, i32 11, !dbg !11420
  %7 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_begin, align 8, !dbg !11420
  %tobool4 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %7, null, !dbg !11419
  br i1 %tobool4, label %if.then, label %if.end, !dbg !11421

if.then:                                          ; preds = %land.lhs.true3
  %8 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11422
  %atomic_begin5 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %8, i32 0, i32 11, !dbg !11423
  %9 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_begin5, align 8, !dbg !11423
  %10 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11424
  call void %9(%struct.drm_crtc* %10, %struct.drm_crtc_state* null) #9, !dbg !11422
  br label %if.end, !dbg !11422

if.end:                                           ; preds = %if.then, %land.lhs.true3, %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11425, metadata !DIExpression()), !dbg !11428
  %11 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11428
  %state = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %11, i32 0, i32 19, !dbg !11428
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11428
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 1, !dbg !11428
  %13 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !11428
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %13, i32 0, i32 35, !dbg !11428
  %plane_list = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 18, !dbg !11428
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %plane_list, i32 0, i32 0, !dbg !11428
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11428
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !11428
  store i8* %15, i8** %__mptr, align 8, !dbg !11428
  br label %do.body, !dbg !11428

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11429

do.end:                                           ; preds = %do.body
  %16 = load i8*, i8** %__mptr, align 8, !dbg !11428
  %add.ptr = getelementptr i8, i8* %16, i64 -8, !dbg !11428
  %17 = bitcast i8* %add.ptr to %struct.drm_plane*, !dbg !11428
  store %struct.drm_plane* %17, %struct.drm_plane** %tmp, align 8, !dbg !11429
  %18 = load %struct.drm_plane*, %struct.drm_plane** %tmp, align 8, !dbg !11428
  store %struct.drm_plane* %18, %struct.drm_plane** %plane, align 8, !dbg !11431
  br label %for.cond, !dbg !11431

for.cond:                                         ; preds = %do.end53, %do.end
  %19 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11432
  %head = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %19, i32 0, i32 1, !dbg !11432
  %20 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11432
  %state6 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %20, i32 0, i32 19, !dbg !11432
  %21 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state6, align 8, !dbg !11432
  %dev7 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %21, i32 0, i32 1, !dbg !11432
  %22 = load %struct.drm_device*, %struct.drm_device** %dev7, align 8, !dbg !11432
  %mode_config8 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %22, i32 0, i32 35, !dbg !11432
  %plane_list9 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config8, i32 0, i32 18, !dbg !11432
  %cmp = icmp eq %struct.list_head* %head, %plane_list9, !dbg !11432
  %lnot = xor i1 %cmp, true, !dbg !11432
  br i1 %lnot, label %for.body, label %for.end, !dbg !11431

for.body:                                         ; preds = %for.cond
  %23 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_crtc_state.addr, align 8, !dbg !11434
  %plane_mask = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %23, i32 0, i32 4, !dbg !11434
  %24 = load i32, i32* %plane_mask, align 4, !dbg !11434
  %25 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11434
  %call = call i32 @drm_plane_mask(%struct.drm_plane* %25) #9, !dbg !11434
  %and = and i32 %24, %call, !dbg !11434
  %tobool10 = icmp ne i32 %and, 0, !dbg !11434
  br i1 %tobool10, label %if.else, label %if.then11, !dbg !11432

if.then11:                                        ; preds = %for.body
  br label %if.end48, !dbg !11436

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.drm_plane_helper_funcs** %plane_funcs, metadata !11438, metadata !DIExpression()), !dbg !11440
  %26 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11441
  %helper_private12 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %26, i32 0, i32 18, !dbg !11442
  %27 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %helper_private12, align 8, !dbg !11442
  store %struct.drm_plane_helper_funcs* %27, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11440
  %28 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11443
  %tobool13 = icmp ne %struct.drm_plane_helper_funcs* %28, null, !dbg !11443
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !11445

if.then14:                                        ; preds = %if.else
  br label %for.inc, !dbg !11446

if.end15:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !11447, metadata !DIExpression()), !dbg !11449
  %29 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11449
  %atomic_disable = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %29, i32 0, i32 4, !dbg !11449
  %30 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_disable, align 8, !dbg !11449
  %tobool16 = icmp ne void (%struct.drm_plane*, %struct.drm_plane_state*)* %30, null, !dbg !11449
  %lnot17 = xor i1 %tobool16, true, !dbg !11449
  %lnot18 = xor i1 %lnot17, true, !dbg !11449
  %lnot19 = xor i1 %lnot18, true, !dbg !11449
  %lnot.ext = zext i1 %lnot19 to i32, !dbg !11449
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !11449
  %31 = load i32, i32* %__ret_warn_on, align 4, !dbg !11450
  %tobool20 = icmp ne i32 %31, 0, !dbg !11450
  %lnot21 = xor i1 %tobool20, true, !dbg !11450
  %lnot23 = xor i1 %lnot21, true, !dbg !11450
  %lnot.ext24 = zext i1 %lnot23 to i32, !dbg !11450
  %conv = sext i32 %lnot.ext24 to i64, !dbg !11450
  %tobool25 = icmp ne i64 %conv, 0, !dbg !11450
  br i1 %tobool25, label %if.then26, label %if.end35, !dbg !11449

if.then26:                                        ; preds = %if.end15
  br label %do.body27, !dbg !11450

do.body27:                                        ; preds = %if.then26
  br label %do.body28, !dbg !11452

do.body28:                                        ; preds = %do.body27
  br label %do.end29, !dbg !11454

do.end29:                                         ; preds = %do.body28
  br label %do.body30, !dbg !11452

do.body30:                                        ; preds = %do.end29
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 2671, i32 2305, i64 12) #8, !dbg !11456, !srcloc !11458
  br label %do.end31, !dbg !11456

do.end31:                                         ; preds = %do.body30
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 303) #8, !dbg !11459, !srcloc !11461
  br label %do.body32, !dbg !11452

do.body32:                                        ; preds = %do.end31
  br label %do.end33, !dbg !11462

do.end33:                                         ; preds = %do.body32
  br label %do.end34, !dbg !11452

do.end34:                                         ; preds = %do.end33
  br label %if.end35, !dbg !11452

if.end35:                                         ; preds = %do.end34, %if.end15
  %32 = load i32, i32* %__ret_warn_on, align 4, !dbg !11449
  %tobool37 = icmp ne i32 %32, 0, !dbg !11449
  %lnot38 = xor i1 %tobool37, true, !dbg !11449
  %lnot40 = xor i1 %lnot38, true, !dbg !11449
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !11449
  %conv42 = sext i32 %lnot.ext41 to i64, !dbg !11449
  store i64 %conv42, i64* %tmp36, align 8, !dbg !11450
  %33 = load i64, i64* %tmp36, align 8, !dbg !11449
  %34 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11464
  %atomic_disable43 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %34, i32 0, i32 4, !dbg !11466
  %35 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_disable43, align 8, !dbg !11466
  %tobool44 = icmp ne void (%struct.drm_plane*, %struct.drm_plane_state*)* %35, null, !dbg !11464
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !11467

if.then45:                                        ; preds = %if.end35
  %36 = load %struct.drm_plane_helper_funcs*, %struct.drm_plane_helper_funcs** %plane_funcs, align 8, !dbg !11468
  %atomic_disable46 = getelementptr inbounds %struct.drm_plane_helper_funcs, %struct.drm_plane_helper_funcs* %36, i32 0, i32 4, !dbg !11469
  %37 = load void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)** %atomic_disable46, align 8, !dbg !11469
  %38 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11470
  call void %37(%struct.drm_plane* %38, %struct.drm_plane_state* null) #9, !dbg !11468
  br label %if.end47, !dbg !11468

if.end47:                                         ; preds = %if.then45, %if.end35
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then11
  br label %for.inc, !dbg !11434

for.inc:                                          ; preds = %if.end48, %if.then14
  call void @llvm.dbg.declare(metadata i8** %__mptr49, metadata !11471, metadata !DIExpression()), !dbg !11473
  %39 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11473
  %head50 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %39, i32 0, i32 1, !dbg !11473
  %next51 = getelementptr inbounds %struct.list_head, %struct.list_head* %head50, i32 0, i32 0, !dbg !11473
  %40 = load %struct.list_head*, %struct.list_head** %next51, align 8, !dbg !11473
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !11473
  store i8* %41, i8** %__mptr49, align 8, !dbg !11473
  br label %do.body52, !dbg !11473

do.body52:                                        ; preds = %for.inc
  br label %do.end53, !dbg !11474

do.end53:                                         ; preds = %do.body52
  %42 = load i8*, i8** %__mptr49, align 8, !dbg !11473
  %add.ptr55 = getelementptr i8, i8* %42, i64 -8, !dbg !11473
  %43 = bitcast i8* %add.ptr55 to %struct.drm_plane*, !dbg !11473
  store %struct.drm_plane* %43, %struct.drm_plane** %tmp54, align 8, !dbg !11474
  %44 = load %struct.drm_plane*, %struct.drm_plane** %tmp54, align 8, !dbg !11473
  store %struct.drm_plane* %44, %struct.drm_plane** %plane, align 8, !dbg !11432
  br label %for.cond, !dbg !11432, !llvm.loop !11476

for.end:                                          ; preds = %for.cond
  %45 = load i8, i8* %atomic.addr, align 1, !dbg !11478
  %tobool56 = trunc i8 %45 to i1, !dbg !11478
  br i1 %tobool56, label %land.lhs.true58, label %if.end64, !dbg !11480

land.lhs.true58:                                  ; preds = %for.end
  %46 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11481
  %tobool59 = icmp ne %struct.drm_crtc_helper_funcs* %46, null, !dbg !11481
  br i1 %tobool59, label %land.lhs.true60, label %if.end64, !dbg !11482

land.lhs.true60:                                  ; preds = %land.lhs.true58
  %47 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11483
  %atomic_flush = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %47, i32 0, i32 12, !dbg !11484
  %48 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_flush, align 8, !dbg !11484
  %tobool61 = icmp ne void (%struct.drm_crtc*, %struct.drm_crtc_state*)* %48, null, !dbg !11483
  br i1 %tobool61, label %if.then62, label %if.end64, !dbg !11485

if.then62:                                        ; preds = %land.lhs.true60
  %49 = load %struct.drm_crtc_helper_funcs*, %struct.drm_crtc_helper_funcs** %crtc_funcs, align 8, !dbg !11486
  %atomic_flush63 = getelementptr inbounds %struct.drm_crtc_helper_funcs, %struct.drm_crtc_helper_funcs* %49, i32 0, i32 12, !dbg !11487
  %50 = load void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)** %atomic_flush63, align 8, !dbg !11487
  %51 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11488
  call void %50(%struct.drm_crtc* %51, %struct.drm_crtc_state* null) #9, !dbg !11486
  br label %if.end64, !dbg !11486

if.end64:                                         ; preds = %if.then62, %land.lhs.true60, %land.lhs.true58, %for.end
  ret void, !dbg !11489
}

; Function Attrs: noredzone
declare dso_local i32 @wait_for_completion_interruptible(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !11490 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !11493, metadata !DIExpression()), !dbg !11494
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !11495, metadata !DIExpression()), !dbg !11496
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !11497
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11498
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !11499
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !11500
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11500
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #9, !dbg !11501
  ret void, !dbg !11502
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_update_plane(%struct.drm_plane* %plane, %struct.drm_crtc* %crtc, %struct.drm_framebuffer* %fb, i32 %crtc_x, i32 %crtc_y, i32 %crtc_w, i32 %crtc_h, i32 %src_x, i32 %src_y, i32 %src_w, i32 %src_h, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !11503 {
entry:
  %retval = alloca i32, align 4
  %plane.addr = alloca %struct.drm_plane*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %fb.addr = alloca %struct.drm_framebuffer*, align 8
  %crtc_x.addr = alloca i32, align 4
  %crtc_y.addr = alloca i32, align 4
  %crtc_w.addr = alloca i32, align 4
  %crtc_h.addr = alloca i32, align 4
  %src_x.addr = alloca i32, align 4
  %src_y.addr = alloca i32, align 4
  %src_w.addr = alloca i32, align 4
  %src_h.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %plane_state = alloca %struct.drm_plane_state*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_plane* %plane, %struct.drm_plane** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane.addr, metadata !11504, metadata !DIExpression()), !dbg !11505
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !11506, metadata !DIExpression()), !dbg !11507
  store %struct.drm_framebuffer* %fb, %struct.drm_framebuffer** %fb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_framebuffer** %fb.addr, metadata !11508, metadata !DIExpression()), !dbg !11509
  store i32 %crtc_x, i32* %crtc_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crtc_x.addr, metadata !11510, metadata !DIExpression()), !dbg !11511
  store i32 %crtc_y, i32* %crtc_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crtc_y.addr, metadata !11512, metadata !DIExpression()), !dbg !11513
  store i32 %crtc_w, i32* %crtc_w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crtc_w.addr, metadata !11514, metadata !DIExpression()), !dbg !11515
  store i32 %crtc_h, i32* %crtc_h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %crtc_h.addr, metadata !11516, metadata !DIExpression()), !dbg !11517
  store i32 %src_x, i32* %src_x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_x.addr, metadata !11518, metadata !DIExpression()), !dbg !11519
  store i32 %src_y, i32* %src_y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_y.addr, metadata !11520, metadata !DIExpression()), !dbg !11521
  store i32 %src_w, i32* %src_w.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_w.addr, metadata !11522, metadata !DIExpression()), !dbg !11523
  store i32 %src_h, i32* %src_h.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %src_h.addr, metadata !11524, metadata !DIExpression()), !dbg !11525
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !11526, metadata !DIExpression()), !dbg !11527
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !11528, metadata !DIExpression()), !dbg !11529
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state, metadata !11530, metadata !DIExpression()), !dbg !11531
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11532, metadata !DIExpression()), !dbg !11533
  store i32 0, i32* %ret, align 4, !dbg !11533
  %0 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11534
  %dev = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %0, i32 0, i32 0, !dbg !11535
  %1 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !11535
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %1) #9, !dbg !11536
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !11537
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11538
  %tobool = icmp ne %struct.drm_atomic_state* %2, null, !dbg !11538
  br i1 %tobool, label %if.end, label %if.then, !dbg !11540

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11541
  br label %return, !dbg !11541

if.end:                                           ; preds = %entry
  %3 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !11542
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11543
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 9, !dbg !11544
  store %struct.drm_modeset_acquire_ctx* %3, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !11545
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11546
  %6 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11547
  %call1 = call %struct.drm_plane_state* @drm_atomic_get_plane_state(%struct.drm_atomic_state* %5, %struct.drm_plane* %6) #9, !dbg !11548
  store %struct.drm_plane_state* %call1, %struct.drm_plane_state** %plane_state, align 8, !dbg !11549
  %7 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11550
  %8 = bitcast %struct.drm_plane_state* %7 to i8*, !dbg !11550
  %call2 = call zeroext i1 @IS_ERR(i8* %8) #9, !dbg !11552
  br i1 %call2, label %if.then3, label %if.end5, !dbg !11553

if.then3:                                         ; preds = %if.end
  %9 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11554
  %10 = bitcast %struct.drm_plane_state* %9 to i8*, !dbg !11554
  %call4 = call i64 @PTR_ERR(i8* %10) #9, !dbg !11556
  %conv = trunc i64 %call4 to i32, !dbg !11556
  store i32 %conv, i32* %ret, align 4, !dbg !11557
  br label %fail, !dbg !11558

if.end5:                                          ; preds = %if.end
  %11 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11559
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !11560
  %call6 = call i32 @drm_atomic_set_crtc_for_plane(%struct.drm_plane_state* %11, %struct.drm_crtc* %12) #9, !dbg !11561
  store i32 %call6, i32* %ret, align 4, !dbg !11562
  %13 = load i32, i32* %ret, align 4, !dbg !11563
  %cmp = icmp ne i32 %13, 0, !dbg !11565
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !11566

if.then8:                                         ; preds = %if.end5
  br label %fail, !dbg !11567

if.end9:                                          ; preds = %if.end5
  %14 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11568
  %15 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb.addr, align 8, !dbg !11569
  call void @drm_atomic_set_fb_for_plane(%struct.drm_plane_state* %14, %struct.drm_framebuffer* %15) #9, !dbg !11570
  %16 = load i32, i32* %crtc_x.addr, align 4, !dbg !11571
  %17 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11572
  %crtc_x10 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %17, i32 0, i32 4, !dbg !11573
  store i32 %16, i32* %crtc_x10, align 8, !dbg !11574
  %18 = load i32, i32* %crtc_y.addr, align 4, !dbg !11575
  %19 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11576
  %crtc_y11 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %19, i32 0, i32 5, !dbg !11577
  store i32 %18, i32* %crtc_y11, align 4, !dbg !11578
  %20 = load i32, i32* %crtc_w.addr, align 4, !dbg !11579
  %21 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11580
  %crtc_w12 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %21, i32 0, i32 6, !dbg !11581
  store i32 %20, i32* %crtc_w12, align 8, !dbg !11582
  %22 = load i32, i32* %crtc_h.addr, align 4, !dbg !11583
  %23 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11584
  %crtc_h13 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %23, i32 0, i32 7, !dbg !11585
  store i32 %22, i32* %crtc_h13, align 4, !dbg !11586
  %24 = load i32, i32* %src_x.addr, align 4, !dbg !11587
  %25 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11588
  %src_x14 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %25, i32 0, i32 8, !dbg !11589
  store i32 %24, i32* %src_x14, align 8, !dbg !11590
  %26 = load i32, i32* %src_y.addr, align 4, !dbg !11591
  %27 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11592
  %src_y15 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %27, i32 0, i32 9, !dbg !11593
  store i32 %26, i32* %src_y15, align 4, !dbg !11594
  %28 = load i32, i32* %src_w.addr, align 4, !dbg !11595
  %29 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11596
  %src_w16 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %29, i32 0, i32 11, !dbg !11597
  store i32 %28, i32* %src_w16, align 4, !dbg !11598
  %30 = load i32, i32* %src_h.addr, align 4, !dbg !11599
  %31 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11600
  %src_h17 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %31, i32 0, i32 10, !dbg !11601
  store i32 %30, i32* %src_h17, align 8, !dbg !11602
  %32 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11603
  %33 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !11605
  %cursor = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %33, i32 0, i32 7, !dbg !11606
  %34 = load %struct.drm_plane*, %struct.drm_plane** %cursor, align 8, !dbg !11606
  %cmp18 = icmp eq %struct.drm_plane* %32, %34, !dbg !11607
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !11608

if.then20:                                        ; preds = %if.end9
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11609
  %legacy_cursor_update = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %35, i32 0, i32 2, !dbg !11610
  %bf.load = load i8, i8* %legacy_cursor_update, align 8, !dbg !11611
  %bf.clear = and i8 %bf.load, -3, !dbg !11611
  %bf.set = or i8 %bf.clear, 2, !dbg !11611
  store i8 %bf.set, i8* %legacy_cursor_update, align 8, !dbg !11611
  br label %if.end21, !dbg !11609

if.end21:                                         ; preds = %if.then20, %if.end9
  %36 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11612
  %call22 = call i32 @drm_atomic_commit(%struct.drm_atomic_state* %36) #9, !dbg !11613
  store i32 %call22, i32* %ret, align 4, !dbg !11614
  br label %fail, !dbg !11615

fail:                                             ; preds = %if.end21, %if.then8, %if.then3
  call void @llvm.dbg.label(metadata !11616), !dbg !11617
  %37 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11618
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %37) #9, !dbg !11619
  %38 = load i32, i32* %ret, align 4, !dbg !11620
  store i32 %38, i32* %retval, align 4, !dbg !11621
  br label %return, !dbg !11621

return:                                           ; preds = %fail, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !11622
  ret i32 %39, !dbg !11622
}

; Function Attrs: noredzone
declare dso_local %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device*) #2

; Function Attrs: noredzone
declare dso_local %struct.drm_plane_state* @drm_atomic_get_plane_state(%struct.drm_atomic_state*, %struct.drm_plane*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !11623 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11627, metadata !DIExpression()), !dbg !11628
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11629
  %1 = ptrtoint i8* %0 to i64, !dbg !11629
  %2 = inttoptr i64 %1 to i8*, !dbg !11629
  %3 = ptrtoint i8* %2 to i64, !dbg !11629
  %cmp = icmp uge i64 %3, -4095, !dbg !11629
  %lnot = xor i1 %cmp, true, !dbg !11629
  %lnot1 = xor i1 %lnot, true, !dbg !11629
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !11629
  %conv = sext i32 %lnot.ext to i64, !dbg !11629
  %tobool = icmp ne i64 %conv, 0, !dbg !11629
  ret i1 %tobool, !dbg !11630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !11631 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !11634, metadata !DIExpression()), !dbg !11635
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !11636
  %1 = ptrtoint i8* %0 to i64, !dbg !11637
  ret i64 %1, !dbg !11638
}

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_set_crtc_for_plane(%struct.drm_plane_state*, %struct.drm_crtc*) #2

; Function Attrs: noredzone
declare dso_local void @drm_atomic_set_fb_for_plane(%struct.drm_plane_state*, %struct.drm_framebuffer*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_commit(%struct.drm_atomic_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_atomic_state_put(%struct.drm_atomic_state* %state) #0 !dbg !11639 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !11640, metadata !DIExpression()), !dbg !11641
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11642
  %ref = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 0, !dbg !11643
  %call = call i32 @kref_put(%struct.kref* %ref, void (%struct.kref*)* @__drm_atomic_state_free) #9, !dbg !11644
  ret void, !dbg !11645
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_disable_plane(%struct.drm_plane* %plane, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !11646 {
entry:
  %retval = alloca i32, align 4
  %plane.addr = alloca %struct.drm_plane*, align 8
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %plane_state = alloca %struct.drm_plane_state*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_plane* %plane, %struct.drm_plane** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane.addr, metadata !11647, metadata !DIExpression()), !dbg !11648
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !11649, metadata !DIExpression()), !dbg !11650
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !11651, metadata !DIExpression()), !dbg !11652
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state, metadata !11653, metadata !DIExpression()), !dbg !11654
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11655, metadata !DIExpression()), !dbg !11656
  store i32 0, i32* %ret, align 4, !dbg !11656
  %0 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11657
  %dev = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %0, i32 0, i32 0, !dbg !11658
  %1 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !11658
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %1) #9, !dbg !11659
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !11660
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11661
  %tobool = icmp ne %struct.drm_atomic_state* %2, null, !dbg !11661
  br i1 %tobool, label %if.end, label %if.then, !dbg !11663

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11664
  br label %return, !dbg !11664

if.end:                                           ; preds = %entry
  %3 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !11665
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11666
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 9, !dbg !11667
  store %struct.drm_modeset_acquire_ctx* %3, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !11668
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11669
  %6 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11670
  %call1 = call %struct.drm_plane_state* @drm_atomic_get_plane_state(%struct.drm_atomic_state* %5, %struct.drm_plane* %6) #9, !dbg !11671
  store %struct.drm_plane_state* %call1, %struct.drm_plane_state** %plane_state, align 8, !dbg !11672
  %7 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11673
  %8 = bitcast %struct.drm_plane_state* %7 to i8*, !dbg !11673
  %call2 = call zeroext i1 @IS_ERR(i8* %8) #9, !dbg !11675
  br i1 %call2, label %if.then3, label %if.end5, !dbg !11676

if.then3:                                         ; preds = %if.end
  %9 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11677
  %10 = bitcast %struct.drm_plane_state* %9 to i8*, !dbg !11677
  %call4 = call i64 @PTR_ERR(i8* %10) #9, !dbg !11679
  %conv = trunc i64 %call4 to i32, !dbg !11679
  store i32 %conv, i32* %ret, align 4, !dbg !11680
  br label %fail, !dbg !11681

if.end5:                                          ; preds = %if.end
  %11 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11682
  %crtc = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %11, i32 0, i32 1, !dbg !11684
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11684
  %tobool6 = icmp ne %struct.drm_crtc* %12, null, !dbg !11682
  br i1 %tobool6, label %land.lhs.true, label %if.end11, !dbg !11685

land.lhs.true:                                    ; preds = %if.end5
  %13 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11686
  %crtc7 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %13, i32 0, i32 1, !dbg !11687
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc7, align 8, !dbg !11687
  %cursor = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %14, i32 0, i32 7, !dbg !11688
  %15 = load %struct.drm_plane*, %struct.drm_plane** %cursor, align 8, !dbg !11688
  %16 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11689
  %cmp = icmp eq %struct.drm_plane* %15, %16, !dbg !11690
  br i1 %cmp, label %if.then9, label %if.end11, !dbg !11691

if.then9:                                         ; preds = %land.lhs.true
  %17 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11692
  %state10 = getelementptr inbounds %struct.drm_plane_state, %struct.drm_plane_state* %17, i32 0, i32 24, !dbg !11693
  %18 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state10, align 8, !dbg !11693
  %legacy_cursor_update = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %18, i32 0, i32 2, !dbg !11694
  %bf.load = load i8, i8* %legacy_cursor_update, align 8, !dbg !11695
  %bf.clear = and i8 %bf.load, -3, !dbg !11695
  %bf.set = or i8 %bf.clear, 2, !dbg !11695
  store i8 %bf.set, i8* %legacy_cursor_update, align 8, !dbg !11695
  br label %if.end11, !dbg !11692

if.end11:                                         ; preds = %if.then9, %land.lhs.true, %if.end5
  %19 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !11696
  %20 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11697
  %call12 = call i32 @__drm_atomic_helper_disable_plane(%struct.drm_plane* %19, %struct.drm_plane_state* %20) #9, !dbg !11698
  store i32 %call12, i32* %ret, align 4, !dbg !11699
  %21 = load i32, i32* %ret, align 4, !dbg !11700
  %cmp13 = icmp ne i32 %21, 0, !dbg !11702
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !11703

if.then15:                                        ; preds = %if.end11
  br label %fail, !dbg !11704

if.end16:                                         ; preds = %if.end11
  %22 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11705
  %call17 = call i32 @drm_atomic_commit(%struct.drm_atomic_state* %22) #9, !dbg !11706
  store i32 %call17, i32* %ret, align 4, !dbg !11707
  br label %fail, !dbg !11708

fail:                                             ; preds = %if.end16, %if.then15, %if.then3
  call void @llvm.dbg.label(metadata !11709), !dbg !11710
  %23 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11711
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %23) #9, !dbg !11712
  %24 = load i32, i32* %ret, align 4, !dbg !11713
  store i32 %24, i32* %retval, align 4, !dbg !11714
  br label %return, !dbg !11714

return:                                           ; preds = %fail, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !11715
  ret i32 %25, !dbg !11715
}

; Function Attrs: noredzone
declare dso_local i32 @__drm_atomic_helper_disable_plane(%struct.drm_plane*, %struct.drm_plane_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_set_config(%struct.drm_mode_set* %set, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !11716 {
entry:
  %retval = alloca i32, align 4
  %set.addr = alloca %struct.drm_mode_set*, align 8
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_mode_set* %set, %struct.drm_mode_set** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_mode_set** %set.addr, metadata !11717, metadata !DIExpression()), !dbg !11718
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !11719, metadata !DIExpression()), !dbg !11720
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !11721, metadata !DIExpression()), !dbg !11722
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !11723, metadata !DIExpression()), !dbg !11724
  %0 = load %struct.drm_mode_set*, %struct.drm_mode_set** %set.addr, align 8, !dbg !11725
  %crtc1 = getelementptr inbounds %struct.drm_mode_set, %struct.drm_mode_set* %0, i32 0, i32 1, !dbg !11726
  %1 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc1, align 8, !dbg !11726
  store %struct.drm_crtc* %1, %struct.drm_crtc** %crtc, align 8, !dbg !11724
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11727, metadata !DIExpression()), !dbg !11728
  store i32 0, i32* %ret, align 4, !dbg !11728
  %2 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11729
  %dev = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %2, i32 0, i32 0, !dbg !11730
  %3 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !11730
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %3) #9, !dbg !11731
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !11732
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11733
  %tobool = icmp ne %struct.drm_atomic_state* %4, null, !dbg !11733
  br i1 %tobool, label %if.end, label %if.then, !dbg !11735

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11736
  br label %return, !dbg !11736

if.end:                                           ; preds = %entry
  %5 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !11737
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11738
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %6, i32 0, i32 9, !dbg !11739
  store %struct.drm_modeset_acquire_ctx* %5, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !11740
  %7 = load %struct.drm_mode_set*, %struct.drm_mode_set** %set.addr, align 8, !dbg !11741
  %8 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11742
  %call2 = call i32 @__drm_atomic_helper_set_config(%struct.drm_mode_set* %7, %struct.drm_atomic_state* %8) #9, !dbg !11743
  store i32 %call2, i32* %ret, align 4, !dbg !11744
  %9 = load i32, i32* %ret, align 4, !dbg !11745
  %cmp = icmp ne i32 %9, 0, !dbg !11747
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !11748

if.then3:                                         ; preds = %if.end
  br label %fail, !dbg !11749

if.end4:                                          ; preds = %if.end
  %10 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11750
  %call5 = call i32 @handle_conflicting_encoders(%struct.drm_atomic_state* %10, i1 zeroext true) #9, !dbg !11751
  store i32 %call5, i32* %ret, align 4, !dbg !11752
  %11 = load i32, i32* %ret, align 4, !dbg !11753
  %tobool6 = icmp ne i32 %11, 0, !dbg !11753
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !11755

if.then7:                                         ; preds = %if.end4
  %12 = load i32, i32* %ret, align 4, !dbg !11756
  store i32 %12, i32* %retval, align 4, !dbg !11757
  br label %return, !dbg !11757

if.end8:                                          ; preds = %if.end4
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11758
  %call9 = call i32 @drm_atomic_commit(%struct.drm_atomic_state* %13) #9, !dbg !11759
  store i32 %call9, i32* %ret, align 4, !dbg !11760
  br label %fail, !dbg !11761

fail:                                             ; preds = %if.end8, %if.then3
  call void @llvm.dbg.label(metadata !11762), !dbg !11763
  %14 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11764
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %14) #9, !dbg !11765
  %15 = load i32, i32* %ret, align 4, !dbg !11766
  store i32 %15, i32* %retval, align 4, !dbg !11767
  br label %return, !dbg !11767

return:                                           ; preds = %fail, %if.then7, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !11768
  ret i32 %16, !dbg !11768
}

; Function Attrs: noredzone
declare dso_local i32 @__drm_atomic_helper_set_config(%struct.drm_mode_set*, %struct.drm_atomic_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_disable_all(%struct.drm_device* %dev, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !11769 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.drm_device*, align 8
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %conn_state = alloca %struct.drm_connector_state*, align 8
  %conn = alloca %struct.drm_connector*, align 8
  %plane_state = alloca %struct.drm_plane_state*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_crtc*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.drm_crtc*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !11772, metadata !DIExpression()), !dbg !11773
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !11774, metadata !DIExpression()), !dbg !11775
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !11776, metadata !DIExpression()), !dbg !11777
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state, metadata !11778, metadata !DIExpression()), !dbg !11779
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %conn, metadata !11780, metadata !DIExpression()), !dbg !11781
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state, metadata !11782, metadata !DIExpression()), !dbg !11783
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !11784, metadata !DIExpression()), !dbg !11785
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !11786, metadata !DIExpression()), !dbg !11787
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !11788, metadata !DIExpression()), !dbg !11789
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11790, metadata !DIExpression()), !dbg !11791
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11792, metadata !DIExpression()), !dbg !11793
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11794
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %0) #9, !dbg !11795
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !11796
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11797
  %tobool = icmp ne %struct.drm_atomic_state* %1, null, !dbg !11797
  br i1 %tobool, label %if.end, label %if.then, !dbg !11799

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !11800
  br label %return, !dbg !11800

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !11801
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11802
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 9, !dbg !11803
  store %struct.drm_modeset_acquire_ctx* %2, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !11804
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11805, metadata !DIExpression()), !dbg !11808
  %4 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11808
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %4, i32 0, i32 35, !dbg !11808
  %crtc_list = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 20, !dbg !11808
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %crtc_list, i32 0, i32 0, !dbg !11808
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11808
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !11808
  store i8* %6, i8** %__mptr, align 8, !dbg !11808
  br label %do.body, !dbg !11808

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11809

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !11808
  %add.ptr = getelementptr i8, i8* %7, i64 -16, !dbg !11808
  %8 = bitcast i8* %add.ptr to %struct.drm_crtc*, !dbg !11808
  store %struct.drm_crtc* %8, %struct.drm_crtc** %tmp, align 8, !dbg !11809
  %9 = load %struct.drm_crtc*, %struct.drm_crtc** %tmp, align 8, !dbg !11808
  store %struct.drm_crtc* %9, %struct.drm_crtc** %crtc, align 8, !dbg !11811
  br label %for.cond, !dbg !11811

for.cond:                                         ; preds = %do.end27, %do.end
  %10 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11812
  %head = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %10, i32 0, i32 2, !dbg !11812
  %11 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11812
  %mode_config1 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %11, i32 0, i32 35, !dbg !11812
  %crtc_list2 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config1, i32 0, i32 20, !dbg !11812
  %cmp = icmp eq %struct.list_head* %head, %crtc_list2, !dbg !11812
  %lnot = xor i1 %cmp, true, !dbg !11812
  br i1 %lnot, label %for.body, label %for.end, !dbg !11811

for.body:                                         ; preds = %for.cond
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11814
  %13 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11816
  %call3 = call %struct.drm_crtc_state* @drm_atomic_get_crtc_state(%struct.drm_atomic_state* %12, %struct.drm_crtc* %13) #9, !dbg !11817
  store %struct.drm_crtc_state* %call3, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11818
  %14 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11819
  %15 = bitcast %struct.drm_crtc_state* %14 to i8*, !dbg !11819
  %call4 = call zeroext i1 @IS_ERR(i8* %15) #9, !dbg !11821
  br i1 %call4, label %if.then5, label %if.end7, !dbg !11822

if.then5:                                         ; preds = %for.body
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11823
  %17 = bitcast %struct.drm_crtc_state* %16 to i8*, !dbg !11823
  %call6 = call i64 @PTR_ERR(i8* %17) #9, !dbg !11825
  %conv = trunc i64 %call6 to i32, !dbg !11825
  store i32 %conv, i32* %ret, align 4, !dbg !11826
  br label %free, !dbg !11827

if.end7:                                          ; preds = %for.body
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11828
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %18, i32 0, i32 2, !dbg !11829
  store i8 0, i8* %active, align 1, !dbg !11830
  %19 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11831
  %call8 = call i32 @drm_atomic_set_mode_prop_for_crtc(%struct.drm_crtc_state* %19, %struct.drm_property_blob* null) #9, !dbg !11832
  store i32 %call8, i32* %ret, align 4, !dbg !11833
  %20 = load i32, i32* %ret, align 4, !dbg !11834
  %cmp9 = icmp slt i32 %20, 0, !dbg !11836
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !11837

if.then11:                                        ; preds = %if.end7
  br label %free, !dbg !11838

if.end12:                                         ; preds = %if.end7
  %21 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11839
  %22 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11840
  %call13 = call i32 @drm_atomic_add_affected_planes(%struct.drm_atomic_state* %21, %struct.drm_crtc* %22) #9, !dbg !11841
  store i32 %call13, i32* %ret, align 4, !dbg !11842
  %23 = load i32, i32* %ret, align 4, !dbg !11843
  %cmp14 = icmp slt i32 %23, 0, !dbg !11845
  br i1 %cmp14, label %if.then16, label %if.end17, !dbg !11846

if.then16:                                        ; preds = %if.end12
  br label %free, !dbg !11847

if.end17:                                         ; preds = %if.end12
  %24 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11848
  %25 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11849
  %call18 = call i32 @drm_atomic_add_affected_connectors(%struct.drm_atomic_state* %24, %struct.drm_crtc* %25) #9, !dbg !11850
  store i32 %call18, i32* %ret, align 4, !dbg !11851
  %26 = load i32, i32* %ret, align 4, !dbg !11852
  %cmp19 = icmp slt i32 %26, 0, !dbg !11854
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !11855

if.then21:                                        ; preds = %if.end17
  br label %free, !dbg !11856

if.end22:                                         ; preds = %if.end17
  br label %for.inc, !dbg !11857

for.inc:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !11858, metadata !DIExpression()), !dbg !11860
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11860
  %head24 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %27, i32 0, i32 2, !dbg !11860
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %head24, i32 0, i32 0, !dbg !11860
  %28 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !11860
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !11860
  store i8* %29, i8** %__mptr23, align 8, !dbg !11860
  br label %do.body26, !dbg !11860

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !11861

do.end27:                                         ; preds = %do.body26
  %30 = load i8*, i8** %__mptr23, align 8, !dbg !11860
  %add.ptr29 = getelementptr i8, i8* %30, i64 -16, !dbg !11860
  %31 = bitcast i8* %add.ptr29 to %struct.drm_crtc*, !dbg !11860
  store %struct.drm_crtc* %31, %struct.drm_crtc** %tmp28, align 8, !dbg !11861
  %32 = load %struct.drm_crtc*, %struct.drm_crtc** %tmp28, align 8, !dbg !11860
  store %struct.drm_crtc* %32, %struct.drm_crtc** %crtc, align 8, !dbg !11812
  br label %for.cond, !dbg !11812, !llvm.loop !11863

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !11865
  br label %for.cond30, !dbg !11865

for.cond30:                                       ; preds = %for.inc49, %for.end
  %33 = load i32, i32* %i, align 4, !dbg !11867
  %34 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11867
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %34, i32 0, i32 5, !dbg !11867
  %35 = load i32, i32* %num_connector, align 8, !dbg !11867
  %cmp31 = icmp slt i32 %33, %35, !dbg !11867
  br i1 %cmp31, label %for.body33, label %for.end50, !dbg !11865

for.body33:                                       ; preds = %for.cond30
  %36 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11869
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %36, i32 0, i32 6, !dbg !11869
  %37 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !11869
  %38 = load i32, i32* %i, align 4, !dbg !11869
  %idxprom = sext i32 %38 to i64, !dbg !11869
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %37, i64 %idxprom, !dbg !11869
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !11869
  %39 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !11869
  %tobool34 = icmp ne %struct.drm_connector* %39, null, !dbg !11869
  br i1 %tobool34, label %land.lhs.true, label %if.then42, !dbg !11869

land.lhs.true:                                    ; preds = %for.body33
  %40 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11869
  %connectors35 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %40, i32 0, i32 6, !dbg !11869
  %41 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors35, align 8, !dbg !11869
  %42 = load i32, i32* %i, align 4, !dbg !11869
  %idxprom36 = sext i32 %42 to i64, !dbg !11869
  %arrayidx37 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %41, i64 %idxprom36, !dbg !11869
  %ptr38 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx37, i32 0, i32 0, !dbg !11869
  %43 = load %struct.drm_connector*, %struct.drm_connector** %ptr38, align 8, !dbg !11869
  store %struct.drm_connector* %43, %struct.drm_connector** %conn, align 8, !dbg !11869
  %44 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !11869
  %45 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11869
  %connectors39 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %45, i32 0, i32 6, !dbg !11869
  %46 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors39, align 8, !dbg !11869
  %47 = load i32, i32* %i, align 4, !dbg !11869
  %idxprom40 = sext i32 %47 to i64, !dbg !11869
  %arrayidx41 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %46, i64 %idxprom40, !dbg !11869
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx41, i32 0, i32 3, !dbg !11869
  %48 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !11869
  store %struct.drm_connector_state* %48, %struct.drm_connector_state** %conn_state, align 8, !dbg !11869
  %49 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !11869
  br i1 true, label %if.else, label %if.then42, !dbg !11867

if.then42:                                        ; preds = %land.lhs.true, %for.body33
  br label %if.end48, !dbg !11871

if.else:                                          ; preds = %land.lhs.true
  %50 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !11873
  %call43 = call i32 @drm_atomic_set_crtc_for_connector(%struct.drm_connector_state* %50, %struct.drm_crtc* null) #9, !dbg !11875
  store i32 %call43, i32* %ret, align 4, !dbg !11876
  %51 = load i32, i32* %ret, align 4, !dbg !11877
  %cmp44 = icmp slt i32 %51, 0, !dbg !11879
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !11880

if.then46:                                        ; preds = %if.else
  br label %free, !dbg !11881

if.end47:                                         ; preds = %if.else
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then42
  br label %for.inc49, !dbg !11869

for.inc49:                                        ; preds = %if.end48
  %52 = load i32, i32* %i, align 4, !dbg !11867
  %inc = add i32 %52, 1, !dbg !11867
  store i32 %inc, i32* %i, align 4, !dbg !11867
  br label %for.cond30, !dbg !11867, !llvm.loop !11882

for.end50:                                        ; preds = %for.cond30
  store i32 0, i32* %i, align 4, !dbg !11884
  br label %for.cond51, !dbg !11884

for.cond51:                                       ; preds = %for.inc78, %for.end50
  %53 = load i32, i32* %i, align 4, !dbg !11886
  %54 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11886
  %dev52 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %54, i32 0, i32 1, !dbg !11886
  %55 = load %struct.drm_device*, %struct.drm_device** %dev52, align 8, !dbg !11886
  %mode_config53 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %55, i32 0, i32 35, !dbg !11886
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config53, i32 0, i32 17, !dbg !11886
  %56 = load i32, i32* %num_total_plane, align 8, !dbg !11886
  %cmp54 = icmp slt i32 %53, %56, !dbg !11886
  br i1 %cmp54, label %for.body56, label %for.end80, !dbg !11884

for.body56:                                       ; preds = %for.cond51
  %57 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11888
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %57, i32 0, i32 3, !dbg !11888
  %58 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !11888
  %59 = load i32, i32* %i, align 4, !dbg !11888
  %idxprom57 = sext i32 %59 to i64, !dbg !11888
  %arrayidx58 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %58, i64 %idxprom57, !dbg !11888
  %ptr59 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx58, i32 0, i32 0, !dbg !11888
  %60 = load %struct.drm_plane*, %struct.drm_plane** %ptr59, align 8, !dbg !11888
  %tobool60 = icmp ne %struct.drm_plane* %60, null, !dbg !11888
  br i1 %tobool60, label %land.lhs.true61, label %if.then70, !dbg !11888

land.lhs.true61:                                  ; preds = %for.body56
  %61 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11888
  %planes62 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %61, i32 0, i32 3, !dbg !11888
  %62 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes62, align 8, !dbg !11888
  %63 = load i32, i32* %i, align 4, !dbg !11888
  %idxprom63 = sext i32 %63 to i64, !dbg !11888
  %arrayidx64 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %62, i64 %idxprom63, !dbg !11888
  %ptr65 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx64, i32 0, i32 0, !dbg !11888
  %64 = load %struct.drm_plane*, %struct.drm_plane** %ptr65, align 8, !dbg !11888
  store %struct.drm_plane* %64, %struct.drm_plane** %plane, align 8, !dbg !11888
  %65 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !11888
  %66 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11888
  %planes66 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %66, i32 0, i32 3, !dbg !11888
  %67 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes66, align 8, !dbg !11888
  %68 = load i32, i32* %i, align 4, !dbg !11888
  %idxprom67 = sext i32 %68 to i64, !dbg !11888
  %arrayidx68 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %67, i64 %idxprom67, !dbg !11888
  %new_state69 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx68, i32 0, i32 3, !dbg !11888
  %69 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state69, align 8, !dbg !11888
  store %struct.drm_plane_state* %69, %struct.drm_plane_state** %plane_state, align 8, !dbg !11888
  %70 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11888
  br i1 true, label %if.else71, label %if.then70, !dbg !11886

if.then70:                                        ; preds = %land.lhs.true61, %for.body56
  br label %if.end77, !dbg !11890

if.else71:                                        ; preds = %land.lhs.true61
  %71 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11892
  %call72 = call i32 @drm_atomic_set_crtc_for_plane(%struct.drm_plane_state* %71, %struct.drm_crtc* null) #9, !dbg !11894
  store i32 %call72, i32* %ret, align 4, !dbg !11895
  %72 = load i32, i32* %ret, align 4, !dbg !11896
  %cmp73 = icmp slt i32 %72, 0, !dbg !11898
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !11899

if.then75:                                        ; preds = %if.else71
  br label %free, !dbg !11900

if.end76:                                         ; preds = %if.else71
  %73 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !11901
  call void @drm_atomic_set_fb_for_plane(%struct.drm_plane_state* %73, %struct.drm_framebuffer* null) #9, !dbg !11902
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then70
  br label %for.inc78, !dbg !11888

for.inc78:                                        ; preds = %if.end77
  %74 = load i32, i32* %i, align 4, !dbg !11886
  %inc79 = add i32 %74, 1, !dbg !11886
  store i32 %inc79, i32* %i, align 4, !dbg !11886
  br label %for.cond51, !dbg !11886, !llvm.loop !11903

for.end80:                                        ; preds = %for.cond51
  %75 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11905
  %call81 = call i32 @drm_atomic_commit(%struct.drm_atomic_state* %75) #9, !dbg !11906
  store i32 %call81, i32* %ret, align 4, !dbg !11907
  br label %free, !dbg !11908

free:                                             ; preds = %for.end80, %if.then75, %if.then46, %if.then21, %if.then16, %if.then11, %if.then5
  call void @llvm.dbg.label(metadata !11909), !dbg !11910
  %76 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11911
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %76) #9, !dbg !11912
  %77 = load i32, i32* %ret, align 4, !dbg !11913
  store i32 %77, i32* %retval, align 4, !dbg !11914
  br label %return, !dbg !11914

return:                                           ; preds = %free, %if.then
  %78 = load i32, i32* %retval, align 4, !dbg !11915
  ret i32 %78, !dbg !11915
}

; Function Attrs: noredzone
declare dso_local %struct.drm_crtc_state* @drm_atomic_get_crtc_state(%struct.drm_atomic_state*, %struct.drm_crtc*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_set_mode_prop_for_crtc(%struct.drm_crtc_state*, %struct.drm_property_blob*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_set_crtc_for_connector(%struct.drm_connector_state*, %struct.drm_crtc*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_atomic_helper_shutdown(%struct.drm_device* %dev) #0 !dbg !11916 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %ctx = alloca %struct.drm_modeset_acquire_ctx, align 8
  %ret = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !11917, metadata !DIExpression()), !dbg !11918
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx* %ctx, metadata !11919, metadata !DIExpression()), !dbg !11920
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11921, metadata !DIExpression()), !dbg !11922
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11923
  %call = call zeroext i1 @drm_drv_uses_atomic_modeset(%struct.drm_device* %0) #9, !dbg !11923
  br i1 %call, label %if.end, label %if.then, !dbg !11925

if.then:                                          ; preds = %entry
  %1 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11923
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %1, i32 0, i32 35, !dbg !11923
  %mutex = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 0, !dbg !11923
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !11923
  br label %if.end, !dbg !11923

if.end:                                           ; preds = %if.then, %entry
  call void @drm_modeset_acquire_init(%struct.drm_modeset_acquire_ctx* %ctx, i32 0) #9, !dbg !11925
  br label %modeset_lock_retry, !dbg !11925

modeset_lock_retry:                               ; preds = %if.then11, %if.end
  call void @llvm.dbg.label(metadata !11926), !dbg !11925
  %2 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11925
  %call1 = call i32 @drm_modeset_lock_all_ctx(%struct.drm_device* %2, %struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !11925
  store i32 %call1, i32* %ret, align 4, !dbg !11925
  %3 = load i32, i32* %ret, align 4, !dbg !11927
  %tobool = icmp ne i32 %3, 0, !dbg !11927
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !11925

if.then2:                                         ; preds = %modeset_lock_retry
  br label %modeset_lock_fail, !dbg !11927

if.end3:                                          ; preds = %modeset_lock_retry
  %4 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11929
  %call4 = call i32 @drm_atomic_helper_disable_all(%struct.drm_device* %4, %struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !11930
  store i32 %call4, i32* %ret, align 4, !dbg !11931
  %5 = load i32, i32* %ret, align 4, !dbg !11932
  %tobool5 = icmp ne i32 %5, 0, !dbg !11932
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !11934

if.then6:                                         ; preds = %if.end3
  %6 = load i32, i32* %ret, align 4, !dbg !11935
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.23, i64 0, i64 0), i32 %6) #9, !dbg !11935
  br label %if.end7, !dbg !11935

if.end7:                                          ; preds = %if.then6, %if.end3
  br label %modeset_lock_fail, !dbg !11932

modeset_lock_fail:                                ; preds = %if.end7, %if.then2
  call void @llvm.dbg.label(metadata !11936), !dbg !11937
  %7 = load i32, i32* %ret, align 4, !dbg !11938
  %cmp = icmp eq i32 %7, -35, !dbg !11938
  br i1 %cmp, label %if.then8, label %if.end13, !dbg !11937

if.then8:                                         ; preds = %modeset_lock_fail
  %call9 = call i32 @drm_modeset_backoff(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !11940
  store i32 %call9, i32* %ret, align 4, !dbg !11940
  %8 = load i32, i32* %ret, align 4, !dbg !11942
  %tobool10 = icmp ne i32 %8, 0, !dbg !11942
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !11940

if.then11:                                        ; preds = %if.then8
  br label %modeset_lock_retry, !dbg !11942

if.end12:                                         ; preds = %if.then8
  br label %if.end13, !dbg !11940

if.end13:                                         ; preds = %if.end12, %modeset_lock_fail
  call void @drm_modeset_drop_locks(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !11937
  call void @drm_modeset_acquire_fini(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !11937
  %9 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11944
  %call14 = call zeroext i1 @drm_drv_uses_atomic_modeset(%struct.drm_device* %9) #9, !dbg !11944
  br i1 %call14, label %if.end18, label %if.then15, !dbg !11937

if.then15:                                        ; preds = %if.end13
  %10 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11944
  %mode_config16 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %10, i32 0, i32 35, !dbg !11944
  %mutex17 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config16, i32 0, i32 0, !dbg !11944
  call void @mutex_unlock(%struct.mutex* %mutex17) #9, !dbg !11944
  br label %if.end18, !dbg !11944

if.end18:                                         ; preds = %if.then15, %if.end13
  ret void, !dbg !11946
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_drv_uses_atomic_modeset(%struct.drm_device* %dev) #0 !dbg !11947 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !11950, metadata !DIExpression()), !dbg !11951
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11952
  %call = call zeroext i1 @drm_core_check_feature(%struct.drm_device* %0, i32 16) #9, !dbg !11953
  br i1 %call, label %lor.end, label %lor.rhs, !dbg !11954

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11955
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %1, i32 0, i32 35, !dbg !11956
  %funcs = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 27, !dbg !11957
  %2 = load %struct.drm_mode_config_funcs*, %struct.drm_mode_config_funcs** %funcs, align 8, !dbg !11957
  %tobool = icmp ne %struct.drm_mode_config_funcs* %2, null, !dbg !11955
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !11958

land.rhs:                                         ; preds = %lor.rhs
  %3 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11959
  %mode_config1 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %3, i32 0, i32 35, !dbg !11960
  %funcs2 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config1, i32 0, i32 27, !dbg !11961
  %4 = load %struct.drm_mode_config_funcs*, %struct.drm_mode_config_funcs** %funcs2, align 8, !dbg !11961
  %atomic_commit = getelementptr inbounds %struct.drm_mode_config_funcs, %struct.drm_mode_config_funcs* %4, i32 0, i32 5, !dbg !11962
  %5 = load i32 (%struct.drm_device*, %struct.drm_atomic_state*, i1)*, i32 (%struct.drm_device*, %struct.drm_atomic_state*, i1)** %atomic_commit, align 8, !dbg !11962
  %cmp = icmp ne i32 (%struct.drm_device*, %struct.drm_atomic_state*, i1)* %5, null, !dbg !11963
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %6 = phi i1 [ false, %lor.rhs ], [ %cmp, %land.rhs ], !dbg !11964
  br label %lor.end, !dbg !11954

lor.end:                                          ; preds = %land.end, %entry
  %7 = phi i1 [ true, %entry ], [ %6, %land.end ]
  ret i1 %7, !dbg !11965
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local void @drm_modeset_acquire_init(%struct.drm_modeset_acquire_ctx*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_modeset_lock_all_ctx(%struct.drm_device*, %struct.drm_modeset_acquire_ctx*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_modeset_backoff(%struct.drm_modeset_acquire_ctx*) #2

; Function Attrs: noredzone
declare dso_local void @drm_modeset_drop_locks(%struct.drm_modeset_acquire_ctx*) #2

; Function Attrs: noredzone
declare dso_local void @drm_modeset_acquire_fini(%struct.drm_modeset_acquire_ctx*) #2

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.drm_atomic_state* @drm_atomic_helper_duplicate_state(%struct.drm_device* %dev, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !11966 {
entry:
  %retval = alloca %struct.drm_atomic_state*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %conn = alloca %struct.drm_connector*, align 8
  %conn_iter = alloca %struct.drm_connector_list_iter, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %err = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_crtc*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %__mptr9 = alloca i8*, align 8
  %tmp14 = alloca %struct.drm_crtc*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.drm_plane*, align 8
  %plane_state = alloca %struct.drm_plane_state*, align 8
  %__mptr38 = alloca i8*, align 8
  %tmp43 = alloca %struct.drm_plane*, align 8
  %conn_state = alloca %struct.drm_connector_state*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !11969, metadata !DIExpression()), !dbg !11970
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !11971, metadata !DIExpression()), !dbg !11972
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !11973, metadata !DIExpression()), !dbg !11974
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %conn, metadata !11975, metadata !DIExpression()), !dbg !11976
  call void @llvm.dbg.declare(metadata %struct.drm_connector_list_iter* %conn_iter, metadata !11977, metadata !DIExpression()), !dbg !11978
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !11979, metadata !DIExpression()), !dbg !11980
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !11981, metadata !DIExpression()), !dbg !11982
  call void @llvm.dbg.declare(metadata i32* %err, metadata !11983, metadata !DIExpression()), !dbg !11984
  store i32 0, i32* %err, align 4, !dbg !11984
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !11985
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %0) #9, !dbg !11986
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !11987
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11988
  %tobool = icmp ne %struct.drm_atomic_state* %1, null, !dbg !11988
  br i1 %tobool, label %if.end, label %if.then, !dbg !11990

if.then:                                          ; preds = %entry
  %call1 = call i8* @ERR_PTR(i64 -12) #9, !dbg !11991
  %2 = bitcast i8* %call1 to %struct.drm_atomic_state*, !dbg !11991
  store %struct.drm_atomic_state* %2, %struct.drm_atomic_state** %retval, align 8, !dbg !11992
  br label %return, !dbg !11992

if.end:                                           ; preds = %entry
  %3 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !11993
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11994
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 9, !dbg !11995
  store %struct.drm_modeset_acquire_ctx* %3, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !11996
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !11997
  %duplicated = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %5, i32 0, i32 2, !dbg !11998
  %bf.load = load i8, i8* %duplicated, align 8, !dbg !11999
  %bf.clear = and i8 %bf.load, -9, !dbg !11999
  %bf.set = or i8 %bf.clear, 8, !dbg !11999
  store i8 %bf.set, i8* %duplicated, align 8, !dbg !11999
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12000, metadata !DIExpression()), !dbg !12003
  %6 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12003
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %6, i32 0, i32 35, !dbg !12003
  %crtc_list = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 20, !dbg !12003
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %crtc_list, i32 0, i32 0, !dbg !12003
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12003
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !12003
  store i8* %8, i8** %__mptr, align 8, !dbg !12003
  br label %do.body, !dbg !12003

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !12004

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !12003
  %add.ptr = getelementptr i8, i8* %9, i64 -16, !dbg !12003
  %10 = bitcast i8* %add.ptr to %struct.drm_crtc*, !dbg !12003
  store %struct.drm_crtc* %10, %struct.drm_crtc** %tmp, align 8, !dbg !12004
  %11 = load %struct.drm_crtc*, %struct.drm_crtc** %tmp, align 8, !dbg !12003
  store %struct.drm_crtc* %11, %struct.drm_crtc** %crtc, align 8, !dbg !12006
  br label %for.cond, !dbg !12006

for.cond:                                         ; preds = %do.end13, %do.end
  %12 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12007
  %head = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %12, i32 0, i32 2, !dbg !12007
  %13 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12007
  %mode_config2 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %13, i32 0, i32 35, !dbg !12007
  %crtc_list3 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config2, i32 0, i32 20, !dbg !12007
  %cmp = icmp eq %struct.list_head* %head, %crtc_list3, !dbg !12007
  %lnot = xor i1 %cmp, true, !dbg !12007
  br i1 %lnot, label %for.body, label %for.end, !dbg !12006

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !12009, metadata !DIExpression()), !dbg !12011
  %14 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12012
  %15 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12013
  %call4 = call %struct.drm_crtc_state* @drm_atomic_get_crtc_state(%struct.drm_atomic_state* %14, %struct.drm_crtc* %15) #9, !dbg !12014
  store %struct.drm_crtc_state* %call4, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12015
  %16 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12016
  %17 = bitcast %struct.drm_crtc_state* %16 to i8*, !dbg !12016
  %call5 = call zeroext i1 @IS_ERR(i8* %17) #9, !dbg !12018
  br i1 %call5, label %if.then6, label %if.end8, !dbg !12019

if.then6:                                         ; preds = %for.body
  %18 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12020
  %19 = bitcast %struct.drm_crtc_state* %18 to i8*, !dbg !12020
  %call7 = call i64 @PTR_ERR(i8* %19) #9, !dbg !12022
  %conv = trunc i64 %call7 to i32, !dbg !12022
  store i32 %conv, i32* %err, align 4, !dbg !12023
  br label %free, !dbg !12024

if.end8:                                          ; preds = %for.body
  br label %for.inc, !dbg !12025

for.inc:                                          ; preds = %if.end8
  call void @llvm.dbg.declare(metadata i8** %__mptr9, metadata !12026, metadata !DIExpression()), !dbg !12028
  %20 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12028
  %head10 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %20, i32 0, i32 2, !dbg !12028
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %head10, i32 0, i32 0, !dbg !12028
  %21 = load %struct.list_head*, %struct.list_head** %next11, align 8, !dbg !12028
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !12028
  store i8* %22, i8** %__mptr9, align 8, !dbg !12028
  br label %do.body12, !dbg !12028

do.body12:                                        ; preds = %for.inc
  br label %do.end13, !dbg !12029

do.end13:                                         ; preds = %do.body12
  %23 = load i8*, i8** %__mptr9, align 8, !dbg !12028
  %add.ptr15 = getelementptr i8, i8* %23, i64 -16, !dbg !12028
  %24 = bitcast i8* %add.ptr15 to %struct.drm_crtc*, !dbg !12028
  store %struct.drm_crtc* %24, %struct.drm_crtc** %tmp14, align 8, !dbg !12029
  %25 = load %struct.drm_crtc*, %struct.drm_crtc** %tmp14, align 8, !dbg !12028
  store %struct.drm_crtc* %25, %struct.drm_crtc** %crtc, align 8, !dbg !12007
  br label %for.cond, !dbg !12007, !llvm.loop !12031

for.end:                                          ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !12033, metadata !DIExpression()), !dbg !12036
  %26 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12036
  %mode_config17 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %26, i32 0, i32 35, !dbg !12036
  %plane_list = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config17, i32 0, i32 18, !dbg !12036
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %plane_list, i32 0, i32 0, !dbg !12036
  %27 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !12036
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !12036
  store i8* %28, i8** %__mptr16, align 8, !dbg !12036
  br label %do.body19, !dbg !12036

do.body19:                                        ; preds = %for.end
  br label %do.end20, !dbg !12037

do.end20:                                         ; preds = %do.body19
  %29 = load i8*, i8** %__mptr16, align 8, !dbg !12036
  %add.ptr22 = getelementptr i8, i8* %29, i64 -8, !dbg !12036
  %30 = bitcast i8* %add.ptr22 to %struct.drm_plane*, !dbg !12036
  store %struct.drm_plane* %30, %struct.drm_plane** %tmp21, align 8, !dbg !12037
  %31 = load %struct.drm_plane*, %struct.drm_plane** %tmp21, align 8, !dbg !12036
  store %struct.drm_plane* %31, %struct.drm_plane** %plane, align 8, !dbg !12039
  br label %for.cond23, !dbg !12039

for.cond23:                                       ; preds = %do.end42, %do.end20
  %32 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12040
  %head24 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %32, i32 0, i32 1, !dbg !12040
  %33 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12040
  %mode_config25 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %33, i32 0, i32 35, !dbg !12040
  %plane_list26 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config25, i32 0, i32 18, !dbg !12040
  %cmp27 = icmp eq %struct.list_head* %head24, %plane_list26, !dbg !12040
  %lnot29 = xor i1 %cmp27, true, !dbg !12040
  br i1 %lnot29, label %for.body30, label %for.end45, !dbg !12039

for.body30:                                       ; preds = %for.cond23
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state, metadata !12042, metadata !DIExpression()), !dbg !12044
  %34 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12045
  %35 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12046
  %call31 = call %struct.drm_plane_state* @drm_atomic_get_plane_state(%struct.drm_atomic_state* %34, %struct.drm_plane* %35) #9, !dbg !12047
  store %struct.drm_plane_state* %call31, %struct.drm_plane_state** %plane_state, align 8, !dbg !12048
  %36 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !12049
  %37 = bitcast %struct.drm_plane_state* %36 to i8*, !dbg !12049
  %call32 = call zeroext i1 @IS_ERR(i8* %37) #9, !dbg !12051
  br i1 %call32, label %if.then33, label %if.end36, !dbg !12052

if.then33:                                        ; preds = %for.body30
  %38 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !12053
  %39 = bitcast %struct.drm_plane_state* %38 to i8*, !dbg !12053
  %call34 = call i64 @PTR_ERR(i8* %39) #9, !dbg !12055
  %conv35 = trunc i64 %call34 to i32, !dbg !12055
  store i32 %conv35, i32* %err, align 4, !dbg !12056
  br label %free, !dbg !12057

if.end36:                                         ; preds = %for.body30
  br label %for.inc37, !dbg !12058

for.inc37:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata i8** %__mptr38, metadata !12059, metadata !DIExpression()), !dbg !12061
  %40 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12061
  %head39 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %40, i32 0, i32 1, !dbg !12061
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %head39, i32 0, i32 0, !dbg !12061
  %41 = load %struct.list_head*, %struct.list_head** %next40, align 8, !dbg !12061
  %42 = bitcast %struct.list_head* %41 to i8*, !dbg !12061
  store i8* %42, i8** %__mptr38, align 8, !dbg !12061
  br label %do.body41, !dbg !12061

do.body41:                                        ; preds = %for.inc37
  br label %do.end42, !dbg !12062

do.end42:                                         ; preds = %do.body41
  %43 = load i8*, i8** %__mptr38, align 8, !dbg !12061
  %add.ptr44 = getelementptr i8, i8* %43, i64 -8, !dbg !12061
  %44 = bitcast i8* %add.ptr44 to %struct.drm_plane*, !dbg !12061
  store %struct.drm_plane* %44, %struct.drm_plane** %tmp43, align 8, !dbg !12062
  %45 = load %struct.drm_plane*, %struct.drm_plane** %tmp43, align 8, !dbg !12061
  store %struct.drm_plane* %45, %struct.drm_plane** %plane, align 8, !dbg !12040
  br label %for.cond23, !dbg !12040, !llvm.loop !12064

for.end45:                                        ; preds = %for.cond23
  %46 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12066
  call void @drm_connector_list_iter_begin(%struct.drm_device* %46, %struct.drm_connector_list_iter* %conn_iter) #9, !dbg !12067
  br label %while.cond, !dbg !12068

while.cond:                                       ; preds = %if.end53, %for.end45
  %call46 = call %struct.drm_connector* @drm_connector_list_iter_next(%struct.drm_connector_list_iter* %conn_iter) #9, !dbg !12068
  store %struct.drm_connector* %call46, %struct.drm_connector** %conn, align 8, !dbg !12068
  %tobool47 = icmp ne %struct.drm_connector* %call46, null, !dbg !12068
  br i1 %tobool47, label %while.body, label %while.end, !dbg !12068

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state, metadata !12069, metadata !DIExpression()), !dbg !12071
  %47 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12072
  %48 = load %struct.drm_connector*, %struct.drm_connector** %conn, align 8, !dbg !12073
  %call48 = call %struct.drm_connector_state* @drm_atomic_get_connector_state(%struct.drm_atomic_state* %47, %struct.drm_connector* %48) #9, !dbg !12074
  store %struct.drm_connector_state* %call48, %struct.drm_connector_state** %conn_state, align 8, !dbg !12075
  %49 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !12076
  %50 = bitcast %struct.drm_connector_state* %49 to i8*, !dbg !12076
  %call49 = call zeroext i1 @IS_ERR(i8* %50) #9, !dbg !12078
  br i1 %call49, label %if.then50, label %if.end53, !dbg !12079

if.then50:                                        ; preds = %while.body
  %51 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !12080
  %52 = bitcast %struct.drm_connector_state* %51 to i8*, !dbg !12080
  %call51 = call i64 @PTR_ERR(i8* %52) #9, !dbg !12082
  %conv52 = trunc i64 %call51 to i32, !dbg !12082
  store i32 %conv52, i32* %err, align 4, !dbg !12083
  call void @drm_connector_list_iter_end(%struct.drm_connector_list_iter* %conn_iter) #9, !dbg !12084
  br label %free, !dbg !12085

if.end53:                                         ; preds = %while.body
  br label %while.cond, !dbg !12068, !llvm.loop !12086

while.end:                                        ; preds = %while.cond
  call void @drm_connector_list_iter_end(%struct.drm_connector_list_iter* %conn_iter) #9, !dbg !12088
  %53 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12089
  %acquire_ctx54 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %53, i32 0, i32 9, !dbg !12090
  store %struct.drm_modeset_acquire_ctx* null, %struct.drm_modeset_acquire_ctx** %acquire_ctx54, align 8, !dbg !12091
  br label %free, !dbg !12089

free:                                             ; preds = %while.end, %if.then50, %if.then33, %if.then6
  call void @llvm.dbg.label(metadata !12092), !dbg !12093
  %54 = load i32, i32* %err, align 4, !dbg !12094
  %cmp55 = icmp slt i32 %54, 0, !dbg !12096
  br i1 %cmp55, label %if.then57, label %if.end60, !dbg !12097

if.then57:                                        ; preds = %free
  %55 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12098
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %55) #9, !dbg !12100
  %56 = load i32, i32* %err, align 4, !dbg !12101
  %conv58 = sext i32 %56 to i64, !dbg !12101
  %call59 = call i8* @ERR_PTR(i64 %conv58) #9, !dbg !12102
  %57 = bitcast i8* %call59 to %struct.drm_atomic_state*, !dbg !12102
  store %struct.drm_atomic_state* %57, %struct.drm_atomic_state** %state, align 8, !dbg !12103
  br label %if.end60, !dbg !12104

if.end60:                                         ; preds = %if.then57, %free
  %58 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12105
  store %struct.drm_atomic_state* %58, %struct.drm_atomic_state** %retval, align 8, !dbg !12106
  br label %return, !dbg !12106

return:                                           ; preds = %if.end60, %if.then
  %59 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %retval, align 8, !dbg !12107
  ret %struct.drm_atomic_state* %59, !dbg !12107
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !12108 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !12111, metadata !DIExpression()), !dbg !12112
  %0 = load i64, i64* %error.addr, align 8, !dbg !12113
  %1 = inttoptr i64 %0 to i8*, !dbg !12114
  ret i8* %1, !dbg !12115
}

; Function Attrs: noredzone
declare dso_local void @drm_connector_list_iter_begin(%struct.drm_device*, %struct.drm_connector_list_iter*) #2

; Function Attrs: noredzone
declare dso_local %struct.drm_connector* @drm_connector_list_iter_next(%struct.drm_connector_list_iter*) #2

; Function Attrs: noredzone
declare dso_local %struct.drm_connector_state* @drm_atomic_get_connector_state(%struct.drm_atomic_state*, %struct.drm_connector*) #2

; Function Attrs: noredzone
declare dso_local void @drm_connector_list_iter_end(%struct.drm_connector_list_iter*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.drm_atomic_state* @drm_atomic_helper_suspend(%struct.drm_device* %dev) #0 !dbg !12116 {
entry:
  %retval = alloca %struct.drm_atomic_state*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %ctx = alloca %struct.drm_modeset_acquire_ctx, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %err = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !12117, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx* %ctx, metadata !12119, metadata !DIExpression()), !dbg !12120
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !12121, metadata !DIExpression()), !dbg !12122
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12123, metadata !DIExpression()), !dbg !12124
  %call = call i8* @ERR_PTR(i64 -22) #9, !dbg !12125
  %0 = bitcast i8* %call to %struct.drm_atomic_state*, !dbg !12125
  store %struct.drm_atomic_state* %0, %struct.drm_atomic_state** %state, align 8, !dbg !12126
  %1 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12127
  %call1 = call zeroext i1 @drm_drv_uses_atomic_modeset(%struct.drm_device* %1) #9, !dbg !12127
  br i1 %call1, label %if.end, label %if.then, !dbg !12129

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12127
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !12127
  %mutex = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 0, !dbg !12127
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !12127
  br label %if.end, !dbg !12127

if.end:                                           ; preds = %if.then, %entry
  call void @drm_modeset_acquire_init(%struct.drm_modeset_acquire_ctx* %ctx, i32 0) #9, !dbg !12129
  br label %modeset_lock_retry, !dbg !12129

modeset_lock_retry:                               ; preds = %if.then18, %if.end
  call void @llvm.dbg.label(metadata !12130), !dbg !12129
  %3 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12129
  %call2 = call i32 @drm_modeset_lock_all_ctx(%struct.drm_device* %3, %struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12129
  store i32 %call2, i32* %err, align 4, !dbg !12129
  %4 = load i32, i32* %err, align 4, !dbg !12131
  %tobool = icmp ne i32 %4, 0, !dbg !12131
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !12129

if.then3:                                         ; preds = %modeset_lock_retry
  br label %modeset_lock_fail, !dbg !12131

if.end4:                                          ; preds = %modeset_lock_retry
  %5 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12133
  %call5 = call %struct.drm_atomic_state* @drm_atomic_helper_duplicate_state(%struct.drm_device* %5, %struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12134
  store %struct.drm_atomic_state* %call5, %struct.drm_atomic_state** %state, align 8, !dbg !12135
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12136
  %7 = bitcast %struct.drm_atomic_state* %6 to i8*, !dbg !12136
  %call6 = call zeroext i1 @IS_ERR(i8* %7) #9, !dbg !12138
  br i1 %call6, label %if.then7, label %if.end8, !dbg !12139

if.then7:                                         ; preds = %if.end4
  br label %unlock, !dbg !12140

if.end8:                                          ; preds = %if.end4
  %8 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12141
  %call9 = call i32 @drm_atomic_helper_disable_all(%struct.drm_device* %8, %struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12142
  store i32 %call9, i32* %err, align 4, !dbg !12143
  %9 = load i32, i32* %err, align 4, !dbg !12144
  %cmp = icmp slt i32 %9, 0, !dbg !12146
  br i1 %cmp, label %if.then10, label %if.end12, !dbg !12147

if.then10:                                        ; preds = %if.end8
  %10 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12148
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %10) #9, !dbg !12150
  %11 = load i32, i32* %err, align 4, !dbg !12151
  %conv = sext i32 %11 to i64, !dbg !12151
  %call11 = call i8* @ERR_PTR(i64 %conv) #9, !dbg !12152
  %12 = bitcast i8* %call11 to %struct.drm_atomic_state*, !dbg !12152
  store %struct.drm_atomic_state* %12, %struct.drm_atomic_state** %state, align 8, !dbg !12153
  br label %unlock, !dbg !12154

if.end12:                                         ; preds = %if.end8
  br label %unlock, !dbg !12155

unlock:                                           ; preds = %if.end12, %if.then10, %if.then7
  call void @llvm.dbg.label(metadata !12156), !dbg !12157
  br label %modeset_lock_fail, !dbg !12155

modeset_lock_fail:                                ; preds = %unlock, %if.then3
  call void @llvm.dbg.label(metadata !12158), !dbg !12159
  %13 = load i32, i32* %err, align 4, !dbg !12160
  %cmp13 = icmp eq i32 %13, -35, !dbg !12160
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !12159

if.then15:                                        ; preds = %modeset_lock_fail
  %call16 = call i32 @drm_modeset_backoff(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12162
  store i32 %call16, i32* %err, align 4, !dbg !12162
  %14 = load i32, i32* %err, align 4, !dbg !12164
  %tobool17 = icmp ne i32 %14, 0, !dbg !12164
  br i1 %tobool17, label %if.end19, label %if.then18, !dbg !12162

if.then18:                                        ; preds = %if.then15
  br label %modeset_lock_retry, !dbg !12164

if.end19:                                         ; preds = %if.then15
  br label %if.end20, !dbg !12162

if.end20:                                         ; preds = %if.end19, %modeset_lock_fail
  call void @drm_modeset_drop_locks(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12159
  call void @drm_modeset_acquire_fini(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12159
  %15 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12166
  %call21 = call zeroext i1 @drm_drv_uses_atomic_modeset(%struct.drm_device* %15) #9, !dbg !12166
  br i1 %call21, label %if.end25, label %if.then22, !dbg !12159

if.then22:                                        ; preds = %if.end20
  %16 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12166
  %mode_config23 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %16, i32 0, i32 35, !dbg !12166
  %mutex24 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config23, i32 0, i32 0, !dbg !12166
  call void @mutex_unlock(%struct.mutex* %mutex24) #9, !dbg !12166
  br label %if.end25, !dbg !12166

if.end25:                                         ; preds = %if.then22, %if.end20
  %17 = load i32, i32* %err, align 4, !dbg !12168
  %tobool26 = icmp ne i32 %17, 0, !dbg !12168
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !12170

if.then27:                                        ; preds = %if.end25
  %18 = load i32, i32* %err, align 4, !dbg !12171
  %conv28 = sext i32 %18 to i64, !dbg !12171
  %call29 = call i8* @ERR_PTR(i64 %conv28) #9, !dbg !12172
  %19 = bitcast i8* %call29 to %struct.drm_atomic_state*, !dbg !12172
  store %struct.drm_atomic_state* %19, %struct.drm_atomic_state** %retval, align 8, !dbg !12173
  br label %return, !dbg !12173

if.end30:                                         ; preds = %if.end25
  %20 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12174
  store %struct.drm_atomic_state* %20, %struct.drm_atomic_state** %retval, align 8, !dbg !12175
  br label %return, !dbg !12175

return:                                           ; preds = %if.end30, %if.then27
  %21 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %retval, align 8, !dbg !12176
  ret %struct.drm_atomic_state* %21, !dbg !12176
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_commit_duplicated_state(%struct.drm_atomic_state* %state, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !12177 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %plane = alloca %struct.drm_plane*, align 8
  %new_plane_state = alloca %struct.drm_plane_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %new_conn_state = alloca %struct.drm_connector_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %new_crtc_state = alloca %struct.drm_crtc_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !12180, metadata !DIExpression()), !dbg !12181
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !12182, metadata !DIExpression()), !dbg !12183
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12184, metadata !DIExpression()), !dbg !12185
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12186, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !12188, metadata !DIExpression()), !dbg !12189
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %new_plane_state, metadata !12190, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !12192, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_conn_state, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !12196, metadata !DIExpression()), !dbg !12197
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_crtc_state, metadata !12198, metadata !DIExpression()), !dbg !12199
  %0 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !12200
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12201
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 9, !dbg !12202
  store %struct.drm_modeset_acquire_ctx* %0, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !12203
  store i32 0, i32* %i, align 4, !dbg !12204
  br label %for.cond, !dbg !12204

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !12206
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12206
  %dev = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 1, !dbg !12206
  %4 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12206
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %4, i32 0, i32 35, !dbg !12206
  %num_total_plane = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 17, !dbg !12206
  %5 = load i32, i32* %num_total_plane, align 8, !dbg !12206
  %cmp = icmp slt i32 %2, %5, !dbg !12206
  br i1 %cmp, label %for.body, label %for.end, !dbg !12204

for.body:                                         ; preds = %for.cond
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12208
  %planes = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %6, i32 0, i32 3, !dbg !12208
  %7 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes, align 8, !dbg !12208
  %8 = load i32, i32* %i, align 4, !dbg !12208
  %idxprom = sext i32 %8 to i64, !dbg !12208
  %arrayidx = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %7, i64 %idxprom, !dbg !12208
  %ptr = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx, i32 0, i32 0, !dbg !12208
  %9 = load %struct.drm_plane*, %struct.drm_plane** %ptr, align 8, !dbg !12208
  %tobool = icmp ne %struct.drm_plane* %9, null, !dbg !12208
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !12208

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12208
  %planes1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %10, i32 0, i32 3, !dbg !12208
  %11 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes1, align 8, !dbg !12208
  %12 = load i32, i32* %i, align 4, !dbg !12208
  %idxprom2 = sext i32 %12 to i64, !dbg !12208
  %arrayidx3 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %11, i64 %idxprom2, !dbg !12208
  %ptr4 = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx3, i32 0, i32 0, !dbg !12208
  %13 = load %struct.drm_plane*, %struct.drm_plane** %ptr4, align 8, !dbg !12208
  store %struct.drm_plane* %13, %struct.drm_plane** %plane, align 8, !dbg !12208
  %14 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12208
  %15 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12208
  %planes5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %15, i32 0, i32 3, !dbg !12208
  %16 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes5, align 8, !dbg !12208
  %17 = load i32, i32* %i, align 4, !dbg !12208
  %idxprom6 = sext i32 %17 to i64, !dbg !12208
  %arrayidx7 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %16, i64 %idxprom6, !dbg !12208
  %new_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx7, i32 0, i32 3, !dbg !12208
  %18 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_state, align 8, !dbg !12208
  store %struct.drm_plane_state* %18, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !12208
  %19 = load %struct.drm_plane_state*, %struct.drm_plane_state** %new_plane_state, align 8, !dbg !12208
  br i1 true, label %if.else, label %if.then, !dbg !12206

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end, !dbg !12210

if.else:                                          ; preds = %land.lhs.true
  %20 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12212
  %state8 = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %20, i32 0, i32 19, !dbg !12213
  %21 = load %struct.drm_plane_state*, %struct.drm_plane_state** %state8, align 8, !dbg !12213
  %22 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12214
  %planes9 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %22, i32 0, i32 3, !dbg !12215
  %23 = load %struct.__drm_planes_state*, %struct.__drm_planes_state** %planes9, align 8, !dbg !12215
  %24 = load i32, i32* %i, align 4, !dbg !12216
  %idxprom10 = sext i32 %24 to i64, !dbg !12214
  %arrayidx11 = getelementptr %struct.__drm_planes_state, %struct.__drm_planes_state* %23, i64 %idxprom10, !dbg !12214
  %old_state = getelementptr inbounds %struct.__drm_planes_state, %struct.__drm_planes_state* %arrayidx11, i32 0, i32 2, !dbg !12217
  store %struct.drm_plane_state* %21, %struct.drm_plane_state** %old_state, align 8, !dbg !12218
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !12208

for.inc:                                          ; preds = %if.end
  %25 = load i32, i32* %i, align 4, !dbg !12206
  %inc = add i32 %25, 1, !dbg !12206
  store i32 %inc, i32* %i, align 4, !dbg !12206
  br label %for.cond, !dbg !12206, !llvm.loop !12219

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !12221
  br label %for.cond12, !dbg !12221

for.cond12:                                       ; preds = %for.inc38, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !12223
  %27 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12223
  %dev13 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %27, i32 0, i32 1, !dbg !12223
  %28 = load %struct.drm_device*, %struct.drm_device** %dev13, align 8, !dbg !12223
  %mode_config14 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %28, i32 0, i32 35, !dbg !12223
  %num_crtc = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config14, i32 0, i32 19, !dbg !12223
  %29 = load i32, i32* %num_crtc, align 8, !dbg !12223
  %cmp15 = icmp slt i32 %26, %29, !dbg !12223
  br i1 %cmp15, label %for.body16, label %for.end40, !dbg !12221

for.body16:                                       ; preds = %for.cond12
  %30 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12225
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %30, i32 0, i32 4, !dbg !12225
  %31 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !12225
  %32 = load i32, i32* %i, align 4, !dbg !12225
  %idxprom17 = sext i32 %32 to i64, !dbg !12225
  %arrayidx18 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %31, i64 %idxprom17, !dbg !12225
  %ptr19 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx18, i32 0, i32 0, !dbg !12225
  %33 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr19, align 8, !dbg !12225
  %tobool20 = icmp ne %struct.drm_crtc* %33, null, !dbg !12225
  br i1 %tobool20, label %land.lhs.true21, label %if.then30, !dbg !12225

land.lhs.true21:                                  ; preds = %for.body16
  %34 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12225
  %crtcs22 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %34, i32 0, i32 4, !dbg !12225
  %35 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs22, align 8, !dbg !12225
  %36 = load i32, i32* %i, align 4, !dbg !12225
  %idxprom23 = sext i32 %36 to i64, !dbg !12225
  %arrayidx24 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %35, i64 %idxprom23, !dbg !12225
  %ptr25 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx24, i32 0, i32 0, !dbg !12225
  %37 = load %struct.drm_crtc*, %struct.drm_crtc** %ptr25, align 8, !dbg !12225
  store %struct.drm_crtc* %37, %struct.drm_crtc** %crtc, align 8, !dbg !12225
  %38 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12225
  %39 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12225
  %crtcs26 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %39, i32 0, i32 4, !dbg !12225
  %40 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs26, align 8, !dbg !12225
  %41 = load i32, i32* %i, align 4, !dbg !12225
  %idxprom27 = sext i32 %41 to i64, !dbg !12225
  %arrayidx28 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %40, i64 %idxprom27, !dbg !12225
  %new_state29 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx28, i32 0, i32 3, !dbg !12225
  %42 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state29, align 8, !dbg !12225
  store %struct.drm_crtc_state* %42, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !12225
  %43 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_crtc_state, align 8, !dbg !12225
  br i1 true, label %if.else31, label %if.then30, !dbg !12223

if.then30:                                        ; preds = %land.lhs.true21, %for.body16
  br label %if.end37, !dbg !12227

if.else31:                                        ; preds = %land.lhs.true21
  %44 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12229
  %state32 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %44, i32 0, i32 21, !dbg !12230
  %45 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state32, align 8, !dbg !12230
  %46 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12231
  %crtcs33 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %46, i32 0, i32 4, !dbg !12232
  %47 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs33, align 8, !dbg !12232
  %48 = load i32, i32* %i, align 4, !dbg !12233
  %idxprom34 = sext i32 %48 to i64, !dbg !12231
  %arrayidx35 = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %47, i64 %idxprom34, !dbg !12231
  %old_state36 = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx35, i32 0, i32 2, !dbg !12234
  store %struct.drm_crtc_state* %45, %struct.drm_crtc_state** %old_state36, align 8, !dbg !12235
  br label %if.end37

if.end37:                                         ; preds = %if.else31, %if.then30
  br label %for.inc38, !dbg !12225

for.inc38:                                        ; preds = %if.end37
  %49 = load i32, i32* %i, align 4, !dbg !12223
  %inc39 = add i32 %49, 1, !dbg !12223
  store i32 %inc39, i32* %i, align 4, !dbg !12223
  br label %for.cond12, !dbg !12223, !llvm.loop !12236

for.end40:                                        ; preds = %for.cond12
  store i32 0, i32* %i, align 4, !dbg !12238
  br label %for.cond41, !dbg !12238

for.cond41:                                       ; preds = %for.inc65, %for.end40
  %50 = load i32, i32* %i, align 4, !dbg !12240
  %51 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12240
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %51, i32 0, i32 5, !dbg !12240
  %52 = load i32, i32* %num_connector, align 8, !dbg !12240
  %cmp42 = icmp slt i32 %50, %52, !dbg !12240
  br i1 %cmp42, label %for.body43, label %for.end67, !dbg !12238

for.body43:                                       ; preds = %for.cond41
  %53 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12242
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %53, i32 0, i32 6, !dbg !12242
  %54 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !12242
  %55 = load i32, i32* %i, align 4, !dbg !12242
  %idxprom44 = sext i32 %55 to i64, !dbg !12242
  %arrayidx45 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %54, i64 %idxprom44, !dbg !12242
  %ptr46 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx45, i32 0, i32 0, !dbg !12242
  %56 = load %struct.drm_connector*, %struct.drm_connector** %ptr46, align 8, !dbg !12242
  %tobool47 = icmp ne %struct.drm_connector* %56, null, !dbg !12242
  br i1 %tobool47, label %land.lhs.true48, label %if.then57, !dbg !12242

land.lhs.true48:                                  ; preds = %for.body43
  %57 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12242
  %connectors49 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %57, i32 0, i32 6, !dbg !12242
  %58 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors49, align 8, !dbg !12242
  %59 = load i32, i32* %i, align 4, !dbg !12242
  %idxprom50 = sext i32 %59 to i64, !dbg !12242
  %arrayidx51 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %58, i64 %idxprom50, !dbg !12242
  %ptr52 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx51, i32 0, i32 0, !dbg !12242
  %60 = load %struct.drm_connector*, %struct.drm_connector** %ptr52, align 8, !dbg !12242
  store %struct.drm_connector* %60, %struct.drm_connector** %connector, align 8, !dbg !12242
  %61 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !12242
  %62 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12242
  %connectors53 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %62, i32 0, i32 6, !dbg !12242
  %63 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors53, align 8, !dbg !12242
  %64 = load i32, i32* %i, align 4, !dbg !12242
  %idxprom54 = sext i32 %64 to i64, !dbg !12242
  %arrayidx55 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %63, i64 %idxprom54, !dbg !12242
  %new_state56 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx55, i32 0, i32 3, !dbg !12242
  %65 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state56, align 8, !dbg !12242
  store %struct.drm_connector_state* %65, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !12242
  %66 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_conn_state, align 8, !dbg !12242
  br i1 true, label %if.else58, label %if.then57, !dbg !12240

if.then57:                                        ; preds = %land.lhs.true48, %for.body43
  br label %if.end64, !dbg !12244

if.else58:                                        ; preds = %land.lhs.true48
  %67 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !12246
  %state59 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %67, i32 0, i32 46, !dbg !12247
  %68 = load %struct.drm_connector_state*, %struct.drm_connector_state** %state59, align 8, !dbg !12247
  %69 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12248
  %connectors60 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %69, i32 0, i32 6, !dbg !12249
  %70 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors60, align 8, !dbg !12249
  %71 = load i32, i32* %i, align 4, !dbg !12250
  %idxprom61 = sext i32 %71 to i64, !dbg !12248
  %arrayidx62 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %70, i64 %idxprom61, !dbg !12248
  %old_state63 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx62, i32 0, i32 2, !dbg !12251
  store %struct.drm_connector_state* %68, %struct.drm_connector_state** %old_state63, align 8, !dbg !12252
  br label %if.end64

if.end64:                                         ; preds = %if.else58, %if.then57
  br label %for.inc65, !dbg !12242

for.inc65:                                        ; preds = %if.end64
  %72 = load i32, i32* %i, align 4, !dbg !12240
  %inc66 = add i32 %72, 1, !dbg !12240
  store i32 %inc66, i32* %i, align 4, !dbg !12240
  br label %for.cond41, !dbg !12240, !llvm.loop !12253

for.end67:                                        ; preds = %for.cond41
  %73 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12255
  %call = call i32 @drm_atomic_commit(%struct.drm_atomic_state* %73) #9, !dbg !12256
  store i32 %call, i32* %ret, align 4, !dbg !12257
  %74 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12258
  %acquire_ctx68 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %74, i32 0, i32 9, !dbg !12259
  store %struct.drm_modeset_acquire_ctx* null, %struct.drm_modeset_acquire_ctx** %acquire_ctx68, align 8, !dbg !12260
  %75 = load i32, i32* %ret, align 4, !dbg !12261
  ret i32 %75, !dbg !12262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_resume(%struct.drm_device* %dev, %struct.drm_atomic_state* %state) #0 !dbg !12263 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %ctx = alloca %struct.drm_modeset_acquire_ctx, align 8
  %err = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !12264, metadata !DIExpression()), !dbg !12265
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !12266, metadata !DIExpression()), !dbg !12267
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx* %ctx, metadata !12268, metadata !DIExpression()), !dbg !12269
  call void @llvm.dbg.declare(metadata i32* %err, metadata !12270, metadata !DIExpression()), !dbg !12271
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12272
  call void @drm_mode_config_reset(%struct.drm_device* %0) #9, !dbg !12273
  %1 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12274
  %call = call zeroext i1 @drm_drv_uses_atomic_modeset(%struct.drm_device* %1) #9, !dbg !12274
  br i1 %call, label %if.end, label %if.then, !dbg !12276

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12274
  %mode_config = getelementptr inbounds %struct.drm_device, %struct.drm_device* %2, i32 0, i32 35, !dbg !12274
  %mutex = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config, i32 0, i32 0, !dbg !12274
  call void @mutex_lock(%struct.mutex* %mutex) #9, !dbg !12274
  br label %if.end, !dbg !12274

if.end:                                           ; preds = %if.then, %entry
  call void @drm_modeset_acquire_init(%struct.drm_modeset_acquire_ctx* %ctx, i32 0) #9, !dbg !12276
  br label %modeset_lock_retry, !dbg !12276

modeset_lock_retry:                               ; preds = %if.then8, %if.end
  call void @llvm.dbg.label(metadata !12277), !dbg !12276
  %3 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12276
  %call1 = call i32 @drm_modeset_lock_all_ctx(%struct.drm_device* %3, %struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12276
  store i32 %call1, i32* %err, align 4, !dbg !12276
  %4 = load i32, i32* %err, align 4, !dbg !12278
  %tobool = icmp ne i32 %4, 0, !dbg !12278
  br i1 %tobool, label %if.then2, label %if.end3, !dbg !12276

if.then2:                                         ; preds = %modeset_lock_retry
  br label %modeset_lock_fail, !dbg !12278

if.end3:                                          ; preds = %modeset_lock_retry
  %5 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12280
  %call4 = call i32 @drm_atomic_helper_commit_duplicated_state(%struct.drm_atomic_state* %5, %struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12281
  store i32 %call4, i32* %err, align 4, !dbg !12282
  br label %modeset_lock_fail, !dbg !12283

modeset_lock_fail:                                ; preds = %if.end3, %if.then2
  call void @llvm.dbg.label(metadata !12284), !dbg !12285
  %6 = load i32, i32* %err, align 4, !dbg !12286
  %cmp = icmp eq i32 %6, -35, !dbg !12286
  br i1 %cmp, label %if.then5, label %if.end10, !dbg !12285

if.then5:                                         ; preds = %modeset_lock_fail
  %call6 = call i32 @drm_modeset_backoff(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12288
  store i32 %call6, i32* %err, align 4, !dbg !12288
  %7 = load i32, i32* %err, align 4, !dbg !12290
  %tobool7 = icmp ne i32 %7, 0, !dbg !12290
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !12288

if.then8:                                         ; preds = %if.then5
  br label %modeset_lock_retry, !dbg !12290

if.end9:                                          ; preds = %if.then5
  br label %if.end10, !dbg !12288

if.end10:                                         ; preds = %if.end9, %modeset_lock_fail
  call void @drm_modeset_drop_locks(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12285
  call void @drm_modeset_acquire_fini(%struct.drm_modeset_acquire_ctx* %ctx) #9, !dbg !12285
  %8 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12292
  %call11 = call zeroext i1 @drm_drv_uses_atomic_modeset(%struct.drm_device* %8) #9, !dbg !12292
  br i1 %call11, label %if.end15, label %if.then12, !dbg !12285

if.then12:                                        ; preds = %if.end10
  %9 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12292
  %mode_config13 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %9, i32 0, i32 35, !dbg !12292
  %mutex14 = getelementptr inbounds %struct.drm_mode_config, %struct.drm_mode_config* %mode_config13, i32 0, i32 0, !dbg !12292
  call void @mutex_unlock(%struct.mutex* %mutex14) #9, !dbg !12292
  br label %if.end15, !dbg !12292

if.end15:                                         ; preds = %if.then12, %if.end10
  %10 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12294
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %10) #9, !dbg !12295
  %11 = load i32, i32* %err, align 4, !dbg !12296
  ret i32 %11, !dbg !12297
}

; Function Attrs: noredzone
declare dso_local void @drm_mode_config_reset(%struct.drm_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_page_flip(%struct.drm_crtc* %crtc, %struct.drm_framebuffer* %fb, %struct.drm_pending_vblank_event* %event, i32 %flags, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !12298 {
entry:
  %retval = alloca i32, align 4
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %fb.addr = alloca %struct.drm_framebuffer*, align 8
  %event.addr = alloca %struct.drm_pending_vblank_event*, align 8
  %flags.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !12299, metadata !DIExpression()), !dbg !12300
  store %struct.drm_framebuffer* %fb, %struct.drm_framebuffer** %fb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_framebuffer** %fb.addr, metadata !12301, metadata !DIExpression()), !dbg !12302
  store %struct.drm_pending_vblank_event* %event, %struct.drm_pending_vblank_event** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_pending_vblank_event** %event.addr, metadata !12303, metadata !DIExpression()), !dbg !12304
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12305, metadata !DIExpression()), !dbg !12306
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !12307, metadata !DIExpression()), !dbg !12308
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !12309, metadata !DIExpression()), !dbg !12310
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12311
  %primary = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %0, i32 0, i32 6, !dbg !12312
  %1 = load %struct.drm_plane*, %struct.drm_plane** %primary, align 8, !dbg !12312
  store %struct.drm_plane* %1, %struct.drm_plane** %plane, align 8, !dbg !12310
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !12313, metadata !DIExpression()), !dbg !12314
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12315, metadata !DIExpression()), !dbg !12316
  store i32 0, i32* %ret, align 4, !dbg !12316
  %2 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12317
  %dev = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %2, i32 0, i32 0, !dbg !12318
  %3 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12318
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %3) #9, !dbg !12319
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !12320
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12321
  %tobool = icmp ne %struct.drm_atomic_state* %4, null, !dbg !12321
  br i1 %tobool, label %if.end, label %if.then, !dbg !12323

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12324
  br label %return, !dbg !12324

if.end:                                           ; preds = %entry
  %5 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !12325
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12326
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %6, i32 0, i32 9, !dbg !12327
  store %struct.drm_modeset_acquire_ctx* %5, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !12328
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12329
  %8 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12330
  %9 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb.addr, align 8, !dbg !12331
  %10 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event.addr, align 8, !dbg !12332
  %11 = load i32, i32* %flags.addr, align 4, !dbg !12333
  %call1 = call i32 @page_flip_common(%struct.drm_atomic_state* %7, %struct.drm_crtc* %8, %struct.drm_framebuffer* %9, %struct.drm_pending_vblank_event* %10, i32 %11) #9, !dbg !12334
  store i32 %call1, i32* %ret, align 4, !dbg !12335
  %12 = load i32, i32* %ret, align 4, !dbg !12336
  %cmp = icmp ne i32 %12, 0, !dbg !12338
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12339

if.then2:                                         ; preds = %if.end
  br label %fail, !dbg !12340

if.end3:                                          ; preds = %if.end
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12341
  %call4 = call i32 @drm_atomic_nonblocking_commit(%struct.drm_atomic_state* %13) #9, !dbg !12342
  store i32 %call4, i32* %ret, align 4, !dbg !12343
  br label %fail, !dbg !12344

fail:                                             ; preds = %if.end3, %if.then2
  call void @llvm.dbg.label(metadata !12345), !dbg !12346
  %14 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12347
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %14) #9, !dbg !12348
  %15 = load i32, i32* %ret, align 4, !dbg !12349
  store i32 %15, i32* %retval, align 4, !dbg !12350
  br label %return, !dbg !12350

return:                                           ; preds = %fail, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !12351
  ret i32 %16, !dbg !12351
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @page_flip_common(%struct.drm_atomic_state* %state, %struct.drm_crtc* %crtc, %struct.drm_framebuffer* %fb, %struct.drm_pending_vblank_event* %event, i32 %flags) #0 !dbg !12352 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %fb.addr = alloca %struct.drm_framebuffer*, align 8
  %event.addr = alloca %struct.drm_pending_vblank_event*, align 8
  %flags.addr = alloca i32, align 4
  %plane = alloca %struct.drm_plane*, align 8
  %plane_state = alloca %struct.drm_plane_state*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !12355, metadata !DIExpression()), !dbg !12356
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !12357, metadata !DIExpression()), !dbg !12358
  store %struct.drm_framebuffer* %fb, %struct.drm_framebuffer** %fb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_framebuffer** %fb.addr, metadata !12359, metadata !DIExpression()), !dbg !12360
  store %struct.drm_pending_vblank_event* %event, %struct.drm_pending_vblank_event** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_pending_vblank_event** %event.addr, metadata !12361, metadata !DIExpression()), !dbg !12362
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12363, metadata !DIExpression()), !dbg !12364
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !12365, metadata !DIExpression()), !dbg !12366
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12367
  %primary = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %0, i32 0, i32 6, !dbg !12368
  %1 = load %struct.drm_plane*, %struct.drm_plane** %primary, align 8, !dbg !12368
  store %struct.drm_plane* %1, %struct.drm_plane** %plane, align 8, !dbg !12366
  call void @llvm.dbg.declare(metadata %struct.drm_plane_state** %plane_state, metadata !12369, metadata !DIExpression()), !dbg !12370
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !12371, metadata !DIExpression()), !dbg !12372
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12373, metadata !DIExpression()), !dbg !12374
  store i32 0, i32* %ret, align 4, !dbg !12374
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12375
  %3 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12376
  %call = call %struct.drm_crtc_state* @drm_atomic_get_crtc_state(%struct.drm_atomic_state* %2, %struct.drm_crtc* %3) #9, !dbg !12377
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12378
  %4 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12379
  %5 = bitcast %struct.drm_crtc_state* %4 to i8*, !dbg !12379
  %call1 = call zeroext i1 @IS_ERR(i8* %5) #9, !dbg !12381
  br i1 %call1, label %if.then, label %if.end, !dbg !12382

if.then:                                          ; preds = %entry
  %6 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12383
  %7 = bitcast %struct.drm_crtc_state* %6 to i8*, !dbg !12383
  %call2 = call i64 @PTR_ERR(i8* %7) #9, !dbg !12384
  %conv = trunc i64 %call2 to i32, !dbg !12384
  store i32 %conv, i32* %retval, align 4, !dbg !12385
  br label %return, !dbg !12385

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event.addr, align 8, !dbg !12386
  %9 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12387
  %event3 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %9, i32 0, i32 17, !dbg !12388
  store %struct.drm_pending_vblank_event* %8, %struct.drm_pending_vblank_event** %event3, align 8, !dbg !12389
  %10 = load i32, i32* %flags.addr, align 4, !dbg !12390
  %and = and i32 %10, 2, !dbg !12391
  %tobool = icmp ne i32 %and, 0, !dbg !12390
  %11 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12392
  %async_flip = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %11, i32 0, i32 14, !dbg !12393
  %frombool = zext i1 %tobool to i8, !dbg !12394
  store i8 %frombool, i8* %async_flip, align 4, !dbg !12394
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12395
  %13 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12396
  %call4 = call %struct.drm_plane_state* @drm_atomic_get_plane_state(%struct.drm_atomic_state* %12, %struct.drm_plane* %13) #9, !dbg !12397
  store %struct.drm_plane_state* %call4, %struct.drm_plane_state** %plane_state, align 8, !dbg !12398
  %14 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !12399
  %15 = bitcast %struct.drm_plane_state* %14 to i8*, !dbg !12399
  %call5 = call zeroext i1 @IS_ERR(i8* %15) #9, !dbg !12401
  br i1 %call5, label %if.then6, label %if.end9, !dbg !12402

if.then6:                                         ; preds = %if.end
  %16 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !12403
  %17 = bitcast %struct.drm_plane_state* %16 to i8*, !dbg !12403
  %call7 = call i64 @PTR_ERR(i8* %17) #9, !dbg !12404
  %conv8 = trunc i64 %call7 to i32, !dbg !12404
  store i32 %conv8, i32* %retval, align 4, !dbg !12405
  br label %return, !dbg !12405

if.end9:                                          ; preds = %if.end
  %18 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !12406
  %19 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12407
  %call10 = call i32 @drm_atomic_set_crtc_for_plane(%struct.drm_plane_state* %18, %struct.drm_crtc* %19) #9, !dbg !12408
  store i32 %call10, i32* %ret, align 4, !dbg !12409
  %20 = load i32, i32* %ret, align 4, !dbg !12410
  %cmp = icmp ne i32 %20, 0, !dbg !12412
  br i1 %cmp, label %if.then12, label %if.end13, !dbg !12413

if.then12:                                        ; preds = %if.end9
  %21 = load i32, i32* %ret, align 4, !dbg !12414
  store i32 %21, i32* %retval, align 4, !dbg !12415
  br label %return, !dbg !12415

if.end13:                                         ; preds = %if.end9
  %22 = load %struct.drm_plane_state*, %struct.drm_plane_state** %plane_state, align 8, !dbg !12416
  %23 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb.addr, align 8, !dbg !12417
  call void @drm_atomic_set_fb_for_plane(%struct.drm_plane_state* %22, %struct.drm_framebuffer* %23) #9, !dbg !12418
  %24 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12419
  %allow_modeset = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %24, i32 0, i32 2, !dbg !12420
  %bf.load = load i8, i8* %allow_modeset, align 8, !dbg !12421
  %bf.clear = and i8 %bf.load, -2, !dbg !12421
  store i8 %bf.clear, i8* %allow_modeset, align 8, !dbg !12421
  %25 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12422
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %25, i32 0, i32 2, !dbg !12424
  %26 = load i8, i8* %active, align 1, !dbg !12424
  %tobool14 = trunc i8 %26 to i1, !dbg !12424
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !12425

if.then15:                                        ; preds = %if.end13
  %27 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12426
  %base = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %27, i32 0, i32 5, !dbg !12426
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !12426
  %28 = load i32, i32* %id, align 8, !dbg !12426
  %29 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12426
  %name = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %29, i32 0, i32 3, !dbg !12426
  %30 = load i8*, i8** %name, align 8, !dbg !12426
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.52, i64 0, i64 0), i32 %28, i8* %30) #9, !dbg !12426
  store i32 -22, i32* %retval, align 4, !dbg !12428
  br label %return, !dbg !12428

if.end16:                                         ; preds = %if.end13
  %31 = load i32, i32* %ret, align 4, !dbg !12429
  store i32 %31, i32* %retval, align 4, !dbg !12430
  br label %return, !dbg !12430

return:                                           ; preds = %if.end16, %if.then15, %if.then12, %if.then6, %if.then
  %32 = load i32, i32* %retval, align 4, !dbg !12431
  ret i32 %32, !dbg !12431
}

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_nonblocking_commit(%struct.drm_atomic_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_page_flip_target(%struct.drm_crtc* %crtc, %struct.drm_framebuffer* %fb, %struct.drm_pending_vblank_event* %event, i32 %flags, i32 %target, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !12432 {
entry:
  %retval = alloca i32, align 4
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %fb.addr = alloca %struct.drm_framebuffer*, align 8
  %event.addr = alloca %struct.drm_pending_vblank_event*, align 8
  %flags.addr = alloca i32, align 4
  %target.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %plane = alloca %struct.drm_plane*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !12433, metadata !DIExpression()), !dbg !12434
  store %struct.drm_framebuffer* %fb, %struct.drm_framebuffer** %fb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_framebuffer** %fb.addr, metadata !12435, metadata !DIExpression()), !dbg !12436
  store %struct.drm_pending_vblank_event* %event, %struct.drm_pending_vblank_event** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_pending_vblank_event** %event.addr, metadata !12437, metadata !DIExpression()), !dbg !12438
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12439, metadata !DIExpression()), !dbg !12440
  store i32 %target, i32* %target.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %target.addr, metadata !12441, metadata !DIExpression()), !dbg !12442
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !12443, metadata !DIExpression()), !dbg !12444
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane, metadata !12445, metadata !DIExpression()), !dbg !12446
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12447
  %primary = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %0, i32 0, i32 6, !dbg !12448
  %1 = load %struct.drm_plane*, %struct.drm_plane** %primary, align 8, !dbg !12448
  store %struct.drm_plane* %1, %struct.drm_plane** %plane, align 8, !dbg !12446
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !12449, metadata !DIExpression()), !dbg !12450
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !12451, metadata !DIExpression()), !dbg !12452
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12453, metadata !DIExpression()), !dbg !12454
  store i32 0, i32* %ret, align 4, !dbg !12454
  %2 = load %struct.drm_plane*, %struct.drm_plane** %plane, align 8, !dbg !12455
  %dev = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %2, i32 0, i32 0, !dbg !12456
  %3 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12456
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %3) #9, !dbg !12457
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !12458
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12459
  %tobool = icmp ne %struct.drm_atomic_state* %4, null, !dbg !12459
  br i1 %tobool, label %if.end, label %if.then, !dbg !12461

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12462
  br label %return, !dbg !12462

if.end:                                           ; preds = %entry
  %5 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !12463
  %6 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12464
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %6, i32 0, i32 9, !dbg !12465
  store %struct.drm_modeset_acquire_ctx* %5, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !12466
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12467
  %8 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12468
  %9 = load %struct.drm_framebuffer*, %struct.drm_framebuffer** %fb.addr, align 8, !dbg !12469
  %10 = load %struct.drm_pending_vblank_event*, %struct.drm_pending_vblank_event** %event.addr, align 8, !dbg !12470
  %11 = load i32, i32* %flags.addr, align 4, !dbg !12471
  %call1 = call i32 @page_flip_common(%struct.drm_atomic_state* %7, %struct.drm_crtc* %8, %struct.drm_framebuffer* %9, %struct.drm_pending_vblank_event* %10, i32 %11) #9, !dbg !12472
  store i32 %call1, i32* %ret, align 4, !dbg !12473
  %12 = load i32, i32* %ret, align 4, !dbg !12474
  %cmp = icmp ne i32 %12, 0, !dbg !12476
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12477

if.then2:                                         ; preds = %if.end
  br label %fail, !dbg !12478

if.end3:                                          ; preds = %if.end
  %13 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12479
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12480
  %call4 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %13, %struct.drm_crtc* %14) #9, !dbg !12481
  store %struct.drm_crtc_state* %call4, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12482
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12483, metadata !DIExpression()), !dbg !12486
  %15 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12486
  %tobool5 = icmp ne %struct.drm_crtc_state* %15, null, !dbg !12486
  %lnot = xor i1 %tobool5, true, !dbg !12486
  %lnot6 = xor i1 %lnot, true, !dbg !12486
  %lnot7 = xor i1 %lnot6, true, !dbg !12486
  %lnot.ext = zext i1 %lnot7 to i32, !dbg !12486
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12486
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !12487
  %tobool8 = icmp ne i32 %16, 0, !dbg !12487
  %lnot9 = xor i1 %tobool8, true, !dbg !12487
  %lnot11 = xor i1 %lnot9, true, !dbg !12487
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !12487
  %conv = sext i32 %lnot.ext12 to i64, !dbg !12487
  %tobool13 = icmp ne i64 %conv, 0, !dbg !12487
  br i1 %tobool13, label %if.then14, label %if.end21, !dbg !12486

if.then14:                                        ; preds = %if.end3
  br label %do.body, !dbg !12487

do.body:                                          ; preds = %if.then14
  br label %do.body15, !dbg !12489

do.body15:                                        ; preds = %do.body
  br label %do.end, !dbg !12491

do.end:                                           ; preds = %do.body15
  br label %do.body16, !dbg !12489

do.body16:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 3475, i32 2305, i64 12) #8, !dbg !12493, !srcloc !12495
  br label %do.end17, !dbg !12493

do.end17:                                         ; preds = %do.body16
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 314) #8, !dbg !12496, !srcloc !12498
  br label %do.body18, !dbg !12489

do.body18:                                        ; preds = %do.end17
  br label %do.end19, !dbg !12499

do.end19:                                         ; preds = %do.body18
  br label %do.end20, !dbg !12489

do.end20:                                         ; preds = %do.end19
  br label %if.end21, !dbg !12489

if.end21:                                         ; preds = %do.end20, %if.end3
  %17 = load i32, i32* %__ret_warn_on, align 4, !dbg !12486
  %tobool22 = icmp ne i32 %17, 0, !dbg !12486
  %lnot23 = xor i1 %tobool22, true, !dbg !12486
  %lnot25 = xor i1 %lnot23, true, !dbg !12486
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !12486
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !12486
  store i64 %conv27, i64* %tmp, align 8, !dbg !12487
  %18 = load i64, i64* %tmp, align 8, !dbg !12486
  %tobool28 = icmp ne i64 %18, 0, !dbg !12501
  br i1 %tobool28, label %if.then29, label %if.end30, !dbg !12502

if.then29:                                        ; preds = %if.end21
  store i32 -22, i32* %ret, align 4, !dbg !12503
  br label %fail, !dbg !12505

if.end30:                                         ; preds = %if.end21
  %19 = load i32, i32* %target.addr, align 4, !dbg !12506
  %20 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12507
  %target_vblank = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %20, i32 0, i32 13, !dbg !12508
  store i32 %19, i32* %target_vblank, align 8, !dbg !12509
  %21 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12510
  %call31 = call i32 @drm_atomic_nonblocking_commit(%struct.drm_atomic_state* %21) #9, !dbg !12511
  store i32 %call31, i32* %ret, align 4, !dbg !12512
  br label %fail, !dbg !12513

fail:                                             ; preds = %if.end30, %if.then29, %if.then2
  call void @llvm.dbg.label(metadata !12514), !dbg !12515
  %22 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12516
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %22) #9, !dbg !12517
  %23 = load i32, i32* %ret, align 4, !dbg !12518
  store i32 %23, i32* %retval, align 4, !dbg !12519
  br label %return, !dbg !12519

return:                                           ; preds = %fail, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !12520
  ret i32 %24, !dbg !12520
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_atomic_helper_legacy_gamma_set(%struct.drm_crtc* %crtc, i16* %red, i16* %green, i16* %blue, i32 %size, %struct.drm_modeset_acquire_ctx* %ctx) #0 !dbg !12521 {
entry:
  %retval = alloca i32, align 4
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %red.addr = alloca i16*, align 8
  %green.addr = alloca i16*, align 8
  %blue.addr = alloca i16*, align 8
  %size.addr = alloca i32, align 4
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %state = alloca %struct.drm_atomic_state*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %blob = alloca %struct.drm_property_blob*, align 8
  %blob_data = alloca %struct.drm_color_lut*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %replaced = alloca i8, align 1
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !12522, metadata !DIExpression()), !dbg !12523
  store i16* %red, i16** %red.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %red.addr, metadata !12524, metadata !DIExpression()), !dbg !12525
  store i16* %green, i16** %green.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %green.addr, metadata !12526, metadata !DIExpression()), !dbg !12527
  store i16* %blue, i16** %blue.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %blue.addr, metadata !12528, metadata !DIExpression()), !dbg !12529
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12530, metadata !DIExpression()), !dbg !12531
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !12532, metadata !DIExpression()), !dbg !12533
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !12534, metadata !DIExpression()), !dbg !12535
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12536
  %dev1 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %0, i32 0, i32 0, !dbg !12537
  %1 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !12537
  store %struct.drm_device* %1, %struct.drm_device** %dev, align 8, !dbg !12535
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state, metadata !12538, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !12540, metadata !DIExpression()), !dbg !12541
  call void @llvm.dbg.declare(metadata %struct.drm_property_blob** %blob, metadata !12542, metadata !DIExpression()), !dbg !12543
  store %struct.drm_property_blob* null, %struct.drm_property_blob** %blob, align 8, !dbg !12543
  call void @llvm.dbg.declare(metadata %struct.drm_color_lut** %blob_data, metadata !12544, metadata !DIExpression()), !dbg !12552
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12553, metadata !DIExpression()), !dbg !12554
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12555, metadata !DIExpression()), !dbg !12556
  store i32 0, i32* %ret, align 4, !dbg !12556
  call void @llvm.dbg.declare(metadata i8* %replaced, metadata !12557, metadata !DIExpression()), !dbg !12558
  %2 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12559
  %dev2 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %2, i32 0, i32 0, !dbg !12560
  %3 = load %struct.drm_device*, %struct.drm_device** %dev2, align 8, !dbg !12560
  %call = call %struct.drm_atomic_state* @drm_atomic_state_alloc(%struct.drm_device* %3) #9, !dbg !12561
  store %struct.drm_atomic_state* %call, %struct.drm_atomic_state** %state, align 8, !dbg !12562
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12563
  %tobool = icmp ne %struct.drm_atomic_state* %4, null, !dbg !12563
  br i1 %tobool, label %if.end, label %if.then, !dbg !12565

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !12566
  br label %return, !dbg !12566

if.end:                                           ; preds = %entry
  %5 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12567
  %6 = load i32, i32* %size.addr, align 4, !dbg !12568
  %conv = zext i32 %6 to i64, !dbg !12568
  %mul = mul i64 8, %conv, !dbg !12569
  %call3 = call %struct.drm_property_blob* @drm_property_create_blob(%struct.drm_device* %5, i64 %mul, i8* null) #9, !dbg !12570
  store %struct.drm_property_blob* %call3, %struct.drm_property_blob** %blob, align 8, !dbg !12571
  %7 = load %struct.drm_property_blob*, %struct.drm_property_blob** %blob, align 8, !dbg !12572
  %8 = bitcast %struct.drm_property_blob* %7 to i8*, !dbg !12572
  %call4 = call zeroext i1 @IS_ERR(i8* %8) #9, !dbg !12574
  br i1 %call4, label %if.then5, label %if.end8, !dbg !12575

if.then5:                                         ; preds = %if.end
  %9 = load %struct.drm_property_blob*, %struct.drm_property_blob** %blob, align 8, !dbg !12576
  %10 = bitcast %struct.drm_property_blob* %9 to i8*, !dbg !12576
  %call6 = call i64 @PTR_ERR(i8* %10) #9, !dbg !12578
  %conv7 = trunc i64 %call6 to i32, !dbg !12578
  store i32 %conv7, i32* %ret, align 4, !dbg !12579
  store %struct.drm_property_blob* null, %struct.drm_property_blob** %blob, align 8, !dbg !12580
  br label %fail, !dbg !12581

if.end8:                                          ; preds = %if.end
  %11 = load %struct.drm_property_blob*, %struct.drm_property_blob** %blob, align 8, !dbg !12582
  %data = getelementptr inbounds %struct.drm_property_blob, %struct.drm_property_blob* %11, i32 0, i32 5, !dbg !12583
  %12 = load i8*, i8** %data, align 8, !dbg !12583
  %13 = bitcast i8* %12 to %struct.drm_color_lut*, !dbg !12582
  store %struct.drm_color_lut* %13, %struct.drm_color_lut** %blob_data, align 8, !dbg !12584
  store i32 0, i32* %i, align 4, !dbg !12585
  br label %for.cond, !dbg !12587

for.cond:                                         ; preds = %for.inc, %if.end8
  %14 = load i32, i32* %i, align 4, !dbg !12588
  %15 = load i32, i32* %size.addr, align 4, !dbg !12590
  %cmp = icmp ult i32 %14, %15, !dbg !12591
  br i1 %cmp, label %for.body, label %for.end, !dbg !12592

for.body:                                         ; preds = %for.cond
  %16 = load i16*, i16** %red.addr, align 8, !dbg !12593
  %17 = load i32, i32* %i, align 4, !dbg !12595
  %idxprom = sext i32 %17 to i64, !dbg !12593
  %arrayidx = getelementptr i16, i16* %16, i64 %idxprom, !dbg !12593
  %18 = load i16, i16* %arrayidx, align 2, !dbg !12593
  %19 = load %struct.drm_color_lut*, %struct.drm_color_lut** %blob_data, align 8, !dbg !12596
  %20 = load i32, i32* %i, align 4, !dbg !12597
  %idxprom10 = sext i32 %20 to i64, !dbg !12596
  %arrayidx11 = getelementptr %struct.drm_color_lut, %struct.drm_color_lut* %19, i64 %idxprom10, !dbg !12596
  %red12 = getelementptr inbounds %struct.drm_color_lut, %struct.drm_color_lut* %arrayidx11, i32 0, i32 0, !dbg !12598
  store i16 %18, i16* %red12, align 2, !dbg !12599
  %21 = load i16*, i16** %green.addr, align 8, !dbg !12600
  %22 = load i32, i32* %i, align 4, !dbg !12601
  %idxprom13 = sext i32 %22 to i64, !dbg !12600
  %arrayidx14 = getelementptr i16, i16* %21, i64 %idxprom13, !dbg !12600
  %23 = load i16, i16* %arrayidx14, align 2, !dbg !12600
  %24 = load %struct.drm_color_lut*, %struct.drm_color_lut** %blob_data, align 8, !dbg !12602
  %25 = load i32, i32* %i, align 4, !dbg !12603
  %idxprom15 = sext i32 %25 to i64, !dbg !12602
  %arrayidx16 = getelementptr %struct.drm_color_lut, %struct.drm_color_lut* %24, i64 %idxprom15, !dbg !12602
  %green17 = getelementptr inbounds %struct.drm_color_lut, %struct.drm_color_lut* %arrayidx16, i32 0, i32 1, !dbg !12604
  store i16 %23, i16* %green17, align 2, !dbg !12605
  %26 = load i16*, i16** %blue.addr, align 8, !dbg !12606
  %27 = load i32, i32* %i, align 4, !dbg !12607
  %idxprom18 = sext i32 %27 to i64, !dbg !12606
  %arrayidx19 = getelementptr i16, i16* %26, i64 %idxprom18, !dbg !12606
  %28 = load i16, i16* %arrayidx19, align 2, !dbg !12606
  %29 = load %struct.drm_color_lut*, %struct.drm_color_lut** %blob_data, align 8, !dbg !12608
  %30 = load i32, i32* %i, align 4, !dbg !12609
  %idxprom20 = sext i32 %30 to i64, !dbg !12608
  %arrayidx21 = getelementptr %struct.drm_color_lut, %struct.drm_color_lut* %29, i64 %idxprom20, !dbg !12608
  %blue22 = getelementptr inbounds %struct.drm_color_lut, %struct.drm_color_lut* %arrayidx21, i32 0, i32 2, !dbg !12610
  store i16 %28, i16* %blue22, align 2, !dbg !12611
  br label %for.inc, !dbg !12612

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !12613
  %inc = add i32 %31, 1, !dbg !12613
  store i32 %inc, i32* %i, align 4, !dbg !12613
  br label %for.cond, !dbg !12614, !llvm.loop !12615

for.end:                                          ; preds = %for.cond
  %32 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !12617
  %33 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12618
  %acquire_ctx = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %33, i32 0, i32 9, !dbg !12619
  store %struct.drm_modeset_acquire_ctx* %32, %struct.drm_modeset_acquire_ctx** %acquire_ctx, align 8, !dbg !12620
  %34 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12621
  %35 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12622
  %call23 = call %struct.drm_crtc_state* @drm_atomic_get_crtc_state(%struct.drm_atomic_state* %34, %struct.drm_crtc* %35) #9, !dbg !12623
  store %struct.drm_crtc_state* %call23, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12624
  %36 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12625
  %37 = bitcast %struct.drm_crtc_state* %36 to i8*, !dbg !12625
  %call24 = call zeroext i1 @IS_ERR(i8* %37) #9, !dbg !12627
  br i1 %call24, label %if.then25, label %if.end28, !dbg !12628

if.then25:                                        ; preds = %for.end
  %38 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12629
  %39 = bitcast %struct.drm_crtc_state* %38 to i8*, !dbg !12629
  %call26 = call i64 @PTR_ERR(i8* %39) #9, !dbg !12631
  %conv27 = trunc i64 %call26 to i32, !dbg !12631
  store i32 %conv27, i32* %ret, align 4, !dbg !12632
  br label %fail, !dbg !12633

if.end28:                                         ; preds = %for.end
  %40 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12634
  %degamma_lut = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %40, i32 0, i32 10, !dbg !12635
  %call29 = call zeroext i1 @drm_property_replace_blob(%struct.drm_property_blob** %degamma_lut, %struct.drm_property_blob* null) #9, !dbg !12636
  %frombool = zext i1 %call29 to i8, !dbg !12637
  store i8 %frombool, i8* %replaced, align 1, !dbg !12637
  %41 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12638
  %ctm = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %41, i32 0, i32 11, !dbg !12639
  %call30 = call zeroext i1 @drm_property_replace_blob(%struct.drm_property_blob** %ctm, %struct.drm_property_blob* null) #9, !dbg !12640
  %conv31 = zext i1 %call30 to i32, !dbg !12640
  %42 = load i8, i8* %replaced, align 1, !dbg !12641
  %tobool32 = trunc i8 %42 to i1, !dbg !12641
  %conv33 = zext i1 %tobool32 to i32, !dbg !12641
  %or = or i32 %conv33, %conv31, !dbg !12641
  %tobool34 = icmp ne i32 %or, 0, !dbg !12641
  %frombool35 = zext i1 %tobool34 to i8, !dbg !12641
  store i8 %frombool35, i8* %replaced, align 1, !dbg !12641
  %43 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12642
  %gamma_lut = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %43, i32 0, i32 12, !dbg !12643
  %44 = load %struct.drm_property_blob*, %struct.drm_property_blob** %blob, align 8, !dbg !12644
  %call36 = call zeroext i1 @drm_property_replace_blob(%struct.drm_property_blob** %gamma_lut, %struct.drm_property_blob* %44) #9, !dbg !12645
  %conv37 = zext i1 %call36 to i32, !dbg !12645
  %45 = load i8, i8* %replaced, align 1, !dbg !12646
  %tobool38 = trunc i8 %45 to i1, !dbg !12646
  %conv39 = zext i1 %tobool38 to i32, !dbg !12646
  %or40 = or i32 %conv39, %conv37, !dbg !12646
  %tobool41 = icmp ne i32 %or40, 0, !dbg !12646
  %frombool42 = zext i1 %tobool41 to i8, !dbg !12646
  store i8 %frombool42, i8* %replaced, align 1, !dbg !12646
  %46 = load i8, i8* %replaced, align 1, !dbg !12647
  %tobool43 = trunc i8 %46 to i1, !dbg !12647
  %conv44 = zext i1 %tobool43 to i32, !dbg !12647
  %47 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12648
  %color_mgmt_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %47, i32 0, i32 3, !dbg !12649
  %bf.load = load i8, i8* %color_mgmt_changed, align 2, !dbg !12650
  %bf.lshr = lshr i8 %bf.load, 5, !dbg !12650
  %bf.clear = and i8 %bf.lshr, 1, !dbg !12650
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !12650
  %conv45 = zext i1 %bf.cast to i32, !dbg !12650
  %or46 = or i32 %conv45, %conv44, !dbg !12650
  %tobool47 = icmp ne i32 %or46, 0, !dbg !12650
  %48 = zext i1 %tobool47 to i8, !dbg !12650
  %bf.load48 = load i8, i8* %color_mgmt_changed, align 2, !dbg !12650
  %bf.shl = shl i8 %48, 5, !dbg !12650
  %bf.clear49 = and i8 %bf.load48, -33, !dbg !12650
  %bf.set = or i8 %bf.clear49, %bf.shl, !dbg !12650
  store i8 %bf.set, i8* %color_mgmt_changed, align 2, !dbg !12650
  %tobool50 = trunc i8 %48 to i1, !dbg !12650
  %49 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12651
  %call51 = call i32 @drm_atomic_commit(%struct.drm_atomic_state* %49) #9, !dbg !12652
  store i32 %call51, i32* %ret, align 4, !dbg !12653
  br label %fail, !dbg !12654

fail:                                             ; preds = %if.end28, %if.then25, %if.then5
  call void @llvm.dbg.label(metadata !12655), !dbg !12656
  %50 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state, align 8, !dbg !12657
  call void @drm_atomic_state_put(%struct.drm_atomic_state* %50) #9, !dbg !12658
  %51 = load %struct.drm_property_blob*, %struct.drm_property_blob** %blob, align 8, !dbg !12659
  call void @drm_property_blob_put(%struct.drm_property_blob* %51) #9, !dbg !12660
  %52 = load i32, i32* %ret, align 4, !dbg !12661
  store i32 %52, i32* %retval, align 4, !dbg !12662
  br label %return, !dbg !12662

return:                                           ; preds = %fail, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !12663
  ret i32 %53, !dbg !12663
}

; Function Attrs: noredzone
declare dso_local %struct.drm_property_blob* @drm_property_create_blob(%struct.drm_device*, i64, i8*) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @drm_property_replace_blob(%struct.drm_property_blob**, %struct.drm_property_blob*) #2

; Function Attrs: noredzone
declare dso_local void @drm_property_blob_put(%struct.drm_property_blob*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32* @drm_atomic_helper_bridge_propagate_bus_fmt(%struct.drm_bridge* %bridge, %struct.drm_bridge_state* %bridge_state, %struct.drm_crtc_state* %crtc_state, %struct.drm_connector_state* %conn_state, i32 %output_fmt, i32* %num_input_fmts) #0 !dbg !12664 {
entry:
  %retval = alloca i32*, align 8
  %bridge.addr = alloca %struct.drm_bridge*, align 8
  %bridge_state.addr = alloca %struct.drm_bridge_state*, align 8
  %crtc_state.addr = alloca %struct.drm_crtc_state*, align 8
  %conn_state.addr = alloca %struct.drm_connector_state*, align 8
  %output_fmt.addr = alloca i32, align 4
  %num_input_fmts.addr = alloca i32*, align 8
  %input_fmts = alloca i32*, align 8
  store %struct.drm_bridge* %bridge, %struct.drm_bridge** %bridge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_bridge** %bridge.addr, metadata !12665, metadata !DIExpression()), !dbg !12666
  store %struct.drm_bridge_state* %bridge_state, %struct.drm_bridge_state** %bridge_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_bridge_state** %bridge_state.addr, metadata !12667, metadata !DIExpression()), !dbg !12668
  store %struct.drm_crtc_state* %crtc_state, %struct.drm_crtc_state** %crtc_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state.addr, metadata !12669, metadata !DIExpression()), !dbg !12670
  store %struct.drm_connector_state* %conn_state, %struct.drm_connector_state** %conn_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state.addr, metadata !12671, metadata !DIExpression()), !dbg !12672
  store i32 %output_fmt, i32* %output_fmt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %output_fmt.addr, metadata !12673, metadata !DIExpression()), !dbg !12674
  store i32* %num_input_fmts, i32** %num_input_fmts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %num_input_fmts.addr, metadata !12675, metadata !DIExpression()), !dbg !12676
  call void @llvm.dbg.declare(metadata i32** %input_fmts, metadata !12677, metadata !DIExpression()), !dbg !12678
  %call = call i8* @kzalloc(i64 4, i32 3264) #9, !dbg !12679
  %0 = bitcast i8* %call to i32*, !dbg !12679
  store i32* %0, i32** %input_fmts, align 8, !dbg !12680
  %1 = load i32*, i32** %input_fmts, align 8, !dbg !12681
  %tobool = icmp ne i32* %1, null, !dbg !12681
  br i1 %tobool, label %if.end, label %if.then, !dbg !12683

if.then:                                          ; preds = %entry
  %2 = load i32*, i32** %num_input_fmts.addr, align 8, !dbg !12684
  store i32 0, i32* %2, align 4, !dbg !12686
  store i32* null, i32** %retval, align 8, !dbg !12687
  br label %return, !dbg !12687

if.end:                                           ; preds = %entry
  %3 = load i32*, i32** %num_input_fmts.addr, align 8, !dbg !12688
  store i32 1, i32* %3, align 4, !dbg !12689
  %4 = load i32, i32* %output_fmt.addr, align 4, !dbg !12690
  %5 = load i32*, i32** %input_fmts, align 8, !dbg !12691
  %arrayidx = getelementptr i32, i32* %5, i64 0, !dbg !12691
  store i32 %4, i32* %arrayidx, align 4, !dbg !12692
  %6 = load i32*, i32** %input_fmts, align 8, !dbg !12693
  store i32* %6, i32** %retval, align 8, !dbg !12694
  br label %return, !dbg !12694

return:                                           ; preds = %if.end, %if.then
  %7 = load i32*, i32** %retval, align 8, !dbg !12695
  ret i32* %7, !dbg !12695
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @ww_mutex_is_locked(%struct.ww_mutex* %lock) #0 !dbg !12696 {
entry:
  %lock.addr = alloca %struct.ww_mutex*, align 8
  store %struct.ww_mutex* %lock, %struct.ww_mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ww_mutex** %lock.addr, metadata !12700, metadata !DIExpression()), !dbg !12701
  %0 = load %struct.ww_mutex*, %struct.ww_mutex** %lock.addr, align 8, !dbg !12702
  %base = getelementptr inbounds %struct.ww_mutex, %struct.ww_mutex* %0, i32 0, i32 0, !dbg !12703
  %call = call zeroext i1 @mutex_is_locked(%struct.mutex* %base) #9, !dbg !12704
  ret i1 %call, !dbg !12705
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mutex_is_locked(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local %struct.drm_encoder* @drm_connector_get_single_encoder(%struct.drm_connector*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_encoder_mask(%struct.drm_encoder* %encoder) #0 !dbg !12706 {
entry:
  %encoder.addr = alloca %struct.drm_encoder*, align 8
  store %struct.drm_encoder* %encoder, %struct.drm_encoder** %encoder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder.addr, metadata !12711, metadata !DIExpression()), !dbg !12712
  %0 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12713
  %call = call i32 @drm_encoder_index(%struct.drm_encoder* %0) #9, !dbg !12714
  %shl = shl i32 1, %call, !dbg !12715
  ret i32 %shl, !dbg !12716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_connector_state* @drm_atomic_get_new_connector_state(%struct.drm_atomic_state* %state, %struct.drm_connector* %connector) #0 !dbg !12717 {
entry:
  %retval = alloca %struct.drm_connector_state*, align 8
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %index = alloca i32, align 4
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !12720, metadata !DIExpression()), !dbg !12721
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !12722, metadata !DIExpression()), !dbg !12723
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12724, metadata !DIExpression()), !dbg !12725
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12726
  %call = call i32 @drm_connector_index(%struct.drm_connector* %0) #9, !dbg !12727
  store i32 %call, i32* %index, align 4, !dbg !12725
  %1 = load i32, i32* %index, align 4, !dbg !12728
  %2 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12730
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %2, i32 0, i32 5, !dbg !12731
  %3 = load i32, i32* %num_connector, align 8, !dbg !12731
  %cmp = icmp sge i32 %1, %3, !dbg !12732
  br i1 %cmp, label %if.then, label %if.end, !dbg !12733

if.then:                                          ; preds = %entry
  store %struct.drm_connector_state* null, %struct.drm_connector_state** %retval, align 8, !dbg !12734
  br label %return, !dbg !12734

if.end:                                           ; preds = %entry
  %4 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12735
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %4, i32 0, i32 6, !dbg !12736
  %5 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !12736
  %6 = load i32, i32* %index, align 4, !dbg !12737
  %idxprom = sext i32 %6 to i64, !dbg !12735
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %5, i64 %idxprom, !dbg !12735
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 3, !dbg !12738
  %7 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !12738
  store %struct.drm_connector_state* %7, %struct.drm_connector_state** %retval, align 8, !dbg !12739
  br label %return, !dbg !12739

return:                                           ; preds = %if.end, %if.then
  %8 = load %struct.drm_connector_state*, %struct.drm_connector_state** %retval, align 8, !dbg !12740
  ret %struct.drm_connector_state* %8, !dbg !12740
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_encoder_index(%struct.drm_encoder* %encoder) #0 !dbg !12741 {
entry:
  %encoder.addr = alloca %struct.drm_encoder*, align 8
  store %struct.drm_encoder* %encoder, %struct.drm_encoder** %encoder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder.addr, metadata !12744, metadata !DIExpression()), !dbg !12745
  %0 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12746
  %index = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %0, i32 0, i32 5, !dbg !12747
  %1 = load i32, i32* %index, align 4, !dbg !12747
  ret i32 %1, !dbg !12748
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_connector_index(%struct.drm_connector* %connector) #0 !dbg !12749 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !12754, metadata !DIExpression()), !dbg !12755
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12756
  %index = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 7, !dbg !12757
  %1 = load i32, i32* %index, align 8, !dbg !12757
  ret i32 %1, !dbg !12758
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_best_encoder(%struct.drm_atomic_state* %state, %struct.drm_connector_state* %conn_state, %struct.drm_encoder* %encoder) #0 !dbg !12759 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %conn_state.addr = alloca %struct.drm_connector_state*, align 8
  %encoder.addr = alloca %struct.drm_encoder*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on34 = alloca i32, align 4
  %tmp59 = alloca i64, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !12762, metadata !DIExpression()), !dbg !12763
  store %struct.drm_connector_state* %conn_state, %struct.drm_connector_state** %conn_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state.addr, metadata !12764, metadata !DIExpression()), !dbg !12765
  store %struct.drm_encoder* %encoder, %struct.drm_encoder** %encoder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder.addr, metadata !12766, metadata !DIExpression()), !dbg !12767
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !12768, metadata !DIExpression()), !dbg !12769
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !12770, metadata !DIExpression()), !dbg !12771
  %0 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !12772
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %0, i32 0, i32 2, !dbg !12774
  %1 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !12774
  %tobool = icmp ne %struct.drm_encoder* %1, null, !dbg !12772
  br i1 %tobool, label %if.then, label %if.end30, !dbg !12775

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !12776
  %connector = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %2, i32 0, i32 0, !dbg !12778
  %3 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !12778
  %state1 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %3, i32 0, i32 46, !dbg !12779
  %4 = load %struct.drm_connector_state*, %struct.drm_connector_state** %state1, align 8, !dbg !12779
  %crtc2 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %4, i32 0, i32 1, !dbg !12780
  %5 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc2, align 8, !dbg !12780
  store %struct.drm_crtc* %5, %struct.drm_crtc** %crtc, align 8, !dbg !12781
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12782, metadata !DIExpression()), !dbg !12784
  %6 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12784
  %tobool3 = icmp ne %struct.drm_crtc* %6, null, !dbg !12784
  br i1 %tobool3, label %land.end, label %land.rhs, !dbg !12784

land.rhs:                                         ; preds = %if.then
  %7 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12784
  %8 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !12784
  %best_encoder4 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %8, i32 0, i32 2, !dbg !12784
  %9 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder4, align 8, !dbg !12784
  %cmp = icmp ne %struct.drm_encoder* %7, %9, !dbg !12784
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %10 = phi i1 [ false, %if.then ], [ %cmp, %land.rhs ], !dbg !12785
  %lnot = xor i1 %10, true, !dbg !12784
  %lnot5 = xor i1 %lnot, true, !dbg !12784
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !12784
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12784
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !12786
  %tobool6 = icmp ne i32 %11, 0, !dbg !12786
  %lnot7 = xor i1 %tobool6, true, !dbg !12786
  %lnot9 = xor i1 %lnot7, true, !dbg !12786
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !12786
  %conv = sext i32 %lnot.ext10 to i64, !dbg !12786
  %tobool11 = icmp ne i64 %conv, 0, !dbg !12786
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !12784

if.then12:                                        ; preds = %land.end
  br label %do.body, !dbg !12786

do.body:                                          ; preds = %if.then12
  br label %do.body13, !dbg !12788

do.body13:                                        ; preds = %do.body
  br label %do.end, !dbg !12790

do.end:                                           ; preds = %do.body13
  br label %do.body14, !dbg !12788

do.body14:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 229, i32 2305, i64 12) #8, !dbg !12792, !srcloc !12794
  br label %do.end15, !dbg !12792

do.end15:                                         ; preds = %do.body14
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 269) #8, !dbg !12795, !srcloc !12797
  br label %do.body16, !dbg !12788

do.body16:                                        ; preds = %do.end15
  br label %do.end17, !dbg !12798

do.end17:                                         ; preds = %do.body16
  br label %do.end18, !dbg !12788

do.end18:                                         ; preds = %do.end17
  br label %if.end, !dbg !12788

if.end:                                           ; preds = %do.end18, %land.end
  %12 = load i32, i32* %__ret_warn_on, align 4, !dbg !12784
  %tobool19 = icmp ne i32 %12, 0, !dbg !12784
  %lnot20 = xor i1 %tobool19, true, !dbg !12784
  %lnot22 = xor i1 %lnot20, true, !dbg !12784
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !12784
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !12784
  store i64 %conv24, i64* %tmp, align 8, !dbg !12786
  %13 = load i64, i64* %tmp, align 8, !dbg !12784
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12800
  %tobool25 = icmp ne %struct.drm_crtc* %14, null, !dbg !12800
  br i1 %tobool25, label %if.then26, label %if.end29, !dbg !12802

if.then26:                                        ; preds = %if.end
  %15 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12803
  %16 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12805
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %15, %struct.drm_crtc* %16) #9, !dbg !12806
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12807
  %17 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !12808
  %best_encoder27 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %17, i32 0, i32 2, !dbg !12809
  %18 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder27, align 8, !dbg !12809
  %call28 = call i32 @drm_encoder_mask(%struct.drm_encoder* %18) #9, !dbg !12810
  %neg = xor i32 %call28, -1, !dbg !12811
  %19 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12812
  %encoder_mask = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %19, i32 0, i32 6, !dbg !12813
  %20 = load i32, i32* %encoder_mask, align 4, !dbg !12814
  %and = and i32 %20, %neg, !dbg !12814
  store i32 %and, i32* %encoder_mask, align 4, !dbg !12814
  br label %if.end29, !dbg !12815

if.end29:                                         ; preds = %if.then26, %if.end
  br label %if.end30, !dbg !12816

if.end30:                                         ; preds = %if.end29, %entry
  %21 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12817
  %tobool31 = icmp ne %struct.drm_encoder* %21, null, !dbg !12817
  br i1 %tobool31, label %if.then32, label %if.end72, !dbg !12819

if.then32:                                        ; preds = %if.end30
  %22 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !12820
  %crtc33 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %22, i32 0, i32 1, !dbg !12822
  %23 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc33, align 8, !dbg !12822
  store %struct.drm_crtc* %23, %struct.drm_crtc** %crtc, align 8, !dbg !12823
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on34, metadata !12824, metadata !DIExpression()), !dbg !12826
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12826
  %tobool35 = icmp ne %struct.drm_crtc* %24, null, !dbg !12826
  %lnot36 = xor i1 %tobool35, true, !dbg !12826
  %lnot38 = xor i1 %lnot36, true, !dbg !12826
  %lnot40 = xor i1 %lnot38, true, !dbg !12826
  %lnot.ext41 = zext i1 %lnot40 to i32, !dbg !12826
  store i32 %lnot.ext41, i32* %__ret_warn_on34, align 4, !dbg !12826
  %25 = load i32, i32* %__ret_warn_on34, align 4, !dbg !12827
  %tobool42 = icmp ne i32 %25, 0, !dbg !12827
  %lnot43 = xor i1 %tobool42, true, !dbg !12827
  %lnot45 = xor i1 %lnot43, true, !dbg !12827
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !12827
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !12827
  %tobool48 = icmp ne i64 %conv47, 0, !dbg !12827
  br i1 %tobool48, label %if.then49, label %if.end58, !dbg !12826

if.then49:                                        ; preds = %if.then32
  br label %do.body50, !dbg !12827

do.body50:                                        ; preds = %if.then49
  br label %do.body51, !dbg !12829

do.body51:                                        ; preds = %do.body50
  br label %do.end52, !dbg !12831

do.end52:                                         ; preds = %do.body51
  br label %do.body53, !dbg !12829

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str, i64 0, i64 0), i32 240, i32 2305, i64 12) #8, !dbg !12833, !srcloc !12835
  br label %do.end54, !dbg !12833

do.end54:                                         ; preds = %do.body53
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 270) #8, !dbg !12836, !srcloc !12838
  br label %do.body55, !dbg !12829

do.body55:                                        ; preds = %do.end54
  br label %do.end56, !dbg !12839

do.end56:                                         ; preds = %do.body55
  br label %do.end57, !dbg !12829

do.end57:                                         ; preds = %do.end56
  br label %if.end58, !dbg !12829

if.end58:                                         ; preds = %do.end57, %if.then32
  %26 = load i32, i32* %__ret_warn_on34, align 4, !dbg !12826
  %tobool60 = icmp ne i32 %26, 0, !dbg !12826
  %lnot61 = xor i1 %tobool60, true, !dbg !12826
  %lnot63 = xor i1 %lnot61, true, !dbg !12826
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !12826
  %conv65 = sext i32 %lnot.ext64 to i64, !dbg !12826
  store i64 %conv65, i64* %tmp59, align 8, !dbg !12827
  %27 = load i64, i64* %tmp59, align 8, !dbg !12826
  %28 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12841
  %tobool66 = icmp ne %struct.drm_crtc* %28, null, !dbg !12841
  br i1 %tobool66, label %if.then67, label %if.end71, !dbg !12843

if.then67:                                        ; preds = %if.end58
  %29 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12844
  %30 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12846
  %call68 = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %29, %struct.drm_crtc* %30) #9, !dbg !12847
  store %struct.drm_crtc_state* %call68, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12848
  %31 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12849
  %call69 = call i32 @drm_encoder_mask(%struct.drm_encoder* %31) #9, !dbg !12850
  %32 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12851
  %encoder_mask70 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %32, i32 0, i32 6, !dbg !12852
  %33 = load i32, i32* %encoder_mask70, align 4, !dbg !12853
  %or = or i32 %33, %call69, !dbg !12853
  store i32 %or, i32* %encoder_mask70, align 4, !dbg !12853
  br label %if.end71, !dbg !12854

if.end71:                                         ; preds = %if.then67, %if.end58
  br label %if.end72, !dbg !12855

if.end72:                                         ; preds = %if.end71, %if.end30
  %34 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12856
  %35 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state.addr, align 8, !dbg !12857
  %best_encoder73 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %35, i32 0, i32 2, !dbg !12858
  store %struct.drm_encoder* %34, %struct.drm_encoder** %best_encoder73, align 8, !dbg !12859
  ret void, !dbg !12860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_connector_is_unregistered(%struct.drm_connector* %connector) #0 !dbg !12861 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %tmp = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !12864, metadata !DIExpression()), !dbg !12865
  br label %do.body, !dbg !12866

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12868

do.end:                                           ; preds = %do.body
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12866
  %registration_state = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 14, !dbg !12866
  %1 = load volatile i32, i32* %registration_state, align 8, !dbg !12866
  store i32 %1, i32* %tmp, align 4, !dbg !12868
  %2 = load i32, i32* %tmp, align 4, !dbg !12866
  %cmp = icmp eq i32 %2, 2, !dbg !12870
  ret i1 %cmp, !dbg !12871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_encoder_crtc_ok(%struct.drm_encoder* %encoder, %struct.drm_crtc* %crtc) #0 !dbg !12872 {
entry:
  %encoder.addr = alloca %struct.drm_encoder*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  store %struct.drm_encoder* %encoder, %struct.drm_encoder** %encoder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder.addr, metadata !12875, metadata !DIExpression()), !dbg !12876
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !12877, metadata !DIExpression()), !dbg !12878
  %0 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12879
  %possible_crtcs = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %0, i32 0, i32 6, !dbg !12880
  %1 = load i32, i32* %possible_crtcs, align 8, !dbg !12880
  %2 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12881
  %call = call i32 @drm_crtc_mask(%struct.drm_crtc* %2) #9, !dbg !12882
  %and = and i32 %1, %call, !dbg !12883
  %tobool = icmp ne i32 %and, 0, !dbg !12884
  %lnot = xor i1 %tobool, true, !dbg !12884
  %lnot1 = xor i1 %lnot, true, !dbg !12885
  ret i1 %lnot1, !dbg !12886
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @steal_encoder(%struct.drm_atomic_state* %state, %struct.drm_encoder* %encoder) #0 !dbg !12887 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %encoder.addr = alloca %struct.drm_encoder*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %old_connector_state = alloca %struct.drm_connector_state*, align 8
  %new_connector_state = alloca %struct.drm_connector_state*, align 8
  %i = alloca i32, align 4
  %encoder_crtc = alloca %struct.drm_crtc*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !12890, metadata !DIExpression()), !dbg !12891
  store %struct.drm_encoder* %encoder, %struct.drm_encoder** %encoder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder.addr, metadata !12892, metadata !DIExpression()), !dbg !12893
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !12894, metadata !DIExpression()), !dbg !12895
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !12896, metadata !DIExpression()), !dbg !12897
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %old_connector_state, metadata !12898, metadata !DIExpression()), !dbg !12899
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %new_connector_state, metadata !12900, metadata !DIExpression()), !dbg !12901
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12902, metadata !DIExpression()), !dbg !12903
  store i32 0, i32* %i, align 4, !dbg !12904
  br label %for.cond, !dbg !12904

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12906
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12906
  %num_connector = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 5, !dbg !12906
  %2 = load i32, i32* %num_connector, align 8, !dbg !12906
  %cmp = icmp slt i32 %0, %2, !dbg !12906
  br i1 %cmp, label %for.body, label %for.end, !dbg !12904

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12908
  %connectors = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %3, i32 0, i32 6, !dbg !12908
  %4 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors, align 8, !dbg !12908
  %5 = load i32, i32* %i, align 4, !dbg !12908
  %idxprom = sext i32 %5 to i64, !dbg !12908
  %arrayidx = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %4, i64 %idxprom, !dbg !12908
  %ptr = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx, i32 0, i32 0, !dbg !12908
  %6 = load %struct.drm_connector*, %struct.drm_connector** %ptr, align 8, !dbg !12908
  %tobool = icmp ne %struct.drm_connector* %6, null, !dbg !12908
  br i1 %tobool, label %land.lhs.true, label %if.then, !dbg !12908

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12908
  %connectors1 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %7, i32 0, i32 6, !dbg !12908
  %8 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors1, align 8, !dbg !12908
  %9 = load i32, i32* %i, align 4, !dbg !12908
  %idxprom2 = sext i32 %9 to i64, !dbg !12908
  %arrayidx3 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %8, i64 %idxprom2, !dbg !12908
  %ptr4 = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx3, i32 0, i32 0, !dbg !12908
  %10 = load %struct.drm_connector*, %struct.drm_connector** %ptr4, align 8, !dbg !12908
  store %struct.drm_connector* %10, %struct.drm_connector** %connector, align 8, !dbg !12908
  %11 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !12908
  %12 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12908
  %connectors5 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %12, i32 0, i32 6, !dbg !12908
  %13 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors5, align 8, !dbg !12908
  %14 = load i32, i32* %i, align 4, !dbg !12908
  %idxprom6 = sext i32 %14 to i64, !dbg !12908
  %arrayidx7 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %13, i64 %idxprom6, !dbg !12908
  %old_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx7, i32 0, i32 2, !dbg !12908
  %15 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_state, align 8, !dbg !12908
  store %struct.drm_connector_state* %15, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !12908
  %16 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12908
  %connectors8 = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %16, i32 0, i32 6, !dbg !12908
  %17 = load %struct.__drm_connnectors_state*, %struct.__drm_connnectors_state** %connectors8, align 8, !dbg !12908
  %18 = load i32, i32* %i, align 4, !dbg !12908
  %idxprom9 = sext i32 %18 to i64, !dbg !12908
  %arrayidx10 = getelementptr %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %17, i64 %idxprom9, !dbg !12908
  %new_state = getelementptr inbounds %struct.__drm_connnectors_state, %struct.__drm_connnectors_state* %arrayidx10, i32 0, i32 3, !dbg !12908
  %19 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_state, align 8, !dbg !12908
  store %struct.drm_connector_state* %19, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !12908
  br i1 true, label %if.else, label %if.then, !dbg !12906

if.then:                                          ; preds = %land.lhs.true, %for.body
  br label %if.end16, !dbg !12910

if.else:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %encoder_crtc, metadata !12912, metadata !DIExpression()), !dbg !12914
  %20 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !12915
  %best_encoder = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %20, i32 0, i32 2, !dbg !12917
  %21 = load %struct.drm_encoder*, %struct.drm_encoder** %best_encoder, align 8, !dbg !12917
  %22 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12918
  %cmp11 = icmp ne %struct.drm_encoder* %21, %22, !dbg !12919
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !12920

if.then12:                                        ; preds = %if.else
  br label %for.inc, !dbg !12921

if.end:                                           ; preds = %if.else
  %23 = load %struct.drm_connector_state*, %struct.drm_connector_state** %old_connector_state, align 8, !dbg !12922
  %crtc = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %23, i32 0, i32 1, !dbg !12923
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !12923
  store %struct.drm_crtc* %24, %struct.drm_crtc** %encoder_crtc, align 8, !dbg !12924
  %25 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12925
  %base = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %25, i32 0, i32 2, !dbg !12925
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !12925
  %26 = load i32, i32* %id, align 8, !dbg !12925
  %27 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12925
  %name = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %27, i32 0, i32 3, !dbg !12925
  %28 = load i8*, i8** %name, align 8, !dbg !12925
  %29 = load %struct.drm_crtc*, %struct.drm_crtc** %encoder_crtc, align 8, !dbg !12925
  %base13 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %29, i32 0, i32 5, !dbg !12925
  %id14 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base13, i32 0, i32 0, !dbg !12925
  %30 = load i32, i32* %id14, align 8, !dbg !12925
  %31 = load %struct.drm_crtc*, %struct.drm_crtc** %encoder_crtc, align 8, !dbg !12925
  %name15 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %31, i32 0, i32 3, !dbg !12925
  %32 = load i8*, i8** %name15, align 8, !dbg !12925
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.34, i64 0, i64 0), i32 %26, i8* %28, i32 %30, i8* %32) #9, !dbg !12925
  %33 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12926
  %34 = load %struct.drm_connector_state*, %struct.drm_connector_state** %new_connector_state, align 8, !dbg !12927
  call void @set_best_encoder(%struct.drm_atomic_state* %33, %struct.drm_connector_state* %34, %struct.drm_encoder* null) #9, !dbg !12928
  %35 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !12929
  %36 = load %struct.drm_crtc*, %struct.drm_crtc** %encoder_crtc, align 8, !dbg !12930
  %call = call %struct.drm_crtc_state* @drm_atomic_get_new_crtc_state(%struct.drm_atomic_state* %35, %struct.drm_crtc* %36) #9, !dbg !12931
  store %struct.drm_crtc_state* %call, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12932
  %37 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !12933
  %connectors_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %37, i32 0, i32 3, !dbg !12934
  %bf.load = load i8, i8* %connectors_changed, align 2, !dbg !12935
  %bf.clear = and i8 %bf.load, -9, !dbg !12935
  %bf.set = or i8 %bf.clear, 8, !dbg !12935
  store i8 %bf.set, i8* %connectors_changed, align 2, !dbg !12935
  br label %for.end, !dbg !12936

if.end16:                                         ; preds = %if.then
  br label %for.inc, !dbg !12908

for.inc:                                          ; preds = %if.end16, %if.then12
  %38 = load i32, i32* %i, align 4, !dbg !12906
  %inc = add i32 %38, 1, !dbg !12906
  store i32 %inc, i32* %i, align 4, !dbg !12906
  br label %for.cond, !dbg !12906, !llvm.loop !12937

for.end:                                          ; preds = %if.end, %for.cond
  ret void, !dbg !12939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_crtc_index(%struct.drm_crtc* %crtc) #0 !dbg !12940 {
entry:
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !12943, metadata !DIExpression()), !dbg !12944
  %0 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12945
  %index = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %0, i32 0, i32 8, !dbg !12946
  %1 = load i32, i32* %index, align 8, !dbg !12946
  ret i32 %1, !dbg !12947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @mode_valid_path(%struct.drm_connector* %connector, %struct.drm_encoder* %encoder, %struct.drm_crtc* %crtc, %struct.drm_display_mode* %mode) #0 !dbg !12948 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %encoder.addr = alloca %struct.drm_encoder*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  %mode.addr = alloca %struct.drm_display_mode*, align 8
  %bridge = alloca %struct.drm_bridge*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !12951, metadata !DIExpression()), !dbg !12952
  store %struct.drm_encoder* %encoder, %struct.drm_encoder** %encoder.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_encoder** %encoder.addr, metadata !12953, metadata !DIExpression()), !dbg !12954
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !12955, metadata !DIExpression()), !dbg !12956
  store %struct.drm_display_mode* %mode, %struct.drm_display_mode** %mode.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_display_mode** %mode.addr, metadata !12957, metadata !DIExpression()), !dbg !12958
  call void @llvm.dbg.declare(metadata %struct.drm_bridge** %bridge, metadata !12959, metadata !DIExpression()), !dbg !12960
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12961, metadata !DIExpression()), !dbg !12962
  %0 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12963
  %1 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12964
  %call = call i32 @drm_encoder_mode_valid(%struct.drm_encoder* %0, %struct.drm_display_mode* %1) #9, !dbg !12965
  store i32 %call, i32* %ret, align 4, !dbg !12966
  %2 = load i32, i32* %ret, align 4, !dbg !12967
  %cmp = icmp ne i32 %2, 0, !dbg !12969
  br i1 %cmp, label %if.then, label %if.end, !dbg !12970

if.then:                                          ; preds = %entry
  %3 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12971
  %base = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %3, i32 0, i32 2, !dbg !12971
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !12971
  %4 = load i32, i32* %id, align 8, !dbg !12971
  %5 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12971
  %name = getelementptr inbounds %struct.drm_encoder, %struct.drm_encoder* %5, i32 0, i32 3, !dbg !12971
  %6 = load i8*, i8** %name, align 8, !dbg !12971
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35, i64 0, i64 0), i32 %4, i8* %6) #9, !dbg !12971
  %7 = load i32, i32* %ret, align 4, !dbg !12973
  store i32 %7, i32* %retval, align 4, !dbg !12974
  br label %return, !dbg !12974

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_encoder*, %struct.drm_encoder** %encoder.addr, align 8, !dbg !12975
  %call1 = call %struct.drm_bridge* @drm_bridge_chain_get_first_bridge(%struct.drm_encoder* %8) #9, !dbg !12976
  store %struct.drm_bridge* %call1, %struct.drm_bridge** %bridge, align 8, !dbg !12977
  %9 = load %struct.drm_bridge*, %struct.drm_bridge** %bridge, align 8, !dbg !12978
  %10 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !12979
  %display_info = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %10, i32 0, i32 18, !dbg !12980
  %11 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12981
  %call2 = call i32 @drm_bridge_chain_mode_valid(%struct.drm_bridge* %9, %struct.drm_display_info* %display_info, %struct.drm_display_mode* %11) #9, !dbg !12982
  store i32 %call2, i32* %ret, align 4, !dbg !12983
  %12 = load i32, i32* %ret, align 4, !dbg !12984
  %cmp3 = icmp ne i32 %12, 0, !dbg !12986
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !12987

if.then4:                                         ; preds = %if.end
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36, i64 0, i64 0)) #9, !dbg !12988
  %13 = load i32, i32* %ret, align 4, !dbg !12990
  store i32 %13, i32* %retval, align 4, !dbg !12991
  br label %return, !dbg !12991

if.end5:                                          ; preds = %if.end
  %14 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !12992
  %15 = load %struct.drm_display_mode*, %struct.drm_display_mode** %mode.addr, align 8, !dbg !12993
  %call6 = call i32 @drm_crtc_mode_valid(%struct.drm_crtc* %14, %struct.drm_display_mode* %15) #9, !dbg !12994
  store i32 %call6, i32* %ret, align 4, !dbg !12995
  %16 = load i32, i32* %ret, align 4, !dbg !12996
  %cmp7 = icmp ne i32 %16, 0, !dbg !12998
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !12999

if.then8:                                         ; preds = %if.end5
  %17 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !13000
  %base9 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %17, i32 0, i32 5, !dbg !13000
  %id10 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base9, i32 0, i32 0, !dbg !13000
  %18 = load i32, i32* %id10, align 8, !dbg !13000
  %19 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !13000
  %name11 = getelementptr inbounds %struct.drm_crtc, %struct.drm_crtc* %19, i32 0, i32 3, !dbg !13000
  %20 = load i8*, i8** %name11, align 8, !dbg !13000
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.37, i64 0, i64 0), i32 %18, i8* %20) #9, !dbg !13000
  %21 = load i32, i32* %ret, align 4, !dbg !13002
  store i32 %21, i32* %retval, align 4, !dbg !13003
  br label %return, !dbg !13003

if.end12:                                         ; preds = %if.end5
  %22 = load i32, i32* %ret, align 4, !dbg !13004
  store i32 %22, i32* %retval, align 4, !dbg !13005
  br label %return, !dbg !13005

return:                                           ; preds = %if.end12, %if.then8, %if.then4, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !13006
  ret i32 %23, !dbg !13006
}

; Function Attrs: noredzone
declare dso_local i32 @drm_encoder_mode_valid(%struct.drm_encoder*, %struct.drm_display_mode*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_bridge_chain_mode_valid(%struct.drm_bridge*, %struct.drm_display_info*, %struct.drm_display_mode*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_crtc_mode_valid(%struct.drm_crtc*, %struct.drm_display_mode*) #2

; Function Attrs: noredzone
declare dso_local void @drm_mode_copy(%struct.drm_display_mode*, %struct.drm_display_mode*) #2

; Function Attrs: noredzone
declare dso_local i32 @drm_atomic_bridge_chain_check(%struct.drm_bridge*, %struct.drm_crtc_state*, %struct.drm_connector_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_plane_index(%struct.drm_plane* %plane) #0 !dbg !13007 {
entry:
  %plane.addr = alloca %struct.drm_plane*, align 8
  store %struct.drm_plane* %plane, %struct.drm_plane** %plane.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_plane** %plane.addr, metadata !13010, metadata !DIExpression()), !dbg !13011
  %0 = load %struct.drm_plane*, %struct.drm_plane** %plane.addr, align 8, !dbg !13012
  %index = getelementptr inbounds %struct.drm_plane, %struct.drm_plane* %0, i32 0, i32 17, !dbg !13013
  %1 = load i32, i32* %index, align 4, !dbg !13013
  ret i32 %1, !dbg !13014
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_crtc_state* @drm_atomic_get_old_crtc_state(%struct.drm_atomic_state* %state, %struct.drm_crtc* %crtc) #0 !dbg !13015 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %crtc.addr = alloca %struct.drm_crtc*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !13016, metadata !DIExpression()), !dbg !13017
  store %struct.drm_crtc* %crtc, %struct.drm_crtc** %crtc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc.addr, metadata !13018, metadata !DIExpression()), !dbg !13019
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !13020
  %crtcs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 4, !dbg !13021
  %1 = load %struct.__drm_crtcs_state*, %struct.__drm_crtcs_state** %crtcs, align 8, !dbg !13021
  %2 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc.addr, align 8, !dbg !13022
  %call = call i32 @drm_crtc_index(%struct.drm_crtc* %2) #9, !dbg !13023
  %idxprom = zext i32 %call to i64, !dbg !13020
  %arrayidx = getelementptr %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %1, i64 %idxprom, !dbg !13020
  %old_state = getelementptr inbounds %struct.__drm_crtcs_state, %struct.__drm_crtcs_state* %arrayidx, i32 0, i32 2, !dbg !13024
  %3 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state, align 8, !dbg !13024
  ret %struct.drm_crtc_state* %3, !dbg !13025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @crtc_needs_disable(%struct.drm_crtc_state* %old_state, %struct.drm_crtc_state* %new_state) #0 !dbg !13026 {
entry:
  %retval = alloca i1, align 1
  %old_state.addr = alloca %struct.drm_crtc_state*, align 8
  %new_state.addr = alloca %struct.drm_crtc_state*, align 8
  store %struct.drm_crtc_state* %old_state, %struct.drm_crtc_state** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %old_state.addr, metadata !13029, metadata !DIExpression()), !dbg !13030
  store %struct.drm_crtc_state* %new_state, %struct.drm_crtc_state** %new_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %new_state.addr, metadata !13031, metadata !DIExpression()), !dbg !13032
  %0 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state.addr, align 8, !dbg !13033
  %tobool = icmp ne %struct.drm_crtc_state* %0, null, !dbg !13033
  br i1 %tobool, label %if.end, label %if.then, !dbg !13035

if.then:                                          ; preds = %entry
  %1 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state.addr, align 8, !dbg !13036
  %call = call zeroext i1 @drm_atomic_crtc_effectively_active(%struct.drm_crtc_state* %1) #9, !dbg !13037
  store i1 %call, i1* %retval, align 1, !dbg !13038
  br label %return, !dbg !13038

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state.addr, align 8, !dbg !13039
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %2, i32 0, i32 2, !dbg !13040
  %3 = load i8, i8* %active, align 1, !dbg !13040
  %tobool1 = trunc i8 %3 to i1, !dbg !13040
  br i1 %tobool1, label %lor.end, label %lor.lhs.false, !dbg !13041

lor.lhs.false:                                    ; preds = %if.end
  %4 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %old_state.addr, align 8, !dbg !13042
  %self_refresh_active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %4, i32 0, i32 16, !dbg !13043
  %5 = load i8, i8* %self_refresh_active, align 2, !dbg !13043
  %tobool2 = trunc i8 %5 to i1, !dbg !13043
  br i1 %tobool2, label %land.lhs.true, label %lor.rhs, !dbg !13044

land.lhs.true:                                    ; preds = %lor.lhs.false
  %6 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state.addr, align 8, !dbg !13045
  %enable = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %6, i32 0, i32 1, !dbg !13046
  %7 = load i8, i8* %enable, align 8, !dbg !13046
  %tobool3 = trunc i8 %7 to i1, !dbg !13046
  br i1 %tobool3, label %lor.rhs, label %lor.end, !dbg !13047

lor.rhs:                                          ; preds = %land.lhs.true, %lor.lhs.false
  %8 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %new_state.addr, align 8, !dbg !13048
  %self_refresh_active4 = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %8, i32 0, i32 16, !dbg !13049
  %9 = load i8, i8* %self_refresh_active4, align 2, !dbg !13049
  %tobool5 = trunc i8 %9 to i1, !dbg !13049
  br label %lor.end, !dbg !13047

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true, %if.end
  %10 = phi i1 [ true, %land.lhs.true ], [ true, %if.end ], [ %tobool5, %lor.rhs ]
  store i1 %10, i1* %retval, align 1, !dbg !13050
  br label %return, !dbg !13050

return:                                           ; preds = %lor.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !13051
  ret i1 %11, !dbg !13051
}

; Function Attrs: noredzone
declare dso_local void @drm_atomic_bridge_chain_disable(%struct.drm_bridge*, %struct.drm_atomic_state*) #2

; Function Attrs: noredzone
declare dso_local void @drm_atomic_bridge_chain_post_disable(%struct.drm_bridge*, %struct.drm_atomic_state*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_atomic_crtc_effectively_active(%struct.drm_crtc_state* %state) #0 !dbg !13052 {
entry:
  %state.addr = alloca %struct.drm_crtc_state*, align 8
  store %struct.drm_crtc_state* %state, %struct.drm_crtc_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %state.addr, metadata !13053, metadata !DIExpression()), !dbg !13054
  %0 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state.addr, align 8, !dbg !13055
  %active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %0, i32 0, i32 2, !dbg !13056
  %1 = load i8, i8* %active, align 1, !dbg !13056
  %tobool = trunc i8 %1 to i1, !dbg !13056
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !13057

lor.rhs:                                          ; preds = %entry
  %2 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %state.addr, align 8, !dbg !13058
  %self_refresh_active = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %2, i32 0, i32 16, !dbg !13059
  %3 = load i8, i8* %self_refresh_active, align 2, !dbg !13059
  %tobool1 = trunc i8 %3 to i1, !dbg !13059
  br label %lor.end, !dbg !13057

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool1, %lor.rhs ]
  ret i1 %4, !dbg !13060
}

; Function Attrs: noredzone
declare dso_local void @drm_bridge_chain_mode_set(%struct.drm_bridge*, %struct.drm_display_mode*, %struct.drm_display_mode*) #2

; Function Attrs: noredzone
declare dso_local i64 @dma_fence_wait_timeout(%struct.dma_fence*, i1 zeroext, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !13061 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !13064, metadata !DIExpression()), !dbg !13065
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !13066, metadata !DIExpression()), !dbg !13067
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !13068
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !13070
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #9, !dbg !13071
  br i1 %call, label %if.then, label %if.end, !dbg !13072

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !13073
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !13075
  call void %1(%struct.kref* %2) #9, !dbg !13073
  store i32 1, i32* %retval, align 4, !dbg !13076
  br label %return, !dbg !13076

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13077
  br label %return, !dbg !13077

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !13078
  ret i32 %3, !dbg !13078
}

; Function Attrs: noredzone
declare dso_local void @dma_fence_release(%struct.kref*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !13079 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13083, metadata !DIExpression()), !dbg !13084
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13085
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #9, !dbg !13086
  ret i1 %call, !dbg !13087
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13088 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13091, metadata !DIExpression()), !dbg !13092
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13093, metadata !DIExpression()), !dbg !13094
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13095
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !13096
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #9, !dbg !13097
  ret i1 %call, !dbg !13098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13099 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !13102, metadata !DIExpression()), !dbg !13108
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13113, metadata !DIExpression()), !dbg !13114
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !13115, metadata !DIExpression()), !dbg !13117
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13118, metadata !DIExpression()), !dbg !13126
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13128, metadata !DIExpression()), !dbg !13129
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !13130, metadata !DIExpression()), !dbg !13131
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13132, metadata !DIExpression()), !dbg !13133
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13134, metadata !DIExpression()), !dbg !13135
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13138, metadata !DIExpression()), !dbg !13139
  call void @llvm.dbg.declare(metadata i32* %old, metadata !13140, metadata !DIExpression()), !dbg !13141
  %0 = load i32, i32* %i.addr, align 4, !dbg !13142
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13143
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !13144
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13145
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !13145
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13146
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !13147
  %conv.i.i = trunc i64 %5 to i32, !dbg !13147
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #10, !dbg !13148
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13149
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13149
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #10, !dbg !13149
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !13150
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13151
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !13117
  %sub.i.i = sub i32 0, %10, !dbg !13117
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !13117
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !13117
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13117
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !13117
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #8, !dbg !13117, !srcloc !13152
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !13117
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !13117
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !13117
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !13117
  store i32 %15, i32* %old, align 4, !dbg !13141
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !13153
  %tobool = icmp ne i32* %16, null, !dbg !13153
  br i1 %tobool, label %if.then, label %if.end, !dbg !13155

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !13156
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !13157
  store i32 %17, i32* %18, align 4, !dbg !13158
  br label %if.end, !dbg !13159

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !13160
  %20 = load i32, i32* %i.addr, align 4, !dbg !13162
  %cmp = icmp eq i32 %19, %20, !dbg !13163
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !13164

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !dbg !13165, !srcloc !13167
  store i1 true, i1* %retval, align 1, !dbg !13168
  br label %return, !dbg !13168

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !13169
  %cmp3 = icmp slt i32 %21, 0, !dbg !13169
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !13169

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !13169
  %23 = load i32, i32* %i.addr, align 4, !dbg !13169
  %sub = sub i32 %22, %23, !dbg !13169
  %cmp4 = icmp slt i32 %sub, 0, !dbg !13169
  br label %lor.end, !dbg !13169

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !13169
  %lnot5 = xor i1 %lnot, true, !dbg !13169
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !13169
  %conv = sext i32 %lnot.ext to i64, !dbg !13169
  %tobool6 = icmp ne i64 %conv, 0, !dbg !13169
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !13171

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13172
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #9, !dbg !13173
  br label %if.end8, !dbg !13173

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !13174
  br label %return, !dbg !13174

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !13175
  ret i1 %26, !dbg !13175
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !13176 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !13180, metadata !DIExpression()), !dbg !13181
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !13182, metadata !DIExpression()), !dbg !13183
  ret i1 true, !dbg !13184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !13185 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !13189, metadata !DIExpression()), !dbg !13190
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13191, metadata !DIExpression()), !dbg !13192
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !13193, metadata !DIExpression()), !dbg !13194
  ret void, !dbg !13195
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !13196 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !13197, metadata !DIExpression()), !dbg !13198
  %0 = load i32, i32* %m.addr, align 4, !dbg !13199
  %conv = zext i32 %0 to i64, !dbg !13199
  %add = add i64 %conv, 4, !dbg !13200
  %sub = sub i64 %add, 1, !dbg !13201
  %div = sdiv i64 %sub, 4, !dbg !13202
  ret i64 %div, !dbg !13203
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !13204 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !13205, metadata !DIExpression()), !dbg !13206
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !13207
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !13208
  call void @refcount_inc(%struct.refcount_struct* %refcount) #9, !dbg !13209
  ret void, !dbg !13210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !13211 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13214, metadata !DIExpression()), !dbg !13215
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13216
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #9, !dbg !13217
  ret void, !dbg !13218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13219 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13222, metadata !DIExpression()), !dbg !13223
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13224, metadata !DIExpression()), !dbg !13225
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13226
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !13227
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #9, !dbg !13228
  ret void, !dbg !13229
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13230 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !13233, metadata !DIExpression()), !dbg !13235
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13239, metadata !DIExpression()), !dbg !13240
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !13241, metadata !DIExpression()), !dbg !13243
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13118, metadata !DIExpression()), !dbg !13244
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13128, metadata !DIExpression()), !dbg !13246
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !13247, metadata !DIExpression()), !dbg !13248
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13249, metadata !DIExpression()), !dbg !13250
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13251, metadata !DIExpression()), !dbg !13252
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13253, metadata !DIExpression()), !dbg !13254
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13255, metadata !DIExpression()), !dbg !13256
  call void @llvm.dbg.declare(metadata i32* %old, metadata !13257, metadata !DIExpression()), !dbg !13258
  %0 = load i32, i32* %i.addr, align 4, !dbg !13259
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13260
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !13261
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13262
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !13262
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13263
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !13264
  %conv.i.i = trunc i64 %5 to i32, !dbg !13264
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #10, !dbg !13265
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13266
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13266
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #10, !dbg !13266
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !13267
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13268
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !13243
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !13243
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !13243
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13243
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !13243
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #8, !dbg !13243, !srcloc !13269
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !13243
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !13243
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !13243
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !13243
  store i32 %15, i32* %old, align 4, !dbg !13258
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !13270
  %tobool = icmp ne i32* %16, null, !dbg !13270
  br i1 %tobool, label %if.then, label %if.end, !dbg !13272

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !13273
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !13274
  store i32 %17, i32* %18, align 4, !dbg !13275
  br label %if.end, !dbg !13276

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !13277
  %tobool1 = icmp ne i32 %19, 0, !dbg !13277
  %lnot = xor i1 %tobool1, true, !dbg !13277
  %lnot2 = xor i1 %lnot, true, !dbg !13277
  %lnot3 = xor i1 %lnot2, true, !dbg !13277
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !13277
  %conv = sext i32 %lnot.ext to i64, !dbg !13277
  %tobool4 = icmp ne i64 %conv, 0, !dbg !13277
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !13279

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13280
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #9, !dbg !13281
  br label %if.end17, !dbg !13281

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !13282
  %cmp = icmp slt i32 %21, 0, !dbg !13282
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13282

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !13282
  %23 = load i32, i32* %i.addr, align 4, !dbg !13282
  %add = add i32 %22, %23, !dbg !13282
  %cmp7 = icmp slt i32 %add, 0, !dbg !13282
  br label %lor.end, !dbg !13282

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !13282
  %lnot11 = xor i1 %lnot9, true, !dbg !13282
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !13282
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !13282
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !13282
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !13284

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13285
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #9, !dbg !13286
  br label %if.end16, !dbg !13286

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !13287
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_ms_delta(i64 %later, i64 %earlier) #0 !dbg !13288 {
entry:
  %later.addr = alloca i64, align 8
  %earlier.addr = alloca i64, align 8
  store i64 %later, i64* %later.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %later.addr, metadata !13292, metadata !DIExpression()), !dbg !13293
  store i64 %earlier, i64* %earlier.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %earlier.addr, metadata !13294, metadata !DIExpression()), !dbg !13295
  %0 = load i64, i64* %later.addr, align 8, !dbg !13296
  %1 = load i64, i64* %earlier.addr, align 8, !dbg !13296
  %sub = sub i64 %0, %1, !dbg !13296
  %call = call i64 @ktime_to_ms(i64 %sub) #9, !dbg !13297
  ret i64 %call, !dbg !13298
}

; Function Attrs: noredzone
declare dso_local void @drm_self_refresh_helper_update_avg_times(%struct.drm_atomic_state*, i32, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_to_ms(i64 %kt) #0 !dbg !13299 {
entry:
  %kt.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !13302, metadata !DIExpression()), !dbg !13303
  %0 = load i64, i64* %kt.addr, align 8, !dbg !13304
  %call = call i64 @ktime_divns(i64 %0, i64 1000000) #9, !dbg !13305
  ret i64 %call, !dbg !13306
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_divns(i64 %kt, i64 %div) #0 !dbg !13307 {
entry:
  %kt.addr = alloca i64, align 8
  %div.addr = alloca i64, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !13310, metadata !DIExpression()), !dbg !13311
  store i64 %div, i64* %div.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %div.addr, metadata !13312, metadata !DIExpression()), !dbg !13313
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13314, metadata !DIExpression()), !dbg !13316
  %0 = load i64, i64* %div.addr, align 8, !dbg !13316
  %cmp = icmp slt i64 %0, 0, !dbg !13316
  %lnot = xor i1 %cmp, true, !dbg !13316
  %lnot1 = xor i1 %lnot, true, !dbg !13316
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13316
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13316
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !13317
  %tobool = icmp ne i32 %1, 0, !dbg !13317
  %lnot2 = xor i1 %tobool, true, !dbg !13317
  %lnot4 = xor i1 %lnot2, true, !dbg !13317
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !13317
  %conv = sext i32 %lnot.ext5 to i64, !dbg !13317
  %tobool6 = icmp ne i64 %conv, 0, !dbg !13317
  br i1 %tobool6, label %if.then, label %if.end, !dbg !13316

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13317

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !13319

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !13321

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !13319

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.47, i64 0, i64 0), i32 154, i32 2305, i64 12) #8, !dbg !13323, !srcloc !13325
  br label %do.end9, !dbg !13323

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 93) #8, !dbg !13326, !srcloc !13328
  br label %do.body10, !dbg !13319

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !13329

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !13319

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !13319

if.end:                                           ; preds = %do.end12, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !13316
  %tobool13 = icmp ne i32 %2, 0, !dbg !13316
  %lnot14 = xor i1 %tobool13, true, !dbg !13316
  %lnot16 = xor i1 %lnot14, true, !dbg !13316
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !13316
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !13316
  store i64 %conv18, i64* %tmp, align 8, !dbg !13317
  %3 = load i64, i64* %tmp, align 8, !dbg !13316
  %4 = load i64, i64* %kt.addr, align 8, !dbg !13331
  %5 = load i64, i64* %div.addr, align 8, !dbg !13332
  %div19 = sdiv i64 %4, %5, !dbg !13333
  ret i64 %div19, !dbg !13334
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #6 !dbg !13335 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13339, metadata !DIExpression()), !dbg !13344
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13346, metadata !DIExpression()), !dbg !13347
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13348, metadata !DIExpression()), !dbg !13349
  %0 = load i64, i64* %size.addr, align 8, !dbg !13350
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13352
  br i1 %1, label %if.then, label %if.end447, !dbg !13353

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13354
  %tobool = icmp ne i64 %2, 0, !dbg !13354
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13357

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13358
  br label %return, !dbg !13358

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13359
  %cmp = icmp ult i64 %3, 4096, !dbg !13361
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13362

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13363
  br label %return, !dbg !13363

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub = sub i64 %4, 1, !dbg !13364
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13364
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13364

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub4 = sub i64 %6, 1, !dbg !13364
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13364
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13364

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub6 = sub i64 %8, 1, !dbg !13364
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13364
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13364

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13364

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub9 = sub i64 %9, 1, !dbg !13364
  %and = and i64 %sub9, -9223372036854775808, !dbg !13364
  %tobool10 = icmp ne i64 %and, 0, !dbg !13364
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13364

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13364

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub13 = sub i64 %10, 1, !dbg !13364
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13364
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13364
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13364

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13364

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub18 = sub i64 %11, 1, !dbg !13364
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13364
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13364
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13364

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13364

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub23 = sub i64 %12, 1, !dbg !13364
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13364
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13364
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13364

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13364

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub28 = sub i64 %13, 1, !dbg !13364
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13364
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13364
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13364

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13364

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub33 = sub i64 %14, 1, !dbg !13364
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13364
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13364
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13364

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13364

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub38 = sub i64 %15, 1, !dbg !13364
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13364
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13364
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13364

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13364

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub43 = sub i64 %16, 1, !dbg !13364
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13364
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13364
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13364

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13364

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub48 = sub i64 %17, 1, !dbg !13364
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13364
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13364
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13364

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13364

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub53 = sub i64 %18, 1, !dbg !13364
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13364
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13364
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13364

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13364

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub58 = sub i64 %19, 1, !dbg !13364
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13364
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13364
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13364

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13364

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub63 = sub i64 %20, 1, !dbg !13364
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13364
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13364
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13364

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13364

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub68 = sub i64 %21, 1, !dbg !13364
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13364
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13364
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13364

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13364

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub73 = sub i64 %22, 1, !dbg !13364
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13364
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13364
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13364

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13364

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub78 = sub i64 %23, 1, !dbg !13364
  %and79 = and i64 %sub78, 562949953421312, !dbg !13364
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13364
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13364

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13364

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub83 = sub i64 %24, 1, !dbg !13364
  %and84 = and i64 %sub83, 281474976710656, !dbg !13364
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13364
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13364

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13364

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub88 = sub i64 %25, 1, !dbg !13364
  %and89 = and i64 %sub88, 140737488355328, !dbg !13364
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13364
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13364

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13364

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub93 = sub i64 %26, 1, !dbg !13364
  %and94 = and i64 %sub93, 70368744177664, !dbg !13364
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13364
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13364

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13364

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub98 = sub i64 %27, 1, !dbg !13364
  %and99 = and i64 %sub98, 35184372088832, !dbg !13364
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13364
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13364

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13364

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub103 = sub i64 %28, 1, !dbg !13364
  %and104 = and i64 %sub103, 17592186044416, !dbg !13364
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13364
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13364

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13364

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub108 = sub i64 %29, 1, !dbg !13364
  %and109 = and i64 %sub108, 8796093022208, !dbg !13364
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13364
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13364

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13364

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub113 = sub i64 %30, 1, !dbg !13364
  %and114 = and i64 %sub113, 4398046511104, !dbg !13364
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13364
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13364

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13364

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub118 = sub i64 %31, 1, !dbg !13364
  %and119 = and i64 %sub118, 2199023255552, !dbg !13364
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13364
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13364

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13364

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub123 = sub i64 %32, 1, !dbg !13364
  %and124 = and i64 %sub123, 1099511627776, !dbg !13364
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13364
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13364

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13364

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub128 = sub i64 %33, 1, !dbg !13364
  %and129 = and i64 %sub128, 549755813888, !dbg !13364
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13364
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13364

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13364

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub133 = sub i64 %34, 1, !dbg !13364
  %and134 = and i64 %sub133, 274877906944, !dbg !13364
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13364
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13364

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13364

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub138 = sub i64 %35, 1, !dbg !13364
  %and139 = and i64 %sub138, 137438953472, !dbg !13364
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13364
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13364

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13364

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub143 = sub i64 %36, 1, !dbg !13364
  %and144 = and i64 %sub143, 68719476736, !dbg !13364
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13364
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13364

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13364

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub148 = sub i64 %37, 1, !dbg !13364
  %and149 = and i64 %sub148, 34359738368, !dbg !13364
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13364
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13364

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13364

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub153 = sub i64 %38, 1, !dbg !13364
  %and154 = and i64 %sub153, 17179869184, !dbg !13364
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13364
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13364

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13364

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub158 = sub i64 %39, 1, !dbg !13364
  %and159 = and i64 %sub158, 8589934592, !dbg !13364
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13364
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13364

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13364

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub163 = sub i64 %40, 1, !dbg !13364
  %and164 = and i64 %sub163, 4294967296, !dbg !13364
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13364
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13364

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13364

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub168 = sub i64 %41, 1, !dbg !13364
  %and169 = and i64 %sub168, 2147483648, !dbg !13364
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13364
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13364

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13364

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub173 = sub i64 %42, 1, !dbg !13364
  %and174 = and i64 %sub173, 1073741824, !dbg !13364
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13364
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13364

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13364

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub178 = sub i64 %43, 1, !dbg !13364
  %and179 = and i64 %sub178, 536870912, !dbg !13364
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13364
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13364

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13364

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub183 = sub i64 %44, 1, !dbg !13364
  %and184 = and i64 %sub183, 268435456, !dbg !13364
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13364
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13364

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13364

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub188 = sub i64 %45, 1, !dbg !13364
  %and189 = and i64 %sub188, 134217728, !dbg !13364
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13364
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13364

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13364

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub193 = sub i64 %46, 1, !dbg !13364
  %and194 = and i64 %sub193, 67108864, !dbg !13364
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13364
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13364

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13364

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub198 = sub i64 %47, 1, !dbg !13364
  %and199 = and i64 %sub198, 33554432, !dbg !13364
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13364
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13364

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13364

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub203 = sub i64 %48, 1, !dbg !13364
  %and204 = and i64 %sub203, 16777216, !dbg !13364
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13364
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13364

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13364

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub208 = sub i64 %49, 1, !dbg !13364
  %and209 = and i64 %sub208, 8388608, !dbg !13364
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13364
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13364

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13364

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub213 = sub i64 %50, 1, !dbg !13364
  %and214 = and i64 %sub213, 4194304, !dbg !13364
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13364
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13364

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13364

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub218 = sub i64 %51, 1, !dbg !13364
  %and219 = and i64 %sub218, 2097152, !dbg !13364
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13364
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13364

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13364

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub223 = sub i64 %52, 1, !dbg !13364
  %and224 = and i64 %sub223, 1048576, !dbg !13364
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13364
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13364

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13364

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub228 = sub i64 %53, 1, !dbg !13364
  %and229 = and i64 %sub228, 524288, !dbg !13364
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13364
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13364

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13364

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub233 = sub i64 %54, 1, !dbg !13364
  %and234 = and i64 %sub233, 262144, !dbg !13364
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13364
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13364

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13364

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub238 = sub i64 %55, 1, !dbg !13364
  %and239 = and i64 %sub238, 131072, !dbg !13364
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13364
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13364

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13364

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub243 = sub i64 %56, 1, !dbg !13364
  %and244 = and i64 %sub243, 65536, !dbg !13364
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13364
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13364

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13364

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub248 = sub i64 %57, 1, !dbg !13364
  %and249 = and i64 %sub248, 32768, !dbg !13364
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13364
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13364

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13364

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub253 = sub i64 %58, 1, !dbg !13364
  %and254 = and i64 %sub253, 16384, !dbg !13364
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13364
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13364

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13364

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub258 = sub i64 %59, 1, !dbg !13364
  %and259 = and i64 %sub258, 8192, !dbg !13364
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13364
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13364

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13364

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub263 = sub i64 %60, 1, !dbg !13364
  %and264 = and i64 %sub263, 4096, !dbg !13364
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13364
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13364

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13364

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub268 = sub i64 %61, 1, !dbg !13364
  %and269 = and i64 %sub268, 2048, !dbg !13364
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13364
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13364

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13364

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub273 = sub i64 %62, 1, !dbg !13364
  %and274 = and i64 %sub273, 1024, !dbg !13364
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13364
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13364

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13364

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub278 = sub i64 %63, 1, !dbg !13364
  %and279 = and i64 %sub278, 512, !dbg !13364
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13364
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13364

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13364

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub283 = sub i64 %64, 1, !dbg !13364
  %and284 = and i64 %sub283, 256, !dbg !13364
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13364
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13364

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13364

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub288 = sub i64 %65, 1, !dbg !13364
  %and289 = and i64 %sub288, 128, !dbg !13364
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13364
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13364

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13364

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub293 = sub i64 %66, 1, !dbg !13364
  %and294 = and i64 %sub293, 64, !dbg !13364
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13364
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13364

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13364

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub298 = sub i64 %67, 1, !dbg !13364
  %and299 = and i64 %sub298, 32, !dbg !13364
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13364
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13364

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13364

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub303 = sub i64 %68, 1, !dbg !13364
  %and304 = and i64 %sub303, 16, !dbg !13364
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13364
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13364

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13364

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub308 = sub i64 %69, 1, !dbg !13364
  %and309 = and i64 %sub308, 8, !dbg !13364
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13364
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13364

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13364

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub313 = sub i64 %70, 1, !dbg !13364
  %and314 = and i64 %sub313, 4, !dbg !13364
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13364
  %71 = zext i1 %tobool315 to i64, !dbg !13364
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13364
  br label %cond.end, !dbg !13364

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13364
  br label %cond.end317, !dbg !13364

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13364
  br label %cond.end319, !dbg !13364

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13364
  br label %cond.end321, !dbg !13364

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13364
  br label %cond.end323, !dbg !13364

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13364
  br label %cond.end325, !dbg !13364

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13364
  br label %cond.end327, !dbg !13364

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13364
  br label %cond.end329, !dbg !13364

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13364
  br label %cond.end331, !dbg !13364

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13364
  br label %cond.end333, !dbg !13364

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13364
  br label %cond.end335, !dbg !13364

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13364
  br label %cond.end337, !dbg !13364

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13364
  br label %cond.end339, !dbg !13364

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13364
  br label %cond.end341, !dbg !13364

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13364
  br label %cond.end343, !dbg !13364

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13364
  br label %cond.end345, !dbg !13364

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13364
  br label %cond.end347, !dbg !13364

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13364
  br label %cond.end349, !dbg !13364

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13364
  br label %cond.end351, !dbg !13364

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13364
  br label %cond.end353, !dbg !13364

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13364
  br label %cond.end355, !dbg !13364

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13364
  br label %cond.end357, !dbg !13364

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13364
  br label %cond.end359, !dbg !13364

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13364
  br label %cond.end361, !dbg !13364

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13364
  br label %cond.end363, !dbg !13364

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13364
  br label %cond.end365, !dbg !13364

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13364
  br label %cond.end367, !dbg !13364

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13364
  br label %cond.end369, !dbg !13364

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13364
  br label %cond.end371, !dbg !13364

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13364
  br label %cond.end373, !dbg !13364

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13364
  br label %cond.end375, !dbg !13364

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13364
  br label %cond.end377, !dbg !13364

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13364
  br label %cond.end379, !dbg !13364

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13364
  br label %cond.end381, !dbg !13364

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13364
  br label %cond.end383, !dbg !13364

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13364
  br label %cond.end385, !dbg !13364

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13364
  br label %cond.end387, !dbg !13364

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13364
  br label %cond.end389, !dbg !13364

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13364
  br label %cond.end391, !dbg !13364

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13364
  br label %cond.end393, !dbg !13364

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13364
  br label %cond.end395, !dbg !13364

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13364
  br label %cond.end397, !dbg !13364

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13364
  br label %cond.end399, !dbg !13364

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13364
  br label %cond.end401, !dbg !13364

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13364
  br label %cond.end403, !dbg !13364

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13364
  br label %cond.end405, !dbg !13364

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13364
  br label %cond.end407, !dbg !13364

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13364
  br label %cond.end409, !dbg !13364

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13364
  br label %cond.end411, !dbg !13364

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13364
  br label %cond.end413, !dbg !13364

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13364
  br label %cond.end415, !dbg !13364

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13364
  br label %cond.end417, !dbg !13364

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13364
  br label %cond.end419, !dbg !13364

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13364
  br label %cond.end421, !dbg !13364

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13364
  br label %cond.end423, !dbg !13364

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13364
  br label %cond.end425, !dbg !13364

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13364
  br label %cond.end427, !dbg !13364

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13364
  br label %cond.end429, !dbg !13364

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13364
  br label %cond.end431, !dbg !13364

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13364
  br label %cond.end433, !dbg !13364

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13364
  br label %cond.end435, !dbg !13364

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13364
  br label %cond.end437, !dbg !13364

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13364
  br label %cond.end440, !dbg !13364

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13364

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13364
  br label %cond.end444, !dbg !13364

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13364
  %sub443 = sub i64 %72, 1, !dbg !13364
  %call = call i32 @__ilog2_u64(i64 %sub443) #11, !dbg !13364
  br label %cond.end444, !dbg !13364

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13364
  %sub446 = sub i32 %cond445, 12, !dbg !13365
  %add = add i32 %sub446, 1, !dbg !13366
  store i32 %add, i32* %retval, align 4, !dbg !13367
  br label %return, !dbg !13367

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13368
  %dec = add i64 %73, -1, !dbg !13368
  store i64 %dec, i64* %size.addr, align 8, !dbg !13368
  %74 = load i64, i64* %size.addr, align 8, !dbg !13369
  %shr = lshr i64 %74, 12, !dbg !13369
  store i64 %shr, i64* %size.addr, align 8, !dbg !13369
  %75 = load i64, i64* %size.addr, align 8, !dbg !13370
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13347
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13371
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13372
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #7, !dbg !13371, !srcloc !13373
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13371
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13374
  %add.i = add i32 %79, 1, !dbg !13375
  store i32 %add.i, i32* %retval, align 4, !dbg !13376
  br label %return, !dbg !13376

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13377
  ret i32 %80, !dbg !13377
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #6 !dbg !13378 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13339, metadata !DIExpression()), !dbg !13382
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13346, metadata !DIExpression()), !dbg !13384
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13385, metadata !DIExpression()), !dbg !13386
  %0 = load i64, i64* %n.addr, align 8, !dbg !13387
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13384
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13388
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13389
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #7, !dbg !13388, !srcloc !13373
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13388
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13390
  %add.i = add i32 %4, 1, !dbg !13391
  %sub = sub i32 %add.i, 1, !dbg !13392
  ret i32 %sub, !dbg !13393
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !13394 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13398, metadata !DIExpression()), !dbg !13399
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13400, metadata !DIExpression()), !dbg !13401
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13402, metadata !DIExpression()), !dbg !13403
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13404, metadata !DIExpression()), !dbg !13405
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13406
  ret i8* %0, !dbg !13407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #0 !dbg !6149 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !13408, metadata !DIExpression()), !dbg !13409
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !13410
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !13411
  store i32 0, i32* %done, align 8, !dbg !13412
  br label %do.body, !dbg !13413

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !13414
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !13414
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.49, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #9, !dbg !13414
  br label %do.end, !dbg !13414

do.end:                                           ; preds = %do.body
  ret void, !dbg !13416
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !13417 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !13418, metadata !DIExpression()), !dbg !13419
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !13420
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !13421
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #9, !dbg !13422
  ret void, !dbg !13423
}

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !13424 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !13427, metadata !DIExpression()), !dbg !13431
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !13435, metadata !DIExpression()), !dbg !13436
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !13437, metadata !DIExpression()), !dbg !13439
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !13441, metadata !DIExpression()), !dbg !13442
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13443, metadata !DIExpression()), !dbg !13444
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !13445, metadata !DIExpression()), !dbg !13446
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13447, metadata !DIExpression()), !dbg !13448
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !13449, metadata !DIExpression()), !dbg !13450
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13451
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !13452
  %1 = load i32, i32* %n.addr, align 4, !dbg !13453
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13454
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !13454
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13455
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !13456
  %conv.i.i = trunc i64 %5 to i32, !dbg !13456
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #10, !dbg !13457
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13458
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !13458
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #10, !dbg !13458
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13459
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !13460
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !13461
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !13461
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !13461
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !13461
  ret void, !dbg !13463
}

; Function Attrs: noredzone
declare dso_local i64 @wait_for_completion_interruptible_timeout(%struct.completion*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !13464 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !13465, metadata !DIExpression()), !dbg !13467
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13468, metadata !DIExpression()), !dbg !13467
  %0 = load i64, i64* %__edi, align 8, !dbg !13467
  store i64 %0, i64* %__edi, align 8, !dbg !13467
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13469, metadata !DIExpression()), !dbg !13467
  %1 = load i64, i64* %__esi, align 8, !dbg !13467
  store i64 %1, i64* %__esi, align 8, !dbg !13467
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13470, metadata !DIExpression()), !dbg !13467
  %2 = load i64, i64* %__edx, align 8, !dbg !13467
  store i64 %2, i64* %__edx, align 8, !dbg !13467
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13471, metadata !DIExpression()), !dbg !13467
  %3 = load i64, i64* %__ecx, align 8, !dbg !13467
  store i64 %3, i64* %__ecx, align 8, !dbg !13467
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13472, metadata !DIExpression()), !dbg !13467
  %4 = load i64, i64* %__eax, align 8, !dbg !13467
  store i64 %4, i64* %__eax, align 8, !dbg !13467
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !13467
  %6 = call i64 @llvm.read_register.i64(metadata !6150), !dbg !13473
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #8, !dbg !13473, !srcloc !13476
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13473
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13473
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13473
  call void @llvm.write_register.i64(metadata !6150, i64 %asmresult1), !dbg !13473
  %8 = load i64, i64* %__eax, align 8, !dbg !13473
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !13477, metadata !DIExpression()), !dbg !13479
  store i64 -1, i64* %__mask, align 8, !dbg !13479
  %9 = load i64, i64* %__mask, align 8, !dbg !13479
  store i64 %9, i64* %tmp, align 8, !dbg !13479
  %10 = load i64, i64* %tmp, align 8, !dbg !13479
  %and = and i64 %8, %10, !dbg !13473
  store i64 %and, i64* %__ret, align 8, !dbg !13473
  %11 = load i64, i64* %__ret, align 8, !dbg !13467
  store i64 %11, i64* %tmp2, align 8, !dbg !13480
  %12 = load i64, i64* %tmp2, align 8, !dbg !13467
  ret i64 %12, !dbg !13481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !13482 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13483, metadata !DIExpression()), !dbg !13485
  %0 = load i64, i64* %__edi, align 8, !dbg !13485
  store i64 %0, i64* %__edi, align 8, !dbg !13485
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13486, metadata !DIExpression()), !dbg !13485
  %1 = load i64, i64* %__esi, align 8, !dbg !13485
  store i64 %1, i64* %__esi, align 8, !dbg !13485
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13487, metadata !DIExpression()), !dbg !13485
  %2 = load i64, i64* %__edx, align 8, !dbg !13485
  store i64 %2, i64* %__edx, align 8, !dbg !13485
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13488, metadata !DIExpression()), !dbg !13485
  %3 = load i64, i64* %__ecx, align 8, !dbg !13485
  store i64 %3, i64* %__ecx, align 8, !dbg !13485
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13489, metadata !DIExpression()), !dbg !13485
  %4 = load i64, i64* %__eax, align 8, !dbg !13485
  store i64 %4, i64* %__eax, align 8, !dbg !13485
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !13485
  %6 = call i64 @llvm.read_register.i64(metadata !6150), !dbg !13485
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #8, !dbg !13485, !srcloc !13490
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !13485
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !13485
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13485
  call void @llvm.write_register.i64(metadata !6150, i64 %asmresult1), !dbg !13485
  ret void, !dbg !13491
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #7

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !13492 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !13495, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !13497, metadata !DIExpression()), !dbg !13499
  %0 = load i64, i64* %__edi, align 8, !dbg !13499
  store i64 %0, i64* %__edi, align 8, !dbg !13499
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !13500, metadata !DIExpression()), !dbg !13499
  %1 = load i64, i64* %__esi, align 8, !dbg !13499
  store i64 %1, i64* %__esi, align 8, !dbg !13499
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !13501, metadata !DIExpression()), !dbg !13499
  %2 = load i64, i64* %__edx, align 8, !dbg !13499
  store i64 %2, i64* %__edx, align 8, !dbg !13499
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !13502, metadata !DIExpression()), !dbg !13499
  %3 = load i64, i64* %__ecx, align 8, !dbg !13499
  store i64 %3, i64* %__ecx, align 8, !dbg !13499
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !13503, metadata !DIExpression()), !dbg !13499
  %4 = load i64, i64* %__eax, align 8, !dbg !13499
  store i64 %4, i64* %__eax, align 8, !dbg !13499
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !13499
  %6 = call i64 @llvm.read_register.i64(metadata !6150), !dbg !13499
  %7 = load i64, i64* %f.addr, align 8, !dbg !13499
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #8, !dbg !13499, !srcloc !13504
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !13499
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !13499
  store i64 %asmresult, i64* %__eax, align 8, !dbg !13499
  call void @llvm.write_register.i64(metadata !6150, i64 %asmresult1), !dbg !13499
  ret void, !dbg !13505
}

; Function Attrs: noredzone
declare dso_local void @__drm_crtc_commit_free(%struct.kref*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !13506 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13507, metadata !DIExpression()), !dbg !13508
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13509
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #9, !dbg !13511
  br i1 %call, label %if.end, label %if.then, !dbg !13512

if.then:                                          ; preds = %entry
  br label %return, !dbg !13513

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13514
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13515
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13515
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13516
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13517
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13517
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #9, !dbg !13518
  br label %return, !dbg !13519

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13519
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !13520 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13523, metadata !DIExpression()), !dbg !13524
  ret i1 true, !dbg !13525
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13526 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13527, metadata !DIExpression()), !dbg !13528
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13529, metadata !DIExpression()), !dbg !13530
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13531
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13532
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13533
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !13534
  br label %do.body, !dbg !13535

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !13536

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !13538

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !13536

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13540
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13540
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !13540
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !13540
  br label %do.end5, !dbg !13540

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !13536

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !13542
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13543 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13546, metadata !DIExpression()), !dbg !13547
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13548, metadata !DIExpression()), !dbg !13549
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13550, metadata !DIExpression()), !dbg !13551
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13552
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13554
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13555
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #9, !dbg !13556
  br i1 %call, label %if.end, label %if.then, !dbg !13557

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !13558

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13559
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13560
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !13561
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !13562
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13563
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13564
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !13565
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !13566
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13567
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13568
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !13569
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !13570
  br label %do.body, !dbg !13571

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !13572

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !13574

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13572

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13576
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13576
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !13576
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !13576
  br label %do.end7, !dbg !13576

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !13572

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !13578
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13579 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13582, metadata !DIExpression()), !dbg !13583
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13584, metadata !DIExpression()), !dbg !13585
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13586, metadata !DIExpression()), !dbg !13587
  ret i1 true, !dbg !13588
}

; Function Attrs: noredzone
declare dso_local void @__drm_atomic_state_free(%struct.kref*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_core_check_feature(%struct.drm_device* %dev, i32 %feature) #0 !dbg !13589 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %feature.addr = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !13594, metadata !DIExpression()), !dbg !13595
  store i32 %feature, i32* %feature.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %feature.addr, metadata !13596, metadata !DIExpression()), !dbg !13597
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !13598
  %1 = load i32, i32* %feature.addr, align 4, !dbg !13599
  %call = call zeroext i1 @drm_core_check_all_features(%struct.drm_device* %0, i32 %1) #9, !dbg !13600
  ret i1 %call, !dbg !13601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_core_check_all_features(%struct.drm_device* %dev, i32 %features) #0 !dbg !13602 {
entry:
  %dev.addr = alloca %struct.drm_device*, align 8
  %features.addr = alloca i32, align 4
  %supported = alloca i32, align 4
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !13605, metadata !DIExpression()), !dbg !13606
  store i32 %features, i32* %features.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %features.addr, metadata !13607, metadata !DIExpression()), !dbg !13608
  call void @llvm.dbg.declare(metadata i32* %supported, metadata !13609, metadata !DIExpression()), !dbg !13610
  %0 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !13611
  %driver = getelementptr inbounds %struct.drm_device, %struct.drm_device* %0, i32 0, i32 5, !dbg !13612
  %1 = load %struct.drm_driver*, %struct.drm_driver** %driver, align 8, !dbg !13612
  %driver_features = getelementptr inbounds %struct.drm_driver, %struct.drm_driver* %1, i32 0, i32 38, !dbg !13613
  %2 = load i32, i32* %driver_features, align 8, !dbg !13613
  %3 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !13614
  %driver_features1 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %3, i32 0, i32 11, !dbg !13615
  %4 = load i32, i32* %driver_features1, align 8, !dbg !13615
  %and = and i32 %2, %4, !dbg !13616
  store i32 %and, i32* %supported, align 4, !dbg !13610
  %5 = load i32, i32* %features.addr, align 4, !dbg !13617
  %tobool = icmp ne i32 %5, 0, !dbg !13617
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !13618

land.rhs:                                         ; preds = %entry
  %6 = load i32, i32* %supported, align 4, !dbg !13619
  %7 = load i32, i32* %features.addr, align 4, !dbg !13620
  %and2 = and i32 %6, %7, !dbg !13621
  %8 = load i32, i32* %features.addr, align 4, !dbg !13622
  %cmp = icmp eq i32 %and2, %8, !dbg !13623
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %9 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !13624
  ret i1 %9, !dbg !13625
}

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readnone willreturn }
attributes #5 = { nounwind willreturn }
attributes #6 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { noredzone }
attributes #10 = { noredzone nounwind }
attributes #11 = { noredzone nounwind readnone }

!llvm.dbg.cu = !{!5801}
!llvm.named.register.rsp = !{!6150}
!llvm.module.flags = !{!6151, !6152, !6153, !6154}
!llvm.ident = !{!6155}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "__warned", scope: !2, file: !3, line: 1106, type: !315, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "disable_outputs", scope: !3, file: !3, line: 1009, type: !4, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!3 = !DIFile(filename: "drivers/gpu/drm/drm_atomic_helper.c", directory: "/home/lizy2001/genbc/linux")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !4520}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_device", file: !8, line: 53, size: 11840, elements: !9)
!8 = !DIFile(filename: "./include/drm/drm_device.h", directory: "/home/lizy2001/genbc/linux")
!9 = !{!10, !17, !19, !33, !3919, !3925, !4171, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4179, !4180, !4181, !4182, !4183, !4184, !4185, !4186, !4187, !4188, !4189, !4190, !4191, !4323, !4324, !4325, !4326, !4327, !4328, !4331, !4335, !4336, !5783, !5784, !5785, !5788, !5791, !5798}
!10 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_dev_list", scope: !7, file: !8, line: 59, baseType: !11, size: 128)
!11 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !12, line: 178, size: 128, elements: !13)
!12 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !16}
!14 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11, file: !12, line: 179, baseType: !15, size: 64)
!15 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11, size: 64)
!16 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11, file: !12, line: 179, baseType: !15, size: 64, offset: 64)
!17 = !DIDerivedType(tag: DW_TAG_member, name: "if_version", scope: !7, file: !8, line: 62, baseType: !18, size: 32, offset: 128)
!18 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !7, file: !8, line: 65, baseType: !20, size: 32, offset: 160)
!20 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !21, line: 19, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23}
!23 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !20, file: !21, line: 20, baseType: !24, size: 32)
!24 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !25, line: 113, baseType: !26)
!25 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!26 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !25, line: 111, size: 32, elements: !27)
!27 = !{!28}
!28 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !26, file: !25, line: 112, baseType: !29, size: 32)
!29 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !12, line: 168, baseType: !30)
!30 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 166, size: 32, elements: !31)
!31 = !{!32}
!32 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !30, file: !12, line: 167, baseType: !18, size: 32)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !7, file: !8, line: 68, baseType: !34, size: 64, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !35, size: 64)
!35 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !36, line: 461, size: 5568, elements: !37)
!36 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!37 = !{!38, !3333, !3334, !3337, !3338, !3390, !3487, !3488, !3489, !3490, !3491, !3506, !3624, !3637, !3846, !3847, !3851, !3853, !3854, !3855, !3859, !3865, !3866, !3869, !3870, !3871, !3872, !3873, !3874, !3875, !3907, !3908, !3909, !3912, !3915, !3916, !3917, !3918}
!38 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !35, file: !36, line: 462, baseType: !39, size: 512)
!39 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !40, line: 64, size: 512, elements: !41)
!40 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!41 = !{!42, !46, !47, !49, !109, !3206, !3327, !3328, !3329, !3330, !3331, !3332}
!42 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !39, file: !40, line: 65, baseType: !43, size: 64)
!43 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !44, size: 64)
!44 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !45)
!45 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !39, file: !40, line: 66, baseType: !11, size: 128, offset: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !39, file: !40, line: 67, baseType: !48, size: 64, offset: 192)
!48 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !39, size: 64)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !39, file: !40, line: 68, baseType: !50, size: 64, offset: 256)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!51 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !40, line: 192, size: 704, elements: !52)
!52 = !{!53, !54, !70, !71}
!53 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !51, file: !40, line: 193, baseType: !11, size: 128)
!54 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !51, file: !40, line: 194, baseType: !55, offset: 128)
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !56, line: 83, baseType: !57)
!56 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!57 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !56, line: 71, elements: !58)
!58 = !{!59}
!59 = !DIDerivedType(tag: DW_TAG_member, scope: !57, file: !56, line: 72, baseType: !60)
!60 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !57, file: !56, line: 72, elements: !61)
!61 = !{!62}
!62 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !60, file: !56, line: 73, baseType: !63)
!63 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !56, line: 20, elements: !64)
!64 = !{!65}
!65 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !63, file: !56, line: 21, baseType: !66)
!66 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !67, line: 25, baseType: !68)
!67 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!68 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 25, elements: !69)
!69 = !{}
!70 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !51, file: !40, line: 195, baseType: !39, size: 512, offset: 128)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !51, file: !40, line: 196, baseType: !72, size: 64, offset: 640)
!72 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!73 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !74)
!74 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !40, line: 156, size: 192, elements: !75)
!75 = !{!76, !81, !86}
!76 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !74, file: !40, line: 157, baseType: !77, size: 64)
!77 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !78)
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DISubroutineType(types: !80)
!80 = !{!18, !50, !48}
!81 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !74, file: !40, line: 158, baseType: !82, size: 64, offset: 64)
!82 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !83)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!84 = !DISubroutineType(types: !85)
!85 = !{!43, !50, !48}
!86 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !74, file: !40, line: 159, baseType: !87, size: 64, offset: 128)
!87 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !88)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !89, size: 64)
!89 = !DISubroutineType(types: !90)
!90 = !{!18, !50, !48, !91}
!91 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !92, size: 64)
!92 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !40, line: 148, size: 20736, elements: !93)
!93 = !{!94, !99, !103, !104, !108}
!94 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !92, file: !40, line: 149, baseType: !95, size: 192)
!95 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 192, elements: !97)
!96 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !45, size: 64)
!97 = !{!98}
!98 = !DISubrange(count: 3)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !92, file: !40, line: 150, baseType: !100, size: 4096, offset: 192)
!100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !96, size: 4096, elements: !101)
!101 = !{!102}
!102 = !DISubrange(count: 64)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !92, file: !40, line: 151, baseType: !18, size: 32, offset: 4288)
!104 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !92, file: !40, line: 152, baseType: !105, size: 16384, offset: 4320)
!105 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 16384, elements: !106)
!106 = !{!107}
!107 = !DISubrange(count: 2048)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !92, file: !40, line: 153, baseType: !18, size: 32, offset: 20704)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !39, file: !40, line: 69, baseType: !110, size: 64, offset: 320)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 64)
!111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !40, line: 138, size: 448, elements: !112)
!112 = !{!113, !117, !147, !149, !3162, !3196, !3200}
!113 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !111, file: !40, line: 139, baseType: !114, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!115 = !DISubroutineType(types: !116)
!116 = !{null, !48}
!117 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !111, file: !40, line: 140, baseType: !118, size: 64, offset: 64)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !119, size: 64)
!119 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !121, line: 230, size: 128, elements: !122)
!121 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!122 = !{!123, !139}
!123 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !120, file: !121, line: 231, baseType: !124, size: 64)
!124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !125, size: 64)
!125 = !DISubroutineType(types: !126)
!126 = !{!127, !48, !132, !96}
!127 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !12, line: 60, baseType: !128)
!128 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !129, line: 73, baseType: !130)
!129 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!130 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !129, line: 15, baseType: !131)
!131 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !133, size: 64)
!133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !121, line: 30, size: 128, elements: !134)
!134 = !{!135, !136}
!135 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !133, file: !121, line: 31, baseType: !43, size: 64)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !133, file: !121, line: 32, baseType: !137, size: 16, offset: 64)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !12, line: 19, baseType: !138)
!138 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !120, file: !121, line: 232, baseType: !140, size: 64, offset: 64)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DISubroutineType(types: !142)
!142 = !{!127, !48, !132, !43, !143}
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !12, line: 55, baseType: !144)
!144 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !129, line: 72, baseType: !145)
!145 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !129, line: 16, baseType: !146)
!146 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !111, file: !40, line: 141, baseType: !148, size: 64, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !132, size: 64)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !111, file: !40, line: 142, baseType: !150, size: 64, offset: 192)
!150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !151, size: 64)
!151 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !152, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !153)
!153 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !121, line: 84, size: 320, elements: !154)
!154 = !{!155, !156, !160, !3159, !3160}
!155 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !153, file: !121, line: 85, baseType: !43, size: 64)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !153, file: !121, line: 86, baseType: !157, size: 64, offset: 64)
!157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!158 = !DISubroutineType(types: !159)
!159 = !{!137, !48, !132, !18}
!160 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !153, file: !121, line: 88, baseType: !161, size: 64, offset: 128)
!161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !162, size: 64)
!162 = !DISubroutineType(types: !163)
!163 = !{!137, !48, !164, !18}
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !121, line: 168, size: 448, elements: !166)
!166 = !{!167, !168, !169, !171, !3154, !3155}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !165, file: !121, line: 169, baseType: !133, size: 128)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !165, file: !121, line: 170, baseType: !143, size: 64, offset: 128)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !165, file: !121, line: 171, baseType: !170, size: 64, offset: 192)
!170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !165, file: !121, line: 172, baseType: !172, size: 64, offset: 256)
!172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !173, size: 64)
!173 = !DISubroutineType(types: !174)
!174 = !{!127, !175, !48, !164, !96, !356, !143}
!175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !176, size: 64)
!176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !177, line: 916, size: 1856, align: 32, elements: !178)
!177 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!178 = !{!179, !197, !3104, !3105, !3106, !3107, !3116, !3117, !3118, !3119, !3120, !3121, !3137, !3138, !3147, !3148, !3149, !3150, !3151, !3152, !3153}
!179 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !176, file: !177, line: 920, baseType: !180, size: 128)
!180 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !176, file: !177, line: 917, size: 128, elements: !181)
!181 = !{!182, !188}
!182 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !180, file: !177, line: 918, baseType: !183, size: 64)
!183 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !184, line: 58, size: 64, elements: !185)
!184 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!185 = !{!186}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !183, file: !184, line: 59, baseType: !187, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !183, size: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !180, file: !177, line: 919, baseType: !189, size: 128, align: 64)
!189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !12, line: 216, size: 128, align: 64, elements: !190)
!190 = !{!191, !193}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !189, file: !12, line: 217, baseType: !192, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !189, size: 64)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !189, file: !12, line: 218, baseType: !194, size: 64, offset: 64)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DISubroutineType(types: !196)
!196 = !{null, !192}
!197 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !176, file: !177, line: 921, baseType: !198, size: 128, offset: 128)
!198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !199, line: 8, size: 128, elements: !200)
!199 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!200 = !{!201, !205}
!201 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !198, file: !199, line: 9, baseType: !202, size: 64)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !204, line: 18, flags: DIFlagFwdDecl)
!204 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!205 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !198, file: !199, line: 10, baseType: !206, size: 64, offset: 64)
!206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !207, size: 64)
!207 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !204, line: 89, size: 1536, elements: !208)
!208 = !{!209, !211, !221, !229, !230, !253, !3073, !3075, !3087, !3088, !3089, !3090, !3091, !3096, !3097, !3098}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !207, file: !204, line: 91, baseType: !210, size: 32)
!210 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !207, file: !204, line: 92, baseType: !212, size: 32, offset: 32)
!212 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !213, line: 277, baseType: !214)
!213 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!214 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !213, line: 277, size: 32, elements: !215)
!215 = !{!216}
!216 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !214, file: !213, line: 277, baseType: !217, size: 32)
!217 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !213, line: 70, baseType: !218)
!218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !213, line: 65, size: 32, elements: !219)
!219 = !{!220}
!220 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !218, file: !213, line: 66, baseType: !210, size: 32)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !207, file: !204, line: 93, baseType: !222, size: 128, offset: 64)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !223, line: 38, size: 128, elements: !224)
!223 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!224 = !{!225, !227}
!225 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !222, file: !223, line: 39, baseType: !226, size: 64)
!226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 64)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !222, file: !223, line: 39, baseType: !228, size: 64, offset: 64)
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !207, file: !204, line: 94, baseType: !206, size: 64, offset: 192)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !207, file: !204, line: 95, baseType: !231, size: 128, offset: 256)
!231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !204, line: 47, size: 128, elements: !232)
!232 = !{!233, !249}
!233 = !DIDerivedType(tag: DW_TAG_member, scope: !231, file: !204, line: 48, baseType: !234, size: 64)
!234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !231, file: !204, line: 48, size: 64, elements: !235)
!235 = !{!236, !245}
!236 = !DIDerivedType(tag: DW_TAG_member, scope: !234, file: !204, line: 49, baseType: !237, size: 64)
!237 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !234, file: !204, line: 49, size: 64, elements: !238)
!238 = !{!239, !244}
!239 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !237, file: !204, line: 50, baseType: !240, size: 32)
!240 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !241, line: 21, baseType: !242)
!241 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!242 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !243, line: 27, baseType: !210)
!243 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!244 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !237, file: !204, line: 50, baseType: !240, size: 32, offset: 32)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !234, file: !204, line: 52, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !241, line: 23, baseType: !247)
!247 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !243, line: 31, baseType: !248)
!248 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !231, file: !204, line: 54, baseType: !250, size: 64, offset: 64)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !252)
!252 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !207, file: !204, line: 96, baseType: !254, size: 64, offset: 384)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !177, line: 610, size: 4224, elements: !256)
!256 = !{!257, !258, !259, !267, !274, !275, !423, !2776, !2777, !2778, !2784, !2785, !2786, !2787, !2788, !2789, !2790, !2791, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799, !2800, !2801, !2802, !2803, !2808, !2809, !2810, !2811, !2812, !2813, !2814, !3049, !3057, !3058, !3059, !3069, !3070, !3071, !3072}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !255, file: !177, line: 611, baseType: !137, size: 16)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !255, file: !177, line: 612, baseType: !138, size: 16, offset: 16)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !255, file: !177, line: 613, baseType: !260, size: 32, offset: 32)
!260 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !261, line: 23, baseType: !262)
!261 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!262 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 21, size: 32, elements: !263)
!263 = !{!264}
!264 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !262, file: !261, line: 22, baseType: !265, size: 32)
!265 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !12, line: 32, baseType: !266)
!266 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !129, line: 49, baseType: !210)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !255, file: !177, line: 614, baseType: !268, size: 32, offset: 64)
!268 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !261, line: 28, baseType: !269)
!269 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !261, line: 26, size: 32, elements: !270)
!270 = !{!271}
!271 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !269, file: !261, line: 27, baseType: !272, size: 32)
!272 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !12, line: 33, baseType: !273)
!273 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !129, line: 50, baseType: !210)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !255, file: !177, line: 615, baseType: !210, size: 32, offset: 96)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !255, file: !177, line: 622, baseType: !276, size: 64, offset: 128)
!276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !277, size: 64)
!277 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !278)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !177, line: 1864, size: 1536, align: 512, elements: !279)
!279 = !{!280, !284, !297, !301, !307, !311, !317, !321, !325, !329, !333, !334, !340, !344, !370, !399, !403, !409, !414, !418, !419}
!280 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !278, file: !177, line: 1865, baseType: !281, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DISubroutineType(types: !283)
!283 = !{!206, !254, !206, !210}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !278, file: !177, line: 1866, baseType: !285, size: 64, offset: 64)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!286 = !DISubroutineType(types: !287)
!287 = !{!43, !206, !254, !288}
!288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !289, size: 64)
!289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !290, line: 10, size: 128, elements: !291)
!290 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!291 = !{!292, !296}
!292 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !289, file: !290, line: 11, baseType: !293, size: 64)
!293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !294, size: 64)
!294 = !DISubroutineType(types: !295)
!295 = !{null, !170}
!296 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !289, file: !290, line: 12, baseType: !170, size: 64, offset: 64)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !278, file: !177, line: 1867, baseType: !298, size: 64, offset: 128)
!298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 64)
!299 = !DISubroutineType(types: !300)
!300 = !{!18, !254, !18}
!301 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !278, file: !177, line: 1868, baseType: !302, size: 64, offset: 192)
!302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !303, size: 64)
!303 = !DISubroutineType(types: !304)
!304 = !{!305, !254, !18}
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 64)
!306 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !177, line: 581, flags: DIFlagFwdDecl)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !278, file: !177, line: 1870, baseType: !308, size: 64, offset: 256)
!308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !309, size: 64)
!309 = !DISubroutineType(types: !310)
!310 = !{!18, !206, !96, !18}
!311 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !278, file: !177, line: 1872, baseType: !312, size: 64, offset: 320)
!312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !313, size: 64)
!313 = !DISubroutineType(types: !314)
!314 = !{!18, !254, !206, !137, !315}
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !12, line: 30, baseType: !316)
!316 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !278, file: !177, line: 1873, baseType: !318, size: 64, offset: 384)
!318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !319, size: 64)
!319 = !DISubroutineType(types: !320)
!320 = !{!18, !206, !254, !206}
!321 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !278, file: !177, line: 1874, baseType: !322, size: 64, offset: 448)
!322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !323, size: 64)
!323 = !DISubroutineType(types: !324)
!324 = !{!18, !254, !206}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !278, file: !177, line: 1875, baseType: !326, size: 64, offset: 512)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DISubroutineType(types: !328)
!328 = !{!18, !254, !206, !43}
!329 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !278, file: !177, line: 1876, baseType: !330, size: 64, offset: 576)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{!18, !254, !206, !137}
!333 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !278, file: !177, line: 1877, baseType: !322, size: 64, offset: 640)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !278, file: !177, line: 1878, baseType: !335, size: 64, offset: 704)
!335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !336, size: 64)
!336 = !DISubroutineType(types: !337)
!337 = !{!18, !254, !206, !137, !338}
!338 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !12, line: 16, baseType: !339)
!339 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !12, line: 13, baseType: !240)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !278, file: !177, line: 1879, baseType: !341, size: 64, offset: 768)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DISubroutineType(types: !343)
!343 = !{!18, !254, !206, !254, !206, !210}
!344 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !278, file: !177, line: 1881, baseType: !345, size: 64, offset: 832)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = !DISubroutineType(types: !347)
!347 = !{!18, !206, !348}
!348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !349, size: 64)
!349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !177, line: 219, size: 640, elements: !350)
!350 = !{!351, !352, !353, !354, !355, !359, !367, !368, !369}
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !349, file: !177, line: 220, baseType: !210, size: 32)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !349, file: !177, line: 221, baseType: !137, size: 16, offset: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !349, file: !177, line: 222, baseType: !260, size: 32, offset: 64)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !349, file: !177, line: 223, baseType: !268, size: 32, offset: 96)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !349, file: !177, line: 224, baseType: !356, size: 64, offset: 128)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !12, line: 46, baseType: !357)
!357 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !129, line: 88, baseType: !358)
!358 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !349, file: !177, line: 225, baseType: !360, size: 128, offset: 192)
!360 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !361, line: 13, size: 128, elements: !362)
!361 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!362 = !{!363, !366}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !360, file: !361, line: 14, baseType: !364, size: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !361, line: 8, baseType: !365)
!365 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !243, line: 30, baseType: !358)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !360, file: !361, line: 15, baseType: !131, size: 64, offset: 64)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !349, file: !177, line: 226, baseType: !360, size: 128, offset: 320)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !349, file: !177, line: 227, baseType: !360, size: 128, offset: 448)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !349, file: !177, line: 234, baseType: !175, size: 64, offset: 576)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !278, file: !177, line: 1882, baseType: !371, size: 64, offset: 896)
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !372, size: 64)
!372 = !DISubroutineType(types: !373)
!373 = !{!18, !374, !376, !240, !210}
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !198)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !378, line: 22, size: 1152, elements: !379)
!378 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!379 = !{!380, !381, !382, !383, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !377, file: !378, line: 23, baseType: !240, size: 32)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !377, file: !378, line: 24, baseType: !137, size: 16, offset: 32)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !377, file: !378, line: 25, baseType: !210, size: 32, offset: 64)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !377, file: !378, line: 26, baseType: !384, size: 32, offset: 96)
!384 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !12, line: 104, baseType: !240)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !377, file: !378, line: 27, baseType: !246, size: 64, offset: 128)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !377, file: !378, line: 28, baseType: !246, size: 64, offset: 192)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !377, file: !378, line: 37, baseType: !246, size: 64, offset: 256)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !377, file: !378, line: 38, baseType: !338, size: 32, offset: 320)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !377, file: !378, line: 39, baseType: !338, size: 32, offset: 352)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !377, file: !378, line: 40, baseType: !260, size: 32, offset: 384)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !377, file: !378, line: 41, baseType: !268, size: 32, offset: 416)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !377, file: !378, line: 42, baseType: !356, size: 64, offset: 448)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !377, file: !378, line: 43, baseType: !360, size: 128, offset: 512)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !377, file: !378, line: 44, baseType: !360, size: 128, offset: 640)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !377, file: !378, line: 45, baseType: !360, size: 128, offset: 768)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !377, file: !378, line: 46, baseType: !360, size: 128, offset: 896)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !377, file: !378, line: 47, baseType: !246, size: 64, offset: 1024)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !377, file: !378, line: 48, baseType: !246, size: 64, offset: 1088)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !278, file: !177, line: 1883, baseType: !400, size: 64, offset: 960)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !401, size: 64)
!401 = !DISubroutineType(types: !402)
!402 = !{!127, !206, !96, !143}
!403 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !278, file: !177, line: 1884, baseType: !404, size: 64, offset: 1024)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DISubroutineType(types: !406)
!406 = !{!18, !254, !407, !246, !246}
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !177, line: 50, flags: DIFlagFwdDecl)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !278, file: !177, line: 1886, baseType: !410, size: 64, offset: 1088)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{!18, !254, !413, !18}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !360, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !278, file: !177, line: 1887, baseType: !415, size: 64, offset: 1152)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !416, size: 64)
!416 = !DISubroutineType(types: !417)
!417 = !{!18, !254, !206, !175, !210, !137}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !278, file: !177, line: 1890, baseType: !330, size: 64, offset: 1216)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !278, file: !177, line: 1891, baseType: !420, size: 64, offset: 1280)
!420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !421, size: 64)
!421 = !DISubroutineType(types: !422)
!422 = !{!18, !254, !305, !18}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !255, file: !177, line: 623, baseType: !424, size: 64, offset: 192)
!424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !425, size: 64)
!425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !177, line: 1416, size: 9472, elements: !426)
!426 = !{!427, !428, !429, !430, !431, !432, !482, !2377, !2465, !2548, !2552, !2553, !2554, !2555, !2556, !2557, !2558, !2559, !2564, !2568, !2569, !2572, !2573, !2576, !2577, !2578, !2619, !2646, !2647, !2648, !2649, !2650, !2651, !2654, !2656, !2663, !2664, !2666, !2667, !2668, !2727, !2728, !2743, !2744, !2745, !2746, !2747, !2750, !2751, !2752, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !425, file: !177, line: 1417, baseType: !11, size: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !425, file: !177, line: 1418, baseType: !338, size: 32, offset: 128)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !425, file: !177, line: 1419, baseType: !252, size: 8, offset: 160)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !425, file: !177, line: 1420, baseType: !146, size: 64, offset: 192)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !425, file: !177, line: 1421, baseType: !356, size: 64, offset: 256)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !425, file: !177, line: 1422, baseType: !433, size: 64, offset: 320)
!433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !434, size: 64)
!434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !177, line: 2228, size: 576, elements: !435)
!435 = !{!436, !437, !438, !445, !449, !453, !457, !461, !462, !472, !475, !476, !477, !479, !480, !481}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !434, file: !177, line: 2229, baseType: !43, size: 64)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !434, file: !177, line: 2230, baseType: !18, size: 32, offset: 64)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !434, file: !177, line: 2238, baseType: !439, size: 64, offset: 128)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DISubroutineType(types: !441)
!441 = !{!18, !442}
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !444, line: 28, flags: DIFlagFwdDecl)
!444 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!445 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !434, file: !177, line: 2239, baseType: !446, size: 64, offset: 192)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !448)
!448 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !177, line: 70, flags: DIFlagFwdDecl)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !434, file: !177, line: 2240, baseType: !450, size: 64, offset: 256)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DISubroutineType(types: !452)
!452 = !{!206, !433, !18, !43, !170}
!453 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !434, file: !177, line: 2242, baseType: !454, size: 64, offset: 320)
!454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !455, size: 64)
!455 = !DISubroutineType(types: !456)
!456 = !{null, !424}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !434, file: !177, line: 2243, baseType: !458, size: 64, offset: 384)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !460, line: 76, flags: DIFlagFwdDecl)
!460 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!461 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !434, file: !177, line: 2244, baseType: !433, size: 64, offset: 448)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !434, file: !177, line: 2245, baseType: !463, size: 64, offset: 512)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !12, line: 182, size: 64, elements: !464)
!464 = !{!465}
!465 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !463, file: !12, line: 183, baseType: !466, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !12, line: 186, size: 128, elements: !468)
!468 = !{!469, !470}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !467, file: !12, line: 187, baseType: !466, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !467, file: !12, line: 187, baseType: !471, size: 64, offset: 64)
!471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !466, size: 64)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !434, file: !177, line: 2247, baseType: !473, offset: 576)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !474, line: 187, elements: !69)
!474 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!475 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !434, file: !177, line: 2248, baseType: !473, offset: 576)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !434, file: !177, line: 2249, baseType: !473, offset: 576)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !434, file: !177, line: 2250, baseType: !478, offset: 576)
!478 = !DICompositeType(tag: DW_TAG_array_type, baseType: !473, elements: !97)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !434, file: !177, line: 2252, baseType: !473, offset: 576)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !434, file: !177, line: 2253, baseType: !473, offset: 576)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !434, file: !177, line: 2254, baseType: !473, offset: 576)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !425, file: !177, line: 1423, baseType: !483, size: 64, offset: 384)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !485)
!485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !177, line: 1935, size: 1472, elements: !486)
!486 = !{!487, !491, !495, !496, !500, !507, !511, !512, !513, !517, !521, !522, !523, !524, !530, !535, !536, !592, !593, !594, !595, !2361, !2376}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !485, file: !177, line: 1936, baseType: !488, size: 64)
!488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !489, size: 64)
!489 = !DISubroutineType(types: !490)
!490 = !{!254, !424}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !485, file: !177, line: 1937, baseType: !492, size: 64, offset: 64)
!492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !493, size: 64)
!493 = !DISubroutineType(types: !494)
!494 = !{null, !254}
!495 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !485, file: !177, line: 1938, baseType: !492, size: 64, offset: 128)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !485, file: !177, line: 1940, baseType: !497, size: 64, offset: 192)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = !DISubroutineType(types: !499)
!499 = !{null, !254, !18}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !485, file: !177, line: 1941, baseType: !501, size: 64, offset: 256)
!501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !502, size: 64)
!502 = !DISubroutineType(types: !503)
!503 = !{!18, !254, !504}
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !506, line: 40, flags: DIFlagFwdDecl)
!506 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!507 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !485, file: !177, line: 1942, baseType: !508, size: 64, offset: 320)
!508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !509, size: 64)
!509 = !DISubroutineType(types: !510)
!510 = !{!18, !254}
!511 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !485, file: !177, line: 1943, baseType: !492, size: 64, offset: 384)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !485, file: !177, line: 1944, baseType: !454, size: 64, offset: 448)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !485, file: !177, line: 1945, baseType: !514, size: 64, offset: 512)
!514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !515, size: 64)
!515 = !DISubroutineType(types: !516)
!516 = !{!18, !424, !18}
!517 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !485, file: !177, line: 1946, baseType: !518, size: 64, offset: 576)
!518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !519, size: 64)
!519 = !DISubroutineType(types: !520)
!520 = !{!18, !424}
!521 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !485, file: !177, line: 1947, baseType: !518, size: 64, offset: 640)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !485, file: !177, line: 1948, baseType: !518, size: 64, offset: 704)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !485, file: !177, line: 1949, baseType: !518, size: 64, offset: 768)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !485, file: !177, line: 1950, baseType: !525, size: 64, offset: 832)
!525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !526, size: 64)
!526 = !DISubroutineType(types: !527)
!527 = !{!18, !206, !528}
!528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !529, size: 64)
!529 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !177, line: 57, flags: DIFlagFwdDecl)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !485, file: !177, line: 1951, baseType: !531, size: 64, offset: 896)
!531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !532, size: 64)
!532 = !DISubroutineType(types: !533)
!533 = !{!18, !424, !534, !96}
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18, size: 64)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !485, file: !177, line: 1952, baseType: !454, size: 64, offset: 960)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !485, file: !177, line: 1954, baseType: !537, size: 64, offset: 1024)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DISubroutineType(types: !539)
!539 = !{!18, !540, !206}
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !542, line: 16, size: 896, elements: !543)
!542 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!543 = !{!544, !545, !546, !547, !548, !549, !550, !551, !565, !587, !588, !591}
!544 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !541, file: !542, line: 17, baseType: !96, size: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !541, file: !542, line: 18, baseType: !143, size: 64, offset: 64)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !541, file: !542, line: 19, baseType: !143, size: 64, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !541, file: !542, line: 20, baseType: !143, size: 64, offset: 192)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !541, file: !542, line: 21, baseType: !143, size: 64, offset: 256)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !541, file: !542, line: 22, baseType: !356, size: 64, offset: 320)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !541, file: !542, line: 23, baseType: !356, size: 64, offset: 384)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !541, file: !542, line: 24, baseType: !552, size: 192, offset: 448)
!552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !553, line: 53, size: 192, elements: !554)
!553 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!554 = !{!555, !563, !564}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !552, file: !553, line: 54, baseType: !556, size: 64)
!556 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !557, line: 13, baseType: !558)
!557 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!558 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !12, line: 175, baseType: !559)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !12, line: 173, size: 64, elements: !560)
!560 = !{!561}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !559, file: !12, line: 174, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !241, line: 22, baseType: !365)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !552, file: !553, line: 55, baseType: !55, offset: 64)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !552, file: !553, line: 59, baseType: !11, size: 128, offset: 64)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !541, file: !542, line: 25, baseType: !566, size: 64, offset: 640)
!566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !567, size: 64)
!567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !568)
!568 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !542, line: 31, size: 256, elements: !569)
!569 = !{!570, !575, !579, !583}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !568, file: !542, line: 32, baseType: !571, size: 64)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DISubroutineType(types: !573)
!573 = !{!170, !540, !574}
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !356, size: 64)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !568, file: !542, line: 33, baseType: !576, size: 64, offset: 64)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DISubroutineType(types: !578)
!578 = !{null, !540, !170}
!579 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !568, file: !542, line: 34, baseType: !580, size: 64, offset: 128)
!580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !581, size: 64)
!581 = !DISubroutineType(types: !582)
!582 = !{!170, !540, !170, !574}
!583 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !568, file: !542, line: 35, baseType: !584, size: 64, offset: 192)
!584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !585, size: 64)
!585 = !DISubroutineType(types: !586)
!586 = !{!18, !540, !170}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !541, file: !542, line: 26, baseType: !18, size: 32, offset: 704)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !541, file: !542, line: 27, baseType: !589, size: 64, offset: 768)
!589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !590, size: 64)
!590 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !176)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !541, file: !542, line: 28, baseType: !170, size: 64, offset: 832)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !485, file: !177, line: 1955, baseType: !537, size: 64, offset: 1088)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !485, file: !177, line: 1956, baseType: !537, size: 64, offset: 1152)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !485, file: !177, line: 1957, baseType: !537, size: 64, offset: 1216)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !485, file: !177, line: 1963, baseType: !596, size: 64, offset: 1280)
!596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!597 = !DISubroutineType(types: !598)
!598 = !{!18, !424, !599, !622}
!599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !600, size: 64)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !601, line: 68, size: 512, align: 128, elements: !602)
!601 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!602 = !{!603, !604, !2353, !2360}
!603 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !600, file: !601, line: 69, baseType: !146, size: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, scope: !600, file: !601, line: 77, baseType: !605, size: 320, offset: 64)
!605 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !600, file: !601, line: 77, size: 320, elements: !606)
!606 = !{!607, !791, !796, !824, !832, !838, !2277, !2352}
!607 = !DIDerivedType(tag: DW_TAG_member, scope: !605, file: !601, line: 78, baseType: !608, size: 320)
!608 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !601, line: 78, size: 320, elements: !609)
!609 = !{!610, !611, !789, !790}
!610 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !608, file: !601, line: 84, baseType: !11, size: 128)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !608, file: !601, line: 86, baseType: !612, size: 64, offset: 128)
!612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !177, line: 451, size: 1216, align: 64, elements: !614)
!614 = !{!615, !616, !624, !625, !626, !641, !650, !651, !652, !653, !782, !783, !786, !787, !788}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !613, file: !177, line: 452, baseType: !254, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !613, file: !177, line: 453, baseType: !617, size: 128, offset: 64)
!617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !618, line: 292, size: 128, elements: !619)
!618 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!619 = !{!620, !621, !623}
!620 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !617, file: !618, line: 293, baseType: !55)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !617, file: !618, line: 295, baseType: !622, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !12, line: 148, baseType: !210)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !617, file: !618, line: 296, baseType: !170, size: 64, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !613, file: !177, line: 454, baseType: !622, size: 32, offset: 192)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !613, file: !177, line: 455, baseType: !29, size: 32, offset: 224)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !613, file: !177, line: 460, baseType: !627, size: 128, offset: 256)
!627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !628, line: 125, size: 128, elements: !629)
!628 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!629 = !{!630, !640}
!630 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !627, file: !628, line: 126, baseType: !631, size: 64)
!631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !628, line: 31, size: 64, elements: !632)
!632 = !{!633}
!633 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !631, file: !628, line: 32, baseType: !634, size: 64)
!634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !635, size: 64)
!635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !628, line: 24, size: 192, align: 64, elements: !636)
!636 = !{!637, !638, !639}
!637 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !635, file: !628, line: 25, baseType: !146, size: 64)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !635, file: !628, line: 26, baseType: !634, size: 64, offset: 64)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !635, file: !628, line: 27, baseType: !634, size: 64, offset: 128)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !627, file: !628, line: 127, baseType: !634, size: 64, offset: 64)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !613, file: !177, line: 461, baseType: !642, size: 256, offset: 384)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !643, line: 35, size: 256, elements: !644)
!643 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!644 = !{!645, !646, !647, !649}
!645 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !642, file: !643, line: 36, baseType: !556, size: 64)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !642, file: !643, line: 42, baseType: !556, size: 64, offset: 64)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !642, file: !643, line: 46, baseType: !648, offset: 128)
!648 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !56, line: 29, baseType: !63)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !642, file: !643, line: 47, baseType: !11, size: 128, offset: 128)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !613, file: !177, line: 462, baseType: !146, size: 64, offset: 640)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !613, file: !177, line: 463, baseType: !146, size: 64, offset: 704)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !613, file: !177, line: 464, baseType: !146, size: 64, offset: 768)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !613, file: !177, line: 465, baseType: !654, size: 64, offset: 832)
!654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !655, size: 64)
!655 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !656)
!656 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !177, line: 367, size: 1408, elements: !657)
!657 = !{!658, !662, !666, !670, !674, !678, !684, !690, !694, !699, !703, !707, !711, !739, !750, !756, !757, !758, !762, !767, !771, !778}
!658 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !656, file: !177, line: 368, baseType: !659, size: 64)
!659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !660, size: 64)
!660 = !DISubroutineType(types: !661)
!661 = !{!18, !599, !504}
!662 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !656, file: !177, line: 369, baseType: !663, size: 64, offset: 64)
!663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!664 = !DISubroutineType(types: !665)
!665 = !{!18, !175, !599}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !656, file: !177, line: 372, baseType: !667, size: 64, offset: 128)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !668, size: 64)
!668 = !DISubroutineType(types: !669)
!669 = !{!18, !612, !504}
!670 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !656, file: !177, line: 375, baseType: !671, size: 64, offset: 192)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DISubroutineType(types: !673)
!673 = !{!18, !599}
!674 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !656, file: !177, line: 381, baseType: !675, size: 64, offset: 256)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DISubroutineType(types: !677)
!677 = !{!18, !175, !612, !15, !210}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !656, file: !177, line: 383, baseType: !679, size: 64, offset: 320)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{null, !682}
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !177, line: 290, flags: DIFlagFwdDecl)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !656, file: !177, line: 385, baseType: !685, size: 64, offset: 384)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = !DISubroutineType(types: !687)
!687 = !{!18, !175, !612, !356, !210, !210, !688, !689}
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !599, size: 64)
!689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !656, file: !177, line: 388, baseType: !691, size: 64, offset: 448)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{!18, !175, !612, !356, !210, !210, !599, !170}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !656, file: !177, line: 393, baseType: !695, size: 64, offset: 512)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DISubroutineType(types: !697)
!697 = !{!698, !612, !698}
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !12, line: 125, baseType: !246)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !656, file: !177, line: 394, baseType: !700, size: 64, offset: 576)
!700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !701, size: 64)
!701 = !DISubroutineType(types: !702)
!702 = !{null, !599, !210, !210}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !656, file: !177, line: 395, baseType: !704, size: 64, offset: 640)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DISubroutineType(types: !706)
!706 = !{!18, !599, !622}
!707 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !656, file: !177, line: 396, baseType: !708, size: 64, offset: 704)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !709, size: 64)
!709 = !DISubroutineType(types: !710)
!710 = !{null, !599}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !656, file: !177, line: 397, baseType: !712, size: 64, offset: 768)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DISubroutineType(types: !714)
!714 = !{!127, !715, !737}
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !177, line: 320, size: 384, elements: !717)
!717 = !{!718, !719, !720, !724, !725, !726, !729, !730}
!718 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !716, file: !177, line: 321, baseType: !175, size: 64)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !716, file: !177, line: 326, baseType: !356, size: 64, offset: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !716, file: !177, line: 327, baseType: !721, size: 64, offset: 128)
!721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !722, size: 64)
!722 = !DISubroutineType(types: !723)
!723 = !{null, !715, !131, !131}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !716, file: !177, line: 328, baseType: !170, size: 64, offset: 192)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !716, file: !177, line: 329, baseType: !18, size: 32, offset: 256)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !716, file: !177, line: 330, baseType: !727, size: 16, offset: 288)
!727 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !241, line: 19, baseType: !728)
!728 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !243, line: 24, baseType: !138)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !716, file: !177, line: 331, baseType: !727, size: 16, offset: 304)
!730 = !DIDerivedType(tag: DW_TAG_member, scope: !716, file: !177, line: 332, baseType: !731, size: 64, offset: 320)
!731 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !716, file: !177, line: 332, size: 64, elements: !732)
!732 = !{!733, !734}
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !731, file: !177, line: 333, baseType: !210, size: 32)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !731, file: !177, line: 334, baseType: !735, size: 64)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !177, line: 334, flags: DIFlagFwdDecl)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !177, line: 64, flags: DIFlagFwdDecl)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !656, file: !177, line: 402, baseType: !740, size: 64, offset: 832)
!740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !741, size: 64)
!741 = !DISubroutineType(types: !742)
!742 = !{!18, !612, !599, !599, !743}
!743 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !744, line: 15, baseType: !210, size: 32, elements: !745)
!744 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!745 = !{!746, !747, !748, !749}
!746 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!747 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!748 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!749 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !656, file: !177, line: 404, baseType: !751, size: 64, offset: 896)
!751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !752, size: 64)
!752 = !DISubroutineType(types: !753)
!753 = !{!315, !599, !754}
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !755, line: 305, baseType: !210)
!755 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!756 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !656, file: !177, line: 405, baseType: !708, size: 64, offset: 960)
!757 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !656, file: !177, line: 406, baseType: !671, size: 64, offset: 1024)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !656, file: !177, line: 407, baseType: !759, size: 64, offset: 1088)
!759 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !760, size: 64)
!760 = !DISubroutineType(types: !761)
!761 = !{!18, !599, !146, !146}
!762 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !656, file: !177, line: 409, baseType: !763, size: 64, offset: 1152)
!763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !764, size: 64)
!764 = !DISubroutineType(types: !765)
!765 = !{null, !599, !766, !766}
!766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !656, file: !177, line: 410, baseType: !768, size: 64, offset: 1216)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DISubroutineType(types: !770)
!770 = !{!18, !612, !599}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !656, file: !177, line: 413, baseType: !772, size: 64, offset: 1280)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DISubroutineType(types: !774)
!774 = !{!18, !775, !175, !777}
!775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !776, size: 64)
!776 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !177, line: 61, flags: DIFlagFwdDecl)
!777 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !656, file: !177, line: 415, baseType: !779, size: 64, offset: 1344)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DISubroutineType(types: !781)
!781 = !{null, !175}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !613, file: !177, line: 466, baseType: !146, size: 64, offset: 896)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !613, file: !177, line: 467, baseType: !784, size: 32, offset: 960)
!784 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !785, line: 8, baseType: !240)
!785 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!786 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !613, file: !177, line: 468, baseType: !55, offset: 992)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !613, file: !177, line: 469, baseType: !11, size: 128, offset: 1024)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !613, file: !177, line: 470, baseType: !170, size: 64, offset: 1152)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !608, file: !601, line: 87, baseType: !146, size: 64, offset: 192)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !608, file: !601, line: 94, baseType: !146, size: 64, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_member, scope: !605, file: !601, line: 96, baseType: !792, size: 64)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !601, line: 96, size: 64, elements: !793)
!793 = !{!794}
!794 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !792, file: !601, line: 101, baseType: !795, size: 64)
!795 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !12, line: 143, baseType: !246)
!796 = !DIDerivedType(tag: DW_TAG_member, scope: !605, file: !601, line: 103, baseType: !797, size: 320)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !601, line: 103, size: 320, elements: !798)
!798 = !{!799, !809, !812, !813}
!799 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !601, line: 104, baseType: !800, size: 128)
!800 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !797, file: !601, line: 104, size: 128, elements: !801)
!801 = !{!802, !803}
!802 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !800, file: !601, line: 105, baseType: !11, size: 128)
!803 = !DIDerivedType(tag: DW_TAG_member, scope: !800, file: !601, line: 106, baseType: !804, size: 128)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !800, file: !601, line: 106, size: 128, elements: !805)
!805 = !{!806, !807, !808}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !804, file: !601, line: 107, baseType: !599, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !804, file: !601, line: 109, baseType: !18, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !804, file: !601, line: 110, baseType: !18, size: 32, offset: 96)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !797, file: !601, line: 117, baseType: !810, size: 64, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !601, line: 117, flags: DIFlagFwdDecl)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !797, file: !601, line: 119, baseType: !170, size: 64, offset: 192)
!813 = !DIDerivedType(tag: DW_TAG_member, scope: !797, file: !601, line: 120, baseType: !814, size: 64, offset: 256)
!814 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !797, file: !601, line: 120, size: 64, elements: !815)
!815 = !{!816, !817, !818}
!816 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !814, file: !601, line: 121, baseType: !170, size: 64)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !814, file: !601, line: 122, baseType: !146, size: 64)
!818 = !DIDerivedType(tag: DW_TAG_member, scope: !814, file: !601, line: 123, baseType: !819, size: 32)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !814, file: !601, line: 123, size: 32, elements: !820)
!820 = !{!821, !822, !823}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !819, file: !601, line: 124, baseType: !210, size: 16, flags: DIFlagBitField, extraData: i64 0)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !819, file: !601, line: 125, baseType: !210, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !819, file: !601, line: 126, baseType: !210, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!824 = !DIDerivedType(tag: DW_TAG_member, scope: !605, file: !601, line: 130, baseType: !825, size: 192)
!825 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !601, line: 130, size: 192, elements: !826)
!826 = !{!827, !828, !829, !830, !831}
!827 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !825, file: !601, line: 131, baseType: !146, size: 64)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !825, file: !601, line: 134, baseType: !252, size: 8, offset: 64)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !825, file: !601, line: 135, baseType: !252, size: 8, offset: 72)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !825, file: !601, line: 136, baseType: !29, size: 32, offset: 96)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !825, file: !601, line: 137, baseType: !210, size: 32, offset: 128)
!832 = !DIDerivedType(tag: DW_TAG_member, scope: !605, file: !601, line: 139, baseType: !833, size: 256)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !601, line: 139, size: 256, elements: !834)
!834 = !{!835, !836, !837}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !833, file: !601, line: 140, baseType: !146, size: 64)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !833, file: !601, line: 141, baseType: !29, size: 32, offset: 64)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !833, file: !601, line: 143, baseType: !11, size: 128, offset: 128)
!838 = !DIDerivedType(tag: DW_TAG_member, scope: !605, file: !601, line: 145, baseType: !839, size: 256)
!839 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !601, line: 145, size: 256, elements: !840)
!840 = !{!841, !842, !845, !846, !2276}
!841 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !839, file: !601, line: 146, baseType: !146, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !839, file: !601, line: 147, baseType: !843, size: 64, offset: 64)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !844, line: 509, baseType: !599)
!844 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!845 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !839, file: !601, line: 148, baseType: !146, size: 64, offset: 128)
!846 = !DIDerivedType(tag: DW_TAG_member, scope: !839, file: !601, line: 149, baseType: !847, size: 64, offset: 192)
!847 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !839, file: !601, line: 149, size: 64, elements: !848)
!848 = !{!849, !2275}
!849 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !847, file: !601, line: 150, baseType: !850, size: 64)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !601, line: 388, size: 7296, elements: !852)
!852 = !{!853, !2271}
!853 = !DIDerivedType(tag: DW_TAG_member, scope: !851, file: !601, line: 389, baseType: !854, size: 7296)
!854 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !851, file: !601, line: 389, size: 7296, elements: !855)
!855 = !{!856, !979, !980, !981, !985, !986, !987, !988, !989, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1030, !1038, !1041, !1081, !1082, !2255, !2256, !2259, !2260, !2261, !2264, !2265, !2266, !2269, !2270}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !854, file: !601, line: 390, baseType: !857, size: 64)
!857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !858, size: 64)
!858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !601, line: 305, size: 1472, elements: !859)
!859 = !{!860, !861, !862, !863, !864, !865, !866, !867, !874, !875, !880, !881, !884, !973, !974, !975, !976, !977}
!860 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !858, file: !601, line: 308, baseType: !146, size: 64)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !858, file: !601, line: 309, baseType: !146, size: 64, offset: 64)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !858, file: !601, line: 313, baseType: !857, size: 64, offset: 128)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !858, file: !601, line: 313, baseType: !857, size: 64, offset: 192)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !858, file: !601, line: 315, baseType: !635, size: 192, align: 64, offset: 256)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !858, file: !601, line: 323, baseType: !146, size: 64, offset: 448)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !858, file: !601, line: 327, baseType: !850, size: 64, offset: 512)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !858, file: !601, line: 333, baseType: !868, size: 64, offset: 576)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !844, line: 284, baseType: !869)
!869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !844, line: 284, size: 64, elements: !870)
!870 = !{!871}
!871 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !869, file: !844, line: 284, baseType: !872, size: 64)
!872 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !873, line: 19, baseType: !146)
!873 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!874 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !858, file: !601, line: 334, baseType: !146, size: 64, offset: 640)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !858, file: !601, line: 343, baseType: !876, size: 256, offset: 704)
!876 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !858, file: !601, line: 340, size: 256, elements: !877)
!877 = !{!878, !879}
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !876, file: !601, line: 341, baseType: !635, size: 192, align: 64)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !876, file: !601, line: 342, baseType: !146, size: 64, offset: 192)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !858, file: !601, line: 351, baseType: !11, size: 128, offset: 960)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !858, file: !601, line: 353, baseType: !882, size: 64, offset: 1088)
!882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !883, size: 64)
!883 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !601, line: 353, flags: DIFlagFwdDecl)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !858, file: !601, line: 356, baseType: !885, size: 64, offset: 1152)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !887)
!887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !506, line: 557, size: 832, elements: !888)
!888 = !{!889, !893, !894, !898, !902, !942, !951, !955, !959, !960, !961, !965, !969}
!889 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !887, file: !506, line: 558, baseType: !890, size: 64)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{null, !857}
!893 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !887, file: !506, line: 559, baseType: !890, size: 64, offset: 64)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !887, file: !506, line: 560, baseType: !895, size: 64, offset: 128)
!895 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !896, size: 64)
!896 = !DISubroutineType(types: !897)
!897 = !{!18, !857, !146}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !887, file: !506, line: 561, baseType: !899, size: 64, offset: 192)
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DISubroutineType(types: !901)
!901 = !{!18, !857}
!902 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !887, file: !506, line: 562, baseType: !903, size: 64, offset: 256)
!903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!904 = !DISubroutineType(types: !905)
!905 = !{!906, !907}
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !601, line: 682, baseType: !210)
!907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !908, size: 64)
!908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !506, line: 508, size: 768, elements: !909)
!909 = !{!910, !911, !912, !913, !914, !915, !922, !929, !935, !936, !937, !939, !941}
!910 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !908, file: !506, line: 509, baseType: !857, size: 64)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !908, file: !506, line: 510, baseType: !210, size: 32, offset: 64)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !908, file: !506, line: 511, baseType: !622, size: 32, offset: 96)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !908, file: !506, line: 512, baseType: !146, size: 64, offset: 128)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !908, file: !506, line: 513, baseType: !146, size: 64, offset: 192)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !908, file: !506, line: 514, baseType: !916, size: 64, offset: 256)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !844, line: 385, baseType: !918)
!918 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !844, line: 385, size: 64, elements: !919)
!919 = !{!920}
!920 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !918, file: !844, line: 385, baseType: !921, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !873, line: 15, baseType: !146)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !908, file: !506, line: 516, baseType: !923, size: 64, offset: 320)
!923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !924, size: 64)
!924 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !844, line: 359, baseType: !925)
!925 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !844, line: 359, size: 64, elements: !926)
!926 = !{!927}
!927 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !925, file: !844, line: 359, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !873, line: 16, baseType: !146)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !908, file: !506, line: 519, baseType: !930, size: 64, offset: 384)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !873, line: 21, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !873, line: 21, size: 64, elements: !932)
!932 = !{!933}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !931, file: !873, line: 21, baseType: !934, size: 64)
!934 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !873, line: 14, baseType: !146)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !908, file: !506, line: 521, baseType: !599, size: 64, offset: 448)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !908, file: !506, line: 522, baseType: !599, size: 64, offset: 512)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !908, file: !506, line: 528, baseType: !938, size: 64, offset: 576)
!938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !930, size: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !908, file: !506, line: 532, baseType: !940, size: 64, offset: 640)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 64)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !908, file: !506, line: 536, baseType: !843, size: 64, offset: 704)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !887, file: !506, line: 563, baseType: !943, size: 64, offset: 320)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!906, !907, !946}
!946 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !506, line: 546, baseType: !210, size: 32, elements: !947)
!947 = !{!948, !949, !950}
!948 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!949 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!950 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !887, file: !506, line: 565, baseType: !952, size: 64, offset: 384)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DISubroutineType(types: !954)
!954 = !{null, !907, !146, !146}
!955 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !887, file: !506, line: 567, baseType: !956, size: 64, offset: 448)
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = !DISubroutineType(types: !958)
!958 = !{!146, !857}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !887, file: !506, line: 571, baseType: !903, size: 64, offset: 512)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !887, file: !506, line: 574, baseType: !903, size: 64, offset: 576)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !887, file: !506, line: 579, baseType: !962, size: 64, offset: 640)
!962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !963, size: 64)
!963 = !DISubroutineType(types: !964)
!964 = !{!18, !857, !146, !170, !18, !18}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !887, file: !506, line: 585, baseType: !966, size: 64, offset: 704)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!43, !857}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !887, file: !506, line: 615, baseType: !970, size: 64, offset: 768)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{!599, !857, !146}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !858, file: !601, line: 359, baseType: !146, size: 64, offset: 1216)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !858, file: !601, line: 361, baseType: !175, size: 64, offset: 1280)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !858, file: !601, line: 362, baseType: !170, size: 64, offset: 1344)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !858, file: !601, line: 365, baseType: !556, size: 64, offset: 1408)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !858, file: !601, line: 373, baseType: !978, offset: 1472)
!978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !601, line: 296, elements: !69)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !854, file: !601, line: 391, baseType: !631, size: 64, offset: 64)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !854, file: !601, line: 392, baseType: !246, size: 64, offset: 128)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !854, file: !601, line: 394, baseType: !982, size: 64, offset: 192)
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DISubroutineType(types: !984)
!984 = !{!146, !175, !146, !146, !146, !146}
!985 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !854, file: !601, line: 398, baseType: !146, size: 64, offset: 256)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !854, file: !601, line: 399, baseType: !146, size: 64, offset: 320)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !854, file: !601, line: 405, baseType: !146, size: 64, offset: 384)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !854, file: !601, line: 406, baseType: !146, size: 64, offset: 448)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !854, file: !601, line: 407, baseType: !990, size: 64, offset: 512)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !844, line: 286, baseType: !992)
!992 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !844, line: 286, size: 64, elements: !993)
!993 = !{!994}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !992, file: !844, line: 286, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !873, line: 18, baseType: !146)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !854, file: !601, line: 416, baseType: !29, size: 32, offset: 576)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !854, file: !601, line: 428, baseType: !29, size: 32, offset: 608)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !854, file: !601, line: 437, baseType: !29, size: 32, offset: 640)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !854, file: !601, line: 447, baseType: !29, size: 32, offset: 672)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !854, file: !601, line: 450, baseType: !556, size: 64, offset: 704)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !854, file: !601, line: 452, baseType: !18, size: 32, offset: 768)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !854, file: !601, line: 454, baseType: !55, offset: 800)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !854, file: !601, line: 457, baseType: !642, size: 256, offset: 832)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !854, file: !601, line: 459, baseType: !11, size: 128, offset: 1088)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !854, file: !601, line: 466, baseType: !146, size: 64, offset: 1216)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !854, file: !601, line: 467, baseType: !146, size: 64, offset: 1280)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !854, file: !601, line: 469, baseType: !146, size: 64, offset: 1344)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !854, file: !601, line: 470, baseType: !146, size: 64, offset: 1408)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !854, file: !601, line: 471, baseType: !558, size: 64, offset: 1472)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !854, file: !601, line: 472, baseType: !146, size: 64, offset: 1536)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !854, file: !601, line: 473, baseType: !146, size: 64, offset: 1600)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !854, file: !601, line: 474, baseType: !146, size: 64, offset: 1664)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !854, file: !601, line: 475, baseType: !146, size: 64, offset: 1728)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !854, file: !601, line: 477, baseType: !55, offset: 1792)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !854, file: !601, line: 478, baseType: !146, size: 64, offset: 1792)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !854, file: !601, line: 478, baseType: !146, size: 64, offset: 1856)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !854, file: !601, line: 478, baseType: !146, size: 64, offset: 1920)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !854, file: !601, line: 478, baseType: !146, size: 64, offset: 1984)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !854, file: !601, line: 479, baseType: !146, size: 64, offset: 2048)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !854, file: !601, line: 479, baseType: !146, size: 64, offset: 2112)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !854, file: !601, line: 479, baseType: !146, size: 64, offset: 2176)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !854, file: !601, line: 480, baseType: !146, size: 64, offset: 2240)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !854, file: !601, line: 480, baseType: !146, size: 64, offset: 2304)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !854, file: !601, line: 480, baseType: !146, size: 64, offset: 2368)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !854, file: !601, line: 480, baseType: !146, size: 64, offset: 2432)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !854, file: !601, line: 482, baseType: !1027, size: 2816, offset: 2496)
!1027 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 2816, elements: !1028)
!1028 = !{!1029}
!1029 = !DISubrange(count: 44)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !854, file: !601, line: 488, baseType: !1031, size: 256, offset: 5312)
!1031 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1032, line: 60, size: 256, elements: !1033)
!1032 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1033 = !{!1034}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1031, file: !1032, line: 61, baseType: !1035, size: 256)
!1035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !556, size: 256, elements: !1036)
!1036 = !{!1037}
!1037 = !DISubrange(count: 4)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !854, file: !601, line: 490, baseType: !1039, size: 64, offset: 5568)
!1039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1040, size: 64)
!1040 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !601, line: 490, flags: DIFlagFwdDecl)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !854, file: !601, line: 493, baseType: !1042, size: 896, offset: 5632)
!1042 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1043, line: 53, baseType: !1044)
!1043 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1044 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1043, line: 13, size: 896, elements: !1045)
!1045 = !{!1046, !1047, !1048, !1049, !1052, !1053, !1054, !1055, !1075, !1076, !1077}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1044, file: !1043, line: 18, baseType: !246, size: 64)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1044, file: !1043, line: 28, baseType: !558, size: 64, offset: 64)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1044, file: !1043, line: 31, baseType: !642, size: 256, offset: 128)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1044, file: !1043, line: 32, baseType: !1050, size: 64, offset: 384)
!1050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1051, size: 64)
!1051 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1043, line: 32, flags: DIFlagFwdDecl)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1044, file: !1043, line: 37, baseType: !138, size: 16, offset: 448)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1044, file: !1043, line: 40, baseType: !552, size: 192, offset: 512)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1044, file: !1043, line: 41, baseType: !170, size: 64, offset: 704)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1044, file: !1043, line: 42, baseType: !1056, size: 64, offset: 768)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1059, line: 13, size: 896, elements: !1060)
!1059 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1060 = !{!1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074}
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1058, file: !1059, line: 14, baseType: !170, size: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1058, file: !1059, line: 15, baseType: !146, size: 64, offset: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1058, file: !1059, line: 17, baseType: !146, size: 64, offset: 128)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1058, file: !1059, line: 17, baseType: !146, size: 64, offset: 192)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1058, file: !1059, line: 19, baseType: !131, size: 64, offset: 256)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1058, file: !1059, line: 21, baseType: !131, size: 64, offset: 320)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1058, file: !1059, line: 22, baseType: !131, size: 64, offset: 384)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1058, file: !1059, line: 23, baseType: !131, size: 64, offset: 448)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1058, file: !1059, line: 24, baseType: !131, size: 64, offset: 512)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1058, file: !1059, line: 25, baseType: !131, size: 64, offset: 576)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1058, file: !1059, line: 26, baseType: !131, size: 64, offset: 640)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1058, file: !1059, line: 27, baseType: !131, size: 64, offset: 704)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1058, file: !1059, line: 28, baseType: !131, size: 64, offset: 768)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1058, file: !1059, line: 29, baseType: !131, size: 64, offset: 832)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1044, file: !1043, line: 44, baseType: !29, size: 32, offset: 832)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1044, file: !1043, line: 50, baseType: !727, size: 16, offset: 864)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1044, file: !1043, line: 51, baseType: !1078, size: 16, offset: 880)
!1078 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !241, line: 18, baseType: !1079)
!1079 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !243, line: 23, baseType: !1080)
!1080 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !854, file: !601, line: 495, baseType: !146, size: 64, offset: 6528)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !854, file: !601, line: 497, baseType: !1083, size: 64, offset: 6592)
!1083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1084, size: 64)
!1084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !601, line: 381, size: 384, elements: !1085)
!1085 = !{!1086, !1087, !2254}
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1084, file: !601, line: 382, baseType: !29, size: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1084, file: !601, line: 383, baseType: !1088, size: 128, offset: 64)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !601, line: 376, size: 128, elements: !1089)
!1089 = !{!1090, !2252}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1088, file: !601, line: 377, baseType: !1091, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1092, size: 64)
!1092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1093, line: 640, size: 48640, elements: !1094)
!1093 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1094 = !{!1095, !1101, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1116, !1134, !1145, !1235, !1236, !1237, !1248, !1249, !1251, !1252, !1253, !1254, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1344, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1416, !1418, !1419, !1420, !1432, !1433, !1434, !1435, !1436, !1437, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1461, !1466, !1648, !1649, !1650, !1651, !1655, !1658, !1661, !1664, !1667, !1693, !1794, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1840, !1841, !1842, !1843, !1844, !1849, !1850, !1851, !1854, !1855, !1858, !1861, !1864, !1867, !1910, !1913, !1914, !1993, !1994, !1997, !1998, !2001, !2002, !2003, !2007, !2008, !2009, !2022, !2023, !2024, !2034, !2039, !2042, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1092, file: !1093, line: 646, baseType: !1096, size: 128)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1097, line: 56, size: 128, elements: !1098)
!1097 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1098 = !{!1099, !1100}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1096, file: !1097, line: 57, baseType: !146, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1096, file: !1097, line: 58, baseType: !240, size: 32, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1092, file: !1093, line: 649, baseType: !1102, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !131)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1092, file: !1093, line: 657, baseType: !170, size: 64, offset: 192)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1092, file: !1093, line: 658, baseType: !24, size: 32, offset: 256)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1092, file: !1093, line: 660, baseType: !210, size: 32, offset: 288)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1092, file: !1093, line: 661, baseType: !210, size: 32, offset: 320)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1092, file: !1093, line: 684, baseType: !18, size: 32, offset: 352)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1092, file: !1093, line: 686, baseType: !18, size: 32, offset: 384)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1092, file: !1093, line: 687, baseType: !18, size: 32, offset: 416)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1092, file: !1093, line: 688, baseType: !18, size: 32, offset: 448)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1092, file: !1093, line: 689, baseType: !210, size: 32, offset: 480)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1092, file: !1093, line: 691, baseType: !1113, size: 64, offset: 512)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1115)
!1115 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1093, line: 691, flags: DIFlagFwdDecl)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1092, file: !1093, line: 692, baseType: !1117, size: 832, offset: 576)
!1117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1093, line: 451, size: 832, elements: !1118)
!1118 = !{!1119, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1117, file: !1093, line: 453, baseType: !1120, size: 128)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1093, line: 325, size: 128, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1120, file: !1093, line: 326, baseType: !146, size: 64)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1120, file: !1093, line: 327, baseType: !240, size: 32, offset: 64)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1117, file: !1093, line: 454, baseType: !635, size: 192, align: 64, offset: 128)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1117, file: !1093, line: 455, baseType: !11, size: 128, offset: 320)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1117, file: !1093, line: 456, baseType: !210, size: 32, offset: 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1117, file: !1093, line: 458, baseType: !246, size: 64, offset: 512)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1117, file: !1093, line: 459, baseType: !246, size: 64, offset: 576)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1117, file: !1093, line: 460, baseType: !246, size: 64, offset: 640)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1117, file: !1093, line: 461, baseType: !246, size: 64, offset: 704)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1117, file: !1093, line: 463, baseType: !246, size: 64, offset: 768)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1117, file: !1093, line: 465, baseType: !1133, offset: 832)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1093, line: 415, elements: !69)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1092, file: !1093, line: 693, baseType: !1135, size: 384, offset: 1408)
!1135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1093, line: 489, size: 384, elements: !1136)
!1136 = !{!1137, !1138, !1139, !1140, !1141, !1142, !1143}
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1135, file: !1093, line: 490, baseType: !11, size: 128)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1135, file: !1093, line: 491, baseType: !146, size: 64, offset: 128)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1135, file: !1093, line: 492, baseType: !146, size: 64, offset: 192)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1135, file: !1093, line: 493, baseType: !210, size: 32, offset: 256)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1135, file: !1093, line: 494, baseType: !138, size: 16, offset: 288)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1135, file: !1093, line: 495, baseType: !138, size: 16, offset: 304)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1135, file: !1093, line: 497, baseType: !1144, size: 64, offset: 320)
!1144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1092, file: !1093, line: 697, baseType: !1146, size: 1792, offset: 1792)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1093, line: 507, size: 1792, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1232, !1233}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1146, file: !1093, line: 508, baseType: !635, size: 192, align: 64)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1146, file: !1093, line: 515, baseType: !246, size: 64, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1146, file: !1093, line: 516, baseType: !246, size: 64, offset: 256)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1146, file: !1093, line: 517, baseType: !246, size: 64, offset: 320)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1146, file: !1093, line: 518, baseType: !246, size: 64, offset: 384)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1146, file: !1093, line: 519, baseType: !246, size: 64, offset: 448)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1146, file: !1093, line: 526, baseType: !562, size: 64, offset: 512)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1146, file: !1093, line: 527, baseType: !246, size: 64, offset: 576)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1146, file: !1093, line: 528, baseType: !210, size: 32, offset: 640)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1146, file: !1093, line: 554, baseType: !210, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1146, file: !1093, line: 555, baseType: !210, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1146, file: !1093, line: 556, baseType: !210, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1146, file: !1093, line: 557, baseType: !210, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1146, file: !1093, line: 563, baseType: !1162, size: 512, offset: 704)
!1162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !1163, line: 118, size: 512, elements: !1164)
!1163 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!1164 = !{!1165, !1173, !1174, !1183, !1226, !1229, !1230, !1231}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1162, file: !1163, line: 119, baseType: !1166, size: 256)
!1166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1167, line: 9, size: 256, elements: !1168)
!1167 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1168 = !{!1169, !1170}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1166, file: !1167, line: 10, baseType: !635, size: 192, align: 64)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1166, file: !1167, line: 11, baseType: !1171, size: 64, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1172, line: 29, baseType: !562)
!1172 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1162, file: !1163, line: 120, baseType: !1171, size: 64, offset: 256)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1162, file: !1163, line: 121, baseType: !1175, size: 64, offset: 320)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!1178, !1182}
!1178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !1163, line: 65, baseType: !210, size: 32, elements: !1179)
!1179 = !{!1180, !1181}
!1180 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!1181 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!1182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1162, file: !1163, line: 122, baseType: !1184, size: 64, offset: 384)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !1163, line: 159, size: 512, align: 512, elements: !1186)
!1186 = !{!1187, !1207, !1208, !1211, !1216, !1217, !1221, !1225}
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1185, file: !1163, line: 160, baseType: !1188, size: 64)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !1163, line: 214, size: 4608, align: 512, elements: !1190)
!1190 = !{!1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1189, file: !1163, line: 215, baseType: !648)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1189, file: !1163, line: 216, baseType: !210, size: 32)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1189, file: !1163, line: 217, baseType: !210, size: 32, offset: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1189, file: !1163, line: 218, baseType: !210, size: 32, offset: 64)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1189, file: !1163, line: 219, baseType: !210, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1189, file: !1163, line: 220, baseType: !210, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1189, file: !1163, line: 221, baseType: !210, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1189, file: !1163, line: 222, baseType: !210, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1189, file: !1163, line: 233, baseType: !1171, size: 64, offset: 128)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1189, file: !1163, line: 234, baseType: !1182, size: 64, offset: 192)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1189, file: !1163, line: 235, baseType: !1171, size: 64, offset: 256)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1189, file: !1163, line: 236, baseType: !1182, size: 64, offset: 320)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1189, file: !1163, line: 237, baseType: !1204, size: 4096, offset: 512)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1185, size: 4096, elements: !1205)
!1205 = !{!1206}
!1206 = !DISubrange(count: 8)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1185, file: !1163, line: 161, baseType: !210, size: 32, offset: 64)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1185, file: !1163, line: 162, baseType: !1209, size: 32, offset: 96)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !12, line: 27, baseType: !1210)
!1210 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !129, line: 96, baseType: !18)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1185, file: !1163, line: 163, baseType: !1212, size: 32, offset: 128)
!1212 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !213, line: 276, baseType: !1213)
!1213 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !213, line: 276, size: 32, elements: !1214)
!1214 = !{!1215}
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1213, file: !213, line: 276, baseType: !217, size: 32)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1185, file: !1163, line: 164, baseType: !1182, size: 64, offset: 192)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1185, file: !1163, line: 165, baseType: !1218, size: 128, offset: 256)
!1218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1167, line: 14, size: 128, elements: !1219)
!1219 = !{!1220}
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1218, file: !1167, line: 15, baseType: !627, size: 128)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1185, file: !1163, line: 166, baseType: !1222, size: 64, offset: 384)
!1222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1223, size: 64)
!1223 = !DISubroutineType(types: !1224)
!1224 = !{!1171}
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1185, file: !1163, line: 167, baseType: !1171, size: 64, offset: 448)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1162, file: !1163, line: 123, baseType: !1227, size: 8, offset: 448)
!1227 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !241, line: 17, baseType: !1228)
!1228 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !243, line: 21, baseType: !252)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1162, file: !1163, line: 124, baseType: !1227, size: 8, offset: 456)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1162, file: !1163, line: 125, baseType: !1227, size: 8, offset: 464)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1162, file: !1163, line: 126, baseType: !1227, size: 8, offset: 472)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1146, file: !1093, line: 572, baseType: !1162, size: 512, offset: 1216)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1146, file: !1093, line: 580, baseType: !1234, size: 64, offset: 1728)
!1234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1146, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1092, file: !1093, line: 721, baseType: !210, size: 32, offset: 3584)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1092, file: !1093, line: 722, baseType: !18, size: 32, offset: 3616)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1092, file: !1093, line: 723, baseType: !1238, size: 64, offset: 3648)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1240)
!1240 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1241, line: 17, baseType: !1242)
!1241 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1241, line: 17, size: 64, elements: !1243)
!1243 = !{!1244}
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1242, file: !1241, line: 17, baseType: !1245, size: 64)
!1245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 64, elements: !1246)
!1246 = !{!1247}
!1247 = !DISubrange(count: 1)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1092, file: !1093, line: 724, baseType: !1240, size: 64, offset: 3712)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1092, file: !1093, line: 749, baseType: !1250, offset: 3776)
!1250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1093, line: 290, elements: !69)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1092, file: !1093, line: 751, baseType: !11, size: 128, offset: 3776)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1092, file: !1093, line: 757, baseType: !850, size: 64, offset: 3904)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1092, file: !1093, line: 758, baseType: !850, size: 64, offset: 3968)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1092, file: !1093, line: 761, baseType: !1255, size: 320, offset: 4032)
!1255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1032, line: 34, size: 320, elements: !1256)
!1256 = !{!1257, !1258}
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1255, file: !1032, line: 35, baseType: !246, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1255, file: !1032, line: 36, baseType: !1259, size: 256, offset: 64)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !857, size: 256, elements: !1036)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1092, file: !1093, line: 766, baseType: !18, size: 32, offset: 4352)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1092, file: !1093, line: 767, baseType: !18, size: 32, offset: 4384)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1092, file: !1093, line: 768, baseType: !18, size: 32, offset: 4416)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1092, file: !1093, line: 770, baseType: !18, size: 32, offset: 4448)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1092, file: !1093, line: 772, baseType: !146, size: 64, offset: 4480)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1092, file: !1093, line: 775, baseType: !210, size: 32, offset: 4544)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1092, file: !1093, line: 778, baseType: !210, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1092, file: !1093, line: 779, baseType: !210, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1092, file: !1093, line: 780, baseType: !210, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1092, file: !1093, line: 803, baseType: !210, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1092, file: !1093, line: 806, baseType: !210, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1092, file: !1093, line: 807, baseType: !210, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1092, file: !1093, line: 809, baseType: !210, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1092, file: !1093, line: 815, baseType: !210, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1092, file: !1093, line: 831, baseType: !146, size: 64, offset: 4672)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1092, file: !1093, line: 833, baseType: !1276, size: 384, offset: 4736)
!1276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !1277, line: 25, size: 384, elements: !1278)
!1277 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!1278 = !{!1279, !1284}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1276, file: !1277, line: 26, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1281, size: 64)
!1281 = !DISubroutineType(types: !1282)
!1282 = !{!131, !1283}
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1284 = !DIDerivedType(tag: DW_TAG_member, scope: !1276, file: !1277, line: 27, baseType: !1285, size: 320, offset: 64)
!1285 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1276, file: !1277, line: 27, size: 320, elements: !1286)
!1286 = !{!1287, !1297, !1329}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1285, file: !1277, line: 36, baseType: !1288, size: 320)
!1288 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1285, file: !1277, line: 29, size: 320, elements: !1289)
!1289 = !{!1290, !1292, !1293, !1294, !1295, !1296}
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1288, file: !1277, line: 30, baseType: !1291, size: 64)
!1291 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !240, size: 64)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1288, file: !1277, line: 31, baseType: !240, size: 32, offset: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1288, file: !1277, line: 32, baseType: !240, size: 32, offset: 96)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1288, file: !1277, line: 33, baseType: !240, size: 32, offset: 128)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1288, file: !1277, line: 34, baseType: !246, size: 64, offset: 192)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1288, file: !1277, line: 35, baseType: !1291, size: 64, offset: 256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1285, file: !1277, line: 46, baseType: !1298, size: 192)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1285, file: !1277, line: 38, size: 192, elements: !1299)
!1299 = !{!1300, !1301, !1307, !1328}
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1298, file: !1277, line: 39, baseType: !1209, size: 32)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1298, file: !1277, line: 40, baseType: !1302, size: 32, offset: 32)
!1302 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !1277, line: 16, baseType: !210, size: 32, elements: !1303)
!1303 = !{!1304, !1305, !1306}
!1304 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!1305 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!1306 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!1307 = !DIDerivedType(tag: DW_TAG_member, scope: !1298, file: !1277, line: 41, baseType: !1308, size: 64, offset: 64)
!1308 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1298, file: !1277, line: 41, size: 64, elements: !1309)
!1309 = !{!1310, !1318}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1308, file: !1277, line: 42, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1312, size: 64)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1313, line: 7, size: 128, elements: !1314)
!1313 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1314 = !{!1315, !1317}
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1312, file: !1313, line: 8, baseType: !1316, size: 64)
!1316 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !129, line: 93, baseType: !358)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1312, file: !1313, line: 9, baseType: !358, size: 64, offset: 64)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1308, file: !1277, line: 43, baseType: !1319, size: 64)
!1319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1320, size: 64)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1321, line: 7, size: 64, elements: !1322)
!1321 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1322 = !{!1323, !1327}
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1320, file: !1321, line: 8, baseType: !1324, size: 32)
!1324 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1321, line: 5, baseType: !1325)
!1325 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !241, line: 20, baseType: !1326)
!1326 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !243, line: 26, baseType: !18)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1320, file: !1321, line: 9, baseType: !1325, size: 32, offset: 32)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1298, file: !1277, line: 45, baseType: !246, size: 64, offset: 128)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1285, file: !1277, line: 54, baseType: !1330, size: 256)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1285, file: !1277, line: 48, size: 256, elements: !1331)
!1331 = !{!1332, !1340, !1341, !1342, !1343}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1330, file: !1277, line: 49, baseType: !1333, size: 64)
!1333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1334, size: 64)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !1335, line: 36, size: 64, elements: !1336)
!1335 = !DIFile(filename: "./include/uapi/asm-generic/poll.h", directory: "/home/lizy2001/genbc/linux")
!1336 = !{!1337, !1338, !1339}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "fd", scope: !1334, file: !1335, line: 37, baseType: !18, size: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "events", scope: !1334, file: !1335, line: 38, baseType: !1080, size: 16, offset: 32)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "revents", scope: !1334, file: !1335, line: 39, baseType: !1080, size: 16, offset: 48)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1330, file: !1277, line: 50, baseType: !18, size: 32, offset: 64)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1330, file: !1277, line: 51, baseType: !18, size: 32, offset: 96)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1330, file: !1277, line: 52, baseType: !146, size: 64, offset: 128)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1330, file: !1277, line: 53, baseType: !146, size: 64, offset: 192)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1092, file: !1093, line: 835, baseType: !1345, size: 32, offset: 5120)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !12, line: 22, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !129, line: 28, baseType: !18)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1092, file: !1093, line: 836, baseType: !1345, size: 32, offset: 5152)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1092, file: !1093, line: 840, baseType: !146, size: 64, offset: 5184)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1092, file: !1093, line: 849, baseType: !1091, size: 64, offset: 5248)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1092, file: !1093, line: 852, baseType: !1091, size: 64, offset: 5312)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1092, file: !1093, line: 857, baseType: !11, size: 128, offset: 5376)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1092, file: !1093, line: 858, baseType: !11, size: 128, offset: 5504)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1092, file: !1093, line: 859, baseType: !1091, size: 64, offset: 5632)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1092, file: !1093, line: 867, baseType: !11, size: 128, offset: 5696)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1092, file: !1093, line: 868, baseType: !11, size: 128, offset: 5824)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1092, file: !1093, line: 871, baseType: !1357, size: 64, offset: 5952)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !1359, line: 59, size: 768, elements: !1360)
!1359 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!1360 = !{!1361, !1362, !1363, !1364, !1366, !1367, !1374, !1375}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1358, file: !1359, line: 61, baseType: !24, size: 32)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1358, file: !1359, line: 62, baseType: !210, size: 32, offset: 32)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1358, file: !1359, line: 63, baseType: !55, offset: 64)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1358, file: !1359, line: 65, baseType: !1365, size: 256, offset: 64)
!1365 = !DICompositeType(tag: DW_TAG_array_type, baseType: !463, size: 256, elements: !1036)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1358, file: !1359, line: 66, baseType: !463, size: 64, offset: 320)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1358, file: !1359, line: 68, baseType: !1368, size: 128, offset: 384)
!1368 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1369, line: 40, baseType: !1370)
!1369 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1369, line: 36, size: 128, elements: !1371)
!1371 = !{!1372, !1373}
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1370, file: !1369, line: 37, baseType: !55)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1370, file: !1369, line: 38, baseType: !11, size: 128)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1358, file: !1359, line: 69, baseType: !189, size: 128, align: 64, offset: 512)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1358, file: !1359, line: 70, baseType: !1376, size: 128, offset: 640)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1377, size: 128, elements: !1246)
!1377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !1359, line: 54, size: 128, elements: !1378)
!1378 = !{!1379, !1380}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1377, file: !1359, line: 55, baseType: !18, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1377, file: !1359, line: 56, baseType: !1381, size: 64, offset: 64)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1383, line: 20, size: 1088, elements: !1384)
!1383 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1384 = !{!1385, !1386, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1402, !1405, !1406}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1382, file: !1383, line: 21, baseType: !20, size: 32)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1382, file: !1383, line: 22, baseType: !1387, size: 192, offset: 64)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1388, line: 19, size: 192, elements: !1389)
!1388 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1389 = !{!1390, !1391, !1392}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1387, file: !1388, line: 20, baseType: !617, size: 128)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1387, file: !1388, line: 21, baseType: !210, size: 32, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1387, file: !1388, line: 22, baseType: !210, size: 32, offset: 160)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1382, file: !1383, line: 23, baseType: !189, size: 128, align: 64, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1382, file: !1383, line: 24, baseType: !210, size: 32, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1382, file: !1383, line: 25, baseType: !1091, size: 64, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1382, file: !1383, line: 26, baseType: !810, size: 64, offset: 512)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1382, file: !1383, line: 27, baseType: !210, size: 32, offset: 576)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1382, file: !1383, line: 28, baseType: !1381, size: 64, offset: 640)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1382, file: !1383, line: 32, baseType: !1400, size: 64, offset: 704)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !261, line: 18, flags: DIFlagFwdDecl)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1382, file: !1383, line: 33, baseType: !1403, size: 64, offset: 768)
!1403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1404, size: 64)
!1404 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1383, line: 33, flags: DIFlagFwdDecl)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1382, file: !1383, line: 34, baseType: !18, size: 32, offset: 832)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1382, file: !1383, line: 35, baseType: !1407, size: 192, offset: 896)
!1407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1408, line: 7, size: 192, elements: !1409)
!1408 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1409 = !{!1410, !1411, !1415}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1407, file: !1408, line: 8, baseType: !556, size: 64)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1407, file: !1408, line: 9, baseType: !1412, size: 64, offset: 64)
!1412 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1413, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1414)
!1414 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1408, line: 5, flags: DIFlagFwdDecl)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1407, file: !1408, line: 10, baseType: !210, size: 32, offset: 128)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1092, file: !1093, line: 872, baseType: !1417, size: 512, offset: 6016)
!1417 = !DICompositeType(tag: DW_TAG_array_type, baseType: !467, size: 512, elements: !1036)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1092, file: !1093, line: 873, baseType: !11, size: 128, offset: 6528)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1092, file: !1093, line: 874, baseType: !11, size: 128, offset: 6656)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1092, file: !1093, line: 876, baseType: !1421, size: 64, offset: 6784)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1423, line: 26, size: 192, elements: !1424)
!1423 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1422, file: !1423, line: 27, baseType: !210, size: 32)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1422, file: !1423, line: 28, baseType: !1427, size: 128, offset: 64)
!1427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1428, line: 43, size: 128, elements: !1429)
!1428 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1427, file: !1428, line: 44, baseType: !648)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1427, file: !1428, line: 45, baseType: !11, size: 128)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1092, file: !1093, line: 879, baseType: !534, size: 64, offset: 6848)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1092, file: !1093, line: 882, baseType: !534, size: 64, offset: 6912)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1092, file: !1093, line: 884, baseType: !246, size: 64, offset: 6976)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1092, file: !1093, line: 885, baseType: !246, size: 64, offset: 7040)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1092, file: !1093, line: 890, baseType: !246, size: 64, offset: 7104)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1092, file: !1093, line: 891, baseType: !1438, size: 128, offset: 7168)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1093, line: 242, size: 128, elements: !1439)
!1439 = !{!1440, !1441, !1442}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1438, file: !1093, line: 244, baseType: !246, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1438, file: !1093, line: 245, baseType: !246, size: 64, offset: 64)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1438, file: !1093, line: 246, baseType: !648, offset: 128)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1092, file: !1093, line: 900, baseType: !146, size: 64, offset: 7296)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1092, file: !1093, line: 901, baseType: !146, size: 64, offset: 7360)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1092, file: !1093, line: 904, baseType: !246, size: 64, offset: 7424)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1092, file: !1093, line: 907, baseType: !246, size: 64, offset: 7488)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1092, file: !1093, line: 910, baseType: !146, size: 64, offset: 7552)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1092, file: !1093, line: 911, baseType: !146, size: 64, offset: 7616)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1092, file: !1093, line: 914, baseType: !1450, size: 640, offset: 7680)
!1450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1451, line: 123, size: 640, elements: !1452)
!1451 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1452 = !{!1453, !1459, !1460}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1450, file: !1451, line: 124, baseType: !1454, size: 576)
!1454 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1455, size: 576, elements: !97)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1451, line: 108, size: 192, elements: !1456)
!1456 = !{!1457, !1458}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1455, file: !1451, line: 109, baseType: !246, size: 64)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1455, file: !1451, line: 110, baseType: !1218, size: 128, offset: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1450, file: !1451, line: 125, baseType: !210, size: 32, offset: 576)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1450, file: !1451, line: 126, baseType: !210, size: 32, offset: 608)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1092, file: !1093, line: 917, baseType: !1462, size: 192, offset: 8320)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1451, line: 134, size: 192, elements: !1463)
!1463 = !{!1464, !1465}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1462, file: !1451, line: 135, baseType: !189, size: 128, align: 64)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1462, file: !1451, line: 136, baseType: !210, size: 32, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1092, file: !1093, line: 923, baseType: !1467, size: 64, offset: 8512)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1469)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1470, line: 111, size: 1280, elements: !1471)
!1470 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1491, !1492, !1493, !1494, !1495, !1496, !1603, !1604, !1605, !1606, !1632, !1633, !1643}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1469, file: !1470, line: 112, baseType: !29, size: 32)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1469, file: !1470, line: 120, baseType: !260, size: 32, offset: 32)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1469, file: !1470, line: 121, baseType: !268, size: 32, offset: 64)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1469, file: !1470, line: 122, baseType: !260, size: 32, offset: 96)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1469, file: !1470, line: 123, baseType: !268, size: 32, offset: 128)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1469, file: !1470, line: 124, baseType: !260, size: 32, offset: 160)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1469, file: !1470, line: 125, baseType: !268, size: 32, offset: 192)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1469, file: !1470, line: 126, baseType: !260, size: 32, offset: 224)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1469, file: !1470, line: 127, baseType: !268, size: 32, offset: 256)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1469, file: !1470, line: 128, baseType: !210, size: 32, offset: 288)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1469, file: !1470, line: 129, baseType: !1483, size: 64, offset: 320)
!1483 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1484, line: 26, baseType: !1485)
!1484 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1485 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1484, line: 24, size: 64, elements: !1486)
!1486 = !{!1487}
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1485, file: !1484, line: 25, baseType: !1488, size: 64)
!1488 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 64, elements: !1489)
!1489 = !{!1490}
!1490 = !DISubrange(count: 2)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1469, file: !1470, line: 130, baseType: !1483, size: 64, offset: 384)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1469, file: !1470, line: 131, baseType: !1483, size: 64, offset: 448)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1469, file: !1470, line: 132, baseType: !1483, size: 64, offset: 512)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1469, file: !1470, line: 133, baseType: !1483, size: 64, offset: 576)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1469, file: !1470, line: 135, baseType: !252, size: 8, offset: 640)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1469, file: !1470, line: 137, baseType: !1497, size: 64, offset: 704)
!1497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1498, size: 64)
!1498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1499, line: 189, size: 1664, elements: !1500)
!1499 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1500 = !{!1501, !1502, !1505, !1510, !1511, !1514, !1515, !1520, !1521, !1522, !1523, !1525, !1526, !1527, !1528, !1529, !1567, !1588}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1498, file: !1499, line: 190, baseType: !24, size: 32)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1498, file: !1499, line: 191, baseType: !1503, size: 32, offset: 32)
!1503 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1499, line: 28, baseType: !1504)
!1504 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !12, line: 98, baseType: !1325)
!1505 = !DIDerivedType(tag: DW_TAG_member, scope: !1498, file: !1499, line: 192, baseType: !1506, size: 192, offset: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1498, file: !1499, line: 192, size: 192, elements: !1507)
!1507 = !{!1508, !1509}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1506, file: !1499, line: 193, baseType: !11, size: 128)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1506, file: !1499, line: 194, baseType: !635, size: 192, align: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1498, file: !1499, line: 199, baseType: !642, size: 256, offset: 256)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1498, file: !1499, line: 200, baseType: !1512, size: 64, offset: 512)
!1512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1513, size: 64)
!1513 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1499, line: 200, flags: DIFlagFwdDecl)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1498, file: !1499, line: 201, baseType: !170, size: 64, offset: 576)
!1515 = !DIDerivedType(tag: DW_TAG_member, scope: !1498, file: !1499, line: 202, baseType: !1516, size: 64, offset: 640)
!1516 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1498, file: !1499, line: 202, size: 64, elements: !1517)
!1517 = !{!1518, !1519}
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1516, file: !1499, line: 203, baseType: !364, size: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1516, file: !1499, line: 204, baseType: !364, size: 64)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1498, file: !1499, line: 206, baseType: !364, size: 64, offset: 704)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1498, file: !1499, line: 207, baseType: !260, size: 32, offset: 768)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1498, file: !1499, line: 208, baseType: !268, size: 32, offset: 800)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1498, file: !1499, line: 209, baseType: !1524, size: 32, offset: 832)
!1524 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1499, line: 31, baseType: !384)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1498, file: !1499, line: 210, baseType: !138, size: 16, offset: 864)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1498, file: !1499, line: 211, baseType: !138, size: 16, offset: 880)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1498, file: !1499, line: 215, baseType: !1080, size: 16, offset: 896)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1498, file: !1499, line: 222, baseType: !146, size: 64, offset: 960)
!1529 = !DIDerivedType(tag: DW_TAG_member, scope: !1498, file: !1499, line: 239, baseType: !1530, size: 320, offset: 1024)
!1530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1498, file: !1499, line: 239, size: 320, elements: !1531)
!1531 = !{!1532, !1559}
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1530, file: !1499, line: 240, baseType: !1533, size: 320)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1499, line: 108, size: 320, elements: !1534)
!1534 = !{!1535, !1536, !1548, !1551, !1558}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1533, file: !1499, line: 110, baseType: !146, size: 64)
!1536 = !DIDerivedType(tag: DW_TAG_member, scope: !1533, file: !1499, line: 111, baseType: !1537, size: 64, offset: 64)
!1537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1533, file: !1499, line: 111, size: 64, elements: !1538)
!1538 = !{!1539, !1547}
!1539 = !DIDerivedType(tag: DW_TAG_member, scope: !1537, file: !1499, line: 112, baseType: !1540, size: 64)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1537, file: !1499, line: 112, size: 64, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1540, file: !1499, line: 114, baseType: !727, size: 16)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1540, file: !1499, line: 115, baseType: !1544, size: 48, offset: 16)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 48, elements: !1545)
!1545 = !{!1546}
!1546 = !DISubrange(count: 6)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1537, file: !1499, line: 121, baseType: !146, size: 64)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1533, file: !1499, line: 123, baseType: !1549, size: 64, offset: 128)
!1549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1550, size: 64)
!1550 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1499, line: 96, flags: DIFlagFwdDecl)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1533, file: !1499, line: 124, baseType: !1552, size: 64, offset: 192)
!1552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1553, size: 64)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1499, line: 102, size: 192, elements: !1554)
!1554 = !{!1555, !1556, !1557}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1553, file: !1499, line: 103, baseType: !189, size: 128, align: 64)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1553, file: !1499, line: 104, baseType: !24, size: 32, offset: 128)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1553, file: !1499, line: 105, baseType: !315, size: 8, offset: 160)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1533, file: !1499, line: 125, baseType: !43, size: 64, offset: 256)
!1559 = !DIDerivedType(tag: DW_TAG_member, scope: !1530, file: !1499, line: 241, baseType: !1560, size: 320)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1530, file: !1499, line: 241, size: 320, elements: !1561)
!1561 = !{!1562, !1563, !1564, !1565, !1566}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1560, file: !1499, line: 242, baseType: !146, size: 64)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1560, file: !1499, line: 243, baseType: !146, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1560, file: !1499, line: 244, baseType: !1549, size: 64, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1560, file: !1499, line: 245, baseType: !1552, size: 64, offset: 192)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1560, file: !1499, line: 246, baseType: !96, size: 64, offset: 256)
!1567 = !DIDerivedType(tag: DW_TAG_member, scope: !1498, file: !1499, line: 254, baseType: !1568, size: 256, offset: 1344)
!1568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1498, file: !1499, line: 254, size: 256, elements: !1569)
!1569 = !{!1570, !1576}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1568, file: !1499, line: 255, baseType: !1571, size: 256)
!1571 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1499, line: 128, size: 256, elements: !1572)
!1572 = !{!1573, !1574}
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1571, file: !1499, line: 129, baseType: !170, size: 64)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1571, file: !1499, line: 130, baseType: !1575, size: 256)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !170, size: 256, elements: !1036)
!1576 = !DIDerivedType(tag: DW_TAG_member, scope: !1568, file: !1499, line: 256, baseType: !1577, size: 256)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1568, file: !1499, line: 256, size: 256, elements: !1578)
!1578 = !{!1579, !1580}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1577, file: !1499, line: 258, baseType: !11, size: 128)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1577, file: !1499, line: 259, baseType: !1581, size: 128, offset: 128)
!1581 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1582, line: 22, size: 128, elements: !1583)
!1582 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1583 = !{!1584, !1587}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1581, file: !1582, line: 23, baseType: !1585, size: 64)
!1585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1586, size: 64)
!1586 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1582, line: 23, flags: DIFlagFwdDecl)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1581, file: !1582, line: 24, baseType: !146, size: 64, offset: 64)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1498, file: !1499, line: 274, baseType: !1589, size: 64, offset: 1600)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1499, line: 170, size: 192, elements: !1591)
!1591 = !{!1592, !1601, !1602}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1590, file: !1499, line: 171, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1499, line: 165, baseType: !1594)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DISubroutineType(types: !1596)
!1596 = !{!18, !1497, !1597, !1599, !1497}
!1597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1550)
!1599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1600, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1571)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1590, file: !1499, line: 172, baseType: !1497, size: 64, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1590, file: !1499, line: 173, baseType: !1549, size: 64, offset: 128)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1469, file: !1470, line: 138, baseType: !1497, size: 64, offset: 768)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1469, file: !1470, line: 139, baseType: !1497, size: 64, offset: 832)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1469, file: !1470, line: 140, baseType: !1497, size: 64, offset: 896)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1469, file: !1470, line: 145, baseType: !1607, size: 64, offset: 960)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1609, line: 13, size: 896, elements: !1610)
!1609 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1610 = !{!1611, !1612, !1613, !1614, !1615, !1616, !1617, !1618, !1619, !1620, !1621}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1608, file: !1609, line: 14, baseType: !24, size: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1608, file: !1609, line: 15, baseType: !29, size: 32, offset: 32)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1608, file: !1609, line: 16, baseType: !29, size: 32, offset: 64)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1608, file: !1609, line: 21, baseType: !556, size: 64, offset: 128)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1608, file: !1609, line: 27, baseType: !146, size: 64, offset: 192)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1608, file: !1609, line: 28, baseType: !146, size: 64, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1608, file: !1609, line: 29, baseType: !556, size: 64, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1608, file: !1609, line: 32, baseType: !467, size: 128, offset: 384)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1608, file: !1609, line: 33, baseType: !260, size: 32, offset: 512)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1608, file: !1609, line: 37, baseType: !556, size: 64, offset: 576)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1608, file: !1609, line: 44, baseType: !1622, size: 256, offset: 640)
!1622 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1623, line: 15, size: 256, elements: !1624)
!1623 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1624 = !{!1625, !1626, !1627, !1628, !1629, !1630, !1631}
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1622, file: !1623, line: 16, baseType: !648)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1622, file: !1623, line: 18, baseType: !18, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1622, file: !1623, line: 19, baseType: !18, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1622, file: !1623, line: 20, baseType: !18, size: 32, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1622, file: !1623, line: 21, baseType: !18, size: 32, offset: 96)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1622, file: !1623, line: 22, baseType: !146, size: 64, offset: 128)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1622, file: !1623, line: 23, baseType: !146, size: 64, offset: 192)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1469, file: !1470, line: 146, baseType: !1400, size: 64, offset: 1024)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1469, file: !1470, line: 147, baseType: !1634, size: 64, offset: 1088)
!1634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1635, size: 64)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1470, line: 25, size: 64, elements: !1636)
!1636 = !{!1637, !1638, !1639}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1635, file: !1470, line: 26, baseType: !29, size: 32)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1635, file: !1470, line: 27, baseType: !18, size: 32, offset: 32)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1635, file: !1470, line: 28, baseType: !1640, offset: 64)
!1640 = !DICompositeType(tag: DW_TAG_array_type, baseType: !268, elements: !1641)
!1641 = !{!1642}
!1642 = !DISubrange(count: 0)
!1643 = !DIDerivedType(tag: DW_TAG_member, scope: !1469, file: !1470, line: 149, baseType: !1644, size: 128, offset: 1152)
!1644 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1469, file: !1470, line: 149, size: 128, elements: !1645)
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1644, file: !1470, line: 150, baseType: !18, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1644, file: !1470, line: 151, baseType: !189, size: 128, align: 64)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1092, file: !1093, line: 926, baseType: !1467, size: 64, offset: 8576)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1092, file: !1093, line: 929, baseType: !1467, size: 64, offset: 8640)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1092, file: !1093, line: 933, baseType: !1497, size: 64, offset: 8704)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1092, file: !1093, line: 943, baseType: !1652, size: 128, offset: 8768)
!1652 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 128, elements: !1653)
!1653 = !{!1654}
!1654 = !DISubrange(count: 16)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1092, file: !1093, line: 945, baseType: !1656, size: 64, offset: 8896)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1093, line: 49, flags: DIFlagFwdDecl)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1092, file: !1093, line: 956, baseType: !1659, size: 64, offset: 8960)
!1659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1660, size: 64)
!1660 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1093, line: 45, flags: DIFlagFwdDecl)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1092, file: !1093, line: 959, baseType: !1662, size: 64, offset: 9024)
!1662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1663, size: 64)
!1663 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1093, line: 959, flags: DIFlagFwdDecl)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1092, file: !1093, line: 962, baseType: !1665, size: 64, offset: 9088)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1093, line: 66, flags: DIFlagFwdDecl)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1092, file: !1093, line: 966, baseType: !1668, size: 64, offset: 9152)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1670, line: 31, size: 576, elements: !1671)
!1670 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!1671 = !{!1672, !1673, !1676, !1679, !1682, !1683, !1686, !1689, !1690}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1669, file: !1670, line: 32, baseType: !29, size: 32)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !1669, file: !1670, line: 33, baseType: !1674, size: 64, offset: 64)
!1674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1675, size: 64)
!1675 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !1670, line: 9, flags: DIFlagFwdDecl)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !1669, file: !1670, line: 34, baseType: !1677, size: 64, offset: 128)
!1677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1678, size: 64)
!1678 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !1670, line: 10, flags: DIFlagFwdDecl)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !1669, file: !1670, line: 35, baseType: !1680, size: 64, offset: 192)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !1670, line: 8, flags: DIFlagFwdDecl)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !1669, file: !1670, line: 36, baseType: !1381, size: 64, offset: 256)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !1669, file: !1670, line: 37, baseType: !1684, size: 64, offset: 320)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1499, line: 34, flags: DIFlagFwdDecl)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !1669, file: !1670, line: 38, baseType: !1687, size: 64, offset: 384)
!1687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1688 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !1670, line: 38, flags: DIFlagFwdDecl)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !1669, file: !1670, line: 39, baseType: !1687, size: 64, offset: 448)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !1669, file: !1670, line: 40, baseType: !1691, size: 64, offset: 512)
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !1670, line: 12, flags: DIFlagFwdDecl)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1092, file: !1093, line: 969, baseType: !1694, size: 64, offset: 9216)
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1696, line: 82, size: 7296, elements: !1697)
!1696 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703, !1704, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1733, !1742, !1743, !1745, !1746, !1747, !1750, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1780, !1781, !1788, !1789, !1790, !1791, !1792, !1793}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1695, file: !1696, line: 83, baseType: !24, size: 32)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1695, file: !1696, line: 84, baseType: !29, size: 32, offset: 32)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1695, file: !1696, line: 85, baseType: !18, size: 32, offset: 64)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1695, file: !1696, line: 86, baseType: !11, size: 128, offset: 128)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1695, file: !1696, line: 88, baseType: !1368, size: 128, offset: 256)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1695, file: !1696, line: 91, baseType: !1091, size: 64, offset: 384)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1695, file: !1696, line: 94, baseType: !1705, size: 192, offset: 448)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1706, line: 30, size: 192, elements: !1707)
!1706 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1707 = !{!1708, !1709}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1705, file: !1706, line: 31, baseType: !11, size: 128)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1705, file: !1706, line: 32, baseType: !1710, size: 64, offset: 128)
!1710 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1711, line: 25, baseType: !1712)
!1711 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1712 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1711, line: 23, size: 64, elements: !1713)
!1713 = !{!1714}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1712, file: !1711, line: 24, baseType: !1245, size: 64)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1695, file: !1696, line: 97, baseType: !463, size: 64, offset: 640)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1695, file: !1696, line: 100, baseType: !18, size: 32, offset: 704)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1695, file: !1696, line: 106, baseType: !18, size: 32, offset: 736)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1695, file: !1696, line: 107, baseType: !1091, size: 64, offset: 768)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1695, file: !1696, line: 110, baseType: !18, size: 32, offset: 832)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1695, file: !1696, line: 111, baseType: !210, size: 32, offset: 864)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1695, file: !1696, line: 122, baseType: !210, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1695, file: !1696, line: 123, baseType: !210, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1695, file: !1696, line: 128, baseType: !18, size: 32, offset: 928)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1695, file: !1696, line: 129, baseType: !11, size: 128, offset: 960)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1695, file: !1696, line: 132, baseType: !1162, size: 512, offset: 1088)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1695, file: !1696, line: 133, baseType: !1171, size: 64, offset: 1600)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1695, file: !1696, line: 140, baseType: !1728, size: 256, offset: 1664)
!1728 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1729, size: 256, elements: !1489)
!1729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1696, line: 38, size: 128, elements: !1730)
!1730 = !{!1731, !1732}
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1729, file: !1696, line: 39, baseType: !246, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1729, file: !1696, line: 40, baseType: !246, size: 64, offset: 64)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1695, file: !1696, line: 146, baseType: !1734, size: 192, offset: 1920)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1696, line: 66, size: 192, elements: !1735)
!1735 = !{!1736}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1734, file: !1696, line: 67, baseType: !1737, size: 192)
!1737 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1696, line: 47, size: 192, elements: !1738)
!1738 = !{!1739, !1740, !1741}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1737, file: !1696, line: 48, baseType: !558, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1737, file: !1696, line: 49, baseType: !558, size: 64, offset: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1737, file: !1696, line: 50, baseType: !558, size: 64, offset: 128)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1695, file: !1696, line: 150, baseType: !1450, size: 640, offset: 2112)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1695, file: !1696, line: 153, baseType: !1744, size: 256, offset: 2752)
!1744 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1357, size: 256, elements: !1036)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1695, file: !1696, line: 159, baseType: !1357, size: 64, offset: 3008)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1695, file: !1696, line: 162, baseType: !18, size: 32, offset: 3072)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1695, file: !1696, line: 164, baseType: !1748, size: 64, offset: 3136)
!1748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1749, size: 64)
!1749 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1696, line: 164, flags: DIFlagFwdDecl)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1695, file: !1696, line: 175, baseType: !1751, size: 32, offset: 3200)
!1751 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !213, line: 805, baseType: !1752)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !213, line: 798, size: 32, elements: !1753)
!1753 = !{!1754, !1755}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1752, file: !213, line: 803, baseType: !212, size: 32)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1752, file: !213, line: 804, baseType: !55, offset: 32)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1695, file: !1696, line: 176, baseType: !246, size: 64, offset: 3264)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1695, file: !1696, line: 176, baseType: !246, size: 64, offset: 3328)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1695, file: !1696, line: 176, baseType: !246, size: 64, offset: 3392)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1695, file: !1696, line: 176, baseType: !246, size: 64, offset: 3456)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1695, file: !1696, line: 177, baseType: !246, size: 64, offset: 3520)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1695, file: !1696, line: 178, baseType: !246, size: 64, offset: 3584)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1695, file: !1696, line: 179, baseType: !1438, size: 128, offset: 3648)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1695, file: !1696, line: 180, baseType: !146, size: 64, offset: 3776)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1695, file: !1696, line: 180, baseType: !146, size: 64, offset: 3840)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1695, file: !1696, line: 180, baseType: !146, size: 64, offset: 3904)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1695, file: !1696, line: 180, baseType: !146, size: 64, offset: 3968)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1695, file: !1696, line: 181, baseType: !146, size: 64, offset: 4032)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1695, file: !1696, line: 181, baseType: !146, size: 64, offset: 4096)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1695, file: !1696, line: 181, baseType: !146, size: 64, offset: 4160)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1695, file: !1696, line: 181, baseType: !146, size: 64, offset: 4224)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1695, file: !1696, line: 182, baseType: !146, size: 64, offset: 4288)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1695, file: !1696, line: 182, baseType: !146, size: 64, offset: 4352)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1695, file: !1696, line: 182, baseType: !146, size: 64, offset: 4416)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1695, file: !1696, line: 182, baseType: !146, size: 64, offset: 4480)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1695, file: !1696, line: 183, baseType: !146, size: 64, offset: 4544)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1695, file: !1696, line: 183, baseType: !146, size: 64, offset: 4608)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1695, file: !1696, line: 184, baseType: !1778, offset: 4672)
!1778 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1779, line: 12, elements: !69)
!1779 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1695, file: !1696, line: 192, baseType: !248, size: 64, offset: 4672)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1695, file: !1696, line: 203, baseType: !1782, size: 2048, offset: 4736)
!1782 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1783, size: 2048, elements: !1653)
!1783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1784, line: 43, size: 128, elements: !1785)
!1784 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1785 = !{!1786, !1787}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1783, file: !1784, line: 44, baseType: !145, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1783, file: !1784, line: 45, baseType: !145, size: 64, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1695, file: !1696, line: 220, baseType: !315, size: 8, offset: 6784)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1695, file: !1696, line: 221, baseType: !1080, size: 16, offset: 6800)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1695, file: !1696, line: 222, baseType: !1080, size: 16, offset: 6816)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1695, file: !1696, line: 224, baseType: !850, size: 64, offset: 6848)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1695, file: !1696, line: 227, baseType: !552, size: 192, offset: 6912)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1695, file: !1696, line: 233, baseType: !552, size: 192, offset: 7104)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1092, file: !1093, line: 970, baseType: !1795, size: 64, offset: 9280)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1696, line: 20, size: 16576, elements: !1797)
!1797 = !{!1798, !1799, !1800, !1801}
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1796, file: !1696, line: 21, baseType: !55)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1796, file: !1696, line: 22, baseType: !24, size: 32)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1796, file: !1696, line: 23, baseType: !1368, size: 128, offset: 64)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1796, file: !1696, line: 24, baseType: !1802, size: 16384, offset: 192)
!1802 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1803, size: 16384, elements: !101)
!1803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1706, line: 49, size: 256, elements: !1804)
!1804 = !{!1805}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !1803, file: !1706, line: 50, baseType: !1806, size: 256)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1706, line: 35, size: 256, elements: !1807)
!1807 = !{!1808, !1815, !1816, !1822}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !1806, file: !1706, line: 37, baseType: !1809, size: 64)
!1809 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !1810, line: 19, baseType: !1811)
!1810 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!1811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1812, size: 64)
!1812 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !1810, line: 18, baseType: !1813)
!1813 = !DISubroutineType(types: !1814)
!1814 = !{null, !18}
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !1806, file: !1706, line: 38, baseType: !146, size: 64, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !1806, file: !1706, line: 44, baseType: !1817, size: 64, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !1810, line: 22, baseType: !1818)
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !1810, line: 21, baseType: !1820)
!1820 = !DISubroutineType(types: !1821)
!1821 = !{null}
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !1806, file: !1706, line: 46, baseType: !1710, size: 64, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1092, file: !1093, line: 971, baseType: !1710, size: 64, offset: 9344)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1092, file: !1093, line: 972, baseType: !1710, size: 64, offset: 9408)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1092, file: !1093, line: 974, baseType: !1710, size: 64, offset: 9472)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1092, file: !1093, line: 975, baseType: !1705, size: 192, offset: 9536)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1092, file: !1093, line: 976, baseType: !146, size: 64, offset: 9728)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1092, file: !1093, line: 977, baseType: !143, size: 64, offset: 9792)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1092, file: !1093, line: 978, baseType: !210, size: 32, offset: 9856)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1092, file: !1093, line: 980, baseType: !192, size: 64, offset: 9920)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1092, file: !1093, line: 989, baseType: !1832, size: 128, offset: 9984)
!1832 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !1833, line: 35, size: 128, elements: !1834)
!1833 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!1834 = !{!1835, !1836, !1837}
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1832, file: !1833, line: 36, baseType: !18, size: 32)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !1832, file: !1833, line: 37, baseType: !29, size: 32, offset: 32)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !1832, file: !1833, line: 38, baseType: !1838, size: 64, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !1833, line: 23, flags: DIFlagFwdDecl)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1092, file: !1093, line: 992, baseType: !246, size: 64, offset: 10112)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1092, file: !1093, line: 993, baseType: !246, size: 64, offset: 10176)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1092, file: !1093, line: 996, baseType: !55, offset: 10240)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1092, file: !1093, line: 999, baseType: !648, offset: 10240)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1092, file: !1093, line: 1001, baseType: !1845, size: 64, offset: 10240)
!1845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1093, line: 636, size: 64, elements: !1846)
!1846 = !{!1847}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1845, file: !1093, line: 637, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1092, file: !1093, line: 1005, baseType: !627, size: 128, offset: 10304)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1092, file: !1093, line: 1007, baseType: !1091, size: 64, offset: 10432)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1092, file: !1093, line: 1009, baseType: !1852, size: 64, offset: 10496)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1093, line: 1009, flags: DIFlagFwdDecl)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1092, file: !1093, line: 1043, baseType: !170, size: 64, offset: 10560)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1092, file: !1093, line: 1046, baseType: !1856, size: 64, offset: 10624)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1093, line: 41, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1092, file: !1093, line: 1050, baseType: !1859, size: 64, offset: 10688)
!1859 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1860, size: 64)
!1860 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1093, line: 42, flags: DIFlagFwdDecl)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1092, file: !1093, line: 1054, baseType: !1862, size: 64, offset: 10752)
!1862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1863, size: 64)
!1863 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1093, line: 55, flags: DIFlagFwdDecl)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1092, file: !1093, line: 1056, baseType: !1865, size: 64, offset: 10816)
!1865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1866, size: 64)
!1866 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1093, line: 40, flags: DIFlagFwdDecl)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1092, file: !1093, line: 1058, baseType: !1868, size: 64, offset: 10880)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !1870, line: 99, size: 704, elements: !1871)
!1870 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!1871 = !{!1872, !1873, !1874, !1875, !1876, !1877, !1878, !1897, !1898}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !1869, file: !1870, line: 100, baseType: !556, size: 64)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !1869, file: !1870, line: 101, baseType: !29, size: 32, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !1869, file: !1870, line: 102, baseType: !29, size: 32, offset: 96)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1869, file: !1870, line: 105, baseType: !55, offset: 128)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !1869, file: !1870, line: 107, baseType: !138, size: 16, offset: 128)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !1869, file: !1870, line: 109, baseType: !617, size: 128, offset: 192)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !1869, file: !1870, line: 110, baseType: !1879, size: 64, offset: 320)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !1870, line: 73, size: 448, elements: !1881)
!1881 = !{!1882, !1885, !1886, !1891, !1896}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !1880, file: !1870, line: 74, baseType: !1883, size: 64)
!1883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1884, size: 64)
!1884 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !1870, line: 74, flags: DIFlagFwdDecl)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !1880, file: !1870, line: 75, baseType: !1868, size: 64, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, scope: !1880, file: !1870, line: 83, baseType: !1887, size: 128, offset: 128)
!1887 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1880, file: !1870, line: 83, size: 128, elements: !1888)
!1888 = !{!1889, !1890}
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !1887, file: !1870, line: 84, baseType: !11, size: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !1887, file: !1870, line: 85, baseType: !810, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, scope: !1880, file: !1870, line: 87, baseType: !1892, size: 128, offset: 256)
!1892 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1880, file: !1870, line: 87, size: 128, elements: !1893)
!1893 = !{!1894, !1895}
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !1892, file: !1870, line: 88, baseType: !467, size: 128)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !1892, file: !1870, line: 89, baseType: !189, size: 128, align: 64)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1880, file: !1870, line: 92, baseType: !210, size: 32, offset: 384)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !1869, file: !1870, line: 111, baseType: !463, size: 64, offset: 384)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !1869, file: !1870, line: 113, baseType: !1899, size: 256, offset: 448)
!1899 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !1900, line: 102, size: 256, elements: !1901)
!1900 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!1901 = !{!1902, !1903, !1904}
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1899, file: !1900, line: 103, baseType: !556, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1899, file: !1900, line: 104, baseType: !11, size: 128, offset: 64)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1899, file: !1900, line: 105, baseType: !1905, size: 64, offset: 192)
!1905 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !1900, line: 21, baseType: !1906)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DISubroutineType(types: !1908)
!1908 = !{null, !1909}
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1899, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1092, file: !1093, line: 1061, baseType: !1911, size: 64, offset: 10944)
!1911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1912, size: 64)
!1912 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1093, line: 43, flags: DIFlagFwdDecl)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1092, file: !1093, line: 1064, baseType: !146, size: 64, offset: 11008)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1092, file: !1093, line: 1065, baseType: !1915, size: 64, offset: 11072)
!1915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1916, size: 64)
!1916 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1706, line: 14, baseType: !1917)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1706, line: 12, size: 384, elements: !1918)
!1918 = !{!1919}
!1919 = !DIDerivedType(tag: DW_TAG_member, scope: !1917, file: !1706, line: 13, baseType: !1920, size: 384)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1917, file: !1706, line: 13, size: 384, elements: !1921)
!1921 = !{!1922, !1923, !1924, !1925}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !1920, file: !1706, line: 13, baseType: !18, size: 32)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !1920, file: !1706, line: 13, baseType: !18, size: 32, offset: 32)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !1920, file: !1706, line: 13, baseType: !18, size: 32, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !1920, file: !1706, line: 13, baseType: !1926, size: 256, offset: 128)
!1926 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !1927, line: 32, size: 256, elements: !1928)
!1927 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!1928 = !{!1929, !1934, !1947, !1953, !1962, !1982, !1987}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !1926, file: !1927, line: 37, baseType: !1930, size: 64)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1927, line: 34, size: 64, elements: !1931)
!1931 = !{!1932, !1933}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1930, file: !1927, line: 35, baseType: !1346, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1930, file: !1927, line: 36, baseType: !266, size: 32, offset: 32)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !1926, file: !1927, line: 45, baseType: !1935, size: 192)
!1935 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1927, line: 40, size: 192, elements: !1936)
!1936 = !{!1937, !1939, !1940, !1946}
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !1935, file: !1927, line: 41, baseType: !1938, size: 32)
!1938 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !129, line: 95, baseType: !18)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !1935, file: !1927, line: 42, baseType: !18, size: 32, offset: 32)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1935, file: !1927, line: 43, baseType: !1941, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !1927, line: 11, baseType: !1942)
!1942 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !1927, line: 8, size: 64, elements: !1943)
!1943 = !{!1944, !1945}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !1942, file: !1927, line: 9, baseType: !18, size: 32)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !1942, file: !1927, line: 10, baseType: !170, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !1935, file: !1927, line: 44, baseType: !18, size: 32, offset: 128)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !1926, file: !1927, line: 52, baseType: !1948, size: 128)
!1948 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1927, line: 48, size: 128, elements: !1949)
!1949 = !{!1950, !1951, !1952}
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1948, file: !1927, line: 49, baseType: !1346, size: 32)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1948, file: !1927, line: 50, baseType: !266, size: 32, offset: 32)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !1948, file: !1927, line: 51, baseType: !1941, size: 64, offset: 64)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !1926, file: !1927, line: 61, baseType: !1954, size: 256)
!1954 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1927, line: 55, size: 256, elements: !1955)
!1955 = !{!1956, !1957, !1958, !1959, !1961}
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !1954, file: !1927, line: 56, baseType: !1346, size: 32)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !1954, file: !1927, line: 57, baseType: !266, size: 32, offset: 32)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !1954, file: !1927, line: 58, baseType: !18, size: 32, offset: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !1954, file: !1927, line: 59, baseType: !1960, size: 64, offset: 128)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !129, line: 94, baseType: !130)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !1954, file: !1927, line: 60, baseType: !1960, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !1926, file: !1927, line: 95, baseType: !1963, size: 256)
!1963 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1927, line: 64, size: 256, elements: !1964)
!1964 = !{!1965, !1966}
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !1963, file: !1927, line: 65, baseType: !170, size: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, scope: !1963, file: !1927, line: 77, baseType: !1967, size: 192, offset: 64)
!1967 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1963, file: !1927, line: 77, size: 192, elements: !1968)
!1968 = !{!1969, !1970, !1977}
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !1967, file: !1927, line: 82, baseType: !1080, size: 16)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !1967, file: !1927, line: 88, baseType: !1971, size: 192)
!1971 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1967, file: !1927, line: 84, size: 192, elements: !1972)
!1972 = !{!1973, !1975, !1976}
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !1971, file: !1927, line: 85, baseType: !1974, size: 64)
!1974 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 64, elements: !1205)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !1971, file: !1927, line: 86, baseType: !170, size: 64, offset: 64)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !1971, file: !1927, line: 87, baseType: !170, size: 64, offset: 128)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !1967, file: !1927, line: 93, baseType: !1978, size: 96)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1967, file: !1927, line: 90, size: 96, elements: !1979)
!1979 = !{!1980, !1981}
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !1978, file: !1927, line: 91, baseType: !1974, size: 64)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !1978, file: !1927, line: 92, baseType: !242, size: 32, offset: 64)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !1926, file: !1927, line: 101, baseType: !1983, size: 128)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1927, line: 98, size: 128, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !1983, file: !1927, line: 99, baseType: !131, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !1983, file: !1927, line: 100, baseType: !18, size: 32, offset: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !1926, file: !1927, line: 108, baseType: !1988, size: 128)
!1988 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1926, file: !1927, line: 104, size: 128, elements: !1989)
!1989 = !{!1990, !1991, !1992}
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !1988, file: !1927, line: 105, baseType: !170, size: 64)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !1988, file: !1927, line: 106, baseType: !18, size: 32, offset: 64)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !1988, file: !1927, line: 107, baseType: !210, size: 32, offset: 96)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1092, file: !1093, line: 1067, baseType: !1778, offset: 11136)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1092, file: !1093, line: 1099, baseType: !1995, size: 64, offset: 11136)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1093, line: 56, flags: DIFlagFwdDecl)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1092, file: !1093, line: 1103, baseType: !11, size: 128, offset: 11200)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1092, file: !1093, line: 1104, baseType: !1999, size: 64, offset: 11328)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1093, line: 46, flags: DIFlagFwdDecl)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1092, file: !1093, line: 1105, baseType: !552, size: 192, offset: 11392)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1092, file: !1093, line: 1106, baseType: !210, size: 32, offset: 11584)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1092, file: !1093, line: 1109, baseType: !2004, size: 128, offset: 11648)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2005, size: 128, elements: !1489)
!2005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2006, size: 64)
!2006 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1093, line: 51, flags: DIFlagFwdDecl)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1092, file: !1093, line: 1110, baseType: !552, size: 192, offset: 11776)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1092, file: !1093, line: 1111, baseType: !11, size: 128, offset: 11968)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1092, file: !1093, line: 1173, baseType: !2010, size: 64, offset: 12096)
!2010 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2011, size: 64)
!2011 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2012, line: 62, size: 256, align: 256, elements: !2013)
!2012 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2013 = !{!2014, !2015, !2016, !2021}
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2011, file: !2012, line: 75, baseType: !242, size: 32)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2011, file: !2012, line: 90, baseType: !242, size: 32, offset: 32)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2011, file: !2012, line: 124, baseType: !2017, size: 64, offset: 64)
!2017 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2011, file: !2012, line: 109, size: 64, elements: !2018)
!2018 = !{!2019, !2020}
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2017, file: !2012, line: 110, baseType: !247, size: 64)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2017, file: !2012, line: 112, baseType: !247, size: 64)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2011, file: !2012, line: 144, baseType: !242, size: 32, offset: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1092, file: !1093, line: 1174, baseType: !240, size: 32, offset: 12160)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1092, file: !1093, line: 1179, baseType: !146, size: 64, offset: 12224)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1092, file: !1093, line: 1182, baseType: !2025, size: 128, offset: 12288)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1032, line: 76, size: 128, elements: !2026)
!2026 = !{!2027, !2032, !2033}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2025, file: !1032, line: 85, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2029, line: 7, size: 64, elements: !2030)
!2029 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2030 = !{!2031}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2028, file: !2029, line: 12, baseType: !1242, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2025, file: !1032, line: 88, baseType: !315, size: 8, offset: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2025, file: !1032, line: 95, baseType: !315, size: 8, offset: 72)
!2034 = !DIDerivedType(tag: DW_TAG_member, scope: !1092, file: !1093, line: 1184, baseType: !2035, size: 128, offset: 12416)
!2035 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1092, file: !1093, line: 1184, size: 128, elements: !2036)
!2036 = !{!2037, !2038}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2035, file: !1093, line: 1185, baseType: !24, size: 32)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2035, file: !1093, line: 1186, baseType: !189, size: 128, align: 64)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1092, file: !1093, line: 1190, baseType: !2040, size: 64, offset: 12544)
!2040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2041, size: 64)
!2041 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1093, line: 53, flags: DIFlagFwdDecl)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1092, file: !1093, line: 1192, baseType: !2043, size: 128, offset: 12608)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1032, line: 64, size: 128, elements: !2044)
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2043, file: !1032, line: 65, baseType: !599, size: 64)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2043, file: !1032, line: 67, baseType: !242, size: 32, offset: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2043, file: !1032, line: 68, baseType: !242, size: 32, offset: 96)
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1092, file: !1093, line: 1206, baseType: !18, size: 32, offset: 12736)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1092, file: !1093, line: 1207, baseType: !18, size: 32, offset: 12768)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1092, file: !1093, line: 1209, baseType: !146, size: 64, offset: 12800)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1092, file: !1093, line: 1219, baseType: !246, size: 64, offset: 12864)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1092, file: !1093, line: 1220, baseType: !246, size: 64, offset: 12928)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1092, file: !1093, line: 1317, baseType: !18, size: 32, offset: 12992)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1092, file: !1093, line: 1319, baseType: !1091, size: 64, offset: 13056)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1092, file: !1093, line: 1322, baseType: !2056, size: 64, offset: 13120)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2058, line: 56, size: 512, elements: !2059)
!2058 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2059 = !{!2060, !2061, !2062, !2063, !2064, !2065, !2066, !2068}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2057, file: !2058, line: 57, baseType: !2056, size: 64)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2057, file: !2058, line: 58, baseType: !170, size: 64, offset: 64)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2057, file: !2058, line: 59, baseType: !146, size: 64, offset: 128)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2057, file: !2058, line: 60, baseType: !146, size: 64, offset: 192)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2057, file: !2058, line: 61, baseType: !688, size: 64, offset: 256)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2057, file: !2058, line: 62, baseType: !210, size: 32, offset: 320)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2057, file: !2058, line: 63, baseType: !2067, size: 64, offset: 384)
!2067 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !12, line: 153, baseType: !246)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2057, file: !2058, line: 64, baseType: !2069, size: 64, offset: 448)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1092, file: !1093, line: 1326, baseType: !24, size: 32, offset: 13184)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1092, file: !1093, line: 1342, baseType: !170, size: 64, offset: 13248)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1092, file: !1093, line: 1343, baseType: !247, size: 64, offset: 13312)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1092, file: !1093, line: 1344, baseType: !246, size: 64, offset: 13376)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1092, file: !1093, line: 1345, baseType: !247, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1092, file: !1093, line: 1346, baseType: !247, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1092, file: !1093, line: 1347, baseType: !247, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1092, file: !1093, line: 1348, baseType: !189, size: 128, align: 64, offset: 13504)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1092, file: !1093, line: 1358, baseType: !2080, size: 34816, offset: 13824)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2081, line: 485, size: 34816, elements: !2082)
!2081 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2082 = !{!2083, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2112, !2113, !2114, !2115, !2116, !2117, !2120, !2121, !2122}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2080, file: !2081, line: 487, baseType: !2084, size: 192)
!2084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2085, size: 192, elements: !97)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2086, line: 16, size: 64, elements: !2087)
!2086 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2087 = !{!2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100}
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2085, file: !2086, line: 17, baseType: !727, size: 16)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2085, file: !2086, line: 18, baseType: !727, size: 16, offset: 16)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2085, file: !2086, line: 19, baseType: !727, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2085, file: !2086, line: 19, baseType: !727, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2085, file: !2086, line: 19, baseType: !727, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2085, file: !2086, line: 19, baseType: !727, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2085, file: !2086, line: 19, baseType: !727, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2085, file: !2086, line: 20, baseType: !727, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2085, file: !2086, line: 20, baseType: !727, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2085, file: !2086, line: 20, baseType: !727, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2085, file: !2086, line: 20, baseType: !727, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2085, file: !2086, line: 20, baseType: !727, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2085, file: !2086, line: 20, baseType: !727, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2080, file: !2081, line: 491, baseType: !146, size: 64, offset: 192)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2080, file: !2081, line: 495, baseType: !138, size: 16, offset: 256)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2080, file: !2081, line: 496, baseType: !138, size: 16, offset: 272)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2080, file: !2081, line: 497, baseType: !138, size: 16, offset: 288)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2080, file: !2081, line: 498, baseType: !138, size: 16, offset: 304)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2080, file: !2081, line: 502, baseType: !146, size: 64, offset: 320)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2080, file: !2081, line: 503, baseType: !146, size: 64, offset: 384)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2080, file: !2081, line: 514, baseType: !2109, size: 256, offset: 448)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 256, elements: !1036)
!2110 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2111, size: 64)
!2111 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2081, line: 483, flags: DIFlagFwdDecl)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2080, file: !2081, line: 516, baseType: !146, size: 64, offset: 704)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2080, file: !2081, line: 518, baseType: !146, size: 64, offset: 768)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2080, file: !2081, line: 520, baseType: !146, size: 64, offset: 832)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2080, file: !2081, line: 521, baseType: !146, size: 64, offset: 896)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2080, file: !2081, line: 522, baseType: !146, size: 64, offset: 960)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2080, file: !2081, line: 528, baseType: !2118, size: 64, offset: 1024)
!2118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2119, size: 64)
!2119 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2081, line: 10, flags: DIFlagFwdDecl)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2080, file: !2081, line: 535, baseType: !146, size: 64, offset: 1088)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2080, file: !2081, line: 537, baseType: !210, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2080, file: !2081, line: 540, baseType: !2123, size: 33280, offset: 1536)
!2123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2124, line: 317, size: 33280, elements: !2125)
!2124 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2125 = !{!2126, !2127, !2128}
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2123, file: !2124, line: 330, baseType: !210, size: 32)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2123, file: !2124, line: 337, baseType: !146, size: 64, offset: 64)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2123, file: !2124, line: 348, baseType: !2129, size: 32768, offset: 512)
!2129 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2124, line: 304, size: 32768, elements: !2130)
!2130 = !{!2131, !2146, !2185, !2235, !2248}
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2129, file: !2124, line: 305, baseType: !2132, size: 896)
!2132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2124, line: 12, size: 896, elements: !2133)
!2133 = !{!2134, !2135, !2136, !2137, !2138, !2139, !2140, !2141, !2145}
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2132, file: !2124, line: 13, baseType: !240, size: 32)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2132, file: !2124, line: 14, baseType: !240, size: 32, offset: 32)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2132, file: !2124, line: 15, baseType: !240, size: 32, offset: 64)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2132, file: !2124, line: 16, baseType: !240, size: 32, offset: 96)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2132, file: !2124, line: 17, baseType: !240, size: 32, offset: 128)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2132, file: !2124, line: 18, baseType: !240, size: 32, offset: 160)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2132, file: !2124, line: 19, baseType: !240, size: 32, offset: 192)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2132, file: !2124, line: 22, baseType: !2142, size: 640, offset: 224)
!2142 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 640, elements: !2143)
!2143 = !{!2144}
!2144 = !DISubrange(count: 20)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2132, file: !2124, line: 25, baseType: !240, size: 32, offset: 864)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2129, file: !2124, line: 306, baseType: !2147, size: 4096, align: 128)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2124, line: 34, size: 4096, align: 128, elements: !2148)
!2148 = !{!2149, !2150, !2151, !2152, !2153, !2168, !2169, !2170, !2174, !2176, !2180}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2147, file: !2124, line: 35, baseType: !727, size: 16)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2147, file: !2124, line: 36, baseType: !727, size: 16, offset: 16)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2147, file: !2124, line: 37, baseType: !727, size: 16, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2147, file: !2124, line: 38, baseType: !727, size: 16, offset: 48)
!2153 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !2124, line: 39, baseType: !2154, size: 128, offset: 64)
!2154 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !2124, line: 39, size: 128, elements: !2155)
!2155 = !{!2156, !2161}
!2156 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2124, line: 40, baseType: !2157, size: 128)
!2157 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2154, file: !2124, line: 40, size: 128, elements: !2158)
!2158 = !{!2159, !2160}
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2157, file: !2124, line: 41, baseType: !246, size: 64)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2157, file: !2124, line: 42, baseType: !246, size: 64, offset: 64)
!2161 = !DIDerivedType(tag: DW_TAG_member, scope: !2154, file: !2124, line: 44, baseType: !2162, size: 128)
!2162 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2154, file: !2124, line: 44, size: 128, elements: !2163)
!2163 = !{!2164, !2165, !2166, !2167}
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2162, file: !2124, line: 45, baseType: !240, size: 32)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2162, file: !2124, line: 46, baseType: !240, size: 32, offset: 32)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2162, file: !2124, line: 47, baseType: !240, size: 32, offset: 64)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2162, file: !2124, line: 48, baseType: !240, size: 32, offset: 96)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2147, file: !2124, line: 51, baseType: !240, size: 32, offset: 192)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2147, file: !2124, line: 52, baseType: !240, size: 32, offset: 224)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2147, file: !2124, line: 55, baseType: !2171, size: 1024, offset: 256)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 1024, elements: !2172)
!2172 = !{!2173}
!2173 = !DISubrange(count: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2147, file: !2124, line: 58, baseType: !2175, size: 2048, offset: 1280)
!2175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 2048, elements: !101)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2147, file: !2124, line: 60, baseType: !2177, size: 384, offset: 3328)
!2177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 384, elements: !2178)
!2178 = !{!2179}
!2179 = !DISubrange(count: 12)
!2180 = !DIDerivedType(tag: DW_TAG_member, scope: !2147, file: !2124, line: 62, baseType: !2181, size: 384, offset: 3712)
!2181 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2147, file: !2124, line: 62, size: 384, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2181, file: !2124, line: 63, baseType: !2177, size: 384)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2181, file: !2124, line: 64, baseType: !2177, size: 384)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2129, file: !2124, line: 307, baseType: !2186, size: 1088)
!2186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2124, line: 79, size: 1088, elements: !2187)
!2187 = !{!2188, !2189, !2190, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2234}
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2186, file: !2124, line: 80, baseType: !240, size: 32)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2186, file: !2124, line: 81, baseType: !240, size: 32, offset: 32)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2186, file: !2124, line: 82, baseType: !240, size: 32, offset: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2186, file: !2124, line: 83, baseType: !240, size: 32, offset: 96)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2186, file: !2124, line: 84, baseType: !240, size: 32, offset: 128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2186, file: !2124, line: 85, baseType: !240, size: 32, offset: 160)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2186, file: !2124, line: 86, baseType: !240, size: 32, offset: 192)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2186, file: !2124, line: 88, baseType: !2142, size: 640, offset: 224)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2186, file: !2124, line: 89, baseType: !1227, size: 8, offset: 864)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2186, file: !2124, line: 90, baseType: !1227, size: 8, offset: 872)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2186, file: !2124, line: 91, baseType: !1227, size: 8, offset: 880)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2186, file: !2124, line: 92, baseType: !1227, size: 8, offset: 888)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2186, file: !2124, line: 93, baseType: !1227, size: 8, offset: 896)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2186, file: !2124, line: 94, baseType: !1227, size: 8, offset: 904)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2186, file: !2124, line: 95, baseType: !2203, size: 64, offset: 960)
!2203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2204, size: 64)
!2204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2205, line: 11, size: 128, elements: !2206)
!2205 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2206 = !{!2207, !2208}
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2204, file: !2205, line: 12, baseType: !131, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2204, file: !2205, line: 13, baseType: !2209, size: 64, offset: 64)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2211, line: 56, size: 1344, elements: !2212)
!2211 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2212 = !{!2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2210, file: !2211, line: 61, baseType: !146, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2210, file: !2211, line: 62, baseType: !146, size: 64, offset: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2210, file: !2211, line: 63, baseType: !146, size: 64, offset: 128)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2210, file: !2211, line: 64, baseType: !146, size: 64, offset: 192)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2210, file: !2211, line: 65, baseType: !146, size: 64, offset: 256)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2210, file: !2211, line: 66, baseType: !146, size: 64, offset: 320)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2210, file: !2211, line: 68, baseType: !146, size: 64, offset: 384)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2210, file: !2211, line: 69, baseType: !146, size: 64, offset: 448)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2210, file: !2211, line: 70, baseType: !146, size: 64, offset: 512)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2210, file: !2211, line: 71, baseType: !146, size: 64, offset: 576)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2210, file: !2211, line: 72, baseType: !146, size: 64, offset: 640)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2210, file: !2211, line: 73, baseType: !146, size: 64, offset: 704)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2210, file: !2211, line: 74, baseType: !146, size: 64, offset: 768)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2210, file: !2211, line: 75, baseType: !146, size: 64, offset: 832)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2210, file: !2211, line: 76, baseType: !146, size: 64, offset: 896)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2210, file: !2211, line: 81, baseType: !146, size: 64, offset: 960)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2210, file: !2211, line: 83, baseType: !146, size: 64, offset: 1024)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2210, file: !2211, line: 84, baseType: !146, size: 64, offset: 1088)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2210, file: !2211, line: 85, baseType: !146, size: 64, offset: 1152)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2210, file: !2211, line: 86, baseType: !146, size: 64, offset: 1216)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2210, file: !2211, line: 87, baseType: !146, size: 64, offset: 1280)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2186, file: !2124, line: 96, baseType: !240, size: 32, offset: 1024)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2129, file: !2124, line: 308, baseType: !2236, size: 4608, align: 512)
!2236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2124, line: 289, size: 4608, align: 512, elements: !2237)
!2237 = !{!2238, !2239, !2246}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2236, file: !2124, line: 290, baseType: !2147, size: 4096, align: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2236, file: !2124, line: 291, baseType: !2240, size: 512, offset: 4096)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2124, line: 268, size: 512, elements: !2241)
!2241 = !{!2242, !2243, !2244}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2240, file: !2124, line: 269, baseType: !246, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2240, file: !2124, line: 270, baseType: !246, size: 64, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2240, file: !2124, line: 271, baseType: !2245, size: 384, offset: 128)
!2245 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 384, elements: !1545)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2236, file: !2124, line: 292, baseType: !2247, offset: 4608)
!2247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, elements: !1641)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2129, file: !2124, line: 309, baseType: !2249, size: 32768)
!2249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 32768, elements: !2250)
!2250 = !{!2251}
!2251 = !DISubrange(count: 4096)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1088, file: !601, line: 378, baseType: !2253, size: 64, offset: 64)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1084, file: !601, line: 384, baseType: !1422, size: 192, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !854, file: !601, line: 500, baseType: !55, offset: 6656)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !854, file: !601, line: 501, baseType: !2257, size: 64, offset: 6656)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !601, line: 387, flags: DIFlagFwdDecl)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !854, file: !601, line: 516, baseType: !1400, size: 64, offset: 6720)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !854, file: !601, line: 519, baseType: !175, size: 64, offset: 6784)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !854, file: !601, line: 521, baseType: !2262, size: 64, offset: 6848)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !601, line: 521, flags: DIFlagFwdDecl)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !854, file: !601, line: 545, baseType: !29, size: 32, offset: 6912)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !854, file: !601, line: 548, baseType: !315, size: 8, offset: 6944)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !854, file: !601, line: 550, baseType: !2267, offset: 6952)
!2267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2268, line: 142, elements: !69)
!2268 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !854, file: !601, line: 554, baseType: !1899, size: 256, offset: 6976)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !854, file: !601, line: 557, baseType: !240, size: 32, offset: 7232)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !851, file: !601, line: 565, baseType: !2272, offset: 7296)
!2272 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, elements: !2273)
!2273 = !{!2274}
!2274 = !DISubrange(count: -1)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !847, file: !601, line: 151, baseType: !29, size: 32)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !839, file: !601, line: 156, baseType: !55, offset: 256)
!2277 = !DIDerivedType(tag: DW_TAG_member, scope: !605, file: !601, line: 159, baseType: !2278, size: 128)
!2278 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !605, file: !601, line: 159, size: 128, elements: !2279)
!2279 = !{!2280, !2351}
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2278, file: !601, line: 161, baseType: !2281, size: 64)
!2281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2282, size: 64)
!2282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !2283, line: 110, size: 1152, elements: !2284)
!2283 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!2284 = !{!2285, !2295, !2316, !2317, !2318, !2325, !2326, !2338, !2339, !2340}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2282, file: !2283, line: 111, baseType: !2286, size: 384)
!2286 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !2283, line: 19, size: 384, elements: !2287)
!2287 = !{!2288, !2290, !2291, !2292, !2293, !2294}
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2286, file: !2283, line: 20, baseType: !2289, size: 64)
!2289 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !146)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2286, file: !2283, line: 21, baseType: !2289, size: 64, offset: 64)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2286, file: !2283, line: 22, baseType: !2289, size: 64, offset: 128)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2286, file: !2283, line: 23, baseType: !146, size: 64, offset: 192)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2286, file: !2283, line: 24, baseType: !146, size: 64, offset: 256)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2286, file: !2283, line: 25, baseType: !146, size: 64, offset: 320)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2282, file: !2283, line: 112, baseType: !2296, size: 64, offset: 384)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2298, line: 105, size: 128, elements: !2299)
!2298 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2299 = !{!2300, !2301}
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2297, file: !2298, line: 110, baseType: !146, size: 64)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2297, file: !2298, line: 118, baseType: !2302, size: 64, offset: 64)
!2302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2303, size: 64)
!2303 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2298, line: 95, size: 448, elements: !2304)
!2304 = !{!2305, !2306, !2311, !2312, !2313, !2314, !2315}
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2303, file: !2298, line: 96, baseType: !556, size: 64)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2303, file: !2298, line: 97, baseType: !2307, size: 64, offset: 64)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2298, line: 60, baseType: !2309)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{null, !2296}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2303, file: !2298, line: 98, baseType: !2307, size: 64, offset: 128)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2303, file: !2298, line: 99, baseType: !315, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2303, file: !2298, line: 100, baseType: !315, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2303, file: !2298, line: 101, baseType: !189, size: 128, align: 64, offset: 256)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2303, file: !2298, line: 102, baseType: !2296, size: 64, offset: 384)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2282, file: !2283, line: 113, baseType: !2297, size: 128, offset: 448)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2282, file: !2283, line: 114, baseType: !1422, size: 192, offset: 576)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2282, file: !2283, line: 115, baseType: !2319, size: 32, offset: 768)
!2319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !2283, line: 59, baseType: !210, size: 32, elements: !2320)
!2320 = !{!2321, !2322, !2323, !2324}
!2321 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!2322 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!2323 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!2324 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2282, file: !2283, line: 116, baseType: !210, size: 32, offset: 800)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2282, file: !2283, line: 117, baseType: !2327, size: 64, offset: 832)
!2327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!2328 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2329)
!2329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !2283, line: 67, size: 256, elements: !2330)
!2330 = !{!2331, !2332, !2336, !2337}
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2329, file: !2283, line: 73, baseType: !708, size: 64)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2329, file: !2283, line: 78, baseType: !2333, size: 64, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2334, size: 64)
!2334 = !DISubroutineType(types: !2335)
!2335 = !{null, !2281}
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2329, file: !2283, line: 83, baseType: !2333, size: 64, offset: 128)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2329, file: !2283, line: 89, baseType: !903, size: 64, offset: 192)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2282, file: !2283, line: 118, baseType: !170, size: 64, offset: 896)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2282, file: !2283, line: 119, baseType: !18, size: 32, offset: 960)
!2340 = !DIDerivedType(tag: DW_TAG_member, scope: !2282, file: !2283, line: 120, baseType: !2341, size: 128, offset: 1024)
!2341 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2282, file: !2283, line: 120, size: 128, elements: !2342)
!2342 = !{!2343, !2349}
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2341, file: !2283, line: 121, baseType: !2344, size: 128)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2345, line: 6, size: 128, elements: !2346)
!2345 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2346 = !{!2347, !2348}
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2344, file: !2345, line: 7, baseType: !246, size: 64)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2344, file: !2345, line: 8, baseType: !246, size: 64, offset: 64)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2341, file: !2283, line: 122, baseType: !2350)
!2350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2344, elements: !1641)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2278, file: !601, line: 162, baseType: !170, size: 64, offset: 64)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !605, file: !601, line: 176, baseType: !189, size: 128, align: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, scope: !600, file: !601, line: 179, baseType: !2354, size: 32, offset: 384)
!2354 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !600, file: !601, line: 179, size: 32, elements: !2355)
!2355 = !{!2356, !2357, !2358, !2359}
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2354, file: !601, line: 184, baseType: !29, size: 32)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2354, file: !601, line: 192, baseType: !210, size: 32)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2354, file: !601, line: 194, baseType: !210, size: 32)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2354, file: !601, line: 195, baseType: !18, size: 32)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !600, file: !601, line: 199, baseType: !29, size: 32, offset: 416)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !485, file: !177, line: 1964, baseType: !2362, size: 64, offset: 1344)
!2362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!2363 = !DISubroutineType(types: !2364)
!2364 = !{!131, !424, !2365}
!2365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2366, size: 64)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2367, line: 12, size: 256, elements: !2368)
!2367 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2368 = !{!2369, !2370, !2371, !2372, !2373}
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2366, file: !2367, line: 13, baseType: !622, size: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2366, file: !2367, line: 16, baseType: !18, size: 32, offset: 32)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2366, file: !2367, line: 23, baseType: !146, size: 64, offset: 64)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2366, file: !2367, line: 30, baseType: !146, size: 64, offset: 128)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2366, file: !2367, line: 33, baseType: !2374, size: 64, offset: 192)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !601, line: 27, flags: DIFlagFwdDecl)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !485, file: !177, line: 1966, baseType: !2362, size: 64, offset: 1408)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !425, file: !177, line: 1424, baseType: !2378, size: 64, offset: 448)
!2378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!2379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !2381, line: 322, size: 704, elements: !2382)
!2381 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!2382 = !{!2383, !2434, !2438, !2442, !2443, !2444, !2445, !2446, !2451, !2456, !2460}
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2380, file: !2381, line: 323, baseType: !2384, size: 64)
!2384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2385, size: 64)
!2385 = !DISubroutineType(types: !2386)
!2386 = !{!18, !2387}
!2387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2388, size: 64)
!2388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !2381, line: 294, size: 1600, elements: !2389)
!2389 = !{!2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2419, !2420, !2421}
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2388, file: !2381, line: 295, baseType: !467, size: 128)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2388, file: !2381, line: 296, baseType: !11, size: 128, offset: 128)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2388, file: !2381, line: 297, baseType: !11, size: 128, offset: 256)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2388, file: !2381, line: 298, baseType: !11, size: 128, offset: 384)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2388, file: !2381, line: 299, baseType: !552, size: 192, offset: 512)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2388, file: !2381, line: 300, baseType: !55, offset: 704)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2388, file: !2381, line: 301, baseType: !29, size: 32, offset: 704)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2388, file: !2381, line: 302, baseType: !424, size: 64, offset: 768)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2388, file: !2381, line: 303, baseType: !2399, size: 64, offset: 832)
!2399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !2381, line: 68, size: 64, elements: !2400)
!2400 = !{!2401, !2413}
!2401 = !DIDerivedType(tag: DW_TAG_member, scope: !2399, file: !2381, line: 69, baseType: !2402, size: 32)
!2402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2399, file: !2381, line: 69, size: 32, elements: !2403)
!2403 = !{!2404, !2405, !2406}
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2402, file: !2381, line: 70, baseType: !260, size: 32)
!2405 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2402, file: !2381, line: 71, baseType: !268, size: 32)
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2402, file: !2381, line: 72, baseType: !2407, size: 32)
!2407 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2408, line: 24, baseType: !2409)
!2408 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2408, line: 22, size: 32, elements: !2410)
!2410 = !{!2411}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2409, file: !2408, line: 23, baseType: !2412, size: 32)
!2412 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2408, line: 20, baseType: !266)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2399, file: !2381, line: 74, baseType: !2414, size: 32, offset: 32)
!2414 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !2381, line: 54, baseType: !210, size: 32, elements: !2415)
!2415 = !{!2416, !2417, !2418}
!2416 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!2417 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!2418 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2388, file: !2381, line: 304, baseType: !356, size: 64, offset: 896)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2388, file: !2381, line: 305, baseType: !146, size: 64, offset: 960)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2388, file: !2381, line: 306, baseType: !2422, size: 576, offset: 1024)
!2422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !2381, line: 205, size: 576, elements: !2423)
!2423 = !{!2424, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433}
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2422, file: !2381, line: 206, baseType: !2425, size: 64)
!2425 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !2381, line: 66, baseType: !358)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2422, file: !2381, line: 207, baseType: !2425, size: 64, offset: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2422, file: !2381, line: 208, baseType: !2425, size: 64, offset: 128)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2422, file: !2381, line: 209, baseType: !2425, size: 64, offset: 192)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2422, file: !2381, line: 210, baseType: !2425, size: 64, offset: 256)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2422, file: !2381, line: 211, baseType: !2425, size: 64, offset: 320)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2422, file: !2381, line: 212, baseType: !2425, size: 64, offset: 384)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2422, file: !2381, line: 213, baseType: !364, size: 64, offset: 448)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2422, file: !2381, line: 214, baseType: !364, size: 64, offset: 512)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2380, file: !2381, line: 324, baseType: !2435, size: 64, offset: 64)
!2435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2436, size: 64)
!2436 = !DISubroutineType(types: !2437)
!2437 = !{!2387, !424, !18}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2380, file: !2381, line: 325, baseType: !2439, size: 64, offset: 128)
!2439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2440, size: 64)
!2440 = !DISubroutineType(types: !2441)
!2441 = !{null, !2387}
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2380, file: !2381, line: 326, baseType: !2384, size: 64, offset: 192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2380, file: !2381, line: 327, baseType: !2384, size: 64, offset: 256)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2380, file: !2381, line: 328, baseType: !2384, size: 64, offset: 320)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2380, file: !2381, line: 329, baseType: !514, size: 64, offset: 384)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2380, file: !2381, line: 332, baseType: !2447, size: 64, offset: 448)
!2447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2448, size: 64)
!2448 = !DISubroutineType(types: !2449)
!2449 = !{!2450, !254}
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2425, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2380, file: !2381, line: 333, baseType: !2452, size: 64, offset: 512)
!2452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2453, size: 64)
!2453 = !DISubroutineType(types: !2454)
!2454 = !{!18, !254, !2455}
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2407, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2380, file: !2381, line: 335, baseType: !2457, size: 64, offset: 576)
!2457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!2458 = !DISubroutineType(types: !2459)
!2459 = !{!18, !254, !2450}
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2380, file: !2381, line: 337, baseType: !2461, size: 64, offset: 640)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DISubroutineType(types: !2463)
!2463 = !{!18, !424, !2464}
!2464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !425, file: !177, line: 1425, baseType: !2466, size: 64, offset: 512)
!2466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2467, size: 64)
!2467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2468)
!2468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !2381, line: 428, size: 704, elements: !2469)
!2469 = !{!2470, !2474, !2475, !2479, !2480, !2481, !2496, !2519, !2523, !2524, !2547}
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2468, file: !2381, line: 429, baseType: !2471, size: 64)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = !DISubroutineType(types: !2473)
!2473 = !{!18, !424, !18, !18, !374}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2468, file: !2381, line: 430, baseType: !514, size: 64, offset: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2468, file: !2381, line: 431, baseType: !2476, size: 64, offset: 128)
!2476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2477, size: 64)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!18, !424, !210}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2468, file: !2381, line: 432, baseType: !2476, size: 64, offset: 192)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2468, file: !2381, line: 433, baseType: !514, size: 64, offset: 256)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2468, file: !2381, line: 434, baseType: !2482, size: 64, offset: 320)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{!18, !424, !18, !2485}
!2485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2486, size: 64)
!2486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !2381, line: 415, size: 256, elements: !2487)
!2487 = !{!2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495}
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2486, file: !2381, line: 416, baseType: !18, size: 32)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2486, file: !2381, line: 417, baseType: !210, size: 32, offset: 32)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2486, file: !2381, line: 418, baseType: !210, size: 32, offset: 64)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2486, file: !2381, line: 420, baseType: !210, size: 32, offset: 96)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2486, file: !2381, line: 421, baseType: !210, size: 32, offset: 128)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2486, file: !2381, line: 422, baseType: !210, size: 32, offset: 160)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2486, file: !2381, line: 423, baseType: !210, size: 32, offset: 192)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2486, file: !2381, line: 424, baseType: !210, size: 32, offset: 224)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2468, file: !2381, line: 435, baseType: !2497, size: 64, offset: 384)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = !DISubroutineType(types: !2499)
!2499 = !{!18, !424, !2399, !2500}
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !2381, line: 343, size: 960, elements: !2502)
!2502 = !{!2503, !2504, !2505, !2506, !2507, !2508, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2501, file: !2381, line: 344, baseType: !18, size: 32)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2501, file: !2381, line: 345, baseType: !246, size: 64, offset: 64)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2501, file: !2381, line: 346, baseType: !246, size: 64, offset: 128)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2501, file: !2381, line: 347, baseType: !246, size: 64, offset: 192)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2501, file: !2381, line: 348, baseType: !246, size: 64, offset: 256)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2501, file: !2381, line: 349, baseType: !246, size: 64, offset: 320)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2501, file: !2381, line: 350, baseType: !246, size: 64, offset: 384)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2501, file: !2381, line: 351, baseType: !562, size: 64, offset: 448)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2501, file: !2381, line: 353, baseType: !562, size: 64, offset: 512)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2501, file: !2381, line: 354, baseType: !18, size: 32, offset: 576)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2501, file: !2381, line: 355, baseType: !18, size: 32, offset: 608)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2501, file: !2381, line: 356, baseType: !246, size: 64, offset: 640)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2501, file: !2381, line: 357, baseType: !246, size: 64, offset: 704)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2501, file: !2381, line: 358, baseType: !246, size: 64, offset: 768)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2501, file: !2381, line: 359, baseType: !562, size: 64, offset: 832)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2501, file: !2381, line: 360, baseType: !18, size: 32, offset: 896)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2468, file: !2381, line: 436, baseType: !2520, size: 64, offset: 448)
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DISubroutineType(types: !2522)
!2522 = !{!18, !424, !2464, !2500}
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2468, file: !2381, line: 438, baseType: !2497, size: 64, offset: 512)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2468, file: !2381, line: 439, baseType: !2525, size: 64, offset: 576)
!2525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2526, size: 64)
!2526 = !DISubroutineType(types: !2527)
!2527 = !{!18, !424, !2528}
!2528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2529, size: 64)
!2529 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !2381, line: 409, size: 1408, elements: !2530)
!2530 = !{!2531, !2532}
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2529, file: !2381, line: 410, baseType: !210, size: 32)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2529, file: !2381, line: 411, baseType: !2533, size: 1344, offset: 64)
!2533 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2534, size: 1344, elements: !97)
!2534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !2381, line: 395, size: 448, elements: !2535)
!2535 = !{!2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2546}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2534, file: !2381, line: 396, baseType: !210, size: 32)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2534, file: !2381, line: 397, baseType: !210, size: 32, offset: 32)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2534, file: !2381, line: 399, baseType: !210, size: 32, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2534, file: !2381, line: 400, baseType: !210, size: 32, offset: 96)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2534, file: !2381, line: 401, baseType: !210, size: 32, offset: 128)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2534, file: !2381, line: 402, baseType: !210, size: 32, offset: 160)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2534, file: !2381, line: 403, baseType: !210, size: 32, offset: 192)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2534, file: !2381, line: 404, baseType: !248, size: 64, offset: 256)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2534, file: !2381, line: 405, baseType: !2545, size: 64, offset: 320)
!2545 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !12, line: 126, baseType: !246)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2534, file: !2381, line: 406, baseType: !2545, size: 64, offset: 384)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2468, file: !2381, line: 440, baseType: !2476, size: 64, offset: 640)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !425, file: !177, line: 1426, baseType: !2549, size: 64, offset: 576)
!2549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2550, size: 64)
!2550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2551)
!2551 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !177, line: 49, flags: DIFlagFwdDecl)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !425, file: !177, line: 1427, baseType: !146, size: 64, offset: 640)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !425, file: !177, line: 1428, baseType: !146, size: 64, offset: 704)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !425, file: !177, line: 1429, baseType: !146, size: 64, offset: 768)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !425, file: !177, line: 1430, baseType: !206, size: 64, offset: 832)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !425, file: !177, line: 1431, baseType: !642, size: 256, offset: 896)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !425, file: !177, line: 1432, baseType: !18, size: 32, offset: 1152)
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !425, file: !177, line: 1433, baseType: !29, size: 32, offset: 1184)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !425, file: !177, line: 1437, baseType: !2560, size: 64, offset: 1216)
!2560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2561, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2562, size: 64)
!2562 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2563)
!2563 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !177, line: 1437, flags: DIFlagFwdDecl)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !425, file: !177, line: 1449, baseType: !2565, size: 64, offset: 1280)
!2565 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !223, line: 34, size: 64, elements: !2566)
!2566 = !{!2567}
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2565, file: !223, line: 35, baseType: !226, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !425, file: !177, line: 1450, baseType: !11, size: 128, offset: 1344)
!2569 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !425, file: !177, line: 1451, baseType: !2570, size: 64, offset: 1472)
!2570 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2571, size: 64)
!2571 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !177, line: 699, flags: DIFlagFwdDecl)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !425, file: !177, line: 1452, baseType: !1865, size: 64, offset: 1536)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !425, file: !177, line: 1453, baseType: !2574, size: 64, offset: 1600)
!2574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2575, size: 64)
!2575 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !177, line: 1453, flags: DIFlagFwdDecl)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !425, file: !177, line: 1454, baseType: !467, size: 128, offset: 1664)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !425, file: !177, line: 1455, baseType: !210, size: 32, offset: 1792)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !425, file: !177, line: 1456, baseType: !2579, size: 2432, offset: 1856)
!2579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !2381, line: 518, size: 2432, elements: !2580)
!2580 = !{!2581, !2582, !2583, !2585, !2617}
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2579, file: !2381, line: 519, baseType: !210, size: 32)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2579, file: !2381, line: 520, baseType: !642, size: 256, offset: 64)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2579, file: !2381, line: 521, baseType: !2584, size: 192, offset: 320)
!2584 = !DICompositeType(tag: DW_TAG_array_type, baseType: !254, size: 192, elements: !97)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2579, file: !2381, line: 522, baseType: !2586, size: 1728, offset: 512)
!2586 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2587, size: 1728, elements: !97)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !2381, line: 222, size: 576, elements: !2588)
!2588 = !{!2589, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616}
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2587, file: !2381, line: 223, baseType: !2590, size: 64)
!2590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2591, size: 64)
!2591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !2381, line: 443, size: 256, elements: !2592)
!2592 = !{!2593, !2594, !2607, !2608}
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2591, file: !2381, line: 444, baseType: !18, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2591, file: !2381, line: 445, baseType: !2595, size: 64, offset: 64)
!2595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2596, size: 64)
!2596 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2597)
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !2381, line: 310, size: 512, elements: !2598)
!2598 = !{!2599, !2600, !2601, !2602, !2603, !2604, !2605, !2606}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2597, file: !2381, line: 311, baseType: !514, size: 64)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2597, file: !2381, line: 312, baseType: !514, size: 64, offset: 64)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2597, file: !2381, line: 313, baseType: !514, size: 64, offset: 128)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2597, file: !2381, line: 314, baseType: !514, size: 64, offset: 192)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2597, file: !2381, line: 315, baseType: !2384, size: 64, offset: 256)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2597, file: !2381, line: 316, baseType: !2384, size: 64, offset: 320)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2597, file: !2381, line: 317, baseType: !2384, size: 64, offset: 384)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2597, file: !2381, line: 318, baseType: !2461, size: 64, offset: 448)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2591, file: !2381, line: 446, baseType: !458, size: 64, offset: 128)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2591, file: !2381, line: 447, baseType: !2590, size: 64, offset: 192)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2587, file: !2381, line: 224, baseType: !18, size: 32, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2587, file: !2381, line: 226, baseType: !11, size: 128, offset: 128)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2587, file: !2381, line: 227, baseType: !146, size: 64, offset: 256)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2587, file: !2381, line: 228, baseType: !210, size: 32, offset: 320)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2587, file: !2381, line: 229, baseType: !210, size: 32, offset: 352)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2587, file: !2381, line: 230, baseType: !2425, size: 64, offset: 384)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2587, file: !2381, line: 231, baseType: !2425, size: 64, offset: 448)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2587, file: !2381, line: 232, baseType: !170, size: 64, offset: 512)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2579, file: !2381, line: 523, baseType: !2618, size: 192, offset: 2240)
!2618 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2595, size: 192, elements: !97)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !425, file: !177, line: 1458, baseType: !2620, size: 2112, offset: 4288)
!2620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !177, line: 1410, size: 2112, elements: !2621)
!2621 = !{!2622, !2623, !2624}
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2620, file: !177, line: 1411, baseType: !18, size: 32)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2620, file: !177, line: 1412, baseType: !1368, size: 128, offset: 64)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2620, file: !177, line: 1413, baseType: !2625, size: 1920, offset: 192)
!2625 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2626, size: 1920, elements: !97)
!2626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2627, line: 12, size: 640, elements: !2628)
!2627 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2628 = !{!2629, !2637, !2639, !2644, !2645}
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2626, file: !2627, line: 13, baseType: !2630, size: 320)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2631, line: 17, size: 320, elements: !2632)
!2631 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2632 = !{!2633, !2634, !2635, !2636}
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2630, file: !2631, line: 18, baseType: !18, size: 32)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2630, file: !2631, line: 19, baseType: !18, size: 32, offset: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2630, file: !2631, line: 20, baseType: !1368, size: 128, offset: 64)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2630, file: !2631, line: 22, baseType: !189, size: 128, align: 64, offset: 192)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2626, file: !2627, line: 14, baseType: !2638, size: 64, offset: 320)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2626, file: !2627, line: 15, baseType: !2640, size: 64, offset: 384)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2641, line: 16, size: 64, elements: !2642)
!2641 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2642 = !{!2643}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2640, file: !2641, line: 17, baseType: !1091, size: 64)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2626, file: !2627, line: 16, baseType: !1368, size: 128, offset: 448)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2626, file: !2627, line: 17, baseType: !29, size: 32, offset: 576)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !425, file: !177, line: 1465, baseType: !170, size: 64, offset: 6400)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !425, file: !177, line: 1468, baseType: !240, size: 32, offset: 6464)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !425, file: !177, line: 1470, baseType: !364, size: 64, offset: 6528)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !425, file: !177, line: 1471, baseType: !364, size: 64, offset: 6592)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !425, file: !177, line: 1473, baseType: !242, size: 32, offset: 6656)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !425, file: !177, line: 1474, baseType: !2652, size: 64, offset: 6720)
!2652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2653, size: 64)
!2653 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !177, line: 603, flags: DIFlagFwdDecl)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !425, file: !177, line: 1477, baseType: !2655, size: 256, offset: 6784)
!2655 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 256, elements: !2172)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !425, file: !177, line: 1478, baseType: !2657, size: 128, offset: 7040)
!2657 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2658, line: 18, baseType: !2659)
!2658 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2659 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2658, line: 16, size: 128, elements: !2660)
!2660 = !{!2661}
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2659, file: !2658, line: 17, baseType: !2662, size: 128)
!2662 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1228, size: 128, elements: !1653)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !425, file: !177, line: 1480, baseType: !210, size: 32, offset: 7168)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !425, file: !177, line: 1481, baseType: !2665, size: 32, offset: 7200)
!2665 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !12, line: 150, baseType: !210)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !425, file: !177, line: 1487, baseType: !552, size: 192, offset: 7232)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !425, file: !177, line: 1493, baseType: !43, size: 64, offset: 7424)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !425, file: !177, line: 1495, baseType: !2669, size: 64, offset: 7488)
!2669 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2670, size: 64)
!2670 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2671)
!2671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !204, line: 135, size: 1024, align: 512, elements: !2672)
!2672 = !{!2673, !2677, !2678, !2685, !2691, !2695, !2699, !2703, !2704, !2708, !2712, !2717, !2721}
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2671, file: !204, line: 136, baseType: !2674, size: 64)
!2674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2675, size: 64)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{!18, !206, !210}
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2671, file: !204, line: 137, baseType: !2674, size: 64, offset: 64)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2671, file: !204, line: 138, baseType: !2679, size: 64, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2680, size: 64)
!2680 = !DISubroutineType(types: !2681)
!2681 = !{!18, !2682, !2684}
!2682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2683, size: 64)
!2683 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !207)
!2684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2671, file: !204, line: 139, baseType: !2686, size: 64, offset: 192)
!2686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2687, size: 64)
!2687 = !DISubroutineType(types: !2688)
!2688 = !{!18, !2682, !210, !43, !2689}
!2689 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !231)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2671, file: !204, line: 141, baseType: !2692, size: 64, offset: 256)
!2692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2693, size: 64)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!18, !2682}
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2671, file: !204, line: 142, baseType: !2696, size: 64, offset: 320)
!2696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2697, size: 64)
!2697 = !DISubroutineType(types: !2698)
!2698 = !{!18, !206}
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2671, file: !204, line: 143, baseType: !2700, size: 64, offset: 384)
!2700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2701, size: 64)
!2701 = !DISubroutineType(types: !2702)
!2702 = !{null, !206}
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2671, file: !204, line: 144, baseType: !2700, size: 64, offset: 448)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2671, file: !204, line: 145, baseType: !2705, size: 64, offset: 512)
!2705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2706, size: 64)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{null, !206, !254}
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2671, file: !204, line: 146, baseType: !2709, size: 64, offset: 576)
!2709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2710, size: 64)
!2710 = !DISubroutineType(types: !2711)
!2711 = !{!96, !206, !96, !18}
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2671, file: !204, line: 147, baseType: !2713, size: 64, offset: 640)
!2713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2714, size: 64)
!2714 = !DISubroutineType(types: !2715)
!2715 = !{!202, !2716}
!2716 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !198, size: 64)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2671, file: !204, line: 148, baseType: !2718, size: 64, offset: 704)
!2718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2719, size: 64)
!2719 = !DISubroutineType(types: !2720)
!2720 = !{!18, !374, !315}
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2671, file: !204, line: 149, baseType: !2722, size: 64, offset: 768)
!2722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2723, size: 64)
!2723 = !DISubroutineType(types: !2724)
!2724 = !{!206, !206, !2725}
!2725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!2726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !255)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !425, file: !177, line: 1500, baseType: !18, size: 32, offset: 7552)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !425, file: !177, line: 1502, baseType: !2729, size: 448, offset: 7616)
!2729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2367, line: 60, size: 448, elements: !2730)
!2730 = !{!2731, !2736, !2737, !2738, !2739, !2740, !2741}
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2729, file: !2367, line: 61, baseType: !2732, size: 64)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DISubroutineType(types: !2734)
!2734 = !{!146, !2735, !2365}
!2735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2729, file: !2367, line: 63, baseType: !2732, size: 64, offset: 64)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2729, file: !2367, line: 66, baseType: !131, size: 64, offset: 128)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2729, file: !2367, line: 67, baseType: !18, size: 32, offset: 192)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2729, file: !2367, line: 68, baseType: !210, size: 32, offset: 224)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2729, file: !2367, line: 71, baseType: !11, size: 128, offset: 256)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2729, file: !2367, line: 77, baseType: !2742, size: 64, offset: 384)
!2742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !425, file: !177, line: 1505, baseType: !556, size: 64, offset: 8064)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !425, file: !177, line: 1508, baseType: !556, size: 64, offset: 8128)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !425, file: !177, line: 1511, baseType: !18, size: 32, offset: 8192)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !425, file: !177, line: 1514, baseType: !784, size: 32, offset: 8224)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !425, file: !177, line: 1517, baseType: !2748, size: 64, offset: 8256)
!2748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2749, size: 64)
!2749 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !1900, line: 18, flags: DIFlagFwdDecl)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !425, file: !177, line: 1518, baseType: !463, size: 64, offset: 8320)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !425, file: !177, line: 1525, baseType: !1400, size: 64, offset: 8384)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !425, file: !177, line: 1532, baseType: !2753, size: 64, offset: 8448)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2754, line: 52, size: 64, elements: !2755)
!2754 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2755 = !{!2756}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2753, file: !2754, line: 53, baseType: !2757, size: 64)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2754, line: 40, size: 256, elements: !2759)
!2759 = !{!2760, !2761, !2766}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2758, file: !2754, line: 42, baseType: !55)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2758, file: !2754, line: 44, baseType: !2762, size: 192)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2754, line: 28, size: 192, elements: !2763)
!2763 = !{!2764, !2765}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2762, file: !2754, line: 29, baseType: !11, size: 128)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2762, file: !2754, line: 31, baseType: !131, size: 64, offset: 128)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2758, file: !2754, line: 49, baseType: !131, size: 64, offset: 192)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !425, file: !177, line: 1533, baseType: !2753, size: 64, offset: 8512)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !425, file: !177, line: 1534, baseType: !189, size: 128, align: 64, offset: 8576)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !425, file: !177, line: 1535, baseType: !1899, size: 256, offset: 8704)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !425, file: !177, line: 1537, baseType: !552, size: 192, offset: 8960)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !425, file: !177, line: 1542, baseType: !18, size: 32, offset: 9152)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !425, file: !177, line: 1545, baseType: !55, offset: 9184)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !425, file: !177, line: 1546, baseType: !11, size: 128, offset: 9216)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !425, file: !177, line: 1548, baseType: !55, offset: 9344)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !425, file: !177, line: 1549, baseType: !11, size: 128, offset: 9344)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !255, file: !177, line: 624, baseType: !612, size: 64, offset: 256)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !255, file: !177, line: 631, baseType: !146, size: 64, offset: 320)
!2778 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !177, line: 639, baseType: !2779, size: 32, offset: 384)
!2779 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !255, file: !177, line: 639, size: 32, elements: !2780)
!2780 = !{!2781, !2783}
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2779, file: !177, line: 640, baseType: !2782, size: 32)
!2782 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !210)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2779, file: !177, line: 641, baseType: !210, size: 32)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !255, file: !177, line: 643, baseType: !338, size: 32, offset: 416)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !255, file: !177, line: 644, baseType: !356, size: 64, offset: 448)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !255, file: !177, line: 645, baseType: !360, size: 128, offset: 512)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !255, file: !177, line: 646, baseType: !360, size: 128, offset: 640)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !255, file: !177, line: 647, baseType: !360, size: 128, offset: 768)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !255, file: !177, line: 648, baseType: !55, offset: 896)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !255, file: !177, line: 649, baseType: !138, size: 16, offset: 896)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !255, file: !177, line: 650, baseType: !1227, size: 8, offset: 912)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !255, file: !177, line: 651, baseType: !1227, size: 8, offset: 920)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !255, file: !177, line: 652, baseType: !2545, size: 64, offset: 960)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !255, file: !177, line: 659, baseType: !146, size: 64, offset: 1024)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !255, file: !177, line: 660, baseType: !642, size: 256, offset: 1088)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !255, file: !177, line: 662, baseType: !146, size: 64, offset: 1344)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !255, file: !177, line: 663, baseType: !146, size: 64, offset: 1408)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !255, file: !177, line: 665, baseType: !467, size: 128, offset: 1472)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !255, file: !177, line: 666, baseType: !11, size: 128, offset: 1600)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !255, file: !177, line: 675, baseType: !11, size: 128, offset: 1728)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !255, file: !177, line: 676, baseType: !11, size: 128, offset: 1856)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !255, file: !177, line: 677, baseType: !11, size: 128, offset: 1984)
!2803 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !177, line: 678, baseType: !2804, size: 128, offset: 2112)
!2804 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !255, file: !177, line: 678, size: 128, elements: !2805)
!2805 = !{!2806, !2807}
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2804, file: !177, line: 679, baseType: !463, size: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2804, file: !177, line: 680, baseType: !189, size: 128, align: 64)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !255, file: !177, line: 682, baseType: !558, size: 64, offset: 2240)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !255, file: !177, line: 683, baseType: !558, size: 64, offset: 2304)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !255, file: !177, line: 684, baseType: !29, size: 32, offset: 2368)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !255, file: !177, line: 685, baseType: !29, size: 32, offset: 2400)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !255, file: !177, line: 686, baseType: !29, size: 32, offset: 2432)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !255, file: !177, line: 688, baseType: !29, size: 32, offset: 2464)
!2814 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !177, line: 690, baseType: !2815, size: 64, offset: 2496)
!2815 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !255, file: !177, line: 690, size: 64, elements: !2816)
!2816 = !{!2817, !3048}
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2815, file: !177, line: 691, baseType: !2818, size: 64)
!2818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2819, size: 64)
!2819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2820)
!2820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !177, line: 1822, size: 2048, elements: !2821)
!2821 = !{!2822, !2823, !2827, !2831, !2835, !2836, !2837, !2841, !2854, !2855, !2872, !2876, !2877, !2881, !2882, !2886, !2891, !2892, !2896, !2900, !3008, !3012, !3013, !3017, !3018, !3022, !3026, !3031, !3035, !3039, !3043, !3047}
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2820, file: !177, line: 1823, baseType: !458, size: 64)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !2820, file: !177, line: 1824, baseType: !2824, size: 64, offset: 64)
!2824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2825, size: 64)
!2825 = !DISubroutineType(types: !2826)
!2826 = !{!356, !175, !356, !18}
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !2820, file: !177, line: 1825, baseType: !2828, size: 64, offset: 128)
!2828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2829, size: 64)
!2829 = !DISubroutineType(types: !2830)
!2830 = !{!127, !175, !96, !143, !574}
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !2820, file: !177, line: 1826, baseType: !2832, size: 64, offset: 192)
!2832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2833, size: 64)
!2833 = !DISubroutineType(types: !2834)
!2834 = !{!127, !175, !43, !143, !574}
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !2820, file: !177, line: 1827, baseType: !712, size: 64, offset: 256)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !2820, file: !177, line: 1828, baseType: !712, size: 64, offset: 320)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !2820, file: !177, line: 1829, baseType: !2838, size: 64, offset: 384)
!2838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2839, size: 64)
!2839 = !DISubroutineType(types: !2840)
!2840 = !{!18, !715, !315}
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !2820, file: !177, line: 1830, baseType: !2842, size: 64, offset: 448)
!2842 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2843, size: 64)
!2843 = !DISubroutineType(types: !2844)
!2844 = !{!18, !175, !2845}
!2845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2846, size: 64)
!2846 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !177, line: 1776, size: 128, elements: !2847)
!2847 = !{!2848, !2853}
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !2846, file: !177, line: 1777, baseType: !2849, size: 64)
!2849 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !177, line: 1773, baseType: !2850)
!2850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2851, size: 64)
!2851 = !DISubroutineType(types: !2852)
!2852 = !{!18, !2845, !43, !18, !356, !246, !210}
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2846, file: !177, line: 1778, baseType: !356, size: 64, offset: 64)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !2820, file: !177, line: 1831, baseType: !2842, size: 64, offset: 512)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2820, file: !177, line: 1832, baseType: !2856, size: 64, offset: 576)
!2856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2857, size: 64)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{!2859, !175, !2861}
!2859 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !2860, line: 52, baseType: !210)
!2860 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!2861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2862, size: 64)
!2862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !2863, line: 43, size: 128, elements: !2864)
!2863 = !DIFile(filename: "./include/linux/poll.h", directory: "/home/lizy2001/genbc/linux")
!2864 = !{!2865, !2871}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "_qproc", scope: !2862, file: !2863, line: 44, baseType: !2866, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_typedef, name: "poll_queue_proc", file: !2863, line: 37, baseType: !2867)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2868, size: 64)
!2868 = !DISubroutineType(types: !2869)
!2869 = !{null, !175, !2870, !2861}
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "_key", scope: !2862, file: !2863, line: 45, baseType: !2859, size: 32, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !2820, file: !177, line: 1833, baseType: !2873, size: 64, offset: 640)
!2873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2874, size: 64)
!2874 = !DISubroutineType(types: !2875)
!2875 = !{!131, !175, !210, !146}
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !2820, file: !177, line: 1834, baseType: !2873, size: 64, offset: 704)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !2820, file: !177, line: 1835, baseType: !2878, size: 64, offset: 768)
!2878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2879, size: 64)
!2879 = !DISubroutineType(types: !2880)
!2880 = !{!18, !175, !857}
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !2820, file: !177, line: 1836, baseType: !146, size: 64, offset: 832)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !2820, file: !177, line: 1837, baseType: !2883, size: 64, offset: 896)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{!18, !254, !175}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !2820, file: !177, line: 1838, baseType: !2887, size: 64, offset: 960)
!2887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2888, size: 64)
!2888 = !DISubroutineType(types: !2889)
!2889 = !{!18, !175, !2890}
!2890 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !177, line: 1007, baseType: !170)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2820, file: !177, line: 1839, baseType: !2883, size: 64, offset: 1024)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !2820, file: !177, line: 1840, baseType: !2893, size: 64, offset: 1088)
!2893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2894, size: 64)
!2894 = !DISubroutineType(types: !2895)
!2895 = !{!18, !175, !356, !356, !18}
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !2820, file: !177, line: 1841, baseType: !2897, size: 64, offset: 1152)
!2897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2898, size: 64)
!2898 = !DISubroutineType(types: !2899)
!2899 = !{!18, !18, !175, !18}
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2820, file: !177, line: 1842, baseType: !2901, size: 64, offset: 1216)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!18, !175, !18, !2904}
!2904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2905, size: 64)
!2905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !177, line: 1062, size: 1664, elements: !2906)
!2906 = !{!2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2920, !2921, !2938, !2939, !2940, !2953, !2984}
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !2905, file: !177, line: 1063, baseType: !2904, size: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !2905, file: !177, line: 1064, baseType: !11, size: 128, offset: 64)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !2905, file: !177, line: 1065, baseType: !467, size: 128, offset: 192)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !2905, file: !177, line: 1066, baseType: !11, size: 128, offset: 320)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !2905, file: !177, line: 1069, baseType: !11, size: 128, offset: 448)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !2905, file: !177, line: 1072, baseType: !2890, size: 64, offset: 576)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !2905, file: !177, line: 1073, baseType: !210, size: 32, offset: 640)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !2905, file: !177, line: 1074, baseType: !252, size: 8, offset: 672)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !2905, file: !177, line: 1075, baseType: !210, size: 32, offset: 704)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !2905, file: !177, line: 1076, baseType: !18, size: 32, offset: 736)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !2905, file: !177, line: 1077, baseType: !1368, size: 128, offset: 768)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !2905, file: !177, line: 1078, baseType: !175, size: 64, offset: 896)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !2905, file: !177, line: 1079, baseType: !356, size: 64, offset: 960)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !2905, file: !177, line: 1080, baseType: !356, size: 64, offset: 1024)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !2905, file: !177, line: 1082, baseType: !2922, size: 64, offset: 1088)
!2922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2923, size: 64)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !177, line: 1314, size: 320, elements: !2924)
!2924 = !{!2925, !2933, !2934, !2935, !2936, !2937}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !2923, file: !177, line: 1315, baseType: !2926)
!2926 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !2927, line: 20, baseType: !2928)
!2927 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!2928 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2927, line: 11, elements: !2929)
!2929 = !{!2930}
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !2928, file: !2927, line: 12, baseType: !2931)
!2931 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !67, line: 33, baseType: !2932)
!2932 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !67, line: 31, elements: !69)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !2923, file: !177, line: 1316, baseType: !18, size: 32)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !2923, file: !177, line: 1317, baseType: !18, size: 32, offset: 32)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !2923, file: !177, line: 1318, baseType: !2922, size: 64, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !2923, file: !177, line: 1319, baseType: !175, size: 64, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !2923, file: !177, line: 1320, baseType: !189, size: 128, align: 64, offset: 192)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !2905, file: !177, line: 1084, baseType: !146, size: 64, offset: 1152)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !2905, file: !177, line: 1085, baseType: !146, size: 64, offset: 1216)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !2905, file: !177, line: 1087, baseType: !2941, size: 64, offset: 1280)
!2941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2942, size: 64)
!2942 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2943)
!2943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !177, line: 1011, size: 128, elements: !2944)
!2944 = !{!2945, !2949}
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !2943, file: !177, line: 1012, baseType: !2946, size: 64)
!2946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2947, size: 64)
!2947 = !DISubroutineType(types: !2948)
!2948 = !{null, !2904, !2904}
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !2943, file: !177, line: 1013, baseType: !2950, size: 64, offset: 64)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2951, size: 64)
!2951 = !DISubroutineType(types: !2952)
!2952 = !{null, !2904}
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !2905, file: !177, line: 1088, baseType: !2954, size: 64, offset: 1344)
!2954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2956)
!2956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !177, line: 1016, size: 512, elements: !2957)
!2957 = !{!2958, !2962, !2966, !2967, !2971, !2975, !2979, !2983}
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !2956, file: !177, line: 1017, baseType: !2959, size: 64)
!2959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2960, size: 64)
!2960 = !DISubroutineType(types: !2961)
!2961 = !{!2890, !2890}
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !2956, file: !177, line: 1018, baseType: !2963, size: 64, offset: 64)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DISubroutineType(types: !2965)
!2965 = !{null, !2890}
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !2956, file: !177, line: 1019, baseType: !2950, size: 64, offset: 128)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !2956, file: !177, line: 1020, baseType: !2968, size: 64, offset: 192)
!2968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2969, size: 64)
!2969 = !DISubroutineType(types: !2970)
!2970 = !{!18, !2904, !18}
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !2956, file: !177, line: 1021, baseType: !2972, size: 64, offset: 256)
!2972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2973, size: 64)
!2973 = !DISubroutineType(types: !2974)
!2974 = !{!315, !2904}
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !2956, file: !177, line: 1022, baseType: !2976, size: 64, offset: 320)
!2976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2977, size: 64)
!2977 = !DISubroutineType(types: !2978)
!2978 = !{!18, !2904, !18, !15}
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !2956, file: !177, line: 1023, baseType: !2980, size: 64, offset: 384)
!2980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2981, size: 64)
!2981 = !DISubroutineType(types: !2982)
!2982 = !{null, !2904, !689}
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !2956, file: !177, line: 1024, baseType: !2972, size: 64, offset: 448)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !2905, file: !177, line: 1097, baseType: !2985, size: 256, offset: 1408)
!2985 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2905, file: !177, line: 1089, size: 256, elements: !2986)
!2986 = !{!2987, !2996, !3002}
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !2985, file: !177, line: 1090, baseType: !2988, size: 256)
!2988 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !2989, line: 10, size: 256, elements: !2990)
!2989 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!2990 = !{!2991, !2992, !2995}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2988, file: !2989, line: 11, baseType: !240, size: 32)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2988, file: !2989, line: 12, baseType: !2993, size: 64, offset: 64)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !2989, line: 5, flags: DIFlagFwdDecl)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2988, file: !2989, line: 13, baseType: !11, size: 128, offset: 128)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !2985, file: !177, line: 1091, baseType: !2997, size: 64)
!2997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !2989, line: 17, size: 64, elements: !2998)
!2998 = !{!2999}
!2999 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2997, file: !2989, line: 18, baseType: !3000, size: 64)
!3000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3001, size: 64)
!3001 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !2989, line: 16, flags: DIFlagFwdDecl)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !2985, file: !177, line: 1096, baseType: !3003, size: 192)
!3003 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2985, file: !177, line: 1092, size: 192, elements: !3004)
!3004 = !{!3005, !3006, !3007}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3003, file: !177, line: 1093, baseType: !11, size: 128)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3003, file: !177, line: 1094, baseType: !18, size: 32, offset: 128)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3003, file: !177, line: 1095, baseType: !210, size: 32, offset: 160)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !2820, file: !177, line: 1843, baseType: !3009, size: 64, offset: 1280)
!3009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3010, size: 64)
!3010 = !DISubroutineType(types: !3011)
!3011 = !{!127, !175, !599, !18, !143, !574, !18}
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !2820, file: !177, line: 1844, baseType: !982, size: 64, offset: 1344)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !2820, file: !177, line: 1845, baseType: !3014, size: 64, offset: 1408)
!3014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3015, size: 64)
!3015 = !DISubroutineType(types: !3016)
!3016 = !{!18, !18}
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !2820, file: !177, line: 1846, baseType: !2901, size: 64, offset: 1472)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !2820, file: !177, line: 1847, baseType: !3019, size: 64, offset: 1536)
!3019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3020, size: 64)
!3020 = !DISubroutineType(types: !3021)
!3021 = !{!127, !2040, !175, !574, !143, !210}
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !2820, file: !177, line: 1848, baseType: !3023, size: 64, offset: 1600)
!3023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3024, size: 64)
!3024 = !DISubroutineType(types: !3025)
!3025 = !{!127, !175, !574, !2040, !143, !210}
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !2820, file: !177, line: 1849, baseType: !3027, size: 64, offset: 1664)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = !DISubroutineType(types: !3029)
!3029 = !{!18, !175, !131, !3030, !689}
!3030 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2904, size: 64)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !2820, file: !177, line: 1850, baseType: !3032, size: 64, offset: 1728)
!3032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3033, size: 64)
!3033 = !DISubroutineType(types: !3034)
!3034 = !{!131, !175, !18, !356, !356}
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !2820, file: !177, line: 1852, baseType: !3036, size: 64, offset: 1792)
!3036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3037, size: 64)
!3037 = !DISubroutineType(types: !3038)
!3038 = !{null, !540, !175}
!3039 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !2820, file: !177, line: 1856, baseType: !3040, size: 64, offset: 1856)
!3040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3041, size: 64)
!3041 = !DISubroutineType(types: !3042)
!3042 = !{!127, !175, !356, !175, !356, !143, !210}
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !2820, file: !177, line: 1858, baseType: !3044, size: 64, offset: 1920)
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DISubroutineType(types: !3046)
!3046 = !{!356, !175, !356, !175, !356, !356, !210}
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !2820, file: !177, line: 1861, baseType: !2893, size: 64, offset: 1984)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2815, file: !177, line: 692, baseType: !492, size: 64)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !255, file: !177, line: 694, baseType: !3050, size: 64, offset: 2560)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !177, line: 1100, size: 384, elements: !3052)
!3052 = !{!3053, !3054, !3055, !3056}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3051, file: !177, line: 1101, baseType: !55)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3051, file: !177, line: 1102, baseType: !11, size: 128)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3051, file: !177, line: 1103, baseType: !11, size: 128, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3051, file: !177, line: 1104, baseType: !11, size: 128, offset: 256)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !255, file: !177, line: 695, baseType: !613, size: 1216, align: 64, offset: 2624)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !255, file: !177, line: 696, baseType: !11, size: 128, offset: 3840)
!3059 = !DIDerivedType(tag: DW_TAG_member, scope: !255, file: !177, line: 697, baseType: !3060, size: 64, offset: 3968)
!3060 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !255, file: !177, line: 697, size: 64, elements: !3061)
!3061 = !{!3062, !3063, !3064, !3067, !3068}
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3060, file: !177, line: 698, baseType: !2040, size: 64)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3060, file: !177, line: 699, baseType: !2570, size: 64)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3060, file: !177, line: 700, baseType: !3065, size: 64)
!3065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3066, size: 64)
!3066 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !177, line: 700, flags: DIFlagFwdDecl)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3060, file: !177, line: 701, baseType: !96, size: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3060, file: !177, line: 702, baseType: !210, size: 32)
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !255, file: !177, line: 705, baseType: !242, size: 32, offset: 4032)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !255, file: !177, line: 708, baseType: !242, size: 32, offset: 4064)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !255, file: !177, line: 709, baseType: !2652, size: 64, offset: 4096)
!3072 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !255, file: !177, line: 720, baseType: !170, size: 64, offset: 4160)
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !207, file: !204, line: 98, baseType: !3074, size: 256, offset: 448)
!3074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !252, size: 256, elements: !2172)
!3075 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !207, file: !204, line: 101, baseType: !3076, size: 32, offset: 704)
!3076 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3077, line: 25, size: 32, elements: !3078)
!3077 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3078 = !{!3079}
!3079 = !DIDerivedType(tag: DW_TAG_member, scope: !3076, file: !3077, line: 26, baseType: !3080, size: 32)
!3080 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3076, file: !3077, line: 26, size: 32, elements: !3081)
!3081 = !{!3082}
!3082 = !DIDerivedType(tag: DW_TAG_member, scope: !3080, file: !3077, line: 30, baseType: !3083, size: 32)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3080, file: !3077, line: 30, size: 32, elements: !3084)
!3084 = !{!3085, !3086}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3083, file: !3077, line: 31, baseType: !55)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3083, file: !3077, line: 32, baseType: !18, size: 32)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !207, file: !204, line: 102, baseType: !2669, size: 64, offset: 768)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !207, file: !204, line: 103, baseType: !424, size: 64, offset: 832)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !207, file: !204, line: 104, baseType: !146, size: 64, offset: 896)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !207, file: !204, line: 105, baseType: !170, size: 64, offset: 960)
!3091 = !DIDerivedType(tag: DW_TAG_member, scope: !207, file: !204, line: 107, baseType: !3092, size: 128, offset: 1024)
!3092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !207, file: !204, line: 107, size: 128, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3092, file: !204, line: 108, baseType: !11, size: 128)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3092, file: !204, line: 109, baseType: !2870, size: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !207, file: !204, line: 111, baseType: !11, size: 128, offset: 1152)
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !207, file: !204, line: 112, baseType: !11, size: 128, offset: 1280)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !207, file: !204, line: 120, baseType: !3099, size: 128, offset: 1408)
!3099 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !207, file: !204, line: 116, size: 128, elements: !3100)
!3100 = !{!3101, !3102, !3103}
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3099, file: !204, line: 117, baseType: !467, size: 128)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3099, file: !204, line: 118, baseType: !222, size: 128)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3099, file: !204, line: 119, baseType: !189, size: 128, align: 64)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !176, file: !177, line: 922, baseType: !254, size: 64, offset: 256)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !176, file: !177, line: 923, baseType: !2818, size: 64, offset: 320)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !176, file: !177, line: 929, baseType: !55, offset: 384)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !176, file: !177, line: 930, baseType: !3108, size: 32, offset: 384)
!3108 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !177, line: 296, baseType: !210, size: 32, elements: !3109)
!3109 = !{!3110, !3111, !3112, !3113, !3114, !3115}
!3110 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!3111 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!3112 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!3113 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!3114 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!3115 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !176, file: !177, line: 931, baseType: !556, size: 64, offset: 448)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !176, file: !177, line: 932, baseType: !210, size: 32, offset: 512)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !176, file: !177, line: 933, baseType: !2665, size: 32, offset: 544)
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !176, file: !177, line: 934, baseType: !552, size: 192, offset: 576)
!3120 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !176, file: !177, line: 935, baseType: !356, size: 64, offset: 768)
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !176, file: !177, line: 936, baseType: !3122, size: 192, offset: 832)
!3122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !177, line: 885, size: 192, elements: !3123)
!3123 = !{!3124, !3125, !3126, !3134, !3135, !3136}
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3122, file: !177, line: 886, baseType: !2926)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3122, file: !177, line: 887, baseType: !1357, size: 64)
!3126 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3122, file: !177, line: 888, baseType: !3127, size: 32, offset: 64)
!3127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !1359, line: 9, baseType: !210, size: 32, elements: !3128)
!3128 = !{!3129, !3130, !3131, !3132, !3133}
!3129 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!3130 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!3131 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!3132 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!3133 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3122, file: !177, line: 889, baseType: !260, size: 32, offset: 96)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3122, file: !177, line: 889, baseType: !260, size: 32, offset: 128)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3122, file: !177, line: 890, baseType: !18, size: 32, offset: 160)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !176, file: !177, line: 937, baseType: !1467, size: 64, offset: 1024)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !176, file: !177, line: 938, baseType: !3139, size: 256, offset: 1088)
!3139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !177, line: 896, size: 256, elements: !3140)
!3140 = !{!3141, !3142, !3143, !3144, !3145, !3146}
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3139, file: !177, line: 897, baseType: !146, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3139, file: !177, line: 898, baseType: !210, size: 32, offset: 64)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3139, file: !177, line: 899, baseType: !210, size: 32, offset: 96)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3139, file: !177, line: 902, baseType: !210, size: 32, offset: 128)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3139, file: !177, line: 903, baseType: !210, size: 32, offset: 160)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3139, file: !177, line: 904, baseType: !356, size: 64, offset: 192)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !176, file: !177, line: 940, baseType: !246, size: 64, offset: 1344)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !176, file: !177, line: 945, baseType: !170, size: 64, offset: 1408)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !176, file: !177, line: 949, baseType: !11, size: 128, offset: 1472)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !176, file: !177, line: 950, baseType: !11, size: 128, offset: 1600)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !176, file: !177, line: 952, baseType: !612, size: 64, offset: 1728)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !176, file: !177, line: 953, baseType: !784, size: 32, offset: 1792)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !176, file: !177, line: 954, baseType: !784, size: 32, offset: 1824)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !165, file: !121, line: 174, baseType: !172, size: 64, offset: 320)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !165, file: !121, line: 176, baseType: !3156, size: 64, offset: 384)
!3156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3157, size: 64)
!3157 = !DISubroutineType(types: !3158)
!3158 = !{!18, !175, !48, !164, !857}
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !153, file: !121, line: 90, baseType: !148, size: 64, offset: 192)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !153, file: !121, line: 91, baseType: !3161, size: 64, offset: 256)
!3161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !111, file: !40, line: 143, baseType: !3163, size: 64, offset: 256)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = !DISubroutineType(types: !3165)
!3165 = !{!3166, !48}
!3166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3167, size: 64)
!3167 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3168)
!3168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !3169, line: 39, size: 384, elements: !3170)
!3169 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!3170 = !{!3171, !3177, !3181, !3185, !3191, !3195}
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3168, file: !3169, line: 40, baseType: !3172, size: 32)
!3172 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !3169, line: 26, baseType: !210, size: 32, elements: !3173)
!3173 = !{!3174, !3175, !3176}
!3174 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!3175 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!3176 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!3177 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3168, file: !3169, line: 41, baseType: !3178, size: 64, offset: 64)
!3178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3179, size: 64)
!3179 = !DISubroutineType(types: !3180)
!3180 = !{!315}
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3168, file: !3169, line: 42, baseType: !3182, size: 64, offset: 128)
!3182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3183, size: 64)
!3183 = !DISubroutineType(types: !3184)
!3184 = !{!170}
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3168, file: !3169, line: 43, baseType: !3186, size: 64, offset: 192)
!3186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3187, size: 64)
!3187 = !DISubroutineType(types: !3188)
!3188 = !{!2069, !3189}
!3189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3190, size: 64)
!3190 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !3169, line: 19, flags: DIFlagFwdDecl)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3168, file: !3169, line: 44, baseType: !3192, size: 64, offset: 256)
!3192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3193, size: 64)
!3193 = !DISubroutineType(types: !3194)
!3194 = !{!2069}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3168, file: !3169, line: 45, baseType: !293, size: 64, offset: 320)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !111, file: !40, line: 144, baseType: !3197, size: 64, offset: 320)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!2069, !48}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !111, file: !40, line: 145, baseType: !3201, size: 64, offset: 384)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{null, !48, !3204, !3205}
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !39, file: !40, line: 70, baseType: !3207, size: 64, offset: 384)
!3207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3208, size: 64)
!3208 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !444, line: 123, size: 1024, elements: !3209)
!3209 = !{!3210, !3211, !3212, !3213, !3214, !3215, !3216, !3217, !3320, !3321, !3322, !3323, !3324}
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3208, file: !444, line: 124, baseType: !29, size: 32)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3208, file: !444, line: 125, baseType: !29, size: 32, offset: 32)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3208, file: !444, line: 135, baseType: !3207, size: 64, offset: 64)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3208, file: !444, line: 136, baseType: !43, size: 64, offset: 128)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3208, file: !444, line: 138, baseType: !635, size: 192, align: 64, offset: 192)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3208, file: !444, line: 140, baseType: !2069, size: 64, offset: 384)
!3216 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3208, file: !444, line: 141, baseType: !210, size: 32, offset: 448)
!3217 = !DIDerivedType(tag: DW_TAG_member, scope: !3208, file: !444, line: 142, baseType: !3218, size: 256, offset: 512)
!3218 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3208, file: !444, line: 142, size: 256, elements: !3219)
!3219 = !{!3220, !3260, !3264}
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3218, file: !444, line: 143, baseType: !3221, size: 192)
!3221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !444, line: 91, size: 192, elements: !3222)
!3222 = !{!3223, !3224, !3225}
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3221, file: !444, line: 92, baseType: !146, size: 64)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3221, file: !444, line: 94, baseType: !631, size: 64, offset: 64)
!3225 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3221, file: !444, line: 100, baseType: !3226, size: 64, offset: 128)
!3226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3227, size: 64)
!3227 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !444, line: 180, size: 704, elements: !3228)
!3228 = !{!3229, !3230, !3231, !3232, !3233, !3234, !3258, !3259}
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3227, file: !444, line: 182, baseType: !3207, size: 64)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3227, file: !444, line: 183, baseType: !210, size: 32, offset: 64)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3227, file: !444, line: 186, baseType: !1387, size: 192, offset: 128)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3227, file: !444, line: 187, baseType: !240, size: 32, offset: 320)
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3227, file: !444, line: 188, baseType: !240, size: 32, offset: 352)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3227, file: !444, line: 189, baseType: !3235, size: 64, offset: 384)
!3235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3236, size: 64)
!3236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !444, line: 168, size: 320, elements: !3237)
!3237 = !{!3238, !3242, !3246, !3250, !3254}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3236, file: !444, line: 169, baseType: !3239, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = !DISubroutineType(types: !3241)
!3241 = !{!18, !540, !3226}
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3236, file: !444, line: 171, baseType: !3243, size: 64, offset: 64)
!3243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3244, size: 64)
!3244 = !DISubroutineType(types: !3245)
!3245 = !{!18, !3207, !43, !137}
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3236, file: !444, line: 173, baseType: !3247, size: 64, offset: 128)
!3247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3248, size: 64)
!3248 = !DISubroutineType(types: !3249)
!3249 = !{!18, !3207}
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3236, file: !444, line: 174, baseType: !3251, size: 64, offset: 192)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3252, size: 64)
!3252 = !DISubroutineType(types: !3253)
!3253 = !{!18, !3207, !3207, !43}
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3236, file: !444, line: 176, baseType: !3255, size: 64, offset: 256)
!3255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3256, size: 64)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!18, !540, !3207, !3226}
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3227, file: !444, line: 192, baseType: !11, size: 128, offset: 448)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3227, file: !444, line: 194, baseType: !1368, size: 128, offset: 576)
!3260 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3218, file: !444, line: 144, baseType: !3261, size: 64)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !444, line: 103, size: 64, elements: !3262)
!3262 = !{!3263}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3261, file: !444, line: 104, baseType: !3207, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3218, file: !444, line: 145, baseType: !3265, size: 256)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !444, line: 107, size: 256, elements: !3266)
!3266 = !{!3267, !3315, !3318, !3319}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3265, file: !444, line: 108, baseType: !3268, size: 64)
!3268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3269, size: 64)
!3269 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3270)
!3270 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !444, line: 217, size: 768, elements: !3271)
!3271 = !{!3272, !3292, !3296, !3297, !3298, !3299, !3300, !3304, !3305, !3306, !3307, !3311}
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3270, file: !444, line: 222, baseType: !3273, size: 64)
!3273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3274, size: 64)
!3274 = !DISubroutineType(types: !3275)
!3275 = !{!18, !3276}
!3276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3277, size: 64)
!3277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !444, line: 197, size: 1088, elements: !3278)
!3278 = !{!3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291}
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3277, file: !444, line: 199, baseType: !3207, size: 64)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3277, file: !444, line: 200, baseType: !175, size: 64, offset: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3277, file: !444, line: 201, baseType: !540, size: 64, offset: 128)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3277, file: !444, line: 202, baseType: !170, size: 64, offset: 192)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3277, file: !444, line: 205, baseType: !552, size: 192, offset: 256)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3277, file: !444, line: 206, baseType: !552, size: 192, offset: 448)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3277, file: !444, line: 207, baseType: !18, size: 32, offset: 640)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3277, file: !444, line: 208, baseType: !11, size: 128, offset: 704)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3277, file: !444, line: 209, baseType: !96, size: 64, offset: 832)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3277, file: !444, line: 211, baseType: !143, size: 64, offset: 896)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3277, file: !444, line: 212, baseType: !315, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3277, file: !444, line: 213, baseType: !315, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3277, file: !444, line: 214, baseType: !885, size: 64, offset: 1024)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3270, file: !444, line: 223, baseType: !3293, size: 64, offset: 64)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3294, size: 64)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{null, !3276}
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3270, file: !444, line: 236, baseType: !584, size: 64, offset: 128)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3270, file: !444, line: 238, baseType: !571, size: 64, offset: 192)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3270, file: !444, line: 239, baseType: !580, size: 64, offset: 256)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3270, file: !444, line: 240, baseType: !576, size: 64, offset: 320)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3270, file: !444, line: 242, baseType: !3301, size: 64, offset: 384)
!3301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3302, size: 64)
!3302 = !DISubroutineType(types: !3303)
!3303 = !{!127, !3276, !96, !143, !356}
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3270, file: !444, line: 252, baseType: !143, size: 64, offset: 448)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3270, file: !444, line: 259, baseType: !315, size: 8, offset: 512)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3270, file: !444, line: 260, baseType: !3301, size: 64, offset: 576)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3270, file: !444, line: 263, baseType: !3308, size: 64, offset: 640)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 64)
!3309 = !DISubroutineType(types: !3310)
!3310 = !{!2859, !3276, !2861}
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3270, file: !444, line: 266, baseType: !3312, size: 64, offset: 704)
!3312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3313, size: 64)
!3313 = !DISubroutineType(types: !3314)
!3314 = !{!18, !3276, !857}
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3265, file: !444, line: 109, baseType: !3316, size: 64, offset: 64)
!3316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3317, size: 64)
!3317 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !444, line: 31, flags: DIFlagFwdDecl)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3265, file: !444, line: 110, baseType: !356, size: 64, offset: 128)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3265, file: !444, line: 111, baseType: !3207, size: 64, offset: 192)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3208, file: !444, line: 148, baseType: !170, size: 64, offset: 768)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3208, file: !444, line: 154, baseType: !246, size: 64, offset: 832)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3208, file: !444, line: 156, baseType: !138, size: 16, offset: 896)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3208, file: !444, line: 157, baseType: !137, size: 16, offset: 912)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3208, file: !444, line: 158, baseType: !3325, size: 64, offset: 960)
!3325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3326, size: 64)
!3326 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !444, line: 32, flags: DIFlagFwdDecl)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !39, file: !40, line: 71, baseType: !20, size: 32, offset: 448)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !39, file: !40, line: 75, baseType: !210, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !39, file: !40, line: 76, baseType: !210, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !39, file: !40, line: 77, baseType: !210, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !39, file: !40, line: 78, baseType: !210, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !39, file: !40, line: 79, baseType: !210, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !35, file: !36, line: 463, baseType: !34, size: 64, offset: 512)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !35, file: !36, line: 465, baseType: !3335, size: 64, offset: 576)
!3335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3336, size: 64)
!3336 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !36, line: 36, flags: DIFlagFwdDecl)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !35, file: !36, line: 467, baseType: !43, size: 64, offset: 640)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !35, file: !36, line: 468, baseType: !3339, size: 64, offset: 704)
!3339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3340, size: 64)
!3340 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3341)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !36, line: 87, size: 384, elements: !3342)
!3342 = !{!3343, !3344, !3345, !3349, !3354, !3358}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3341, file: !36, line: 88, baseType: !43, size: 64)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3341, file: !36, line: 89, baseType: !150, size: 64, offset: 64)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3341, file: !36, line: 90, baseType: !3346, size: 64, offset: 128)
!3346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3347, size: 64)
!3347 = !DISubroutineType(types: !3348)
!3348 = !{!18, !34, !91}
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3341, file: !36, line: 91, baseType: !3350, size: 64, offset: 192)
!3350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3351, size: 64)
!3351 = !DISubroutineType(types: !3352)
!3352 = !{!96, !34, !3353, !3204, !3205}
!3353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !137, size: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3341, file: !36, line: 93, baseType: !3355, size: 64, offset: 256)
!3355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3356, size: 64)
!3356 = !DISubroutineType(types: !3357)
!3357 = !{null, !34}
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3341, file: !36, line: 95, baseType: !3359, size: 64, offset: 320)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3361)
!3361 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !3362, line: 278, size: 1472, elements: !3363)
!3362 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!3363 = !{!3364, !3368, !3369, !3370, !3371, !3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3380, !3381, !3382, !3383, !3384, !3385, !3386, !3387, !3388, !3389}
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3361, file: !3362, line: 279, baseType: !3365, size: 64)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{!18, !34}
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3361, file: !3362, line: 280, baseType: !3355, size: 64, offset: 64)
!3369 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3361, file: !3362, line: 281, baseType: !3365, size: 64, offset: 128)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3361, file: !3362, line: 282, baseType: !3365, size: 64, offset: 192)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3361, file: !3362, line: 283, baseType: !3365, size: 64, offset: 256)
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3361, file: !3362, line: 284, baseType: !3365, size: 64, offset: 320)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3361, file: !3362, line: 285, baseType: !3365, size: 64, offset: 384)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3361, file: !3362, line: 286, baseType: !3365, size: 64, offset: 448)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3361, file: !3362, line: 287, baseType: !3365, size: 64, offset: 512)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3361, file: !3362, line: 288, baseType: !3365, size: 64, offset: 576)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3361, file: !3362, line: 289, baseType: !3365, size: 64, offset: 640)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3361, file: !3362, line: 290, baseType: !3365, size: 64, offset: 704)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3361, file: !3362, line: 291, baseType: !3365, size: 64, offset: 768)
!3380 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3361, file: !3362, line: 292, baseType: !3365, size: 64, offset: 832)
!3381 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3361, file: !3362, line: 293, baseType: !3365, size: 64, offset: 896)
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3361, file: !3362, line: 294, baseType: !3365, size: 64, offset: 960)
!3383 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3361, file: !3362, line: 295, baseType: !3365, size: 64, offset: 1024)
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3361, file: !3362, line: 296, baseType: !3365, size: 64, offset: 1088)
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3361, file: !3362, line: 297, baseType: !3365, size: 64, offset: 1152)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3361, file: !3362, line: 298, baseType: !3365, size: 64, offset: 1216)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3361, file: !3362, line: 299, baseType: !3365, size: 64, offset: 1280)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3361, file: !3362, line: 300, baseType: !3365, size: 64, offset: 1344)
!3389 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3361, file: !3362, line: 301, baseType: !3365, size: 64, offset: 1408)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !35, file: !36, line: 470, baseType: !3391, size: 64, offset: 768)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3393, line: 82, size: 1408, elements: !3394)
!3393 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3394 = !{!3395, !3396, !3397, !3398, !3399, !3400, !3401, !3466, !3467, !3468, !3469, !3470, !3471, !3472, !3473, !3474, !3475, !3476, !3477, !3478, !3482, !3485, !3486}
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3392, file: !3393, line: 83, baseType: !43, size: 64)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3392, file: !3393, line: 84, baseType: !43, size: 64, offset: 64)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3392, file: !3393, line: 85, baseType: !34, size: 64, offset: 128)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3392, file: !3393, line: 86, baseType: !150, size: 64, offset: 192)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3392, file: !3393, line: 87, baseType: !150, size: 64, offset: 256)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3392, file: !3393, line: 88, baseType: !150, size: 64, offset: 320)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3392, file: !3393, line: 90, baseType: !3402, size: 64, offset: 384)
!3402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3403, size: 64)
!3403 = !DISubroutineType(types: !3404)
!3404 = !{!18, !34, !3405}
!3405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3406, size: 64)
!3406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !3407, line: 95, size: 1152, elements: !3408)
!3407 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!3408 = !{!3409, !3410, !3411, !3412, !3413, !3414, !3420, !3433, !3446, !3447, !3448, !3449, !3450, !3458, !3459, !3460, !3461, !3462, !3463}
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3406, file: !3407, line: 96, baseType: !43, size: 64)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3406, file: !3407, line: 97, baseType: !3391, size: 64, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3406, file: !3407, line: 99, baseType: !458, size: 64, offset: 128)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3406, file: !3407, line: 100, baseType: !43, size: 64, offset: 192)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3406, file: !3407, line: 102, baseType: !315, size: 8, offset: 256)
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3406, file: !3407, line: 103, baseType: !3415, size: 32, offset: 288)
!3415 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !3407, line: 44, baseType: !210, size: 32, elements: !3416)
!3416 = !{!3417, !3418, !3419}
!3417 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!3418 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!3419 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3406, file: !3407, line: 105, baseType: !3421, size: 64, offset: 320)
!3421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3422, size: 64)
!3422 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3423)
!3423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3424, line: 262, size: 1600, elements: !3425)
!3424 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3425 = !{!3426, !3427, !3428, !3432}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3423, file: !3424, line: 263, baseType: !2655, size: 256)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3423, file: !3424, line: 264, baseType: !2655, size: 256, offset: 256)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3423, file: !3424, line: 265, baseType: !3429, size: 1024, offset: 512)
!3429 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 1024, elements: !3430)
!3430 = !{!3431}
!3431 = !DISubrange(count: 128)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3423, file: !3424, line: 266, baseType: !2069, size: 64, offset: 1536)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3406, file: !3407, line: 106, baseType: !3434, size: 64, offset: 384)
!3434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3435, size: 64)
!3435 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3436)
!3436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3424, line: 210, size: 256, elements: !3437)
!3437 = !{!3438, !3442, !3444, !3445}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3436, file: !3424, line: 211, baseType: !3439, size: 72)
!3439 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1228, size: 72, elements: !3440)
!3440 = !{!3441}
!3441 = !DISubrange(count: 9)
!3442 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3436, file: !3424, line: 212, baseType: !3443, size: 64, offset: 128)
!3443 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3424, line: 14, baseType: !146)
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3436, file: !3424, line: 213, baseType: !242, size: 32, offset: 192)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3436, file: !3424, line: 214, baseType: !242, size: 32, offset: 224)
!3446 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3406, file: !3407, line: 108, baseType: !3365, size: 64, offset: 448)
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3406, file: !3407, line: 109, baseType: !3355, size: 64, offset: 512)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3406, file: !3407, line: 110, baseType: !3365, size: 64, offset: 576)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3406, file: !3407, line: 111, baseType: !3355, size: 64, offset: 640)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3406, file: !3407, line: 112, baseType: !3451, size: 64, offset: 704)
!3451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3452, size: 64)
!3452 = !DISubroutineType(types: !3453)
!3453 = !{!18, !34, !3454}
!3454 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !3362, line: 52, baseType: !3455)
!3455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !3362, line: 50, size: 32, elements: !3456)
!3456 = !{!3457}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3455, file: !3362, line: 51, baseType: !18, size: 32)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3406, file: !3407, line: 113, baseType: !3365, size: 64, offset: 768)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3406, file: !3407, line: 114, baseType: !150, size: 64, offset: 832)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3406, file: !3407, line: 115, baseType: !150, size: 64, offset: 896)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3406, file: !3407, line: 117, baseType: !3359, size: 64, offset: 960)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3406, file: !3407, line: 118, baseType: !3355, size: 64, offset: 1024)
!3463 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3406, file: !3407, line: 120, baseType: !3464, size: 64, offset: 1088)
!3464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3465, size: 64)
!3465 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !3407, line: 120, flags: DIFlagFwdDecl)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3392, file: !3393, line: 91, baseType: !3346, size: 64, offset: 448)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3392, file: !3393, line: 92, baseType: !3365, size: 64, offset: 512)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3392, file: !3393, line: 93, baseType: !3355, size: 64, offset: 576)
!3469 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3392, file: !3393, line: 94, baseType: !3365, size: 64, offset: 640)
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3392, file: !3393, line: 95, baseType: !3355, size: 64, offset: 704)
!3471 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3392, file: !3393, line: 97, baseType: !3365, size: 64, offset: 768)
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3392, file: !3393, line: 98, baseType: !3365, size: 64, offset: 832)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3392, file: !3393, line: 100, baseType: !3451, size: 64, offset: 896)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3392, file: !3393, line: 101, baseType: !3365, size: 64, offset: 960)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3392, file: !3393, line: 103, baseType: !3365, size: 64, offset: 1024)
!3476 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3392, file: !3393, line: 105, baseType: !3365, size: 64, offset: 1088)
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3392, file: !3393, line: 107, baseType: !3359, size: 64, offset: 1152)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3392, file: !3393, line: 109, baseType: !3479, size: 64, offset: 1216)
!3479 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3480, size: 64)
!3480 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3481)
!3481 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3393, line: 109, flags: DIFlagFwdDecl)
!3482 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3392, file: !3393, line: 111, baseType: !3483, size: 64, offset: 1280)
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3393, line: 111, flags: DIFlagFwdDecl)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3392, file: !3393, line: 112, baseType: !473, offset: 1344)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3392, file: !3393, line: 114, baseType: !315, size: 8, offset: 1344)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !35, file: !36, line: 471, baseType: !3405, size: 64, offset: 832)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !35, file: !36, line: 473, baseType: !170, size: 64, offset: 896)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !35, file: !36, line: 475, baseType: !170, size: 64, offset: 960)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !35, file: !36, line: 480, baseType: !552, size: 192, offset: 1024)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !35, file: !36, line: 484, baseType: !3492, size: 576, offset: 1216)
!3492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !36, line: 361, size: 576, elements: !3493)
!3493 = !{!3494, !3495, !3496, !3497, !3498, !3499}
!3494 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3492, file: !36, line: 362, baseType: !11, size: 128)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3492, file: !36, line: 363, baseType: !11, size: 128, offset: 128)
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3492, file: !36, line: 364, baseType: !11, size: 128, offset: 256)
!3497 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3492, file: !36, line: 365, baseType: !11, size: 128, offset: 384)
!3498 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3492, file: !36, line: 366, baseType: !315, size: 8, offset: 512)
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3492, file: !36, line: 367, baseType: !3500, size: 32, offset: 544)
!3500 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !36, line: 343, baseType: !210, size: 32, elements: !3501)
!3501 = !{!3502, !3503, !3504, !3505}
!3502 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!3503 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!3504 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!3505 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !35, file: !36, line: 485, baseType: !3507, size: 2304, offset: 1792)
!3507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !3362, line: 565, size: 2304, elements: !3508)
!3508 = !{!3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3562, !3563, !3564, !3565, !3566, !3567, !3568, !3569, !3570, !3571, !3572, !3573, !3574, !3575, !3576, !3577, !3578, !3579, !3580, !3581, !3582, !3583, !3584, !3585, !3586, !3594, !3601, !3602, !3603, !3604, !3605, !3606, !3607, !3617, !3621}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3507, file: !3362, line: 566, baseType: !3454, size: 32)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3507, file: !3362, line: 567, baseType: !210, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3507, file: !3362, line: 568, baseType: !210, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3507, file: !3362, line: 569, baseType: !315, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3507, file: !3362, line: 570, baseType: !315, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3507, file: !3362, line: 571, baseType: !315, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3507, file: !3362, line: 572, baseType: !315, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3507, file: !3362, line: 573, baseType: !315, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3507, file: !3362, line: 574, baseType: !315, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3507, file: !3362, line: 575, baseType: !315, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3507, file: !3362, line: 576, baseType: !315, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3507, file: !3362, line: 577, baseType: !240, size: 32, offset: 64)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3507, file: !3362, line: 578, baseType: !55, offset: 96)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3507, file: !3362, line: 580, baseType: !11, size: 128, offset: 128)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3507, file: !3362, line: 581, baseType: !1422, size: 192, offset: 256)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3507, file: !3362, line: 582, baseType: !3525, size: 64, offset: 448)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3527, line: 43, size: 1472, elements: !3528)
!3527 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3528 = !{!3529, !3530, !3531, !3532, !3533, !3536, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561}
!3529 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3526, file: !3527, line: 44, baseType: !43, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3526, file: !3527, line: 45, baseType: !18, size: 32, offset: 64)
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3526, file: !3527, line: 46, baseType: !11, size: 128, offset: 128)
!3532 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3526, file: !3527, line: 47, baseType: !55, offset: 256)
!3533 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3526, file: !3527, line: 48, baseType: !3534, size: 64, offset: 256)
!3534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3535, size: 64)
!3535 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !3362, line: 533, flags: DIFlagFwdDecl)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3526, file: !3527, line: 49, baseType: !3537, size: 320, offset: 320)
!3537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3538, line: 11, size: 320, elements: !3539)
!3538 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3539 = !{!3540, !3541, !3542, !3547}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3537, file: !3538, line: 16, baseType: !467, size: 128)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3537, file: !3538, line: 17, baseType: !146, size: 64, offset: 128)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3537, file: !3538, line: 18, baseType: !3543, size: 64, offset: 192)
!3543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3544, size: 64)
!3544 = !DISubroutineType(types: !3545)
!3545 = !{null, !3546}
!3546 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3537, size: 64)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3537, file: !3538, line: 19, baseType: !240, size: 32, offset: 256)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3526, file: !3527, line: 50, baseType: !146, size: 64, offset: 640)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3526, file: !3527, line: 51, baseType: !1171, size: 64, offset: 704)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3526, file: !3527, line: 52, baseType: !1171, size: 64, offset: 768)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3526, file: !3527, line: 53, baseType: !1171, size: 64, offset: 832)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3526, file: !3527, line: 54, baseType: !1171, size: 64, offset: 896)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3526, file: !3527, line: 55, baseType: !1171, size: 64, offset: 960)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3526, file: !3527, line: 56, baseType: !146, size: 64, offset: 1024)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3526, file: !3527, line: 57, baseType: !146, size: 64, offset: 1088)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3526, file: !3527, line: 58, baseType: !146, size: 64, offset: 1152)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3526, file: !3527, line: 59, baseType: !146, size: 64, offset: 1216)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3526, file: !3527, line: 60, baseType: !146, size: 64, offset: 1280)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3526, file: !3527, line: 61, baseType: !34, size: 64, offset: 1344)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3526, file: !3527, line: 62, baseType: !315, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3526, file: !3527, line: 63, baseType: !315, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3507, file: !3362, line: 583, baseType: !315, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3563 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3507, file: !3362, line: 584, baseType: !315, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3564 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3507, file: !3362, line: 585, baseType: !315, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3565 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3507, file: !3362, line: 586, baseType: !210, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3507, file: !3362, line: 587, baseType: !210, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3507, file: !3362, line: 592, baseType: !1162, size: 512, offset: 576)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3507, file: !3362, line: 593, baseType: !246, size: 64, offset: 1088)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3507, file: !3362, line: 594, baseType: !1899, size: 256, offset: 1152)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3507, file: !3362, line: 595, baseType: !1368, size: 128, offset: 1408)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3507, file: !3362, line: 596, baseType: !3534, size: 64, offset: 1536)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3507, file: !3362, line: 597, baseType: !29, size: 32, offset: 1600)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3507, file: !3362, line: 598, baseType: !29, size: 32, offset: 1632)
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3507, file: !3362, line: 599, baseType: !210, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3575 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3507, file: !3362, line: 600, baseType: !210, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3576 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3507, file: !3362, line: 601, baseType: !210, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3577 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3507, file: !3362, line: 602, baseType: !210, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3507, file: !3362, line: 603, baseType: !210, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3579 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3507, file: !3362, line: 604, baseType: !315, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3507, file: !3362, line: 605, baseType: !210, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3507, file: !3362, line: 606, baseType: !210, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3507, file: !3362, line: 607, baseType: !210, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3507, file: !3362, line: 608, baseType: !210, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3507, file: !3362, line: 609, baseType: !210, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3507, file: !3362, line: 610, baseType: !210, size: 32, offset: 1696)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3507, file: !3362, line: 611, baseType: !3587, size: 32, offset: 1728)
!3587 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !3362, line: 524, baseType: !210, size: 32, elements: !3588)
!3588 = !{!3589, !3590, !3591, !3592, !3593}
!3589 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!3590 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!3591 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!3592 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!3593 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3507, file: !3362, line: 612, baseType: !3595, size: 32, offset: 1760)
!3595 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !3362, line: 502, baseType: !210, size: 32, elements: !3596)
!3596 = !{!3597, !3598, !3599, !3600}
!3597 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!3598 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!3599 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!3600 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!3601 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3507, file: !3362, line: 613, baseType: !18, size: 32, offset: 1792)
!3602 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3507, file: !3362, line: 614, baseType: !18, size: 32, offset: 1824)
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3507, file: !3362, line: 615, baseType: !246, size: 64, offset: 1856)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3507, file: !3362, line: 616, baseType: !246, size: 64, offset: 1920)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3507, file: !3362, line: 617, baseType: !246, size: 64, offset: 1984)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3507, file: !3362, line: 618, baseType: !246, size: 64, offset: 2048)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3507, file: !3362, line: 620, baseType: !3608, size: 64, offset: 2112)
!3608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3609, size: 64)
!3609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !3362, line: 536, size: 256, elements: !3610)
!3610 = !{!3611, !3612, !3613, !3614}
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3609, file: !3362, line: 537, baseType: !55)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3609, file: !3362, line: 538, baseType: !210, size: 32)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3609, file: !3362, line: 540, baseType: !11, size: 128, offset: 64)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3609, file: !3362, line: 543, baseType: !3615, size: 64, offset: 192)
!3615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3616, size: 64)
!3616 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !3362, line: 534, flags: DIFlagFwdDecl)
!3617 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3507, file: !3362, line: 621, baseType: !3618, size: 64, offset: 2176)
!3618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3619, size: 64)
!3619 = !DISubroutineType(types: !3620)
!3620 = !{null, !34, !1325}
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3507, file: !3362, line: 622, baseType: !3622, size: 64, offset: 2240)
!3622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3623, size: 64)
!3623 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !3362, line: 622, flags: DIFlagFwdDecl)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !35, file: !36, line: 486, baseType: !3625, size: 64, offset: 4096)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !3362, line: 642, size: 1792, elements: !3627)
!3627 = !{!3628, !3629, !3630, !3634, !3635, !3636}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3626, file: !3362, line: 643, baseType: !3361, size: 1472)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3626, file: !3362, line: 644, baseType: !3365, size: 64, offset: 1472)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3626, file: !3362, line: 645, baseType: !3631, size: 64, offset: 1536)
!3631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3632, size: 64)
!3632 = !DISubroutineType(types: !3633)
!3633 = !{null, !34, !315}
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3626, file: !3362, line: 646, baseType: !3365, size: 64, offset: 1600)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3626, file: !3362, line: 647, baseType: !3355, size: 64, offset: 1664)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3626, file: !3362, line: 648, baseType: !3355, size: 64, offset: 1728)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !35, file: !36, line: 493, baseType: !3638, size: 64, offset: 4160)
!3638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3639, size: 64)
!3639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !3640, line: 162, size: 1088, elements: !3641)
!3640 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!3641 = !{!3642, !3643, !3644, !3830, !3831, !3832, !3833, !3834, !3835, !3838, !3839, !3840, !3841, !3842, !3843, !3844}
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3639, file: !3640, line: 163, baseType: !11, size: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3639, file: !3640, line: 164, baseType: !43, size: 64, offset: 128)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3639, file: !3640, line: 165, baseType: !3645, size: 64, offset: 192)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3647)
!3647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !3640, line: 105, size: 640, elements: !3648)
!3648 = !{!3649, !3780, !3791, !3796, !3800, !3807, !3811, !3815, !3822, !3826}
!3649 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3647, file: !3640, line: 106, baseType: !3650, size: 64)
!3650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3651, size: 64)
!3651 = !DISubroutineType(types: !3652)
!3652 = !{!18, !3638, !3653, !3767}
!3653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3654, size: 64)
!3654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3655, line: 51, size: 1344, elements: !3656)
!3655 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3656 = !{!3657, !3658, !3660, !3661, !3751, !3760, !3761, !3762, !3763, !3764, !3765, !3766}
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3654, file: !3655, line: 52, baseType: !43, size: 64)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3654, file: !3655, line: 53, baseType: !3659, size: 32, offset: 64)
!3659 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3655, line: 28, baseType: !240)
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3654, file: !3655, line: 54, baseType: !43, size: 64, offset: 128)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3654, file: !3655, line: 55, baseType: !3662, size: 192, offset: 192)
!3662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3663, line: 17, size: 192, elements: !3664)
!3663 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3664 = !{!3665, !3667, !3750}
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3662, file: !3663, line: 18, baseType: !3666, size: 64)
!3666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3662, size: 64)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3662, file: !3663, line: 19, baseType: !3668, size: 64, offset: 64)
!3668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3669, size: 64)
!3669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3670)
!3670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3663, line: 110, size: 1152, elements: !3671)
!3671 = !{!3672, !3676, !3680, !3686, !3692, !3696, !3700, !3705, !3709, !3710, !3714, !3718, !3722, !3733, !3734, !3735, !3736, !3746}
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3670, file: !3663, line: 111, baseType: !3673, size: 64)
!3673 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3674, size: 64)
!3674 = !DISubroutineType(types: !3675)
!3675 = !{!3666, !3666}
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3670, file: !3663, line: 112, baseType: !3677, size: 64, offset: 64)
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !3666}
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3670, file: !3663, line: 113, baseType: !3681, size: 64, offset: 128)
!3681 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3682, size: 64)
!3682 = !DISubroutineType(types: !3683)
!3683 = !{!315, !3684}
!3684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3685, size: 64)
!3685 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3662)
!3686 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3670, file: !3663, line: 114, baseType: !3687, size: 64, offset: 192)
!3687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3688, size: 64)
!3688 = !DISubroutineType(types: !3689)
!3689 = !{!2069, !3684, !3690}
!3690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3691, size: 64)
!3691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !35)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3670, file: !3663, line: 116, baseType: !3693, size: 64, offset: 256)
!3693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3694, size: 64)
!3694 = !DISubroutineType(types: !3695)
!3695 = !{!315, !3684, !43}
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3670, file: !3663, line: 118, baseType: !3697, size: 64, offset: 320)
!3697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3698, size: 64)
!3698 = !DISubroutineType(types: !3699)
!3699 = !{!18, !3684, !43, !210, !170, !143}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3670, file: !3663, line: 123, baseType: !3701, size: 64, offset: 384)
!3701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3702, size: 64)
!3702 = !DISubroutineType(types: !3703)
!3703 = !{!18, !3684, !43, !3704, !143}
!3704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !43, size: 64)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3670, file: !3663, line: 126, baseType: !3706, size: 64, offset: 448)
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3707, size: 64)
!3707 = !DISubroutineType(types: !3708)
!3708 = !{!43, !3684}
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3670, file: !3663, line: 127, baseType: !3706, size: 64, offset: 512)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3670, file: !3663, line: 128, baseType: !3711, size: 64, offset: 576)
!3711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3712, size: 64)
!3712 = !DISubroutineType(types: !3713)
!3713 = !{!3666, !3684}
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3670, file: !3663, line: 130, baseType: !3715, size: 64, offset: 640)
!3715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3716, size: 64)
!3716 = !DISubroutineType(types: !3717)
!3717 = !{!3666, !3684, !3666}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3670, file: !3663, line: 133, baseType: !3719, size: 64, offset: 704)
!3719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3720, size: 64)
!3720 = !DISubroutineType(types: !3721)
!3721 = !{!3666, !3684, !43}
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3670, file: !3663, line: 135, baseType: !3723, size: 64, offset: 768)
!3723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3724, size: 64)
!3724 = !DISubroutineType(types: !3725)
!3725 = !{!18, !3684, !43, !43, !210, !210, !3726}
!3726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3727, size: 64)
!3727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3663, line: 43, size: 640, elements: !3728)
!3728 = !{!3729, !3730, !3731}
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3727, file: !3663, line: 44, baseType: !3666, size: 64)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !3727, file: !3663, line: 45, baseType: !210, size: 32, offset: 64)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !3727, file: !3663, line: 46, baseType: !3732, size: 512, offset: 128)
!3732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !246, size: 512, elements: !1205)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3670, file: !3663, line: 140, baseType: !3715, size: 64, offset: 832)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3670, file: !3663, line: 143, baseType: !3711, size: 64, offset: 896)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3670, file: !3663, line: 145, baseType: !3673, size: 64, offset: 960)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3670, file: !3663, line: 146, baseType: !3737, size: 64, offset: 1024)
!3737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3738, size: 64)
!3738 = !DISubroutineType(types: !3739)
!3739 = !{!18, !3684, !3740}
!3740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3741, size: 64)
!3741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3663, line: 29, size: 128, elements: !3742)
!3742 = !{!3743, !3744, !3745}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !3741, file: !3663, line: 30, baseType: !210, size: 32)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3741, file: !3663, line: 31, baseType: !210, size: 32, offset: 32)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !3741, file: !3663, line: 32, baseType: !3684, size: 64, offset: 64)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3670, file: !3663, line: 148, baseType: !3747, size: 64, offset: 1088)
!3747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3748, size: 64)
!3748 = !DISubroutineType(types: !3749)
!3749 = !{!18, !3684, !34}
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3662, file: !3663, line: 20, baseType: !34, size: 64, offset: 128)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3654, file: !3655, line: 57, baseType: !3752, size: 64, offset: 384)
!3752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3753, size: 64)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3655, line: 31, size: 704, elements: !3754)
!3754 = !{!3755, !3756, !3757, !3758, !3759}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3753, file: !3655, line: 32, baseType: !96, size: 64)
!3756 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3753, file: !3655, line: 33, baseType: !18, size: 32, offset: 64)
!3757 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3753, file: !3655, line: 34, baseType: !170, size: 64, offset: 128)
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3753, file: !3655, line: 35, baseType: !3752, size: 64, offset: 192)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3753, file: !3655, line: 43, baseType: !165, size: 448, offset: 256)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3654, file: !3655, line: 58, baseType: !3752, size: 64, offset: 448)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3654, file: !3655, line: 59, baseType: !3653, size: 64, offset: 512)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3654, file: !3655, line: 60, baseType: !3653, size: 64, offset: 576)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3654, file: !3655, line: 61, baseType: !3653, size: 64, offset: 640)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3654, file: !3655, line: 63, baseType: !39, size: 512, offset: 704)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3654, file: !3655, line: 65, baseType: !146, size: 64, offset: 1216)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3654, file: !3655, line: 66, baseType: !170, size: 64, offset: 1280)
!3767 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !3640, line: 76, baseType: !210, size: 32, elements: !3768)
!3768 = !{!3769, !3770, !3771, !3772, !3773, !3774, !3775, !3776, !3777, !3778, !3779}
!3769 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!3770 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!3771 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!3772 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!3773 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!3774 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!3775 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!3776 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!3777 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!3778 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!3779 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3647, file: !3640, line: 108, baseType: !3781, size: 64, offset: 64)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DISubroutineType(types: !3783)
!3783 = !{!18, !3638, !3784, !3767}
!3784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3785, size: 64)
!3785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !3640, line: 63, size: 640, elements: !3786)
!3786 = !{!3787, !3788, !3789}
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3785, file: !3640, line: 64, baseType: !3666, size: 64)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3785, file: !3640, line: 65, baseType: !18, size: 32, offset: 64)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3785, file: !3640, line: 66, baseType: !3790, size: 512, offset: 96)
!3790 = !DICompositeType(tag: DW_TAG_array_type, baseType: !240, size: 512, elements: !1653)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3647, file: !3640, line: 110, baseType: !3792, size: 64, offset: 128)
!3792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3793, size: 64)
!3793 = !DISubroutineType(types: !3794)
!3794 = !{!18, !3638, !210, !3795}
!3795 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !12, line: 164, baseType: !146)
!3796 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3647, file: !3640, line: 111, baseType: !3797, size: 64, offset: 192)
!3797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3798, size: 64)
!3798 = !DISubroutineType(types: !3799)
!3799 = !{null, !3638, !210}
!3800 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3647, file: !3640, line: 112, baseType: !3801, size: 64, offset: 256)
!3801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3802, size: 64)
!3802 = !DISubroutineType(types: !3803)
!3803 = !{!18, !3638, !3653, !3804, !210, !3806, !2638}
!3804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3805, size: 64)
!3805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !240)
!3806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !146, size: 64)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3647, file: !3640, line: 117, baseType: !3808, size: 64, offset: 320)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DISubroutineType(types: !3810)
!3810 = !{!18, !3638, !210, !210, !170}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3647, file: !3640, line: 119, baseType: !3812, size: 64, offset: 384)
!3812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3813, size: 64)
!3813 = !DISubroutineType(types: !3814)
!3814 = !{null, !3638, !210, !210}
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3647, file: !3640, line: 121, baseType: !3816, size: 64, offset: 448)
!3816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3817, size: 64)
!3817 = !DISubroutineType(types: !3818)
!3818 = !{!18, !3638, !3819, !315}
!3819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3820, size: 64)
!3820 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !3821, line: 11, flags: DIFlagFwdDecl)
!3821 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3647, file: !3640, line: 122, baseType: !3823, size: 64, offset: 512)
!3823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3824, size: 64)
!3824 = !DISubroutineType(types: !3825)
!3825 = !{null, !3638, !3819}
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3647, file: !3640, line: 123, baseType: !3827, size: 64, offset: 576)
!3827 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3828, size: 64)
!3828 = !DISubroutineType(types: !3829)
!3829 = !{!18, !3638, !3784, !3806, !2638}
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3639, file: !3640, line: 166, baseType: !170, size: 64, offset: 256)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3639, file: !3640, line: 167, baseType: !210, size: 32, offset: 320)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3639, file: !3640, line: 168, baseType: !210, size: 32, offset: 352)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3639, file: !3640, line: 171, baseType: !3666, size: 64, offset: 384)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3639, file: !3640, line: 172, baseType: !3767, size: 32, offset: 448)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3639, file: !3640, line: 173, baseType: !3836, size: 64, offset: 512)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !3640, line: 134, flags: DIFlagFwdDecl)
!3838 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3639, file: !3640, line: 175, baseType: !3638, size: 64, offset: 576)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3639, file: !3640, line: 182, baseType: !3795, size: 64, offset: 640)
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3639, file: !3640, line: 183, baseType: !210, size: 32, offset: 704)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3639, file: !3640, line: 184, baseType: !210, size: 32, offset: 736)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3639, file: !3640, line: 185, baseType: !617, size: 128, offset: 768)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3639, file: !3640, line: 186, baseType: !552, size: 192, offset: 896)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3639, file: !3640, line: 187, baseType: !3845, offset: 1088)
!3845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, elements: !2273)
!3846 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !35, file: !36, line: 499, baseType: !11, size: 128, offset: 4224)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !35, file: !36, line: 502, baseType: !3848, size: 64, offset: 4352)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3849, size: 64)
!3849 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3850)
!3850 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !36, line: 502, flags: DIFlagFwdDecl)
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !35, file: !36, line: 504, baseType: !3852, size: 64, offset: 4416)
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !35, file: !36, line: 505, baseType: !246, size: 64, offset: 4480)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !35, file: !36, line: 510, baseType: !246, size: 64, offset: 4544)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !35, file: !36, line: 511, baseType: !3856, size: 64, offset: 4608)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3858)
!3858 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !36, line: 511, flags: DIFlagFwdDecl)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !35, file: !36, line: 513, baseType: !3860, size: 64, offset: 4672)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !36, line: 288, size: 128, elements: !3862)
!3862 = !{!3863, !3864}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !3861, file: !36, line: 293, baseType: !210, size: 32)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !3861, file: !36, line: 294, baseType: !146, size: 64, offset: 64)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !35, file: !36, line: 515, baseType: !11, size: 128, offset: 4736)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !35, file: !36, line: 526, baseType: !3867, offset: 4864)
!3867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !3868, line: 5, elements: !69)
!3868 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !35, file: !36, line: 528, baseType: !3653, size: 64, offset: 4864)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !35, file: !36, line: 529, baseType: !3666, size: 64, offset: 4928)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !35, file: !36, line: 534, baseType: !338, size: 32, offset: 4992)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !35, file: !36, line: 535, baseType: !240, size: 32, offset: 5024)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !35, file: !36, line: 537, baseType: !55, offset: 5056)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !35, file: !36, line: 538, baseType: !11, size: 128, offset: 5056)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !35, file: !36, line: 540, baseType: !3876, size: 64, offset: 5184)
!3876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3877, size: 64)
!3877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !3878, line: 54, size: 960, elements: !3879)
!3878 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!3879 = !{!3880, !3881, !3882, !3883, !3884, !3885, !3886, !3890, !3894, !3895, !3896, !3897, !3901, !3905, !3906}
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3877, file: !3878, line: 55, baseType: !43, size: 64)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3877, file: !3878, line: 56, baseType: !458, size: 64, offset: 64)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !3877, file: !3878, line: 58, baseType: !150, size: 64, offset: 128)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3877, file: !3878, line: 59, baseType: !150, size: 64, offset: 192)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !3877, file: !3878, line: 60, baseType: !48, size: 64, offset: 256)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !3877, file: !3878, line: 62, baseType: !3346, size: 64, offset: 320)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3877, file: !3878, line: 63, baseType: !3887, size: 64, offset: 384)
!3887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3888, size: 64)
!3888 = !DISubroutineType(types: !3889)
!3889 = !{!96, !34, !3353}
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !3877, file: !3878, line: 65, baseType: !3891, size: 64, offset: 448)
!3891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3892, size: 64)
!3892 = !DISubroutineType(types: !3893)
!3893 = !{null, !3876}
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !3877, file: !3878, line: 66, baseType: !3355, size: 64, offset: 512)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !3877, file: !3878, line: 68, baseType: !3365, size: 64, offset: 576)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !3877, file: !3878, line: 70, baseType: !3166, size: 64, offset: 640)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3877, file: !3878, line: 71, baseType: !3898, size: 64, offset: 704)
!3898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3899, size: 64)
!3899 = !DISubroutineType(types: !3900)
!3900 = !{!2069, !34}
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3877, file: !3878, line: 73, baseType: !3902, size: 64, offset: 768)
!3902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3903, size: 64)
!3903 = !DISubroutineType(types: !3904)
!3904 = !{null, !34, !3204, !3205}
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3877, file: !3878, line: 75, baseType: !3359, size: 64, offset: 832)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3877, file: !3878, line: 77, baseType: !3483, size: 64, offset: 896)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !35, file: !36, line: 541, baseType: !150, size: 64, offset: 5248)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !35, file: !36, line: 543, baseType: !3355, size: 64, offset: 5312)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !35, file: !36, line: 544, baseType: !3910, size: 64, offset: 5376)
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !36, line: 45, flags: DIFlagFwdDecl)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !35, file: !36, line: 545, baseType: !3913, size: 64, offset: 5440)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !36, line: 47, flags: DIFlagFwdDecl)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !35, file: !36, line: 547, baseType: !315, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !35, file: !36, line: 548, baseType: !315, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!3917 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !35, file: !36, line: 549, baseType: !315, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !35, file: !36, line: 550, baseType: !315, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "managed", scope: !7, file: !8, line: 83, baseType: !3920, size: 192, offset: 256)
!3920 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !7, file: !8, line: 76, size: 192, elements: !3921)
!3921 = !{!3922, !3923, !3924}
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !3920, file: !8, line: 78, baseType: !11, size: 128)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "final_kfree", scope: !3920, file: !8, line: 80, baseType: !170, size: 64, offset: 128)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3920, file: !8, line: 82, baseType: !55, offset: 192)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !7, file: !8, line: 86, baseType: !3926, size: 64, offset: 448)
!3926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3927, size: 64)
!3927 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_driver", file: !3928, line: 162, size: 3328, elements: !3929)
!3928 = !DIFile(filename: "./include/drm/drm_drv.h", directory: "/home/lizy2001/genbc/linux")
!3929 = !{!3930, !3934, !3991, !3995, !3999, !4000, !4001, !4012, !4013, !4017, !4018, !4022, !4023, !4027, !4034, !4038, !4042, !4046, !4050, !4055, !4061, !4065, !4069, !4070, !4089, !4095, !4099, !4103, !4107, !4122, !4128, !4132, !4133, !4134, !4135, !4136, !4137, !4138, !4139, !4140, !4144, !4145, !4146, !4147, !4148, !4149, !4153, !4154, !4158, !4162, !4166, !4170}
!3930 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !3927, file: !3928, line: 179, baseType: !3931, size: 64)
!3931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3932, size: 64)
!3932 = !DISubroutineType(types: !3933)
!3933 = !{!18, !6, !146}
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3927, file: !3928, line: 199, baseType: !3935, size: 64, offset: 64)
!3935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3936, size: 64)
!3936 = !DISubroutineType(types: !3937)
!3937 = !{!18, !6, !3938}
!3938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3939, size: 64)
!3939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_file", file: !3940, line: 159, size: 2368, elements: !3941)
!3940 = !DIFile(filename: "./include/drm/drm_file.h", directory: "/home/lizy2001/genbc/linux")
!3941 = !{!3942, !3943, !3944, !3945, !3946, !3947, !3948, !3949, !3950, !3954, !3955, !3958, !3959, !3970, !3971, !3972, !3973, !3974, !3975, !3976, !3977, !3978, !3979, !3980, !3981, !3982, !3983, !3984}
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "authenticated", scope: !3939, file: !3940, line: 169, baseType: !315, size: 8)
!3943 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_allowed", scope: !3939, file: !3940, line: 176, baseType: !315, size: 8, offset: 8)
!3944 = !DIDerivedType(tag: DW_TAG_member, name: "universal_planes", scope: !3939, file: !3940, line: 184, baseType: !315, size: 8, offset: 16)
!3945 = !DIDerivedType(tag: DW_TAG_member, name: "atomic", scope: !3939, file: !3940, line: 187, baseType: !315, size: 8, offset: 24)
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_allowed", scope: !3939, file: !3940, line: 195, baseType: !315, size: 8, offset: 32)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_connectors", scope: !3939, file: !3940, line: 202, baseType: !315, size: 8, offset: 40)
!3948 = !DIDerivedType(tag: DW_TAG_member, name: "was_master", scope: !3939, file: !3940, line: 213, baseType: !315, size: 8, offset: 48)
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "is_master", scope: !3939, file: !3940, line: 224, baseType: !315, size: 8, offset: 56)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !3939, file: !3940, line: 236, baseType: !3951, size: 64, offset: 64)
!3951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3952, size: 64)
!3952 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_master", file: !3953, line: 11, flags: DIFlagFwdDecl)
!3953 = !DIFile(filename: "./include/drm/drm_lease.h", directory: "/home/lizy2001/genbc/linux")
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3939, file: !3940, line: 239, baseType: !1357, size: 64, offset: 128)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3939, file: !3940, line: 242, baseType: !3956, size: 32, offset: 192)
!3956 = !DIDerivedType(tag: DW_TAG_typedef, name: "drm_magic_t", file: !3957, line: 86, baseType: !210)
!3957 = !DIFile(filename: "./include/uapi/drm/drm.h", directory: "/home/lizy2001/genbc/linux")
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "lhead", scope: !3939, file: !3940, line: 250, baseType: !11, size: 128, offset: 256)
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3939, file: !3940, line: 253, baseType: !3960, size: 64, offset: 384)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_minor", file: !3940, line: 70, size: 576, elements: !3962)
!3962 = !{!3963, !3964, !3965, !3966, !3967, !3968, !3969}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3961, file: !3940, line: 72, baseType: !18, size: 32)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3961, file: !3940, line: 73, baseType: !18, size: 32, offset: 32)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "kdev", scope: !3961, file: !3940, line: 74, baseType: !34, size: 64, offset: 64)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3961, file: !3940, line: 75, baseType: !6, size: 64, offset: 128)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_root", scope: !3961, file: !3940, line: 77, baseType: !206, size: 64, offset: 192)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_list", scope: !3961, file: !3940, line: 79, baseType: !11, size: 128, offset: 256)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_lock", scope: !3961, file: !3940, line: 80, baseType: !552, size: 192, offset: 384)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "object_idr", scope: !3939, file: !3940, line: 261, baseType: !1387, size: 192, offset: 448)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "table_lock", scope: !3939, file: !3940, line: 264, baseType: !55, offset: 640)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "syncobj_idr", scope: !3939, file: !3940, line: 267, baseType: !1387, size: 192, offset: 640)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "syncobj_table_lock", scope: !3939, file: !3940, line: 269, baseType: !55, offset: 832)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "filp", scope: !3939, file: !3940, line: 272, baseType: !175, size: 64, offset: 832)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "driver_priv", scope: !3939, file: !3940, line: 280, baseType: !170, size: 64, offset: 896)
!3976 = !DIDerivedType(tag: DW_TAG_member, name: "fbs", scope: !3939, file: !3940, line: 291, baseType: !11, size: 128, offset: 960)
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "fbs_lock", scope: !3939, file: !3940, line: 294, baseType: !552, size: 192, offset: 1088)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "blobs", scope: !3939, file: !3940, line: 304, baseType: !11, size: 128, offset: 1280)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "event_wait", scope: !3939, file: !3940, line: 307, baseType: !1368, size: 128, offset: 1408)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "pending_event_list", scope: !3939, file: !3940, line: 318, baseType: !11, size: 128, offset: 1536)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "event_list", scope: !3939, file: !3940, line: 328, baseType: !11, size: 128, offset: 1664)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "event_space", scope: !3939, file: !3940, line: 337, baseType: !18, size: 32, offset: 1792)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "event_read_lock", scope: !3939, file: !3940, line: 340, baseType: !552, size: 192, offset: 1856)
!3984 = !DIDerivedType(tag: DW_TAG_member, name: "prime", scope: !3939, file: !3940, line: 347, baseType: !3985, size: 320, offset: 2048)
!3985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_prime_file_private", file: !3986, line: 45, size: 320, elements: !3987)
!3986 = !DIFile(filename: "./include/drm/drm_prime.h", directory: "/home/lizy2001/genbc/linux")
!3987 = !{!3988, !3989, !3990}
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3985, file: !3986, line: 47, baseType: !552, size: 192)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "dmabufs", scope: !3985, file: !3986, line: 48, baseType: !631, size: 64, offset: 192)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !3985, file: !3986, line: 49, baseType: !631, size: 64, offset: 256)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "postclose", scope: !3927, file: !3928, line: 213, baseType: !3992, size: 64, offset: 128)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = !DISubroutineType(types: !3994)
!3994 = !{null, !6, !3938}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "lastclose", scope: !3927, file: !3928, line: 241, baseType: !3996, size: 64, offset: 192)
!3996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3997, size: 64)
!3997 = !DISubroutineType(types: !3998)
!3998 = !{null, !6}
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "unload", scope: !3927, file: !3928, line: 258, baseType: !3996, size: 64, offset: 256)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3927, file: !3928, line: 270, baseType: !3996, size: 64, offset: 320)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "irq_handler", scope: !3927, file: !3928, line: 278, baseType: !4002, size: 64, offset: 384)
!4002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4003, size: 64)
!4003 = !DISubroutineType(types: !4004)
!4004 = !{!4005, !18, !170}
!4005 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !4006, line: 17, baseType: !4007)
!4006 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!4007 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !4006, line: 11, baseType: !210, size: 32, elements: !4008)
!4008 = !{!4009, !4010, !4011}
!4009 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!4010 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!4011 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "irq_preinstall", scope: !3927, file: !3928, line: 288, baseType: !3996, size: 64, offset: 448)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "irq_postinstall", scope: !3927, file: !3928, line: 297, baseType: !4014, size: 64, offset: 512)
!4014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4015, size: 64)
!4015 = !DISubroutineType(types: !4016)
!4016 = !{!18, !6}
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "irq_uninstall", scope: !3927, file: !3928, line: 306, baseType: !3996, size: 64, offset: 576)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "master_set", scope: !3927, file: !3928, line: 313, baseType: !4019, size: 64, offset: 640)
!4019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4020, size: 64)
!4020 = !DISubroutineType(types: !4021)
!4021 = !{null, !6, !3938, !315}
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "master_drop", scope: !3927, file: !3928, line: 320, baseType: !3992, size: 64, offset: 704)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_init", scope: !3927, file: !3928, line: 327, baseType: !4024, size: 64, offset: 768)
!4024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4025, size: 64)
!4025 = !DISubroutineType(types: !4026)
!4026 = !{null, !3960}
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "gem_free_object_unlocked", scope: !3927, file: !3928, line: 335, baseType: !4028, size: 64, offset: 832)
!4028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4029, size: 64)
!4029 = !DISubroutineType(types: !4030)
!4030 = !{null, !4031}
!4031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4032, size: 64)
!4032 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_gem_object", file: !4033, line: 37, flags: DIFlagFwdDecl)
!4033 = !DIFile(filename: "./include/drm/drm_framebuffer.h", directory: "/home/lizy2001/genbc/linux")
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "gem_open_object", scope: !3927, file: !3928, line: 344, baseType: !4035, size: 64, offset: 896)
!4035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4036, size: 64)
!4036 = !DISubroutineType(types: !4037)
!4037 = !{!18, !4031, !3938}
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "gem_close_object", scope: !3927, file: !3928, line: 353, baseType: !4039, size: 64, offset: 960)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = !DISubroutineType(types: !4041)
!4041 = !{null, !4031, !3938}
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "gem_create_object", scope: !3927, file: !3928, line: 361, baseType: !4043, size: 64, offset: 1024)
!4043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4044, size: 64)
!4044 = !DISubroutineType(types: !4045)
!4045 = !{!4031, !6, !143}
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "prime_handle_to_fd", scope: !3927, file: !3928, line: 372, baseType: !4047, size: 64, offset: 1088)
!4047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4048, size: 64)
!4048 = !DISubroutineType(types: !4049)
!4049 = !{!18, !6, !3938, !384, !384, !534}
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "prime_fd_to_handle", scope: !3927, file: !3928, line: 383, baseType: !4051, size: 64, offset: 1152)
!4051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4052, size: 64)
!4052 = !DISubroutineType(types: !4053)
!4053 = !{!18, !6, !3938, !18, !4054}
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_export", scope: !3927, file: !3928, line: 391, baseType: !4056, size: 64, offset: 1216)
!4056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4057, size: 64)
!4057 = !DISubroutineType(types: !4058)
!4058 = !{!4059, !4031, !18}
!4059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4060, size: 64)
!4060 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf", file: !3928, line: 391, flags: DIFlagFwdDecl)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_import", scope: !3927, file: !3928, line: 400, baseType: !4062, size: 64, offset: 1280)
!4062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4063, size: 64)
!4063 = !DISubroutineType(types: !4064)
!4064 = !{!4031, !6, !4059}
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_pin", scope: !3927, file: !3928, line: 408, baseType: !4066, size: 64, offset: 1344)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{!18, !4031}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_unpin", scope: !3927, file: !3928, line: 415, baseType: !4028, size: 64, offset: 1408)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_get_sg_table", scope: !3927, file: !3928, line: 423, baseType: !4071, size: 64, offset: 1472)
!4071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4072, size: 64)
!4072 = !DISubroutineType(types: !4073)
!4073 = !{!4074, !4031}
!4074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4075, size: 64)
!4075 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !4076, line: 42, size: 128, elements: !4077)
!4076 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4077 = !{!4078, !4087, !4088}
!4078 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4075, file: !4076, line: 43, baseType: !4079, size: 64)
!4079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4080, size: 64)
!4080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4076, line: 11, size: 256, elements: !4081)
!4081 = !{!4082, !4083, !4084, !4085, !4086}
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4080, file: !4076, line: 12, baseType: !146, size: 64)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4080, file: !4076, line: 13, baseType: !210, size: 32, offset: 64)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4080, file: !4076, line: 14, baseType: !210, size: 32, offset: 96)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4080, file: !4076, line: 15, baseType: !795, size: 64, offset: 128)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4080, file: !4076, line: 17, baseType: !210, size: 32, offset: 192)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !4075, file: !4076, line: 44, baseType: !210, size: 32, offset: 64)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !4075, file: !4076, line: 45, baseType: !210, size: 32, offset: 96)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_import_sg_table", scope: !3927, file: !3928, line: 431, baseType: !4090, size: 64, offset: 1536)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4091, size: 64)
!4091 = !DISubroutineType(types: !4092)
!4092 = !{!4031, !6, !4093, !4074}
!4093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4094, size: 64)
!4094 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_attachment", file: !3928, line: 39, flags: DIFlagFwdDecl)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_vmap", scope: !3927, file: !3928, line: 441, baseType: !4096, size: 64, offset: 1600)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{!170, !4031}
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_vunmap", scope: !3927, file: !3928, line: 449, baseType: !4100, size: 64, offset: 1664)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{null, !4031, !170}
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_mmap", scope: !3927, file: !3928, line: 460, baseType: !4104, size: 64, offset: 1728)
!4104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4105, size: 64)
!4105 = !DISubroutineType(types: !4106)
!4106 = !{!18, !4031, !857}
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_create", scope: !3927, file: !3928, line: 484, baseType: !4108, size: 64, offset: 1792)
!4108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4109, size: 64)
!4109 = !DISubroutineType(types: !4110)
!4110 = !{!18, !3938, !6, !4111}
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_create_dumb", file: !4113, line: 805, size: 256, elements: !4114)
!4113 = !DIFile(filename: "./include/uapi/drm/drm_mode.h", directory: "/home/lizy2001/genbc/linux")
!4114 = !{!4115, !4116, !4117, !4118, !4119, !4120, !4121}
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4112, file: !4113, line: 806, baseType: !242, size: 32)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4112, file: !4113, line: 807, baseType: !242, size: 32, offset: 32)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "bpp", scope: !4112, file: !4113, line: 808, baseType: !242, size: 32, offset: 64)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4112, file: !4113, line: 809, baseType: !242, size: 32, offset: 96)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4112, file: !4113, line: 811, baseType: !242, size: 32, offset: 128)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !4112, file: !4113, line: 812, baseType: !242, size: 32, offset: 160)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4112, file: !4113, line: 813, baseType: !247, size: 64, offset: 192)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_map_offset", scope: !3927, file: !3928, line: 502, baseType: !4123, size: 64, offset: 1856)
!4123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4124, size: 64)
!4124 = !DISubroutineType(types: !4125)
!4125 = !{!18, !3938, !6, !384, !4126}
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !12, line: 107, baseType: !246)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_destroy", scope: !3927, file: !3928, line: 521, baseType: !4129, size: 64, offset: 1920)
!4129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4130, size: 64)
!4130 = !DISubroutineType(types: !4131)
!4131 = !{!18, !3938, !6, !384}
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "gem_vm_ops", scope: !3927, file: !3928, line: 531, baseType: !885, size: 64, offset: 1984)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !3927, file: !3928, line: 534, baseType: !18, size: 32, offset: 2048)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !3927, file: !3928, line: 536, baseType: !18, size: 32, offset: 2080)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "patchlevel", scope: !3927, file: !3928, line: 538, baseType: !18, size: 32, offset: 2112)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3927, file: !3928, line: 540, baseType: !96, size: 64, offset: 2176)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !3927, file: !3928, line: 542, baseType: !96, size: 64, offset: 2240)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !3927, file: !3928, line: 544, baseType: !96, size: 64, offset: 2304)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "driver_features", scope: !3927, file: !3928, line: 552, baseType: !240, size: 32, offset: 2368)
!4140 = !DIDerivedType(tag: DW_TAG_member, name: "ioctls", scope: !3927, file: !3928, line: 562, baseType: !4141, size: 64, offset: 2432)
!4141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4142, size: 64)
!4142 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4143)
!4143 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_ioctl_desc", file: !3928, line: 562, flags: DIFlagFwdDecl)
!4144 = !DIDerivedType(tag: DW_TAG_member, name: "num_ioctls", scope: !3927, file: !3928, line: 564, baseType: !18, size: 32, offset: 2496)
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !3927, file: !3928, line: 573, baseType: !2818, size: 64, offset: 2560)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_dev_list", scope: !3927, file: !3928, line: 579, baseType: !11, size: 128, offset: 2624)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "firstopen", scope: !3927, file: !3928, line: 580, baseType: !4014, size: 64, offset: 2752)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "preclose", scope: !3927, file: !3928, line: 581, baseType: !3992, size: 64, offset: 2816)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ioctl", scope: !3927, file: !3928, line: 582, baseType: !4150, size: 64, offset: 2880)
!4150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4151, size: 64)
!4151 = !DISubroutineType(types: !4152)
!4152 = !{!18, !6, !170, !3938}
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "dma_quiescent", scope: !3927, file: !3928, line: 583, baseType: !4014, size: 64, offset: 2944)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "context_dtor", scope: !3927, file: !3928, line: 584, baseType: !4155, size: 64, offset: 3008)
!4155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4156, size: 64)
!4156 = !DISubroutineType(types: !4157)
!4157 = !{!18, !6, !18}
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_counter", scope: !3927, file: !3928, line: 585, baseType: !4159, size: 64, offset: 3072)
!4159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4160, size: 64)
!4160 = !DISubroutineType(types: !4161)
!4161 = !{!240, !6, !210}
!4162 = !DIDerivedType(tag: DW_TAG_member, name: "enable_vblank", scope: !3927, file: !3928, line: 586, baseType: !4163, size: 64, offset: 3136)
!4163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4164, size: 64)
!4164 = !DISubroutineType(types: !4165)
!4165 = !{!18, !6, !210}
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "disable_vblank", scope: !3927, file: !3928, line: 587, baseType: !4167, size: 64, offset: 3200)
!4167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4168, size: 64)
!4168 = !DISubroutineType(types: !4169)
!4169 = !{null, !6, !210}
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv_size", scope: !3927, file: !3928, line: 588, baseType: !18, size: 32, offset: 3264)
!4171 = !DIDerivedType(tag: DW_TAG_member, name: "dev_private", scope: !7, file: !8, line: 98, baseType: !170, size: 64, offset: 512)
!4172 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !7, file: !8, line: 101, baseType: !3960, size: 64, offset: 576)
!4173 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !7, file: !8, line: 104, baseType: !3960, size: 64, offset: 640)
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !7, file: !8, line: 111, baseType: !315, size: 8, offset: 704)
!4175 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !7, file: !8, line: 119, baseType: !3951, size: 64, offset: 768)
!4176 = !DIDerivedType(tag: DW_TAG_member, name: "driver_features", scope: !7, file: !8, line: 129, baseType: !240, size: 32, offset: 832)
!4177 = !DIDerivedType(tag: DW_TAG_member, name: "unplugged", scope: !7, file: !8, line: 137, baseType: !315, size: 8, offset: 864)
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "anon_inode", scope: !7, file: !8, line: 140, baseType: !254, size: 64, offset: 896)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !7, file: !8, line: 143, baseType: !96, size: 64, offset: 960)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "struct_mutex", scope: !7, file: !8, line: 153, baseType: !552, size: 192, offset: 1024)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "master_mutex", scope: !7, file: !8, line: 160, baseType: !552, size: 192, offset: 1216)
!4182 = !DIDerivedType(tag: DW_TAG_member, name: "open_count", scope: !7, file: !8, line: 168, baseType: !29, size: 32, offset: 1408)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "filelist_mutex", scope: !7, file: !8, line: 171, baseType: !552, size: 192, offset: 1472)
!4184 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !7, file: !8, line: 177, baseType: !11, size: 128, offset: 1664)
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "filelist_internal", scope: !7, file: !8, line: 185, baseType: !11, size: 128, offset: 1792)
!4186 = !DIDerivedType(tag: DW_TAG_member, name: "clientlist_mutex", scope: !7, file: !8, line: 192, baseType: !552, size: 192, offset: 1920)
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "clientlist", scope: !7, file: !8, line: 199, baseType: !11, size: 128, offset: 2112)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enabled", scope: !7, file: !8, line: 208, baseType: !315, size: 8, offset: 2240)
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !7, file: !8, line: 213, baseType: !18, size: 32, offset: 2272)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_disable_immediate", scope: !7, file: !8, line: 228, baseType: !315, size: 8, offset: 2304)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "vblank", scope: !7, file: !8, line: 238, baseType: !4192, size: 64, offset: 2368)
!4192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4193, size: 64)
!4193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vblank_crtc", file: !4194, line: 91, size: 2304, elements: !4195)
!4194 = !DIFile(filename: "./include/drm/drm_vblank.h", directory: "/home/lizy2001/genbc/linux")
!4195 = !{!4196, !4197, !4198, !4199, !4200, !4201, !4202, !4203, !4204, !4205, !4206, !4207, !4208, !4209, !4298, !4299, !4321, !4322}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4193, file: !4194, line: 95, baseType: !6, size: 64)
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4193, file: !4194, line: 99, baseType: !1368, size: 128, offset: 64)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "disable_timer", scope: !4193, file: !4194, line: 106, baseType: !3537, size: 320, offset: 192)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "seqlock", scope: !4193, file: !4194, line: 111, baseType: !1751, size: 32, offset: 512)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4193, file: !4194, line: 127, baseType: !558, size: 64, offset: 576)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4193, file: !4194, line: 131, baseType: !1171, size: 64, offset: 640)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4193, file: !4194, line: 138, baseType: !29, size: 32, offset: 704)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !4193, file: !4194, line: 142, baseType: !240, size: 32, offset: 736)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "max_vblank_count", scope: !4193, file: !4194, line: 162, baseType: !240, size: 32, offset: 768)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "inmodeset", scope: !4193, file: !4194, line: 171, baseType: !210, size: 32, offset: 800)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4193, file: !4194, line: 176, baseType: !210, size: 32, offset: 832)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "framedur_ns", scope: !4193, file: !4194, line: 182, baseType: !18, size: 32, offset: 864)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "linedur_ns", scope: !4193, file: !4194, line: 188, baseType: !18, size: 32, offset: 896)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "hwmode", scope: !4193, file: !4194, line: 199, baseType: !4210, size: 960, offset: 960)
!4210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_display_mode", file: !4211, line: 224, size: 960, elements: !4212)
!4211 = !DIFile(filename: "./include/drm/drm_modes.h", directory: "/home/lizy2001/genbc/linux")
!4212 = !{!4213, !4214, !4215, !4216, !4217, !4218, !4219, !4220, !4221, !4222, !4223, !4224, !4225, !4226, !4227, !4228, !4229, !4230, !4231, !4232, !4233, !4234, !4235, !4236, !4237, !4238, !4239, !4240, !4241, !4242, !4243, !4244, !4245, !4288}
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !4210, file: !4211, line: 230, baseType: !18, size: 32)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "hdisplay", scope: !4210, file: !4211, line: 231, baseType: !727, size: 16, offset: 32)
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_start", scope: !4210, file: !4211, line: 232, baseType: !727, size: 16, offset: 48)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_end", scope: !4210, file: !4211, line: 233, baseType: !727, size: 16, offset: 64)
!4217 = !DIDerivedType(tag: DW_TAG_member, name: "htotal", scope: !4210, file: !4211, line: 234, baseType: !727, size: 16, offset: 80)
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "hskew", scope: !4210, file: !4211, line: 235, baseType: !727, size: 16, offset: 96)
!4219 = !DIDerivedType(tag: DW_TAG_member, name: "vdisplay", scope: !4210, file: !4211, line: 236, baseType: !727, size: 16, offset: 112)
!4220 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_start", scope: !4210, file: !4211, line: 237, baseType: !727, size: 16, offset: 128)
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_end", scope: !4210, file: !4211, line: 238, baseType: !727, size: 16, offset: 144)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "vtotal", scope: !4210, file: !4211, line: 239, baseType: !727, size: 16, offset: 160)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "vscan", scope: !4210, file: !4211, line: 240, baseType: !727, size: 16, offset: 176)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4210, file: !4211, line: 275, baseType: !240, size: 32, offset: 192)
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_clock", scope: !4210, file: !4211, line: 292, baseType: !18, size: 32, offset: 224)
!4226 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hdisplay", scope: !4210, file: !4211, line: 293, baseType: !727, size: 16, offset: 256)
!4227 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hblank_start", scope: !4210, file: !4211, line: 294, baseType: !727, size: 16, offset: 272)
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hblank_end", scope: !4210, file: !4211, line: 295, baseType: !727, size: 16, offset: 288)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hsync_start", scope: !4210, file: !4211, line: 296, baseType: !727, size: 16, offset: 304)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hsync_end", scope: !4210, file: !4211, line: 297, baseType: !727, size: 16, offset: 320)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_htotal", scope: !4210, file: !4211, line: 298, baseType: !727, size: 16, offset: 336)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hskew", scope: !4210, file: !4211, line: 299, baseType: !727, size: 16, offset: 352)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vdisplay", scope: !4210, file: !4211, line: 300, baseType: !727, size: 16, offset: 368)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vblank_start", scope: !4210, file: !4211, line: 301, baseType: !727, size: 16, offset: 384)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vblank_end", scope: !4210, file: !4211, line: 302, baseType: !727, size: 16, offset: 400)
!4236 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vsync_start", scope: !4210, file: !4211, line: 303, baseType: !727, size: 16, offset: 416)
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vsync_end", scope: !4210, file: !4211, line: 304, baseType: !727, size: 16, offset: 432)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vtotal", scope: !4210, file: !4211, line: 305, baseType: !727, size: 16, offset: 448)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm", scope: !4210, file: !4211, line: 313, baseType: !727, size: 16, offset: 464)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm", scope: !4210, file: !4211, line: 321, baseType: !727, size: 16, offset: 480)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4210, file: !4211, line: 350, baseType: !1227, size: 8, offset: 496)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "expose_to_userspace", scope: !4210, file: !4211, line: 361, baseType: !315, size: 8, offset: 504)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4210, file: !4211, line: 368, baseType: !11, size: 128, offset: 512)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4210, file: !4211, line: 375, baseType: !2655, size: 256, offset: 640)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4210, file: !4211, line: 383, baseType: !4246, size: 32, offset: 896)
!4246 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_mode_status", file: !4211, line: 91, baseType: !18, size: 32, elements: !4247)
!4247 = !{!4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259, !4260, !4261, !4262, !4263, !4264, !4265, !4266, !4267, !4268, !4269, !4270, !4271, !4272, !4273, !4274, !4275, !4276, !4277, !4278, !4279, !4280, !4281, !4282, !4283, !4284, !4285, !4286, !4287}
!4248 = !DIEnumerator(name: "MODE_OK", value: 0)
!4249 = !DIEnumerator(name: "MODE_HSYNC", value: 1)
!4250 = !DIEnumerator(name: "MODE_VSYNC", value: 2)
!4251 = !DIEnumerator(name: "MODE_H_ILLEGAL", value: 3)
!4252 = !DIEnumerator(name: "MODE_V_ILLEGAL", value: 4)
!4253 = !DIEnumerator(name: "MODE_BAD_WIDTH", value: 5)
!4254 = !DIEnumerator(name: "MODE_NOMODE", value: 6)
!4255 = !DIEnumerator(name: "MODE_NO_INTERLACE", value: 7)
!4256 = !DIEnumerator(name: "MODE_NO_DBLESCAN", value: 8)
!4257 = !DIEnumerator(name: "MODE_NO_VSCAN", value: 9)
!4258 = !DIEnumerator(name: "MODE_MEM", value: 10)
!4259 = !DIEnumerator(name: "MODE_VIRTUAL_X", value: 11)
!4260 = !DIEnumerator(name: "MODE_VIRTUAL_Y", value: 12)
!4261 = !DIEnumerator(name: "MODE_MEM_VIRT", value: 13)
!4262 = !DIEnumerator(name: "MODE_NOCLOCK", value: 14)
!4263 = !DIEnumerator(name: "MODE_CLOCK_HIGH", value: 15)
!4264 = !DIEnumerator(name: "MODE_CLOCK_LOW", value: 16)
!4265 = !DIEnumerator(name: "MODE_CLOCK_RANGE", value: 17)
!4266 = !DIEnumerator(name: "MODE_BAD_HVALUE", value: 18)
!4267 = !DIEnumerator(name: "MODE_BAD_VVALUE", value: 19)
!4268 = !DIEnumerator(name: "MODE_BAD_VSCAN", value: 20)
!4269 = !DIEnumerator(name: "MODE_HSYNC_NARROW", value: 21)
!4270 = !DIEnumerator(name: "MODE_HSYNC_WIDE", value: 22)
!4271 = !DIEnumerator(name: "MODE_HBLANK_NARROW", value: 23)
!4272 = !DIEnumerator(name: "MODE_HBLANK_WIDE", value: 24)
!4273 = !DIEnumerator(name: "MODE_VSYNC_NARROW", value: 25)
!4274 = !DIEnumerator(name: "MODE_VSYNC_WIDE", value: 26)
!4275 = !DIEnumerator(name: "MODE_VBLANK_NARROW", value: 27)
!4276 = !DIEnumerator(name: "MODE_VBLANK_WIDE", value: 28)
!4277 = !DIEnumerator(name: "MODE_PANEL", value: 29)
!4278 = !DIEnumerator(name: "MODE_INTERLACE_WIDTH", value: 30)
!4279 = !DIEnumerator(name: "MODE_ONE_WIDTH", value: 31)
!4280 = !DIEnumerator(name: "MODE_ONE_HEIGHT", value: 32)
!4281 = !DIEnumerator(name: "MODE_ONE_SIZE", value: 33)
!4282 = !DIEnumerator(name: "MODE_NO_REDUCED", value: 34)
!4283 = !DIEnumerator(name: "MODE_NO_STEREO", value: 35)
!4284 = !DIEnumerator(name: "MODE_NO_420", value: 36)
!4285 = !DIEnumerator(name: "MODE_STALE", value: -3)
!4286 = !DIEnumerator(name: "MODE_BAD", value: -2)
!4287 = !DIEnumerator(name: "MODE_ERROR", value: -1)
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "picture_aspect_ratio", scope: !4210, file: !4211, line: 390, baseType: !4289, size: 32, offset: 928)
!4289 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_picture_aspect", file: !4290, line: 96, baseType: !210, size: 32, elements: !4291)
!4290 = !DIFile(filename: "./include/linux/hdmi.h", directory: "/home/lizy2001/genbc/linux")
!4291 = !{!4292, !4293, !4294, !4295, !4296, !4297}
!4292 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_NONE", value: 0, isUnsigned: true)
!4293 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_4_3", value: 1, isUnsigned: true)
!4294 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_16_9", value: 2, isUnsigned: true)
!4295 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_64_27", value: 3, isUnsigned: true)
!4296 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_256_135", value: 4, isUnsigned: true)
!4297 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_RESERVED", value: 5, isUnsigned: true)
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4193, file: !4194, line: 207, baseType: !315, size: 8, offset: 1920)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "worker", scope: !4193, file: !4194, line: 212, baseType: !4300, size: 64, offset: 1984)
!4300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4301, size: 64)
!4301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kthread_worker", file: !4302, line: 89, size: 448, elements: !4303)
!4302 = !DIFile(filename: "./include/linux/kthread.h", directory: "/home/lizy2001/genbc/linux")
!4303 = !{!4304, !4305, !4306, !4307, !4308, !4309}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4301, file: !4302, line: 90, baseType: !210, size: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4301, file: !4302, line: 91, baseType: !648, offset: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4301, file: !4302, line: 92, baseType: !11, size: 128, offset: 64)
!4307 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_work_list", scope: !4301, file: !4302, line: 93, baseType: !11, size: 128, offset: 192)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4301, file: !4302, line: 94, baseType: !1091, size: 64, offset: 320)
!4309 = !DIDerivedType(tag: DW_TAG_member, name: "current_work", scope: !4301, file: !4302, line: 95, baseType: !4310, size: 64, offset: 384)
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kthread_work", file: !4302, line: 98, size: 320, elements: !4312)
!4312 = !{!4313, !4314, !4319, !4320}
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4311, file: !4302, line: 99, baseType: !11, size: 128)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4311, file: !4302, line: 100, baseType: !4315, size: 64, offset: 128)
!4315 = !DIDerivedType(tag: DW_TAG_typedef, name: "kthread_work_func_t", file: !4302, line: 82, baseType: !4316)
!4316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4317, size: 64)
!4317 = !DISubroutineType(types: !4318)
!4318 = !{null, !4310}
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "worker", scope: !4311, file: !4302, line: 101, baseType: !4300, size: 64, offset: 192)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "canceling", scope: !4311, file: !4302, line: 103, baseType: !18, size: 32, offset: 256)
!4321 = !DIDerivedType(tag: DW_TAG_member, name: "pending_work", scope: !4193, file: !4194, line: 218, baseType: !11, size: 128, offset: 2048)
!4322 = !DIDerivedType(tag: DW_TAG_member, name: "work_wait_queue", scope: !4193, file: !4194, line: 225, baseType: !1368, size: 128, offset: 2176)
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_time_lock", scope: !7, file: !8, line: 245, baseType: !55, offset: 2432)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "vbl_lock", scope: !7, file: !8, line: 250, baseType: !55, offset: 2432)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "max_vblank_count", scope: !7, file: !8, line: 273, baseType: !240, size: 32, offset: 2432)
!4326 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_event_list", scope: !7, file: !8, line: 276, baseType: !11, size: 128, offset: 2496)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !7, file: !8, line: 284, baseType: !55, offset: 2624)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "agp", scope: !7, file: !8, line: 287, baseType: !4329, size: 64, offset: 2624)
!4329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4330, size: 64)
!4330 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_agp_head", file: !8, line: 287, flags: DIFlagFwdDecl)
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !7, file: !8, line: 290, baseType: !4332, size: 64, offset: 2688)
!4332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4333, size: 64)
!4333 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4334, line: 79, flags: DIFlagFwdDecl)
!4334 = !DIFile(filename: "./include/acpi/acpi_drivers.h", directory: "/home/lizy2001/genbc/linux")
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "num_crtcs", scope: !7, file: !8, line: 297, baseType: !210, size: 32, offset: 2752)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "mode_config", scope: !7, file: !8, line: 300, baseType: !4337, size: 8384, offset: 2816)
!4337 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config", file: !4338, line: 358, size: 8384, elements: !4339)
!4338 = !DIFile(filename: "./include/drm/drm_mode_config.h", directory: "/home/lizy2001/genbc/linux")
!4339 = !{!4340, !4341, !4360, !4370, !4371, !4372, !4373, !4374, !4375, !4376, !4377, !4378, !4382, !4383, !4387, !4388, !4389, !4390, !4391, !4392, !4393, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !5694, !5696, !5697, !5698, !5699, !5706, !5707, !5708, !5709, !5710, !5711, !5712, !5713, !5714, !5715, !5716, !5717, !5718, !5719, !5720, !5721, !5722, !5723, !5724, !5725, !5726, !5727, !5728, !5729, !5730, !5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5739, !5740, !5741, !5742, !5743, !5744, !5745, !5746, !5747, !5748, !5749, !5750, !5751, !5752, !5753, !5754, !5755, !5756, !5757, !5758, !5759, !5760, !5761, !5762, !5763, !5764, !5765, !5766, !5767, !5768, !5769, !5770, !5771, !5772, !5773, !5774, !5775, !5776, !5777}
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4337, file: !4338, line: 369, baseType: !552, size: 192)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "connection_mutex", scope: !4337, file: !4338, line: 379, baseType: !4342, size: 384, offset: 192)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_modeset_lock", file: !4343, line: 76, size: 384, elements: !4344)
!4343 = !DIFile(filename: "./include/drm/drm_modeset_lock.h", directory: "/home/lizy2001/genbc/linux")
!4344 = !{!4345, !4359}
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4342, file: !4343, line: 80, baseType: !4346, size: 256)
!4346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_mutex", file: !553, line: 71, size: 256, elements: !4347)
!4347 = !{!4348, !4349}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4346, file: !553, line: 72, baseType: !552, size: 192)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !4346, file: !553, line: 73, baseType: !4350, size: 64, offset: 192)
!4350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4351, size: 64)
!4351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_acquire_ctx", file: !4352, line: 31, size: 192, elements: !4353)
!4352 = !DIFile(filename: "./include/linux/ww_mutex.h", directory: "/home/lizy2001/genbc/linux")
!4353 = !{!4354, !4355, !4356, !4357, !4358}
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4351, file: !4352, line: 32, baseType: !1091, size: 64)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !4351, file: !4352, line: 33, baseType: !146, size: 64, offset: 64)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "acquired", scope: !4351, file: !4352, line: 34, baseType: !210, size: 32, offset: 128)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "wounded", scope: !4351, file: !4352, line: 35, baseType: !138, size: 16, offset: 160)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "is_wait_die", scope: !4351, file: !4352, line: 36, baseType: !138, size: 16, offset: 176)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4342, file: !4343, line: 86, baseType: !11, size: 128, offset: 256)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_ctx", scope: !4337, file: !4338, line: 389, baseType: !4361, size: 64, offset: 576)
!4361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4362, size: 64)
!4362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_modeset_acquire_ctx", file: !4343, line: 43, size: 448, elements: !4363)
!4363 = !{!4364, !4365, !4367, !4368, !4369}
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "ww_ctx", scope: !4362, file: !4343, line: 45, baseType: !4351, size: 192)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "contended", scope: !4362, file: !4343, line: 52, baseType: !4366, size: 64, offset: 192)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4342, size: 64)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !4362, file: !4343, line: 57, baseType: !11, size: 128, offset: 256)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_only", scope: !4362, file: !4343, line: 62, baseType: !315, size: 8, offset: 384)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "interruptible", scope: !4362, file: !4343, line: 65, baseType: !315, size: 8, offset: 392)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "idr_mutex", scope: !4337, file: !4338, line: 397, baseType: !552, size: 192, offset: 640)
!4371 = !DIDerivedType(tag: DW_TAG_member, name: "object_idr", scope: !4337, file: !4338, line: 405, baseType: !1387, size: 192, offset: 832)
!4372 = !DIDerivedType(tag: DW_TAG_member, name: "tile_idr", scope: !4337, file: !4338, line: 413, baseType: !1387, size: 192, offset: 1024)
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "fb_lock", scope: !4337, file: !4338, line: 416, baseType: !552, size: 192, offset: 1216)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "num_fb", scope: !4337, file: !4338, line: 418, baseType: !18, size: 32, offset: 1408)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "fb_list", scope: !4337, file: !4338, line: 420, baseType: !11, size: 128, offset: 1472)
!4376 = !DIDerivedType(tag: DW_TAG_member, name: "connector_list_lock", scope: !4337, file: !4338, line: 426, baseType: !55, offset: 1600)
!4377 = !DIDerivedType(tag: DW_TAG_member, name: "num_connector", scope: !4337, file: !4338, line: 431, baseType: !18, size: 32, offset: 1600)
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "connector_ida", scope: !4337, file: !4338, line: 435, baseType: !4379, size: 128, offset: 1664)
!4379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !1388, line: 244, size: 128, elements: !4380)
!4380 = !{!4381}
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4379, file: !1388, line: 245, baseType: !617, size: 128)
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "connector_list", scope: !4337, file: !4338, line: 443, baseType: !11, size: 128, offset: 1792)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "connector_free_list", scope: !4337, file: !4338, line: 453, baseType: !4384, size: 64, offset: 1920)
!4384 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !184, line: 54, size: 64, elements: !4385)
!4385 = !{!4386}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4384, file: !184, line: 55, baseType: !187, size: 64)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "connector_free_work", scope: !4337, file: !4338, line: 457, baseType: !1899, size: 256, offset: 1984)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "num_encoder", scope: !4337, file: !4338, line: 465, baseType: !18, size: 32, offset: 2240)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_list", scope: !4337, file: !4338, line: 473, baseType: !11, size: 128, offset: 2304)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "num_total_plane", scope: !4337, file: !4338, line: 482, baseType: !18, size: 32, offset: 2432)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "plane_list", scope: !4337, file: !4338, line: 489, baseType: !11, size: 128, offset: 2496)
!4392 = !DIDerivedType(tag: DW_TAG_member, name: "num_crtc", scope: !4337, file: !4338, line: 497, baseType: !18, size: 32, offset: 2624)
!4393 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_list", scope: !4337, file: !4338, line: 504, baseType: !11, size: 128, offset: 2688)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "property_list", scope: !4337, file: !4338, line: 513, baseType: !11, size: 128, offset: 2816)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "privobj_list", scope: !4337, file: !4338, line: 522, baseType: !11, size: 128, offset: 2944)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "min_width", scope: !4337, file: !4338, line: 524, baseType: !18, size: 32, offset: 3072)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "min_height", scope: !4337, file: !4338, line: 524, baseType: !18, size: 32, offset: 3104)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "max_width", scope: !4337, file: !4338, line: 525, baseType: !18, size: 32, offset: 3136)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "max_height", scope: !4337, file: !4338, line: 525, baseType: !18, size: 32, offset: 3168)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4337, file: !4338, line: 526, baseType: !4401, size: 64, offset: 3200)
!4401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4402, size: 64)
!4402 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4403)
!4403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config_funcs", file: !4338, line: 47, size: 576, elements: !4404)
!4404 = !{!4405, !4505, !4509, !4510, !4516, !5681, !5685, !5689, !5693}
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "fb_create", scope: !4403, file: !4338, line: 77, baseType: !4406, size: 64)
!4406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4407, size: 64)
!4407 = !DISubroutineType(types: !4408)
!4408 = !{!4409, !6, !3938, !4490}
!4409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4410, size: 64)
!4410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_framebuffer", file: !4033, line: 117, size: 1600, elements: !4411)
!4411 = !{!4412, !4413, !4414, !4449, !4450, !4454, !4478, !4480, !4481, !4482, !4483, !4484, !4485, !4486, !4487, !4488}
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4410, file: !4033, line: 121, baseType: !6, size: 64)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4410, file: !4033, line: 126, baseType: !11, size: 128, offset: 64)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4410, file: !4033, line: 131, baseType: !4415, size: 256, offset: 192)
!4415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_object", file: !4416, line: 55, size: 256, elements: !4417)
!4416 = !DIFile(filename: "./include/drm/drm_mode_object.h", directory: "/home/lizy2001/genbc/linux")
!4417 = !{!4418, !4419, !4420, !4443, !4444}
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4415, file: !4416, line: 56, baseType: !384, size: 32)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4415, file: !4416, line: 57, baseType: !384, size: 32, offset: 32)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4415, file: !4416, line: 58, baseType: !4421, size: 64, offset: 64)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_object_properties", file: !4416, line: 67, size: 3136, elements: !4423)
!4423 = !{!4424, !4425, !4441}
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4422, file: !4416, line: 73, baseType: !18, size: 32)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4422, file: !4416, line: 82, baseType: !4426, size: 1536, offset: 64)
!4426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4427, size: 1536, elements: !4439)
!4427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4428, size: 64)
!4428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_property", file: !4429, line: 73, size: 960, elements: !4430)
!4429 = !DIFile(filename: "./include/drm/drm_property.h", directory: "/home/lizy2001/genbc/linux")
!4430 = !{!4431, !4432, !4433, !4434, !4435, !4436, !4437, !4438}
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4428, file: !4429, line: 77, baseType: !11, size: 128)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4428, file: !4429, line: 82, baseType: !4415, size: 256, offset: 128)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4428, file: !4429, line: 159, baseType: !384, size: 32, offset: 384)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4428, file: !4429, line: 164, baseType: !2655, size: 256, offset: 416)
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "num_values", scope: !4428, file: !4429, line: 169, baseType: !384, size: 32, offset: 672)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !4428, file: !4429, line: 177, baseType: !4126, size: 64, offset: 704)
!4437 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4428, file: !4429, line: 182, baseType: !6, size: 64, offset: 768)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "enum_list", scope: !4428, file: !4429, line: 190, baseType: !11, size: 128, offset: 832)
!4439 = !{!4440}
!4440 = !DISubrange(count: 24)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !4422, file: !4416, line: 102, baseType: !4442, size: 1536, offset: 1600)
!4442 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4127, size: 1536, elements: !4439)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4415, file: !4416, line: 59, baseType: !20, size: 32, offset: 128)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "free_cb", scope: !4415, file: !4416, line: 60, baseType: !4445, size: 64, offset: 192)
!4445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4446, size: 64)
!4446 = !DISubroutineType(types: !4447)
!4447 = !{null, !4448}
!4448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !20, size: 64)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !4410, file: !4033, line: 136, baseType: !1652, size: 128, offset: 448)
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !4410, file: !4033, line: 141, baseType: !4451, size: 64, offset: 576)
!4451 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4452, size: 64)
!4452 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4453)
!4453 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_format_info", file: !4033, line: 35, flags: DIFlagFwdDecl)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4410, file: !4033, line: 145, baseType: !4455, size: 64, offset: 640)
!4455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4456, size: 64)
!4456 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4457)
!4457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_framebuffer_funcs", file: !4033, line: 42, size: 192, elements: !4458)
!4458 = !{!4459, !4463, !4467}
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4457, file: !4033, line: 53, baseType: !4460, size: 64)
!4460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4461, size: 64)
!4461 = !DISubroutineType(types: !4462)
!4462 = !{null, !4409}
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "create_handle", scope: !4457, file: !4033, line: 73, baseType: !4464, size: 64, offset: 64)
!4464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4465, size: 64)
!4465 = !DISubroutineType(types: !4466)
!4466 = !{!18, !4409, !3938, !2638}
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !4457, file: !4033, line: 97, baseType: !4468, size: 64, offset: 128)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = !DISubroutineType(types: !4470)
!4470 = !{!18, !4409, !3938, !210, !210, !4471, !210}
!4471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4472, size: 64)
!4472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_clip_rect", file: !3957, line: 97, size: 64, elements: !4473)
!4473 = !{!4474, !4475, !4476, !4477}
!4474 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !4472, file: !3957, line: 98, baseType: !138, size: 16)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !4472, file: !3957, line: 99, baseType: !138, size: 16, offset: 16)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !4472, file: !3957, line: 100, baseType: !138, size: 16, offset: 32)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !4472, file: !3957, line: 101, baseType: !138, size: 16, offset: 48)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "pitches", scope: !4410, file: !4033, line: 150, baseType: !4479, size: 128, offset: 704)
!4479 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 128, elements: !1036)
!4480 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !4410, file: !4033, line: 168, baseType: !4479, size: 128, offset: 832)
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !4410, file: !4033, line: 175, baseType: !4127, size: 64, offset: 960)
!4482 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4410, file: !4033, line: 180, baseType: !210, size: 32, offset: 1024)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4410, file: !4033, line: 185, baseType: !210, size: 32, offset: 1056)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4410, file: !4033, line: 190, baseType: !18, size: 32, offset: 1088)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "hot_x", scope: !4410, file: !4033, line: 196, baseType: !18, size: 32, offset: 1120)
!4486 = !DIDerivedType(tag: DW_TAG_member, name: "hot_y", scope: !4410, file: !4033, line: 202, baseType: !18, size: 32, offset: 1152)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "filp_head", scope: !4410, file: !4033, line: 206, baseType: !11, size: 128, offset: 1216)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !4410, file: !4033, line: 213, baseType: !4489, size: 256, offset: 1344)
!4489 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4031, size: 256, elements: !1036)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4492)
!4492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_fb_cmd2", file: !4113, line: 494, size: 832, elements: !4493)
!4493 = !{!4494, !4495, !4496, !4497, !4498, !4499, !4501, !4502, !4503}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "fb_id", scope: !4492, file: !4113, line: 495, baseType: !242, size: 32)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4492, file: !4113, line: 496, baseType: !242, size: 32, offset: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4492, file: !4113, line: 497, baseType: !242, size: 32, offset: 64)
!4497 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_format", scope: !4492, file: !4113, line: 498, baseType: !242, size: 32, offset: 96)
!4498 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4492, file: !4113, line: 499, baseType: !242, size: 32, offset: 128)
!4499 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !4492, file: !4113, line: 525, baseType: !4500, size: 128, offset: 160)
!4500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !242, size: 128, elements: !1036)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "pitches", scope: !4492, file: !4113, line: 526, baseType: !4500, size: 128, offset: 288)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !4492, file: !4113, line: 527, baseType: !4500, size: 128, offset: 416)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !4492, file: !4113, line: 528, baseType: !4504, size: 256, offset: 576)
!4504 = !DICompositeType(tag: DW_TAG_array_type, baseType: !247, size: 256, elements: !1036)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "get_format_info", scope: !4403, file: !4338, line: 92, baseType: !4506, size: 64, offset: 64)
!4506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4507, size: 64)
!4507 = !DISubroutineType(types: !4508)
!4508 = !{!4451, !4490}
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "output_poll_changed", scope: !4403, file: !4338, line: 109, baseType: !3996, size: 64, offset: 128)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !4403, file: !4338, line: 119, baseType: !4511, size: 64, offset: 192)
!4511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!4512 = !DISubroutineType(types: !4513)
!4513 = !{!4246, !6, !4514}
!4514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4515, size: 64)
!4515 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4210)
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !4403, file: !4338, line: 196, baseType: !4517, size: 64, offset: 256)
!4517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4518, size: 64)
!4518 = !DISubroutineType(types: !4519)
!4519 = !{!18, !6, !4520}
!4520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4521, size: 64)
!4521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_atomic_state", file: !4522, line: 325, size: 960, elements: !4523)
!4522 = !DIFile(filename: "./include/drm/drm_atomic.h", directory: "/home/lizy2001/genbc/linux")
!4523 = !{!4524, !4525, !4526, !4527, !4528, !4529, !4530, !5624, !5636, !5637, !5646, !5647, !5678, !5679, !5680}
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4521, file: !4522, line: 326, baseType: !20, size: 32)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4521, file: !4522, line: 328, baseType: !6, size: 64, offset: 64)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "allow_modeset", scope: !4521, file: !4522, line: 338, baseType: !315, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_cursor_update", scope: !4521, file: !4522, line: 339, baseType: !315, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "async_update", scope: !4521, file: !4522, line: 340, baseType: !315, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!4529 = !DIDerivedType(tag: DW_TAG_member, name: "duplicated", scope: !4521, file: !4522, line: 349, baseType: !315, size: 1, offset: 131, flags: DIFlagBitField, extraData: i64 128)
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !4521, file: !4522, line: 350, baseType: !4531, size: 64, offset: 192)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_planes_state", file: !4522, line: 158, size: 256, elements: !4533)
!4533 = !{!4534, !5621, !5622, !5623}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4532, file: !4522, line: 159, baseType: !4535, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane", file: !4537, line: 575, size: 5184, elements: !4538)
!4537 = !DIFile(filename: "./include/drm/drm_plane.h", directory: "/home/lizy2001/genbc/linux")
!4538 = !{!4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4550, !5489, !5490, !5491, !5591, !5592, !5598, !5599, !5614, !5615, !5616, !5617, !5618, !5619, !5620}
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4536, file: !4537, line: 577, baseType: !6, size: 64)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4536, file: !4537, line: 586, baseType: !11, size: 128, offset: 64)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4536, file: !4537, line: 589, baseType: !96, size: 64, offset: 192)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4536, file: !4537, line: 600, baseType: !4342, size: 384, offset: 256)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4536, file: !4537, line: 603, baseType: !4415, size: 256, offset: 640)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "possible_crtcs", scope: !4536, file: !4537, line: 609, baseType: !384, size: 32, offset: 896)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "format_types", scope: !4536, file: !4537, line: 611, baseType: !4054, size: 64, offset: 960)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "format_count", scope: !4536, file: !4537, line: 613, baseType: !210, size: 32, offset: 1024)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "format_default", scope: !4536, file: !4537, line: 618, baseType: !315, size: 8, offset: 1056)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !4536, file: !4537, line: 621, baseType: !4126, size: 64, offset: 1088)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_count", scope: !4536, file: !4537, line: 623, baseType: !210, size: 32, offset: 1152)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4536, file: !4537, line: 632, baseType: !4551, size: 64, offset: 1216)
!4551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4552, size: 64)
!4552 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc", file: !4553, line: 939, size: 7680, elements: !4554)
!4553 = !DIFile(filename: "./include/drm/drm_crtc.h", directory: "/home/lizy2001/genbc/linux")
!4554 = !{!4555, !4556, !4557, !4558, !4559, !4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !5407, !5408, !5410, !5456, !5457, !5458, !5459, !5460, !5482, !5483, !5484, !5485, !5486}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4552, file: !4553, line: 941, baseType: !6, size: 64)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4552, file: !4553, line: 943, baseType: !3653, size: 64, offset: 64)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4552, file: !4553, line: 951, baseType: !11, size: 128, offset: 128)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4552, file: !4553, line: 954, baseType: !96, size: 64, offset: 256)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4552, file: !4553, line: 966, baseType: !4342, size: 384, offset: 320)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4552, file: !4553, line: 969, baseType: !4415, size: 256, offset: 704)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4552, file: !4553, line: 978, baseType: !4535, size: 64, offset: 960)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4552, file: !4553, line: 987, baseType: !4535, size: 64, offset: 1024)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4552, file: !4553, line: 993, baseType: !210, size: 32, offset: 1088)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_x", scope: !4552, file: !4553, line: 1002, baseType: !18, size: 32, offset: 1120)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_y", scope: !4552, file: !4553, line: 1010, baseType: !18, size: 32, offset: 1152)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4552, file: !4553, line: 1020, baseType: !315, size: 8, offset: 1184)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4552, file: !4553, line: 1030, baseType: !4210, size: 960, offset: 1216)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "hwmode", scope: !4552, file: !4553, line: 1046, baseType: !4210, size: 960, offset: 2176)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4552, file: !4553, line: 1055, baseType: !18, size: 32, offset: 3136)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4552, file: !4553, line: 1063, baseType: !18, size: 32, offset: 3168)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4552, file: !4553, line: 1066, baseType: !4572, size: 64, offset: 3200)
!4572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4573, size: 64)
!4573 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4574)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_funcs", file: !4553, line: 409, size: 1536, elements: !4575)
!4575 = !{!4576, !4580, !4584, !4588, !4592, !4597, !4598, !5342, !5346, !5350, !5354, !5358, !5362, !5366, !5372, !5376, !5377, !5381, !5386, !5392, !5396, !5400, !5401, !5402}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4574, file: !4553, line: 420, baseType: !4577, size: 64)
!4577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4578, size: 64)
!4578 = !DISubroutineType(types: !4579)
!4579 = !{null, !4551}
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_set", scope: !4574, file: !4553, line: 443, baseType: !4581, size: 64, offset: 64)
!4581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4582, size: 64)
!4582 = !DISubroutineType(types: !4583)
!4583 = !{!18, !4551, !3938, !384, !384, !384}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_set2", scope: !4574, file: !4553, line: 465, baseType: !4585, size: 64, offset: 128)
!4585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4586, size: 64)
!4586 = !DISubroutineType(types: !4587)
!4587 = !{!18, !4551, !3938, !384, !384, !384, !1504, !1504}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_move", scope: !4574, file: !4553, line: 485, baseType: !4589, size: 64, offset: 192)
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4590, size: 64)
!4590 = !DISubroutineType(types: !4591)
!4591 = !{!18, !4551, !18, !18}
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_set", scope: !4574, file: !4553, line: 500, baseType: !4593, size: 64, offset: 256)
!4593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4594, size: 64)
!4594 = !DISubroutineType(types: !4595)
!4595 = !{!18, !4551, !4596, !4596, !4596, !384, !4361}
!4596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !727, size: 64)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4574, file: !4553, line: 511, baseType: !4577, size: 64, offset: 320)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4574, file: !4553, line: 527, baseType: !4599, size: 64, offset: 384)
!4599 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4600, size: 64)
!4600 = !DISubroutineType(types: !4601)
!4601 = !{!18, !4602, !4361}
!4602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4603, size: 64)
!4603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_set", file: !4553, line: 1190, size: 384, elements: !4604)
!4604 = !{!4605, !4606, !4607, !4609, !4610, !4611, !5341}
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !4603, file: !4553, line: 1191, baseType: !4409, size: 64)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4603, file: !4553, line: 1192, baseType: !4551, size: 64, offset: 64)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4603, file: !4553, line: 1193, baseType: !4608, size: 64, offset: 128)
!4608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4210, size: 64)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4603, file: !4553, line: 1195, baseType: !384, size: 32, offset: 192)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4603, file: !4553, line: 1196, baseType: !384, size: 32, offset: 224)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "connectors", scope: !4603, file: !4553, line: 1198, baseType: !4612, size: 64, offset: 256)
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4613, size: 64)
!4613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4614, size: 64)
!4614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector", file: !4615, line: 1170, size: 9280, elements: !4616)
!4615 = !DIFile(filename: "./include/drm/drm_connector.h", directory: "/home/lizy2001/genbc/linux")
!4616 = !{!4617, !4618, !4619, !4632, !4633, !4634, !4635, !4636, !4637, !4638, !4639, !4640, !4641, !4642, !4643, !4649, !4650, !4656, !4657, !4708, !5083, !5084, !5085, !5086, !5087, !5088, !5089, !5090, !5092, !5093, !5133, !5165, !5166, !5167, !5168, !5169, !5170, !5172, !5174, !5176, !5177, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5317, !5318, !5319, !5320, !5321, !5322, !5324, !5325, !5326}
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4614, file: !4615, line: 1172, baseType: !6, size: 64)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "kdev", scope: !4614, file: !4615, line: 1174, baseType: !34, size: 64, offset: 64)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4614, file: !4615, line: 1176, baseType: !4620, size: 64, offset: 128)
!4620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4621, size: 64)
!4621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !36, line: 99, size: 256, elements: !4622)
!4622 = !{!4623, !4624, !4628}
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4621, file: !36, line: 100, baseType: !133, size: 128)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4621, file: !36, line: 101, baseType: !4625, size: 64, offset: 128)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!127, !34, !4620, !96}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4621, file: !36, line: 103, baseType: !4629, size: 64, offset: 192)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!127, !34, !4620, !43, !143}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4614, file: !4615, line: 1186, baseType: !11, size: 128, offset: 192)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4614, file: !4615, line: 1189, baseType: !4415, size: 256, offset: 320)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4614, file: !4615, line: 1192, baseType: !96, size: 64, offset: 576)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4614, file: !4615, line: 1199, baseType: !552, size: 192, offset: 640)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4614, file: !4615, line: 1207, baseType: !210, size: 32, offset: 832)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "connector_type", scope: !4614, file: !4615, line: 1213, baseType: !18, size: 32, offset: 864)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "connector_type_id", scope: !4614, file: !4615, line: 1215, baseType: !18, size: 32, offset: 896)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_allowed", scope: !4614, file: !4615, line: 1221, baseType: !315, size: 8, offset: 928)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "doublescan_allowed", scope: !4614, file: !4615, line: 1227, baseType: !315, size: 8, offset: 936)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_allowed", scope: !4614, file: !4615, line: 1233, baseType: !315, size: 8, offset: 944)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "ycbcr_420_allowed", scope: !4614, file: !4615, line: 1241, baseType: !315, size: 8, offset: 952)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "registration_state", scope: !4614, file: !4615, line: 1249, baseType: !4644, size: 32, offset: 960)
!4644 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_registration_state", file: !4615, line: 94, baseType: !210, size: 32, elements: !4645)
!4645 = !{!4646, !4647, !4648}
!4646 = !DIEnumerator(name: "DRM_CONNECTOR_INITIALIZING", value: 0, isUnsigned: true)
!4647 = !DIEnumerator(name: "DRM_CONNECTOR_REGISTERED", value: 1, isUnsigned: true)
!4648 = !DIEnumerator(name: "DRM_CONNECTOR_UNREGISTERED", value: 2, isUnsigned: true)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !4614, file: !4615, line: 1256, baseType: !11, size: 128, offset: 1024)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4614, file: !4615, line: 1263, baseType: !4651, size: 32, offset: 1152)
!4651 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_status", file: !4615, line: 59, baseType: !210, size: 32, elements: !4652)
!4652 = !{!4653, !4654, !4655}
!4653 = !DIEnumerator(name: "connector_status_connected", value: 1, isUnsigned: true)
!4654 = !DIEnumerator(name: "connector_status_disconnected", value: 2, isUnsigned: true)
!4655 = !DIEnumerator(name: "connector_status_unknown", value: 3, isUnsigned: true)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "probed_modes", scope: !4614, file: !4615, line: 1271, baseType: !11, size: 128, offset: 1216)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "display_info", scope: !4614, file: !4615, line: 1282, baseType: !4658, size: 1216, offset: 1344)
!4658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_display_info", file: !4615, line: 428, size: 1216, elements: !4659)
!4659 = !{!4660, !4661, !4662, !4663, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4702, !4703}
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm", scope: !4658, file: !4615, line: 432, baseType: !210, size: 32)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm", scope: !4658, file: !4615, line: 437, baseType: !210, size: 32, offset: 32)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "bpc", scope: !4658, file: !4615, line: 442, baseType: !210, size: 32, offset: 64)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "subpixel_order", scope: !4658, file: !4615, line: 447, baseType: !4664, size: 32, offset: 96)
!4664 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "subpixel_order", file: !4615, line: 133, baseType: !210, size: 32, elements: !4665)
!4665 = !{!4666, !4667, !4668, !4669, !4670, !4671}
!4666 = !DIEnumerator(name: "SubPixelUnknown", value: 0, isUnsigned: true)
!4667 = !DIEnumerator(name: "SubPixelHorizontalRGB", value: 1, isUnsigned: true)
!4668 = !DIEnumerator(name: "SubPixelHorizontalBGR", value: 2, isUnsigned: true)
!4669 = !DIEnumerator(name: "SubPixelVerticalRGB", value: 3, isUnsigned: true)
!4670 = !DIEnumerator(name: "SubPixelVerticalBGR", value: 4, isUnsigned: true)
!4671 = !DIEnumerator(name: "SubPixelNone", value: 5, isUnsigned: true)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation", scope: !4658, file: !4615, line: 461, baseType: !18, size: 32, offset: 128)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "color_formats", scope: !4658, file: !4615, line: 469, baseType: !240, size: 32, offset: 160)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "bus_formats", scope: !4658, file: !4615, line: 476, baseType: !3804, size: 64, offset: 192)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "num_bus_formats", scope: !4658, file: !4615, line: 480, baseType: !210, size: 32, offset: 256)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4658, file: !4615, line: 487, baseType: !240, size: 32, offset: 288)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "max_tmds_clock", scope: !4658, file: !4615, line: 493, baseType: !18, size: 32, offset: 320)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_dual", scope: !4658, file: !4615, line: 498, baseType: !315, size: 8, offset: 352)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "is_hdmi", scope: !4658, file: !4615, line: 506, baseType: !315, size: 8, offset: 360)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "has_hdmi_infoframe", scope: !4658, file: !4615, line: 511, baseType: !315, size: 8, offset: 368)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_quant_range_selectable", scope: !4658, file: !4615, line: 517, baseType: !315, size: 8, offset: 376)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "edid_hdmi_dc_modes", scope: !4658, file: !4615, line: 523, baseType: !1227, size: 8, offset: 384)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "cea_rev", scope: !4658, file: !4615, line: 528, baseType: !1227, size: 8, offset: 392)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "hdmi", scope: !4658, file: !4615, line: 533, baseType: !4685, size: 704, offset: 448)
!4685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_hdmi_info", file: !4615, line: 185, size: 704, elements: !4686)
!4686 = !{!4687, !4697, !4699, !4700, !4701}
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "scdc", scope: !4685, file: !4615, line: 187, baseType: !4688, size: 32)
!4688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_scdc", file: !4615, line: 163, size: 32, elements: !4689)
!4689 = !{!4690, !4691, !4692}
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4688, file: !4615, line: 167, baseType: !315, size: 8)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "read_request", scope: !4688, file: !4615, line: 171, baseType: !315, size: 8, offset: 8)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling", scope: !4688, file: !4615, line: 175, baseType: !4693, size: 16, offset: 16)
!4693 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_scrambling", file: !4615, line: 146, size: 16, elements: !4694)
!4694 = !{!4695, !4696}
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4693, file: !4615, line: 150, baseType: !315, size: 8)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "low_rates", scope: !4693, file: !4615, line: 154, baseType: !315, size: 8, offset: 8)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "y420_vdb_modes", scope: !4685, file: !4615, line: 195, baseType: !4698, size: 256, offset: 64)
!4698 = !DICompositeType(tag: DW_TAG_array_type, baseType: !146, size: 256, elements: !1036)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "y420_cmdb_modes", scope: !4685, file: !4615, line: 203, baseType: !4698, size: 256, offset: 320)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "y420_cmdb_map", scope: !4685, file: !4615, line: 206, baseType: !246, size: 64, offset: 576)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "y420_dc_modes", scope: !4685, file: !4615, line: 209, baseType: !1227, size: 8, offset: 640)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "non_desktop", scope: !4658, file: !4615, line: 538, baseType: !315, size: 8, offset: 1152)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "monitor_range", scope: !4658, file: !4615, line: 543, baseType: !4704, size: 16, offset: 1160)
!4704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_monitor_range_info", file: !4615, line: 269, size: 16, elements: !4705)
!4705 = !{!4706, !4707}
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "min_vfreq", scope: !4704, file: !4615, line: 270, baseType: !1227, size: 8)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfreq", scope: !4704, file: !4615, line: 271, baseType: !1227, size: 8, offset: 8)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4614, file: !4615, line: 1285, baseType: !4709, size: 64, offset: 2560)
!4709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4710, size: 64)
!4710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4711)
!4711 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_funcs", file: !4615, line: 749, size: 896, elements: !4712)
!4712 = !{!4713, !4717, !4721, !4725, !4726, !4730, !4734, !4738, !4739, !4740, !5033, !5037, !5041, !5047}
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !4711, file: !4615, line: 766, baseType: !4714, size: 64)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{!18, !4613, !18}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4711, file: !4615, line: 778, baseType: !4718, size: 64, offset: 64)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{null, !4613}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !4711, file: !4615, line: 806, baseType: !4722, size: 64, offset: 128)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{!4651, !4613, !315}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !4711, file: !4615, line: 823, baseType: !4718, size: 64, offset: 192)
!4726 = !DIDerivedType(tag: DW_TAG_member, name: "fill_modes", scope: !4711, file: !4615, line: 848, baseType: !4727, size: 64, offset: 256)
!4727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4728, size: 64)
!4728 = !DISubroutineType(types: !4729)
!4729 = !{!18, !4613, !384, !384}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !4711, file: !4615, line: 864, baseType: !4731, size: 64, offset: 320)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!18, !4613, !4427, !4127}
!4734 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !4711, file: !4615, line: 883, baseType: !4735, size: 64, offset: 384)
!4735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4736, size: 64)
!4736 = !DISubroutineType(types: !4737)
!4737 = !{!18, !4613}
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !4711, file: !4615, line: 896, baseType: !4718, size: 64, offset: 448)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4711, file: !4615, line: 906, baseType: !4718, size: 64, offset: 512)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !4711, file: !4615, line: 939, baseType: !4741, size: 64, offset: 576)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DISubroutineType(types: !4743)
!4743 = !{!4744, !4613}
!4744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4745, size: 64)
!4745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_state", file: !4615, line: 605, size: 1216, elements: !4746)
!4746 = !{!4747, !4748, !4749, !4959, !4964, !4965, !4966, !4999, !5000, !5001, !5002, !5003, !5004, !5005, !5006, !5030, !5031, !5032}
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !4745, file: !4615, line: 607, baseType: !4613, size: 64)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4745, file: !4615, line: 615, baseType: !4551, size: 64, offset: 64)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "best_encoder", scope: !4745, file: !4615, line: 633, baseType: !4750, size: 64, offset: 128)
!4750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4751, size: 64)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder", file: !4752, line: 99, size: 960, elements: !4753)
!4752 = !DIFile(filename: "./include/drm/drm_encoder.h", directory: "/home/lizy2001/genbc/linux")
!4753 = !{!4754, !4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4779}
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4751, file: !4752, line: 100, baseType: !6, size: 64)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4751, file: !4752, line: 101, baseType: !11, size: 128, offset: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4751, file: !4752, line: 103, baseType: !4415, size: 256, offset: 192)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4751, file: !4752, line: 104, baseType: !96, size: 64, offset: 448)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_type", scope: !4751, file: !4752, line: 131, baseType: !18, size: 32, offset: 512)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4751, file: !4752, line: 137, baseType: !210, size: 32, offset: 544)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "possible_crtcs", scope: !4751, file: !4752, line: 150, baseType: !384, size: 32, offset: 576)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "possible_clones", scope: !4751, file: !4752, line: 171, baseType: !384, size: 32, offset: 608)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4751, file: !4752, line: 178, baseType: !4551, size: 64, offset: 640)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_chain", scope: !4751, file: !4752, line: 184, baseType: !11, size: 128, offset: 704)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4751, file: !4752, line: 186, baseType: !4765, size: 64, offset: 832)
!4765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4766, size: 64)
!4766 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4767)
!4767 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder_funcs", file: !4752, line: 40, size: 256, elements: !4768)
!4768 = !{!4769, !4773, !4774, !4778}
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4767, file: !4752, line: 48, baseType: !4770, size: 64)
!4770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4771, size: 64)
!4771 = !DISubroutineType(types: !4772)
!4772 = !{null, !4750}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4767, file: !4752, line: 57, baseType: !4770, size: 64, offset: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !4767, file: !4752, line: 72, baseType: !4775, size: 64, offset: 128)
!4775 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4776, size: 64)
!4776 = !DISubroutineType(types: !4777)
!4777 = !{!18, !4750}
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !4767, file: !4752, line: 83, baseType: !4770, size: 64, offset: 192)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4751, file: !4752, line: 187, baseType: !4780, size: 64, offset: 896)
!4780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 64)
!4781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4782)
!4782 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder_helper_funcs", file: !4783, line: 519, size: 832, elements: !4784)
!4783 = !DIFile(filename: "./include/drm/drm_modeset_helper_vtables.h", directory: "/home/lizy2001/genbc/linux")
!4784 = !{!4785, !4789, !4793, !4797, !4798, !4799, !4803, !4944, !4948, !4952, !4953, !4954, !4955}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !4782, file: !4783, line: 536, baseType: !4786, size: 64)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{null, !4750, !18}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !4782, file: !4783, line: 569, baseType: !4790, size: 64, offset: 64)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{!4246, !4750, !4514}
!4793 = !DIDerivedType(tag: DW_TAG_member, name: "mode_fixup", scope: !4782, file: !4783, line: 612, baseType: !4794, size: 64, offset: 128)
!4794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4795, size: 64)
!4795 = !DISubroutineType(types: !4796)
!4796 = !{!315, !4750, !4514, !4608}
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4782, file: !4783, line: 629, baseType: !4770, size: 64, offset: 192)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !4782, file: !4783, line: 644, baseType: !4770, size: 64, offset: 256)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !4782, file: !4783, line: 668, baseType: !4800, size: 64, offset: 320)
!4800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4801, size: 64)
!4801 = !DISubroutineType(types: !4802)
!4802 = !{null, !4750, !4608, !4608}
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_mode_set", scope: !4782, file: !4783, line: 691, baseType: !4804, size: 64, offset: 384)
!4804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4805, size: 64)
!4805 = !DISubroutineType(types: !4806)
!4806 = !{null, !4750, !4807, !4744}
!4807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4808, size: 64)
!4808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_state", file: !4553, line: 99, size: 2624, elements: !4809)
!4809 = !{!4810, !4811, !4812, !4813, !4814, !4815, !4816, !4817, !4818, !4819, !4820, !4821, !4822, !4823, !4824, !4825, !4835, !4836, !4837, !4838, !4839, !4840, !4841, !4842, !4931, !4943}
!4810 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4808, file: !4553, line: 101, baseType: !4551, size: 64)
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4808, file: !4553, line: 108, baseType: !315, size: 8, offset: 64)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !4808, file: !4553, line: 123, baseType: !315, size: 8, offset: 72)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "planes_changed", scope: !4808, file: !4553, line: 129, baseType: !315, size: 1, offset: 80, flags: DIFlagBitField, extraData: i64 80)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "mode_changed", scope: !4808, file: !4553, line: 141, baseType: !315, size: 1, offset: 81, flags: DIFlagBitField, extraData: i64 80)
!4815 = !DIDerivedType(tag: DW_TAG_member, name: "active_changed", scope: !4808, file: !4553, line: 148, baseType: !315, size: 1, offset: 82, flags: DIFlagBitField, extraData: i64 80)
!4816 = !DIDerivedType(tag: DW_TAG_member, name: "connectors_changed", scope: !4808, file: !4553, line: 159, baseType: !315, size: 1, offset: 83, flags: DIFlagBitField, extraData: i64 80)
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "zpos_changed", scope: !4808, file: !4553, line: 165, baseType: !315, size: 1, offset: 84, flags: DIFlagBitField, extraData: i64 80)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgmt_changed", scope: !4808, file: !4553, line: 171, baseType: !315, size: 1, offset: 85, flags: DIFlagBitField, extraData: i64 80)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "no_vblank", scope: !4808, file: !4553, line: 207, baseType: !315, size: 1, offset: 86, flags: DIFlagBitField, extraData: i64 80)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "plane_mask", scope: !4808, file: !4553, line: 213, baseType: !240, size: 32, offset: 96)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "connector_mask", scope: !4808, file: !4553, line: 219, baseType: !240, size: 32, offset: 128)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_mask", scope: !4808, file: !4553, line: 225, baseType: !240, size: 32, offset: 160)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "adjusted_mode", scope: !4808, file: !4553, line: 240, baseType: !4210, size: 960, offset: 192)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4808, file: !4553, line: 257, baseType: !4210, size: 960, offset: 1152)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "mode_blob", scope: !4808, file: !4553, line: 263, baseType: !4826, size: 64, offset: 2112)
!4826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4827, size: 64)
!4827 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_property_blob", file: !4429, line: 209, size: 704, elements: !4828)
!4828 = !{!4829, !4830, !4831, !4832, !4833, !4834}
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4827, file: !4429, line: 210, baseType: !4415, size: 256)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4827, file: !4429, line: 211, baseType: !6, size: 64, offset: 256)
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "head_global", scope: !4827, file: !4429, line: 212, baseType: !11, size: 128, offset: 320)
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "head_file", scope: !4827, file: !4429, line: 213, baseType: !11, size: 128, offset: 448)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4827, file: !4429, line: 214, baseType: !143, size: 64, offset: 576)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4827, file: !4429, line: 215, baseType: !170, size: 64, offset: 640)
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut", scope: !4808, file: !4553, line: 272, baseType: !4826, size: 64, offset: 2176)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "ctm", scope: !4808, file: !4553, line: 280, baseType: !4826, size: 64, offset: 2240)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut", scope: !4808, file: !4553, line: 289, baseType: !4826, size: 64, offset: 2304)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "target_vblank", scope: !4808, file: !4553, line: 297, baseType: !240, size: 32, offset: 2368)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "async_flip", scope: !4808, file: !4553, line: 305, baseType: !315, size: 8, offset: 2400)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "vrr_enabled", scope: !4808, file: !4553, line: 314, baseType: !315, size: 8, offset: 2408)
!4841 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_active", scope: !4808, file: !4553, line: 325, baseType: !315, size: 8, offset: 2416)
!4842 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4808, file: !4553, line: 382, baseType: !4843, size: 64, offset: 2432)
!4843 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4844, size: 64)
!4844 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_pending_vblank_event", file: !4194, line: 42, size: 960, elements: !4845)
!4845 = !{!4846, !4909, !4910, !4911}
!4846 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4844, file: !4194, line: 46, baseType: !4847, size: 576)
!4847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_pending_event", file: !3940, line: 90, size: 576, elements: !4848)
!4848 = !{!4849, !4850, !4854, !4860, !4906, !4907, !4908}
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !4847, file: !3940, line: 98, baseType: !1421, size: 64)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "completion_release", scope: !4847, file: !3940, line: 107, baseType: !4851, size: 64, offset: 64)
!4851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4852, size: 64)
!4852 = !DISubroutineType(types: !4853)
!4853 = !{null, !1421}
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4847, file: !3940, line: 117, baseType: !4855, size: 64, offset: 128)
!4855 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4856, size: 64)
!4856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_event", file: !3957, line: 976, size: 64, elements: !4857)
!4857 = !{!4858, !4859}
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4856, file: !3957, line: 977, baseType: !242, size: 32)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4856, file: !3957, line: 978, baseType: !242, size: 32, offset: 32)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !4847, file: !3940, line: 125, baseType: !4861, size: 64, offset: 192)
!4861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4862, size: 64)
!4862 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence", file: !4863, line: 65, size: 512, elements: !4864)
!4863 = !DIFile(filename: "./include/linux/dma-fence.h", directory: "/home/lizy2001/genbc/linux")
!4864 = !{!4865, !4866, !4895, !4901, !4902, !4903, !4904, !4905}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4862, file: !4863, line: 66, baseType: !940, size: 64)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4862, file: !4863, line: 67, baseType: !4867, size: 64, offset: 64)
!4867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4868, size: 64)
!4868 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4869)
!4869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence_ops", file: !4863, line: 125, size: 576, elements: !4870)
!4870 = !{!4871, !4872, !4876, !4877, !4881, !4882, !4886, !4890, !4894}
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "use_64bit_seqno", scope: !4869, file: !4863, line: 132, baseType: !315, size: 8)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "get_driver_name", scope: !4869, file: !4863, line: 143, baseType: !4873, size: 64, offset: 64)
!4873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4874, size: 64)
!4874 = !DISubroutineType(types: !4875)
!4875 = !{!43, !4861}
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "get_timeline_name", scope: !4869, file: !4863, line: 155, baseType: !4873, size: 64, offset: 128)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "enable_signaling", scope: !4869, file: !4863, line: 192, baseType: !4878, size: 64, offset: 192)
!4878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4879, size: 64)
!4879 = !DISubroutineType(types: !4880)
!4880 = !{!315, !4861}
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "signaled", scope: !4869, file: !4863, line: 209, baseType: !4878, size: 64, offset: 256)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !4869, file: !4863, line: 231, baseType: !4883, size: 64, offset: 320)
!4883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4884, size: 64)
!4884 = !DISubroutineType(types: !4885)
!4885 = !{!131, !4861, !315, !131}
!4886 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4869, file: !4863, line: 242, baseType: !4887, size: 64, offset: 384)
!4887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4888, size: 64)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{null, !4861}
!4890 = !DIDerivedType(tag: DW_TAG_member, name: "fence_value_str", scope: !4869, file: !4863, line: 252, baseType: !4891, size: 64, offset: 448)
!4891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4892, size: 64)
!4892 = !DISubroutineType(types: !4893)
!4893 = !{null, !4861, !96, !18}
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "timeline_value_str", scope: !4869, file: !4863, line: 262, baseType: !4891, size: 64, offset: 512)
!4895 = !DIDerivedType(tag: DW_TAG_member, scope: !4862, file: !4863, line: 84, baseType: !4896, size: 128, offset: 128)
!4896 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4862, file: !4863, line: 84, size: 128, elements: !4897)
!4897 = !{!4898, !4899, !4900}
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "cb_list", scope: !4896, file: !4863, line: 85, baseType: !11, size: 128)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !4896, file: !4863, line: 87, baseType: !1171, size: 64)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4896, file: !4863, line: 89, baseType: !189, size: 128, align: 64)
!4901 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4862, file: !4863, line: 91, baseType: !246, size: 64, offset: 256)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !4862, file: !4863, line: 92, baseType: !246, size: 64, offset: 320)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4862, file: !4863, line: 93, baseType: !146, size: 64, offset: 384)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4862, file: !4863, line: 94, baseType: !20, size: 32, offset: 448)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4862, file: !4863, line: 95, baseType: !18, size: 32, offset: 480)
!4906 = !DIDerivedType(tag: DW_TAG_member, name: "file_priv", scope: !4847, file: !3940, line: 133, baseType: !3938, size: 64, offset: 256)
!4907 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4847, file: !3940, line: 142, baseType: !11, size: 128, offset: 320)
!4908 = !DIDerivedType(tag: DW_TAG_member, name: "pending_link", scope: !4847, file: !3940, line: 151, baseType: !11, size: 128, offset: 448)
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !4844, file: !4194, line: 50, baseType: !210, size: 32, offset: 576)
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !4844, file: !4194, line: 54, baseType: !246, size: 64, offset: 640)
!4911 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4844, file: !4194, line: 78, baseType: !4912, size: 256, offset: 704)
!4912 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4844, file: !4194, line: 58, size: 256, elements: !4913)
!4913 = !{!4914, !4915, !4924}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4912, file: !4194, line: 62, baseType: !4856, size: 64)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "vbl", scope: !4912, file: !4194, line: 72, baseType: !4916, size: 256)
!4916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_event_vblank", file: !3957, line: 985, size: 256, elements: !4917)
!4917 = !{!4918, !4919, !4920, !4921, !4922, !4923}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4916, file: !3957, line: 986, baseType: !4856, size: 64)
!4919 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !4916, file: !3957, line: 987, baseType: !247, size: 64, offset: 64)
!4920 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !4916, file: !3957, line: 988, baseType: !242, size: 32, offset: 128)
!4921 = !DIDerivedType(tag: DW_TAG_member, name: "tv_usec", scope: !4916, file: !3957, line: 989, baseType: !242, size: 32, offset: 160)
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !4916, file: !3957, line: 990, baseType: !242, size: 32, offset: 192)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_id", scope: !4916, file: !3957, line: 991, baseType: !242, size: 32, offset: 224)
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !4912, file: !4194, line: 77, baseType: !4925, size: 256)
!4925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_event_crtc_sequence", file: !3957, line: 997, size: 256, elements: !4926)
!4926 = !{!4927, !4928, !4929, !4930}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4925, file: !3957, line: 998, baseType: !4856, size: 64)
!4928 = !DIDerivedType(tag: DW_TAG_member, name: "user_data", scope: !4925, file: !3957, line: 999, baseType: !247, size: 64, offset: 64)
!4929 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !4925, file: !3957, line: 1000, baseType: !365, size: 64, offset: 128)
!4930 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !4925, file: !3957, line: 1001, baseType: !247, size: 64, offset: 192)
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !4808, file: !4553, line: 391, baseType: !4932, size: 64, offset: 2496)
!4932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 64)
!4933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_commit", file: !4522, line: 70, size: 960, elements: !4934)
!4934 = !{!4935, !4936, !4937, !4938, !4939, !4940, !4941, !4942}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4933, file: !4522, line: 76, baseType: !4551, size: 64)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4933, file: !4522, line: 85, baseType: !20, size: 32, offset: 64)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "flip_done", scope: !4933, file: !4522, line: 99, baseType: !1422, size: 192, offset: 128)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "hw_done", scope: !4933, file: !4522, line: 117, baseType: !1422, size: 192, offset: 320)
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_done", scope: !4933, file: !4522, line: 131, baseType: !1422, size: 192, offset: 512)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "commit_entry", scope: !4933, file: !4522, line: 139, baseType: !11, size: 128, offset: 704)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !4933, file: !4522, line: 146, baseType: !4843, size: 64, offset: 832)
!4942 = !DIDerivedType(tag: DW_TAG_member, name: "abort_completion", scope: !4933, file: !4522, line: 155, baseType: !315, size: 8, offset: 896)
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4808, file: !4553, line: 394, baseType: !4520, size: 64, offset: 2560)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !4782, file: !4783, line: 710, baseType: !4945, size: 64, offset: 448)
!4945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4946, size: 64)
!4946 = !DISubroutineType(types: !4947)
!4947 = !{!4651, !4750, !4613}
!4948 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_disable", scope: !4782, file: !4783, line: 733, baseType: !4949, size: 64, offset: 512)
!4949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4950, size: 64)
!4950 = !DISubroutineType(types: !4951)
!4951 = !{null, !4750, !4520}
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_enable", scope: !4782, file: !4783, line: 756, baseType: !4949, size: 64, offset: 576)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4782, file: !4783, line: 790, baseType: !4770, size: 64, offset: 640)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4782, file: !4783, line: 808, baseType: !4770, size: 64, offset: 704)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !4782, file: !4783, line: 846, baseType: !4956, size: 64, offset: 768)
!4956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4957, size: 64)
!4957 = !DISubroutineType(types: !4958)
!4958 = !{!18, !4750, !4807, !4744}
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "link_status", scope: !4745, file: !4615, line: 639, baseType: !4960, size: 32, offset: 192)
!4960 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_link_status", file: !4615, line: 223, baseType: !210, size: 32, elements: !4961)
!4961 = !{!4962, !4963}
!4962 = !DIEnumerator(name: "DRM_LINK_STATUS_GOOD", value: 0, isUnsigned: true)
!4963 = !DIEnumerator(name: "DRM_LINK_STATUS_BAD", value: 1, isUnsigned: true)
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4745, file: !4615, line: 642, baseType: !4520, size: 64, offset: 256)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !4745, file: !4615, line: 649, baseType: !4932, size: 64, offset: 320)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "tv", scope: !4745, file: !4615, line: 652, baseType: !4967, size: 384, offset: 384)
!4967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_tv_connector_state", file: !4615, line: 590, size: 384, elements: !4968)
!4968 = !{!4969, !4985, !4992, !4993, !4994, !4995, !4996, !4997, !4998}
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "subconnector", scope: !4967, file: !4615, line: 591, baseType: !4970, size: 32)
!4970 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_mode_subconnector", file: !4113, line: 334, baseType: !210, size: 32, elements: !4971)
!4971 = !{!4972, !4973, !4974, !4975, !4976, !4977, !4978, !4979, !4980, !4981, !4982, !4983, !4984}
!4972 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Automatic", value: 0, isUnsigned: true)
!4973 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Unknown", value: 0, isUnsigned: true)
!4974 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_VGA", value: 1, isUnsigned: true)
!4975 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DVID", value: 3, isUnsigned: true)
!4976 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DVIA", value: 4, isUnsigned: true)
!4977 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Composite", value: 5, isUnsigned: true)
!4978 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_SVIDEO", value: 6, isUnsigned: true)
!4979 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Component", value: 8, isUnsigned: true)
!4980 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_SCART", value: 9, isUnsigned: true)
!4981 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DisplayPort", value: 10, isUnsigned: true)
!4982 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_HDMIA", value: 11, isUnsigned: true)
!4983 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Native", value: 15, isUnsigned: true)
!4984 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Wireless", value: 18, isUnsigned: true)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "margins", scope: !4967, file: !4615, line: 592, baseType: !4986, size: 128, offset: 32)
!4986 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_tv_margins", file: !4615, line: 556, size: 128, elements: !4987)
!4987 = !{!4988, !4989, !4990, !4991}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !4986, file: !4615, line: 560, baseType: !210, size: 32)
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !4986, file: !4615, line: 565, baseType: !210, size: 32, offset: 32)
!4990 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !4986, file: !4615, line: 570, baseType: !210, size: 32, offset: 64)
!4991 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !4986, file: !4615, line: 575, baseType: !210, size: 32, offset: 96)
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4967, file: !4615, line: 593, baseType: !210, size: 32, offset: 160)
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "brightness", scope: !4967, file: !4615, line: 594, baseType: !210, size: 32, offset: 192)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !4967, file: !4615, line: 595, baseType: !210, size: 32, offset: 224)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "flicker_reduction", scope: !4967, file: !4615, line: 596, baseType: !210, size: 32, offset: 256)
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "overscan", scope: !4967, file: !4615, line: 597, baseType: !210, size: 32, offset: 288)
!4997 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !4967, file: !4615, line: 598, baseType: !210, size: 32, offset: 320)
!4998 = !DIDerivedType(tag: DW_TAG_member, name: "hue", scope: !4967, file: !4615, line: 599, baseType: !210, size: 32, offset: 352)
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_aware", scope: !4745, file: !4615, line: 666, baseType: !315, size: 8, offset: 768)
!5000 = !DIDerivedType(tag: DW_TAG_member, name: "picture_aspect_ratio", scope: !4745, file: !4615, line: 675, baseType: !4289, size: 32, offset: 800)
!5001 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !4745, file: !4615, line: 683, baseType: !210, size: 32, offset: 832)
!5002 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_content_type", scope: !4745, file: !4615, line: 689, baseType: !210, size: 32, offset: 864)
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode", scope: !4745, file: !4615, line: 695, baseType: !210, size: 32, offset: 896)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "content_protection", scope: !4745, file: !4615, line: 701, baseType: !210, size: 32, offset: 928)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !4745, file: !4615, line: 708, baseType: !240, size: 32, offset: 960)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_job", scope: !4745, file: !4615, line: 721, baseType: !5007, size: 64, offset: 1024)
!5007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5008, size: 64)
!5008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_writeback_job", file: !5009, line: 90, size: 704, elements: !5010)
!5009 = !DIFile(filename: "./include/drm/drm_writeback.h", directory: "/home/lizy2001/genbc/linux")
!5010 = !{!5011, !5024, !5025, !5026, !5027, !5028, !5029}
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !5008, file: !5009, line: 96, baseType: !5012, size: 64)
!5012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5013, size: 64)
!5013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_writeback_connector", file: !5009, line: 21, size: 10816, elements: !5014)
!5014 = !{!5015, !5016, !5017, !5018, !5019, !5020, !5021, !5022, !5023}
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5013, file: !5009, line: 25, baseType: !4614, size: 9280)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !5013, file: !5009, line: 34, baseType: !4751, size: 960, offset: 9280)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_formats_blob_ptr", scope: !5013, file: !5009, line: 43, baseType: !4826, size: 64, offset: 10240)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "job_lock", scope: !5013, file: !5009, line: 46, baseType: !55, offset: 10304)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "job_queue", scope: !5013, file: !5009, line: 58, baseType: !11, size: 128, offset: 10304)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "fence_context", scope: !5013, file: !5009, line: 65, baseType: !210, size: 32, offset: 10432)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "fence_lock", scope: !5013, file: !5009, line: 71, baseType: !55, offset: 10464)
!5022 = !DIDerivedType(tag: DW_TAG_member, name: "fence_seqno", scope: !5013, file: !5009, line: 78, baseType: !146, size: 64, offset: 10496)
!5023 = !DIDerivedType(tag: DW_TAG_member, name: "timeline_name", scope: !5013, file: !5009, line: 84, baseType: !2655, size: 256, offset: 10560)
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "prepared", scope: !5008, file: !5009, line: 103, baseType: !315, size: 8, offset: 64)
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_work", scope: !5008, file: !5009, line: 111, baseType: !1899, size: 256, offset: 128)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "list_entry", scope: !5008, file: !5009, line: 118, baseType: !11, size: 128, offset: 384)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !5008, file: !5009, line: 126, baseType: !4409, size: 64, offset: 512)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "out_fence", scope: !5008, file: !5009, line: 133, baseType: !4861, size: 64, offset: 576)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !5008, file: !5009, line: 140, baseType: !170, size: 64, offset: 640)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "max_requested_bpc", scope: !4745, file: !4615, line: 727, baseType: !1227, size: 8, offset: 1088)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "max_bpc", scope: !4745, file: !4615, line: 733, baseType: !1227, size: 8, offset: 1096)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_output_metadata", scope: !4745, file: !4615, line: 739, baseType: !4826, size: 64, offset: 1152)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !4711, file: !4615, line: 949, baseType: !5034, size: 64, offset: 640)
!5034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5035, size: 64)
!5035 = !DISubroutineType(types: !5036)
!5036 = !{null, !4613, !4744}
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !4711, file: !4615, line: 994, baseType: !5038, size: 64, offset: 704)
!5038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5039, size: 64)
!5039 = !DISubroutineType(types: !5040)
!5040 = !{!18, !4613, !4744, !4427, !4127}
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !4711, file: !4615, line: 1017, baseType: !5042, size: 64, offset: 768)
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5043 = !DISubroutineType(types: !5044)
!5044 = !{!18, !4613, !5045, !4427, !4126}
!5045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5046, size: 64)
!5046 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4745)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !4711, file: !4615, line: 1031, baseType: !5048, size: 64, offset: 832)
!5048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5049, size: 64)
!5049 = !DISubroutineType(types: !5050)
!5050 = !{null, !5051, !5045}
!5051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5052, size: 64)
!5052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_printer", file: !5053, line: 75, size: 256, elements: !5054)
!5053 = !DIFile(filename: "./include/drm/drm_print.h", directory: "/home/lizy2001/genbc/linux")
!5054 = !{!5055, !5077, !5081, !5082}
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "printfn", scope: !5052, file: !5053, line: 77, baseType: !5056, size: 64)
!5056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5057, size: 64)
!5057 = !DISubroutineType(types: !5058)
!5058 = !{null, !5051, !5059}
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "va_format", file: !5061, line: 90, size: 128, elements: !5062)
!5061 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!5062 = !{!5063, !5064}
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !5060, file: !5061, line: 91, baseType: !43, size: 64)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "va", scope: !5060, file: !5061, line: 92, baseType: !5065, size: 64, offset: 64)
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5066, size: 64)
!5066 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5067, line: 99, baseType: !5068)
!5067 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!5068 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5067, line: 40, baseType: !5069)
!5069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, baseType: !5070)
!5070 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5071, size: 192, elements: !1246)
!5071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !5072)
!5072 = !{!5073, !5074, !5075, !5076}
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5071, file: !3, baseType: !210, size: 32)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5071, file: !3, baseType: !210, size: 32, offset: 32)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5071, file: !3, baseType: !170, size: 64, offset: 64)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5071, file: !3, baseType: !170, size: 64, offset: 128)
!5077 = !DIDerivedType(tag: DW_TAG_member, name: "puts", scope: !5052, file: !5053, line: 78, baseType: !5078, size: 64, offset: 64)
!5078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5079, size: 64)
!5079 = !DISubroutineType(types: !5080)
!5080 = !{null, !5051, !43}
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5052, file: !5053, line: 79, baseType: !170, size: 64, offset: 128)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !5052, file: !5053, line: 80, baseType: !43, size: 64, offset: 192)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "edid_blob_ptr", scope: !4614, file: !4615, line: 1292, baseType: !4826, size: 64, offset: 2624)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4614, file: !4615, line: 1295, baseType: !4422, size: 3136, offset: 2688)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode_property", scope: !4614, file: !4615, line: 1301, baseType: !4427, size: 64, offset: 5824)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "vrr_capable_property", scope: !4614, file: !4615, line: 1312, baseType: !4427, size: 64, offset: 5888)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_property", scope: !4614, file: !4615, line: 1318, baseType: !4427, size: 64, offset: 5952)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "path_blob_ptr", scope: !4614, file: !4615, line: 1326, baseType: !4826, size: 64, offset: 6016)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "max_bpc_property", scope: !4614, file: !4615, line: 1332, baseType: !4427, size: 64, offset: 6080)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "polled", scope: !4614, file: !4615, line: 1359, baseType: !5091, size: 8, offset: 6144)
!5091 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !12, line: 102, baseType: !1227)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !4614, file: !4615, line: 1367, baseType: !18, size: 32, offset: 6176)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4614, file: !4615, line: 1370, baseType: !5094, size: 64, offset: 6208)
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 64)
!5095 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5096)
!5096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_helper_funcs", file: !4783, line: 868, size: 640, elements: !5097)
!5097 = !{!5098, !5099, !5103, !5107, !5112, !5116, !5120, !5124, !5125, !5129}
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "get_modes", scope: !5096, file: !4783, line: 905, baseType: !4735, size: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "detect_ctx", scope: !5096, file: !4783, line: 931, baseType: !5100, size: 64, offset: 64)
!5100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5101, size: 64)
!5101 = !DISubroutineType(types: !5102)
!5102 = !{!18, !4613, !4361, !315}
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !5096, file: !4783, line: 969, baseType: !5104, size: 64, offset: 128)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{!4246, !4613, !4608}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid_ctx", scope: !5096, file: !4783, line: 1008, baseType: !5108, size: 64, offset: 192)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!18, !4613, !4608, !4361, !5111}
!5111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4246, size: 64)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "best_encoder", scope: !5096, file: !4783, line: 1041, baseType: !5113, size: 64, offset: 256)
!5113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5114, size: 64)
!5114 = !DISubroutineType(types: !5115)
!5115 = !{!4750, !4613}
!5116 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_best_encoder", scope: !5096, file: !4783, line: 1068, baseType: !5117, size: 64, offset: 320)
!5117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5118, size: 64)
!5118 = !DISubroutineType(types: !5119)
!5119 = !{!4750, !4613, !4744}
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5096, file: !4783, line: 1102, baseType: !5121, size: 64, offset: 384)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!18, !4613, !4520}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_commit", scope: !5096, file: !4783, line: 1117, baseType: !5034, size: 64, offset: 448)
!5125 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_writeback_job", scope: !5096, file: !4783, line: 1134, baseType: !5126, size: 64, offset: 512)
!5126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5127, size: 64)
!5127 = !DISubroutineType(types: !5128)
!5128 = !{!18, !5012, !5007}
!5129 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_writeback_job", scope: !5096, file: !4783, line: 1149, baseType: !5130, size: 64, offset: 576)
!5130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5131, size: 64)
!5131 = !DISubroutineType(types: !5132)
!5132 = !{null, !5012, !5007}
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "cmdline_mode", scope: !4614, file: !4615, line: 1373, baseType: !5134, size: 672, offset: 6272)
!5134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_cmdline_mode", file: !4615, line: 1043, size: 672, elements: !5135)
!5135 = !{!5136, !5137, !5138, !5139, !5140, !5141, !5142, !5143, !5144, !5145, !5146, !5147, !5148, !5155, !5156, !5164}
!5136 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5134, file: !4615, line: 1049, baseType: !2655, size: 256)
!5137 = !DIDerivedType(tag: DW_TAG_member, name: "specified", scope: !5134, file: !4615, line: 1056, baseType: !315, size: 8, offset: 256)
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "refresh_specified", scope: !5134, file: !4615, line: 1063, baseType: !315, size: 8, offset: 264)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "bpp_specified", scope: !5134, file: !4615, line: 1070, baseType: !315, size: 8, offset: 272)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !5134, file: !4615, line: 1077, baseType: !18, size: 32, offset: 288)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !5134, file: !4615, line: 1084, baseType: !18, size: 32, offset: 320)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "bpp", scope: !5134, file: !4615, line: 1091, baseType: !18, size: 32, offset: 352)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !5134, file: !4615, line: 1098, baseType: !18, size: 32, offset: 384)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5134, file: !4615, line: 1105, baseType: !315, size: 8, offset: 416)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !5134, file: !4615, line: 1112, baseType: !315, size: 8, offset: 424)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !5134, file: !4615, line: 1120, baseType: !315, size: 8, offset: 432)
!5147 = !DIDerivedType(tag: DW_TAG_member, name: "margins", scope: !5134, file: !4615, line: 1128, baseType: !315, size: 8, offset: 440)
!5148 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !5134, file: !4615, line: 1136, baseType: !5149, size: 32, offset: 448)
!5149 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_force", file: !4615, line: 46, baseType: !210, size: 32, elements: !5150)
!5150 = !{!5151, !5152, !5153, !5154}
!5151 = !DIEnumerator(name: "DRM_FORCE_UNSPECIFIED", value: 0, isUnsigned: true)
!5152 = !DIEnumerator(name: "DRM_FORCE_OFF", value: 1, isUnsigned: true)
!5153 = !DIEnumerator(name: "DRM_FORCE_ON", value: 2, isUnsigned: true)
!5154 = !DIEnumerator(name: "DRM_FORCE_ON_DIGITAL", value: 3, isUnsigned: true)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "rotation_reflection", scope: !5134, file: !4615, line: 1146, baseType: !210, size: 32, offset: 480)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation", scope: !5134, file: !4615, line: 1154, baseType: !5157, size: 32, offset: 512)
!5157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_panel_orientation", file: !4615, line: 249, baseType: !18, size: 32, elements: !5158)
!5158 = !{!5159, !5160, !5161, !5162, !5163}
!5159 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_UNKNOWN", value: -1)
!5160 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_NORMAL", value: 0)
!5161 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_BOTTOM_UP", value: 1)
!5162 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_LEFT_UP", value: 2)
!5163 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_RIGHT_UP", value: 3)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "tv_margins", scope: !5134, file: !4615, line: 1159, baseType: !4986, size: 128, offset: 544)
!5165 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !4614, file: !4615, line: 1375, baseType: !5149, size: 32, offset: 6944)
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "override_edid", scope: !4614, file: !4615, line: 1377, baseType: !315, size: 8, offset: 6976)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "epoch_counter", scope: !4614, file: !4615, line: 1379, baseType: !246, size: 64, offset: 7040)
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "possible_encoders", scope: !4614, file: !4615, line: 1386, baseType: !240, size: 32, offset: 7104)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !4614, file: !4615, line: 1394, baseType: !4750, size: 64, offset: 7168)
!5170 = !DIDerivedType(tag: DW_TAG_member, name: "eld", scope: !4614, file: !4615, line: 1398, baseType: !5171, size: 1024, offset: 7232)
!5171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5091, size: 1024, elements: !3430)
!5172 = !DIDerivedType(tag: DW_TAG_member, name: "latency_present", scope: !4614, file: !4615, line: 1400, baseType: !5173, size: 16, offset: 8256)
!5173 = !DICompositeType(tag: DW_TAG_array_type, baseType: !315, size: 16, elements: !1489)
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "video_latency", scope: !4614, file: !4615, line: 1405, baseType: !5175, size: 64, offset: 8288)
!5175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !18, size: 64, elements: !1489)
!5176 = !DIDerivedType(tag: DW_TAG_member, name: "audio_latency", scope: !4614, file: !4615, line: 1410, baseType: !5175, size: 64, offset: 8352)
!5177 = !DIDerivedType(tag: DW_TAG_member, name: "ddc", scope: !4614, file: !4615, line: 1421, baseType: !5178, size: 64, offset: 8448)
!5178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5179, size: 64)
!5179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !5180, line: 695, size: 7552, elements: !5181)
!5180 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!5181 = !{!5182, !5183, !5184, !5221, !5222, !5236, !5243, !5244, !5245, !5246, !5247, !5248, !5249, !5253, !5254, !5255, !5256, !5288, !5299}
!5182 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5179, file: !5180, line: 696, baseType: !458, size: 64)
!5183 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5179, file: !5180, line: 697, baseType: !210, size: 32, offset: 64)
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !5179, file: !5180, line: 698, baseType: !5185, size: 64, offset: 128)
!5185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5186, size: 64)
!5186 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5187)
!5187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !5180, line: 519, size: 320, elements: !5188)
!5188 = !{!5189, !5202, !5203, !5216, !5217}
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !5187, file: !5180, line: 529, baseType: !5190, size: 64)
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5191, size: 64)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!18, !5178, !5193, !18}
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5194, size: 64)
!5194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !5195, line: 69, size: 128, elements: !5196)
!5195 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!5196 = !{!5197, !5198, !5199, !5200}
!5197 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5194, file: !5195, line: 70, baseType: !728, size: 16)
!5198 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5194, file: !5195, line: 71, baseType: !728, size: 16, offset: 16)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5194, file: !5195, line: 84, baseType: !728, size: 16, offset: 32)
!5200 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5194, file: !5195, line: 85, baseType: !5201, size: 64, offset: 64)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!5202 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !5187, file: !5180, line: 531, baseType: !5190, size: 64, offset: 64)
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !5187, file: !5180, line: 533, baseType: !5204, size: 64, offset: 128)
!5204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5205, size: 64)
!5205 = !DISubroutineType(types: !5206)
!5206 = !{!18, !5178, !727, !138, !45, !1227, !18, !5207}
!5207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5208, size: 64)
!5208 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !5195, line: 135, size: 272, elements: !5209)
!5209 = !{!5210, !5211, !5212}
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !5208, file: !5195, line: 136, baseType: !1228, size: 8)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !5208, file: !5195, line: 137, baseType: !728, size: 16)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5208, file: !5195, line: 138, baseType: !5213, size: 272)
!5213 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1228, size: 272, elements: !5214)
!5214 = !{!5215}
!5215 = !DISubrange(count: 34)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !5187, file: !5180, line: 536, baseType: !5204, size: 64, offset: 192)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !5187, file: !5180, line: 541, baseType: !5218, size: 64, offset: 256)
!5218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5219, size: 64)
!5219 = !DISubroutineType(types: !5220)
!5220 = !{!240, !5178}
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !5179, file: !5180, line: 699, baseType: !170, size: 64, offset: 192)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !5179, file: !5180, line: 702, baseType: !5223, size: 64, offset: 256)
!5223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5224, size: 64)
!5224 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5225)
!5225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !5180, line: 557, size: 192, elements: !5226)
!5226 = !{!5227, !5231, !5235}
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !5225, file: !5180, line: 558, baseType: !5228, size: 64)
!5228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5229, size: 64)
!5229 = !DISubroutineType(types: !5230)
!5230 = !{null, !5178, !210}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !5225, file: !5180, line: 559, baseType: !5232, size: 64, offset: 64)
!5232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5233, size: 64)
!5233 = !DISubroutineType(types: !5234)
!5234 = !{!18, !5178, !210}
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !5225, file: !5180, line: 560, baseType: !5228, size: 64, offset: 128)
!5236 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !5179, file: !5180, line: 703, baseType: !5237, size: 192, offset: 320)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !5238, line: 30, size: 192, elements: !5239)
!5238 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!5239 = !{!5240, !5241, !5242}
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !5237, file: !5238, line: 31, baseType: !648)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !5237, file: !5238, line: 32, baseType: !627, size: 128)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5237, file: !5238, line: 33, baseType: !1091, size: 64, offset: 128)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !5179, file: !5180, line: 704, baseType: !5237, size: 192, offset: 512)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5179, file: !5180, line: 706, baseType: !18, size: 32, offset: 704)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5179, file: !5180, line: 707, baseType: !18, size: 32, offset: 736)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5179, file: !5180, line: 708, baseType: !35, size: 5568, offset: 768)
!5247 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !5179, file: !5180, line: 709, baseType: !146, size: 64, offset: 6336)
!5248 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5179, file: !5180, line: 713, baseType: !18, size: 32, offset: 6400)
!5249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5179, file: !5180, line: 714, baseType: !5250, size: 384, offset: 6432)
!5250 = !DICompositeType(tag: DW_TAG_array_type, baseType: !45, size: 384, elements: !5251)
!5251 = !{!5252}
!5252 = !DISubrange(count: 48)
!5253 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !5179, file: !5180, line: 715, baseType: !1422, size: 192, offset: 6848)
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !5179, file: !5180, line: 717, baseType: !552, size: 192, offset: 7040)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !5179, file: !5180, line: 718, baseType: !11, size: 128, offset: 7232)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !5179, file: !5180, line: 720, baseType: !5257, size: 64, offset: 7360)
!5257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5258, size: 64)
!5258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !5180, line: 618, size: 832, elements: !5259)
!5259 = !{!5260, !5264, !5265, !5269, !5270, !5271, !5272, !5276, !5277, !5280, !5281, !5284, !5287}
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !5258, file: !5180, line: 619, baseType: !5261, size: 64)
!5261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5262, size: 64)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!18, !5178}
!5264 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !5258, file: !5180, line: 621, baseType: !5261, size: 64, offset: 64)
!5265 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !5258, file: !5180, line: 622, baseType: !5266, size: 64, offset: 128)
!5266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5267, size: 64)
!5267 = !DISubroutineType(types: !5268)
!5268 = !{null, !5178, !18}
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !5258, file: !5180, line: 623, baseType: !5261, size: 64, offset: 192)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !5258, file: !5180, line: 624, baseType: !5266, size: 64, offset: 256)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !5258, file: !5180, line: 625, baseType: !5261, size: 64, offset: 320)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !5258, file: !5180, line: 627, baseType: !5273, size: 64, offset: 384)
!5273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5274, size: 64)
!5274 = !DISubroutineType(types: !5275)
!5275 = !{null, !5178}
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !5258, file: !5180, line: 628, baseType: !5273, size: 64, offset: 448)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !5258, file: !5180, line: 631, baseType: !5278, size: 64, offset: 512)
!5278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5279, size: 64)
!5279 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !5180, line: 631, flags: DIFlagFwdDecl)
!5280 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !5258, file: !5180, line: 632, baseType: !5278, size: 64, offset: 576)
!5281 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !5258, file: !5180, line: 633, baseType: !5282, size: 64, offset: 640)
!5282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5283, size: 64)
!5283 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !5180, line: 633, flags: DIFlagFwdDecl)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !5258, file: !5180, line: 634, baseType: !5285, size: 64, offset: 704)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5286 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !5180, line: 634, flags: DIFlagFwdDecl)
!5287 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !5258, file: !5180, line: 635, baseType: !5285, size: 64, offset: 768)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !5179, file: !5180, line: 721, baseType: !5289, size: 64, offset: 7424)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5291)
!5291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !5180, line: 664, size: 192, elements: !5292)
!5292 = !{!5293, !5294, !5295, !5296, !5297, !5298}
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5291, file: !5180, line: 665, baseType: !246, size: 64)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !5291, file: !5180, line: 666, baseType: !18, size: 32, offset: 64)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !5291, file: !5180, line: 667, baseType: !727, size: 16, offset: 96)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !5291, file: !5180, line: 668, baseType: !727, size: 16, offset: 112)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !5291, file: !5180, line: 669, baseType: !727, size: 16, offset: 128)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !5291, file: !5180, line: 670, baseType: !727, size: 16, offset: 144)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !5179, file: !5180, line: 723, baseType: !3638, size: 64, offset: 7488)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "null_edid_counter", scope: !4614, file: !4615, line: 1427, baseType: !18, size: 32, offset: 8512)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "bad_edid_counter", scope: !4614, file: !4615, line: 1430, baseType: !210, size: 32, offset: 8544)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "edid_corrupt", scope: !4614, file: !4615, line: 1437, baseType: !315, size: 8, offset: 8576)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "real_edid_checksum", scope: !4614, file: !4615, line: 1443, baseType: !1227, size: 8, offset: 8584)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_entry", scope: !4614, file: !4615, line: 1446, baseType: !206, size: 64, offset: 8640)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4614, file: !4615, line: 1462, baseType: !4744, size: 64, offset: 8704)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "tile_blob_ptr", scope: !4614, file: !4615, line: 1479, baseType: !4826, size: 64, offset: 8768)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "has_tile", scope: !4614, file: !4615, line: 1482, baseType: !315, size: 8, offset: 8832)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "tile_group", scope: !4614, file: !4615, line: 1484, baseType: !5309, size: 64, offset: 8896)
!5309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5310, size: 64)
!5310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_tile_group", file: !4615, line: 1663, size: 256, elements: !5311)
!5311 = !{!5312, !5313, !5314, !5315}
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5310, file: !4615, line: 1664, baseType: !20, size: 32)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5310, file: !4615, line: 1665, baseType: !6, size: 64, offset: 64)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5310, file: !4615, line: 1666, baseType: !18, size: 32, offset: 128)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "group_data", scope: !5310, file: !4615, line: 1667, baseType: !5316, size: 64, offset: 160)
!5316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 64, elements: !1205)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "tile_is_single_monitor", scope: !4614, file: !4615, line: 1486, baseType: !315, size: 8, offset: 8960)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "num_h_tile", scope: !4614, file: !4615, line: 1490, baseType: !5091, size: 8, offset: 8968)
!5319 = !DIDerivedType(tag: DW_TAG_member, name: "num_v_tile", scope: !4614, file: !4615, line: 1490, baseType: !5091, size: 8, offset: 8976)
!5320 = !DIDerivedType(tag: DW_TAG_member, name: "tile_h_loc", scope: !4614, file: !4615, line: 1493, baseType: !5091, size: 8, offset: 8984)
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "tile_v_loc", scope: !4614, file: !4615, line: 1493, baseType: !5091, size: 8, offset: 8992)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "tile_h_size", scope: !4614, file: !4615, line: 1496, baseType: !5323, size: 16, offset: 9008)
!5323 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !12, line: 103, baseType: !727)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "tile_v_size", scope: !4614, file: !4615, line: 1496, baseType: !5323, size: 16, offset: 9024)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !4614, file: !4615, line: 1505, baseType: !183, size: 64, offset: 9088)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_sink_metadata", scope: !4614, file: !4615, line: 1508, baseType: !5327, size: 96, offset: 9152)
!5327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_sink_metadata", file: !4290, line: 378, size: 96, elements: !5328)
!5328 = !{!5329, !5330}
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !5327, file: !4290, line: 382, baseType: !242, size: 32)
!5330 = !DIDerivedType(tag: DW_TAG_member, scope: !5327, file: !4290, line: 386, baseType: !5331, size: 64, offset: 32)
!5331 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5327, file: !4290, line: 386, size: 64, elements: !5332)
!5332 = !{!5333}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "hdmi_type1", scope: !5331, file: !4290, line: 387, baseType: !5334, size: 64)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_static_metadata", file: !4290, line: 365, size: 64, elements: !5335)
!5335 = !{!5336, !5337, !5338, !5339, !5340}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "eotf", scope: !5334, file: !4290, line: 366, baseType: !1228, size: 8)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !5334, file: !4290, line: 367, baseType: !1228, size: 8, offset: 8)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "max_cll", scope: !5334, file: !4290, line: 368, baseType: !728, size: 16, offset: 16)
!5339 = !DIDerivedType(tag: DW_TAG_member, name: "max_fall", scope: !5334, file: !4290, line: 369, baseType: !728, size: 16, offset: 32)
!5340 = !DIDerivedType(tag: DW_TAG_member, name: "min_cll", scope: !5334, file: !4290, line: 370, baseType: !728, size: 16, offset: 48)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "num_connectors", scope: !4603, file: !4553, line: 1199, baseType: !143, size: 64, offset: 320)
!5342 = !DIDerivedType(tag: DW_TAG_member, name: "page_flip", scope: !4574, file: !4553, line: 583, baseType: !5343, size: 64, offset: 448)
!5343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5344, size: 64)
!5344 = !DISubroutineType(types: !5345)
!5345 = !{!18, !4551, !4409, !4843, !384, !4361}
!5346 = !DIDerivedType(tag: DW_TAG_member, name: "page_flip_target", scope: !4574, file: !4553, line: 602, baseType: !5347, size: 64, offset: 512)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = !DISubroutineType(types: !5349)
!5349 = !{!18, !4551, !4409, !4843, !384, !384, !4361}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !4574, file: !4553, line: 622, baseType: !5351, size: 64, offset: 576)
!5351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5352, size: 64)
!5352 = !DISubroutineType(types: !5353)
!5353 = !{!18, !4551, !4427, !4127}
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !4574, file: !4553, line: 656, baseType: !5355, size: 64, offset: 640)
!5355 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5356, size: 64)
!5356 = !DISubroutineType(types: !5357)
!5357 = !{!4807, !4551}
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !4574, file: !4553, line: 666, baseType: !5359, size: 64, offset: 704)
!5359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5360, size: 64)
!5360 = !DISubroutineType(types: !5361)
!5361 = !{null, !4551, !4807}
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !4574, file: !4553, line: 711, baseType: !5363, size: 64, offset: 768)
!5363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5364, size: 64)
!5364 = !DISubroutineType(types: !5365)
!5365 = !{!18, !4551, !4807, !4427, !4127}
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !4574, file: !4553, line: 733, baseType: !5367, size: 64, offset: 832)
!5367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5368, size: 64)
!5368 = !DISubroutineType(types: !5369)
!5369 = !{!18, !4551, !5370, !4427, !4126}
!5370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5371, size: 64)
!5371 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4808)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !4574, file: !4553, line: 751, baseType: !5373, size: 64, offset: 896)
!5373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5374, size: 64)
!5374 = !DISubroutineType(types: !5375)
!5375 = !{!18, !4551}
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !4574, file: !4553, line: 762, baseType: !4577, size: 64, offset: 960)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "set_crc_source", scope: !4574, file: !4553, line: 791, baseType: !5378, size: 64, offset: 1024)
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5379, size: 64)
!5379 = !DISubroutineType(types: !5380)
!5380 = !{!18, !4551, !43}
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "verify_crc_source", scope: !4574, file: !4553, line: 807, baseType: !5382, size: 64, offset: 1088)
!5382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5383, size: 64)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!18, !4551, !43, !5385}
!5385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "get_crc_sources", scope: !4574, file: !4553, line: 829, baseType: !5387, size: 64, offset: 1152)
!5387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5388, size: 64)
!5388 = !DISubroutineType(types: !5389)
!5389 = !{!5390, !4551, !5385}
!5390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5391, size: 64)
!5391 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !43)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !4574, file: !4553, line: 841, baseType: !5393, size: 64, offset: 1216)
!5393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5394, size: 64)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{null, !5051, !5370}
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_counter", scope: !4574, file: !4553, line: 868, baseType: !5397, size: 64, offset: 1280)
!5397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5398 = !DISubroutineType(types: !5399)
!5399 = !{!240, !4551}
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "enable_vblank", scope: !4574, file: !4553, line: 881, baseType: !5373, size: 64, offset: 1344)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "disable_vblank", scope: !4574, file: !4553, line: 889, baseType: !4577, size: 64, offset: 1408)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_timestamp", scope: !4574, file: !4553, line: 927, baseType: !5403, size: 64, offset: 1472)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!315, !4551, !534, !5406, !315}
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_size", scope: !4552, file: !4553, line: 1072, baseType: !384, size: 32, offset: 3264)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_store", scope: !4552, file: !4553, line: 1078, baseType: !5409, size: 64, offset: 3328)
!5409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5323, size: 64)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4552, file: !4553, line: 1081, baseType: !5411, size: 64, offset: 3392)
!5411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5412, size: 64)
!5412 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5413)
!5413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_helper_funcs", file: !4783, line: 61, size: 1024, elements: !5414)
!5414 = !{!5415, !5419, !5420, !5421, !5425, !5429, !5433, !5434, !5438, !5443, !5444, !5448, !5449, !5450, !5451, !5452}
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !5413, file: !4783, line: 78, baseType: !5416, size: 64)
!5416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5417, size: 64)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !4551, !18}
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5413, file: !4783, line: 93, baseType: !4577, size: 64, offset: 64)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5413, file: !4783, line: 108, baseType: !4577, size: 64, offset: 128)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !5413, file: !4783, line: 141, baseType: !5422, size: 64, offset: 192)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{!4246, !4551, !4514}
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "mode_fixup", scope: !5413, file: !4783, line: 187, baseType: !5426, size: 64, offset: 256)
!5426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5427, size: 64)
!5427 = !DISubroutineType(types: !5428)
!5428 = !{!315, !4551, !4514, !4608}
!5429 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !5413, file: !4783, line: 206, baseType: !5430, size: 64, offset: 320)
!5430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5431, size: 64)
!5431 = !DISubroutineType(types: !5432)
!5432 = !{!18, !4551, !4608, !4608, !18, !18, !4409}
!5433 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set_nofb", scope: !5413, file: !4783, line: 231, baseType: !4577, size: 64, offset: 384)
!5434 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set_base", scope: !5413, file: !4783, line: 250, baseType: !5435, size: 64, offset: 448)
!5435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5436, size: 64)
!5436 = !DISubroutineType(types: !5437)
!5437 = !{!18, !4551, !18, !18, !4409}
!5438 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set_base_atomic", scope: !5413, file: !4783, line: 267, baseType: !5439, size: 64, offset: 512)
!5439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5440, size: 64)
!5440 = !DISubroutineType(types: !5441)
!5441 = !{!18, !4551, !4409, !18, !18, !5442}
!5442 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_set_atomic", file: !4783, line: 51, flags: DIFlagFwdDecl)
!5443 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !5413, file: !4783, line: 302, baseType: !4577, size: 64, offset: 576)
!5444 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5413, file: !4783, line: 355, baseType: !5445, size: 64, offset: 640)
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = !DISubroutineType(types: !5447)
!5447 = !{!18, !4551, !4807}
!5448 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_begin", scope: !5413, file: !4783, line: 376, baseType: !5359, size: 64, offset: 704)
!5449 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flush", scope: !5413, file: !4783, line: 400, baseType: !5359, size: 64, offset: 768)
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_enable", scope: !5413, file: !4783, line: 426, baseType: !5359, size: 64, offset: 832)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_disable", scope: !5413, file: !4783, line: 451, baseType: !5359, size: 64, offset: 896)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "get_scanout_position", scope: !5413, file: !4783, line: 496, baseType: !5453, size: 64, offset: 960)
!5453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5454, size: 64)
!5454 = !DISubroutineType(types: !5455)
!5455 = !{!315, !4551, !315, !534, !534, !5406, !5406, !4514}
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4552, file: !4553, line: 1084, baseType: !4422, size: 3136, offset: 3456)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4552, file: !4553, line: 1099, baseType: !4807, size: 64, offset: 6592)
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "commit_list", scope: !4552, file: !4553, line: 1116, baseType: !11, size: 128, offset: 6656)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "commit_lock", scope: !4552, file: !4553, line: 1123, baseType: !55, offset: 6784)
!5460 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !4552, file: !4553, line: 1139, baseType: !5461, size: 448, offset: 6784)
!5461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_crc", file: !5462, line: 53, size: 448, elements: !5463)
!5462 = !DIFile(filename: "./include/drm/drm_debugfs_crc.h", directory: "/home/lizy2001/genbc/linux")
!5463 = !{!5464, !5465, !5466, !5467, !5468, !5478, !5479, !5480, !5481}
!5464 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5461, file: !5462, line: 54, baseType: !55)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5461, file: !5462, line: 55, baseType: !43, size: 64)
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "opened", scope: !5461, file: !5462, line: 56, baseType: !315, size: 8, offset: 64)
!5467 = !DIDerivedType(tag: DW_TAG_member, name: "overflow", scope: !5461, file: !5462, line: 56, baseType: !315, size: 8, offset: 72)
!5468 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !5461, file: !5462, line: 57, baseType: !5469, size: 64, offset: 128)
!5469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5470, size: 64)
!5470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_crc_entry", file: !5462, line: 33, size: 384, elements: !5471)
!5471 = !{!5472, !5473, !5474}
!5472 = !DIDerivedType(tag: DW_TAG_member, name: "has_frame_counter", scope: !5470, file: !5462, line: 34, baseType: !315, size: 8)
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !5470, file: !5462, line: 35, baseType: !384, size: 32, offset: 32)
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "crcs", scope: !5470, file: !5462, line: 36, baseType: !5475, size: 320, offset: 64)
!5475 = !DICompositeType(tag: DW_TAG_array_type, baseType: !384, size: 320, elements: !5476)
!5476 = !{!5477}
!5477 = !DISubrange(count: 10)
!5478 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5461, file: !5462, line: 58, baseType: !18, size: 32, offset: 192)
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5461, file: !5462, line: 58, baseType: !18, size: 32, offset: 224)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "values_cnt", scope: !5461, file: !5462, line: 59, baseType: !143, size: 64, offset: 256)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5461, file: !5462, line: 60, baseType: !1368, size: 128, offset: 320)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "fence_context", scope: !4552, file: !4553, line: 1146, baseType: !210, size: 32, offset: 7232)
!5483 = !DIDerivedType(tag: DW_TAG_member, name: "fence_lock", scope: !4552, file: !4553, line: 1153, baseType: !55, offset: 7264)
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "fence_seqno", scope: !4552, file: !4553, line: 1160, baseType: !146, size: 64, offset: 7296)
!5485 = !DIDerivedType(tag: DW_TAG_member, name: "timeline_name", scope: !4552, file: !4553, line: 1167, baseType: !2655, size: 256, offset: 7360)
!5486 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_data", scope: !4552, file: !4553, line: 1174, baseType: !5487, size: 64, offset: 7616)
!5487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5488, size: 64)
!5488 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_self_refresh_data", file: !4553, line: 56, flags: DIFlagFwdDecl)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !4536, file: !4537, line: 641, baseType: !4409, size: 64, offset: 1280)
!5490 = !DIDerivedType(tag: DW_TAG_member, name: "old_fb", scope: !4536, file: !4537, line: 649, baseType: !4409, size: 64, offset: 1344)
!5491 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4536, file: !4537, line: 652, baseType: !5492, size: 64, offset: 1408)
!5492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5493, size: 64)
!5493 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5494)
!5494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_funcs", file: !4537, line: 256, size: 832, elements: !5495)
!5495 = !{!5496, !5500, !5504, !5508, !5509, !5513, !5564, !5568, !5572, !5578, !5582, !5583, !5587}
!5496 = !DIDerivedType(tag: DW_TAG_member, name: "update_plane", scope: !5494, file: !4537, line: 283, baseType: !5497, size: 64)
!5497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5498, size: 64)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!18, !4535, !4551, !4409, !18, !18, !210, !210, !384, !384, !384, !384, !4361}
!5500 = !DIDerivedType(tag: DW_TAG_member, name: "disable_plane", scope: !5494, file: !4537, line: 306, baseType: !5501, size: 64, offset: 64)
!5501 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5502, size: 64)
!5502 = !DISubroutineType(types: !5503)
!5503 = !{!18, !4535, !4361}
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5494, file: !4537, line: 316, baseType: !5505, size: 64, offset: 128)
!5505 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5506, size: 64)
!5506 = !DISubroutineType(types: !5507)
!5507 = !{null, !4535}
!5508 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5494, file: !4537, line: 328, baseType: !5505, size: 64, offset: 192)
!5509 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !5494, file: !4537, line: 344, baseType: !5510, size: 64, offset: 256)
!5510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5511, size: 64)
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!18, !4535, !4427, !4127}
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5494, file: !4537, line: 378, baseType: !5514, size: 64, offset: 320)
!5514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5515, size: 64)
!5515 = !DISubroutineType(types: !5516)
!5516 = !{!5517, !4535}
!5517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5518, size: 64)
!5518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_state", file: !4537, line: 47, size: 1216, elements: !5519)
!5519 = !{!5520, !5521, !5522, !5523, !5524, !5525, !5526, !5527, !5528, !5529, !5530, !5531, !5532, !5533, !5534, !5535, !5536, !5537, !5545, !5551, !5552, !5560, !5561, !5562, !5563}
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !5518, file: !4537, line: 49, baseType: !4535, size: 64)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5518, file: !4537, line: 57, baseType: !4551, size: 64, offset: 64)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !5518, file: !4537, line: 65, baseType: !4409, size: 64, offset: 128)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !5518, file: !4537, line: 80, baseType: !4861, size: 64, offset: 192)
!5524 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_x", scope: !5518, file: !4537, line: 89, baseType: !1504, size: 32, offset: 256)
!5525 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_y", scope: !5518, file: !4537, line: 96, baseType: !1504, size: 32, offset: 288)
!5526 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_w", scope: !5518, file: !4537, line: 100, baseType: !384, size: 32, offset: 320)
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_h", scope: !5518, file: !4537, line: 100, baseType: !384, size: 32, offset: 352)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "src_x", scope: !5518, file: !4537, line: 106, baseType: !384, size: 32, offset: 384)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "src_y", scope: !5518, file: !4537, line: 111, baseType: !384, size: 32, offset: 416)
!5530 = !DIDerivedType(tag: DW_TAG_member, name: "src_h", scope: !5518, file: !4537, line: 114, baseType: !384, size: 32, offset: 448)
!5531 = !DIDerivedType(tag: DW_TAG_member, name: "src_w", scope: !5518, file: !4537, line: 114, baseType: !384, size: 32, offset: 480)
!5532 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5518, file: !4537, line: 122, baseType: !727, size: 16, offset: 512)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_blend_mode", scope: !5518, file: !4537, line: 130, baseType: !5323, size: 16, offset: 528)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !5518, file: !4537, line: 137, baseType: !210, size: 32, offset: 544)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "zpos", scope: !5518, file: !4537, line: 152, baseType: !210, size: 32, offset: 576)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_zpos", scope: !5518, file: !4537, line: 161, baseType: !210, size: 32, offset: 608)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "color_encoding", scope: !5518, file: !4537, line: 168, baseType: !5538, size: 32, offset: 640)
!5538 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_color_encoding", file: !5539, line: 77, baseType: !210, size: 32, elements: !5540)
!5539 = !DIFile(filename: "./include/drm/drm_color_mgmt.h", directory: "/home/lizy2001/genbc/linux")
!5540 = !{!5541, !5542, !5543, !5544}
!5541 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT601", value: 0, isUnsigned: true)
!5542 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT709", value: 1, isUnsigned: true)
!5543 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT2020", value: 2, isUnsigned: true)
!5544 = !DIEnumerator(name: "DRM_COLOR_ENCODING_MAX", value: 3, isUnsigned: true)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !5518, file: !4537, line: 175, baseType: !5546, size: 32, offset: 672)
!5546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_color_range", file: !5539, line: 84, baseType: !210, size: 32, elements: !5547)
!5547 = !{!5548, !5549, !5550}
!5548 = !DIEnumerator(name: "DRM_COLOR_YCBCR_LIMITED_RANGE", value: 0, isUnsigned: true)
!5549 = !DIEnumerator(name: "DRM_COLOR_YCBCR_FULL_RANGE", value: 1, isUnsigned: true)
!5550 = !DIEnumerator(name: "DRM_COLOR_RANGE_MAX", value: 2, isUnsigned: true)
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "fb_damage_clips", scope: !5518, file: !4537, line: 185, baseType: !4826, size: 64, offset: 704)
!5552 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5518, file: !4537, line: 207, baseType: !5553, size: 128, offset: 768)
!5553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_rect", file: !5554, line: 43, size: 128, elements: !5555)
!5554 = !DIFile(filename: "./include/drm/drm_rect.h", directory: "/home/lizy2001/genbc/linux")
!5555 = !{!5556, !5557, !5558, !5559}
!5556 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !5553, file: !5554, line: 44, baseType: !18, size: 32)
!5557 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !5553, file: !5554, line: 44, baseType: !18, size: 32, offset: 32)
!5558 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !5553, file: !5554, line: 44, baseType: !18, size: 32, offset: 64)
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !5553, file: !5554, line: 44, baseType: !18, size: 32, offset: 96)
!5560 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5518, file: !4537, line: 207, baseType: !5553, size: 128, offset: 896)
!5561 = !DIDerivedType(tag: DW_TAG_member, name: "visible", scope: !5518, file: !4537, line: 215, baseType: !315, size: 8, offset: 1024)
!5562 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5518, file: !4537, line: 223, baseType: !4932, size: 64, offset: 1088)
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5518, file: !4537, line: 226, baseType: !4520, size: 64, offset: 1152)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5494, file: !4537, line: 388, baseType: !5565, size: 64, offset: 384)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{null, !4535, !5517}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !5494, file: !4537, line: 433, baseType: !5569, size: 64, offset: 448)
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 64)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!18, !4535, !5517, !4427, !4127}
!5572 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !5494, file: !4537, line: 456, baseType: !5573, size: 64, offset: 512)
!5573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5574, size: 64)
!5574 = !DISubroutineType(types: !5575)
!5575 = !{!18, !4535, !5576, !4427, !4126}
!5576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5577, size: 64)
!5577 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5518)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !5494, file: !4537, line: 473, baseType: !5579, size: 64, offset: 576)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DISubroutineType(types: !5581)
!5581 = !{!18, !4535}
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !5494, file: !4537, line: 484, baseType: !5505, size: 64, offset: 640)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !5494, file: !4537, line: 495, baseType: !5584, size: 64, offset: 704)
!5584 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5585, size: 64)
!5585 = !DISubroutineType(types: !5586)
!5586 = !{null, !5051, !5576}
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "format_mod_supported", scope: !5494, file: !4537, line: 514, baseType: !5588, size: 64, offset: 768)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5589 = !DISubroutineType(types: !5590)
!5590 = !{!315, !4535, !384, !4127}
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4536, file: !4537, line: 655, baseType: !4422, size: 3136, offset: 1472)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4536, file: !4537, line: 658, baseType: !5593, size: 32, offset: 4608)
!5593 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_plane_type", file: !4537, line: 536, baseType: !210, size: 32, elements: !5594)
!5594 = !{!5595, !5596, !5597}
!5595 = !DIEnumerator(name: "DRM_PLANE_TYPE_OVERLAY", value: 0, isUnsigned: true)
!5596 = !DIEnumerator(name: "DRM_PLANE_TYPE_PRIMARY", value: 1, isUnsigned: true)
!5597 = !DIEnumerator(name: "DRM_PLANE_TYPE_CURSOR", value: 2, isUnsigned: true)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4536, file: !4537, line: 664, baseType: !210, size: 32, offset: 4640)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4536, file: !4537, line: 667, baseType: !5600, size: 64, offset: 4672)
!5600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5601, size: 64)
!5601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5602)
!5602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_helper_funcs", file: !4783, line: 1170, size: 448, elements: !5603)
!5603 = !{!5604, !5608, !5609, !5610, !5611, !5612, !5613}
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fb", scope: !5602, file: !4783, line: 1202, baseType: !5605, size: 64)
!5605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5606, size: 64)
!5606 = !DISubroutineType(types: !5607)
!5607 = !{!18, !4535, !5517}
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_fb", scope: !5602, file: !4783, line: 1213, baseType: !5565, size: 64, offset: 64)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5602, file: !4783, line: 1252, baseType: !5605, size: 64, offset: 128)
!5610 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_update", scope: !5602, file: !4783, line: 1270, baseType: !5565, size: 64, offset: 192)
!5611 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_disable", scope: !5602, file: !4783, line: 1294, baseType: !5565, size: 64, offset: 256)
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_async_check", scope: !5602, file: !4783, line: 1313, baseType: !5605, size: 64, offset: 320)
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_async_update", scope: !5602, file: !4783, line: 1352, baseType: !5565, size: 64, offset: 384)
!5614 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4536, file: !4537, line: 682, baseType: !5517, size: 64, offset: 4736)
!5615 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_property", scope: !4536, file: !4537, line: 689, baseType: !4427, size: 64, offset: 4800)
!5616 = !DIDerivedType(tag: DW_TAG_member, name: "zpos_property", scope: !4536, file: !4537, line: 695, baseType: !4427, size: 64, offset: 4864)
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "rotation_property", scope: !4536, file: !4537, line: 701, baseType: !4427, size: 64, offset: 4928)
!5618 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode_property", scope: !4536, file: !4537, line: 709, baseType: !4427, size: 64, offset: 4992)
!5619 = !DIDerivedType(tag: DW_TAG_member, name: "color_encoding_property", scope: !4536, file: !4537, line: 718, baseType: !4427, size: 64, offset: 5056)
!5620 = !DIDerivedType(tag: DW_TAG_member, name: "color_range_property", scope: !4536, file: !4537, line: 726, baseType: !4427, size: 64, offset: 5120)
!5621 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4532, file: !4522, line: 160, baseType: !5517, size: 64, offset: 64)
!5622 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !4532, file: !4522, line: 160, baseType: !5517, size: 64, offset: 128)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !4532, file: !4522, line: 160, baseType: !5517, size: 64, offset: 192)
!5624 = !DIDerivedType(tag: DW_TAG_member, name: "crtcs", scope: !4521, file: !4522, line: 351, baseType: !5625, size: 64, offset: 256)
!5625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5626, size: 64)
!5626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_crtcs_state", file: !4522, line: 163, size: 448, elements: !5627)
!5627 = !{!5628, !5629, !5630, !5631, !5632, !5633, !5635}
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5626, file: !4522, line: 164, baseType: !4551, size: 64)
!5629 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5626, file: !4522, line: 165, baseType: !4807, size: 64, offset: 64)
!5630 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !5626, file: !4522, line: 165, baseType: !4807, size: 64, offset: 128)
!5631 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !5626, file: !4522, line: 165, baseType: !4807, size: 64, offset: 192)
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5626, file: !4522, line: 175, baseType: !4932, size: 64, offset: 256)
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "out_fence_ptr", scope: !5626, file: !4522, line: 177, baseType: !5634, size: 64, offset: 320)
!5634 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "last_vblank_count", scope: !5626, file: !4522, line: 178, baseType: !246, size: 64, offset: 384)
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "num_connector", scope: !4521, file: !4522, line: 352, baseType: !18, size: 32, offset: 320)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "connectors", scope: !4521, file: !4522, line: 353, baseType: !5638, size: 64, offset: 384)
!5638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5639, size: 64)
!5639 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_connnectors_state", file: !4522, line: 181, size: 320, elements: !5640)
!5640 = !{!5641, !5642, !5643, !5644, !5645}
!5641 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5639, file: !4522, line: 182, baseType: !4613, size: 64)
!5642 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5639, file: !4522, line: 183, baseType: !4744, size: 64, offset: 64)
!5643 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !5639, file: !4522, line: 183, baseType: !4744, size: 64, offset: 128)
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !5639, file: !4522, line: 183, baseType: !4744, size: 64, offset: 192)
!5645 = !DIDerivedType(tag: DW_TAG_member, name: "out_fence_ptr", scope: !5639, file: !4522, line: 191, baseType: !5634, size: 64, offset: 256)
!5646 = !DIDerivedType(tag: DW_TAG_member, name: "num_private_objs", scope: !4521, file: !4522, line: 354, baseType: !18, size: 32, offset: 448)
!5647 = !DIDerivedType(tag: DW_TAG_member, name: "private_objs", scope: !4521, file: !4522, line: 355, baseType: !5648, size: 64, offset: 512)
!5648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5649, size: 64)
!5649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_private_objs_state", file: !4522, line: 302, size: 256, elements: !5650)
!5650 = !{!5651, !5675, !5676, !5677}
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5649, file: !4522, line: 303, baseType: !5652, size: 64)
!5652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5653, size: 64)
!5653 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_private_obj", file: !4522, line: 252, size: 640, elements: !5654)
!5654 = !{!5655, !5656, !5657, !5662}
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5653, file: !4522, line: 257, baseType: !11, size: 128)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5653, file: !4522, line: 262, baseType: !4342, size: 384, offset: 128)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5653, file: !4522, line: 267, baseType: !5658, size: 64, offset: 512)
!5658 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5659, size: 64)
!5659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_private_state", file: !4522, line: 298, size: 64, elements: !5660)
!5660 = !{!5661}
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5659, file: !4522, line: 299, baseType: !4520, size: 64)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !5653, file: !4522, line: 275, baseType: !5663, size: 64, offset: 576)
!5663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5664, size: 64)
!5664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5665)
!5665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_private_state_funcs", file: !4522, line: 207, size: 128, elements: !5666)
!5666 = !{!5667, !5671}
!5667 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5665, file: !4522, line: 219, baseType: !5668, size: 64)
!5668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5669, size: 64)
!5669 = !DISubroutineType(types: !5670)
!5670 = !{!5658, !5652}
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5665, file: !4522, line: 226, baseType: !5672, size: 64, offset: 64)
!5672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5673, size: 64)
!5673 = !DISubroutineType(types: !5674)
!5674 = !{null, !5652, !5658}
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5649, file: !4522, line: 304, baseType: !5658, size: 64, offset: 64)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !5649, file: !4522, line: 304, baseType: !5658, size: 64, offset: 128)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !5649, file: !4522, line: 304, baseType: !5658, size: 64, offset: 192)
!5678 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_ctx", scope: !4521, file: !4522, line: 357, baseType: !4361, size: 64, offset: 576)
!5679 = !DIDerivedType(tag: DW_TAG_member, name: "fake_commit", scope: !4521, file: !4522, line: 369, baseType: !4932, size: 64, offset: 640)
!5680 = !DIDerivedType(tag: DW_TAG_member, name: "commit_work", scope: !4521, file: !4522, line: 377, baseType: !1899, size: 256, offset: 704)
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_commit", scope: !4403, file: !4338, line: 278, baseType: !5682, size: 64, offset: 320)
!5682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5683, size: 64)
!5683 = !DISubroutineType(types: !5684)
!5684 = !{!18, !6, !4520, !315}
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_alloc", scope: !4403, file: !4338, line: 297, baseType: !5686, size: 64, offset: 384)
!5686 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5687, size: 64)
!5687 = !DISubroutineType(types: !5688)
!5688 = !{!4520, !6}
!5689 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_clear", scope: !4403, file: !4338, line: 318, baseType: !5690, size: 64, offset: 448)
!5690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5691, size: 64)
!5691 = !DISubroutineType(types: !5692)
!5692 = !{null, !4520}
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_free", scope: !4403, file: !4338, line: 333, baseType: !5690, size: 64, offset: 512)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "fb_base", scope: !4337, file: !4338, line: 527, baseType: !5695, size: 64, offset: 3264)
!5695 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !12, line: 158, baseType: !2067)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "poll_enabled", scope: !4337, file: !4338, line: 530, baseType: !315, size: 8, offset: 3328)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "poll_running", scope: !4337, file: !4338, line: 531, baseType: !315, size: 8, offset: 3336)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_event", scope: !4337, file: !4338, line: 532, baseType: !315, size: 8, offset: 3344)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "output_poll_work", scope: !4337, file: !4338, line: 533, baseType: !5700, size: 704, offset: 3392)
!5700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !1900, line: 115, size: 704, elements: !5701)
!5701 = !{!5702, !5703, !5704, !5705}
!5702 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !5700, file: !1900, line: 116, baseType: !1899, size: 256)
!5703 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !5700, file: !1900, line: 117, baseType: !3537, size: 320, offset: 256)
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5700, file: !1900, line: 120, baseType: !2748, size: 64, offset: 576)
!5705 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !5700, file: !1900, line: 121, baseType: !18, size: 32, offset: 640)
!5706 = !DIDerivedType(tag: DW_TAG_member, name: "blob_lock", scope: !4337, file: !4338, line: 541, baseType: !552, size: 192, offset: 4096)
!5707 = !DIDerivedType(tag: DW_TAG_member, name: "property_blob_list", scope: !4337, file: !4338, line: 549, baseType: !11, size: 128, offset: 4288)
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "edid_property", scope: !4337, file: !4338, line: 557, baseType: !4427, size: 64, offset: 4416)
!5709 = !DIDerivedType(tag: DW_TAG_member, name: "dpms_property", scope: !4337, file: !4338, line: 562, baseType: !4427, size: 64, offset: 4480)
!5710 = !DIDerivedType(tag: DW_TAG_member, name: "path_property", scope: !4337, file: !4338, line: 567, baseType: !4427, size: 64, offset: 4544)
!5711 = !DIDerivedType(tag: DW_TAG_member, name: "tile_property", scope: !4337, file: !4338, line: 573, baseType: !4427, size: 64, offset: 4608)
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "link_status_property", scope: !4337, file: !4338, line: 578, baseType: !4427, size: 64, offset: 4672)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "plane_type_property", scope: !4337, file: !4338, line: 583, baseType: !4427, size: 64, offset: 4736)
!5714 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_x", scope: !4337, file: !4338, line: 588, baseType: !4427, size: 64, offset: 4800)
!5715 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_y", scope: !4337, file: !4338, line: 593, baseType: !4427, size: 64, offset: 4864)
!5716 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_w", scope: !4337, file: !4338, line: 598, baseType: !4427, size: 64, offset: 4928)
!5717 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_h", scope: !4337, file: !4338, line: 603, baseType: !4427, size: 64, offset: 4992)
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_x", scope: !4337, file: !4338, line: 608, baseType: !4427, size: 64, offset: 5056)
!5719 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_y", scope: !4337, file: !4338, line: 613, baseType: !4427, size: 64, offset: 5120)
!5720 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_w", scope: !4337, file: !4338, line: 618, baseType: !4427, size: 64, offset: 5184)
!5721 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_h", scope: !4337, file: !4338, line: 623, baseType: !4427, size: 64, offset: 5248)
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "prop_fb_id", scope: !4337, file: !4338, line: 628, baseType: !4427, size: 64, offset: 5312)
!5723 = !DIDerivedType(tag: DW_TAG_member, name: "prop_in_fence_fd", scope: !4337, file: !4338, line: 633, baseType: !4427, size: 64, offset: 5376)
!5724 = !DIDerivedType(tag: DW_TAG_member, name: "prop_out_fence_ptr", scope: !4337, file: !4338, line: 639, baseType: !4427, size: 64, offset: 5440)
!5725 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_id", scope: !4337, file: !4338, line: 644, baseType: !4427, size: 64, offset: 5504)
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "prop_fb_damage_clips", scope: !4337, file: !4338, line: 653, baseType: !4427, size: 64, offset: 5568)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "prop_active", scope: !4337, file: !4338, line: 659, baseType: !4427, size: 64, offset: 5632)
!5728 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode_id", scope: !4337, file: !4338, line: 665, baseType: !4427, size: 64, offset: 5696)
!5729 = !DIDerivedType(tag: DW_TAG_member, name: "prop_vrr_enabled", scope: !4337, file: !4338, line: 670, baseType: !4427, size: 64, offset: 5760)
!5730 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_i_subconnector_property", scope: !4337, file: !4338, line: 676, baseType: !4427, size: 64, offset: 5824)
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_i_select_subconnector_property", scope: !4337, file: !4338, line: 681, baseType: !4427, size: 64, offset: 5888)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "dp_subconnector_property", scope: !4337, file: !4338, line: 687, baseType: !4427, size: 64, offset: 5952)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "tv_subconnector_property", scope: !4337, file: !4338, line: 693, baseType: !4427, size: 64, offset: 6016)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "tv_select_subconnector_property", scope: !4337, file: !4338, line: 698, baseType: !4427, size: 64, offset: 6080)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "tv_mode_property", scope: !4337, file: !4338, line: 703, baseType: !4427, size: 64, offset: 6144)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "tv_left_margin_property", scope: !4337, file: !4338, line: 708, baseType: !4427, size: 64, offset: 6208)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "tv_right_margin_property", scope: !4337, file: !4338, line: 713, baseType: !4427, size: 64, offset: 6272)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "tv_top_margin_property", scope: !4337, file: !4338, line: 718, baseType: !4427, size: 64, offset: 6336)
!5739 = !DIDerivedType(tag: DW_TAG_member, name: "tv_bottom_margin_property", scope: !4337, file: !4338, line: 723, baseType: !4427, size: 64, offset: 6400)
!5740 = !DIDerivedType(tag: DW_TAG_member, name: "tv_brightness_property", scope: !4337, file: !4338, line: 728, baseType: !4427, size: 64, offset: 6464)
!5741 = !DIDerivedType(tag: DW_TAG_member, name: "tv_contrast_property", scope: !4337, file: !4338, line: 733, baseType: !4427, size: 64, offset: 6528)
!5742 = !DIDerivedType(tag: DW_TAG_member, name: "tv_flicker_reduction_property", scope: !4337, file: !4338, line: 738, baseType: !4427, size: 64, offset: 6592)
!5743 = !DIDerivedType(tag: DW_TAG_member, name: "tv_overscan_property", scope: !4337, file: !4338, line: 743, baseType: !4427, size: 64, offset: 6656)
!5744 = !DIDerivedType(tag: DW_TAG_member, name: "tv_saturation_property", scope: !4337, file: !4338, line: 748, baseType: !4427, size: 64, offset: 6720)
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "tv_hue_property", scope: !4337, file: !4338, line: 752, baseType: !4427, size: 64, offset: 6784)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode_property", scope: !4337, file: !4338, line: 758, baseType: !4427, size: 64, offset: 6848)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_property", scope: !4337, file: !4338, line: 763, baseType: !4427, size: 64, offset: 6912)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "content_type_property", scope: !4337, file: !4338, line: 768, baseType: !4427, size: 64, offset: 6976)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut_property", scope: !4337, file: !4338, line: 773, baseType: !4427, size: 64, offset: 7040)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut_size_property", scope: !4337, file: !4338, line: 778, baseType: !4427, size: 64, offset: 7104)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "ctm_property", scope: !4337, file: !4338, line: 784, baseType: !4427, size: 64, offset: 7168)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut_property", scope: !4337, file: !4338, line: 790, baseType: !4427, size: 64, offset: 7232)
!5753 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut_size_property", scope: !4337, file: !4338, line: 795, baseType: !4427, size: 64, offset: 7296)
!5754 = !DIDerivedType(tag: DW_TAG_member, name: "suggested_x_property", scope: !4337, file: !4338, line: 801, baseType: !4427, size: 64, offset: 7360)
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "suggested_y_property", scope: !4337, file: !4338, line: 806, baseType: !4427, size: 64, offset: 7424)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "non_desktop_property", scope: !4337, file: !4338, line: 813, baseType: !4427, size: 64, offset: 7488)
!5757 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation_property", scope: !4337, file: !4338, line: 820, baseType: !4427, size: 64, offset: 7552)
!5758 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_fb_id_property", scope: !4337, file: !4338, line: 827, baseType: !4427, size: 64, offset: 7616)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_pixel_formats_property", scope: !4337, file: !4338, line: 835, baseType: !4427, size: 64, offset: 7680)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_out_fence_ptr_property", scope: !4337, file: !4338, line: 843, baseType: !4427, size: 64, offset: 7744)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_output_metadata_property", scope: !4337, file: !4338, line: 850, baseType: !4427, size: 64, offset: 7808)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "content_protection_property", scope: !4337, file: !4338, line: 856, baseType: !4427, size: 64, offset: 7872)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_content_type_property", scope: !4337, file: !4338, line: 862, baseType: !4427, size: 64, offset: 7936)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_depth", scope: !4337, file: !4338, line: 865, baseType: !384, size: 32, offset: 8000)
!5765 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_shadow", scope: !4337, file: !4338, line: 865, baseType: !384, size: 32, offset: 8032)
!5766 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_shadow_fbdev", scope: !4337, file: !4338, line: 872, baseType: !315, size: 8, offset: 8064)
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "fbdev_use_iomem", scope: !4337, file: !4338, line: 884, baseType: !315, size: 8, offset: 8072)
!5768 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_addfb_prefer_xbgr_30bpp", scope: !4337, file: !4338, line: 892, baseType: !315, size: 8, offset: 8080)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_addfb_prefer_host_byte_order", scope: !4337, file: !4338, line: 906, baseType: !315, size: 8, offset: 8088)
!5770 = !DIDerivedType(tag: DW_TAG_member, name: "async_page_flip", scope: !4337, file: !4338, line: 912, baseType: !315, size: 8, offset: 8096)
!5771 = !DIDerivedType(tag: DW_TAG_member, name: "allow_fb_modifiers", scope: !4337, file: !4338, line: 919, baseType: !315, size: 8, offset: 8104)
!5772 = !DIDerivedType(tag: DW_TAG_member, name: "normalize_zpos", scope: !4337, file: !4338, line: 927, baseType: !315, size: 8, offset: 8112)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_property", scope: !4337, file: !4338, line: 933, baseType: !4427, size: 64, offset: 8128)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_width", scope: !4337, file: !4338, line: 936, baseType: !384, size: 32, offset: 8192)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_height", scope: !4337, file: !4338, line: 936, baseType: !384, size: 32, offset: 8224)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_state", scope: !4337, file: !4338, line: 945, baseType: !4520, size: 64, offset: 8256)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4337, file: !4338, line: 947, baseType: !5778, size: 64, offset: 8320)
!5778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5779, size: 64)
!5779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5780)
!5780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config_helper_funcs", file: !4783, line: 1372, size: 64, elements: !5781)
!5781 = !{!5782}
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_commit_tail", scope: !5780, file: !4783, line: 1408, baseType: !5690, size: 64)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "object_name_lock", scope: !7, file: !8, line: 303, baseType: !552, size: 192, offset: 11200)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "object_name_idr", scope: !7, file: !8, line: 306, baseType: !1387, size: 192, offset: 11392)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "vma_offset_manager", scope: !7, file: !8, line: 309, baseType: !5786, size: 64, offset: 11584)
!5786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5787, size: 64)
!5787 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vma_offset_manager", file: !8, line: 19, flags: DIFlagFwdDecl)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "vram_mm", scope: !7, file: !8, line: 312, baseType: !5789, size: 64, offset: 11648)
!5789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5790, size: 64)
!5790 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vram_mm", file: !8, line: 20, flags: DIFlagFwdDecl)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "switch_power_state", scope: !7, file: !8, line: 322, baseType: !5792, size: 32, offset: 11712)
!5792 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "switch_power_state", file: !8, line: 33, baseType: !210, size: 32, elements: !5793)
!5793 = !{!5794, !5795, !5796, !5797}
!5794 = !DIEnumerator(name: "DRM_SWITCH_POWER_ON", value: 0, isUnsigned: true)
!5795 = !DIEnumerator(name: "DRM_SWITCH_POWER_OFF", value: 1, isUnsigned: true)
!5796 = !DIEnumerator(name: "DRM_SWITCH_POWER_CHANGING", value: 2, isUnsigned: true)
!5797 = !DIEnumerator(name: "DRM_SWITCH_POWER_DYNAMIC_OFF", value: 3, isUnsigned: true)
!5798 = !DIDerivedType(tag: DW_TAG_member, name: "fb_helper", scope: !7, file: !8, line: 330, baseType: !5799, size: 64, offset: 11776)
!5799 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5800, size: 64)
!5800 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_fb_helper", file: !8, line: 21, flags: DIFlagFwdDecl)
!5801 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !5802, retainedTypes: !5890, globals: !6146, splitDebugInlining: false, nameTableKind: None)
!5802 = !{!743, !946, !1178, !1302, !2319, !2414, !3108, !3127, !3172, !3415, !3500, !3587, !3595, !3767, !4007, !4246, !4289, !4644, !4651, !4664, !4960, !4970, !5149, !5157, !5538, !5546, !5593, !5792, !5803, !5815, !5820, !5824, !5830, !5861, !5868, !5875}
!5803 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_debug_category", file: !5053, line: 277, baseType: !210, size: 32, elements: !5804)
!5804 = !{!5805, !5806, !5807, !5808, !5809, !5810, !5811, !5812, !5813, !5814}
!5805 = !DIEnumerator(name: "DRM_UT_CORE", value: 1, isUnsigned: true)
!5806 = !DIEnumerator(name: "DRM_UT_DRIVER", value: 2, isUnsigned: true)
!5807 = !DIEnumerator(name: "DRM_UT_KMS", value: 4, isUnsigned: true)
!5808 = !DIEnumerator(name: "DRM_UT_PRIME", value: 8, isUnsigned: true)
!5809 = !DIEnumerator(name: "DRM_UT_ATOMIC", value: 16, isUnsigned: true)
!5810 = !DIEnumerator(name: "DRM_UT_VBL", value: 32, isUnsigned: true)
!5811 = !DIEnumerator(name: "DRM_UT_STATE", value: 64, isUnsigned: true)
!5812 = !DIEnumerator(name: "DRM_UT_LEASE", value: 128, isUnsigned: true)
!5813 = !DIEnumerator(name: "DRM_UT_DP", value: 256, isUnsigned: true)
!5814 = !DIEnumerator(name: "DRM_UT_DRMRES", value: 512, isUnsigned: true)
!5815 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !5816, line: 10, baseType: !210, size: 32, elements: !5817)
!5816 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!5817 = !{!5818, !5819}
!5818 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!5819 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!5820 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_bridge_attach_flags", file: !5821, line: 46, baseType: !210, size: 32, elements: !5822)
!5821 = !DIFile(filename: "./include/drm/drm_bridge.h", directory: "/home/lizy2001/genbc/linux")
!5822 = !{!5823}
!5823 = !DIEnumerator(name: "DRM_BRIDGE_ATTACH_NO_CONNECTOR", value: 1, isUnsigned: true)
!5824 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_bridge_ops", file: !5821, line: 673, baseType: !210, size: 32, elements: !5825)
!5825 = !{!5826, !5827, !5828, !5829}
!5826 = !DIEnumerator(name: "DRM_BRIDGE_OP_DETECT", value: 1, isUnsigned: true)
!5827 = !DIEnumerator(name: "DRM_BRIDGE_OP_EDID", value: 2, isUnsigned: true)
!5828 = !DIEnumerator(name: "DRM_BRIDGE_OP_HPD", value: 4, isUnsigned: true)
!5829 = !DIEnumerator(name: "DRM_BRIDGE_OP_MODES", value: 8, isUnsigned: true)
!5830 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1900, line: 30, baseType: !131, size: 64, elements: !5831)
!5831 = !{!5832, !5833, !5834, !5835, !5836, !5837, !5838, !5839, !5840, !5841, !5842, !5843, !5844, !5845, !5846, !5847, !5848, !5849, !5850, !5851, !5852, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860}
!5832 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!5833 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!5834 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!5835 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!5836 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!5837 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!5838 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!5839 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!5840 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!5841 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!5842 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!5843 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!5844 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!5845 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!5846 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!5847 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!5848 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!5849 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!5850 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!5851 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!5852 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!5853 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!5854 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!5855 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!5856 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!5857 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!5858 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!5859 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!5860 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!5861 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !25, line: 119, baseType: !210, size: 32, elements: !5862)
!5862 = !{!5863, !5864, !5865, !5866, !5867}
!5863 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!5864 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!5865 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!5866 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!5867 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!5868 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !5869, line: 305, baseType: !210, size: 32, elements: !5870)
!5869 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!5870 = !{!5871, !5872, !5873, !5874}
!5871 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!5872 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!5873 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!5874 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!5875 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_driver_feature", file: !3928, line: 50, baseType: !210, size: 32, elements: !5876)
!5876 = !{!5877, !5878, !5879, !5880, !5881, !5882, !5883, !5884, !5885, !5886, !5887, !5888, !5889}
!5877 = !DIEnumerator(name: "DRIVER_GEM", value: 1, isUnsigned: true)
!5878 = !DIEnumerator(name: "DRIVER_MODESET", value: 2, isUnsigned: true)
!5879 = !DIEnumerator(name: "DRIVER_RENDER", value: 8, isUnsigned: true)
!5880 = !DIEnumerator(name: "DRIVER_ATOMIC", value: 16, isUnsigned: true)
!5881 = !DIEnumerator(name: "DRIVER_SYNCOBJ", value: 32, isUnsigned: true)
!5882 = !DIEnumerator(name: "DRIVER_SYNCOBJ_TIMELINE", value: 64, isUnsigned: true)
!5883 = !DIEnumerator(name: "DRIVER_USE_AGP", value: 33554432, isUnsigned: true)
!5884 = !DIEnumerator(name: "DRIVER_LEGACY", value: 67108864, isUnsigned: true)
!5885 = !DIEnumerator(name: "DRIVER_PCI_DMA", value: 134217728, isUnsigned: true)
!5886 = !DIEnumerator(name: "DRIVER_SG", value: 268435456, isUnsigned: true)
!5887 = !DIEnumerator(name: "DRIVER_HAVE_DMA", value: 536870912, isUnsigned: true)
!5888 = !DIEnumerator(name: "DRIVER_HAVE_IRQ", value: 1073741824, isUnsigned: true)
!5889 = !DIEnumerator(name: "DRIVER_KMS_LEGACY_CONTEXT", value: 2147483648, isUnsigned: true)
!5890 = !{!146, !622, !170, !4535, !4551, !5891, !5894, !5897, !131, !18, !6143, !4520, !6144, !4932}
!5891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5892, size: 64)
!5892 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5893)
!5893 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !210)
!5894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5895, size: 64)
!5895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5896)
!5896 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !15)
!5897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5898, size: 64)
!5898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_bridge", file: !5821, line: 706, size: 1792, elements: !5899)
!5899 = !{!5900, !5901, !5902, !5903, !5904, !5905, !5906, !5915, !6132, !6133, !6134, !6135, !6136, !6137, !6138, !6142}
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5898, file: !5821, line: 708, baseType: !5653, size: 640)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5898, file: !5821, line: 710, baseType: !6, size: 64, offset: 640)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !5898, file: !5821, line: 712, baseType: !4750, size: 64, offset: 704)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "chain_node", scope: !5898, file: !5821, line: 714, baseType: !11, size: 128, offset: 768)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !5898, file: !5821, line: 717, baseType: !3653, size: 64, offset: 896)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5898, file: !5821, line: 720, baseType: !11, size: 128, offset: 960)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "timings", scope: !5898, file: !5821, line: 726, baseType: !5907, size: 64, offset: 1088)
!5907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5908, size: 64)
!5908 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5909)
!5909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_bridge_timings", file: !5821, line: 637, size: 128, elements: !5910)
!5910 = !{!5911, !5912, !5913, !5914}
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "input_bus_flags", scope: !5909, file: !5821, line: 645, baseType: !240, size: 32)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "setup_time_ps", scope: !5909, file: !5821, line: 652, baseType: !240, size: 32, offset: 32)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "hold_time_ps", scope: !5909, file: !5821, line: 659, baseType: !240, size: 32, offset: 64)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "dual_link", scope: !5909, file: !5821, line: 667, baseType: !315, size: 8, offset: 96)
!5915 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !5898, file: !5821, line: 728, baseType: !5916, size: 64, offset: 1152)
!5916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5917, size: 64)
!5917 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5918)
!5918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_bridge_funcs", file: !5821, line: 57, size: 1600, elements: !5919)
!5919 = !{!5920, !5924, !5928, !5934, !5938, !5939, !5940, !5944, !5945, !5946, !5961, !5962, !5963, !5964, !5968, !5969, !5973, !5977, !5981, !5982, !5986, !5990, !6126, !6130, !6131}
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !5918, file: !5821, line: 71, baseType: !5921, size: 64)
!5921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5922, size: 64)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{!18, !5897, !5820}
!5924 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !5918, file: !5821, line: 82, baseType: !5925, size: 64, offset: 64)
!5925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5926, size: 64)
!5926 = !DISubroutineType(types: !5927)
!5927 = !{null, !5897}
!5928 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !5918, file: !5821, line: 115, baseType: !5929, size: 64, offset: 128)
!5929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5930, size: 64)
!5930 = !DISubroutineType(types: !5931)
!5931 = !{!4246, !5897, !5932, !4514}
!5932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5933, size: 64)
!5933 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4658)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "mode_fixup", scope: !5918, file: !5821, line: 156, baseType: !5935, size: 64, offset: 192)
!5935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5936, size: 64)
!5936 = !DISubroutineType(types: !5937)
!5937 = !{!315, !5897, !4514, !4608}
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !5918, file: !5821, line: 175, baseType: !5925, size: 64, offset: 256)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "post_disable", scope: !5918, file: !5821, line: 194, baseType: !5925, size: 64, offset: 320)
!5940 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !5918, file: !5821, line: 222, baseType: !5941, size: 64, offset: 384)
!5941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5942, size: 64)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{null, !5897, !4514, !4514}
!5944 = !DIDerivedType(tag: DW_TAG_member, name: "pre_enable", scope: !5918, file: !5821, line: 243, baseType: !5925, size: 64, offset: 448)
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !5918, file: !5821, line: 263, baseType: !5925, size: 64, offset: 512)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_pre_enable", scope: !5918, file: !5821, line: 288, baseType: !5947, size: 64, offset: 576)
!5947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5948, size: 64)
!5948 = !DISubroutineType(types: !5949)
!5949 = !{null, !5897, !5950}
!5950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5951, size: 64)
!5951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_bridge_state", file: !4522, line: 1033, size: 256, elements: !5952)
!5952 = !{!5953, !5954, !5955, !5960}
!5953 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5951, file: !4522, line: 1037, baseType: !5659, size: 64)
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "bridge", scope: !5951, file: !4522, line: 1042, baseType: !5897, size: 64, offset: 64)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "input_bus_cfg", scope: !5951, file: !4522, line: 1047, baseType: !5956, size: 64, offset: 128)
!5956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_bus_cfg", file: !4522, line: 1014, size: 64, elements: !5957)
!5957 = !{!5958, !5959}
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !5956, file: !4522, line: 1022, baseType: !240, size: 32)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5956, file: !4522, line: 1027, baseType: !240, size: 32, offset: 32)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "output_bus_cfg", scope: !5951, file: !4522, line: 1052, baseType: !5956, size: 64, offset: 192)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_enable", scope: !5918, file: !5821, line: 313, baseType: !5947, size: 64, offset: 640)
!5962 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_disable", scope: !5918, file: !5821, line: 336, baseType: !5947, size: 64, offset: 704)
!5963 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_post_disable", scope: !5918, file: !5821, line: 362, baseType: !5947, size: 64, offset: 768)
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5918, file: !5821, line: 380, baseType: !5965, size: 64, offset: 832)
!5965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5966, size: 64)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!5950, !5897}
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5918, file: !5821, line: 394, baseType: !5947, size: 64, offset: 896)
!5969 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_output_bus_fmts", scope: !5918, file: !5821, line: 416, baseType: !5970, size: 64, offset: 960)
!5970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5971, size: 64)
!5971 = !DISubroutineType(types: !5972)
!5972 = !{!1291, !5897, !5950, !4807, !4744, !2638}
!5973 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_input_bus_fmts", scope: !5918, file: !5821, line: 456, baseType: !5974, size: 64, offset: 1024)
!5974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5975, size: 64)
!5975 = !DISubroutineType(types: !5976)
!5976 = !{!1291, !5897, !5950, !4807, !4744, !240, !2638}
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5918, file: !5821, line: 488, baseType: !5978, size: 64, offset: 1088)
!5978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5979, size: 64)
!5979 = !DISubroutineType(types: !5980)
!5980 = !{!18, !5897, !5950, !4807, !4744}
!5981 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_reset", scope: !5918, file: !5821, line: 518, baseType: !5965, size: 64, offset: 1152)
!5982 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !5918, file: !5821, line: 534, baseType: !5983, size: 64, offset: 1216)
!5983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5984, size: 64)
!5984 = !DISubroutineType(types: !5985)
!5985 = !{!4651, !5897}
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "get_modes", scope: !5918, file: !5821, line: 558, baseType: !5987, size: 64, offset: 1280)
!5987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5988, size: 64)
!5988 = !DISubroutineType(types: !5989)
!5989 = !{!18, !5897, !4613}
!5990 = !DIDerivedType(tag: DW_TAG_member, name: "get_edid", scope: !5918, file: !5821, line: 588, baseType: !5991, size: 64, offset: 1344)
!5991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5992, size: 64)
!5992 = !DISubroutineType(types: !5993)
!5993 = !{!5994, !5897, !4613}
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!5995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edid", file: !5996, line: 290, size: 1024, elements: !5997)
!5996 = !DIFile(filename: "./include/drm/drm_edid.h", directory: "/home/lizy2001/genbc/linux")
!5997 = !{!5998, !5999, !6001, !6002, !6003, !6004, !6005, !6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015, !6016, !6017, !6018, !6019, !6020, !6021, !6022, !6028, !6034, !6124, !6125}
!5998 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5995, file: !5996, line: 291, baseType: !5316, size: 64)
!5999 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_id", scope: !5995, file: !5996, line: 293, baseType: !6000, size: 16, offset: 64)
!6000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 16, elements: !1489)
!6001 = !DIDerivedType(tag: DW_TAG_member, name: "prod_code", scope: !5995, file: !5996, line: 294, baseType: !6000, size: 16, offset: 80)
!6002 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !5995, file: !5996, line: 295, baseType: !240, size: 32, offset: 96)
!6003 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_week", scope: !5995, file: !5996, line: 296, baseType: !1227, size: 8, offset: 128)
!6004 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_year", scope: !5995, file: !5996, line: 297, baseType: !1227, size: 8, offset: 136)
!6005 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5995, file: !5996, line: 299, baseType: !1227, size: 8, offset: 144)
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !5995, file: !5996, line: 300, baseType: !1227, size: 8, offset: 152)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !5995, file: !5996, line: 302, baseType: !1227, size: 8, offset: 160)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "width_cm", scope: !5995, file: !5996, line: 303, baseType: !1227, size: 8, offset: 168)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "height_cm", scope: !5995, file: !5996, line: 304, baseType: !1227, size: 8, offset: 176)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !5995, file: !5996, line: 305, baseType: !1227, size: 8, offset: 184)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !5995, file: !5996, line: 306, baseType: !1227, size: 8, offset: 192)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "red_green_lo", scope: !5995, file: !5996, line: 308, baseType: !1227, size: 8, offset: 200)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "black_white_lo", scope: !5995, file: !5996, line: 309, baseType: !1227, size: 8, offset: 208)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "red_x", scope: !5995, file: !5996, line: 310, baseType: !1227, size: 8, offset: 216)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "red_y", scope: !5995, file: !5996, line: 311, baseType: !1227, size: 8, offset: 224)
!6016 = !DIDerivedType(tag: DW_TAG_member, name: "green_x", scope: !5995, file: !5996, line: 312, baseType: !1227, size: 8, offset: 232)
!6017 = !DIDerivedType(tag: DW_TAG_member, name: "green_y", scope: !5995, file: !5996, line: 313, baseType: !1227, size: 8, offset: 240)
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "blue_x", scope: !5995, file: !5996, line: 314, baseType: !1227, size: 8, offset: 248)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "blue_y", scope: !5995, file: !5996, line: 315, baseType: !1227, size: 8, offset: 256)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "white_x", scope: !5995, file: !5996, line: 316, baseType: !1227, size: 8, offset: 264)
!6021 = !DIDerivedType(tag: DW_TAG_member, name: "white_y", scope: !5995, file: !5996, line: 317, baseType: !1227, size: 8, offset: 272)
!6022 = !DIDerivedType(tag: DW_TAG_member, name: "established_timings", scope: !5995, file: !5996, line: 319, baseType: !6023, size: 24, offset: 280)
!6023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "est_timings", file: !5996, line: 44, size: 24, elements: !6024)
!6024 = !{!6025, !6026, !6027}
!6025 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !6023, file: !5996, line: 45, baseType: !1227, size: 8)
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !6023, file: !5996, line: 46, baseType: !1227, size: 8, offset: 8)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_rsvd", scope: !6023, file: !5996, line: 47, baseType: !1227, size: 8, offset: 16)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "standard_timings", scope: !5995, file: !5996, line: 321, baseType: !6029, size: 128, offset: 304)
!6029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6030, size: 128, elements: !1205)
!6030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "std_timing", file: !5996, line: 58, size: 16, elements: !6031)
!6031 = !{!6032, !6033}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "hsize", scope: !6030, file: !5996, line: 59, baseType: !1227, size: 8)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "vfreq_aspect", scope: !6030, file: !5996, line: 60, baseType: !1227, size: 8, offset: 8)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "detailed_timings", scope: !5995, file: !5996, line: 323, baseType: !6035, size: 576, offset: 432)
!6035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6036, size: 576, elements: !1036)
!6036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_timing", file: !5996, line: 170, size: 144, elements: !6037)
!6037 = !{!6038, !6040}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_clock", scope: !6036, file: !5996, line: 171, baseType: !6039, size: 16)
!6039 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !2860, line: 29, baseType: !728)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6036, file: !5996, line: 175, baseType: !6041, size: 128, offset: 16)
!6041 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6036, file: !5996, line: 172, size: 128, elements: !6042)
!6042 = !{!6043, !6062}
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_data", scope: !6041, file: !5996, line: 173, baseType: !6044, size: 128)
!6044 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_pixel_timing", file: !5996, line: 70, size: 128, elements: !6045)
!6045 = !{!6046, !6047, !6048, !6049, !6050, !6051, !6052, !6053, !6054, !6055, !6056, !6057, !6058, !6059, !6060, !6061}
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "hactive_lo", scope: !6044, file: !5996, line: 71, baseType: !1227, size: 8)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "hblank_lo", scope: !6044, file: !5996, line: 72, baseType: !1227, size: 8, offset: 8)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "hactive_hblank_hi", scope: !6044, file: !5996, line: 73, baseType: !1227, size: 8, offset: 16)
!6049 = !DIDerivedType(tag: DW_TAG_member, name: "vactive_lo", scope: !6044, file: !5996, line: 74, baseType: !1227, size: 8, offset: 24)
!6050 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_lo", scope: !6044, file: !5996, line: 75, baseType: !1227, size: 8, offset: 32)
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "vactive_vblank_hi", scope: !6044, file: !5996, line: 76, baseType: !1227, size: 8, offset: 40)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_offset_lo", scope: !6044, file: !5996, line: 77, baseType: !1227, size: 8, offset: 48)
!6053 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_pulse_width_lo", scope: !6044, file: !5996, line: 78, baseType: !1227, size: 8, offset: 56)
!6054 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_offset_pulse_width_lo", scope: !6044, file: !5996, line: 79, baseType: !1227, size: 8, offset: 64)
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_vsync_offset_pulse_width_hi", scope: !6044, file: !5996, line: 80, baseType: !1227, size: 8, offset: 72)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm_lo", scope: !6044, file: !5996, line: 81, baseType: !1227, size: 8, offset: 80)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm_lo", scope: !6044, file: !5996, line: 82, baseType: !1227, size: 8, offset: 88)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "width_height_mm_hi", scope: !6044, file: !5996, line: 83, baseType: !1227, size: 8, offset: 96)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "hborder", scope: !6044, file: !5996, line: 84, baseType: !1227, size: 8, offset: 104)
!6060 = !DIDerivedType(tag: DW_TAG_member, name: "vborder", scope: !6044, file: !5996, line: 85, baseType: !1227, size: 8, offset: 112)
!6061 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !6044, file: !5996, line: 86, baseType: !1227, size: 8, offset: 120)
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "other_data", scope: !6041, file: !5996, line: 174, baseType: !6063, size: 128)
!6063 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_non_pixel", file: !5996, line: 145, size: 128, elements: !6064)
!6064 = !{!6065, !6066, !6067, !6068}
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !6063, file: !5996, line: 146, baseType: !1227, size: 8)
!6066 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6063, file: !5996, line: 147, baseType: !1227, size: 8, offset: 8)
!6067 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !6063, file: !5996, line: 150, baseType: !1227, size: 8, offset: 16)
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6063, file: !5996, line: 157, baseType: !6069, size: 104, offset: 24)
!6069 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6063, file: !5996, line: 151, size: 104, elements: !6070)
!6070 = !{!6071, !6078, !6109, !6116, !6118}
!6071 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6069, file: !5996, line: 152, baseType: !6072, size: 104)
!6072 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_string", file: !5996, line: 90, size: 104, elements: !6073)
!6073 = !{!6074}
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !6072, file: !5996, line: 91, baseType: !6075, size: 104)
!6075 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 104, elements: !6076)
!6076 = !{!6077}
!6077 = !DISubrange(count: 13)
!6078 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !6069, file: !5996, line: 153, baseType: !6079, size: 104)
!6079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_monitor_range", file: !5996, line: 99, size: 104, elements: !6080)
!6080 = !{!6081, !6082, !6083, !6084, !6085, !6086, !6087}
!6081 = !DIDerivedType(tag: DW_TAG_member, name: "min_vfreq", scope: !6079, file: !5996, line: 100, baseType: !1227, size: 8)
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfreq", scope: !6079, file: !5996, line: 101, baseType: !1227, size: 8, offset: 8)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "min_hfreq_khz", scope: !6079, file: !5996, line: 102, baseType: !1227, size: 8, offset: 16)
!6084 = !DIDerivedType(tag: DW_TAG_member, name: "max_hfreq_khz", scope: !6079, file: !5996, line: 103, baseType: !1227, size: 8, offset: 24)
!6085 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_clock_mhz", scope: !6079, file: !5996, line: 104, baseType: !1227, size: 8, offset: 32)
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6079, file: !5996, line: 105, baseType: !1227, size: 8, offset: 40)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "formula", scope: !6079, file: !5996, line: 124, baseType: !6088, size: 56, offset: 48)
!6088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6079, file: !5996, line: 106, size: 56, elements: !6089)
!6089 = !{!6090, !6099}
!6090 = !DIDerivedType(tag: DW_TAG_member, name: "gtf2", scope: !6088, file: !5996, line: 114, baseType: !6091, size: 56)
!6091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6088, file: !5996, line: 107, size: 56, elements: !6092)
!6092 = !{!6093, !6094, !6095, !6096, !6097, !6098}
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !6091, file: !5996, line: 108, baseType: !1227, size: 8)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "hfreq_start_khz", scope: !6091, file: !5996, line: 109, baseType: !1227, size: 8, offset: 8)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !6091, file: !5996, line: 110, baseType: !1227, size: 8, offset: 16)
!6096 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !6091, file: !5996, line: 111, baseType: !6039, size: 16, offset: 24)
!6097 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !6091, file: !5996, line: 112, baseType: !1227, size: 8, offset: 40)
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "j", scope: !6091, file: !5996, line: 113, baseType: !1227, size: 8, offset: 48)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !6088, file: !5996, line: 123, baseType: !6100, size: 56)
!6100 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !6088, file: !5996, line: 115, size: 56, elements: !6101)
!6101 = !{!6102, !6103, !6104, !6105, !6106, !6107, !6108}
!6102 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !6100, file: !5996, line: 116, baseType: !1227, size: 8)
!6103 = !DIDerivedType(tag: DW_TAG_member, name: "data1", scope: !6100, file: !5996, line: 117, baseType: !1227, size: 8, offset: 8)
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "data2", scope: !6100, file: !5996, line: 118, baseType: !1227, size: 8, offset: 16)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "supported_aspects", scope: !6100, file: !5996, line: 119, baseType: !1227, size: 8, offset: 24)
!6106 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !6100, file: !5996, line: 120, baseType: !1227, size: 8, offset: 32)
!6107 = !DIDerivedType(tag: DW_TAG_member, name: "supported_scalings", scope: !6100, file: !5996, line: 121, baseType: !1227, size: 8, offset: 40)
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_refresh", scope: !6100, file: !5996, line: 122, baseType: !1227, size: 8, offset: 48)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !6069, file: !5996, line: 154, baseType: !6110, size: 32)
!6110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_wpindex", file: !5996, line: 127, size: 32, elements: !6111)
!6111 = !{!6112, !6113, !6114, !6115}
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "white_yx_lo", scope: !6110, file: !5996, line: 128, baseType: !1227, size: 8)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "white_x_hi", scope: !6110, file: !5996, line: 129, baseType: !1227, size: 8, offset: 8)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "white_y_hi", scope: !6110, file: !5996, line: 130, baseType: !1227, size: 8, offset: 16)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !6110, file: !5996, line: 131, baseType: !1227, size: 8, offset: 24)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "timings", scope: !6069, file: !5996, line: 155, baseType: !6117, size: 96)
!6117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6030, size: 96, elements: !1545)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !6069, file: !5996, line: 156, baseType: !6119, size: 96)
!6119 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6120, size: 96, elements: !1036)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cvt_timing", file: !5996, line: 141, size: 24, elements: !6121)
!6121 = !{!6122}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !6120, file: !5996, line: 142, baseType: !6123, size: 24)
!6123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1227, size: 24, elements: !97)
!6124 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !5995, file: !5996, line: 325, baseType: !1227, size: 8, offset: 1008)
!6125 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !5995, file: !5996, line: 327, baseType: !1227, size: 8, offset: 1016)
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "hpd_notify", scope: !5918, file: !5821, line: 601, baseType: !6127, size: 64, offset: 1408)
!6127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6128, size: 64)
!6128 = !DISubroutineType(types: !6129)
!6129 = !{null, !5897, !4651}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "hpd_enable", scope: !5918, file: !5821, line: 617, baseType: !5925, size: 64, offset: 1472)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "hpd_disable", scope: !5918, file: !5821, line: 631, baseType: !5925, size: 64, offset: 1536)
!6132 = !DIDerivedType(tag: DW_TAG_member, name: "driver_private", scope: !5898, file: !5821, line: 730, baseType: !170, size: 64, offset: 1216)
!6133 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !5898, file: !5821, line: 732, baseType: !5824, size: 32, offset: 1280)
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5898, file: !5821, line: 738, baseType: !18, size: 32, offset: 1312)
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_allowed", scope: !5898, file: !5821, line: 743, baseType: !315, size: 8, offset: 1344)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "ddc", scope: !5898, file: !5821, line: 747, baseType: !5178, size: 64, offset: 1408)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "hpd_mutex", scope: !5898, file: !5821, line: 752, baseType: !552, size: 192, offset: 1472)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "hpd_cb", scope: !5898, file: !5821, line: 757, baseType: !6139, size: 64, offset: 1664)
!6139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6140, size: 64)
!6140 = !DISubroutineType(types: !6141)
!6141 = !{null, !170, !4651}
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "hpd_data", scope: !5898, file: !5821, line: 762, baseType: !170, size: 64, offset: 1728)
!6143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5896, size: 64)
!6144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6145, size: 64)
!6145 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !18)
!6146 = !{!0, !6147}
!6147 = !DIGlobalVariableExpression(var: !6148, expr: !DIExpression())
!6148 = distinct !DIGlobalVariable(name: "__key", scope: !6149, file: !1423, line: 88, type: !473, isLocal: true, isDefinition: true)
!6149 = distinct !DISubprogram(name: "__init_completion", scope: !1423, file: !1423, line: 85, type: !4852, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6150 = !{!"rsp"}
!6151 = !{i32 7, !"Dwarf Version", i32 4}
!6152 = !{i32 2, !"Debug Info Version", i32 3}
!6153 = !{i32 1, !"wchar_size", i32 2}
!6154 = !{i32 1, !"Code Model", i32 2}
!6155 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6156 = distinct !DISubprogram(name: "drm_atomic_helper_check_modeset", scope: !3, file: !3, line: 605, type: !4518, scopeLine: 607, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6157 = !DILocalVariable(name: "dev", arg: 1, scope: !6156, file: !3, line: 605, type: !6)
!6158 = !DILocation(line: 605, column: 52, scope: !6156)
!6159 = !DILocalVariable(name: "state", arg: 2, scope: !6156, file: !3, line: 606, type: !4520)
!6160 = !DILocation(line: 606, column: 30, scope: !6156)
!6161 = !DILocalVariable(name: "crtc", scope: !6156, file: !3, line: 608, type: !4551)
!6162 = !DILocation(line: 608, column: 19, scope: !6156)
!6163 = !DILocalVariable(name: "old_crtc_state", scope: !6156, file: !3, line: 609, type: !4807)
!6164 = !DILocation(line: 609, column: 25, scope: !6156)
!6165 = !DILocalVariable(name: "new_crtc_state", scope: !6156, file: !3, line: 609, type: !4807)
!6166 = !DILocation(line: 609, column: 42, scope: !6156)
!6167 = !DILocalVariable(name: "connector", scope: !6156, file: !3, line: 610, type: !4613)
!6168 = !DILocation(line: 610, column: 24, scope: !6156)
!6169 = !DILocalVariable(name: "old_connector_state", scope: !6156, file: !3, line: 611, type: !4744)
!6170 = !DILocation(line: 611, column: 30, scope: !6156)
!6171 = !DILocalVariable(name: "new_connector_state", scope: !6156, file: !3, line: 611, type: !4744)
!6172 = !DILocation(line: 611, column: 52, scope: !6156)
!6173 = !DILocalVariable(name: "i", scope: !6156, file: !3, line: 612, type: !18)
!6174 = !DILocation(line: 612, column: 6, scope: !6156)
!6175 = !DILocalVariable(name: "ret", scope: !6156, file: !3, line: 612, type: !18)
!6176 = !DILocation(line: 612, column: 9, scope: !6156)
!6177 = !DILocalVariable(name: "connectors_mask", scope: !6156, file: !3, line: 613, type: !210)
!6178 = !DILocation(line: 613, column: 11, scope: !6156)
!6179 = !DILocation(line: 615, column: 2, scope: !6180)
!6180 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 615, column: 2)
!6181 = !DILocation(line: 615, column: 2, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6180, file: !3, line: 615, column: 2)
!6183 = !DILocation(line: 615, column: 2, scope: !6184)
!6184 = distinct !DILexicalBlock(scope: !6182, file: !3, line: 615, column: 2)
!6185 = !DILocation(line: 615, column: 2, scope: !6186)
!6186 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 615, column: 2)
!6187 = !DILocalVariable(name: "has_connectors", scope: !6188, file: !3, line: 616, type: !315)
!6188 = distinct !DILexicalBlock(scope: !6184, file: !3, line: 615, column: 80)
!6189 = !DILocation(line: 616, column: 8, scope: !6188)
!6190 = !DILocation(line: 617, column: 6, scope: !6188)
!6191 = !DILocation(line: 617, column: 22, scope: !6188)
!6192 = !DILocation(line: 617, column: 5, scope: !6188)
!6193 = !DILocation(line: 617, column: 4, scope: !6188)
!6194 = !DILocalVariable(name: "__ret_warn_on", scope: !6195, file: !3, line: 619, type: !18)
!6195 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 619, column: 3)
!6196 = !DILocation(line: 619, column: 3, scope: !6195)
!6197 = !DILocation(line: 619, column: 3, scope: !6198)
!6198 = distinct !DILexicalBlock(scope: !6195, file: !3, line: 619, column: 3)
!6199 = !DILocation(line: 619, column: 3, scope: !6200)
!6200 = distinct !DILexicalBlock(scope: !6198, file: !3, line: 619, column: 3)
!6201 = !DILocation(line: 619, column: 3, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 619, column: 3)
!6203 = !DILocation(line: 619, column: 3, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 619, column: 3)
!6205 = !{i32 -2140206032, i32 -2140206003, i32 -2140205957, i32 -2140205899, i32 -2140205845, i32 -2140205791, i32 -2140205736, i32 -2140205705}
!6206 = !DILocation(line: 619, column: 3, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 619, column: 3)
!6208 = !{i32 -2140205288, i32 -2140205281, i32 -2140205229, i32 -2140205198, i32 -2140205168}
!6209 = !DILocation(line: 619, column: 3, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6200, file: !3, line: 619, column: 3)
!6211 = !DILocation(line: 621, column: 24, scope: !6212)
!6212 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 621, column: 7)
!6213 = !DILocation(line: 621, column: 40, scope: !6212)
!6214 = !DILocation(line: 621, column: 47, scope: !6212)
!6215 = !DILocation(line: 621, column: 63, scope: !6212)
!6216 = !DILocation(line: 621, column: 8, scope: !6212)
!6217 = !DILocation(line: 621, column: 7, scope: !6188)
!6218 = !DILocation(line: 622, column: 4, scope: !6219)
!6219 = distinct !DILexicalBlock(scope: !6212, file: !3, line: 621, column: 70)
!6220 = !DILocation(line: 624, column: 4, scope: !6219)
!6221 = !DILocation(line: 624, column: 20, scope: !6219)
!6222 = !DILocation(line: 624, column: 33, scope: !6219)
!6223 = !DILocation(line: 625, column: 3, scope: !6219)
!6224 = !DILocation(line: 627, column: 7, scope: !6225)
!6225 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 627, column: 7)
!6226 = !DILocation(line: 627, column: 23, scope: !6225)
!6227 = !DILocation(line: 627, column: 33, scope: !6225)
!6228 = !DILocation(line: 627, column: 49, scope: !6225)
!6229 = !DILocation(line: 627, column: 30, scope: !6225)
!6230 = !DILocation(line: 627, column: 7, scope: !6188)
!6231 = !DILocation(line: 628, column: 4, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 627, column: 57)
!6233 = !DILocation(line: 639, column: 4, scope: !6232)
!6234 = !DILocation(line: 639, column: 20, scope: !6232)
!6235 = !DILocation(line: 639, column: 33, scope: !6232)
!6236 = !DILocation(line: 640, column: 4, scope: !6232)
!6237 = !DILocation(line: 640, column: 20, scope: !6232)
!6238 = !DILocation(line: 640, column: 39, scope: !6232)
!6239 = !DILocation(line: 641, column: 3, scope: !6232)
!6240 = !DILocation(line: 643, column: 7, scope: !6241)
!6241 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 643, column: 7)
!6242 = !DILocation(line: 643, column: 23, scope: !6241)
!6243 = !DILocation(line: 643, column: 33, scope: !6241)
!6244 = !DILocation(line: 643, column: 49, scope: !6241)
!6245 = !DILocation(line: 643, column: 30, scope: !6241)
!6246 = !DILocation(line: 643, column: 7, scope: !6188)
!6247 = !DILocation(line: 644, column: 4, scope: !6248)
!6248 = distinct !DILexicalBlock(scope: !6241, file: !3, line: 643, column: 57)
!6249 = !DILocation(line: 646, column: 4, scope: !6248)
!6250 = !DILocation(line: 646, column: 20, scope: !6248)
!6251 = !DILocation(line: 646, column: 35, scope: !6248)
!6252 = !DILocation(line: 647, column: 3, scope: !6248)
!6253 = !DILocation(line: 649, column: 7, scope: !6254)
!6254 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 649, column: 7)
!6255 = !DILocation(line: 649, column: 23, scope: !6254)
!6256 = !DILocation(line: 649, column: 33, scope: !6254)
!6257 = !DILocation(line: 649, column: 30, scope: !6254)
!6258 = !DILocation(line: 649, column: 7, scope: !6188)
!6259 = !DILocation(line: 650, column: 4, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6254, file: !3, line: 649, column: 49)
!6261 = !DILocation(line: 653, column: 4, scope: !6260)
!6262 = !DILocation(line: 656, column: 26, scope: !6263)
!6263 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 656, column: 7)
!6264 = !DILocation(line: 656, column: 7, scope: !6263)
!6265 = !DILocation(line: 656, column: 7, scope: !6188)
!6266 = !DILocation(line: 657, column: 4, scope: !6263)
!6267 = !DILocation(line: 657, column: 20, scope: !6263)
!6268 = !DILocation(line: 657, column: 30, scope: !6263)
!6269 = !DILocation(line: 659, column: 4, scope: !6263)
!6270 = !DILocation(line: 659, column: 20, scope: !6263)
!6271 = !DILocation(line: 659, column: 30, scope: !6263)
!6272 = distinct !{!6272, !6179, !6273}
!6273 = !DILocation(line: 660, column: 2, scope: !6180)
!6274 = !DILocation(line: 662, column: 36, scope: !6156)
!6275 = !DILocation(line: 662, column: 8, scope: !6156)
!6276 = !DILocation(line: 662, column: 6, scope: !6156)
!6277 = !DILocation(line: 663, column: 6, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 663, column: 6)
!6279 = !DILocation(line: 663, column: 6, scope: !6156)
!6280 = !DILocation(line: 664, column: 10, scope: !6278)
!6281 = !DILocation(line: 664, column: 3, scope: !6278)
!6282 = !DILocation(line: 666, column: 2, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 666, column: 2)
!6284 = !DILocation(line: 666, column: 2, scope: !6285)
!6285 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 666, column: 2)
!6286 = !DILocation(line: 666, column: 2, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6285, file: !3, line: 666, column: 2)
!6288 = !DILocation(line: 666, column: 2, scope: !6289)
!6289 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 666, column: 2)
!6290 = !DILocalVariable(name: "funcs", scope: !6291, file: !3, line: 667, type: !5094)
!6291 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 666, column: 100)
!6292 = !DILocation(line: 667, column: 44, scope: !6291)
!6293 = !DILocation(line: 667, column: 52, scope: !6291)
!6294 = !DILocation(line: 667, column: 63, scope: !6291)
!6295 = !DILocalVariable(name: "__ret_warn_on", scope: !6296, file: !3, line: 669, type: !18)
!6296 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 669, column: 3)
!6297 = !DILocation(line: 669, column: 3, scope: !6296)
!6298 = !DILocation(line: 669, column: 3, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6296, file: !3, line: 669, column: 3)
!6300 = !DILocation(line: 669, column: 3, scope: !6301)
!6301 = distinct !DILexicalBlock(scope: !6299, file: !3, line: 669, column: 3)
!6302 = !DILocation(line: 669, column: 3, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 669, column: 3)
!6304 = !DILocation(line: 669, column: 3, scope: !6305)
!6305 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 669, column: 3)
!6306 = !{i32 -2140203272, i32 -2140203243, i32 -2140203197, i32 -2140203139, i32 -2140203085, i32 -2140203031, i32 -2140202976, i32 -2140202945}
!6307 = !DILocation(line: 669, column: 3, scope: !6308)
!6308 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 669, column: 3)
!6309 = !{i32 -2140202528, i32 -2140202521, i32 -2140202469, i32 -2140202438, i32 -2140202408}
!6310 = !DILocation(line: 669, column: 3, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6301, file: !3, line: 669, column: 3)
!6312 = !DILocation(line: 676, column: 34, scope: !6291)
!6313 = !DILocation(line: 676, column: 41, scope: !6291)
!6314 = !DILocation(line: 677, column: 13, scope: !6291)
!6315 = !DILocation(line: 678, column: 13, scope: !6291)
!6316 = !DILocation(line: 676, column: 9, scope: !6291)
!6317 = !DILocation(line: 676, column: 7, scope: !6291)
!6318 = !DILocation(line: 679, column: 7, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 679, column: 7)
!6320 = !DILocation(line: 679, column: 7, scope: !6291)
!6321 = !DILocation(line: 680, column: 11, scope: !6319)
!6322 = !DILocation(line: 680, column: 4, scope: !6319)
!6323 = !DILocation(line: 681, column: 7, scope: !6324)
!6324 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 681, column: 7)
!6325 = !DILocation(line: 681, column: 28, scope: !6324)
!6326 = !DILocation(line: 681, column: 7, scope: !6291)
!6327 = !DILocation(line: 682, column: 51, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6324, file: !3, line: 681, column: 34)
!6329 = !DILocation(line: 683, column: 16, scope: !6328)
!6330 = !DILocation(line: 683, column: 37, scope: !6328)
!6331 = !DILocation(line: 682, column: 21, scope: !6328)
!6332 = !DILocation(line: 682, column: 19, scope: !6328)
!6333 = !DILocation(line: 684, column: 8, scope: !6334)
!6334 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 684, column: 8)
!6335 = !DILocation(line: 684, column: 29, scope: !6334)
!6336 = !DILocation(line: 685, column: 8, scope: !6334)
!6337 = !DILocation(line: 685, column: 29, scope: !6334)
!6338 = !DILocation(line: 684, column: 41, scope: !6334)
!6339 = !DILocation(line: 684, column: 8, scope: !6328)
!6340 = !DILocation(line: 686, column: 5, scope: !6334)
!6341 = !DILocation(line: 686, column: 21, scope: !6334)
!6342 = !DILocation(line: 686, column: 40, scope: !6334)
!6343 = !DILocation(line: 688, column: 8, scope: !6344)
!6344 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 688, column: 8)
!6345 = !DILocation(line: 688, column: 29, scope: !6344)
!6346 = !DILocation(line: 689, column: 8, scope: !6344)
!6347 = !DILocation(line: 689, column: 29, scope: !6344)
!6348 = !DILocation(line: 688, column: 47, scope: !6344)
!6349 = !DILocation(line: 688, column: 8, scope: !6328)
!6350 = !DILocation(line: 690, column: 5, scope: !6344)
!6351 = !DILocation(line: 690, column: 21, scope: !6344)
!6352 = !DILocation(line: 690, column: 40, scope: !6344)
!6353 = !DILocation(line: 691, column: 3, scope: !6328)
!6354 = !DILocation(line: 693, column: 7, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 693, column: 7)
!6356 = !DILocation(line: 693, column: 14, scope: !6355)
!6357 = !DILocation(line: 693, column: 7, scope: !6291)
!6358 = !DILocation(line: 694, column: 10, scope: !6355)
!6359 = !DILocation(line: 694, column: 17, scope: !6355)
!6360 = !DILocation(line: 694, column: 30, scope: !6355)
!6361 = !DILocation(line: 694, column: 41, scope: !6355)
!6362 = !DILocation(line: 694, column: 8, scope: !6355)
!6363 = !DILocation(line: 694, column: 4, scope: !6355)
!6364 = !DILocation(line: 695, column: 7, scope: !6365)
!6365 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 695, column: 7)
!6366 = !DILocation(line: 695, column: 7, scope: !6291)
!6367 = !DILocation(line: 696, column: 11, scope: !6365)
!6368 = !DILocation(line: 696, column: 4, scope: !6365)
!6369 = !DILocation(line: 698, column: 22, scope: !6291)
!6370 = !DILocation(line: 698, column: 19, scope: !6291)
!6371 = distinct !{!6371, !6282, !6372}
!6372 = !DILocation(line: 699, column: 2, scope: !6283)
!6373 = !DILocation(line: 707, column: 2, scope: !6374)
!6374 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 707, column: 2)
!6375 = !DILocation(line: 707, column: 2, scope: !6376)
!6376 = distinct !DILexicalBlock(scope: !6374, file: !3, line: 707, column: 2)
!6377 = !DILocation(line: 707, column: 2, scope: !6378)
!6378 = distinct !DILexicalBlock(scope: !6376, file: !3, line: 707, column: 2)
!6379 = !DILocation(line: 707, column: 2, scope: !6380)
!6380 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 707, column: 2)
!6381 = !DILocation(line: 708, column: 38, scope: !6382)
!6382 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 708, column: 7)
!6383 = distinct !DILexicalBlock(scope: !6378, file: !3, line: 707, column: 80)
!6384 = !DILocation(line: 708, column: 8, scope: !6382)
!6385 = !DILocation(line: 708, column: 7, scope: !6383)
!6386 = !DILocation(line: 709, column: 4, scope: !6382)
!6387 = !DILocation(line: 711, column: 3, scope: !6383)
!6388 = !DILocation(line: 716, column: 44, scope: !6383)
!6389 = !DILocation(line: 716, column: 51, scope: !6383)
!6390 = !DILocation(line: 716, column: 9, scope: !6383)
!6391 = !DILocation(line: 716, column: 7, scope: !6383)
!6392 = !DILocation(line: 717, column: 7, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 717, column: 7)
!6394 = !DILocation(line: 717, column: 11, scope: !6393)
!6395 = !DILocation(line: 717, column: 7, scope: !6383)
!6396 = !DILocation(line: 718, column: 11, scope: !6393)
!6397 = !DILocation(line: 718, column: 4, scope: !6393)
!6398 = !DILocation(line: 720, column: 40, scope: !6383)
!6399 = !DILocation(line: 720, column: 47, scope: !6383)
!6400 = !DILocation(line: 720, column: 9, scope: !6383)
!6401 = !DILocation(line: 720, column: 7, scope: !6383)
!6402 = !DILocation(line: 721, column: 7, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6383, file: !3, line: 721, column: 7)
!6404 = !DILocation(line: 721, column: 11, scope: !6403)
!6405 = !DILocation(line: 721, column: 7, scope: !6383)
!6406 = !DILocation(line: 722, column: 11, scope: !6403)
!6407 = !DILocation(line: 722, column: 4, scope: !6403)
!6408 = distinct !{!6408, !6373, !6409}
!6409 = !DILocation(line: 723, column: 2, scope: !6374)
!6410 = !DILocation(line: 729, column: 2, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 729, column: 2)
!6412 = !DILocation(line: 729, column: 2, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6411, file: !3, line: 729, column: 2)
!6414 = !DILocation(line: 729, column: 2, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6413, file: !3, line: 729, column: 2)
!6416 = !DILocation(line: 729, column: 2, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 729, column: 2)
!6418 = !DILocalVariable(name: "funcs", scope: !6419, file: !3, line: 730, type: !5094)
!6419 = distinct !DILexicalBlock(scope: !6415, file: !3, line: 729, column: 100)
!6420 = !DILocation(line: 730, column: 44, scope: !6419)
!6421 = !DILocation(line: 730, column: 52, scope: !6419)
!6422 = !DILocation(line: 730, column: 63, scope: !6419)
!6423 = !DILocation(line: 732, column: 7, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 732, column: 7)
!6425 = !DILocation(line: 732, column: 25, scope: !6424)
!6426 = !DILocation(line: 732, column: 23, scope: !6424)
!6427 = !DILocation(line: 732, column: 7, scope: !6419)
!6428 = !DILocation(line: 733, column: 4, scope: !6424)
!6429 = !DILocation(line: 735, column: 7, scope: !6430)
!6430 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 735, column: 7)
!6431 = !DILocation(line: 735, column: 14, scope: !6430)
!6432 = !DILocation(line: 735, column: 7, scope: !6419)
!6433 = !DILocation(line: 736, column: 10, scope: !6430)
!6434 = !DILocation(line: 736, column: 17, scope: !6430)
!6435 = !DILocation(line: 736, column: 30, scope: !6430)
!6436 = !DILocation(line: 736, column: 41, scope: !6430)
!6437 = !DILocation(line: 736, column: 8, scope: !6430)
!6438 = !DILocation(line: 736, column: 4, scope: !6430)
!6439 = !DILocation(line: 737, column: 7, scope: !6440)
!6440 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 737, column: 7)
!6441 = !DILocation(line: 737, column: 7, scope: !6419)
!6442 = !DILocation(line: 738, column: 11, scope: !6440)
!6443 = !DILocation(line: 738, column: 4, scope: !6440)
!6444 = distinct !{!6444, !6410, !6445}
!6445 = !DILocation(line: 739, column: 2, scope: !6411)
!6446 = !DILocation(line: 745, column: 2, scope: !6447)
!6447 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 745, column: 2)
!6448 = !DILocation(line: 745, column: 2, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 745, column: 2)
!6450 = !DILocation(line: 745, column: 2, scope: !6451)
!6451 = distinct !DILexicalBlock(scope: !6449, file: !3, line: 745, column: 2)
!6452 = !DILocation(line: 745, column: 2, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 745, column: 2)
!6454 = !DILocalVariable(name: "encoder", scope: !6455, file: !3, line: 748, type: !4750)
!6455 = distinct !DILexicalBlock(scope: !6451, file: !3, line: 747, column: 33)
!6456 = !DILocation(line: 748, column: 23, scope: !6455)
!6457 = !DILocation(line: 750, column: 13, scope: !6455)
!6458 = !DILocation(line: 750, column: 34, scope: !6455)
!6459 = !DILocation(line: 750, column: 11, scope: !6455)
!6460 = !DILocation(line: 751, column: 40, scope: !6455)
!6461 = !DILocation(line: 751, column: 47, scope: !6455)
!6462 = !DILocation(line: 751, column: 9, scope: !6455)
!6463 = !DILocation(line: 751, column: 7, scope: !6455)
!6464 = !DILocation(line: 752, column: 7, scope: !6465)
!6465 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 752, column: 7)
!6466 = !DILocation(line: 752, column: 7, scope: !6455)
!6467 = !DILocation(line: 753, column: 11, scope: !6465)
!6468 = !DILocation(line: 753, column: 4, scope: !6465)
!6469 = !DILocation(line: 755, column: 13, scope: !6455)
!6470 = !DILocation(line: 755, column: 34, scope: !6455)
!6471 = !DILocation(line: 755, column: 11, scope: !6455)
!6472 = !DILocation(line: 756, column: 40, scope: !6455)
!6473 = !DILocation(line: 756, column: 47, scope: !6455)
!6474 = !DILocation(line: 756, column: 9, scope: !6455)
!6475 = !DILocation(line: 756, column: 7, scope: !6455)
!6476 = !DILocation(line: 757, column: 7, scope: !6477)
!6477 = distinct !DILexicalBlock(scope: !6455, file: !3, line: 757, column: 7)
!6478 = !DILocation(line: 757, column: 7, scope: !6455)
!6479 = !DILocation(line: 758, column: 11, scope: !6477)
!6480 = !DILocation(line: 758, column: 4, scope: !6477)
!6481 = distinct !{!6481, !6446, !6482}
!6482 = !DILocation(line: 759, column: 2, scope: !6447)
!6483 = !DILocation(line: 761, column: 19, scope: !6156)
!6484 = !DILocation(line: 761, column: 8, scope: !6156)
!6485 = !DILocation(line: 761, column: 6, scope: !6156)
!6486 = !DILocation(line: 762, column: 6, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6156, file: !3, line: 762, column: 6)
!6488 = !DILocation(line: 762, column: 6, scope: !6156)
!6489 = !DILocation(line: 763, column: 10, scope: !6487)
!6490 = !DILocation(line: 763, column: 3, scope: !6487)
!6491 = !DILocation(line: 765, column: 20, scope: !6156)
!6492 = !DILocation(line: 765, column: 9, scope: !6156)
!6493 = !DILocation(line: 765, column: 2, scope: !6156)
!6494 = !DILocation(line: 766, column: 1, scope: !6156)
!6495 = distinct !DISubprogram(name: "drm_modeset_is_locked", scope: !4343, file: !4343, line: 112, type: !6496, scopeLine: 113, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6496 = !DISubroutineType(types: !6497)
!6497 = !{!315, !4366}
!6498 = !DILocalVariable(name: "lock", arg: 1, scope: !6495, file: !4343, line: 112, type: !4366)
!6499 = !DILocation(line: 112, column: 67, scope: !6495)
!6500 = !DILocation(line: 114, column: 29, scope: !6495)
!6501 = !DILocation(line: 114, column: 35, scope: !6495)
!6502 = !DILocation(line: 114, column: 9, scope: !6495)
!6503 = !DILocation(line: 114, column: 2, scope: !6495)
!6504 = distinct !DISubprogram(name: "handle_conflicting_encoders", scope: !3, file: !3, line: 102, type: !6505, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6505 = !DISubroutineType(types: !6506)
!6506 = !{!18, !4520, !315}
!6507 = !DILocalVariable(name: "state", arg: 1, scope: !6504, file: !3, line: 102, type: !4520)
!6508 = !DILocation(line: 102, column: 65, scope: !6504)
!6509 = !DILocalVariable(name: "disable_conflicting_encoders", arg: 2, scope: !6504, file: !3, line: 103, type: !315)
!6510 = !DILocation(line: 103, column: 17, scope: !6504)
!6511 = !DILocalVariable(name: "new_conn_state", scope: !6504, file: !3, line: 105, type: !4744)
!6512 = !DILocation(line: 105, column: 30, scope: !6504)
!6513 = !DILocalVariable(name: "connector", scope: !6504, file: !3, line: 106, type: !4613)
!6514 = !DILocation(line: 106, column: 24, scope: !6504)
!6515 = !DILocalVariable(name: "conn_iter", scope: !6504, file: !3, line: 107, type: !6516)
!6516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_list_iter", file: !4615, line: 1686, size: 128, elements: !6517)
!6517 = !{!6518, !6519}
!6518 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !6516, file: !4615, line: 1688, baseType: !6, size: 64)
!6519 = !DIDerivedType(tag: DW_TAG_member, name: "conn", scope: !6516, file: !4615, line: 1689, baseType: !4613, size: 64, offset: 64)
!6520 = !DILocation(line: 107, column: 33, scope: !6504)
!6521 = !DILocalVariable(name: "encoder", scope: !6504, file: !3, line: 108, type: !4750)
!6522 = !DILocation(line: 108, column: 22, scope: !6504)
!6523 = !DILocalVariable(name: "encoder_mask", scope: !6504, file: !3, line: 109, type: !210)
!6524 = !DILocation(line: 109, column: 11, scope: !6504)
!6525 = !DILocalVariable(name: "i", scope: !6504, file: !3, line: 110, type: !18)
!6526 = !DILocation(line: 110, column: 6, scope: !6504)
!6527 = !DILocalVariable(name: "ret", scope: !6504, file: !3, line: 110, type: !18)
!6528 = !DILocation(line: 110, column: 9, scope: !6504)
!6529 = !DILocation(line: 117, column: 2, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 117, column: 2)
!6531 = !DILocation(line: 117, column: 2, scope: !6532)
!6532 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 117, column: 2)
!6533 = !DILocation(line: 117, column: 2, scope: !6534)
!6534 = distinct !DILexicalBlock(scope: !6532, file: !3, line: 117, column: 2)
!6535 = !DILocation(line: 117, column: 2, scope: !6536)
!6536 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 117, column: 2)
!6537 = !DILocalVariable(name: "funcs", scope: !6538, file: !3, line: 118, type: !5094)
!6538 = distinct !DILexicalBlock(scope: !6534, file: !3, line: 117, column: 71)
!6539 = !DILocation(line: 118, column: 44, scope: !6538)
!6540 = !DILocation(line: 118, column: 52, scope: !6538)
!6541 = !DILocation(line: 118, column: 63, scope: !6538)
!6542 = !DILocalVariable(name: "new_encoder", scope: !6538, file: !3, line: 119, type: !4750)
!6543 = !DILocation(line: 119, column: 23, scope: !6538)
!6544 = !DILocation(line: 121, column: 8, scope: !6545)
!6545 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 121, column: 7)
!6546 = !DILocation(line: 121, column: 24, scope: !6545)
!6547 = !DILocation(line: 121, column: 7, scope: !6538)
!6548 = !DILocation(line: 122, column: 4, scope: !6545)
!6549 = !DILocation(line: 124, column: 7, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 124, column: 7)
!6551 = !DILocation(line: 124, column: 14, scope: !6550)
!6552 = !DILocation(line: 124, column: 7, scope: !6538)
!6553 = !DILocation(line: 125, column: 18, scope: !6550)
!6554 = !DILocation(line: 125, column: 25, scope: !6550)
!6555 = !DILocation(line: 125, column: 45, scope: !6550)
!6556 = !DILocation(line: 125, column: 56, scope: !6550)
!6557 = !DILocation(line: 125, column: 16, scope: !6550)
!6558 = !DILocation(line: 125, column: 4, scope: !6550)
!6559 = !DILocation(line: 126, column: 12, scope: !6560)
!6560 = distinct !DILexicalBlock(scope: !6550, file: !3, line: 126, column: 12)
!6561 = !DILocation(line: 126, column: 19, scope: !6560)
!6562 = !DILocation(line: 126, column: 12, scope: !6550)
!6563 = !DILocation(line: 127, column: 18, scope: !6560)
!6564 = !DILocation(line: 127, column: 25, scope: !6560)
!6565 = !DILocation(line: 127, column: 38, scope: !6560)
!6566 = !DILocation(line: 127, column: 16, scope: !6560)
!6567 = !DILocation(line: 127, column: 4, scope: !6560)
!6568 = !DILocation(line: 129, column: 51, scope: !6560)
!6569 = !DILocation(line: 129, column: 18, scope: !6560)
!6570 = !DILocation(line: 129, column: 16, scope: !6560)
!6571 = !DILocation(line: 131, column: 7, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6538, file: !3, line: 131, column: 7)
!6573 = !DILocation(line: 131, column: 7, scope: !6538)
!6574 = !DILocation(line: 132, column: 8, scope: !6575)
!6575 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 132, column: 8)
!6576 = distinct !DILexicalBlock(scope: !6572, file: !3, line: 131, column: 20)
!6577 = !DILocation(line: 132, column: 40, scope: !6575)
!6578 = !DILocation(line: 132, column: 23, scope: !6575)
!6579 = !DILocation(line: 132, column: 21, scope: !6575)
!6580 = !DILocation(line: 132, column: 8, scope: !6576)
!6581 = !DILocation(line: 133, column: 5, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6575, file: !3, line: 132, column: 54)
!6583 = !DILocation(line: 137, column: 5, scope: !6582)
!6584 = !DILocation(line: 140, column: 37, scope: !6576)
!6585 = !DILocation(line: 140, column: 20, scope: !6576)
!6586 = !DILocation(line: 140, column: 17, scope: !6576)
!6587 = !DILocation(line: 141, column: 3, scope: !6576)
!6588 = distinct !{!6588, !6529, !6589}
!6589 = !DILocation(line: 142, column: 2, scope: !6530)
!6590 = !DILocation(line: 144, column: 7, scope: !6591)
!6591 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 144, column: 6)
!6592 = !DILocation(line: 144, column: 6, scope: !6504)
!6593 = !DILocation(line: 145, column: 3, scope: !6591)
!6594 = !DILocation(line: 158, column: 32, scope: !6504)
!6595 = !DILocation(line: 158, column: 39, scope: !6504)
!6596 = !DILocation(line: 158, column: 2, scope: !6504)
!6597 = !DILocation(line: 159, column: 2, scope: !6504)
!6598 = !DILocalVariable(name: "crtc_state", scope: !6599, file: !3, line: 160, type: !4807)
!6599 = distinct !DILexicalBlock(scope: !6504, file: !3, line: 159, column: 53)
!6600 = !DILocation(line: 160, column: 26, scope: !6599)
!6601 = !DILocation(line: 162, column: 42, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 162, column: 7)
!6603 = !DILocation(line: 162, column: 49, scope: !6602)
!6604 = !DILocation(line: 162, column: 7, scope: !6602)
!6605 = !DILocation(line: 162, column: 7, scope: !6599)
!6606 = !DILocation(line: 163, column: 4, scope: !6602)
!6607 = distinct !{!6607, !6597, !6608}
!6608 = !DILocation(line: 204, column: 2, scope: !6504)
!6609 = !DILocation(line: 165, column: 13, scope: !6599)
!6610 = !DILocation(line: 165, column: 24, scope: !6599)
!6611 = !DILocation(line: 165, column: 31, scope: !6599)
!6612 = !DILocation(line: 165, column: 11, scope: !6599)
!6613 = !DILocation(line: 166, column: 8, scope: !6614)
!6614 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 166, column: 7)
!6615 = !DILocation(line: 166, column: 16, scope: !6614)
!6616 = !DILocation(line: 166, column: 21, scope: !6614)
!6617 = !DILocation(line: 166, column: 53, scope: !6614)
!6618 = !DILocation(line: 166, column: 36, scope: !6614)
!6619 = !DILocation(line: 166, column: 34, scope: !6614)
!6620 = !DILocation(line: 166, column: 7, scope: !6599)
!6621 = !DILocation(line: 167, column: 4, scope: !6614)
!6622 = !DILocation(line: 169, column: 8, scope: !6623)
!6623 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 169, column: 7)
!6624 = !DILocation(line: 169, column: 7, scope: !6599)
!6625 = !DILocation(line: 170, column: 4, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6623, file: !3, line: 169, column: 38)
!6627 = !DILocation(line: 175, column: 8, scope: !6626)
!6628 = !DILocation(line: 176, column: 4, scope: !6626)
!6629 = !DILocation(line: 179, column: 51, scope: !6599)
!6630 = !DILocation(line: 179, column: 58, scope: !6599)
!6631 = !DILocation(line: 179, column: 20, scope: !6599)
!6632 = !DILocation(line: 179, column: 18, scope: !6599)
!6633 = !DILocation(line: 180, column: 14, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 180, column: 7)
!6635 = !DILocation(line: 180, column: 7, scope: !6634)
!6636 = !DILocation(line: 180, column: 7, scope: !6599)
!6637 = !DILocation(line: 181, column: 18, scope: !6638)
!6638 = distinct !DILexicalBlock(scope: !6634, file: !3, line: 180, column: 31)
!6639 = !DILocation(line: 181, column: 10, scope: !6638)
!6640 = !DILocation(line: 181, column: 8, scope: !6638)
!6641 = !DILocation(line: 182, column: 4, scope: !6638)
!6642 = !DILocation(line: 185, column: 3, scope: !6599)
!6643 = !DILocation(line: 190, column: 46, scope: !6599)
!6644 = !DILocation(line: 190, column: 53, scope: !6599)
!6645 = !DILocation(line: 190, column: 69, scope: !6599)
!6646 = !DILocation(line: 190, column: 16, scope: !6599)
!6647 = !DILocation(line: 190, column: 14, scope: !6599)
!6648 = !DILocation(line: 192, column: 43, scope: !6599)
!6649 = !DILocation(line: 192, column: 9, scope: !6599)
!6650 = !DILocation(line: 192, column: 7, scope: !6599)
!6651 = !DILocation(line: 193, column: 7, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 193, column: 7)
!6653 = !DILocation(line: 193, column: 7, scope: !6599)
!6654 = !DILocation(line: 194, column: 4, scope: !6652)
!6655 = !DILocation(line: 196, column: 8, scope: !6656)
!6656 = distinct !DILexicalBlock(scope: !6599, file: !3, line: 196, column: 7)
!6657 = !DILocation(line: 196, column: 20, scope: !6656)
!6658 = !DILocation(line: 196, column: 7, scope: !6599)
!6659 = !DILocation(line: 197, column: 44, scope: !6660)
!6660 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 196, column: 36)
!6661 = !DILocation(line: 197, column: 10, scope: !6660)
!6662 = !DILocation(line: 197, column: 8, scope: !6660)
!6663 = !DILocation(line: 199, column: 8, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6660, file: !3, line: 199, column: 8)
!6665 = !DILocation(line: 199, column: 12, scope: !6664)
!6666 = !DILocation(line: 199, column: 8, scope: !6660)
!6667 = !DILocation(line: 200, column: 5, scope: !6664)
!6668 = !DILocation(line: 202, column: 4, scope: !6660)
!6669 = !DILocation(line: 202, column: 16, scope: !6660)
!6670 = !DILocation(line: 202, column: 23, scope: !6660)
!6671 = !DILocation(line: 203, column: 3, scope: !6660)
!6672 = !DILabel(scope: !6504, name: "out", file: !3, line: 205)
!6673 = !DILocation(line: 205, column: 1, scope: !6504)
!6674 = !DILocation(line: 206, column: 2, scope: !6504)
!6675 = !DILocation(line: 208, column: 9, scope: !6504)
!6676 = !DILocation(line: 208, column: 2, scope: !6504)
!6677 = !DILocation(line: 209, column: 1, scope: !6504)
!6678 = distinct !DISubprogram(name: "update_connector_routing", scope: !3, file: !3, line: 283, type: !6679, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6679 = !DISubroutineType(types: !6680)
!6680 = !{!18, !4520, !4613, !4744, !4744}
!6681 = !DILocalVariable(name: "state", arg: 1, scope: !6678, file: !3, line: 283, type: !4520)
!6682 = !DILocation(line: 283, column: 51, scope: !6678)
!6683 = !DILocalVariable(name: "connector", arg: 2, scope: !6678, file: !3, line: 284, type: !4613)
!6684 = !DILocation(line: 284, column: 27, scope: !6678)
!6685 = !DILocalVariable(name: "old_connector_state", arg: 3, scope: !6678, file: !3, line: 285, type: !4744)
!6686 = !DILocation(line: 285, column: 33, scope: !6678)
!6687 = !DILocalVariable(name: "new_connector_state", arg: 4, scope: !6678, file: !3, line: 286, type: !4744)
!6688 = !DILocation(line: 286, column: 33, scope: !6678)
!6689 = !DILocalVariable(name: "funcs", scope: !6678, file: !3, line: 288, type: !5094)
!6690 = !DILocation(line: 288, column: 43, scope: !6678)
!6691 = !DILocalVariable(name: "new_encoder", scope: !6678, file: !3, line: 289, type: !4750)
!6692 = !DILocation(line: 289, column: 22, scope: !6678)
!6693 = !DILocalVariable(name: "crtc_state", scope: !6678, file: !3, line: 290, type: !4807)
!6694 = !DILocation(line: 290, column: 25, scope: !6678)
!6695 = !DILocation(line: 292, column: 2, scope: !6678)
!6696 = !DILocation(line: 296, column: 6, scope: !6697)
!6697 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 296, column: 6)
!6698 = !DILocation(line: 296, column: 27, scope: !6697)
!6699 = !DILocation(line: 296, column: 35, scope: !6697)
!6700 = !DILocation(line: 296, column: 56, scope: !6697)
!6701 = !DILocation(line: 296, column: 32, scope: !6697)
!6702 = !DILocation(line: 296, column: 6, scope: !6678)
!6703 = !DILocation(line: 297, column: 7, scope: !6704)
!6704 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 297, column: 7)
!6705 = distinct !DILexicalBlock(scope: !6697, file: !3, line: 296, column: 62)
!6706 = !DILocation(line: 297, column: 28, scope: !6704)
!6707 = !DILocation(line: 297, column: 7, scope: !6705)
!6708 = !DILocation(line: 298, column: 47, scope: !6709)
!6709 = distinct !DILexicalBlock(scope: !6704, file: !3, line: 297, column: 34)
!6710 = !DILocation(line: 298, column: 54, scope: !6709)
!6711 = !DILocation(line: 298, column: 75, scope: !6709)
!6712 = !DILocation(line: 298, column: 17, scope: !6709)
!6713 = !DILocation(line: 298, column: 15, scope: !6709)
!6714 = !DILocation(line: 299, column: 4, scope: !6709)
!6715 = !DILocation(line: 299, column: 16, scope: !6709)
!6716 = !DILocation(line: 299, column: 35, scope: !6709)
!6717 = !DILocation(line: 300, column: 3, scope: !6709)
!6718 = !DILocation(line: 302, column: 7, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6705, file: !3, line: 302, column: 7)
!6720 = !DILocation(line: 302, column: 28, scope: !6719)
!6721 = !DILocation(line: 302, column: 7, scope: !6705)
!6722 = !DILocation(line: 303, column: 47, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6719, file: !3, line: 302, column: 34)
!6724 = !DILocation(line: 303, column: 54, scope: !6723)
!6725 = !DILocation(line: 303, column: 75, scope: !6723)
!6726 = !DILocation(line: 303, column: 17, scope: !6723)
!6727 = !DILocation(line: 303, column: 15, scope: !6723)
!6728 = !DILocation(line: 304, column: 4, scope: !6723)
!6729 = !DILocation(line: 304, column: 16, scope: !6723)
!6730 = !DILocation(line: 304, column: 35, scope: !6723)
!6731 = !DILocation(line: 305, column: 3, scope: !6723)
!6732 = !DILocation(line: 306, column: 2, scope: !6705)
!6733 = !DILocation(line: 308, column: 7, scope: !6734)
!6734 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 308, column: 6)
!6735 = !DILocation(line: 308, column: 28, scope: !6734)
!6736 = !DILocation(line: 308, column: 6, scope: !6678)
!6737 = !DILocation(line: 309, column: 3, scope: !6738)
!6738 = distinct !DILexicalBlock(scope: !6734, file: !3, line: 308, column: 34)
!6739 = !DILocation(line: 313, column: 20, scope: !6738)
!6740 = !DILocation(line: 313, column: 27, scope: !6738)
!6741 = !DILocation(line: 313, column: 3, scope: !6738)
!6742 = !DILocation(line: 315, column: 3, scope: !6738)
!6743 = !DILocation(line: 318, column: 45, scope: !6678)
!6744 = !DILocation(line: 319, column: 10, scope: !6678)
!6745 = !DILocation(line: 319, column: 31, scope: !6678)
!6746 = !DILocation(line: 318, column: 15, scope: !6678)
!6747 = !DILocation(line: 318, column: 13, scope: !6678)
!6748 = !DILocation(line: 338, column: 7, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 338, column: 6)
!6750 = !DILocation(line: 338, column: 14, scope: !6749)
!6751 = !DILocation(line: 338, column: 25, scope: !6749)
!6752 = !DILocation(line: 338, column: 58, scope: !6749)
!6753 = !DILocation(line: 338, column: 28, scope: !6749)
!6754 = !DILocation(line: 338, column: 69, scope: !6749)
!6755 = !DILocation(line: 339, column: 6, scope: !6749)
!6756 = !DILocation(line: 339, column: 18, scope: !6749)
!6757 = !DILocation(line: 338, column: 6, scope: !6678)
!6758 = !DILocation(line: 340, column: 3, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 339, column: 26)
!6760 = !DILocation(line: 342, column: 3, scope: !6759)
!6761 = !DILocation(line: 345, column: 10, scope: !6678)
!6762 = !DILocation(line: 345, column: 21, scope: !6678)
!6763 = !DILocation(line: 345, column: 8, scope: !6678)
!6764 = !DILocation(line: 347, column: 6, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 347, column: 6)
!6766 = !DILocation(line: 347, column: 13, scope: !6765)
!6767 = !DILocation(line: 347, column: 6, scope: !6678)
!6768 = !DILocation(line: 348, column: 17, scope: !6765)
!6769 = !DILocation(line: 348, column: 24, scope: !6765)
!6770 = !DILocation(line: 348, column: 44, scope: !6765)
!6771 = !DILocation(line: 349, column: 9, scope: !6765)
!6772 = !DILocation(line: 348, column: 15, scope: !6765)
!6773 = !DILocation(line: 348, column: 3, scope: !6765)
!6774 = !DILocation(line: 350, column: 11, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 350, column: 11)
!6776 = !DILocation(line: 350, column: 18, scope: !6775)
!6777 = !DILocation(line: 350, column: 11, scope: !6765)
!6778 = !DILocation(line: 351, column: 17, scope: !6775)
!6779 = !DILocation(line: 351, column: 24, scope: !6775)
!6780 = !DILocation(line: 351, column: 37, scope: !6775)
!6781 = !DILocation(line: 351, column: 15, scope: !6775)
!6782 = !DILocation(line: 351, column: 3, scope: !6775)
!6783 = !DILocation(line: 353, column: 50, scope: !6775)
!6784 = !DILocation(line: 353, column: 17, scope: !6775)
!6785 = !DILocation(line: 353, column: 15, scope: !6775)
!6786 = !DILocation(line: 355, column: 7, scope: !6787)
!6787 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 355, column: 6)
!6788 = !DILocation(line: 355, column: 6, scope: !6678)
!6789 = !DILocation(line: 356, column: 3, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 355, column: 20)
!6791 = !DILocation(line: 359, column: 3, scope: !6790)
!6792 = !DILocation(line: 362, column: 27, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 362, column: 6)
!6794 = !DILocation(line: 362, column: 40, scope: !6793)
!6795 = !DILocation(line: 362, column: 61, scope: !6793)
!6796 = !DILocation(line: 362, column: 7, scope: !6793)
!6797 = !DILocation(line: 362, column: 6, scope: !6678)
!6798 = !DILocation(line: 363, column: 3, scope: !6799)
!6799 = distinct !DILexicalBlock(scope: !6793, file: !3, line: 362, column: 68)
!6800 = !DILocation(line: 368, column: 3, scope: !6799)
!6801 = !DILocation(line: 371, column: 6, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6678, file: !3, line: 371, column: 6)
!6803 = !DILocation(line: 371, column: 21, scope: !6802)
!6804 = !DILocation(line: 371, column: 42, scope: !6802)
!6805 = !DILocation(line: 371, column: 18, scope: !6802)
!6806 = !DILocation(line: 371, column: 6, scope: !6678)
!6807 = !DILocation(line: 372, column: 20, scope: !6808)
!6808 = distinct !DILexicalBlock(scope: !6802, file: !3, line: 371, column: 56)
!6809 = !DILocation(line: 372, column: 27, scope: !6808)
!6810 = !DILocation(line: 372, column: 48, scope: !6808)
!6811 = !DILocation(line: 372, column: 3, scope: !6808)
!6812 = !DILocation(line: 374, column: 3, scope: !6808)
!6813 = !DILocation(line: 382, column: 3, scope: !6808)
!6814 = !DILocation(line: 385, column: 16, scope: !6678)
!6815 = !DILocation(line: 385, column: 23, scope: !6678)
!6816 = !DILocation(line: 385, column: 2, scope: !6678)
!6817 = !DILocation(line: 387, column: 19, scope: !6678)
!6818 = !DILocation(line: 387, column: 26, scope: !6678)
!6819 = !DILocation(line: 387, column: 47, scope: !6678)
!6820 = !DILocation(line: 387, column: 2, scope: !6678)
!6821 = !DILocation(line: 389, column: 2, scope: !6678)
!6822 = !DILocation(line: 389, column: 14, scope: !6678)
!6823 = !DILocation(line: 389, column: 33, scope: !6678)
!6824 = !DILocation(line: 391, column: 2, scope: !6678)
!6825 = !DILocation(line: 399, column: 2, scope: !6678)
!6826 = !DILocation(line: 400, column: 1, scope: !6678)
!6827 = distinct !DISubprogram(name: "drm_atomic_get_new_crtc_state", scope: !4522, file: !4522, line: 519, type: !6828, scopeLine: 521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6828 = !DISubroutineType(types: !6829)
!6829 = !{!4807, !4520, !4551}
!6830 = !DILocalVariable(name: "state", arg: 1, scope: !6827, file: !4522, line: 519, type: !4520)
!6831 = !DILocation(line: 519, column: 56, scope: !6827)
!6832 = !DILocalVariable(name: "crtc", arg: 2, scope: !6827, file: !4522, line: 520, type: !4551)
!6833 = !DILocation(line: 520, column: 27, scope: !6827)
!6834 = !DILocation(line: 522, column: 9, scope: !6827)
!6835 = !DILocation(line: 522, column: 16, scope: !6827)
!6836 = !DILocation(line: 522, column: 37, scope: !6827)
!6837 = !DILocation(line: 522, column: 22, scope: !6827)
!6838 = !DILocation(line: 522, column: 44, scope: !6827)
!6839 = !DILocation(line: 522, column: 2, scope: !6827)
!6840 = distinct !DISubprogram(name: "drm_atomic_crtc_needs_modeset", scope: !4522, file: !4522, line: 977, type: !6841, scopeLine: 978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6841 = !DISubroutineType(types: !6842)
!6842 = !{!315, !5370}
!6843 = !DILocalVariable(name: "state", arg: 1, scope: !6840, file: !4522, line: 977, type: !5370)
!6844 = !DILocation(line: 977, column: 60, scope: !6840)
!6845 = !DILocation(line: 979, column: 9, scope: !6840)
!6846 = !DILocation(line: 979, column: 16, scope: !6840)
!6847 = !DILocation(line: 979, column: 29, scope: !6840)
!6848 = !DILocation(line: 979, column: 32, scope: !6840)
!6849 = !DILocation(line: 979, column: 39, scope: !6840)
!6850 = !DILocation(line: 979, column: 54, scope: !6840)
!6851 = !DILocation(line: 980, column: 9, scope: !6840)
!6852 = !DILocation(line: 980, column: 16, scope: !6840)
!6853 = !DILocation(line: 979, column: 2, scope: !6840)
!6854 = distinct !DISubprogram(name: "mode_valid", scope: !3, file: !3, line: 528, type: !6855, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6855 = !DISubroutineType(types: !6856)
!6856 = !{!18, !4520}
!6857 = !DILocalVariable(name: "state", arg: 1, scope: !6854, file: !3, line: 528, type: !4520)
!6858 = !DILocation(line: 528, column: 37, scope: !6854)
!6859 = !DILocalVariable(name: "conn_state", scope: !6854, file: !3, line: 530, type: !4744)
!6860 = !DILocation(line: 530, column: 30, scope: !6854)
!6861 = !DILocalVariable(name: "connector", scope: !6854, file: !3, line: 531, type: !4613)
!6862 = !DILocation(line: 531, column: 24, scope: !6854)
!6863 = !DILocalVariable(name: "i", scope: !6854, file: !3, line: 532, type: !18)
!6864 = !DILocation(line: 532, column: 6, scope: !6854)
!6865 = !DILocation(line: 534, column: 2, scope: !6866)
!6866 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 534, column: 2)
!6867 = !DILocation(line: 534, column: 2, scope: !6868)
!6868 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 534, column: 2)
!6869 = !DILocation(line: 534, column: 2, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6868, file: !3, line: 534, column: 2)
!6871 = !DILocation(line: 534, column: 2, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 534, column: 2)
!6873 = !DILocalVariable(name: "encoder", scope: !6874, file: !3, line: 535, type: !4750)
!6874 = distinct !DILexicalBlock(scope: !6870, file: !3, line: 534, column: 67)
!6875 = !DILocation(line: 535, column: 23, scope: !6874)
!6876 = !DILocation(line: 535, column: 33, scope: !6874)
!6877 = !DILocation(line: 535, column: 45, scope: !6874)
!6878 = !DILocalVariable(name: "crtc", scope: !6874, file: !3, line: 536, type: !4551)
!6879 = !DILocation(line: 536, column: 20, scope: !6874)
!6880 = !DILocation(line: 536, column: 27, scope: !6874)
!6881 = !DILocation(line: 536, column: 39, scope: !6874)
!6882 = !DILocalVariable(name: "crtc_state", scope: !6874, file: !3, line: 537, type: !4807)
!6883 = !DILocation(line: 537, column: 26, scope: !6874)
!6884 = !DILocalVariable(name: "mode_status", scope: !6874, file: !3, line: 538, type: !4246)
!6885 = !DILocation(line: 538, column: 24, scope: !6874)
!6886 = !DILocalVariable(name: "mode", scope: !6874, file: !3, line: 539, type: !4514)
!6887 = !DILocation(line: 539, column: 34, scope: !6874)
!6888 = !DILocation(line: 541, column: 8, scope: !6889)
!6889 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 541, column: 7)
!6890 = !DILocation(line: 541, column: 13, scope: !6889)
!6891 = !DILocation(line: 541, column: 17, scope: !6889)
!6892 = !DILocation(line: 541, column: 7, scope: !6874)
!6893 = !DILocation(line: 542, column: 4, scope: !6889)
!6894 = !DILocation(line: 544, column: 46, scope: !6874)
!6895 = !DILocation(line: 544, column: 53, scope: !6874)
!6896 = !DILocation(line: 544, column: 16, scope: !6874)
!6897 = !DILocation(line: 544, column: 14, scope: !6874)
!6898 = !DILocation(line: 545, column: 8, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 545, column: 7)
!6900 = !DILocation(line: 545, column: 7, scope: !6874)
!6901 = !DILocation(line: 546, column: 4, scope: !6899)
!6902 = !DILocation(line: 547, column: 8, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 547, column: 7)
!6904 = !DILocation(line: 547, column: 20, scope: !6903)
!6905 = !DILocation(line: 547, column: 33, scope: !6903)
!6906 = !DILocation(line: 547, column: 37, scope: !6903)
!6907 = !DILocation(line: 547, column: 49, scope: !6903)
!6908 = !DILocation(line: 547, column: 7, scope: !6874)
!6909 = !DILocation(line: 548, column: 4, scope: !6903)
!6910 = !DILocation(line: 550, column: 11, scope: !6874)
!6911 = !DILocation(line: 550, column: 23, scope: !6874)
!6912 = !DILocation(line: 550, column: 8, scope: !6874)
!6913 = !DILocation(line: 552, column: 33, scope: !6874)
!6914 = !DILocation(line: 552, column: 44, scope: !6874)
!6915 = !DILocation(line: 552, column: 53, scope: !6874)
!6916 = !DILocation(line: 552, column: 59, scope: !6874)
!6917 = !DILocation(line: 552, column: 17, scope: !6874)
!6918 = !DILocation(line: 552, column: 15, scope: !6874)
!6919 = !DILocation(line: 553, column: 7, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6874, file: !3, line: 553, column: 7)
!6921 = !DILocation(line: 553, column: 19, scope: !6920)
!6922 = !DILocation(line: 553, column: 7, scope: !6874)
!6923 = !DILocation(line: 554, column: 4, scope: !6920)
!6924 = distinct !{!6924, !6865, !6925}
!6925 = !DILocation(line: 555, column: 2, scope: !6866)
!6926 = !DILocation(line: 557, column: 2, scope: !6854)
!6927 = !DILocation(line: 558, column: 1, scope: !6854)
!6928 = distinct !DISubprogram(name: "mode_fixup", scope: !3, file: !3, line: 403, type: !6855, scopeLine: 404, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!6929 = !DILocalVariable(name: "state", arg: 1, scope: !6928, file: !3, line: 403, type: !4520)
!6930 = !DILocation(line: 403, column: 37, scope: !6928)
!6931 = !DILocalVariable(name: "crtc", scope: !6928, file: !3, line: 405, type: !4551)
!6932 = !DILocation(line: 405, column: 19, scope: !6928)
!6933 = !DILocalVariable(name: "new_crtc_state", scope: !6928, file: !3, line: 406, type: !4807)
!6934 = !DILocation(line: 406, column: 25, scope: !6928)
!6935 = !DILocalVariable(name: "connector", scope: !6928, file: !3, line: 407, type: !4613)
!6936 = !DILocation(line: 407, column: 24, scope: !6928)
!6937 = !DILocalVariable(name: "new_conn_state", scope: !6928, file: !3, line: 408, type: !4744)
!6938 = !DILocation(line: 408, column: 30, scope: !6928)
!6939 = !DILocalVariable(name: "i", scope: !6928, file: !3, line: 409, type: !18)
!6940 = !DILocation(line: 409, column: 6, scope: !6928)
!6941 = !DILocalVariable(name: "ret", scope: !6928, file: !3, line: 410, type: !18)
!6942 = !DILocation(line: 410, column: 6, scope: !6928)
!6943 = !DILocation(line: 412, column: 2, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 412, column: 2)
!6945 = !DILocation(line: 412, column: 2, scope: !6946)
!6946 = distinct !DILexicalBlock(scope: !6944, file: !3, line: 412, column: 2)
!6947 = !DILocation(line: 412, column: 2, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6946, file: !3, line: 412, column: 2)
!6949 = !DILocation(line: 412, column: 2, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 412, column: 2)
!6951 = !DILocation(line: 413, column: 8, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6953, file: !3, line: 413, column: 7)
!6953 = distinct !DILexicalBlock(scope: !6948, file: !3, line: 412, column: 61)
!6954 = !DILocation(line: 413, column: 24, scope: !6952)
!6955 = !DILocation(line: 413, column: 37, scope: !6952)
!6956 = !DILocation(line: 414, column: 8, scope: !6952)
!6957 = !DILocation(line: 414, column: 24, scope: !6952)
!6958 = !DILocation(line: 413, column: 7, scope: !6953)
!6959 = !DILocation(line: 415, column: 4, scope: !6952)
!6960 = !DILocation(line: 417, column: 18, scope: !6953)
!6961 = !DILocation(line: 417, column: 34, scope: !6953)
!6962 = !DILocation(line: 417, column: 50, scope: !6953)
!6963 = !DILocation(line: 417, column: 66, scope: !6953)
!6964 = !DILocation(line: 417, column: 3, scope: !6953)
!6965 = distinct !{!6965, !6943, !6966}
!6966 = !DILocation(line: 418, column: 2, scope: !6944)
!6967 = !DILocation(line: 420, column: 2, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 420, column: 2)
!6969 = !DILocation(line: 420, column: 2, scope: !6970)
!6970 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 420, column: 2)
!6971 = !DILocation(line: 420, column: 2, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6970, file: !3, line: 420, column: 2)
!6973 = !DILocation(line: 420, column: 2, scope: !6974)
!6974 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 420, column: 2)
!6975 = !DILocalVariable(name: "funcs", scope: !6976, file: !3, line: 421, type: !4780)
!6976 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 420, column: 71)
!6977 = !DILocation(line: 421, column: 42, scope: !6976)
!6978 = !DILocalVariable(name: "encoder", scope: !6976, file: !3, line: 422, type: !4750)
!6979 = !DILocation(line: 422, column: 23, scope: !6976)
!6980 = !DILocalVariable(name: "bridge", scope: !6976, file: !3, line: 423, type: !5897)
!6981 = !DILocation(line: 423, column: 22, scope: !6976)
!6982 = !DILocalVariable(name: "__ret_warn_on", scope: !6983, file: !3, line: 425, type: !18)
!6983 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 425, column: 3)
!6984 = !DILocation(line: 425, column: 3, scope: !6983)
!6985 = !DILocation(line: 425, column: 3, scope: !6986)
!6986 = distinct !DILexicalBlock(scope: !6983, file: !3, line: 425, column: 3)
!6987 = !DILocation(line: 425, column: 3, scope: !6988)
!6988 = distinct !DILexicalBlock(scope: !6986, file: !3, line: 425, column: 3)
!6989 = !DILocation(line: 425, column: 3, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 425, column: 3)
!6991 = !DILocation(line: 425, column: 3, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 425, column: 3)
!6993 = !{i32 -2140210615, i32 -2140210586, i32 -2140210540, i32 -2140210482, i32 -2140210428, i32 -2140210374, i32 -2140210319, i32 -2140210288}
!6994 = !DILocation(line: 425, column: 3, scope: !6995)
!6995 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 425, column: 3)
!6996 = !{i32 -2140209871, i32 -2140209864, i32 -2140209812, i32 -2140209781, i32 -2140209751}
!6997 = !DILocation(line: 425, column: 3, scope: !6998)
!6998 = distinct !DILexicalBlock(scope: !6988, file: !3, line: 425, column: 3)
!6999 = !DILocation(line: 427, column: 8, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 427, column: 7)
!7001 = !DILocation(line: 427, column: 24, scope: !7000)
!7002 = !DILocation(line: 427, column: 29, scope: !7000)
!7003 = !DILocation(line: 427, column: 33, scope: !7000)
!7004 = !DILocation(line: 427, column: 49, scope: !7000)
!7005 = !DILocation(line: 427, column: 7, scope: !6976)
!7006 = !DILocation(line: 428, column: 4, scope: !7000)
!7007 = !DILocation(line: 431, column: 34, scope: !6976)
!7008 = !DILocation(line: 431, column: 41, scope: !6976)
!7009 = !DILocation(line: 431, column: 57, scope: !6976)
!7010 = !DILocation(line: 431, column: 4, scope: !6976)
!7011 = !DILocation(line: 430, column: 18, scope: !6976)
!7012 = !DILocation(line: 437, column: 13, scope: !6976)
!7013 = !DILocation(line: 437, column: 29, scope: !6976)
!7014 = !DILocation(line: 437, column: 11, scope: !6976)
!7015 = !DILocation(line: 438, column: 11, scope: !6976)
!7016 = !DILocation(line: 438, column: 20, scope: !6976)
!7017 = !DILocation(line: 438, column: 9, scope: !6976)
!7018 = !DILocation(line: 440, column: 46, scope: !6976)
!7019 = !DILocation(line: 440, column: 12, scope: !6976)
!7020 = !DILocation(line: 440, column: 10, scope: !6976)
!7021 = !DILocation(line: 441, column: 39, scope: !6976)
!7022 = !DILocation(line: 442, column: 11, scope: !6976)
!7023 = !DILocation(line: 443, column: 11, scope: !6976)
!7024 = !DILocation(line: 441, column: 9, scope: !6976)
!7025 = !DILocation(line: 441, column: 7, scope: !6976)
!7026 = !DILocation(line: 444, column: 7, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 444, column: 7)
!7028 = !DILocation(line: 444, column: 7, scope: !6976)
!7029 = !DILocation(line: 445, column: 4, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 444, column: 12)
!7031 = !DILocation(line: 446, column: 11, scope: !7030)
!7032 = !DILocation(line: 446, column: 4, scope: !7030)
!7033 = !DILocation(line: 449, column: 7, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 449, column: 7)
!7035 = !DILocation(line: 449, column: 13, scope: !7034)
!7036 = !DILocation(line: 449, column: 16, scope: !7034)
!7037 = !DILocation(line: 449, column: 23, scope: !7034)
!7038 = !DILocation(line: 449, column: 7, scope: !6976)
!7039 = !DILocation(line: 450, column: 10, scope: !7040)
!7040 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 449, column: 37)
!7041 = !DILocation(line: 450, column: 17, scope: !7040)
!7042 = !DILocation(line: 450, column: 30, scope: !7040)
!7043 = !DILocation(line: 450, column: 39, scope: !7040)
!7044 = !DILocation(line: 451, column: 9, scope: !7040)
!7045 = !DILocation(line: 450, column: 8, scope: !7040)
!7046 = !DILocation(line: 452, column: 8, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7040, file: !3, line: 452, column: 8)
!7048 = !DILocation(line: 452, column: 8, scope: !7040)
!7049 = !DILocation(line: 453, column: 5, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7047, file: !3, line: 452, column: 13)
!7051 = !DILocation(line: 455, column: 12, scope: !7050)
!7052 = !DILocation(line: 455, column: 5, scope: !7050)
!7053 = !DILocation(line: 457, column: 3, scope: !7040)
!7054 = !DILocation(line: 457, column: 14, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 457, column: 14)
!7056 = !DILocation(line: 457, column: 20, scope: !7055)
!7057 = !DILocation(line: 457, column: 23, scope: !7055)
!7058 = !DILocation(line: 457, column: 30, scope: !7055)
!7059 = !DILocation(line: 457, column: 14, scope: !7034)
!7060 = !DILocation(line: 458, column: 10, scope: !7061)
!7061 = distinct !DILexicalBlock(scope: !7055, file: !3, line: 457, column: 42)
!7062 = !DILocation(line: 458, column: 17, scope: !7061)
!7063 = !DILocation(line: 458, column: 28, scope: !7061)
!7064 = !DILocation(line: 458, column: 38, scope: !7061)
!7065 = !DILocation(line: 458, column: 54, scope: !7061)
!7066 = !DILocation(line: 459, column: 8, scope: !7061)
!7067 = !DILocation(line: 459, column: 24, scope: !7061)
!7068 = !DILocation(line: 458, column: 8, scope: !7061)
!7069 = !DILocation(line: 460, column: 9, scope: !7070)
!7070 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 460, column: 8)
!7071 = !DILocation(line: 460, column: 8, scope: !7061)
!7072 = !DILocation(line: 461, column: 5, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7070, file: !3, line: 460, column: 14)
!7074 = !DILocation(line: 463, column: 5, scope: !7073)
!7075 = !DILocation(line: 465, column: 3, scope: !7061)
!7076 = distinct !{!7076, !6967, !7077}
!7077 = !DILocation(line: 466, column: 2, scope: !6968)
!7078 = !DILocation(line: 468, column: 2, scope: !7079)
!7079 = distinct !DILexicalBlock(scope: !6928, file: !3, line: 468, column: 2)
!7080 = !DILocation(line: 468, column: 2, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7079, file: !3, line: 468, column: 2)
!7082 = !DILocation(line: 468, column: 2, scope: !7083)
!7083 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 468, column: 2)
!7084 = !DILocation(line: 468, column: 2, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 468, column: 2)
!7086 = !DILocalVariable(name: "funcs", scope: !7087, file: !3, line: 469, type: !5411)
!7087 = distinct !DILexicalBlock(scope: !7083, file: !3, line: 468, column: 61)
!7088 = !DILocation(line: 469, column: 39, scope: !7087)
!7089 = !DILocation(line: 471, column: 8, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 471, column: 7)
!7091 = !DILocation(line: 471, column: 24, scope: !7090)
!7092 = !DILocation(line: 471, column: 7, scope: !7087)
!7093 = !DILocation(line: 472, column: 4, scope: !7090)
!7094 = !DILocation(line: 474, column: 8, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 474, column: 7)
!7096 = !DILocation(line: 474, column: 24, scope: !7095)
!7097 = !DILocation(line: 474, column: 37, scope: !7095)
!7098 = !DILocation(line: 475, column: 8, scope: !7095)
!7099 = !DILocation(line: 475, column: 24, scope: !7095)
!7100 = !DILocation(line: 474, column: 7, scope: !7087)
!7101 = !DILocation(line: 476, column: 4, scope: !7095)
!7102 = !DILocation(line: 478, column: 11, scope: !7087)
!7103 = !DILocation(line: 478, column: 17, scope: !7087)
!7104 = !DILocation(line: 478, column: 9, scope: !7087)
!7105 = !DILocation(line: 479, column: 8, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 479, column: 7)
!7107 = !DILocation(line: 479, column: 14, scope: !7106)
!7108 = !DILocation(line: 479, column: 18, scope: !7106)
!7109 = !DILocation(line: 479, column: 25, scope: !7106)
!7110 = !DILocation(line: 479, column: 7, scope: !7087)
!7111 = !DILocation(line: 480, column: 4, scope: !7106)
!7112 = !DILocation(line: 482, column: 9, scope: !7087)
!7113 = !DILocation(line: 482, column: 16, scope: !7087)
!7114 = !DILocation(line: 482, column: 27, scope: !7087)
!7115 = !DILocation(line: 482, column: 34, scope: !7087)
!7116 = !DILocation(line: 482, column: 50, scope: !7087)
!7117 = !DILocation(line: 483, column: 7, scope: !7087)
!7118 = !DILocation(line: 483, column: 23, scope: !7087)
!7119 = !DILocation(line: 482, column: 7, scope: !7087)
!7120 = !DILocation(line: 484, column: 8, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 484, column: 7)
!7122 = !DILocation(line: 484, column: 7, scope: !7087)
!7123 = !DILocation(line: 485, column: 4, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7121, file: !3, line: 484, column: 13)
!7125 = !DILocation(line: 487, column: 4, scope: !7124)
!7126 = distinct !{!7126, !7078, !7127}
!7127 = !DILocation(line: 489, column: 2, scope: !7079)
!7128 = !DILocation(line: 491, column: 2, scope: !6928)
!7129 = !DILocation(line: 492, column: 1, scope: !6928)
!7130 = distinct !DISubprogram(name: "drm_atomic_helper_check_plane_state", scope: !3, file: !3, line: 790, type: !7131, scopeLine: 796, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7131 = !DISubroutineType(types: !7132)
!7132 = !{!18, !5517, !5370, !18, !18, !315, !315}
!7133 = !DILocalVariable(name: "plane_state", arg: 1, scope: !7130, file: !3, line: 790, type: !5517)
!7134 = !DILocation(line: 790, column: 65, scope: !7130)
!7135 = !DILocalVariable(name: "crtc_state", arg: 2, scope: !7130, file: !3, line: 791, type: !5370)
!7136 = !DILocation(line: 791, column: 35, scope: !7130)
!7137 = !DILocalVariable(name: "min_scale", arg: 3, scope: !7130, file: !3, line: 792, type: !18)
!7138 = !DILocation(line: 792, column: 10, scope: !7130)
!7139 = !DILocalVariable(name: "max_scale", arg: 4, scope: !7130, file: !3, line: 793, type: !18)
!7140 = !DILocation(line: 793, column: 10, scope: !7130)
!7141 = !DILocalVariable(name: "can_position", arg: 5, scope: !7130, file: !3, line: 794, type: !315)
!7142 = !DILocation(line: 794, column: 11, scope: !7130)
!7143 = !DILocalVariable(name: "can_update_disabled", arg: 6, scope: !7130, file: !3, line: 795, type: !315)
!7144 = !DILocation(line: 795, column: 11, scope: !7130)
!7145 = !DILocalVariable(name: "fb", scope: !7130, file: !3, line: 797, type: !4409)
!7146 = !DILocation(line: 797, column: 26, scope: !7130)
!7147 = !DILocation(line: 797, column: 31, scope: !7130)
!7148 = !DILocation(line: 797, column: 44, scope: !7130)
!7149 = !DILocalVariable(name: "src", scope: !7130, file: !3, line: 798, type: !7150)
!7150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!7151 = !DILocation(line: 798, column: 19, scope: !7130)
!7152 = !DILocation(line: 798, column: 26, scope: !7130)
!7153 = !DILocation(line: 798, column: 39, scope: !7130)
!7154 = !DILocalVariable(name: "dst", scope: !7130, file: !3, line: 799, type: !7150)
!7155 = !DILocation(line: 799, column: 19, scope: !7130)
!7156 = !DILocation(line: 799, column: 26, scope: !7130)
!7157 = !DILocation(line: 799, column: 39, scope: !7130)
!7158 = !DILocalVariable(name: "rotation", scope: !7130, file: !3, line: 800, type: !210)
!7159 = !DILocation(line: 800, column: 15, scope: !7130)
!7160 = !DILocation(line: 800, column: 26, scope: !7130)
!7161 = !DILocation(line: 800, column: 39, scope: !7130)
!7162 = !DILocalVariable(name: "clip", scope: !7130, file: !3, line: 801, type: !5553)
!7163 = !DILocation(line: 801, column: 18, scope: !7130)
!7164 = !DILocalVariable(name: "hscale", scope: !7130, file: !3, line: 802, type: !18)
!7165 = !DILocation(line: 802, column: 6, scope: !7130)
!7166 = !DILocalVariable(name: "vscale", scope: !7130, file: !3, line: 802, type: !18)
!7167 = !DILocation(line: 802, column: 14, scope: !7130)
!7168 = !DILocalVariable(name: "__ret_warn_on", scope: !7169, file: !3, line: 804, type: !18)
!7169 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 804, column: 2)
!7170 = !DILocation(line: 804, column: 2, scope: !7169)
!7171 = !DILocation(line: 0, scope: !7169)
!7172 = !DILocation(line: 804, column: 2, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7169, file: !3, line: 804, column: 2)
!7174 = !DILocation(line: 804, column: 2, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 804, column: 2)
!7176 = !DILocation(line: 804, column: 2, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 804, column: 2)
!7178 = !DILocation(line: 804, column: 2, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 804, column: 2)
!7180 = !{i32 -2140198727, i32 -2140198698, i32 -2140198652, i32 -2140198594, i32 -2140198540, i32 -2140198486, i32 -2140198431, i32 -2140198400}
!7181 = !DILocation(line: 804, column: 2, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 804, column: 2)
!7183 = !{i32 -2140197983, i32 -2140197976, i32 -2140197924, i32 -2140197893, i32 -2140197863}
!7184 = !DILocation(line: 804, column: 2, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 804, column: 2)
!7186 = !DILocation(line: 806, column: 3, scope: !7130)
!7187 = !DILocation(line: 806, column: 29, scope: !7130)
!7188 = !DILocation(line: 806, column: 9, scope: !7130)
!7189 = !DILocation(line: 807, column: 3, scope: !7130)
!7190 = !DILocation(line: 807, column: 30, scope: !7130)
!7191 = !DILocation(line: 807, column: 9, scope: !7130)
!7192 = !DILocation(line: 809, column: 7, scope: !7193)
!7193 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 809, column: 6)
!7194 = !DILocation(line: 809, column: 6, scope: !7130)
!7195 = !DILocation(line: 810, column: 3, scope: !7196)
!7196 = distinct !DILexicalBlock(scope: !7193, file: !3, line: 809, column: 11)
!7197 = !DILocation(line: 810, column: 16, scope: !7196)
!7198 = !DILocation(line: 810, column: 24, scope: !7196)
!7199 = !DILocation(line: 811, column: 3, scope: !7196)
!7200 = !DILocalVariable(name: "__ret_warn_on", scope: !7201, file: !3, line: 815, type: !18)
!7201 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 815, column: 6)
!7202 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 815, column: 6)
!7203 = !DILocation(line: 815, column: 6, scope: !7201)
!7204 = !DILocation(line: 815, column: 6, scope: !7205)
!7205 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 815, column: 6)
!7206 = !DILocation(line: 815, column: 6, scope: !7207)
!7207 = distinct !DILexicalBlock(scope: !7205, file: !3, line: 815, column: 6)
!7208 = !DILocation(line: 815, column: 6, scope: !7209)
!7209 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 815, column: 6)
!7210 = !DILocation(line: 815, column: 6, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 815, column: 6)
!7212 = !{i32 -2140197273, i32 -2140197244, i32 -2140197198, i32 -2140197140, i32 -2140197086, i32 -2140197032, i32 -2140196977, i32 -2140196946}
!7213 = !DILocation(line: 815, column: 6, scope: !7214)
!7214 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 815, column: 6)
!7215 = !{i32 -2140196529, i32 -2140196522, i32 -2140196470, i32 -2140196439, i32 -2140196409}
!7216 = !DILocation(line: 815, column: 6, scope: !7217)
!7217 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 815, column: 6)
!7218 = !DILocation(line: 815, column: 6, scope: !7202)
!7219 = !DILocation(line: 815, column: 6, scope: !7130)
!7220 = !DILocation(line: 816, column: 3, scope: !7221)
!7221 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 815, column: 35)
!7222 = !DILocation(line: 816, column: 16, scope: !7221)
!7223 = !DILocation(line: 816, column: 24, scope: !7221)
!7224 = !DILocation(line: 817, column: 3, scope: !7221)
!7225 = !DILocation(line: 820, column: 7, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 820, column: 6)
!7227 = !DILocation(line: 820, column: 19, scope: !7226)
!7228 = !DILocation(line: 820, column: 26, scope: !7226)
!7229 = !DILocation(line: 820, column: 30, scope: !7226)
!7230 = !DILocation(line: 820, column: 6, scope: !7130)
!7231 = !DILocation(line: 821, column: 3, scope: !7232)
!7232 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 820, column: 51)
!7233 = !DILocation(line: 822, column: 3, scope: !7232)
!7234 = !DILocation(line: 825, column: 18, scope: !7130)
!7235 = !DILocation(line: 825, column: 23, scope: !7130)
!7236 = !DILocation(line: 825, column: 27, scope: !7130)
!7237 = !DILocation(line: 825, column: 33, scope: !7130)
!7238 = !DILocation(line: 825, column: 40, scope: !7130)
!7239 = !DILocation(line: 825, column: 44, scope: !7130)
!7240 = !DILocation(line: 825, column: 51, scope: !7130)
!7241 = !DILocation(line: 825, column: 58, scope: !7130)
!7242 = !DILocation(line: 825, column: 2, scope: !7130)
!7243 = !DILocation(line: 828, column: 32, scope: !7130)
!7244 = !DILocation(line: 828, column: 37, scope: !7130)
!7245 = !DILocation(line: 828, column: 42, scope: !7130)
!7246 = !DILocation(line: 828, column: 53, scope: !7130)
!7247 = !DILocation(line: 828, column: 11, scope: !7130)
!7248 = !DILocation(line: 828, column: 9, scope: !7130)
!7249 = !DILocation(line: 829, column: 32, scope: !7130)
!7250 = !DILocation(line: 829, column: 37, scope: !7130)
!7251 = !DILocation(line: 829, column: 42, scope: !7130)
!7252 = !DILocation(line: 829, column: 53, scope: !7130)
!7253 = !DILocation(line: 829, column: 11, scope: !7130)
!7254 = !DILocation(line: 829, column: 9, scope: !7130)
!7255 = !DILocation(line: 830, column: 6, scope: !7256)
!7256 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 830, column: 6)
!7257 = !DILocation(line: 830, column: 13, scope: !7256)
!7258 = !DILocation(line: 830, column: 17, scope: !7256)
!7259 = !DILocation(line: 830, column: 20, scope: !7256)
!7260 = !DILocation(line: 830, column: 27, scope: !7256)
!7261 = !DILocation(line: 830, column: 6, scope: !7130)
!7262 = !DILocation(line: 831, column: 3, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7256, file: !3, line: 830, column: 32)
!7264 = !DILocation(line: 832, column: 34, scope: !7263)
!7265 = !DILocation(line: 832, column: 47, scope: !7263)
!7266 = !DILocation(line: 832, column: 3, scope: !7263)
!7267 = !DILocation(line: 833, column: 34, scope: !7263)
!7268 = !DILocation(line: 833, column: 47, scope: !7263)
!7269 = !DILocation(line: 833, column: 3, scope: !7263)
!7270 = !DILocation(line: 834, column: 3, scope: !7263)
!7271 = !DILocation(line: 837, column: 6, scope: !7272)
!7272 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 837, column: 6)
!7273 = !DILocation(line: 837, column: 18, scope: !7272)
!7274 = !DILocation(line: 837, column: 6, scope: !7130)
!7275 = !DILocation(line: 838, column: 27, scope: !7272)
!7276 = !DILocation(line: 838, column: 39, scope: !7272)
!7277 = !DILocation(line: 838, column: 51, scope: !7272)
!7278 = !DILocation(line: 838, column: 61, scope: !7272)
!7279 = !DILocation(line: 838, column: 3, scope: !7272)
!7280 = !DILocation(line: 840, column: 46, scope: !7130)
!7281 = !DILocation(line: 840, column: 51, scope: !7130)
!7282 = !DILocation(line: 840, column: 25, scope: !7130)
!7283 = !DILocation(line: 840, column: 2, scope: !7130)
!7284 = !DILocation(line: 840, column: 15, scope: !7130)
!7285 = !DILocation(line: 840, column: 23, scope: !7130)
!7286 = !DILocation(line: 842, column: 22, scope: !7130)
!7287 = !DILocation(line: 842, column: 27, scope: !7130)
!7288 = !DILocation(line: 842, column: 31, scope: !7130)
!7289 = !DILocation(line: 842, column: 37, scope: !7130)
!7290 = !DILocation(line: 842, column: 44, scope: !7130)
!7291 = !DILocation(line: 842, column: 48, scope: !7130)
!7292 = !DILocation(line: 842, column: 55, scope: !7130)
!7293 = !DILocation(line: 842, column: 62, scope: !7130)
!7294 = !DILocation(line: 842, column: 2, scope: !7130)
!7295 = !DILocation(line: 844, column: 7, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 844, column: 6)
!7297 = !DILocation(line: 844, column: 20, scope: !7296)
!7298 = !DILocation(line: 844, column: 6, scope: !7130)
!7299 = !DILocation(line: 852, column: 3, scope: !7296)
!7300 = !DILocation(line: 854, column: 7, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7130, file: !3, line: 854, column: 6)
!7302 = !DILocation(line: 854, column: 20, scope: !7301)
!7303 = !DILocation(line: 854, column: 40, scope: !7301)
!7304 = !DILocation(line: 854, column: 24, scope: !7301)
!7305 = !DILocation(line: 854, column: 6, scope: !7130)
!7306 = !DILocation(line: 855, column: 3, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7301, file: !3, line: 854, column: 53)
!7308 = !DILocation(line: 856, column: 33, scope: !7307)
!7309 = !DILocation(line: 856, column: 3, scope: !7307)
!7310 = !DILocation(line: 857, column: 3, scope: !7307)
!7311 = !DILocation(line: 858, column: 3, scope: !7307)
!7312 = !DILocation(line: 861, column: 2, scope: !7130)
!7313 = !DILocation(line: 862, column: 1, scope: !7130)
!7314 = distinct !DISubprogram(name: "drm_plane_state_src", scope: !4537, file: !4537, line: 230, type: !7315, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7315 = !DISubroutineType(types: !7316)
!7316 = !{!5553, !5576}
!7317 = !DILocalVariable(name: "state", arg: 1, scope: !7314, file: !4537, line: 230, type: !5576)
!7318 = !DILocation(line: 230, column: 51, scope: !7314)
!7319 = !DILocalVariable(name: "src", scope: !7314, file: !4537, line: 232, type: !5553)
!7320 = !DILocation(line: 232, column: 18, scope: !7314)
!7321 = !DILocation(line: 232, column: 24, scope: !7314)
!7322 = !DILocation(line: 233, column: 9, scope: !7314)
!7323 = !DILocation(line: 233, column: 16, scope: !7314)
!7324 = !DILocation(line: 234, column: 9, scope: !7314)
!7325 = !DILocation(line: 234, column: 16, scope: !7314)
!7326 = !DILocation(line: 235, column: 9, scope: !7314)
!7327 = !DILocation(line: 235, column: 16, scope: !7314)
!7328 = !DILocation(line: 235, column: 24, scope: !7314)
!7329 = !DILocation(line: 235, column: 31, scope: !7314)
!7330 = !DILocation(line: 235, column: 22, scope: !7314)
!7331 = !DILocation(line: 236, column: 9, scope: !7314)
!7332 = !DILocation(line: 236, column: 16, scope: !7314)
!7333 = !DILocation(line: 236, column: 24, scope: !7314)
!7334 = !DILocation(line: 236, column: 31, scope: !7314)
!7335 = !DILocation(line: 236, column: 22, scope: !7314)
!7336 = !DILocation(line: 238, column: 2, scope: !7314)
!7337 = distinct !DISubprogram(name: "drm_plane_state_dest", scope: !4537, file: !4537, line: 242, type: !7315, scopeLine: 243, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7338 = !DILocalVariable(name: "state", arg: 1, scope: !7337, file: !4537, line: 242, type: !5576)
!7339 = !DILocation(line: 242, column: 52, scope: !7337)
!7340 = !DILocalVariable(name: "dest", scope: !7337, file: !4537, line: 244, type: !5553)
!7341 = !DILocation(line: 244, column: 18, scope: !7337)
!7342 = !DILocation(line: 244, column: 25, scope: !7337)
!7343 = !DILocation(line: 245, column: 9, scope: !7337)
!7344 = !DILocation(line: 245, column: 16, scope: !7337)
!7345 = !DILocation(line: 246, column: 9, scope: !7337)
!7346 = !DILocation(line: 246, column: 16, scope: !7337)
!7347 = !DILocation(line: 247, column: 9, scope: !7337)
!7348 = !DILocation(line: 247, column: 16, scope: !7337)
!7349 = !DILocation(line: 247, column: 25, scope: !7337)
!7350 = !DILocation(line: 247, column: 32, scope: !7337)
!7351 = !DILocation(line: 247, column: 23, scope: !7337)
!7352 = !DILocation(line: 248, column: 9, scope: !7337)
!7353 = !DILocation(line: 248, column: 16, scope: !7337)
!7354 = !DILocation(line: 248, column: 25, scope: !7337)
!7355 = !DILocation(line: 248, column: 32, scope: !7337)
!7356 = !DILocation(line: 248, column: 23, scope: !7337)
!7357 = !DILocation(line: 250, column: 2, scope: !7337)
!7358 = distinct !DISubprogram(name: "drm_rect_equals", scope: !5554, file: !5554, line: 202, type: !7359, scopeLine: 204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7359 = !DISubroutineType(types: !7360)
!7360 = !{!315, !7361, !7361}
!7361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7362, size: 64)
!7362 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5553)
!7363 = !DILocalVariable(name: "r1", arg: 1, scope: !7358, file: !5554, line: 202, type: !7361)
!7364 = !DILocation(line: 202, column: 59, scope: !7358)
!7365 = !DILocalVariable(name: "r2", arg: 2, scope: !7358, file: !5554, line: 203, type: !7361)
!7366 = !DILocation(line: 203, column: 31, scope: !7358)
!7367 = !DILocation(line: 205, column: 9, scope: !7358)
!7368 = !DILocation(line: 205, column: 13, scope: !7358)
!7369 = !DILocation(line: 205, column: 19, scope: !7358)
!7370 = !DILocation(line: 205, column: 23, scope: !7358)
!7371 = !DILocation(line: 205, column: 16, scope: !7358)
!7372 = !DILocation(line: 205, column: 26, scope: !7358)
!7373 = !DILocation(line: 205, column: 29, scope: !7358)
!7374 = !DILocation(line: 205, column: 33, scope: !7358)
!7375 = !DILocation(line: 205, column: 39, scope: !7358)
!7376 = !DILocation(line: 205, column: 43, scope: !7358)
!7377 = !DILocation(line: 205, column: 36, scope: !7358)
!7378 = !DILocation(line: 205, column: 46, scope: !7358)
!7379 = !DILocation(line: 206, column: 3, scope: !7358)
!7380 = !DILocation(line: 206, column: 7, scope: !7358)
!7381 = !DILocation(line: 206, column: 13, scope: !7358)
!7382 = !DILocation(line: 206, column: 17, scope: !7358)
!7383 = !DILocation(line: 206, column: 10, scope: !7358)
!7384 = !DILocation(line: 206, column: 20, scope: !7358)
!7385 = !DILocation(line: 206, column: 23, scope: !7358)
!7386 = !DILocation(line: 206, column: 27, scope: !7358)
!7387 = !DILocation(line: 206, column: 33, scope: !7358)
!7388 = !DILocation(line: 206, column: 37, scope: !7358)
!7389 = !DILocation(line: 206, column: 30, scope: !7358)
!7390 = !DILocation(line: 0, scope: !7358)
!7391 = !DILocation(line: 205, column: 2, scope: !7358)
!7392 = distinct !DISubprogram(name: "drm_atomic_helper_check_planes", scope: !3, file: !3, line: 882, type: !4518, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7393 = !DILocalVariable(name: "dev", arg: 1, scope: !7392, file: !3, line: 882, type: !6)
!7394 = !DILocation(line: 882, column: 51, scope: !7392)
!7395 = !DILocalVariable(name: "state", arg: 2, scope: !7392, file: !3, line: 883, type: !4520)
!7396 = !DILocation(line: 883, column: 36, scope: !7392)
!7397 = !DILocalVariable(name: "crtc", scope: !7392, file: !3, line: 885, type: !4551)
!7398 = !DILocation(line: 885, column: 19, scope: !7392)
!7399 = !DILocalVariable(name: "new_crtc_state", scope: !7392, file: !3, line: 886, type: !4807)
!7400 = !DILocation(line: 886, column: 25, scope: !7392)
!7401 = !DILocalVariable(name: "plane", scope: !7392, file: !3, line: 887, type: !4535)
!7402 = !DILocation(line: 887, column: 20, scope: !7392)
!7403 = !DILocalVariable(name: "new_plane_state", scope: !7392, file: !3, line: 888, type: !5517)
!7404 = !DILocation(line: 888, column: 26, scope: !7392)
!7405 = !DILocalVariable(name: "old_plane_state", scope: !7392, file: !3, line: 888, type: !5517)
!7406 = !DILocation(line: 888, column: 44, scope: !7392)
!7407 = !DILocalVariable(name: "i", scope: !7392, file: !3, line: 889, type: !18)
!7408 = !DILocation(line: 889, column: 6, scope: !7392)
!7409 = !DILocalVariable(name: "ret", scope: !7392, file: !3, line: 889, type: !18)
!7410 = !DILocation(line: 889, column: 9, scope: !7392)
!7411 = !DILocation(line: 891, column: 2, scope: !7412)
!7412 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 891, column: 2)
!7413 = !DILocation(line: 891, column: 2, scope: !7414)
!7414 = distinct !DILexicalBlock(scope: !7412, file: !3, line: 891, column: 2)
!7415 = !DILocation(line: 891, column: 2, scope: !7416)
!7416 = distinct !DILexicalBlock(scope: !7414, file: !3, line: 891, column: 2)
!7417 = !DILocation(line: 891, column: 2, scope: !7418)
!7418 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 891, column: 2)
!7419 = !DILocalVariable(name: "funcs", scope: !7420, file: !3, line: 892, type: !5600)
!7420 = distinct !DILexicalBlock(scope: !7416, file: !3, line: 891, column: 84)
!7421 = !DILocation(line: 892, column: 40, scope: !7420)
!7422 = !DILocalVariable(name: "__ret_warn_on", scope: !7423, file: !3, line: 894, type: !18)
!7423 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 894, column: 3)
!7424 = !DILocation(line: 894, column: 3, scope: !7423)
!7425 = !DILocation(line: 894, column: 3, scope: !7426)
!7426 = distinct !DILexicalBlock(scope: !7423, file: !3, line: 894, column: 3)
!7427 = !DILocation(line: 894, column: 3, scope: !7428)
!7428 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 894, column: 3)
!7429 = !DILocation(line: 894, column: 3, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 894, column: 3)
!7431 = !DILocation(line: 894, column: 3, scope: !7432)
!7432 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 894, column: 3)
!7433 = !{i32 -2140194655, i32 -2140194626, i32 -2140194580, i32 -2140194522, i32 -2140194468, i32 -2140194414, i32 -2140194359, i32 -2140194328}
!7434 = !DILocation(line: 894, column: 3, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 894, column: 3)
!7436 = !{i32 -2140193911, i32 -2140193904, i32 -2140193852, i32 -2140193821, i32 -2140193791}
!7437 = !DILocation(line: 894, column: 3, scope: !7438)
!7438 = distinct !DILexicalBlock(scope: !7428, file: !3, line: 894, column: 3)
!7439 = !DILocation(line: 896, column: 11, scope: !7420)
!7440 = !DILocation(line: 896, column: 18, scope: !7420)
!7441 = !DILocation(line: 896, column: 9, scope: !7420)
!7442 = !DILocation(line: 898, column: 35, scope: !7420)
!7443 = !DILocation(line: 898, column: 42, scope: !7420)
!7444 = !DILocation(line: 898, column: 59, scope: !7420)
!7445 = !DILocation(line: 898, column: 76, scope: !7420)
!7446 = !DILocation(line: 898, column: 3, scope: !7420)
!7447 = !DILocation(line: 900, column: 40, scope: !7420)
!7448 = !DILocation(line: 900, column: 47, scope: !7420)
!7449 = !DILocation(line: 900, column: 3, scope: !7420)
!7450 = !DILocation(line: 902, column: 8, scope: !7451)
!7451 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 902, column: 7)
!7452 = !DILocation(line: 902, column: 14, scope: !7451)
!7453 = !DILocation(line: 902, column: 18, scope: !7451)
!7454 = !DILocation(line: 902, column: 25, scope: !7451)
!7455 = !DILocation(line: 902, column: 7, scope: !7420)
!7456 = !DILocation(line: 903, column: 4, scope: !7451)
!7457 = !DILocation(line: 905, column: 9, scope: !7420)
!7458 = !DILocation(line: 905, column: 16, scope: !7420)
!7459 = !DILocation(line: 905, column: 29, scope: !7420)
!7460 = !DILocation(line: 905, column: 36, scope: !7420)
!7461 = !DILocation(line: 905, column: 7, scope: !7420)
!7462 = !DILocation(line: 906, column: 7, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 906, column: 7)
!7464 = !DILocation(line: 906, column: 7, scope: !7420)
!7465 = !DILocation(line: 907, column: 4, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7463, file: !3, line: 906, column: 12)
!7467 = !DILocation(line: 909, column: 11, scope: !7466)
!7468 = !DILocation(line: 909, column: 4, scope: !7466)
!7469 = distinct !{!7469, !7411, !7470}
!7470 = !DILocation(line: 911, column: 2, scope: !7412)
!7471 = !DILocation(line: 913, column: 2, scope: !7472)
!7472 = distinct !DILexicalBlock(scope: !7392, file: !3, line: 913, column: 2)
!7473 = !DILocation(line: 913, column: 2, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7472, file: !3, line: 913, column: 2)
!7475 = !DILocation(line: 913, column: 2, scope: !7476)
!7476 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 913, column: 2)
!7477 = !DILocation(line: 913, column: 2, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 913, column: 2)
!7479 = !DILocalVariable(name: "funcs", scope: !7480, file: !3, line: 914, type: !5411)
!7480 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 913, column: 61)
!7481 = !DILocation(line: 914, column: 39, scope: !7480)
!7482 = !DILocation(line: 916, column: 11, scope: !7480)
!7483 = !DILocation(line: 916, column: 17, scope: !7480)
!7484 = !DILocation(line: 916, column: 9, scope: !7480)
!7485 = !DILocation(line: 918, column: 8, scope: !7486)
!7486 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 918, column: 7)
!7487 = !DILocation(line: 918, column: 14, scope: !7486)
!7488 = !DILocation(line: 918, column: 18, scope: !7486)
!7489 = !DILocation(line: 918, column: 25, scope: !7486)
!7490 = !DILocation(line: 918, column: 7, scope: !7480)
!7491 = !DILocation(line: 919, column: 4, scope: !7486)
!7492 = !DILocation(line: 921, column: 9, scope: !7480)
!7493 = !DILocation(line: 921, column: 16, scope: !7480)
!7494 = !DILocation(line: 921, column: 29, scope: !7480)
!7495 = !DILocation(line: 921, column: 35, scope: !7480)
!7496 = !DILocation(line: 921, column: 7, scope: !7480)
!7497 = !DILocation(line: 922, column: 7, scope: !7498)
!7498 = distinct !DILexicalBlock(scope: !7480, file: !3, line: 922, column: 7)
!7499 = !DILocation(line: 922, column: 7, scope: !7480)
!7500 = !DILocation(line: 923, column: 4, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 922, column: 12)
!7502 = !DILocation(line: 925, column: 11, scope: !7501)
!7503 = !DILocation(line: 925, column: 4, scope: !7501)
!7504 = distinct !{!7504, !7471, !7505}
!7505 = !DILocation(line: 927, column: 2, scope: !7472)
!7506 = !DILocation(line: 929, column: 9, scope: !7392)
!7507 = !DILocation(line: 929, column: 2, scope: !7392)
!7508 = !DILocation(line: 930, column: 1, scope: !7392)
!7509 = distinct !DISubprogram(name: "drm_atomic_helper_plane_changed", scope: !3, file: !3, line: 75, type: !7510, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7510 = !DISubroutineType(types: !7511)
!7511 = !{null, !4520, !5517, !5517, !4535}
!7512 = !DILocalVariable(name: "state", arg: 1, scope: !7509, file: !3, line: 75, type: !4520)
!7513 = !DILocation(line: 75, column: 58, scope: !7509)
!7514 = !DILocalVariable(name: "old_plane_state", arg: 2, scope: !7509, file: !3, line: 76, type: !5517)
!7515 = !DILocation(line: 76, column: 29, scope: !7509)
!7516 = !DILocalVariable(name: "plane_state", arg: 3, scope: !7509, file: !3, line: 77, type: !5517)
!7517 = !DILocation(line: 77, column: 29, scope: !7509)
!7518 = !DILocalVariable(name: "plane", arg: 4, scope: !7509, file: !3, line: 78, type: !4535)
!7519 = !DILocation(line: 78, column: 23, scope: !7509)
!7520 = !DILocalVariable(name: "crtc_state", scope: !7509, file: !3, line: 80, type: !4807)
!7521 = !DILocation(line: 80, column: 25, scope: !7509)
!7522 = !DILocation(line: 82, column: 6, scope: !7523)
!7523 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 82, column: 6)
!7524 = !DILocation(line: 82, column: 23, scope: !7523)
!7525 = !DILocation(line: 82, column: 6, scope: !7509)
!7526 = !DILocation(line: 83, column: 46, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7523, file: !3, line: 82, column: 29)
!7528 = !DILocation(line: 84, column: 11, scope: !7527)
!7529 = !DILocation(line: 84, column: 28, scope: !7527)
!7530 = !DILocation(line: 83, column: 16, scope: !7527)
!7531 = !DILocation(line: 83, column: 14, scope: !7527)
!7532 = !DILocalVariable(name: "__ret_warn_on", scope: !7533, file: !3, line: 86, type: !18)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 86, column: 7)
!7534 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 86, column: 7)
!7535 = !DILocation(line: 86, column: 7, scope: !7533)
!7536 = !DILocation(line: 86, column: 7, scope: !7537)
!7537 = distinct !DILexicalBlock(scope: !7533, file: !3, line: 86, column: 7)
!7538 = !DILocation(line: 86, column: 7, scope: !7539)
!7539 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 86, column: 7)
!7540 = !DILocation(line: 86, column: 7, scope: !7541)
!7541 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 86, column: 7)
!7542 = !DILocation(line: 86, column: 7, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 86, column: 7)
!7544 = !{i32 -2140221942, i32 -2140221913, i32 -2140221867, i32 -2140221809, i32 -2140221755, i32 -2140221701, i32 -2140221646, i32 -2140221615}
!7545 = !DILocation(line: 86, column: 7, scope: !7546)
!7546 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 86, column: 7)
!7547 = !{i32 -2140221199, i32 -2140221192, i32 -2140221140, i32 -2140221109, i32 -2140221079}
!7548 = !DILocation(line: 86, column: 7, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7539, file: !3, line: 86, column: 7)
!7550 = !DILocation(line: 86, column: 7, scope: !7534)
!7551 = !DILocation(line: 86, column: 7, scope: !7527)
!7552 = !DILocation(line: 87, column: 4, scope: !7534)
!7553 = !DILocation(line: 89, column: 3, scope: !7527)
!7554 = !DILocation(line: 89, column: 15, scope: !7527)
!7555 = !DILocation(line: 89, column: 30, scope: !7527)
!7556 = !DILocation(line: 90, column: 2, scope: !7527)
!7557 = !DILocation(line: 92, column: 6, scope: !7558)
!7558 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 92, column: 6)
!7559 = !DILocation(line: 92, column: 19, scope: !7558)
!7560 = !DILocation(line: 92, column: 6, scope: !7509)
!7561 = !DILocation(line: 93, column: 46, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7558, file: !3, line: 92, column: 25)
!7563 = !DILocation(line: 93, column: 53, scope: !7562)
!7564 = !DILocation(line: 93, column: 66, scope: !7562)
!7565 = !DILocation(line: 93, column: 16, scope: !7562)
!7566 = !DILocation(line: 93, column: 14, scope: !7562)
!7567 = !DILocalVariable(name: "__ret_warn_on", scope: !7568, file: !3, line: 95, type: !18)
!7568 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 95, column: 7)
!7569 = distinct !DILexicalBlock(scope: !7562, file: !3, line: 95, column: 7)
!7570 = !DILocation(line: 95, column: 7, scope: !7568)
!7571 = !DILocation(line: 95, column: 7, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7568, file: !3, line: 95, column: 7)
!7573 = !DILocation(line: 95, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7572, file: !3, line: 95, column: 7)
!7575 = !DILocation(line: 95, column: 7, scope: !7576)
!7576 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 95, column: 7)
!7577 = !DILocation(line: 95, column: 7, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 95, column: 7)
!7579 = !{i32 -2140220496, i32 -2140220467, i32 -2140220421, i32 -2140220363, i32 -2140220309, i32 -2140220255, i32 -2140220200, i32 -2140220169}
!7580 = !DILocation(line: 95, column: 7, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 95, column: 7)
!7582 = !{i32 -2140219753, i32 -2140219746, i32 -2140219694, i32 -2140219663, i32 -2140219633}
!7583 = !DILocation(line: 95, column: 7, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 95, column: 7)
!7585 = !DILocation(line: 95, column: 7, scope: !7569)
!7586 = !DILocation(line: 95, column: 7, scope: !7562)
!7587 = !DILocation(line: 96, column: 4, scope: !7569)
!7588 = !DILocation(line: 98, column: 3, scope: !7562)
!7589 = !DILocation(line: 98, column: 15, scope: !7562)
!7590 = !DILocation(line: 98, column: 30, scope: !7562)
!7591 = !DILocation(line: 99, column: 2, scope: !7562)
!7592 = !DILocation(line: 100, column: 1, scope: !7509)
!7593 = distinct !DISubprogram(name: "drm_atomic_helper_check", scope: !3, file: !3, line: 959, type: !4518, scopeLine: 961, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7594 = !DILocalVariable(name: "dev", arg: 1, scope: !7593, file: !3, line: 959, type: !6)
!7595 = !DILocation(line: 959, column: 48, scope: !7593)
!7596 = !DILocalVariable(name: "state", arg: 2, scope: !7593, file: !3, line: 960, type: !4520)
!7597 = !DILocation(line: 960, column: 33, scope: !7593)
!7598 = !DILocalVariable(name: "ret", scope: !7593, file: !3, line: 962, type: !18)
!7599 = !DILocation(line: 962, column: 6, scope: !7593)
!7600 = !DILocation(line: 964, column: 40, scope: !7593)
!7601 = !DILocation(line: 964, column: 45, scope: !7593)
!7602 = !DILocation(line: 964, column: 8, scope: !7593)
!7603 = !DILocation(line: 964, column: 6, scope: !7593)
!7604 = !DILocation(line: 965, column: 6, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 965, column: 6)
!7606 = !DILocation(line: 965, column: 6, scope: !7593)
!7607 = !DILocation(line: 966, column: 10, scope: !7605)
!7608 = !DILocation(line: 966, column: 3, scope: !7605)
!7609 = !DILocation(line: 968, column: 6, scope: !7610)
!7610 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 968, column: 6)
!7611 = !DILocation(line: 968, column: 11, scope: !7610)
!7612 = !DILocation(line: 968, column: 23, scope: !7610)
!7613 = !DILocation(line: 968, column: 6, scope: !7593)
!7614 = !DILocation(line: 969, column: 35, scope: !7615)
!7615 = distinct !DILexicalBlock(scope: !7610, file: !3, line: 968, column: 39)
!7616 = !DILocation(line: 969, column: 40, scope: !7615)
!7617 = !DILocation(line: 969, column: 9, scope: !7615)
!7618 = !DILocation(line: 969, column: 7, scope: !7615)
!7619 = !DILocation(line: 970, column: 7, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7615, file: !3, line: 970, column: 7)
!7621 = !DILocation(line: 970, column: 7, scope: !7615)
!7622 = !DILocation(line: 971, column: 11, scope: !7620)
!7623 = !DILocation(line: 971, column: 4, scope: !7620)
!7624 = !DILocation(line: 972, column: 2, scope: !7615)
!7625 = !DILocation(line: 974, column: 39, scope: !7593)
!7626 = !DILocation(line: 974, column: 44, scope: !7593)
!7627 = !DILocation(line: 974, column: 8, scope: !7593)
!7628 = !DILocation(line: 974, column: 6, scope: !7593)
!7629 = !DILocation(line: 975, column: 6, scope: !7630)
!7630 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 975, column: 6)
!7631 = !DILocation(line: 975, column: 6, scope: !7593)
!7632 = !DILocation(line: 976, column: 10, scope: !7630)
!7633 = !DILocation(line: 976, column: 3, scope: !7630)
!7634 = !DILocation(line: 978, column: 6, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 978, column: 6)
!7636 = !DILocation(line: 978, column: 13, scope: !7635)
!7637 = !DILocation(line: 978, column: 6, scope: !7593)
!7638 = !DILocation(line: 979, column: 56, scope: !7635)
!7639 = !DILocation(line: 979, column: 61, scope: !7635)
!7640 = !DILocation(line: 979, column: 26, scope: !7635)
!7641 = !DILocation(line: 979, column: 25, scope: !7635)
!7642 = !DILocation(line: 979, column: 3, scope: !7635)
!7643 = !DILocation(line: 979, column: 10, scope: !7635)
!7644 = !DILocation(line: 979, column: 23, scope: !7635)
!7645 = !DILocation(line: 981, column: 38, scope: !7593)
!7646 = !DILocation(line: 981, column: 2, scope: !7593)
!7647 = !DILocation(line: 983, column: 9, scope: !7593)
!7648 = !DILocation(line: 983, column: 2, scope: !7593)
!7649 = !DILocation(line: 984, column: 1, scope: !7593)
!7650 = distinct !DISubprogram(name: "drm_atomic_helper_async_check", scope: !3, file: !3, line: 1699, type: !4518, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7651 = !DILocalVariable(name: "dev", arg: 1, scope: !7650, file: !3, line: 1699, type: !6)
!7652 = !DILocation(line: 1699, column: 54, scope: !7650)
!7653 = !DILocalVariable(name: "state", arg: 2, scope: !7650, file: !3, line: 1700, type: !4520)
!7654 = !DILocation(line: 1700, column: 33, scope: !7650)
!7655 = !DILocalVariable(name: "crtc", scope: !7650, file: !3, line: 1702, type: !4551)
!7656 = !DILocation(line: 1702, column: 19, scope: !7650)
!7657 = !DILocalVariable(name: "crtc_state", scope: !7650, file: !3, line: 1703, type: !4807)
!7658 = !DILocation(line: 1703, column: 25, scope: !7650)
!7659 = !DILocalVariable(name: "plane", scope: !7650, file: !3, line: 1704, type: !4535)
!7660 = !DILocation(line: 1704, column: 20, scope: !7650)
!7661 = !DILocalVariable(name: "old_plane_state", scope: !7650, file: !3, line: 1705, type: !5517)
!7662 = !DILocation(line: 1705, column: 26, scope: !7650)
!7663 = !DILocalVariable(name: "new_plane_state", scope: !7650, file: !3, line: 1706, type: !5517)
!7664 = !DILocation(line: 1706, column: 26, scope: !7650)
!7665 = !DILocalVariable(name: "funcs", scope: !7650, file: !3, line: 1707, type: !5600)
!7666 = !DILocation(line: 1707, column: 39, scope: !7650)
!7667 = !DILocalVariable(name: "i", scope: !7650, file: !3, line: 1708, type: !18)
!7668 = !DILocation(line: 1708, column: 6, scope: !7650)
!7669 = !DILocalVariable(name: "n_planes", scope: !7650, file: !3, line: 1708, type: !18)
!7670 = !DILocation(line: 1708, column: 9, scope: !7650)
!7671 = !DILocation(line: 1710, column: 2, scope: !7672)
!7672 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1710, column: 2)
!7673 = !DILocation(line: 1710, column: 2, scope: !7674)
!7674 = distinct !DILexicalBlock(scope: !7672, file: !3, line: 1710, column: 2)
!7675 = !DILocation(line: 1710, column: 2, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7674, file: !3, line: 1710, column: 2)
!7677 = !DILocation(line: 1710, column: 2, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 1710, column: 2)
!7679 = !DILocation(line: 1711, column: 37, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7681, file: !3, line: 1711, column: 7)
!7681 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 1710, column: 57)
!7682 = !DILocation(line: 1711, column: 7, scope: !7680)
!7683 = !DILocation(line: 1711, column: 7, scope: !7681)
!7684 = !DILocation(line: 1712, column: 4, scope: !7680)
!7685 = distinct !{!7685, !7671, !7686}
!7686 = !DILocation(line: 1713, column: 2, scope: !7672)
!7687 = !DILocation(line: 1715, column: 2, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1715, column: 2)
!7689 = !DILocation(line: 1715, column: 2, scope: !7690)
!7690 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1715, column: 2)
!7691 = !DILocation(line: 1715, column: 2, scope: !7692)
!7692 = distinct !DILexicalBlock(scope: !7690, file: !3, line: 1715, column: 2)
!7693 = !DILocation(line: 1715, column: 2, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 1715, column: 2)
!7695 = !DILocation(line: 1716, column: 11, scope: !7692)
!7696 = distinct !{!7696, !7687, !7697}
!7697 = !DILocation(line: 1716, column: 11, scope: !7688)
!7698 = !DILocation(line: 1719, column: 6, scope: !7699)
!7699 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1719, column: 6)
!7700 = !DILocation(line: 1719, column: 15, scope: !7699)
!7701 = !DILocation(line: 1719, column: 6, scope: !7650)
!7702 = !DILocation(line: 1720, column: 3, scope: !7699)
!7703 = !DILocation(line: 1722, column: 7, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1722, column: 6)
!7705 = !DILocation(line: 1722, column: 24, scope: !7704)
!7706 = !DILocation(line: 1722, column: 29, scope: !7704)
!7707 = !DILocation(line: 1723, column: 6, scope: !7704)
!7708 = !DILocation(line: 1723, column: 23, scope: !7704)
!7709 = !DILocation(line: 1723, column: 31, scope: !7704)
!7710 = !DILocation(line: 1723, column: 48, scope: !7704)
!7711 = !DILocation(line: 1723, column: 28, scope: !7704)
!7712 = !DILocation(line: 1722, column: 6, scope: !7650)
!7713 = !DILocation(line: 1724, column: 3, scope: !7704)
!7714 = !DILocation(line: 1726, column: 10, scope: !7650)
!7715 = !DILocation(line: 1726, column: 17, scope: !7650)
!7716 = !DILocation(line: 1726, column: 8, scope: !7650)
!7717 = !DILocation(line: 1727, column: 7, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1727, column: 6)
!7719 = !DILocation(line: 1727, column: 14, scope: !7718)
!7720 = !DILocation(line: 1727, column: 6, scope: !7650)
!7721 = !DILocation(line: 1728, column: 3, scope: !7718)
!7722 = !DILocation(line: 1730, column: 6, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1730, column: 6)
!7724 = !DILocation(line: 1730, column: 23, scope: !7723)
!7725 = !DILocation(line: 1730, column: 6, scope: !7650)
!7726 = !DILocation(line: 1731, column: 3, scope: !7723)
!7727 = !DILocation(line: 1738, column: 6, scope: !7728)
!7728 = distinct !DILexicalBlock(scope: !7650, file: !3, line: 1738, column: 6)
!7729 = !DILocation(line: 1738, column: 23, scope: !7728)
!7730 = !DILocation(line: 1738, column: 30, scope: !7728)
!7731 = !DILocation(line: 1739, column: 32, scope: !7728)
!7732 = !DILocation(line: 1739, column: 49, scope: !7728)
!7733 = !DILocation(line: 1739, column: 57, scope: !7728)
!7734 = !DILocation(line: 1739, column: 7, scope: !7728)
!7735 = !DILocation(line: 1738, column: 6, scope: !7650)
!7736 = !DILocation(line: 1740, column: 3, scope: !7728)
!7737 = !DILocation(line: 1742, column: 9, scope: !7650)
!7738 = !DILocation(line: 1742, column: 16, scope: !7650)
!7739 = !DILocation(line: 1742, column: 35, scope: !7650)
!7740 = !DILocation(line: 1742, column: 42, scope: !7650)
!7741 = !DILocation(line: 1742, column: 2, scope: !7650)
!7742 = !DILocation(line: 1743, column: 1, scope: !7650)
!7743 = distinct !DISubprogram(name: "drm_atomic_helper_update_legacy_modeset_state", scope: !3, file: !3, line: 1130, type: !4, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7744 = !DILocalVariable(name: "dev", arg: 1, scope: !7743, file: !3, line: 1130, type: !6)
!7745 = !DILocation(line: 1130, column: 66, scope: !7743)
!7746 = !DILocalVariable(name: "old_state", arg: 2, scope: !7743, file: !3, line: 1131, type: !4520)
!7747 = !DILocation(line: 1131, column: 37, scope: !7743)
!7748 = !DILocalVariable(name: "connector", scope: !7743, file: !3, line: 1133, type: !4613)
!7749 = !DILocation(line: 1133, column: 24, scope: !7743)
!7750 = !DILocalVariable(name: "old_conn_state", scope: !7743, file: !3, line: 1134, type: !4744)
!7751 = !DILocation(line: 1134, column: 30, scope: !7743)
!7752 = !DILocalVariable(name: "new_conn_state", scope: !7743, file: !3, line: 1134, type: !4744)
!7753 = !DILocation(line: 1134, column: 47, scope: !7743)
!7754 = !DILocalVariable(name: "crtc", scope: !7743, file: !3, line: 1135, type: !4551)
!7755 = !DILocation(line: 1135, column: 19, scope: !7743)
!7756 = !DILocalVariable(name: "new_crtc_state", scope: !7743, file: !3, line: 1136, type: !4807)
!7757 = !DILocation(line: 1136, column: 25, scope: !7743)
!7758 = !DILocalVariable(name: "i", scope: !7743, file: !3, line: 1137, type: !18)
!7759 = !DILocation(line: 1137, column: 6, scope: !7743)
!7760 = !DILocation(line: 1140, column: 2, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 1140, column: 2)
!7762 = !DILocation(line: 1140, column: 2, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7761, file: !3, line: 1140, column: 2)
!7764 = !DILocation(line: 1140, column: 2, scope: !7765)
!7765 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 1140, column: 2)
!7766 = !DILocation(line: 1140, column: 2, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 1140, column: 2)
!7768 = !DILocation(line: 1141, column: 7, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 1141, column: 7)
!7770 = distinct !DILexicalBlock(scope: !7765, file: !3, line: 1140, column: 94)
!7771 = !DILocation(line: 1141, column: 18, scope: !7769)
!7772 = !DILocation(line: 1141, column: 7, scope: !7770)
!7773 = !DILocalVariable(name: "__ret_warn_on", scope: !7774, file: !3, line: 1142, type: !18)
!7774 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 1142, column: 4)
!7775 = distinct !DILexicalBlock(scope: !7769, file: !3, line: 1141, column: 27)
!7776 = !DILocation(line: 1142, column: 4, scope: !7774)
!7777 = !DILocation(line: 1142, column: 4, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7774, file: !3, line: 1142, column: 4)
!7779 = !DILocation(line: 1142, column: 4, scope: !7780)
!7780 = distinct !DILexicalBlock(scope: !7778, file: !3, line: 1142, column: 4)
!7781 = !DILocation(line: 1142, column: 4, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 1142, column: 4)
!7783 = !DILocation(line: 1142, column: 4, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 1142, column: 4)
!7785 = !{i32 -2140185482, i32 -2140185453, i32 -2140185407, i32 -2140185349, i32 -2140185295, i32 -2140185241, i32 -2140185186, i32 -2140185155}
!7786 = !DILocation(line: 1142, column: 4, scope: !7787)
!7787 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 1142, column: 4)
!7788 = !{i32 -2140184737, i32 -2140184730, i32 -2140184678, i32 -2140184647, i32 -2140184617}
!7789 = !DILocation(line: 1142, column: 4, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7780, file: !3, line: 1142, column: 4)
!7791 = !DILocation(line: 1144, column: 4, scope: !7775)
!7792 = !DILocation(line: 1144, column: 15, scope: !7775)
!7793 = !DILocation(line: 1144, column: 24, scope: !7775)
!7794 = !DILocation(line: 1144, column: 29, scope: !7775)
!7795 = !DILocation(line: 1145, column: 4, scope: !7775)
!7796 = !DILocation(line: 1145, column: 15, scope: !7775)
!7797 = !DILocation(line: 1145, column: 23, scope: !7775)
!7798 = !DILocation(line: 1146, column: 3, scope: !7775)
!7799 = !DILocation(line: 1148, column: 10, scope: !7770)
!7800 = !DILocation(line: 1148, column: 26, scope: !7770)
!7801 = !DILocation(line: 1148, column: 8, scope: !7770)
!7802 = !DILocation(line: 1149, column: 9, scope: !7803)
!7803 = distinct !DILexicalBlock(scope: !7770, file: !3, line: 1149, column: 7)
!7804 = !DILocation(line: 1149, column: 14, scope: !7803)
!7805 = !DILocation(line: 1149, column: 17, scope: !7803)
!7806 = !DILocation(line: 1149, column: 33, scope: !7803)
!7807 = !DILocation(line: 1149, column: 39, scope: !7803)
!7808 = !DILocation(line: 1150, column: 8, scope: !7803)
!7809 = !DILocation(line: 1150, column: 13, scope: !7803)
!7810 = !DILocation(line: 1150, column: 46, scope: !7803)
!7811 = !DILocation(line: 1150, column: 52, scope: !7803)
!7812 = !DILocation(line: 1150, column: 16, scope: !7803)
!7813 = !DILocation(line: 1149, column: 7, scope: !7770)
!7814 = !DILocalVariable(name: "mode", scope: !7815, file: !3, line: 1151, type: !18)
!7815 = distinct !DILexicalBlock(scope: !7803, file: !3, line: 1150, column: 61)
!7816 = !DILocation(line: 1151, column: 8, scope: !7815)
!7817 = !DILocation(line: 1153, column: 8, scope: !7818)
!7818 = distinct !DILexicalBlock(scope: !7815, file: !3, line: 1153, column: 8)
!7819 = !DILocation(line: 1153, column: 13, scope: !7818)
!7820 = !DILocation(line: 1153, column: 16, scope: !7818)
!7821 = !DILocation(line: 1153, column: 22, scope: !7818)
!7822 = !DILocation(line: 1153, column: 29, scope: !7818)
!7823 = !DILocation(line: 1153, column: 8, scope: !7815)
!7824 = !DILocation(line: 1154, column: 10, scope: !7818)
!7825 = !DILocation(line: 1154, column: 5, scope: !7818)
!7826 = !DILocation(line: 1156, column: 22, scope: !7815)
!7827 = !DILocation(line: 1156, column: 4, scope: !7815)
!7828 = !DILocation(line: 1156, column: 15, scope: !7815)
!7829 = !DILocation(line: 1156, column: 20, scope: !7815)
!7830 = !DILocation(line: 1157, column: 3, scope: !7815)
!7831 = distinct !{!7831, !7760, !7832}
!7832 = !DILocation(line: 1158, column: 2, scope: !7761)
!7833 = !DILocation(line: 1161, column: 2, scope: !7834)
!7834 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 1161, column: 2)
!7835 = !DILocation(line: 1161, column: 2, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7834, file: !3, line: 1161, column: 2)
!7837 = !DILocation(line: 1161, column: 2, scope: !7838)
!7838 = distinct !DILexicalBlock(scope: !7836, file: !3, line: 1161, column: 2)
!7839 = !DILocation(line: 1161, column: 2, scope: !7840)
!7840 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 1161, column: 2)
!7841 = !DILocation(line: 1162, column: 8, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1162, column: 7)
!7843 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 1161, column: 75)
!7844 = !DILocation(line: 1162, column: 24, scope: !7842)
!7845 = !DILocation(line: 1162, column: 7, scope: !7843)
!7846 = !DILocation(line: 1163, column: 4, scope: !7842)
!7847 = !DILocalVariable(name: "__ret_warn_on", scope: !7848, file: !3, line: 1165, type: !18)
!7848 = distinct !DILexicalBlock(scope: !7849, file: !3, line: 1165, column: 7)
!7849 = distinct !DILexicalBlock(scope: !7843, file: !3, line: 1165, column: 7)
!7850 = !DILocation(line: 1165, column: 7, scope: !7848)
!7851 = !DILocation(line: 1165, column: 7, scope: !7852)
!7852 = distinct !DILexicalBlock(scope: !7848, file: !3, line: 1165, column: 7)
!7853 = !DILocation(line: 1165, column: 7, scope: !7854)
!7854 = distinct !DILexicalBlock(scope: !7852, file: !3, line: 1165, column: 7)
!7855 = !DILocation(line: 1165, column: 7, scope: !7856)
!7856 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 1165, column: 7)
!7857 = !DILocation(line: 1165, column: 7, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 1165, column: 7)
!7859 = !{i32 -2140183161, i32 -2140183132, i32 -2140183086, i32 -2140183028, i32 -2140182974, i32 -2140182920, i32 -2140182865, i32 -2140182834}
!7860 = !DILocation(line: 1165, column: 7, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 1165, column: 7)
!7862 = !{i32 -2140182416, i32 -2140182409, i32 -2140182357, i32 -2140182326, i32 -2140182296}
!7863 = !DILocation(line: 1165, column: 7, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 1165, column: 7)
!7865 = !DILocation(line: 1165, column: 7, scope: !7849)
!7866 = !DILocation(line: 1165, column: 7, scope: !7843)
!7867 = !DILocation(line: 1166, column: 4, scope: !7849)
!7868 = !DILocation(line: 1168, column: 24, scope: !7843)
!7869 = !DILocation(line: 1168, column: 40, scope: !7843)
!7870 = !DILocation(line: 1168, column: 3, scope: !7843)
!7871 = !DILocation(line: 1168, column: 14, scope: !7843)
!7872 = !DILocation(line: 1168, column: 22, scope: !7843)
!7873 = !DILocation(line: 1169, column: 30, scope: !7843)
!7874 = !DILocation(line: 1169, column: 46, scope: !7843)
!7875 = !DILocation(line: 1169, column: 3, scope: !7843)
!7876 = !DILocation(line: 1169, column: 14, scope: !7843)
!7877 = !DILocation(line: 1169, column: 23, scope: !7843)
!7878 = !DILocation(line: 1169, column: 28, scope: !7843)
!7879 = distinct !{!7879, !7833, !7880}
!7880 = !DILocation(line: 1170, column: 2, scope: !7834)
!7881 = !DILocation(line: 1173, column: 2, scope: !7882)
!7882 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 1173, column: 2)
!7883 = !DILocation(line: 1173, column: 2, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 1173, column: 2)
!7885 = !DILocation(line: 1173, column: 2, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7884, file: !3, line: 1173, column: 2)
!7887 = !DILocation(line: 1173, column: 2, scope: !7888)
!7888 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 1173, column: 2)
!7889 = !DILocalVariable(name: "primary", scope: !7890, file: !3, line: 1174, type: !4535)
!7890 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 1173, column: 65)
!7891 = !DILocation(line: 1174, column: 21, scope: !7890)
!7892 = !DILocation(line: 1174, column: 31, scope: !7890)
!7893 = !DILocation(line: 1174, column: 37, scope: !7890)
!7894 = !DILocalVariable(name: "new_plane_state", scope: !7890, file: !3, line: 1175, type: !5517)
!7895 = !DILocation(line: 1175, column: 27, scope: !7890)
!7896 = !DILocation(line: 1177, column: 3, scope: !7890)
!7897 = !DILocation(line: 1177, column: 9, scope: !7890)
!7898 = !DILocation(line: 1177, column: 16, scope: !7890)
!7899 = !DILocation(line: 1177, column: 32, scope: !7890)
!7900 = !DILocation(line: 1178, column: 19, scope: !7890)
!7901 = !DILocation(line: 1178, column: 35, scope: !7890)
!7902 = !DILocation(line: 1178, column: 3, scope: !7890)
!7903 = !DILocation(line: 1178, column: 9, scope: !7890)
!7904 = !DILocation(line: 1178, column: 17, scope: !7890)
!7905 = !DILocation(line: 1181, column: 35, scope: !7890)
!7906 = !DILocation(line: 1181, column: 46, scope: !7890)
!7907 = !DILocation(line: 1181, column: 4, scope: !7890)
!7908 = !DILocation(line: 1180, column: 19, scope: !7890)
!7909 = !DILocation(line: 1183, column: 7, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7890, file: !3, line: 1183, column: 7)
!7911 = !DILocation(line: 1183, column: 23, scope: !7910)
!7912 = !DILocation(line: 1183, column: 26, scope: !7910)
!7913 = !DILocation(line: 1183, column: 43, scope: !7910)
!7914 = !DILocation(line: 1183, column: 51, scope: !7910)
!7915 = !DILocation(line: 1183, column: 48, scope: !7910)
!7916 = !DILocation(line: 1183, column: 7, scope: !7890)
!7917 = !DILocation(line: 1184, column: 14, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 1183, column: 57)
!7919 = !DILocation(line: 1184, column: 31, scope: !7918)
!7920 = !DILocation(line: 1184, column: 37, scope: !7918)
!7921 = !DILocation(line: 1184, column: 4, scope: !7918)
!7922 = !DILocation(line: 1184, column: 10, scope: !7918)
!7923 = !DILocation(line: 1184, column: 12, scope: !7918)
!7924 = !DILocation(line: 1185, column: 14, scope: !7918)
!7925 = !DILocation(line: 1185, column: 31, scope: !7918)
!7926 = !DILocation(line: 1185, column: 37, scope: !7918)
!7927 = !DILocation(line: 1185, column: 4, scope: !7918)
!7928 = !DILocation(line: 1185, column: 10, scope: !7918)
!7929 = !DILocation(line: 1185, column: 12, scope: !7918)
!7930 = !DILocation(line: 1186, column: 3, scope: !7918)
!7931 = distinct !{!7931, !7881, !7932}
!7932 = !DILocation(line: 1187, column: 2, scope: !7882)
!7933 = !DILocation(line: 1188, column: 1, scope: !7743)
!7934 = distinct !DISubprogram(name: "drm_atomic_get_new_plane_state", scope: !4522, file: !4522, line: 567, type: !7935, scopeLine: 569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7935 = !DISubroutineType(types: !7936)
!7936 = !{!5517, !4520, !4535}
!7937 = !DILocalVariable(name: "state", arg: 1, scope: !7934, file: !4522, line: 567, type: !4520)
!7938 = !DILocation(line: 567, column: 57, scope: !7934)
!7939 = !DILocalVariable(name: "plane", arg: 2, scope: !7934, file: !4522, line: 568, type: !4535)
!7940 = !DILocation(line: 568, column: 29, scope: !7934)
!7941 = !DILocation(line: 570, column: 9, scope: !7934)
!7942 = !DILocation(line: 570, column: 16, scope: !7934)
!7943 = !DILocation(line: 570, column: 39, scope: !7934)
!7944 = !DILocation(line: 570, column: 23, scope: !7934)
!7945 = !DILocation(line: 570, column: 47, scope: !7934)
!7946 = !DILocation(line: 570, column: 2, scope: !7934)
!7947 = distinct !DISubprogram(name: "drm_atomic_helper_calc_timestamping_constants", scope: !3, file: !3, line: 1198, type: !5691, scopeLine: 1199, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7948 = !DILocalVariable(name: "state", arg: 1, scope: !7947, file: !3, line: 1198, type: !4520)
!7949 = !DILocation(line: 1198, column: 77, scope: !7947)
!7950 = !DILocalVariable(name: "new_crtc_state", scope: !7947, file: !3, line: 1200, type: !4807)
!7951 = !DILocation(line: 1200, column: 25, scope: !7947)
!7952 = !DILocalVariable(name: "crtc", scope: !7947, file: !3, line: 1201, type: !4551)
!7953 = !DILocation(line: 1201, column: 19, scope: !7947)
!7954 = !DILocalVariable(name: "i", scope: !7947, file: !3, line: 1202, type: !18)
!7955 = !DILocation(line: 1202, column: 6, scope: !7947)
!7956 = !DILocation(line: 1204, column: 2, scope: !7957)
!7957 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 1204, column: 2)
!7958 = !DILocation(line: 1204, column: 2, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7957, file: !3, line: 1204, column: 2)
!7960 = !DILocation(line: 1204, column: 2, scope: !7961)
!7961 = distinct !DILexicalBlock(scope: !7959, file: !3, line: 1204, column: 2)
!7962 = !DILocation(line: 1204, column: 2, scope: !7963)
!7963 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 1204, column: 2)
!7964 = !DILocation(line: 1205, column: 7, scope: !7965)
!7965 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 1205, column: 7)
!7966 = distinct !DILexicalBlock(scope: !7961, file: !3, line: 1204, column: 61)
!7967 = !DILocation(line: 1205, column: 23, scope: !7965)
!7968 = !DILocation(line: 1205, column: 7, scope: !7966)
!7969 = !DILocation(line: 1206, column: 36, scope: !7965)
!7970 = !DILocation(line: 1207, column: 9, scope: !7965)
!7971 = !DILocation(line: 1207, column: 25, scope: !7965)
!7972 = !DILocation(line: 1206, column: 4, scope: !7965)
!7973 = distinct !{!7973, !7956, !7974}
!7974 = !DILocation(line: 1208, column: 2, scope: !7957)
!7975 = !DILocation(line: 1209, column: 1, scope: !7947)
!7976 = distinct !DISubprogram(name: "drm_atomic_helper_commit_modeset_disables", scope: !3, file: !3, line: 1288, type: !4, scopeLine: 1290, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!7977 = !DILocalVariable(name: "dev", arg: 1, scope: !7976, file: !3, line: 1288, type: !6)
!7978 = !DILocation(line: 1288, column: 67, scope: !7976)
!7979 = !DILocalVariable(name: "old_state", arg: 2, scope: !7976, file: !3, line: 1289, type: !4520)
!7980 = !DILocation(line: 1289, column: 38, scope: !7976)
!7981 = !DILocation(line: 1291, column: 18, scope: !7976)
!7982 = !DILocation(line: 1291, column: 23, scope: !7976)
!7983 = !DILocation(line: 1291, column: 2, scope: !7976)
!7984 = !DILocation(line: 1293, column: 48, scope: !7976)
!7985 = !DILocation(line: 1293, column: 53, scope: !7976)
!7986 = !DILocation(line: 1293, column: 2, scope: !7976)
!7987 = !DILocation(line: 1294, column: 48, scope: !7976)
!7988 = !DILocation(line: 1294, column: 2, scope: !7976)
!7989 = !DILocation(line: 1296, column: 16, scope: !7976)
!7990 = !DILocation(line: 1296, column: 21, scope: !7976)
!7991 = !DILocation(line: 1296, column: 2, scope: !7976)
!7992 = !DILocation(line: 1297, column: 1, scope: !7976)
!7993 = !DILocalVariable(name: "dev", arg: 1, scope: !2, file: !3, line: 1009, type: !6)
!7994 = !DILocation(line: 1009, column: 36, scope: !2)
!7995 = !DILocalVariable(name: "old_state", arg: 2, scope: !2, file: !3, line: 1009, type: !4520)
!7996 = !DILocation(line: 1009, column: 66, scope: !2)
!7997 = !DILocalVariable(name: "connector", scope: !2, file: !3, line: 1011, type: !4613)
!7998 = !DILocation(line: 1011, column: 24, scope: !2)
!7999 = !DILocalVariable(name: "old_conn_state", scope: !2, file: !3, line: 1012, type: !4744)
!8000 = !DILocation(line: 1012, column: 30, scope: !2)
!8001 = !DILocalVariable(name: "new_conn_state", scope: !2, file: !3, line: 1012, type: !4744)
!8002 = !DILocation(line: 1012, column: 47, scope: !2)
!8003 = !DILocalVariable(name: "crtc", scope: !2, file: !3, line: 1013, type: !4551)
!8004 = !DILocation(line: 1013, column: 19, scope: !2)
!8005 = !DILocalVariable(name: "old_crtc_state", scope: !2, file: !3, line: 1014, type: !4807)
!8006 = !DILocation(line: 1014, column: 25, scope: !2)
!8007 = !DILocalVariable(name: "new_crtc_state", scope: !2, file: !3, line: 1014, type: !4807)
!8008 = !DILocation(line: 1014, column: 42, scope: !2)
!8009 = !DILocalVariable(name: "i", scope: !2, file: !3, line: 1015, type: !18)
!8010 = !DILocation(line: 1015, column: 6, scope: !2)
!8011 = !DILocation(line: 1017, column: 2, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1017, column: 2)
!8013 = !DILocation(line: 1017, column: 2, scope: !8014)
!8014 = distinct !DILexicalBlock(scope: !8012, file: !3, line: 1017, column: 2)
!8015 = !DILocation(line: 1017, column: 2, scope: !8016)
!8016 = distinct !DILexicalBlock(scope: !8014, file: !3, line: 1017, column: 2)
!8017 = !DILocation(line: 1017, column: 2, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 1017, column: 2)
!8019 = !DILocalVariable(name: "funcs", scope: !8020, file: !3, line: 1018, type: !4780)
!8020 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 1017, column: 94)
!8021 = !DILocation(line: 1018, column: 42, scope: !8020)
!8022 = !DILocalVariable(name: "encoder", scope: !8020, file: !3, line: 1019, type: !4750)
!8023 = !DILocation(line: 1019, column: 23, scope: !8020)
!8024 = !DILocalVariable(name: "bridge", scope: !8020, file: !3, line: 1020, type: !5897)
!8025 = !DILocation(line: 1020, column: 22, scope: !8020)
!8026 = !DILocation(line: 1024, column: 8, scope: !8027)
!8027 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 1024, column: 7)
!8028 = !DILocation(line: 1024, column: 24, scope: !8027)
!8029 = !DILocation(line: 1024, column: 7, scope: !8020)
!8030 = !DILocation(line: 1025, column: 4, scope: !8027)
!8031 = !DILocation(line: 1027, column: 50, scope: !8020)
!8032 = !DILocation(line: 1027, column: 61, scope: !8020)
!8033 = !DILocation(line: 1027, column: 77, scope: !8020)
!8034 = !DILocation(line: 1027, column: 20, scope: !8020)
!8035 = !DILocation(line: 1027, column: 18, scope: !8020)
!8036 = !DILocation(line: 1029, column: 7, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 1029, column: 7)
!8038 = !DILocation(line: 1029, column: 23, scope: !8037)
!8039 = !DILocation(line: 1029, column: 7, scope: !8020)
!8040 = !DILocation(line: 1031, column: 7, scope: !8037)
!8041 = !DILocation(line: 1032, column: 7, scope: !8037)
!8042 = !DILocation(line: 1032, column: 23, scope: !8037)
!8043 = !DILocation(line: 1030, column: 21, scope: !8037)
!8044 = !DILocation(line: 1030, column: 19, scope: !8037)
!8045 = !DILocation(line: 1030, column: 4, scope: !8037)
!8046 = !DILocation(line: 1034, column: 19, scope: !8037)
!8047 = !DILocation(line: 1036, column: 27, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 1036, column: 7)
!8049 = !DILocation(line: 1036, column: 43, scope: !8048)
!8050 = !DILocation(line: 1036, column: 8, scope: !8048)
!8051 = !DILocation(line: 1036, column: 59, scope: !8048)
!8052 = !DILocation(line: 1037, column: 38, scope: !8048)
!8053 = !DILocation(line: 1037, column: 54, scope: !8048)
!8054 = !DILocation(line: 1037, column: 60, scope: !8048)
!8055 = !DILocation(line: 1037, column: 8, scope: !8048)
!8056 = !DILocation(line: 1036, column: 7, scope: !8020)
!8057 = !DILocation(line: 1038, column: 4, scope: !8048)
!8058 = !DILocation(line: 1040, column: 13, scope: !8020)
!8059 = !DILocation(line: 1040, column: 29, scope: !8020)
!8060 = !DILocation(line: 1040, column: 11, scope: !8020)
!8061 = !DILocalVariable(name: "__ret_warn_on", scope: !8062, file: !3, line: 1045, type: !18)
!8062 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 1045, column: 7)
!8063 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 1045, column: 7)
!8064 = !DILocation(line: 1045, column: 7, scope: !8062)
!8065 = !DILocation(line: 1045, column: 7, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !8062, file: !3, line: 1045, column: 7)
!8067 = !DILocation(line: 1045, column: 7, scope: !8068)
!8068 = distinct !DILexicalBlock(scope: !8066, file: !3, line: 1045, column: 7)
!8069 = !DILocation(line: 1045, column: 7, scope: !8070)
!8070 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1045, column: 7)
!8071 = !DILocation(line: 1045, column: 7, scope: !8072)
!8072 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1045, column: 7)
!8073 = !{i32 -2140191152, i32 -2140191123, i32 -2140191077, i32 -2140191019, i32 -2140190965, i32 -2140190911, i32 -2140190856, i32 -2140190825}
!8074 = !DILocation(line: 1045, column: 7, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1045, column: 7)
!8076 = !{i32 -2140190407, i32 -2140190400, i32 -2140190348, i32 -2140190317, i32 -2140190287}
!8077 = !DILocation(line: 1045, column: 7, scope: !8078)
!8078 = distinct !DILexicalBlock(scope: !8068, file: !3, line: 1045, column: 7)
!8079 = !DILocation(line: 1045, column: 7, scope: !8063)
!8080 = !DILocation(line: 1045, column: 7, scope: !8020)
!8081 = !DILocation(line: 1046, column: 4, scope: !8063)
!8082 = !DILocation(line: 1048, column: 11, scope: !8020)
!8083 = !DILocation(line: 1048, column: 20, scope: !8020)
!8084 = !DILocation(line: 1048, column: 9, scope: !8020)
!8085 = !DILocation(line: 1050, column: 3, scope: !8020)
!8086 = !DILocation(line: 1057, column: 46, scope: !8020)
!8087 = !DILocation(line: 1057, column: 12, scope: !8020)
!8088 = !DILocation(line: 1057, column: 10, scope: !8020)
!8089 = !DILocation(line: 1058, column: 35, scope: !8020)
!8090 = !DILocation(line: 1058, column: 43, scope: !8020)
!8091 = !DILocation(line: 1058, column: 3, scope: !8020)
!8092 = !DILocation(line: 1061, column: 7, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 1061, column: 7)
!8094 = !DILocation(line: 1061, column: 7, scope: !8020)
!8095 = !DILocation(line: 1062, column: 8, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8097, file: !3, line: 1062, column: 8)
!8097 = distinct !DILexicalBlock(scope: !8093, file: !3, line: 1061, column: 14)
!8098 = !DILocation(line: 1062, column: 15, scope: !8096)
!8099 = !DILocation(line: 1062, column: 8, scope: !8097)
!8100 = !DILocation(line: 1063, column: 5, scope: !8096)
!8101 = !DILocation(line: 1063, column: 12, scope: !8096)
!8102 = !DILocation(line: 1063, column: 27, scope: !8096)
!8103 = !DILocation(line: 1063, column: 36, scope: !8096)
!8104 = !DILocation(line: 1064, column: 13, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !8096, file: !3, line: 1064, column: 13)
!8106 = !DILocation(line: 1064, column: 29, scope: !8105)
!8107 = !DILocation(line: 1064, column: 34, scope: !8105)
!8108 = !DILocation(line: 1064, column: 37, scope: !8105)
!8109 = !DILocation(line: 1064, column: 44, scope: !8105)
!8110 = !DILocation(line: 1064, column: 13, scope: !8096)
!8111 = !DILocation(line: 1065, column: 5, scope: !8105)
!8112 = !DILocation(line: 1065, column: 12, scope: !8105)
!8113 = !DILocation(line: 1065, column: 20, scope: !8105)
!8114 = !DILocation(line: 1066, column: 13, scope: !8115)
!8115 = distinct !DILexicalBlock(scope: !8105, file: !3, line: 1066, column: 13)
!8116 = !DILocation(line: 1066, column: 20, scope: !8115)
!8117 = !DILocation(line: 1066, column: 13, scope: !8105)
!8118 = !DILocation(line: 1067, column: 5, scope: !8115)
!8119 = !DILocation(line: 1067, column: 12, scope: !8115)
!8120 = !DILocation(line: 1067, column: 20, scope: !8115)
!8121 = !DILocation(line: 1068, column: 13, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8115, file: !3, line: 1068, column: 13)
!8123 = !DILocation(line: 1068, column: 20, scope: !8122)
!8124 = !DILocation(line: 1068, column: 13, scope: !8115)
!8125 = !DILocation(line: 1069, column: 5, scope: !8122)
!8126 = !DILocation(line: 1069, column: 12, scope: !8122)
!8127 = !DILocation(line: 1069, column: 17, scope: !8122)
!8128 = !DILocation(line: 1070, column: 3, scope: !8097)
!8129 = !DILocation(line: 1072, column: 40, scope: !8020)
!8130 = !DILocation(line: 1072, column: 48, scope: !8020)
!8131 = !DILocation(line: 1072, column: 3, scope: !8020)
!8132 = distinct !{!8132, !8011, !8133}
!8133 = !DILocation(line: 1073, column: 2, scope: !8012)
!8134 = !DILocation(line: 1075, column: 2, scope: !8135)
!8135 = distinct !DILexicalBlock(scope: !2, file: !3, line: 1075, column: 2)
!8136 = !DILocation(line: 1075, column: 2, scope: !8137)
!8137 = distinct !DILexicalBlock(scope: !8135, file: !3, line: 1075, column: 2)
!8138 = !DILocation(line: 1075, column: 2, scope: !8139)
!8139 = distinct !DILexicalBlock(scope: !8137, file: !3, line: 1075, column: 2)
!8140 = !DILocation(line: 1075, column: 2, scope: !8141)
!8141 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1075, column: 2)
!8142 = !DILocalVariable(name: "funcs", scope: !8143, file: !3, line: 1076, type: !5411)
!8143 = distinct !DILexicalBlock(scope: !8139, file: !3, line: 1075, column: 84)
!8144 = !DILocation(line: 1076, column: 39, scope: !8143)
!8145 = !DILocalVariable(name: "ret", scope: !8143, file: !3, line: 1077, type: !18)
!8146 = !DILocation(line: 1077, column: 7, scope: !8143)
!8147 = !DILocation(line: 1080, column: 38, scope: !8148)
!8148 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1080, column: 7)
!8149 = !DILocation(line: 1080, column: 8, scope: !8148)
!8150 = !DILocation(line: 1080, column: 7, scope: !8143)
!8151 = !DILocation(line: 1081, column: 4, scope: !8148)
!8152 = !DILocation(line: 1083, column: 27, scope: !8153)
!8153 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1083, column: 7)
!8154 = !DILocation(line: 1083, column: 43, scope: !8153)
!8155 = !DILocation(line: 1083, column: 8, scope: !8153)
!8156 = !DILocation(line: 1083, column: 7, scope: !8143)
!8157 = !DILocation(line: 1084, column: 4, scope: !8153)
!8158 = !DILocation(line: 1086, column: 11, scope: !8143)
!8159 = !DILocation(line: 1086, column: 17, scope: !8143)
!8160 = !DILocation(line: 1086, column: 9, scope: !8143)
!8161 = !DILocation(line: 1088, column: 3, scope: !8143)
!8162 = !DILocation(line: 1093, column: 7, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1093, column: 7)
!8164 = !DILocation(line: 1093, column: 23, scope: !8163)
!8165 = !DILocation(line: 1093, column: 30, scope: !8163)
!8166 = !DILocation(line: 1093, column: 33, scope: !8163)
!8167 = !DILocation(line: 1093, column: 40, scope: !8163)
!8168 = !DILocation(line: 1093, column: 7, scope: !8143)
!8169 = !DILocation(line: 1094, column: 4, scope: !8163)
!8170 = !DILocation(line: 1094, column: 11, scope: !8163)
!8171 = !DILocation(line: 1094, column: 19, scope: !8163)
!8172 = !DILocation(line: 1095, column: 12, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8163, file: !3, line: 1095, column: 12)
!8174 = !DILocation(line: 1095, column: 19, scope: !8173)
!8175 = !DILocation(line: 1095, column: 12, scope: !8163)
!8176 = !DILocation(line: 1096, column: 4, scope: !8173)
!8177 = !DILocation(line: 1096, column: 11, scope: !8173)
!8178 = !DILocation(line: 1096, column: 26, scope: !8173)
!8179 = !DILocation(line: 1096, column: 32, scope: !8173)
!8180 = !DILocation(line: 1097, column: 12, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 1097, column: 12)
!8182 = !DILocation(line: 1097, column: 19, scope: !8181)
!8183 = !DILocation(line: 1097, column: 12, scope: !8173)
!8184 = !DILocation(line: 1098, column: 4, scope: !8181)
!8185 = !DILocation(line: 1098, column: 11, scope: !8181)
!8186 = !DILocation(line: 1098, column: 19, scope: !8181)
!8187 = !DILocation(line: 1099, column: 12, scope: !8188)
!8188 = distinct !DILexicalBlock(scope: !8181, file: !3, line: 1099, column: 12)
!8189 = !DILocation(line: 1099, column: 19, scope: !8188)
!8190 = !DILocation(line: 1099, column: 12, scope: !8181)
!8191 = !DILocation(line: 1100, column: 4, scope: !8188)
!8192 = !DILocation(line: 1100, column: 11, scope: !8188)
!8193 = !DILocation(line: 1100, column: 16, scope: !8188)
!8194 = !DILocation(line: 1102, column: 27, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1102, column: 7)
!8196 = !DILocation(line: 1102, column: 8, scope: !8195)
!8197 = !DILocation(line: 1102, column: 7, scope: !8143)
!8198 = !DILocation(line: 1103, column: 4, scope: !8195)
!8199 = !DILocation(line: 1105, column: 29, scope: !8143)
!8200 = !DILocation(line: 1105, column: 9, scope: !8143)
!8201 = !DILocation(line: 1105, column: 7, scope: !8143)
!8202 = !DILocalVariable(name: "__ret_warn_once", scope: !8203, file: !3, line: 1106, type: !18)
!8203 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1106, column: 3)
!8204 = !DILocation(line: 1106, column: 3, scope: !8203)
!8205 = !DILocation(line: 1106, column: 3, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8203, file: !3, line: 1106, column: 3)
!8207 = !DILocation(line: 0, scope: !8206)
!8208 = !DILocation(line: 1106, column: 3, scope: !8209)
!8209 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 1106, column: 3)
!8210 = !DILocalVariable(name: "__ret_warn_on", scope: !8211, file: !3, line: 1106, type: !18)
!8211 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 1106, column: 3)
!8212 = !DILocation(line: 1106, column: 3, scope: !8211)
!8213 = !DILocation(line: 1106, column: 3, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 1106, column: 3)
!8215 = !DILocation(line: 1106, column: 3, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8214, file: !3, line: 1106, column: 3)
!8217 = !DILocation(line: 1106, column: 3, scope: !8218)
!8218 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1106, column: 3)
!8219 = !DILocation(line: 1106, column: 3, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1106, column: 3)
!8221 = !DILocation(line: 1106, column: 3, scope: !8222)
!8222 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1106, column: 3)
!8223 = !DILocation(line: 1106, column: 3, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1106, column: 3)
!8225 = !{i32 -2140187870, i32 -2140187841, i32 -2140187795, i32 -2140187737, i32 -2140187683, i32 -2140187629, i32 -2140187574, i32 -2140187543}
!8226 = !DILocation(line: 1106, column: 3, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1106, column: 3)
!8228 = !{i32 -2140187114, i32 -2140187107, i32 -2140187055, i32 -2140187024, i32 -2140186994}
!8229 = !DILocation(line: 1106, column: 3, scope: !8230)
!8230 = distinct !DILexicalBlock(scope: !8220, file: !3, line: 1106, column: 3)
!8231 = !DILocation(line: 1106, column: 3, scope: !8232)
!8232 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1106, column: 3)
!8233 = !DILocation(line: 1107, column: 7, scope: !8234)
!8234 = distinct !DILexicalBlock(scope: !8143, file: !3, line: 1107, column: 7)
!8235 = !DILocation(line: 1107, column: 11, scope: !8234)
!8236 = !DILocation(line: 1107, column: 7, scope: !8143)
!8237 = !DILocation(line: 1108, column: 24, scope: !8234)
!8238 = !DILocation(line: 1108, column: 4, scope: !8234)
!8239 = distinct !{!8239, !8134, !8240}
!8240 = !DILocation(line: 1109, column: 2, scope: !8135)
!8241 = !DILocation(line: 1110, column: 1, scope: !2)
!8242 = distinct !DISubprogram(name: "crtc_set_mode", scope: !3, file: !3, line: 1213, type: !4, scopeLine: 1214, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8243 = !DILocalVariable(name: "dev", arg: 1, scope: !8242, file: !3, line: 1213, type: !6)
!8244 = !DILocation(line: 1213, column: 34, scope: !8242)
!8245 = !DILocalVariable(name: "old_state", arg: 2, scope: !8242, file: !3, line: 1213, type: !4520)
!8246 = !DILocation(line: 1213, column: 64, scope: !8242)
!8247 = !DILocalVariable(name: "crtc", scope: !8242, file: !3, line: 1215, type: !4551)
!8248 = !DILocation(line: 1215, column: 19, scope: !8242)
!8249 = !DILocalVariable(name: "new_crtc_state", scope: !8242, file: !3, line: 1216, type: !4807)
!8250 = !DILocation(line: 1216, column: 25, scope: !8242)
!8251 = !DILocalVariable(name: "connector", scope: !8242, file: !3, line: 1217, type: !4613)
!8252 = !DILocation(line: 1217, column: 24, scope: !8242)
!8253 = !DILocalVariable(name: "new_conn_state", scope: !8242, file: !3, line: 1218, type: !4744)
!8254 = !DILocation(line: 1218, column: 30, scope: !8242)
!8255 = !DILocalVariable(name: "i", scope: !8242, file: !3, line: 1219, type: !18)
!8256 = !DILocation(line: 1219, column: 6, scope: !8242)
!8257 = !DILocation(line: 1221, column: 2, scope: !8258)
!8258 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1221, column: 2)
!8259 = !DILocation(line: 1221, column: 2, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8258, file: !3, line: 1221, column: 2)
!8261 = !DILocation(line: 1221, column: 2, scope: !8262)
!8262 = distinct !DILexicalBlock(scope: !8260, file: !3, line: 1221, column: 2)
!8263 = !DILocation(line: 1221, column: 2, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 1221, column: 2)
!8265 = !DILocalVariable(name: "funcs", scope: !8266, file: !3, line: 1222, type: !5411)
!8266 = distinct !DILexicalBlock(scope: !8262, file: !3, line: 1221, column: 65)
!8267 = !DILocation(line: 1222, column: 39, scope: !8266)
!8268 = !DILocation(line: 1224, column: 8, scope: !8269)
!8269 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 1224, column: 7)
!8270 = !DILocation(line: 1224, column: 24, scope: !8269)
!8271 = !DILocation(line: 1224, column: 7, scope: !8266)
!8272 = !DILocation(line: 1225, column: 4, scope: !8269)
!8273 = !DILocation(line: 1227, column: 11, scope: !8266)
!8274 = !DILocation(line: 1227, column: 17, scope: !8266)
!8275 = !DILocation(line: 1227, column: 9, scope: !8266)
!8276 = !DILocation(line: 1229, column: 7, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8266, file: !3, line: 1229, column: 7)
!8278 = !DILocation(line: 1229, column: 23, scope: !8277)
!8279 = !DILocation(line: 1229, column: 30, scope: !8277)
!8280 = !DILocation(line: 1229, column: 33, scope: !8277)
!8281 = !DILocation(line: 1229, column: 40, scope: !8277)
!8282 = !DILocation(line: 1229, column: 7, scope: !8266)
!8283 = !DILocation(line: 1230, column: 4, scope: !8284)
!8284 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 1229, column: 55)
!8285 = !DILocation(line: 1233, column: 4, scope: !8284)
!8286 = !DILocation(line: 1233, column: 11, scope: !8284)
!8287 = !DILocation(line: 1233, column: 25, scope: !8284)
!8288 = !DILocation(line: 1234, column: 3, scope: !8284)
!8289 = distinct !{!8289, !8257, !8290}
!8290 = !DILocation(line: 1235, column: 2, scope: !8258)
!8291 = !DILocation(line: 1237, column: 2, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1237, column: 2)
!8293 = !DILocation(line: 1237, column: 2, scope: !8294)
!8294 = distinct !DILexicalBlock(scope: !8292, file: !3, line: 1237, column: 2)
!8295 = !DILocation(line: 1237, column: 2, scope: !8296)
!8296 = distinct !DILexicalBlock(scope: !8294, file: !3, line: 1237, column: 2)
!8297 = !DILocation(line: 1237, column: 2, scope: !8298)
!8298 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 1237, column: 2)
!8299 = !DILocalVariable(name: "funcs", scope: !8300, file: !3, line: 1238, type: !4780)
!8300 = distinct !DILexicalBlock(scope: !8296, file: !3, line: 1237, column: 75)
!8301 = !DILocation(line: 1238, column: 42, scope: !8300)
!8302 = !DILocalVariable(name: "encoder", scope: !8300, file: !3, line: 1239, type: !4750)
!8303 = !DILocation(line: 1239, column: 23, scope: !8300)
!8304 = !DILocalVariable(name: "mode", scope: !8300, file: !3, line: 1240, type: !4608)
!8305 = !DILocation(line: 1240, column: 28, scope: !8300)
!8306 = !DILocalVariable(name: "adjusted_mode", scope: !8300, file: !3, line: 1240, type: !4608)
!8307 = !DILocation(line: 1240, column: 35, scope: !8300)
!8308 = !DILocalVariable(name: "bridge", scope: !8300, file: !3, line: 1241, type: !5897)
!8309 = !DILocation(line: 1241, column: 22, scope: !8300)
!8310 = !DILocation(line: 1243, column: 8, scope: !8311)
!8311 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 1243, column: 7)
!8312 = !DILocation(line: 1243, column: 24, scope: !8311)
!8313 = !DILocation(line: 1243, column: 7, scope: !8300)
!8314 = !DILocation(line: 1244, column: 4, scope: !8311)
!8315 = !DILocation(line: 1246, column: 13, scope: !8300)
!8316 = !DILocation(line: 1246, column: 29, scope: !8300)
!8317 = !DILocation(line: 1246, column: 11, scope: !8300)
!8318 = !DILocation(line: 1247, column: 11, scope: !8300)
!8319 = !DILocation(line: 1247, column: 20, scope: !8300)
!8320 = !DILocation(line: 1247, column: 9, scope: !8300)
!8321 = !DILocation(line: 1248, column: 20, scope: !8300)
!8322 = !DILocation(line: 1248, column: 36, scope: !8300)
!8323 = !DILocation(line: 1248, column: 42, scope: !8300)
!8324 = !DILocation(line: 1248, column: 18, scope: !8300)
!8325 = !DILocation(line: 1249, column: 11, scope: !8300)
!8326 = !DILocation(line: 1249, column: 27, scope: !8300)
!8327 = !DILocation(line: 1249, column: 8, scope: !8300)
!8328 = !DILocation(line: 1250, column: 20, scope: !8300)
!8329 = !DILocation(line: 1250, column: 36, scope: !8300)
!8330 = !DILocation(line: 1250, column: 17, scope: !8300)
!8331 = !DILocation(line: 1252, column: 8, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 1252, column: 7)
!8333 = !DILocation(line: 1252, column: 24, scope: !8332)
!8334 = !DILocation(line: 1252, column: 7, scope: !8300)
!8335 = !DILocation(line: 1253, column: 4, scope: !8332)
!8336 = !DILocation(line: 1255, column: 3, scope: !8300)
!8337 = !DILocation(line: 1262, column: 7, scope: !8338)
!8338 = distinct !DILexicalBlock(scope: !8300, file: !3, line: 1262, column: 7)
!8339 = !DILocation(line: 1262, column: 13, scope: !8338)
!8340 = !DILocation(line: 1262, column: 16, scope: !8338)
!8341 = !DILocation(line: 1262, column: 23, scope: !8338)
!8342 = !DILocation(line: 1262, column: 7, scope: !8300)
!8343 = !DILocation(line: 1263, column: 4, scope: !8344)
!8344 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1262, column: 40)
!8345 = !DILocation(line: 1263, column: 11, scope: !8344)
!8346 = !DILocation(line: 1263, column: 27, scope: !8344)
!8347 = !DILocation(line: 1263, column: 36, scope: !8344)
!8348 = !DILocation(line: 1264, column: 13, scope: !8344)
!8349 = !DILocation(line: 1265, column: 3, scope: !8344)
!8350 = !DILocation(line: 1265, column: 14, scope: !8351)
!8351 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1265, column: 14)
!8352 = !DILocation(line: 1265, column: 20, scope: !8351)
!8353 = !DILocation(line: 1265, column: 23, scope: !8351)
!8354 = !DILocation(line: 1265, column: 30, scope: !8351)
!8355 = !DILocation(line: 1265, column: 14, scope: !8338)
!8356 = !DILocation(line: 1266, column: 4, scope: !8357)
!8357 = distinct !DILexicalBlock(scope: !8351, file: !3, line: 1265, column: 40)
!8358 = !DILocation(line: 1266, column: 11, scope: !8357)
!8359 = !DILocation(line: 1266, column: 20, scope: !8357)
!8360 = !DILocation(line: 1266, column: 29, scope: !8357)
!8361 = !DILocation(line: 1266, column: 35, scope: !8357)
!8362 = !DILocation(line: 1267, column: 3, scope: !8357)
!8363 = !DILocation(line: 1269, column: 46, scope: !8300)
!8364 = !DILocation(line: 1269, column: 12, scope: !8300)
!8365 = !DILocation(line: 1269, column: 10, scope: !8300)
!8366 = !DILocation(line: 1270, column: 29, scope: !8300)
!8367 = !DILocation(line: 1270, column: 37, scope: !8300)
!8368 = !DILocation(line: 1270, column: 43, scope: !8300)
!8369 = !DILocation(line: 1270, column: 3, scope: !8300)
!8370 = distinct !{!8370, !8291, !8371}
!8371 = !DILocation(line: 1271, column: 2, scope: !8292)
!8372 = !DILocation(line: 1272, column: 1, scope: !8242)
!8373 = distinct !DISubprogram(name: "drm_atomic_helper_commit_modeset_enables", scope: !3, file: !3, line: 1335, type: !4, scopeLine: 1337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8374 = !DILocalVariable(name: "dev", arg: 1, scope: !8373, file: !3, line: 1335, type: !6)
!8375 = !DILocation(line: 1335, column: 66, scope: !8373)
!8376 = !DILocalVariable(name: "old_state", arg: 2, scope: !8373, file: !3, line: 1336, type: !4520)
!8377 = !DILocation(line: 1336, column: 37, scope: !8373)
!8378 = !DILocalVariable(name: "crtc", scope: !8373, file: !3, line: 1338, type: !4551)
!8379 = !DILocation(line: 1338, column: 19, scope: !8373)
!8380 = !DILocalVariable(name: "old_crtc_state", scope: !8373, file: !3, line: 1339, type: !4807)
!8381 = !DILocation(line: 1339, column: 25, scope: !8373)
!8382 = !DILocalVariable(name: "new_crtc_state", scope: !8373, file: !3, line: 1340, type: !4807)
!8383 = !DILocation(line: 1340, column: 25, scope: !8373)
!8384 = !DILocalVariable(name: "connector", scope: !8373, file: !3, line: 1341, type: !4613)
!8385 = !DILocation(line: 1341, column: 24, scope: !8373)
!8386 = !DILocalVariable(name: "new_conn_state", scope: !8373, file: !3, line: 1342, type: !4744)
!8387 = !DILocation(line: 1342, column: 30, scope: !8373)
!8388 = !DILocalVariable(name: "i", scope: !8373, file: !3, line: 1343, type: !18)
!8389 = !DILocation(line: 1343, column: 6, scope: !8373)
!8390 = !DILocation(line: 1345, column: 2, scope: !8391)
!8391 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1345, column: 2)
!8392 = !DILocation(line: 1345, column: 2, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8391, file: !3, line: 1345, column: 2)
!8394 = !DILocation(line: 1345, column: 2, scope: !8395)
!8395 = distinct !DILexicalBlock(scope: !8393, file: !3, line: 1345, column: 2)
!8396 = !DILocation(line: 1345, column: 2, scope: !8397)
!8397 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 1345, column: 2)
!8398 = !DILocalVariable(name: "funcs", scope: !8399, file: !3, line: 1346, type: !5411)
!8399 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 1345, column: 84)
!8400 = !DILocation(line: 1346, column: 39, scope: !8399)
!8401 = !DILocation(line: 1349, column: 38, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1349, column: 7)
!8403 = !DILocation(line: 1349, column: 8, scope: !8402)
!8404 = !DILocation(line: 1349, column: 7, scope: !8399)
!8405 = !DILocation(line: 1350, column: 4, scope: !8402)
!8406 = !DILocation(line: 1352, column: 8, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1352, column: 7)
!8408 = !DILocation(line: 1352, column: 24, scope: !8407)
!8409 = !DILocation(line: 1352, column: 7, scope: !8399)
!8410 = !DILocation(line: 1353, column: 4, scope: !8407)
!8411 = !DILocation(line: 1355, column: 11, scope: !8399)
!8412 = !DILocation(line: 1355, column: 17, scope: !8399)
!8413 = !DILocation(line: 1355, column: 9, scope: !8399)
!8414 = !DILocation(line: 1357, column: 7, scope: !8415)
!8415 = distinct !DILexicalBlock(scope: !8399, file: !3, line: 1357, column: 7)
!8416 = !DILocation(line: 1357, column: 23, scope: !8415)
!8417 = !DILocation(line: 1357, column: 7, scope: !8399)
!8418 = !DILocation(line: 1358, column: 4, scope: !8419)
!8419 = distinct !DILexicalBlock(scope: !8415, file: !3, line: 1357, column: 31)
!8420 = !DILocation(line: 1360, column: 8, scope: !8421)
!8421 = distinct !DILexicalBlock(scope: !8419, file: !3, line: 1360, column: 8)
!8422 = !DILocation(line: 1360, column: 15, scope: !8421)
!8423 = !DILocation(line: 1360, column: 8, scope: !8419)
!8424 = !DILocation(line: 1361, column: 5, scope: !8421)
!8425 = !DILocation(line: 1361, column: 12, scope: !8421)
!8426 = !DILocation(line: 1361, column: 26, scope: !8421)
!8427 = !DILocation(line: 1361, column: 32, scope: !8421)
!8428 = !DILocation(line: 1362, column: 13, scope: !8429)
!8429 = distinct !DILexicalBlock(scope: !8421, file: !3, line: 1362, column: 13)
!8430 = !DILocation(line: 1362, column: 20, scope: !8429)
!8431 = !DILocation(line: 1362, column: 13, scope: !8421)
!8432 = !DILocation(line: 1363, column: 5, scope: !8429)
!8433 = !DILocation(line: 1363, column: 12, scope: !8429)
!8434 = !DILocation(line: 1363, column: 19, scope: !8429)
!8435 = !DILocation(line: 1364, column: 3, scope: !8419)
!8436 = distinct !{!8436, !8390, !8437}
!8437 = !DILocation(line: 1365, column: 2, scope: !8391)
!8438 = !DILocation(line: 1367, column: 2, scope: !8439)
!8439 = distinct !DILexicalBlock(scope: !8373, file: !3, line: 1367, column: 2)
!8440 = !DILocation(line: 1367, column: 2, scope: !8441)
!8441 = distinct !DILexicalBlock(scope: !8439, file: !3, line: 1367, column: 2)
!8442 = !DILocation(line: 1367, column: 2, scope: !8443)
!8443 = distinct !DILexicalBlock(scope: !8441, file: !3, line: 1367, column: 2)
!8444 = !DILocation(line: 1367, column: 2, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 1367, column: 2)
!8446 = !DILocalVariable(name: "funcs", scope: !8447, file: !3, line: 1368, type: !4780)
!8447 = distinct !DILexicalBlock(scope: !8443, file: !3, line: 1367, column: 75)
!8448 = !DILocation(line: 1368, column: 42, scope: !8447)
!8449 = !DILocalVariable(name: "encoder", scope: !8447, file: !3, line: 1369, type: !4750)
!8450 = !DILocation(line: 1369, column: 23, scope: !8447)
!8451 = !DILocalVariable(name: "bridge", scope: !8447, file: !3, line: 1370, type: !5897)
!8452 = !DILocation(line: 1370, column: 22, scope: !8447)
!8453 = !DILocation(line: 1372, column: 8, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8447, file: !3, line: 1372, column: 7)
!8455 = !DILocation(line: 1372, column: 24, scope: !8454)
!8456 = !DILocation(line: 1372, column: 7, scope: !8447)
!8457 = !DILocation(line: 1373, column: 4, scope: !8454)
!8458 = !DILocation(line: 1375, column: 8, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8447, file: !3, line: 1375, column: 7)
!8460 = !DILocation(line: 1375, column: 24, scope: !8459)
!8461 = !DILocation(line: 1375, column: 30, scope: !8459)
!8462 = !DILocation(line: 1375, column: 37, scope: !8459)
!8463 = !DILocation(line: 1375, column: 44, scope: !8459)
!8464 = !DILocation(line: 1376, column: 38, scope: !8459)
!8465 = !DILocation(line: 1376, column: 54, scope: !8459)
!8466 = !DILocation(line: 1376, column: 60, scope: !8459)
!8467 = !DILocation(line: 1376, column: 8, scope: !8459)
!8468 = !DILocation(line: 1375, column: 7, scope: !8447)
!8469 = !DILocation(line: 1377, column: 4, scope: !8459)
!8470 = !DILocation(line: 1379, column: 13, scope: !8447)
!8471 = !DILocation(line: 1379, column: 29, scope: !8447)
!8472 = !DILocation(line: 1379, column: 11, scope: !8447)
!8473 = !DILocation(line: 1380, column: 11, scope: !8447)
!8474 = !DILocation(line: 1380, column: 20, scope: !8447)
!8475 = !DILocation(line: 1380, column: 9, scope: !8447)
!8476 = !DILocation(line: 1382, column: 3, scope: !8447)
!8477 = !DILocation(line: 1389, column: 46, scope: !8447)
!8478 = !DILocation(line: 1389, column: 12, scope: !8447)
!8479 = !DILocation(line: 1389, column: 10, scope: !8447)
!8480 = !DILocation(line: 1390, column: 38, scope: !8447)
!8481 = !DILocation(line: 1390, column: 46, scope: !8447)
!8482 = !DILocation(line: 1390, column: 3, scope: !8447)
!8483 = !DILocation(line: 1392, column: 7, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8447, file: !3, line: 1392, column: 7)
!8485 = !DILocation(line: 1392, column: 7, scope: !8447)
!8486 = !DILocation(line: 1393, column: 8, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8488, file: !3, line: 1393, column: 8)
!8488 = distinct !DILexicalBlock(scope: !8484, file: !3, line: 1392, column: 14)
!8489 = !DILocation(line: 1393, column: 15, scope: !8487)
!8490 = !DILocation(line: 1393, column: 8, scope: !8488)
!8491 = !DILocation(line: 1394, column: 5, scope: !8487)
!8492 = !DILocation(line: 1394, column: 12, scope: !8487)
!8493 = !DILocation(line: 1394, column: 26, scope: !8487)
!8494 = !DILocation(line: 1394, column: 35, scope: !8487)
!8495 = !DILocation(line: 1395, column: 13, scope: !8496)
!8496 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 1395, column: 13)
!8497 = !DILocation(line: 1395, column: 20, scope: !8496)
!8498 = !DILocation(line: 1395, column: 13, scope: !8487)
!8499 = !DILocation(line: 1396, column: 5, scope: !8496)
!8500 = !DILocation(line: 1396, column: 12, scope: !8496)
!8501 = !DILocation(line: 1396, column: 19, scope: !8496)
!8502 = !DILocation(line: 1397, column: 13, scope: !8503)
!8503 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 1397, column: 13)
!8504 = !DILocation(line: 1397, column: 20, scope: !8503)
!8505 = !DILocation(line: 1397, column: 13, scope: !8496)
!8506 = !DILocation(line: 1398, column: 5, scope: !8503)
!8507 = !DILocation(line: 1398, column: 12, scope: !8503)
!8508 = !DILocation(line: 1398, column: 19, scope: !8503)
!8509 = !DILocation(line: 1399, column: 3, scope: !8488)
!8510 = !DILocation(line: 1401, column: 34, scope: !8447)
!8511 = !DILocation(line: 1401, column: 42, scope: !8447)
!8512 = !DILocation(line: 1401, column: 3, scope: !8447)
!8513 = distinct !{!8513, !8438, !8514}
!8514 = !DILocation(line: 1402, column: 2, scope: !8439)
!8515 = !DILocation(line: 1404, column: 38, scope: !8373)
!8516 = !DILocation(line: 1404, column: 43, scope: !8373)
!8517 = !DILocation(line: 1404, column: 2, scope: !8373)
!8518 = !DILocation(line: 1405, column: 1, scope: !8373)
!8519 = distinct !DISubprogram(name: "drm_bridge_chain_get_first_bridge", scope: !5821, file: !5821, line: 819, type: !8520, scopeLine: 820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8520 = !DISubroutineType(types: !8521)
!8521 = !{!5897, !4750}
!8522 = !DILocalVariable(name: "encoder", arg: 1, scope: !8519, file: !5821, line: 819, type: !4750)
!8523 = !DILocation(line: 819, column: 55, scope: !8519)
!8524 = !DILocalVariable(name: "head__", scope: !8525, file: !5821, line: 821, type: !15)
!8525 = distinct !DILexicalBlock(scope: !8519, file: !5821, line: 821, column: 9)
!8526 = !DILocation(line: 821, column: 9, scope: !8525)
!8527 = !DILocalVariable(name: "pos__", scope: !8525, file: !5821, line: 821, type: !15)
!8528 = !DILocation(line: 821, column: 9, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !8525, file: !5821, line: 821, column: 9)
!8530 = !DILocation(line: 821, column: 9, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8529, file: !5821, line: 821, column: 9)
!8532 = !DILocalVariable(name: "__mptr", scope: !8533, file: !5821, line: 821, type: !170)
!8533 = distinct !DILexicalBlock(scope: !8525, file: !5821, line: 821, column: 9)
!8534 = !DILocation(line: 821, column: 9, scope: !8533)
!8535 = !DILocation(line: 821, column: 9, scope: !8536)
!8536 = distinct !DILexicalBlock(scope: !8533, file: !5821, line: 821, column: 9)
!8537 = !DILocation(line: 821, column: 2, scope: !8519)
!8538 = distinct !DISubprogram(name: "drm_atomic_helper_commit_writebacks", scope: !3, file: !3, line: 1300, type: !4, scopeLine: 1302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8539 = !DILocalVariable(name: "dev", arg: 1, scope: !8538, file: !3, line: 1300, type: !6)
!8540 = !DILocation(line: 1300, column: 68, scope: !8538)
!8541 = !DILocalVariable(name: "old_state", arg: 2, scope: !8538, file: !3, line: 1301, type: !4520)
!8542 = !DILocation(line: 1301, column: 32, scope: !8538)
!8543 = !DILocalVariable(name: "connector", scope: !8538, file: !3, line: 1303, type: !4613)
!8544 = !DILocation(line: 1303, column: 24, scope: !8538)
!8545 = !DILocalVariable(name: "new_conn_state", scope: !8538, file: !3, line: 1304, type: !4744)
!8546 = !DILocation(line: 1304, column: 30, scope: !8538)
!8547 = !DILocalVariable(name: "i", scope: !8538, file: !3, line: 1305, type: !18)
!8548 = !DILocation(line: 1305, column: 6, scope: !8538)
!8549 = !DILocation(line: 1307, column: 2, scope: !8550)
!8550 = distinct !DILexicalBlock(scope: !8538, file: !3, line: 1307, column: 2)
!8551 = !DILocation(line: 1307, column: 2, scope: !8552)
!8552 = distinct !DILexicalBlock(scope: !8550, file: !3, line: 1307, column: 2)
!8553 = !DILocation(line: 1307, column: 2, scope: !8554)
!8554 = distinct !DILexicalBlock(scope: !8552, file: !3, line: 1307, column: 2)
!8555 = !DILocation(line: 1307, column: 2, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1307, column: 2)
!8557 = !DILocalVariable(name: "funcs", scope: !8558, file: !3, line: 1308, type: !5094)
!8558 = distinct !DILexicalBlock(scope: !8554, file: !3, line: 1307, column: 75)
!8559 = !DILocation(line: 1308, column: 44, scope: !8558)
!8560 = !DILocation(line: 1310, column: 11, scope: !8558)
!8561 = !DILocation(line: 1310, column: 22, scope: !8558)
!8562 = !DILocation(line: 1310, column: 9, scope: !8558)
!8563 = !DILocation(line: 1311, column: 8, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 1311, column: 7)
!8565 = !DILocation(line: 1311, column: 15, scope: !8564)
!8566 = !DILocation(line: 1311, column: 7, scope: !8558)
!8567 = !DILocation(line: 1312, column: 4, scope: !8564)
!8568 = !DILocation(line: 1314, column: 7, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 1314, column: 7)
!8570 = !DILocation(line: 1314, column: 23, scope: !8569)
!8571 = !DILocation(line: 1314, column: 37, scope: !8569)
!8572 = !DILocation(line: 1314, column: 40, scope: !8569)
!8573 = !DILocation(line: 1314, column: 56, scope: !8569)
!8574 = !DILocation(line: 1314, column: 71, scope: !8569)
!8575 = !DILocation(line: 1314, column: 7, scope: !8558)
!8576 = !DILocalVariable(name: "__ret_warn_on", scope: !8577, file: !3, line: 1315, type: !18)
!8577 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 1315, column: 4)
!8578 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 1314, column: 75)
!8579 = !DILocation(line: 1315, column: 4, scope: !8577)
!8580 = !DILocation(line: 1315, column: 4, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8577, file: !3, line: 1315, column: 4)
!8582 = !DILocation(line: 1315, column: 4, scope: !8583)
!8583 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 1315, column: 4)
!8584 = !DILocation(line: 1315, column: 4, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1315, column: 4)
!8586 = !DILocation(line: 1315, column: 4, scope: !8587)
!8587 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1315, column: 4)
!8588 = !{i32 -2140177132, i32 -2140177103, i32 -2140177057, i32 -2140176999, i32 -2140176945, i32 -2140176891, i32 -2140176836, i32 -2140176805}
!8589 = !DILocation(line: 1315, column: 4, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1315, column: 4)
!8591 = !{i32 -2140176387, i32 -2140176380, i32 -2140176328, i32 -2140176297, i32 -2140176267}
!8592 = !DILocation(line: 1315, column: 4, scope: !8593)
!8593 = distinct !DILexicalBlock(scope: !8583, file: !3, line: 1315, column: 4)
!8594 = !DILocation(line: 1316, column: 4, scope: !8578)
!8595 = !DILocation(line: 1316, column: 11, scope: !8578)
!8596 = !DILocation(line: 1316, column: 25, scope: !8578)
!8597 = !DILocation(line: 1316, column: 36, scope: !8578)
!8598 = !DILocation(line: 1317, column: 3, scope: !8578)
!8599 = distinct !{!8599, !8549, !8600}
!8600 = !DILocation(line: 1318, column: 2, scope: !8550)
!8601 = !DILocation(line: 1319, column: 1, scope: !8538)
!8602 = distinct !DISubprogram(name: "drm_atomic_helper_wait_for_fences", scope: !3, file: !3, line: 1429, type: !5683, scopeLine: 1432, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8603 = !DILocalVariable(name: "dev", arg: 1, scope: !8602, file: !3, line: 1429, type: !6)
!8604 = !DILocation(line: 1429, column: 58, scope: !8602)
!8605 = !DILocalVariable(name: "state", arg: 2, scope: !8602, file: !3, line: 1430, type: !4520)
!8606 = !DILocation(line: 1430, column: 36, scope: !8602)
!8607 = !DILocalVariable(name: "pre_swap", arg: 3, scope: !8602, file: !3, line: 1431, type: !315)
!8608 = !DILocation(line: 1431, column: 16, scope: !8602)
!8609 = !DILocalVariable(name: "plane", scope: !8602, file: !3, line: 1433, type: !4535)
!8610 = !DILocation(line: 1433, column: 20, scope: !8602)
!8611 = !DILocalVariable(name: "new_plane_state", scope: !8602, file: !3, line: 1434, type: !5517)
!8612 = !DILocation(line: 1434, column: 26, scope: !8602)
!8613 = !DILocalVariable(name: "i", scope: !8602, file: !3, line: 1435, type: !18)
!8614 = !DILocation(line: 1435, column: 6, scope: !8602)
!8615 = !DILocalVariable(name: "ret", scope: !8602, file: !3, line: 1435, type: !18)
!8616 = !DILocation(line: 1435, column: 9, scope: !8602)
!8617 = !DILocation(line: 1437, column: 2, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8602, file: !3, line: 1437, column: 2)
!8619 = !DILocation(line: 1437, column: 2, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 1437, column: 2)
!8621 = !DILocation(line: 1437, column: 2, scope: !8622)
!8622 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 1437, column: 2)
!8623 = !DILocation(line: 1437, column: 2, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 1437, column: 2)
!8625 = !DILocation(line: 1438, column: 8, scope: !8626)
!8626 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 1438, column: 7)
!8627 = distinct !DILexicalBlock(scope: !8622, file: !3, line: 1437, column: 64)
!8628 = !DILocation(line: 1438, column: 25, scope: !8626)
!8629 = !DILocation(line: 1438, column: 7, scope: !8627)
!8630 = !DILocation(line: 1439, column: 4, scope: !8626)
!8631 = !DILocalVariable(name: "__ret_warn_on", scope: !8632, file: !3, line: 1441, type: !18)
!8632 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 1441, column: 3)
!8633 = !DILocation(line: 1441, column: 3, scope: !8632)
!8634 = !DILocation(line: 1441, column: 3, scope: !8635)
!8635 = distinct !DILexicalBlock(scope: !8632, file: !3, line: 1441, column: 3)
!8636 = !DILocation(line: 1441, column: 3, scope: !8637)
!8637 = distinct !DILexicalBlock(scope: !8635, file: !3, line: 1441, column: 3)
!8638 = !DILocation(line: 1441, column: 3, scope: !8639)
!8639 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 1441, column: 3)
!8640 = !DILocation(line: 1441, column: 3, scope: !8641)
!8641 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 1441, column: 3)
!8642 = !{i32 -2140172821, i32 -2140172792, i32 -2140172746, i32 -2140172688, i32 -2140172634, i32 -2140172580, i32 -2140172525, i32 -2140172494}
!8643 = !DILocation(line: 1441, column: 3, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 1441, column: 3)
!8645 = !{i32 -2140168015, i32 -2140168008, i32 -2140167956, i32 -2140167925, i32 -2140167895}
!8646 = !DILocation(line: 1441, column: 3, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8637, file: !3, line: 1441, column: 3)
!8648 = !DILocation(line: 1448, column: 24, scope: !8627)
!8649 = !DILocation(line: 1448, column: 41, scope: !8627)
!8650 = !DILocation(line: 1448, column: 48, scope: !8627)
!8651 = !DILocation(line: 1448, column: 9, scope: !8627)
!8652 = !DILocation(line: 1448, column: 7, scope: !8627)
!8653 = !DILocation(line: 1449, column: 7, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 1449, column: 7)
!8655 = !DILocation(line: 1449, column: 7, scope: !8627)
!8656 = !DILocation(line: 1450, column: 11, scope: !8654)
!8657 = !DILocation(line: 1450, column: 4, scope: !8654)
!8658 = !DILocation(line: 1452, column: 17, scope: !8627)
!8659 = !DILocation(line: 1452, column: 34, scope: !8627)
!8660 = !DILocation(line: 1452, column: 3, scope: !8627)
!8661 = !DILocation(line: 1453, column: 3, scope: !8627)
!8662 = !DILocation(line: 1453, column: 20, scope: !8627)
!8663 = !DILocation(line: 1453, column: 26, scope: !8627)
!8664 = distinct !{!8664, !8617, !8665}
!8665 = !DILocation(line: 1454, column: 2, scope: !8618)
!8666 = !DILocation(line: 1456, column: 2, scope: !8602)
!8667 = !DILocation(line: 1457, column: 1, scope: !8602)
!8668 = distinct !DISubprogram(name: "dma_fence_wait", scope: !4863, file: !4863, line: 573, type: !8669, scopeLine: 574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8669 = !DISubroutineType(types: !8670)
!8670 = !{!131, !4861, !315}
!8671 = !DILocalVariable(name: "fence", arg: 1, scope: !8668, file: !4863, line: 573, type: !4861)
!8672 = !DILocation(line: 573, column: 60, scope: !8668)
!8673 = !DILocalVariable(name: "intr", arg: 2, scope: !8668, file: !4863, line: 573, type: !315)
!8674 = !DILocation(line: 573, column: 72, scope: !8668)
!8675 = !DILocalVariable(name: "ret", scope: !8668, file: !4863, line: 575, type: !131)
!8676 = !DILocation(line: 575, column: 14, scope: !8668)
!8677 = !DILocation(line: 581, column: 31, scope: !8668)
!8678 = !DILocation(line: 581, column: 38, scope: !8668)
!8679 = !DILocation(line: 581, column: 8, scope: !8668)
!8680 = !DILocation(line: 581, column: 6, scope: !8668)
!8681 = !DILocation(line: 583, column: 9, scope: !8668)
!8682 = !DILocation(line: 583, column: 13, scope: !8668)
!8683 = !DILocation(line: 583, column: 19, scope: !8668)
!8684 = !DILocation(line: 583, column: 2, scope: !8668)
!8685 = distinct !DISubprogram(name: "dma_fence_put", scope: !4863, file: !4863, line: 276, type: !4888, scopeLine: 277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8686 = !DILocalVariable(name: "fence", arg: 1, scope: !8685, file: !4863, line: 276, type: !4861)
!8687 = !DILocation(line: 276, column: 52, scope: !8685)
!8688 = !DILocation(line: 278, column: 6, scope: !8689)
!8689 = distinct !DILexicalBlock(scope: !8685, file: !4863, line: 278, column: 6)
!8690 = !DILocation(line: 278, column: 6, scope: !8685)
!8691 = !DILocation(line: 279, column: 13, scope: !8689)
!8692 = !DILocation(line: 279, column: 20, scope: !8689)
!8693 = !DILocation(line: 279, column: 3, scope: !8689)
!8694 = !DILocation(line: 280, column: 1, scope: !8685)
!8695 = distinct !DISubprogram(name: "drm_atomic_helper_wait_for_vblanks", scope: !3, file: !3, line: 1476, type: !4, scopeLine: 1478, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8696 = !DILocalVariable(name: "m", arg: 1, scope: !8697, file: !8698, line: 363, type: !2782)
!8697 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !8698, file: !8698, line: 363, type: !8699, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8698 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!8699 = !DISubroutineType(types: !8700)
!8700 = !{!146, !2782}
!8701 = !DILocation(line: 363, column: 74, scope: !8697, inlinedAt: !8702)
!8702 = distinct !DILocation(line: 1507, column: 9, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 1507, column: 9)
!8704 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 1507, column: 9)
!8705 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1507, column: 9)
!8706 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 1503, column: 65)
!8707 = distinct !DILexicalBlock(scope: !8708, file: !3, line: 1503, column: 2)
!8708 = distinct !DILexicalBlock(scope: !8709, file: !3, line: 1503, column: 2)
!8709 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1503, column: 2)
!8710 = !DILocation(line: 363, column: 74, scope: !8697, inlinedAt: !8711)
!8711 = distinct !DILocation(line: 1507, column: 9, scope: !8705)
!8712 = !DILocalVariable(name: "dev", arg: 1, scope: !8695, file: !3, line: 1476, type: !6)
!8713 = !DILocation(line: 1476, column: 55, scope: !8695)
!8714 = !DILocalVariable(name: "old_state", arg: 2, scope: !8695, file: !3, line: 1477, type: !4520)
!8715 = !DILocation(line: 1477, column: 28, scope: !8695)
!8716 = !DILocalVariable(name: "crtc", scope: !8695, file: !3, line: 1479, type: !4551)
!8717 = !DILocation(line: 1479, column: 19, scope: !8695)
!8718 = !DILocalVariable(name: "old_crtc_state", scope: !8695, file: !3, line: 1480, type: !4807)
!8719 = !DILocation(line: 1480, column: 25, scope: !8695)
!8720 = !DILocalVariable(name: "new_crtc_state", scope: !8695, file: !3, line: 1480, type: !4807)
!8721 = !DILocation(line: 1480, column: 42, scope: !8695)
!8722 = !DILocalVariable(name: "i", scope: !8695, file: !3, line: 1481, type: !18)
!8723 = !DILocation(line: 1481, column: 6, scope: !8695)
!8724 = !DILocalVariable(name: "ret", scope: !8695, file: !3, line: 1481, type: !18)
!8725 = !DILocation(line: 1481, column: 9, scope: !8695)
!8726 = !DILocalVariable(name: "crtc_mask", scope: !8695, file: !3, line: 1482, type: !210)
!8727 = !DILocation(line: 1482, column: 11, scope: !8695)
!8728 = !DILocation(line: 1488, column: 6, scope: !8729)
!8729 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1488, column: 6)
!8730 = !DILocation(line: 1488, column: 17, scope: !8729)
!8731 = !DILocation(line: 1488, column: 6, scope: !8695)
!8732 = !DILocation(line: 1489, column: 3, scope: !8729)
!8733 = !DILocation(line: 1491, column: 2, scope: !8734)
!8734 = distinct !DILexicalBlock(scope: !8695, file: !3, line: 1491, column: 2)
!8735 = !DILocation(line: 1491, column: 2, scope: !8736)
!8736 = distinct !DILexicalBlock(scope: !8734, file: !3, line: 1491, column: 2)
!8737 = !DILocation(line: 1491, column: 2, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8736, file: !3, line: 1491, column: 2)
!8739 = !DILocation(line: 1491, column: 2, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 1491, column: 2)
!8741 = !DILocation(line: 1492, column: 8, scope: !8742)
!8742 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 1492, column: 7)
!8743 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 1491, column: 84)
!8744 = !DILocation(line: 1492, column: 24, scope: !8742)
!8745 = !DILocation(line: 1492, column: 7, scope: !8743)
!8746 = !DILocation(line: 1493, column: 4, scope: !8742)
!8747 = !DILocation(line: 1495, column: 29, scope: !8743)
!8748 = !DILocation(line: 1495, column: 9, scope: !8743)
!8749 = !DILocation(line: 1495, column: 7, scope: !8743)
!8750 = !DILocation(line: 1496, column: 7, scope: !8751)
!8751 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 1496, column: 7)
!8752 = !DILocation(line: 1496, column: 11, scope: !8751)
!8753 = !DILocation(line: 1496, column: 7, scope: !8743)
!8754 = !DILocation(line: 1497, column: 4, scope: !8751)
!8755 = !DILocation(line: 1499, column: 30, scope: !8743)
!8756 = !DILocation(line: 1499, column: 16, scope: !8743)
!8757 = !DILocation(line: 1499, column: 13, scope: !8743)
!8758 = !DILocation(line: 1500, column: 65, scope: !8743)
!8759 = !DILocation(line: 1500, column: 43, scope: !8743)
!8760 = !DILocation(line: 1500, column: 3, scope: !8743)
!8761 = !DILocation(line: 1500, column: 14, scope: !8743)
!8762 = !DILocation(line: 1500, column: 20, scope: !8743)
!8763 = !DILocation(line: 1500, column: 23, scope: !8743)
!8764 = !DILocation(line: 1500, column: 41, scope: !8743)
!8765 = distinct !{!8765, !8733, !8766}
!8766 = !DILocation(line: 1501, column: 2, scope: !8734)
!8767 = !DILocation(line: 1503, column: 2, scope: !8709)
!8768 = !DILocation(line: 1503, column: 2, scope: !8708)
!8769 = !DILocation(line: 1503, column: 2, scope: !8707)
!8770 = !DILocation(line: 1503, column: 2, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8707, file: !3, line: 1503, column: 2)
!8772 = !DILocation(line: 1504, column: 9, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1504, column: 7)
!8774 = !DILocation(line: 1504, column: 35, scope: !8773)
!8775 = !DILocation(line: 1504, column: 21, scope: !8773)
!8776 = !DILocation(line: 1504, column: 19, scope: !8773)
!8777 = !DILocation(line: 1504, column: 7, scope: !8706)
!8778 = !DILocation(line: 1505, column: 4, scope: !8773)
!8779 = !DILocalVariable(name: "__ret", scope: !8705, file: !3, line: 1507, type: !131)
!8780 = !DILocation(line: 1507, column: 9, scope: !8705)
!8781 = !DILocation(line: 365, column: 27, scope: !8782, inlinedAt: !8711)
!8782 = distinct !DILexicalBlock(scope: !8697, file: !8698, line: 365, column: 6)
!8783 = !DILocation(line: 365, column: 6, scope: !8782, inlinedAt: !8711)
!8784 = !DILocation(line: 365, column: 6, scope: !8697, inlinedAt: !8711)
!8785 = !DILocation(line: 366, column: 12, scope: !8786, inlinedAt: !8711)
!8786 = distinct !DILexicalBlock(scope: !8787, file: !8698, line: 366, column: 7)
!8787 = distinct !DILexicalBlock(scope: !8782, file: !8698, line: 365, column: 31)
!8788 = !DILocation(line: 366, column: 14, scope: !8786, inlinedAt: !8711)
!8789 = !DILocation(line: 366, column: 7, scope: !8787, inlinedAt: !8711)
!8790 = !DILocation(line: 367, column: 4, scope: !8786, inlinedAt: !8711)
!8791 = !DILocation(line: 368, column: 28, scope: !8787, inlinedAt: !8711)
!8792 = !DILocation(line: 368, column: 10, scope: !8787, inlinedAt: !8711)
!8793 = !DILocation(line: 368, column: 3, scope: !8787, inlinedAt: !8711)
!8794 = !DILocation(line: 370, column: 29, scope: !8795, inlinedAt: !8711)
!8795 = distinct !DILexicalBlock(scope: !8782, file: !8698, line: 369, column: 9)
!8796 = !DILocation(line: 370, column: 10, scope: !8795, inlinedAt: !8711)
!8797 = !DILocation(line: 370, column: 3, scope: !8795, inlinedAt: !8711)
!8798 = !DILocation(line: 372, column: 1, scope: !8697, inlinedAt: !8711)
!8799 = !DILocation(line: 1507, column: 9, scope: !8800)
!8800 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 1507, column: 9)
!8801 = !DILocation(line: 1507, column: 9, scope: !8802)
!8802 = distinct !DILexicalBlock(scope: !8800, file: !3, line: 1507, column: 9)
!8803 = !DILocalVariable(name: "__cond", scope: !8804, file: !3, line: 1507, type: !315)
!8804 = distinct !DILexicalBlock(scope: !8704, file: !3, line: 1507, column: 9)
!8805 = !DILocation(line: 1507, column: 9, scope: !8804)
!8806 = !DILocation(line: 1507, column: 9, scope: !8807)
!8807 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 1507, column: 9)
!8808 = !DILocation(line: 1507, column: 9, scope: !8704)
!8809 = !DILocalVariable(name: "__wq_entry", scope: !8703, file: !3, line: 1507, type: !8810)
!8810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1369, line: 29, size: 320, elements: !8811)
!8811 = !{!8812, !8813, !8814, !8820}
!8812 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8810, file: !1369, line: 30, baseType: !210, size: 32)
!8813 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !8810, file: !1369, line: 31, baseType: !170, size: 64, offset: 64)
!8814 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !8810, file: !1369, line: 32, baseType: !8815, size: 64, offset: 128)
!8815 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1369, line: 16, baseType: !8816)
!8816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8817, size: 64)
!8817 = !DISubroutineType(types: !8818)
!8818 = !{!18, !8819, !210, !18, !170}
!8819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8810, size: 64)
!8820 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !8810, file: !1369, line: 33, baseType: !11, size: 128, offset: 192)
!8821 = !DILocation(line: 1507, column: 9, scope: !8703)
!8822 = !DILocalVariable(name: "__ret", scope: !8703, file: !3, line: 1507, type: !131)
!8823 = !DILocation(line: 365, column: 27, scope: !8782, inlinedAt: !8702)
!8824 = !DILocation(line: 365, column: 6, scope: !8782, inlinedAt: !8702)
!8825 = !DILocation(line: 365, column: 6, scope: !8697, inlinedAt: !8702)
!8826 = !DILocation(line: 366, column: 12, scope: !8786, inlinedAt: !8702)
!8827 = !DILocation(line: 366, column: 14, scope: !8786, inlinedAt: !8702)
!8828 = !DILocation(line: 366, column: 7, scope: !8787, inlinedAt: !8702)
!8829 = !DILocation(line: 367, column: 4, scope: !8786, inlinedAt: !8702)
!8830 = !DILocation(line: 368, column: 28, scope: !8787, inlinedAt: !8702)
!8831 = !DILocation(line: 368, column: 10, scope: !8787, inlinedAt: !8702)
!8832 = !DILocation(line: 368, column: 3, scope: !8787, inlinedAt: !8702)
!8833 = !DILocation(line: 370, column: 29, scope: !8795, inlinedAt: !8702)
!8834 = !DILocation(line: 370, column: 10, scope: !8795, inlinedAt: !8702)
!8835 = !DILocation(line: 370, column: 3, scope: !8795, inlinedAt: !8702)
!8836 = !DILocation(line: 372, column: 1, scope: !8697, inlinedAt: !8702)
!8837 = !DILocalVariable(name: "__int", scope: !8838, file: !3, line: 1507, type: !131)
!8838 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 1507, column: 9)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 1507, column: 9)
!8840 = distinct !DILexicalBlock(scope: !8703, file: !3, line: 1507, column: 9)
!8841 = !DILocation(line: 1507, column: 9, scope: !8838)
!8842 = !DILocalVariable(name: "__cond", scope: !8843, file: !3, line: 1507, type: !315)
!8843 = distinct !DILexicalBlock(scope: !8844, file: !3, line: 1507, column: 9)
!8844 = distinct !DILexicalBlock(scope: !8838, file: !3, line: 1507, column: 9)
!8845 = !DILocation(line: 1507, column: 9, scope: !8843)
!8846 = !DILocation(line: 1507, column: 9, scope: !8847)
!8847 = distinct !DILexicalBlock(scope: !8843, file: !3, line: 1507, column: 9)
!8848 = !DILocation(line: 1507, column: 9, scope: !8844)
!8849 = !DILocation(line: 1507, column: 9, scope: !8839)
!8850 = distinct !{!8850, !8851, !8851}
!8851 = !DILocation(line: 1507, column: 9, scope: !8840)
!8852 = !DILabel(scope: !8703, name: "__out", file: !3, line: 1507)
!8853 = !DILocation(line: 1507, column: 9, scope: !8706)
!8854 = !DILocation(line: 1507, column: 7, scope: !8706)
!8855 = !DILocalVariable(name: "__ret_warn_on", scope: !8856, file: !3, line: 1512, type: !18)
!8856 = distinct !DILexicalBlock(scope: !8706, file: !3, line: 1512, column: 3)
!8857 = !DILocation(line: 1512, column: 3, scope: !8856)
!8858 = !DILocation(line: 1512, column: 3, scope: !8859)
!8859 = distinct !DILexicalBlock(scope: !8856, file: !3, line: 1512, column: 3)
!8860 = !DILocation(line: 1512, column: 3, scope: !8861)
!8861 = distinct !DILexicalBlock(scope: !8859, file: !3, line: 1512, column: 3)
!8862 = !DILocation(line: 1512, column: 3, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 1512, column: 3)
!8864 = !DILocation(line: 1512, column: 3, scope: !8865)
!8865 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 1512, column: 3)
!8866 = !DILocation(line: 1512, column: 3, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 1512, column: 3)
!8868 = !DILocation(line: 1512, column: 3, scope: !8869)
!8869 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 1512, column: 3)
!8870 = !{i32 -2140163168, i32 -2140163139, i32 -2140163093, i32 -2140163035, i32 -2140162981, i32 -2140162927, i32 -2140162872, i32 -2140162841}
!8871 = !DILocation(line: 1512, column: 3, scope: !8872)
!8872 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 1512, column: 3)
!8873 = !{i32 -2140162412, i32 -2140162405, i32 -2140162353, i32 -2140162322, i32 -2140162292}
!8874 = !DILocation(line: 1512, column: 3, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8865, file: !3, line: 1512, column: 3)
!8876 = !DILocation(line: 1512, column: 3, scope: !8877)
!8877 = distinct !DILexicalBlock(scope: !8861, file: !3, line: 1512, column: 3)
!8878 = !DILocation(line: 1515, column: 23, scope: !8706)
!8879 = !DILocation(line: 1515, column: 3, scope: !8706)
!8880 = distinct !{!8880, !8767, !8881}
!8881 = !DILocation(line: 1516, column: 2, scope: !8709)
!8882 = !DILocation(line: 1517, column: 1, scope: !8695)
!8883 = distinct !DISubprogram(name: "drm_crtc_mask", scope: !4553, file: !4553, line: 1232, type: !8884, scopeLine: 1233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8884 = !DISubroutineType(types: !8885)
!8885 = !{!384, !8886}
!8886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8887, size: 64)
!8887 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4552)
!8888 = !DILocalVariable(name: "crtc", arg: 1, scope: !8883, file: !4553, line: 1232, type: !8886)
!8889 = !DILocation(line: 1232, column: 61, scope: !8883)
!8890 = !DILocation(line: 1234, column: 29, scope: !8883)
!8891 = !DILocation(line: 1234, column: 14, scope: !8883)
!8892 = !DILocation(line: 1234, column: 11, scope: !8883)
!8893 = !DILocation(line: 1234, column: 2, scope: !8883)
!8894 = distinct !DISubprogram(name: "drm_atomic_helper_wait_for_flip_done", scope: !3, file: !3, line: 1535, type: !4, scopeLine: 1537, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8895 = !DILocalVariable(name: "dev", arg: 1, scope: !8894, file: !3, line: 1535, type: !6)
!8896 = !DILocation(line: 1535, column: 62, scope: !8894)
!8897 = !DILocalVariable(name: "old_state", arg: 2, scope: !8894, file: !3, line: 1536, type: !4520)
!8898 = !DILocation(line: 1536, column: 33, scope: !8894)
!8899 = !DILocalVariable(name: "crtc", scope: !8894, file: !3, line: 1538, type: !4551)
!8900 = !DILocation(line: 1538, column: 19, scope: !8894)
!8901 = !DILocalVariable(name: "i", scope: !8894, file: !3, line: 1539, type: !18)
!8902 = !DILocation(line: 1539, column: 6, scope: !8894)
!8903 = !DILocation(line: 1541, column: 9, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1541, column: 2)
!8905 = !DILocation(line: 1541, column: 7, scope: !8904)
!8906 = !DILocation(line: 1541, column: 14, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 1541, column: 2)
!8908 = !DILocation(line: 1541, column: 18, scope: !8907)
!8909 = !DILocation(line: 1541, column: 23, scope: !8907)
!8910 = !DILocation(line: 1541, column: 35, scope: !8907)
!8911 = !DILocation(line: 1541, column: 16, scope: !8907)
!8912 = !DILocation(line: 1541, column: 2, scope: !8904)
!8913 = !DILocalVariable(name: "commit", scope: !8914, file: !3, line: 1542, type: !4932)
!8914 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 1541, column: 50)
!8915 = !DILocation(line: 1542, column: 27, scope: !8914)
!8916 = !DILocation(line: 1542, column: 36, scope: !8914)
!8917 = !DILocation(line: 1542, column: 47, scope: !8914)
!8918 = !DILocation(line: 1542, column: 53, scope: !8914)
!8919 = !DILocation(line: 1542, column: 56, scope: !8914)
!8920 = !DILocalVariable(name: "ret", scope: !8914, file: !3, line: 1543, type: !18)
!8921 = !DILocation(line: 1543, column: 7, scope: !8914)
!8922 = !DILocation(line: 1545, column: 10, scope: !8914)
!8923 = !DILocation(line: 1545, column: 21, scope: !8914)
!8924 = !DILocation(line: 1545, column: 27, scope: !8914)
!8925 = !DILocation(line: 1545, column: 30, scope: !8914)
!8926 = !DILocation(line: 1545, column: 8, scope: !8914)
!8927 = !DILocation(line: 1547, column: 8, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1547, column: 7)
!8929 = !DILocation(line: 1547, column: 13, scope: !8928)
!8930 = !DILocation(line: 1547, column: 17, scope: !8928)
!8931 = !DILocation(line: 1547, column: 7, scope: !8914)
!8932 = !DILocation(line: 1548, column: 4, scope: !8928)
!8933 = !DILocation(line: 1550, column: 38, scope: !8914)
!8934 = !DILocation(line: 1550, column: 46, scope: !8914)
!8935 = !DILocation(line: 1550, column: 9, scope: !8914)
!8936 = !DILocation(line: 1550, column: 7, scope: !8914)
!8937 = !DILocation(line: 1551, column: 7, scope: !8938)
!8938 = distinct !DILexicalBlock(scope: !8914, file: !3, line: 1551, column: 7)
!8939 = !DILocation(line: 1551, column: 11, scope: !8938)
!8940 = !DILocation(line: 1551, column: 7, scope: !8914)
!8941 = !DILocation(line: 1552, column: 4, scope: !8938)
!8942 = !DILocation(line: 1554, column: 2, scope: !8914)
!8943 = !DILocation(line: 1541, column: 46, scope: !8907)
!8944 = !DILocation(line: 1541, column: 2, scope: !8907)
!8945 = distinct !{!8945, !8912, !8946}
!8946 = !DILocation(line: 1554, column: 2, scope: !8904)
!8947 = !DILocation(line: 1556, column: 6, scope: !8948)
!8948 = distinct !DILexicalBlock(scope: !8894, file: !3, line: 1556, column: 6)
!8949 = !DILocation(line: 1556, column: 17, scope: !8948)
!8950 = !DILocation(line: 1556, column: 6, scope: !8894)
!8951 = !DILocation(line: 1557, column: 17, scope: !8948)
!8952 = !DILocation(line: 1557, column: 28, scope: !8948)
!8953 = !DILocation(line: 1557, column: 41, scope: !8948)
!8954 = !DILocation(line: 1557, column: 3, scope: !8948)
!8955 = !DILocation(line: 1558, column: 1, scope: !8894)
!8956 = distinct !DISubprogram(name: "drm_atomic_helper_commit_tail", scope: !3, file: !3, line: 1574, type: !5691, scopeLine: 1575, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8957 = !DILocalVariable(name: "old_state", arg: 1, scope: !8956, file: !3, line: 1574, type: !4520)
!8958 = !DILocation(line: 1574, column: 61, scope: !8956)
!8959 = !DILocalVariable(name: "dev", scope: !8956, file: !3, line: 1576, type: !6)
!8960 = !DILocation(line: 1576, column: 21, scope: !8956)
!8961 = !DILocation(line: 1576, column: 27, scope: !8956)
!8962 = !DILocation(line: 1576, column: 38, scope: !8956)
!8963 = !DILocation(line: 1578, column: 44, scope: !8956)
!8964 = !DILocation(line: 1578, column: 49, scope: !8956)
!8965 = !DILocation(line: 1578, column: 2, scope: !8956)
!8966 = !DILocation(line: 1580, column: 34, scope: !8956)
!8967 = !DILocation(line: 1580, column: 39, scope: !8956)
!8968 = !DILocation(line: 1580, column: 2, scope: !8956)
!8969 = !DILocation(line: 1582, column: 43, scope: !8956)
!8970 = !DILocation(line: 1582, column: 48, scope: !8956)
!8971 = !DILocation(line: 1582, column: 2, scope: !8956)
!8972 = !DILocation(line: 1584, column: 32, scope: !8956)
!8973 = !DILocation(line: 1584, column: 2, scope: !8956)
!8974 = !DILocation(line: 1586, column: 35, scope: !8956)
!8975 = !DILocation(line: 1586, column: 2, scope: !8956)
!8976 = !DILocation(line: 1588, column: 37, scope: !8956)
!8977 = !DILocation(line: 1588, column: 42, scope: !8956)
!8978 = !DILocation(line: 1588, column: 2, scope: !8956)
!8979 = !DILocation(line: 1590, column: 35, scope: !8956)
!8980 = !DILocation(line: 1590, column: 40, scope: !8956)
!8981 = !DILocation(line: 1590, column: 2, scope: !8956)
!8982 = !DILocation(line: 1591, column: 1, scope: !8956)
!8983 = distinct !DISubprogram(name: "drm_atomic_helper_commit_planes", scope: !3, file: !3, line: 2487, type: !8984, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!8984 = !DISubroutineType(types: !8985)
!8985 = !{null, !6, !4520, !384}
!8986 = !DILocalVariable(name: "dev", arg: 1, scope: !8983, file: !3, line: 2487, type: !6)
!8987 = !DILocation(line: 2487, column: 57, scope: !8983)
!8988 = !DILocalVariable(name: "old_state", arg: 2, scope: !8983, file: !3, line: 2488, type: !4520)
!8989 = !DILocation(line: 2488, column: 35, scope: !8983)
!8990 = !DILocalVariable(name: "flags", arg: 3, scope: !8983, file: !3, line: 2489, type: !384)
!8991 = !DILocation(line: 2489, column: 19, scope: !8983)
!8992 = !DILocalVariable(name: "crtc", scope: !8983, file: !3, line: 2491, type: !4551)
!8993 = !DILocation(line: 2491, column: 19, scope: !8983)
!8994 = !DILocalVariable(name: "old_crtc_state", scope: !8983, file: !3, line: 2492, type: !4807)
!8995 = !DILocation(line: 2492, column: 25, scope: !8983)
!8996 = !DILocalVariable(name: "new_crtc_state", scope: !8983, file: !3, line: 2492, type: !4807)
!8997 = !DILocation(line: 2492, column: 42, scope: !8983)
!8998 = !DILocalVariable(name: "plane", scope: !8983, file: !3, line: 2493, type: !4535)
!8999 = !DILocation(line: 2493, column: 20, scope: !8983)
!9000 = !DILocalVariable(name: "old_plane_state", scope: !8983, file: !3, line: 2494, type: !5517)
!9001 = !DILocation(line: 2494, column: 26, scope: !8983)
!9002 = !DILocalVariable(name: "new_plane_state", scope: !8983, file: !3, line: 2494, type: !5517)
!9003 = !DILocation(line: 2494, column: 44, scope: !8983)
!9004 = !DILocalVariable(name: "i", scope: !8983, file: !3, line: 2495, type: !18)
!9005 = !DILocation(line: 2495, column: 6, scope: !8983)
!9006 = !DILocalVariable(name: "active_only", scope: !8983, file: !3, line: 2496, type: !315)
!9007 = !DILocation(line: 2496, column: 7, scope: !8983)
!9008 = !DILocation(line: 2496, column: 21, scope: !8983)
!9009 = !DILocation(line: 2496, column: 27, scope: !8983)
!9010 = !DILocalVariable(name: "no_disable", scope: !8983, file: !3, line: 2497, type: !315)
!9011 = !DILocation(line: 2497, column: 7, scope: !8983)
!9012 = !DILocation(line: 2497, column: 20, scope: !8983)
!9013 = !DILocation(line: 2497, column: 26, scope: !8983)
!9014 = !DILocation(line: 2499, column: 2, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 2499, column: 2)
!9016 = !DILocation(line: 2499, column: 2, scope: !9017)
!9017 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 2499, column: 2)
!9018 = !DILocation(line: 2499, column: 2, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9017, file: !3, line: 2499, column: 2)
!9020 = !DILocation(line: 2499, column: 2, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 2499, column: 2)
!9022 = !DILocalVariable(name: "funcs", scope: !9023, file: !3, line: 2500, type: !5411)
!9023 = distinct !DILexicalBlock(scope: !9019, file: !3, line: 2499, column: 84)
!9024 = !DILocation(line: 2500, column: 39, scope: !9023)
!9025 = !DILocation(line: 2502, column: 11, scope: !9023)
!9026 = !DILocation(line: 2502, column: 17, scope: !9023)
!9027 = !DILocation(line: 2502, column: 9, scope: !9023)
!9028 = !DILocation(line: 2504, column: 8, scope: !9029)
!9029 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 2504, column: 7)
!9030 = !DILocation(line: 2504, column: 14, scope: !9029)
!9031 = !DILocation(line: 2504, column: 18, scope: !9029)
!9032 = !DILocation(line: 2504, column: 25, scope: !9029)
!9033 = !DILocation(line: 2504, column: 7, scope: !9023)
!9034 = !DILocation(line: 2505, column: 4, scope: !9029)
!9035 = !DILocation(line: 2507, column: 7, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9023, file: !3, line: 2507, column: 7)
!9037 = !DILocation(line: 2507, column: 19, scope: !9036)
!9038 = !DILocation(line: 2507, column: 23, scope: !9036)
!9039 = !DILocation(line: 2507, column: 39, scope: !9036)
!9040 = !DILocation(line: 2507, column: 7, scope: !9023)
!9041 = !DILocation(line: 2508, column: 4, scope: !9036)
!9042 = !DILocation(line: 2510, column: 3, scope: !9023)
!9043 = !DILocation(line: 2510, column: 10, scope: !9023)
!9044 = !DILocation(line: 2510, column: 23, scope: !9023)
!9045 = !DILocation(line: 2510, column: 29, scope: !9023)
!9046 = distinct !{!9046, !9014, !9047}
!9047 = !DILocation(line: 2511, column: 2, scope: !9015)
!9048 = !DILocation(line: 2513, column: 2, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 2513, column: 2)
!9050 = !DILocation(line: 2513, column: 2, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9049, file: !3, line: 2513, column: 2)
!9052 = !DILocation(line: 2513, column: 2, scope: !9053)
!9053 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 2513, column: 2)
!9054 = !DILocation(line: 2513, column: 2, scope: !9055)
!9055 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 2513, column: 2)
!9056 = !DILocalVariable(name: "funcs", scope: !9057, file: !3, line: 2514, type: !5600)
!9057 = distinct !DILexicalBlock(scope: !9053, file: !3, line: 2513, column: 88)
!9058 = !DILocation(line: 2514, column: 40, scope: !9057)
!9059 = !DILocalVariable(name: "disabling", scope: !9057, file: !3, line: 2515, type: !315)
!9060 = !DILocation(line: 2515, column: 8, scope: !9057)
!9061 = !DILocation(line: 2517, column: 11, scope: !9057)
!9062 = !DILocation(line: 2517, column: 18, scope: !9057)
!9063 = !DILocation(line: 2517, column: 9, scope: !9057)
!9064 = !DILocation(line: 2519, column: 8, scope: !9065)
!9065 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 2519, column: 7)
!9066 = !DILocation(line: 2519, column: 7, scope: !9057)
!9067 = !DILocation(line: 2520, column: 4, scope: !9065)
!9068 = !DILocation(line: 2522, column: 42, scope: !9057)
!9069 = !DILocation(line: 2523, column: 14, scope: !9057)
!9070 = !DILocation(line: 2522, column: 15, scope: !9057)
!9071 = !DILocation(line: 2522, column: 13, scope: !9057)
!9072 = !DILocation(line: 2525, column: 7, scope: !9073)
!9073 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 2525, column: 7)
!9074 = !DILocation(line: 2525, column: 7, scope: !9057)
!9075 = !DILocation(line: 2533, column: 9, scope: !9076)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 2533, column: 8)
!9077 = distinct !DILexicalBlock(scope: !9073, file: !3, line: 2525, column: 20)
!9078 = !DILocation(line: 2533, column: 19, scope: !9076)
!9079 = !DILocation(line: 2533, column: 41, scope: !9076)
!9080 = !DILocation(line: 2533, column: 23, scope: !9076)
!9081 = !DILocation(line: 2533, column: 8, scope: !9077)
!9082 = !DILocation(line: 2534, column: 5, scope: !9076)
!9083 = !DILocation(line: 2535, column: 8, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9077, file: !3, line: 2535, column: 8)
!9085 = !DILocation(line: 2535, column: 18, scope: !9084)
!9086 = !DILocation(line: 2535, column: 40, scope: !9084)
!9087 = !DILocation(line: 2535, column: 22, scope: !9084)
!9088 = !DILocation(line: 2535, column: 8, scope: !9077)
!9089 = !DILocation(line: 2536, column: 5, scope: !9084)
!9090 = !DILocation(line: 2537, column: 3, scope: !9077)
!9091 = !DILocation(line: 2542, column: 7, scope: !9092)
!9092 = distinct !DILexicalBlock(scope: !9057, file: !3, line: 2542, column: 7)
!9093 = !DILocation(line: 2542, column: 17, scope: !9092)
!9094 = !DILocation(line: 2542, column: 20, scope: !9092)
!9095 = !DILocation(line: 2542, column: 27, scope: !9092)
!9096 = !DILocation(line: 2542, column: 7, scope: !9057)
!9097 = !DILocalVariable(name: "crtc_state", scope: !9098, file: !3, line: 2543, type: !4807)
!9098 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 2542, column: 43)
!9099 = !DILocation(line: 2543, column: 27, scope: !9098)
!9100 = !DILocation(line: 2545, column: 17, scope: !9098)
!9101 = !DILocation(line: 2545, column: 34, scope: !9098)
!9102 = !DILocation(line: 2545, column: 40, scope: !9098)
!9103 = !DILocation(line: 2545, column: 15, scope: !9098)
!9104 = !DILocation(line: 2547, column: 38, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9098, file: !3, line: 2547, column: 8)
!9106 = !DILocation(line: 2547, column: 8, scope: !9105)
!9107 = !DILocation(line: 2547, column: 50, scope: !9105)
!9108 = !DILocation(line: 2548, column: 8, scope: !9105)
!9109 = !DILocation(line: 2547, column: 8, scope: !9098)
!9110 = !DILocation(line: 2549, column: 5, scope: !9105)
!9111 = !DILocation(line: 2551, column: 4, scope: !9098)
!9112 = !DILocation(line: 2551, column: 11, scope: !9098)
!9113 = !DILocation(line: 2551, column: 26, scope: !9098)
!9114 = !DILocation(line: 2551, column: 33, scope: !9098)
!9115 = !DILocation(line: 2552, column: 3, scope: !9098)
!9116 = !DILocation(line: 2552, column: 14, scope: !9117)
!9117 = distinct !DILexicalBlock(scope: !9092, file: !3, line: 2552, column: 14)
!9118 = !DILocation(line: 2552, column: 31, scope: !9117)
!9119 = !DILocation(line: 2552, column: 36, scope: !9117)
!9120 = !DILocation(line: 2552, column: 39, scope: !9117)
!9121 = !DILocation(line: 2552, column: 14, scope: !9092)
!9122 = !DILocation(line: 2553, column: 4, scope: !9123)
!9123 = distinct !DILexicalBlock(scope: !9117, file: !3, line: 2552, column: 50)
!9124 = !DILocation(line: 2553, column: 11, scope: !9123)
!9125 = !DILocation(line: 2553, column: 25, scope: !9123)
!9126 = !DILocation(line: 2553, column: 32, scope: !9123)
!9127 = !DILocation(line: 2554, column: 3, scope: !9123)
!9128 = distinct !{!9128, !9048, !9129}
!9129 = !DILocation(line: 2555, column: 2, scope: !9049)
!9130 = !DILocation(line: 2557, column: 2, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 2557, column: 2)
!9132 = !DILocation(line: 2557, column: 2, scope: !9133)
!9133 = distinct !DILexicalBlock(scope: !9131, file: !3, line: 2557, column: 2)
!9134 = !DILocation(line: 2557, column: 2, scope: !9135)
!9135 = distinct !DILexicalBlock(scope: !9133, file: !3, line: 2557, column: 2)
!9136 = !DILocation(line: 2557, column: 2, scope: !9137)
!9137 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2557, column: 2)
!9138 = !DILocalVariable(name: "funcs", scope: !9139, file: !3, line: 2558, type: !5411)
!9139 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 2557, column: 84)
!9140 = !DILocation(line: 2558, column: 39, scope: !9139)
!9141 = !DILocation(line: 2560, column: 11, scope: !9139)
!9142 = !DILocation(line: 2560, column: 17, scope: !9139)
!9143 = !DILocation(line: 2560, column: 9, scope: !9139)
!9144 = !DILocation(line: 2562, column: 8, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 2562, column: 7)
!9146 = !DILocation(line: 2562, column: 14, scope: !9145)
!9147 = !DILocation(line: 2562, column: 18, scope: !9145)
!9148 = !DILocation(line: 2562, column: 25, scope: !9145)
!9149 = !DILocation(line: 2562, column: 7, scope: !9139)
!9150 = !DILocation(line: 2563, column: 4, scope: !9145)
!9151 = !DILocation(line: 2565, column: 7, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 2565, column: 7)
!9153 = !DILocation(line: 2565, column: 19, scope: !9152)
!9154 = !DILocation(line: 2565, column: 23, scope: !9152)
!9155 = !DILocation(line: 2565, column: 39, scope: !9152)
!9156 = !DILocation(line: 2565, column: 7, scope: !9139)
!9157 = !DILocation(line: 2566, column: 4, scope: !9152)
!9158 = !DILocation(line: 2568, column: 3, scope: !9139)
!9159 = !DILocation(line: 2568, column: 10, scope: !9139)
!9160 = !DILocation(line: 2568, column: 23, scope: !9139)
!9161 = !DILocation(line: 2568, column: 29, scope: !9139)
!9162 = distinct !{!9162, !9130, !9163}
!9163 = !DILocation(line: 2569, column: 2, scope: !9131)
!9164 = !DILocation(line: 2570, column: 1, scope: !8983)
!9165 = distinct !DISubprogram(name: "drm_atomic_helper_fake_vblank", scope: !3, file: !3, line: 2269, type: !5691, scopeLine: 2270, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9166 = !DILocalVariable(name: "lock", arg: 1, scope: !9167, file: !9168, line: 407, type: !940)
!9167 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !9168, file: !9168, line: 407, type: !9169, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9168 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!9169 = !DISubroutineType(types: !9170)
!9170 = !{null, !940, !146}
!9171 = !DILocation(line: 407, column: 64, scope: !9167, inlinedAt: !9172)
!9172 = distinct !DILocation(line: 2287, column: 3, scope: !9173)
!9173 = distinct !DILexicalBlock(scope: !9174, file: !3, line: 2275, column: 65)
!9174 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 2275, column: 2)
!9175 = distinct !DILexicalBlock(scope: !9176, file: !3, line: 2275, column: 2)
!9176 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 2275, column: 2)
!9177 = !DILocalVariable(name: "flags", arg: 2, scope: !9167, file: !9168, line: 407, type: !146)
!9178 = !DILocation(line: 407, column: 84, scope: !9167, inlinedAt: !9172)
!9179 = !DILocalVariable(name: "lock", arg: 1, scope: !9180, file: !9168, line: 327, type: !940)
!9180 = distinct !DISubprogram(name: "spinlock_check", scope: !9168, file: !9168, line: 327, type: !9181, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9181 = !DISubroutineType(types: !9182)
!9182 = !{!9183, !940}
!9183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!9184 = !DILocation(line: 327, column: 67, scope: !9180, inlinedAt: !9185)
!9185 = distinct !DILocation(line: 2281, column: 3, scope: !9186)
!9186 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 2281, column: 3)
!9187 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2281, column: 3)
!9188 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 2281, column: 3)
!9189 = distinct !DILexicalBlock(scope: !9190, file: !3, line: 2281, column: 3)
!9190 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2281, column: 3)
!9191 = !DILocalVariable(name: "old_state", arg: 1, scope: !9165, file: !3, line: 2269, type: !4520)
!9192 = !DILocation(line: 2269, column: 61, scope: !9165)
!9193 = !DILocalVariable(name: "new_crtc_state", scope: !9165, file: !3, line: 2271, type: !4807)
!9194 = !DILocation(line: 2271, column: 25, scope: !9165)
!9195 = !DILocalVariable(name: "crtc", scope: !9165, file: !3, line: 2272, type: !4551)
!9196 = !DILocation(line: 2272, column: 19, scope: !9165)
!9197 = !DILocalVariable(name: "i", scope: !9165, file: !3, line: 2273, type: !18)
!9198 = !DILocation(line: 2273, column: 6, scope: !9165)
!9199 = !DILocation(line: 2275, column: 2, scope: !9176)
!9200 = !DILocation(line: 2275, column: 2, scope: !9175)
!9201 = !DILocation(line: 2275, column: 2, scope: !9174)
!9202 = !DILocation(line: 2275, column: 2, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9174, file: !3, line: 2275, column: 2)
!9204 = !DILocalVariable(name: "flags", scope: !9173, file: !3, line: 2276, type: !146)
!9205 = !DILocation(line: 2276, column: 17, scope: !9173)
!9206 = !DILocation(line: 2278, column: 8, scope: !9207)
!9207 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2278, column: 7)
!9208 = !DILocation(line: 2278, column: 24, scope: !9207)
!9209 = !DILocation(line: 2278, column: 7, scope: !9173)
!9210 = !DILocation(line: 2279, column: 4, scope: !9207)
!9211 = !DILocation(line: 2281, column: 3, scope: !9173)
!9212 = !DILocation(line: 2281, column: 3, scope: !9190)
!9213 = !DILocalVariable(name: "__dummy", scope: !9214, file: !3, line: 2281, type: !146)
!9214 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 2281, column: 3)
!9215 = !DILocation(line: 2281, column: 3, scope: !9214)
!9216 = !DILocalVariable(name: "__dummy2", scope: !9214, file: !3, line: 2281, type: !146)
!9217 = !DILocation(line: 2281, column: 3, scope: !9189)
!9218 = !DILocation(line: 2281, column: 3, scope: !9188)
!9219 = !DILocation(line: 2281, column: 3, scope: !9220)
!9220 = distinct !DILexicalBlock(scope: !9188, file: !3, line: 2281, column: 3)
!9221 = !DILocalVariable(name: "__dummy", scope: !9222, file: !3, line: 2281, type: !146)
!9222 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 2281, column: 3)
!9223 = distinct !DILexicalBlock(scope: !9220, file: !3, line: 2281, column: 3)
!9224 = !DILocation(line: 2281, column: 3, scope: !9222)
!9225 = !DILocalVariable(name: "__dummy2", scope: !9222, file: !3, line: 2281, type: !146)
!9226 = !DILocation(line: 2281, column: 3, scope: !9223)
!9227 = !DILocation(line: 2281, column: 3, scope: !9187)
!9228 = !{i32 -2140133381}
!9229 = !DILocation(line: 2281, column: 3, scope: !9186)
!9230 = !DILocation(line: 329, column: 10, scope: !9180, inlinedAt: !9185)
!9231 = !DILocation(line: 329, column: 16, scope: !9180, inlinedAt: !9185)
!9232 = !DILocation(line: 2282, column: 7, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9173, file: !3, line: 2282, column: 7)
!9234 = !DILocation(line: 2282, column: 23, scope: !9233)
!9235 = !DILocation(line: 2282, column: 7, scope: !9173)
!9236 = !DILocation(line: 2283, column: 31, scope: !9237)
!9237 = distinct !DILexicalBlock(scope: !9233, file: !3, line: 2282, column: 30)
!9238 = !DILocation(line: 2284, column: 10, scope: !9237)
!9239 = !DILocation(line: 2284, column: 26, scope: !9237)
!9240 = !DILocation(line: 2283, column: 4, scope: !9237)
!9241 = !DILocation(line: 2285, column: 4, scope: !9237)
!9242 = !DILocation(line: 2285, column: 20, scope: !9237)
!9243 = !DILocation(line: 2285, column: 26, scope: !9237)
!9244 = !DILocation(line: 2286, column: 3, scope: !9237)
!9245 = !DILocation(line: 2287, column: 27, scope: !9173)
!9246 = !DILocation(line: 2287, column: 38, scope: !9173)
!9247 = !DILocation(line: 2287, column: 43, scope: !9173)
!9248 = !DILocation(line: 2287, column: 55, scope: !9173)
!9249 = !DILocalVariable(name: "__dummy", scope: !9250, file: !9168, line: 409, type: !146)
!9250 = distinct !DILexicalBlock(scope: !9251, file: !9168, line: 409, column: 2)
!9251 = distinct !DILexicalBlock(scope: !9167, file: !9168, line: 409, column: 2)
!9252 = !DILocation(line: 409, column: 2, scope: !9250, inlinedAt: !9172)
!9253 = !DILocalVariable(name: "__dummy2", scope: !9250, file: !9168, line: 409, type: !146)
!9254 = !DILocalVariable(name: "__dummy", scope: !9255, file: !9168, line: 409, type: !146)
!9255 = distinct !DILexicalBlock(scope: !9256, file: !9168, line: 409, column: 2)
!9256 = distinct !DILexicalBlock(scope: !9257, file: !9168, line: 409, column: 2)
!9257 = distinct !DILexicalBlock(scope: !9258, file: !9168, line: 409, column: 2)
!9258 = distinct !DILexicalBlock(scope: !9251, file: !9168, line: 409, column: 2)
!9259 = !DILocation(line: 409, column: 2, scope: !9255, inlinedAt: !9172)
!9260 = !DILocalVariable(name: "__dummy2", scope: !9255, file: !9168, line: 409, type: !146)
!9261 = !DILocation(line: 409, column: 2, scope: !9256, inlinedAt: !9172)
!9262 = !DILocation(line: 409, column: 2, scope: !9263, inlinedAt: !9172)
!9263 = distinct !DILexicalBlock(scope: !9258, file: !9168, line: 409, column: 2)
!9264 = !{i32 -2145453075}
!9265 = !DILocation(line: 409, column: 2, scope: !9266, inlinedAt: !9172)
!9266 = distinct !DILexicalBlock(scope: !9263, file: !9168, line: 409, column: 2)
!9267 = distinct !{!9267, !9199, !9268}
!9268 = !DILocation(line: 2288, column: 2, scope: !9176)
!9269 = !DILocation(line: 2289, column: 1, scope: !9165)
!9270 = distinct !DISubprogram(name: "drm_atomic_helper_commit_hw_done", scope: !3, file: !3, line: 2307, type: !5691, scopeLine: 2308, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9271 = !DILocalVariable(name: "old_state", arg: 1, scope: !9270, file: !3, line: 2307, type: !4520)
!9272 = !DILocation(line: 2307, column: 64, scope: !9270)
!9273 = !DILocalVariable(name: "crtc", scope: !9270, file: !3, line: 2309, type: !4551)
!9274 = !DILocation(line: 2309, column: 19, scope: !9270)
!9275 = !DILocalVariable(name: "old_crtc_state", scope: !9270, file: !3, line: 2310, type: !4807)
!9276 = !DILocation(line: 2310, column: 25, scope: !9270)
!9277 = !DILocalVariable(name: "new_crtc_state", scope: !9270, file: !3, line: 2310, type: !4807)
!9278 = !DILocation(line: 2310, column: 42, scope: !9270)
!9279 = !DILocalVariable(name: "commit", scope: !9270, file: !3, line: 2311, type: !4932)
!9280 = !DILocation(line: 2311, column: 26, scope: !9270)
!9281 = !DILocalVariable(name: "i", scope: !9270, file: !3, line: 2312, type: !18)
!9282 = !DILocation(line: 2312, column: 6, scope: !9270)
!9283 = !DILocation(line: 2314, column: 2, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2314, column: 2)
!9285 = !DILocation(line: 2314, column: 2, scope: !9286)
!9286 = distinct !DILexicalBlock(scope: !9284, file: !3, line: 2314, column: 2)
!9287 = !DILocation(line: 2314, column: 2, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9286, file: !3, line: 2314, column: 2)
!9289 = !DILocation(line: 2314, column: 2, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 2314, column: 2)
!9291 = !DILocation(line: 2315, column: 12, scope: !9292)
!9292 = distinct !DILexicalBlock(scope: !9288, file: !3, line: 2314, column: 84)
!9293 = !DILocation(line: 2315, column: 28, scope: !9292)
!9294 = !DILocation(line: 2315, column: 10, scope: !9292)
!9295 = !DILocation(line: 2316, column: 8, scope: !9296)
!9296 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 2316, column: 7)
!9297 = !DILocation(line: 2316, column: 7, scope: !9292)
!9298 = !DILocation(line: 2317, column: 4, scope: !9296)
!9299 = !DILocation(line: 2324, column: 7, scope: !9300)
!9300 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 2324, column: 7)
!9301 = !DILocation(line: 2324, column: 23, scope: !9300)
!9302 = !DILocation(line: 2324, column: 7, scope: !9292)
!9303 = !DILocation(line: 2325, column: 24, scope: !9300)
!9304 = !DILocation(line: 2325, column: 40, scope: !9300)
!9305 = !DILocation(line: 2325, column: 4, scope: !9300)
!9306 = !DILocation(line: 2327, column: 48, scope: !9292)
!9307 = !DILocation(line: 2327, column: 28, scope: !9292)
!9308 = !DILocation(line: 2327, column: 3, scope: !9292)
!9309 = !DILocation(line: 2327, column: 19, scope: !9292)
!9310 = !DILocation(line: 2327, column: 26, scope: !9292)
!9311 = !DILocalVariable(name: "__ret_warn_on", scope: !9312, file: !3, line: 2330, type: !18)
!9312 = distinct !DILexicalBlock(scope: !9292, file: !3, line: 2330, column: 3)
!9313 = !DILocation(line: 2330, column: 3, scope: !9312)
!9314 = !DILocation(line: 2330, column: 3, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9312, file: !3, line: 2330, column: 3)
!9316 = !DILocation(line: 2330, column: 3, scope: !9317)
!9317 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 2330, column: 3)
!9318 = !DILocation(line: 2330, column: 3, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2330, column: 3)
!9320 = !DILocation(line: 2330, column: 3, scope: !9321)
!9321 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2330, column: 3)
!9322 = !{i32 -2140131668, i32 -2140131639, i32 -2140131593, i32 -2140131535, i32 -2140131481, i32 -2140131427, i32 -2140131372, i32 -2140131341}
!9323 = !DILocation(line: 2330, column: 3, scope: !9324)
!9324 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2330, column: 3)
!9325 = !{i32 -2140130923, i32 -2140130916, i32 -2140130864, i32 -2140130833, i32 -2140130803}
!9326 = !DILocation(line: 2330, column: 3, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9317, file: !3, line: 2330, column: 3)
!9328 = !DILocation(line: 2331, column: 17, scope: !9292)
!9329 = !DILocation(line: 2331, column: 25, scope: !9292)
!9330 = !DILocation(line: 2331, column: 3, scope: !9292)
!9331 = distinct !{!9331, !9283, !9332}
!9332 = !DILocation(line: 2332, column: 2, scope: !9284)
!9333 = !DILocation(line: 2334, column: 6, scope: !9334)
!9334 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2334, column: 6)
!9335 = !DILocation(line: 2334, column: 17, scope: !9334)
!9336 = !DILocation(line: 2334, column: 6, scope: !9270)
!9337 = !DILocation(line: 2335, column: 17, scope: !9338)
!9338 = distinct !DILexicalBlock(scope: !9334, file: !3, line: 2334, column: 30)
!9339 = !DILocation(line: 2335, column: 28, scope: !9338)
!9340 = !DILocation(line: 2335, column: 41, scope: !9338)
!9341 = !DILocation(line: 2335, column: 3, scope: !9338)
!9342 = !DILocation(line: 2336, column: 17, scope: !9338)
!9343 = !DILocation(line: 2336, column: 28, scope: !9338)
!9344 = !DILocation(line: 2336, column: 41, scope: !9338)
!9345 = !DILocation(line: 2336, column: 3, scope: !9338)
!9346 = !DILocation(line: 2337, column: 2, scope: !9338)
!9347 = !DILocation(line: 2338, column: 1, scope: !9270)
!9348 = distinct !DISubprogram(name: "drm_atomic_helper_cleanup_planes", scope: !3, file: !3, line: 2693, type: !4, scopeLine: 2695, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9349 = !DILocalVariable(name: "dev", arg: 1, scope: !9348, file: !3, line: 2693, type: !6)
!9350 = !DILocation(line: 2693, column: 58, scope: !9348)
!9351 = !DILocalVariable(name: "old_state", arg: 2, scope: !9348, file: !3, line: 2694, type: !4520)
!9352 = !DILocation(line: 2694, column: 36, scope: !9348)
!9353 = !DILocalVariable(name: "plane", scope: !9348, file: !3, line: 2696, type: !4535)
!9354 = !DILocation(line: 2696, column: 20, scope: !9348)
!9355 = !DILocalVariable(name: "old_plane_state", scope: !9348, file: !3, line: 2697, type: !5517)
!9356 = !DILocation(line: 2697, column: 26, scope: !9348)
!9357 = !DILocalVariable(name: "new_plane_state", scope: !9348, file: !3, line: 2697, type: !5517)
!9358 = !DILocation(line: 2697, column: 44, scope: !9348)
!9359 = !DILocalVariable(name: "i", scope: !9348, file: !3, line: 2698, type: !18)
!9360 = !DILocation(line: 2698, column: 6, scope: !9348)
!9361 = !DILocation(line: 2700, column: 2, scope: !9362)
!9362 = distinct !DILexicalBlock(scope: !9348, file: !3, line: 2700, column: 2)
!9363 = !DILocation(line: 2700, column: 2, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9362, file: !3, line: 2700, column: 2)
!9365 = !DILocation(line: 2700, column: 2, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9364, file: !3, line: 2700, column: 2)
!9367 = !DILocation(line: 2700, column: 2, scope: !9368)
!9368 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2700, column: 2)
!9369 = !DILocalVariable(name: "funcs", scope: !9370, file: !3, line: 2701, type: !5600)
!9370 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2700, column: 88)
!9371 = !DILocation(line: 2701, column: 40, scope: !9370)
!9372 = !DILocalVariable(name: "plane_state", scope: !9370, file: !3, line: 2702, type: !5517)
!9373 = !DILocation(line: 2702, column: 27, scope: !9370)
!9374 = !DILocation(line: 2708, column: 7, scope: !9375)
!9375 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 2708, column: 7)
!9376 = !DILocation(line: 2708, column: 26, scope: !9375)
!9377 = !DILocation(line: 2708, column: 33, scope: !9375)
!9378 = !DILocation(line: 2708, column: 23, scope: !9375)
!9379 = !DILocation(line: 2708, column: 7, scope: !9370)
!9380 = !DILocation(line: 2709, column: 18, scope: !9375)
!9381 = !DILocation(line: 2709, column: 16, scope: !9375)
!9382 = !DILocation(line: 2709, column: 4, scope: !9375)
!9383 = !DILocation(line: 2711, column: 18, scope: !9375)
!9384 = !DILocation(line: 2711, column: 16, scope: !9375)
!9385 = !DILocation(line: 2713, column: 11, scope: !9370)
!9386 = !DILocation(line: 2713, column: 18, scope: !9370)
!9387 = !DILocation(line: 2713, column: 9, scope: !9370)
!9388 = !DILocation(line: 2715, column: 7, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 2715, column: 7)
!9390 = !DILocation(line: 2715, column: 14, scope: !9389)
!9391 = !DILocation(line: 2715, column: 7, scope: !9370)
!9392 = !DILocation(line: 2716, column: 4, scope: !9389)
!9393 = !DILocation(line: 2716, column: 11, scope: !9389)
!9394 = !DILocation(line: 2716, column: 22, scope: !9389)
!9395 = !DILocation(line: 2716, column: 29, scope: !9389)
!9396 = distinct !{!9396, !9361, !9397}
!9397 = !DILocation(line: 2717, column: 2, scope: !9362)
!9398 = !DILocation(line: 2718, column: 1, scope: !9348)
!9399 = distinct !DISubprogram(name: "drm_atomic_helper_commit_tail_rpm", scope: !3, file: !3, line: 1604, type: !5691, scopeLine: 1605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9400 = !DILocalVariable(name: "old_state", arg: 1, scope: !9399, file: !3, line: 1604, type: !4520)
!9401 = !DILocation(line: 1604, column: 65, scope: !9399)
!9402 = !DILocalVariable(name: "dev", scope: !9399, file: !3, line: 1606, type: !6)
!9403 = !DILocation(line: 1606, column: 21, scope: !9399)
!9404 = !DILocation(line: 1606, column: 27, scope: !9399)
!9405 = !DILocation(line: 1606, column: 38, scope: !9399)
!9406 = !DILocation(line: 1608, column: 44, scope: !9399)
!9407 = !DILocation(line: 1608, column: 49, scope: !9399)
!9408 = !DILocation(line: 1608, column: 2, scope: !9399)
!9409 = !DILocation(line: 1610, column: 43, scope: !9399)
!9410 = !DILocation(line: 1610, column: 48, scope: !9399)
!9411 = !DILocation(line: 1610, column: 2, scope: !9399)
!9412 = !DILocation(line: 1612, column: 34, scope: !9399)
!9413 = !DILocation(line: 1612, column: 39, scope: !9399)
!9414 = !DILocation(line: 1612, column: 2, scope: !9399)
!9415 = !DILocation(line: 1615, column: 32, scope: !9399)
!9416 = !DILocation(line: 1615, column: 2, scope: !9399)
!9417 = !DILocation(line: 1617, column: 35, scope: !9399)
!9418 = !DILocation(line: 1617, column: 2, scope: !9399)
!9419 = !DILocation(line: 1619, column: 37, scope: !9399)
!9420 = !DILocation(line: 1619, column: 42, scope: !9399)
!9421 = !DILocation(line: 1619, column: 2, scope: !9399)
!9422 = !DILocation(line: 1621, column: 35, scope: !9399)
!9423 = !DILocation(line: 1621, column: 40, scope: !9399)
!9424 = !DILocation(line: 1621, column: 2, scope: !9399)
!9425 = !DILocation(line: 1622, column: 1, scope: !9399)
!9426 = distinct !DISubprogram(name: "drm_atomic_helper_async_commit", scope: !3, file: !3, line: 1759, type: !4, scopeLine: 1761, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9427 = !DILocalVariable(name: "dev", arg: 1, scope: !9426, file: !3, line: 1759, type: !6)
!9428 = !DILocation(line: 1759, column: 56, scope: !9426)
!9429 = !DILocalVariable(name: "state", arg: 2, scope: !9426, file: !3, line: 1760, type: !4520)
!9430 = !DILocation(line: 1760, column: 34, scope: !9426)
!9431 = !DILocalVariable(name: "plane", scope: !9426, file: !3, line: 1762, type: !4535)
!9432 = !DILocation(line: 1762, column: 20, scope: !9426)
!9433 = !DILocalVariable(name: "plane_state", scope: !9426, file: !3, line: 1763, type: !5517)
!9434 = !DILocation(line: 1763, column: 26, scope: !9426)
!9435 = !DILocalVariable(name: "funcs", scope: !9426, file: !3, line: 1764, type: !5600)
!9436 = !DILocation(line: 1764, column: 39, scope: !9426)
!9437 = !DILocalVariable(name: "i", scope: !9426, file: !3, line: 1765, type: !18)
!9438 = !DILocation(line: 1765, column: 6, scope: !9426)
!9439 = !DILocation(line: 1767, column: 2, scope: !9440)
!9440 = distinct !DILexicalBlock(scope: !9426, file: !3, line: 1767, column: 2)
!9441 = !DILocation(line: 1767, column: 2, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9440, file: !3, line: 1767, column: 2)
!9443 = !DILocation(line: 1767, column: 2, scope: !9444)
!9444 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 1767, column: 2)
!9445 = !DILocation(line: 1767, column: 2, scope: !9446)
!9446 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1767, column: 2)
!9447 = !DILocalVariable(name: "new_fb", scope: !9448, file: !3, line: 1768, type: !4409)
!9448 = distinct !DILexicalBlock(scope: !9444, file: !3, line: 1767, column: 60)
!9449 = !DILocation(line: 1768, column: 27, scope: !9448)
!9450 = !DILocation(line: 1768, column: 36, scope: !9448)
!9451 = !DILocation(line: 1768, column: 49, scope: !9448)
!9452 = !DILocalVariable(name: "old_fb", scope: !9448, file: !3, line: 1769, type: !4409)
!9453 = !DILocation(line: 1769, column: 27, scope: !9448)
!9454 = !DILocation(line: 1769, column: 36, scope: !9448)
!9455 = !DILocation(line: 1769, column: 43, scope: !9448)
!9456 = !DILocation(line: 1769, column: 50, scope: !9448)
!9457 = !DILocation(line: 1771, column: 11, scope: !9448)
!9458 = !DILocation(line: 1771, column: 18, scope: !9448)
!9459 = !DILocation(line: 1771, column: 9, scope: !9448)
!9460 = !DILocation(line: 1772, column: 3, scope: !9448)
!9461 = !DILocation(line: 1772, column: 10, scope: !9448)
!9462 = !DILocation(line: 1772, column: 30, scope: !9448)
!9463 = !DILocation(line: 1772, column: 37, scope: !9448)
!9464 = !DILocalVariable(name: "__ret_warn_on", scope: !9465, file: !3, line: 1779, type: !18)
!9465 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 1779, column: 3)
!9466 = !DILocation(line: 1779, column: 3, scope: !9465)
!9467 = !DILocation(line: 1779, column: 3, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9465, file: !3, line: 1779, column: 3)
!9469 = !DILocation(line: 1779, column: 3, scope: !9470)
!9470 = distinct !DILexicalBlock(scope: !9468, file: !3, line: 1779, column: 3)
!9471 = !DILocation(line: 1779, column: 3, scope: !9472)
!9472 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1779, column: 3)
!9473 = !DILocation(line: 1779, column: 3, scope: !9474)
!9474 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1779, column: 3)
!9475 = !{i32 -2140156153, i32 -2140156124, i32 -2140156078, i32 -2140156020, i32 -2140155966, i32 -2140155912, i32 -2140155857, i32 -2140155826}
!9476 = !DILocation(line: 1779, column: 3, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1779, column: 3)
!9478 = !{i32 -2140155397, i32 -2140155390, i32 -2140155338, i32 -2140155307, i32 -2140155277}
!9479 = !DILocation(line: 1779, column: 3, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9470, file: !3, line: 1779, column: 3)
!9481 = !DILocalVariable(name: "__ret_warn_on", scope: !9482, file: !3, line: 1780, type: !18)
!9482 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 1780, column: 3)
!9483 = !DILocation(line: 1780, column: 3, scope: !9482)
!9484 = !DILocation(line: 1780, column: 3, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 1780, column: 3)
!9486 = !DILocation(line: 1780, column: 3, scope: !9487)
!9487 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1780, column: 3)
!9488 = !DILocation(line: 1780, column: 3, scope: !9489)
!9489 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 1780, column: 3)
!9490 = !DILocation(line: 1780, column: 3, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 1780, column: 3)
!9492 = !{i32 -2140154634, i32 -2140154605, i32 -2140154559, i32 -2140154501, i32 -2140154447, i32 -2140154393, i32 -2140154338, i32 -2140154307}
!9493 = !DILocation(line: 1780, column: 3, scope: !9494)
!9494 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 1780, column: 3)
!9495 = !{i32 -2140153878, i32 -2140153871, i32 -2140153819, i32 -2140153788, i32 -2140153758}
!9496 = !DILocation(line: 1780, column: 3, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 1780, column: 3)
!9498 = !DILocalVariable(name: "__ret_warn_on", scope: !9499, file: !3, line: 1781, type: !18)
!9499 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 1781, column: 3)
!9500 = !DILocation(line: 1781, column: 3, scope: !9499)
!9501 = !DILocation(line: 1781, column: 3, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 1781, column: 3)
!9503 = !DILocation(line: 1781, column: 3, scope: !9504)
!9504 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1781, column: 3)
!9505 = !DILocation(line: 1781, column: 3, scope: !9506)
!9506 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 1781, column: 3)
!9507 = !DILocation(line: 1781, column: 3, scope: !9508)
!9508 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 1781, column: 3)
!9509 = !{i32 -2140153115, i32 -2140153086, i32 -2140153040, i32 -2140152982, i32 -2140152928, i32 -2140152874, i32 -2140152819, i32 -2140152788}
!9510 = !DILocation(line: 1781, column: 3, scope: !9511)
!9511 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 1781, column: 3)
!9512 = !{i32 -2140152359, i32 -2140152352, i32 -2140152300, i32 -2140152269, i32 -2140152239}
!9513 = !DILocation(line: 1781, column: 3, scope: !9514)
!9514 = distinct !DILexicalBlock(scope: !9504, file: !3, line: 1781, column: 3)
!9515 = !DILocalVariable(name: "__ret_warn_on", scope: !9516, file: !3, line: 1782, type: !18)
!9516 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 1782, column: 3)
!9517 = !DILocation(line: 1782, column: 3, scope: !9516)
!9518 = !DILocation(line: 1782, column: 3, scope: !9519)
!9519 = distinct !DILexicalBlock(scope: !9516, file: !3, line: 1782, column: 3)
!9520 = !DILocation(line: 1782, column: 3, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9519, file: !3, line: 1782, column: 3)
!9522 = !DILocation(line: 1782, column: 3, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1782, column: 3)
!9524 = !DILocation(line: 1782, column: 3, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1782, column: 3)
!9526 = !{i32 -2140151598, i32 -2140151569, i32 -2140151523, i32 -2140151465, i32 -2140151411, i32 -2140151357, i32 -2140151302, i32 -2140151271}
!9527 = !DILocation(line: 1782, column: 3, scope: !9528)
!9528 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1782, column: 3)
!9529 = !{i32 -2140150842, i32 -2140150835, i32 -2140150783, i32 -2140150752, i32 -2140150722}
!9530 = !DILocation(line: 1782, column: 3, scope: !9531)
!9531 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1782, column: 3)
!9532 = !DILocalVariable(name: "__ret_warn_on", scope: !9533, file: !3, line: 1783, type: !18)
!9533 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 1783, column: 3)
!9534 = !DILocation(line: 1783, column: 3, scope: !9533)
!9535 = !DILocation(line: 1783, column: 3, scope: !9536)
!9536 = distinct !DILexicalBlock(scope: !9533, file: !3, line: 1783, column: 3)
!9537 = !DILocation(line: 1783, column: 3, scope: !9538)
!9538 = distinct !DILexicalBlock(scope: !9536, file: !3, line: 1783, column: 3)
!9539 = !DILocation(line: 1783, column: 3, scope: !9540)
!9540 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1783, column: 3)
!9541 = !DILocation(line: 1783, column: 3, scope: !9542)
!9542 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1783, column: 3)
!9543 = !{i32 -2140150081, i32 -2140150052, i32 -2140150006, i32 -2140149948, i32 -2140149894, i32 -2140149840, i32 -2140149785, i32 -2140149754}
!9544 = !DILocation(line: 1783, column: 3, scope: !9545)
!9545 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1783, column: 3)
!9546 = !{i32 -2140149325, i32 -2140149318, i32 -2140149266, i32 -2140149235, i32 -2140149205}
!9547 = !DILocation(line: 1783, column: 3, scope: !9548)
!9548 = distinct !DILexicalBlock(scope: !9538, file: !3, line: 1783, column: 3)
!9549 = !DILocalVariable(name: "__ret_warn_on", scope: !9550, file: !3, line: 1789, type: !18)
!9550 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 1789, column: 3)
!9551 = !DILocation(line: 1789, column: 3, scope: !9550)
!9552 = !DILocation(line: 1789, column: 3, scope: !9553)
!9553 = distinct !DILexicalBlock(scope: !9550, file: !3, line: 1789, column: 3)
!9554 = !DILocation(line: 1789, column: 3, scope: !9555)
!9555 = distinct !DILexicalBlock(scope: !9553, file: !3, line: 1789, column: 3)
!9556 = !DILocation(line: 1789, column: 3, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 1789, column: 3)
!9558 = !DILocation(line: 1789, column: 3, scope: !9559)
!9559 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 1789, column: 3)
!9560 = !{i32 -2140148580, i32 -2140148551, i32 -2140148505, i32 -2140148447, i32 -2140148393, i32 -2140148339, i32 -2140148284, i32 -2140148253}
!9561 = !DILocation(line: 1789, column: 3, scope: !9562)
!9562 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 1789, column: 3)
!9563 = !{i32 -2140147824, i32 -2140147817, i32 -2140147765, i32 -2140147734, i32 -2140147704}
!9564 = !DILocation(line: 1789, column: 3, scope: !9565)
!9565 = distinct !DILexicalBlock(scope: !9555, file: !3, line: 1789, column: 3)
!9566 = distinct !{!9566, !9439, !9567}
!9567 = !DILocation(line: 1790, column: 2, scope: !9440)
!9568 = !DILocation(line: 1791, column: 1, scope: !9426)
!9569 = distinct !DISubprogram(name: "drm_atomic_helper_commit", scope: !3, file: !3, line: 1812, type: !5683, scopeLine: 1815, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9570 = !DILocalVariable(name: "dev", arg: 1, scope: !9569, file: !3, line: 1812, type: !6)
!9571 = !DILocation(line: 1812, column: 49, scope: !9569)
!9572 = !DILocalVariable(name: "state", arg: 2, scope: !9569, file: !3, line: 1813, type: !4520)
!9573 = !DILocation(line: 1813, column: 34, scope: !9569)
!9574 = !DILocalVariable(name: "nonblock", arg: 3, scope: !9569, file: !3, line: 1814, type: !315)
!9575 = !DILocation(line: 1814, column: 14, scope: !9569)
!9576 = !DILocalVariable(name: "ret", scope: !9569, file: !3, line: 1816, type: !18)
!9577 = !DILocation(line: 1816, column: 6, scope: !9569)
!9578 = !DILocation(line: 1818, column: 6, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1818, column: 6)
!9580 = !DILocation(line: 1818, column: 13, scope: !9579)
!9581 = !DILocation(line: 1818, column: 6, scope: !9569)
!9582 = !DILocation(line: 1819, column: 42, scope: !9583)
!9583 = distinct !DILexicalBlock(scope: !9579, file: !3, line: 1818, column: 27)
!9584 = !DILocation(line: 1819, column: 47, scope: !9583)
!9585 = !DILocation(line: 1819, column: 9, scope: !9583)
!9586 = !DILocation(line: 1819, column: 7, scope: !9583)
!9587 = !DILocation(line: 1820, column: 7, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9583, file: !3, line: 1820, column: 7)
!9589 = !DILocation(line: 1820, column: 7, scope: !9583)
!9590 = !DILocation(line: 1821, column: 11, scope: !9588)
!9591 = !DILocation(line: 1821, column: 4, scope: !9588)
!9592 = !DILocation(line: 1823, column: 34, scope: !9583)
!9593 = !DILocation(line: 1823, column: 39, scope: !9583)
!9594 = !DILocation(line: 1823, column: 3, scope: !9583)
!9595 = !DILocation(line: 1824, column: 36, scope: !9583)
!9596 = !DILocation(line: 1824, column: 41, scope: !9583)
!9597 = !DILocation(line: 1824, column: 3, scope: !9583)
!9598 = !DILocation(line: 1826, column: 3, scope: !9583)
!9599 = !DILocation(line: 1829, column: 39, scope: !9569)
!9600 = !DILocation(line: 1829, column: 46, scope: !9569)
!9601 = !DILocation(line: 1829, column: 8, scope: !9569)
!9602 = !DILocation(line: 1829, column: 6, scope: !9569)
!9603 = !DILocation(line: 1830, column: 6, scope: !9604)
!9604 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1830, column: 6)
!9605 = !DILocation(line: 1830, column: 6, scope: !9569)
!9606 = !DILocation(line: 1831, column: 10, scope: !9604)
!9607 = !DILocation(line: 1831, column: 3, scope: !9604)
!9608 = !DILocation(line: 1833, column: 2, scope: !9569)
!9609 = !DILocation(line: 1833, column: 2, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1833, column: 2)
!9611 = !DILocation(line: 1835, column: 41, scope: !9569)
!9612 = !DILocation(line: 1835, column: 46, scope: !9569)
!9613 = !DILocation(line: 1835, column: 8, scope: !9569)
!9614 = !DILocation(line: 1835, column: 6, scope: !9569)
!9615 = !DILocation(line: 1836, column: 6, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1836, column: 6)
!9617 = !DILocation(line: 1836, column: 6, scope: !9569)
!9618 = !DILocation(line: 1837, column: 10, scope: !9616)
!9619 = !DILocation(line: 1837, column: 3, scope: !9616)
!9620 = !DILocation(line: 1839, column: 7, scope: !9621)
!9621 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1839, column: 6)
!9622 = !DILocation(line: 1839, column: 6, scope: !9569)
!9623 = !DILocation(line: 1840, column: 43, scope: !9624)
!9624 = distinct !DILexicalBlock(scope: !9621, file: !3, line: 1839, column: 17)
!9625 = !DILocation(line: 1840, column: 48, scope: !9624)
!9626 = !DILocation(line: 1840, column: 9, scope: !9624)
!9627 = !DILocation(line: 1840, column: 7, scope: !9624)
!9628 = !DILocation(line: 1841, column: 7, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9624, file: !3, line: 1841, column: 7)
!9630 = !DILocation(line: 1841, column: 7, scope: !9624)
!9631 = !DILocation(line: 1842, column: 4, scope: !9629)
!9632 = !DILocation(line: 1843, column: 2, scope: !9624)
!9633 = !DILocation(line: 1851, column: 37, scope: !9569)
!9634 = !DILocation(line: 1851, column: 8, scope: !9569)
!9635 = !DILocation(line: 1851, column: 6, scope: !9569)
!9636 = !DILocation(line: 1852, column: 6, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1852, column: 6)
!9638 = !DILocation(line: 1852, column: 6, scope: !9569)
!9639 = !DILocation(line: 1853, column: 3, scope: !9637)
!9640 = !DILocation(line: 1875, column: 23, scope: !9569)
!9641 = !DILocation(line: 1875, column: 2, scope: !9569)
!9642 = !DILocation(line: 1876, column: 6, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9569, file: !3, line: 1876, column: 6)
!9644 = !DILocation(line: 1876, column: 6, scope: !9569)
!9645 = !DILocation(line: 1877, column: 14, scope: !9643)
!9646 = !DILocation(line: 1877, column: 34, scope: !9643)
!9647 = !DILocation(line: 1877, column: 41, scope: !9643)
!9648 = !DILocation(line: 1877, column: 3, scope: !9643)
!9649 = !DILocation(line: 1879, column: 15, scope: !9643)
!9650 = !DILocation(line: 1879, column: 3, scope: !9643)
!9651 = !DILocation(line: 1881, column: 2, scope: !9569)
!9652 = !DILabel(scope: !9569, name: "err", file: !3, line: 1883)
!9653 = !DILocation(line: 1883, column: 1, scope: !9569)
!9654 = !DILocation(line: 1884, column: 35, scope: !9569)
!9655 = !DILocation(line: 1884, column: 40, scope: !9569)
!9656 = !DILocation(line: 1884, column: 2, scope: !9569)
!9657 = !DILocation(line: 1885, column: 9, scope: !9569)
!9658 = !DILocation(line: 1885, column: 2, scope: !9569)
!9659 = !DILocation(line: 1886, column: 1, scope: !9569)
!9660 = distinct !DISubprogram(name: "drm_atomic_helper_prepare_planes", scope: !3, file: !3, line: 2392, type: !4518, scopeLine: 2394, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9661 = !DILocalVariable(name: "dev", arg: 1, scope: !9660, file: !3, line: 2392, type: !6)
!9662 = !DILocation(line: 2392, column: 57, scope: !9660)
!9663 = !DILocalVariable(name: "state", arg: 2, scope: !9660, file: !3, line: 2393, type: !4520)
!9664 = !DILocation(line: 2393, column: 35, scope: !9660)
!9665 = !DILocalVariable(name: "connector", scope: !9660, file: !3, line: 2395, type: !4613)
!9666 = !DILocation(line: 2395, column: 24, scope: !9660)
!9667 = !DILocalVariable(name: "new_conn_state", scope: !9660, file: !3, line: 2396, type: !4744)
!9668 = !DILocation(line: 2396, column: 30, scope: !9660)
!9669 = !DILocalVariable(name: "plane", scope: !9660, file: !3, line: 2397, type: !4535)
!9670 = !DILocation(line: 2397, column: 20, scope: !9660)
!9671 = !DILocalVariable(name: "new_plane_state", scope: !9660, file: !3, line: 2398, type: !5517)
!9672 = !DILocation(line: 2398, column: 26, scope: !9660)
!9673 = !DILocalVariable(name: "ret", scope: !9660, file: !3, line: 2399, type: !18)
!9674 = !DILocation(line: 2399, column: 6, scope: !9660)
!9675 = !DILocalVariable(name: "i", scope: !9660, file: !3, line: 2399, type: !18)
!9676 = !DILocation(line: 2399, column: 11, scope: !9660)
!9677 = !DILocalVariable(name: "j", scope: !9660, file: !3, line: 2399, type: !18)
!9678 = !DILocation(line: 2399, column: 14, scope: !9660)
!9679 = !DILocation(line: 2401, column: 2, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2401, column: 2)
!9681 = !DILocation(line: 2401, column: 2, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9680, file: !3, line: 2401, column: 2)
!9683 = !DILocation(line: 2401, column: 2, scope: !9684)
!9684 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2401, column: 2)
!9685 = !DILocation(line: 2401, column: 2, scope: !9686)
!9686 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 2401, column: 2)
!9687 = !DILocation(line: 2402, column: 8, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9689, file: !3, line: 2402, column: 7)
!9689 = distinct !DILexicalBlock(scope: !9684, file: !3, line: 2401, column: 71)
!9690 = !DILocation(line: 2402, column: 24, scope: !9688)
!9691 = !DILocation(line: 2402, column: 7, scope: !9689)
!9692 = !DILocation(line: 2403, column: 4, scope: !9688)
!9693 = !DILocation(line: 2405, column: 35, scope: !9689)
!9694 = !DILocation(line: 2405, column: 51, scope: !9689)
!9695 = !DILocation(line: 2405, column: 9, scope: !9689)
!9696 = !DILocation(line: 2405, column: 7, scope: !9689)
!9697 = !DILocation(line: 2406, column: 7, scope: !9698)
!9698 = distinct !DILexicalBlock(scope: !9689, file: !3, line: 2406, column: 7)
!9699 = !DILocation(line: 2406, column: 11, scope: !9698)
!9700 = !DILocation(line: 2406, column: 7, scope: !9689)
!9701 = !DILocation(line: 2407, column: 11, scope: !9698)
!9702 = !DILocation(line: 2407, column: 4, scope: !9698)
!9703 = distinct !{!9703, !9679, !9704}
!9704 = !DILocation(line: 2408, column: 2, scope: !9680)
!9705 = !DILocation(line: 2410, column: 2, scope: !9706)
!9706 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2410, column: 2)
!9707 = !DILocation(line: 2410, column: 2, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9706, file: !3, line: 2410, column: 2)
!9709 = !DILocation(line: 2410, column: 2, scope: !9710)
!9710 = distinct !DILexicalBlock(scope: !9708, file: !3, line: 2410, column: 2)
!9711 = !DILocation(line: 2410, column: 2, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 2410, column: 2)
!9713 = !DILocalVariable(name: "funcs", scope: !9714, file: !3, line: 2411, type: !5600)
!9714 = distinct !DILexicalBlock(scope: !9710, file: !3, line: 2410, column: 64)
!9715 = !DILocation(line: 2411, column: 40, scope: !9714)
!9716 = !DILocation(line: 2413, column: 11, scope: !9714)
!9717 = !DILocation(line: 2413, column: 18, scope: !9714)
!9718 = !DILocation(line: 2413, column: 9, scope: !9714)
!9719 = !DILocation(line: 2415, column: 7, scope: !9720)
!9720 = distinct !DILexicalBlock(scope: !9714, file: !3, line: 2415, column: 7)
!9721 = !DILocation(line: 2415, column: 14, scope: !9720)
!9722 = !DILocation(line: 2415, column: 7, scope: !9714)
!9723 = !DILocation(line: 2416, column: 10, scope: !9724)
!9724 = distinct !DILexicalBlock(scope: !9720, file: !3, line: 2415, column: 26)
!9725 = !DILocation(line: 2416, column: 17, scope: !9724)
!9726 = !DILocation(line: 2416, column: 28, scope: !9724)
!9727 = !DILocation(line: 2416, column: 35, scope: !9724)
!9728 = !DILocation(line: 2416, column: 8, scope: !9724)
!9729 = !DILocation(line: 2417, column: 8, scope: !9730)
!9730 = distinct !DILexicalBlock(scope: !9724, file: !3, line: 2417, column: 8)
!9731 = !DILocation(line: 2417, column: 8, scope: !9724)
!9732 = !DILocation(line: 2418, column: 5, scope: !9730)
!9733 = !DILocation(line: 2419, column: 3, scope: !9724)
!9734 = distinct !{!9734, !9705, !9735}
!9735 = !DILocation(line: 2420, column: 2, scope: !9706)
!9736 = !DILocation(line: 2422, column: 2, scope: !9660)
!9737 = !DILabel(scope: !9660, name: "fail", file: !3, line: 2424)
!9738 = !DILocation(line: 2424, column: 1, scope: !9660)
!9739 = !DILocation(line: 2425, column: 2, scope: !9740)
!9740 = distinct !DILexicalBlock(scope: !9660, file: !3, line: 2425, column: 2)
!9741 = !DILocation(line: 2425, column: 2, scope: !9742)
!9742 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 2425, column: 2)
!9743 = !DILocation(line: 2425, column: 2, scope: !9744)
!9744 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 2425, column: 2)
!9745 = !DILocation(line: 2425, column: 2, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 2425, column: 2)
!9747 = !DILocalVariable(name: "funcs", scope: !9748, file: !3, line: 2426, type: !5600)
!9748 = distinct !DILexicalBlock(scope: !9744, file: !3, line: 2425, column: 64)
!9749 = !DILocation(line: 2426, column: 40, scope: !9748)
!9750 = !DILocation(line: 2428, column: 7, scope: !9751)
!9751 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 2428, column: 7)
!9752 = !DILocation(line: 2428, column: 12, scope: !9751)
!9753 = !DILocation(line: 2428, column: 9, scope: !9751)
!9754 = !DILocation(line: 2428, column: 7, scope: !9748)
!9755 = !DILocation(line: 2429, column: 4, scope: !9751)
!9756 = !DILocation(line: 2431, column: 11, scope: !9748)
!9757 = !DILocation(line: 2431, column: 18, scope: !9748)
!9758 = !DILocation(line: 2431, column: 9, scope: !9748)
!9759 = !DILocation(line: 2433, column: 7, scope: !9760)
!9760 = distinct !DILexicalBlock(scope: !9748, file: !3, line: 2433, column: 7)
!9761 = !DILocation(line: 2433, column: 14, scope: !9760)
!9762 = !DILocation(line: 2433, column: 7, scope: !9748)
!9763 = !DILocation(line: 2434, column: 4, scope: !9760)
!9764 = !DILocation(line: 2434, column: 11, scope: !9760)
!9765 = !DILocation(line: 2434, column: 22, scope: !9760)
!9766 = !DILocation(line: 2434, column: 29, scope: !9760)
!9767 = distinct !{!9767, !9739, !9768}
!9768 = !DILocation(line: 2435, column: 2, scope: !9740)
!9769 = !DILocation(line: 2437, column: 9, scope: !9660)
!9770 = !DILocation(line: 2437, column: 2, scope: !9660)
!9771 = !DILocation(line: 2438, column: 1, scope: !9660)
!9772 = distinct !DISubprogram(name: "drm_atomic_helper_setup_commit", scope: !3, file: !3, line: 2070, type: !6505, scopeLine: 2072, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9773 = !DILocalVariable(name: "state", arg: 1, scope: !9772, file: !3, line: 2070, type: !4520)
!9774 = !DILocation(line: 2070, column: 61, scope: !9772)
!9775 = !DILocalVariable(name: "nonblock", arg: 2, scope: !9772, file: !3, line: 2071, type: !315)
!9776 = !DILocation(line: 2071, column: 13, scope: !9772)
!9777 = !DILocalVariable(name: "crtc", scope: !9772, file: !3, line: 2073, type: !4551)
!9778 = !DILocation(line: 2073, column: 19, scope: !9772)
!9779 = !DILocalVariable(name: "old_crtc_state", scope: !9772, file: !3, line: 2074, type: !4807)
!9780 = !DILocation(line: 2074, column: 25, scope: !9772)
!9781 = !DILocalVariable(name: "new_crtc_state", scope: !9772, file: !3, line: 2074, type: !4807)
!9782 = !DILocation(line: 2074, column: 42, scope: !9772)
!9783 = !DILocalVariable(name: "conn", scope: !9772, file: !3, line: 2075, type: !4613)
!9784 = !DILocation(line: 2075, column: 24, scope: !9772)
!9785 = !DILocalVariable(name: "old_conn_state", scope: !9772, file: !3, line: 2076, type: !4744)
!9786 = !DILocation(line: 2076, column: 30, scope: !9772)
!9787 = !DILocalVariable(name: "new_conn_state", scope: !9772, file: !3, line: 2076, type: !4744)
!9788 = !DILocation(line: 2076, column: 47, scope: !9772)
!9789 = !DILocalVariable(name: "plane", scope: !9772, file: !3, line: 2077, type: !4535)
!9790 = !DILocation(line: 2077, column: 20, scope: !9772)
!9791 = !DILocalVariable(name: "old_plane_state", scope: !9772, file: !3, line: 2078, type: !5517)
!9792 = !DILocation(line: 2078, column: 26, scope: !9772)
!9793 = !DILocalVariable(name: "new_plane_state", scope: !9772, file: !3, line: 2078, type: !5517)
!9794 = !DILocation(line: 2078, column: 44, scope: !9772)
!9795 = !DILocalVariable(name: "commit", scope: !9772, file: !3, line: 2079, type: !4932)
!9796 = !DILocation(line: 2079, column: 26, scope: !9772)
!9797 = !DILocalVariable(name: "i", scope: !9772, file: !3, line: 2080, type: !18)
!9798 = !DILocation(line: 2080, column: 6, scope: !9772)
!9799 = !DILocalVariable(name: "ret", scope: !9772, file: !3, line: 2080, type: !18)
!9800 = !DILocation(line: 2080, column: 9, scope: !9772)
!9801 = !DILocation(line: 2082, column: 2, scope: !9802)
!9802 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 2082, column: 2)
!9803 = !DILocation(line: 2082, column: 2, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9802, file: !3, line: 2082, column: 2)
!9805 = !DILocation(line: 2082, column: 2, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 2082, column: 2)
!9807 = !DILocation(line: 2082, column: 2, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 2082, column: 2)
!9809 = !DILocation(line: 2083, column: 12, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 2082, column: 80)
!9811 = !DILocation(line: 2083, column: 10, scope: !9810)
!9812 = !DILocation(line: 2084, column: 8, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 2084, column: 7)
!9814 = !DILocation(line: 2084, column: 7, scope: !9810)
!9815 = !DILocation(line: 2085, column: 4, scope: !9813)
!9816 = !DILocation(line: 2087, column: 15, scope: !9810)
!9817 = !DILocation(line: 2087, column: 23, scope: !9810)
!9818 = !DILocation(line: 2087, column: 3, scope: !9810)
!9819 = !DILocation(line: 2089, column: 28, scope: !9810)
!9820 = !DILocation(line: 2089, column: 3, scope: !9810)
!9821 = !DILocation(line: 2089, column: 19, scope: !9810)
!9822 = !DILocation(line: 2089, column: 26, scope: !9810)
!9823 = !DILocation(line: 2091, column: 22, scope: !9810)
!9824 = !DILocation(line: 2091, column: 28, scope: !9810)
!9825 = !DILocation(line: 2091, column: 9, scope: !9810)
!9826 = !DILocation(line: 2091, column: 7, scope: !9810)
!9827 = !DILocation(line: 2092, column: 7, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 2092, column: 7)
!9829 = !DILocation(line: 2092, column: 7, scope: !9810)
!9830 = !DILocation(line: 2093, column: 11, scope: !9828)
!9831 = !DILocation(line: 2093, column: 4, scope: !9828)
!9832 = !DILocation(line: 2098, column: 8, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 2098, column: 7)
!9834 = !DILocation(line: 2098, column: 24, scope: !9833)
!9835 = !DILocation(line: 2098, column: 31, scope: !9833)
!9836 = !DILocation(line: 2098, column: 35, scope: !9833)
!9837 = !DILocation(line: 2098, column: 51, scope: !9833)
!9838 = !DILocation(line: 2098, column: 7, scope: !9810)
!9839 = !DILocation(line: 2099, column: 18, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 2098, column: 59)
!9841 = !DILocation(line: 2099, column: 26, scope: !9840)
!9842 = !DILocation(line: 2099, column: 4, scope: !9840)
!9843 = !DILocation(line: 2100, column: 4, scope: !9840)
!9844 = !DILocation(line: 2104, column: 7, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 2104, column: 7)
!9846 = !DILocation(line: 2104, column: 14, scope: !9845)
!9847 = !DILocation(line: 2104, column: 7, scope: !9810)
!9848 = !DILocation(line: 2105, column: 18, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9845, file: !3, line: 2104, column: 36)
!9850 = !DILocation(line: 2105, column: 26, scope: !9849)
!9851 = !DILocation(line: 2105, column: 4, scope: !9849)
!9852 = !DILocation(line: 2106, column: 4, scope: !9849)
!9853 = !DILocation(line: 2109, column: 8, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9810, file: !3, line: 2109, column: 7)
!9855 = !DILocation(line: 2109, column: 24, scope: !9854)
!9856 = !DILocation(line: 2109, column: 7, scope: !9810)
!9857 = !DILocation(line: 2110, column: 20, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 2109, column: 31)
!9859 = !DILocation(line: 2110, column: 4, scope: !9858)
!9860 = !DILocation(line: 2110, column: 12, scope: !9858)
!9861 = !DILocation(line: 2110, column: 18, scope: !9858)
!9862 = !DILocation(line: 2112, column: 9, scope: !9863)
!9863 = distinct !DILexicalBlock(scope: !9858, file: !3, line: 2112, column: 8)
!9864 = !DILocation(line: 2112, column: 17, scope: !9863)
!9865 = !DILocation(line: 2112, column: 8, scope: !9858)
!9866 = !DILocation(line: 2113, column: 5, scope: !9863)
!9867 = !DILocation(line: 2115, column: 28, scope: !9858)
!9868 = !DILocation(line: 2115, column: 36, scope: !9858)
!9869 = !DILocation(line: 2115, column: 4, scope: !9858)
!9870 = !DILocation(line: 2115, column: 20, scope: !9858)
!9871 = !DILocation(line: 2115, column: 26, scope: !9858)
!9872 = !DILocation(line: 2116, column: 3, scope: !9858)
!9873 = !DILocation(line: 2118, column: 45, scope: !9810)
!9874 = !DILocation(line: 2118, column: 53, scope: !9810)
!9875 = !DILocation(line: 2118, column: 3, scope: !9810)
!9876 = !DILocation(line: 2118, column: 19, scope: !9810)
!9877 = !DILocation(line: 2118, column: 26, scope: !9810)
!9878 = !DILocation(line: 2118, column: 31, scope: !9810)
!9879 = !DILocation(line: 2118, column: 42, scope: !9810)
!9880 = !DILocation(line: 2119, column: 3, scope: !9810)
!9881 = !DILocation(line: 2119, column: 19, scope: !9810)
!9882 = !DILocation(line: 2119, column: 26, scope: !9810)
!9883 = !DILocation(line: 2119, column: 31, scope: !9810)
!9884 = !DILocation(line: 2119, column: 50, scope: !9810)
!9885 = !DILocation(line: 2120, column: 23, scope: !9810)
!9886 = !DILocation(line: 2120, column: 3, scope: !9810)
!9887 = !DILocation(line: 2122, column: 3, scope: !9810)
!9888 = !DILocation(line: 2122, column: 11, scope: !9810)
!9889 = !DILocation(line: 2122, column: 28, scope: !9810)
!9890 = !DILocation(line: 2124, column: 28, scope: !9810)
!9891 = !DILocation(line: 2124, column: 3, scope: !9810)
!9892 = !DILocation(line: 2124, column: 10, scope: !9810)
!9893 = !DILocation(line: 2124, column: 16, scope: !9810)
!9894 = !DILocation(line: 2124, column: 19, scope: !9810)
!9895 = !DILocation(line: 2124, column: 26, scope: !9810)
!9896 = !DILocation(line: 2125, column: 23, scope: !9810)
!9897 = !DILocation(line: 2125, column: 3, scope: !9810)
!9898 = distinct !{!9898, !9801, !9899}
!9899 = !DILocation(line: 2126, column: 2, scope: !9802)
!9900 = !DILocation(line: 2128, column: 2, scope: !9901)
!9901 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 2128, column: 2)
!9902 = !DILocation(line: 2128, column: 2, scope: !9903)
!9903 = distinct !DILexicalBlock(scope: !9901, file: !3, line: 2128, column: 2)
!9904 = !DILocation(line: 2128, column: 2, scope: !9905)
!9905 = distinct !DILexicalBlock(scope: !9903, file: !3, line: 2128, column: 2)
!9906 = !DILocation(line: 2128, column: 2, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 2128, column: 2)
!9908 = !DILocation(line: 2131, column: 7, scope: !9909)
!9909 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 2131, column: 7)
!9910 = distinct !DILexicalBlock(scope: !9905, file: !3, line: 2128, column: 85)
!9911 = !DILocation(line: 2131, column: 16, scope: !9909)
!9912 = !DILocation(line: 2131, column: 19, scope: !9909)
!9913 = !DILocation(line: 2131, column: 35, scope: !9909)
!9914 = !DILocation(line: 2131, column: 42, scope: !9909)
!9915 = !DILocation(line: 2132, column: 33, scope: !9909)
!9916 = !DILocation(line: 2132, column: 49, scope: !9909)
!9917 = !DILocation(line: 2132, column: 57, scope: !9909)
!9918 = !DILocation(line: 2132, column: 8, scope: !9909)
!9919 = !DILocation(line: 2131, column: 7, scope: !9910)
!9920 = !DILocation(line: 2133, column: 4, scope: !9909)
!9921 = !DILocation(line: 2136, column: 32, scope: !9910)
!9922 = !DILocation(line: 2136, column: 39, scope: !9910)
!9923 = !DILocation(line: 2136, column: 55, scope: !9910)
!9924 = !DILocation(line: 2136, column: 63, scope: !9910)
!9925 = !DILocation(line: 2136, column: 79, scope: !9910)
!9926 = !DILocation(line: 2136, column: 12, scope: !9910)
!9927 = !DILocation(line: 2136, column: 10, scope: !9910)
!9928 = !DILocation(line: 2137, column: 8, scope: !9929)
!9929 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 2137, column: 7)
!9930 = !DILocation(line: 2137, column: 7, scope: !9910)
!9931 = !DILocation(line: 2138, column: 4, scope: !9929)
!9932 = !DILocation(line: 2140, column: 48, scope: !9910)
!9933 = !DILocation(line: 2140, column: 28, scope: !9910)
!9934 = !DILocation(line: 2140, column: 3, scope: !9910)
!9935 = !DILocation(line: 2140, column: 19, scope: !9910)
!9936 = !DILocation(line: 2140, column: 26, scope: !9910)
!9937 = distinct !{!9937, !9900, !9938}
!9938 = !DILocation(line: 2141, column: 2, scope: !9901)
!9939 = !DILocation(line: 2143, column: 2, scope: !9940)
!9940 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 2143, column: 2)
!9941 = !DILocation(line: 2143, column: 2, scope: !9942)
!9942 = distinct !DILexicalBlock(scope: !9940, file: !3, line: 2143, column: 2)
!9943 = !DILocation(line: 2143, column: 2, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9942, file: !3, line: 2143, column: 2)
!9945 = !DILocation(line: 2143, column: 2, scope: !9946)
!9946 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 2143, column: 2)
!9947 = !DILocation(line: 2146, column: 7, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 2146, column: 7)
!9949 = distinct !DILexicalBlock(scope: !9944, file: !3, line: 2143, column: 84)
!9950 = !DILocation(line: 2146, column: 16, scope: !9948)
!9951 = !DILocation(line: 2146, column: 19, scope: !9948)
!9952 = !DILocation(line: 2146, column: 36, scope: !9948)
!9953 = !DILocation(line: 2146, column: 43, scope: !9948)
!9954 = !DILocation(line: 2147, column: 33, scope: !9948)
!9955 = !DILocation(line: 2147, column: 50, scope: !9948)
!9956 = !DILocation(line: 2147, column: 58, scope: !9948)
!9957 = !DILocation(line: 2147, column: 8, scope: !9948)
!9958 = !DILocation(line: 2146, column: 7, scope: !9949)
!9959 = !DILocation(line: 2148, column: 4, scope: !9948)
!9960 = !DILocation(line: 2151, column: 32, scope: !9949)
!9961 = !DILocation(line: 2151, column: 39, scope: !9949)
!9962 = !DILocation(line: 2151, column: 56, scope: !9949)
!9963 = !DILocation(line: 2151, column: 64, scope: !9949)
!9964 = !DILocation(line: 2151, column: 81, scope: !9949)
!9965 = !DILocation(line: 2151, column: 12, scope: !9949)
!9966 = !DILocation(line: 2151, column: 10, scope: !9949)
!9967 = !DILocation(line: 2152, column: 8, scope: !9968)
!9968 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 2152, column: 7)
!9969 = !DILocation(line: 2152, column: 7, scope: !9949)
!9970 = !DILocation(line: 2153, column: 4, scope: !9968)
!9971 = !DILocation(line: 2155, column: 49, scope: !9949)
!9972 = !DILocation(line: 2155, column: 29, scope: !9949)
!9973 = !DILocation(line: 2155, column: 3, scope: !9949)
!9974 = !DILocation(line: 2155, column: 20, scope: !9949)
!9975 = !DILocation(line: 2155, column: 27, scope: !9949)
!9976 = distinct !{!9976, !9939, !9977}
!9977 = !DILocation(line: 2156, column: 2, scope: !9940)
!9978 = !DILocation(line: 2158, column: 2, scope: !9772)
!9979 = !DILocation(line: 2159, column: 1, scope: !9772)
!9980 = distinct !DISubprogram(name: "__init_work", scope: !1900, file: !1900, line: 215, type: !9981, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9981 = !DISubroutineType(types: !9982)
!9982 = !{null, !1909, !18}
!9983 = !DILocalVariable(name: "work", arg: 1, scope: !9980, file: !1900, line: 215, type: !1909)
!9984 = !DILocation(line: 215, column: 52, scope: !9980)
!9985 = !DILocalVariable(name: "onstack", arg: 2, scope: !9980, file: !1900, line: 215, type: !18)
!9986 = !DILocation(line: 215, column: 62, scope: !9980)
!9987 = !DILocation(line: 215, column: 73, scope: !9980)
!9988 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !9989, file: !9989, line: 33, type: !9990, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!9989 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!9990 = !DISubroutineType(types: !9991)
!9991 = !{null, !15}
!9992 = !DILocalVariable(name: "list", arg: 1, scope: !9988, file: !9989, line: 33, type: !15)
!9993 = !DILocation(line: 33, column: 53, scope: !9988)
!9994 = !DILocation(line: 35, column: 2, scope: !9988)
!9995 = !DILocation(line: 35, column: 2, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9988, file: !9989, line: 35, column: 2)
!9997 = !DILocation(line: 35, column: 2, scope: !9998)
!9998 = distinct !DILexicalBlock(scope: !9996, file: !9989, line: 35, column: 2)
!9999 = !DILocation(line: 35, column: 2, scope: !10000)
!10000 = distinct !DILexicalBlock(scope: !9996, file: !9989, line: 35, column: 2)
!10001 = !DILocation(line: 36, column: 15, scope: !9988)
!10002 = !DILocation(line: 36, column: 2, scope: !9988)
!10003 = !DILocation(line: 36, column: 8, scope: !9988)
!10004 = !DILocation(line: 36, column: 13, scope: !9988)
!10005 = !DILocation(line: 37, column: 1, scope: !9988)
!10006 = distinct !DISubprogram(name: "commit_work", scope: !3, file: !3, line: 1678, type: !1907, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10007 = !DILocalVariable(name: "work", arg: 1, scope: !10006, file: !3, line: 1678, type: !1909)
!10008 = !DILocation(line: 1678, column: 45, scope: !10006)
!10009 = !DILocalVariable(name: "state", scope: !10006, file: !3, line: 1680, type: !4520)
!10010 = !DILocation(line: 1680, column: 27, scope: !10006)
!10011 = !DILocalVariable(name: "__mptr", scope: !10012, file: !3, line: 1680, type: !170)
!10012 = distinct !DILexicalBlock(scope: !10006, file: !3, line: 1680, column: 35)
!10013 = !DILocation(line: 1680, column: 35, scope: !10012)
!10014 = !DILocation(line: 1680, column: 35, scope: !10015)
!10015 = distinct !DILexicalBlock(scope: !10012, file: !3, line: 1680, column: 35)
!10016 = !DILocation(line: 1683, column: 14, scope: !10006)
!10017 = !DILocation(line: 1683, column: 2, scope: !10006)
!10018 = !DILocation(line: 1684, column: 1, scope: !10006)
!10019 = distinct !DISubprogram(name: "drm_atomic_helper_swap_state", scope: !3, file: !3, line: 2756, type: !6505, scopeLine: 2758, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10020 = !DILocalVariable(name: "lock", arg: 1, scope: !10021, file: !9168, line: 392, type: !940)
!10021 = distinct !DISubprogram(name: "spin_unlock", scope: !9168, file: !9168, line: 392, type: !10022, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10022 = !DISubroutineType(types: !10023)
!10023 = !{null, !940}
!10024 = !DILocation(line: 392, column: 53, scope: !10021, inlinedAt: !10025)
!10025 = distinct !DILocation(line: 2837, column: 4, scope: !10026)
!10026 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 2833, column: 31)
!10027 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 2833, column: 7)
!10028 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 2824, column: 80)
!10029 = distinct !DILexicalBlock(scope: !10030, file: !3, line: 2824, column: 2)
!10030 = distinct !DILexicalBlock(scope: !10031, file: !3, line: 2824, column: 2)
!10031 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 2824, column: 2)
!10032 = !DILocalVariable(name: "lock", arg: 1, scope: !10033, file: !9168, line: 352, type: !940)
!10033 = distinct !DISubprogram(name: "spin_lock", scope: !9168, file: !9168, line: 352, type: !10022, scopeLine: 353, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10034 = !DILocation(line: 352, column: 51, scope: !10033, inlinedAt: !10035)
!10035 = distinct !DILocation(line: 2834, column: 4, scope: !10026)
!10036 = !DILocalVariable(name: "state", arg: 1, scope: !10019, file: !3, line: 2756, type: !4520)
!10037 = !DILocation(line: 2756, column: 59, scope: !10019)
!10038 = !DILocalVariable(name: "stall", arg: 2, scope: !10019, file: !3, line: 2757, type: !315)
!10039 = !DILocation(line: 2757, column: 12, scope: !10019)
!10040 = !DILocalVariable(name: "i", scope: !10019, file: !3, line: 2759, type: !18)
!10041 = !DILocation(line: 2759, column: 6, scope: !10019)
!10042 = !DILocalVariable(name: "ret", scope: !10019, file: !3, line: 2759, type: !18)
!10043 = !DILocation(line: 2759, column: 9, scope: !10019)
!10044 = !DILocalVariable(name: "connector", scope: !10019, file: !3, line: 2760, type: !4613)
!10045 = !DILocation(line: 2760, column: 24, scope: !10019)
!10046 = !DILocalVariable(name: "old_conn_state", scope: !10019, file: !3, line: 2761, type: !4744)
!10047 = !DILocation(line: 2761, column: 30, scope: !10019)
!10048 = !DILocalVariable(name: "new_conn_state", scope: !10019, file: !3, line: 2761, type: !4744)
!10049 = !DILocation(line: 2761, column: 47, scope: !10019)
!10050 = !DILocalVariable(name: "crtc", scope: !10019, file: !3, line: 2762, type: !4551)
!10051 = !DILocation(line: 2762, column: 19, scope: !10019)
!10052 = !DILocalVariable(name: "old_crtc_state", scope: !10019, file: !3, line: 2763, type: !4807)
!10053 = !DILocation(line: 2763, column: 25, scope: !10019)
!10054 = !DILocalVariable(name: "new_crtc_state", scope: !10019, file: !3, line: 2763, type: !4807)
!10055 = !DILocation(line: 2763, column: 42, scope: !10019)
!10056 = !DILocalVariable(name: "plane", scope: !10019, file: !3, line: 2764, type: !4535)
!10057 = !DILocation(line: 2764, column: 20, scope: !10019)
!10058 = !DILocalVariable(name: "old_plane_state", scope: !10019, file: !3, line: 2765, type: !5517)
!10059 = !DILocation(line: 2765, column: 26, scope: !10019)
!10060 = !DILocalVariable(name: "new_plane_state", scope: !10019, file: !3, line: 2765, type: !5517)
!10061 = !DILocation(line: 2765, column: 44, scope: !10019)
!10062 = !DILocalVariable(name: "commit", scope: !10019, file: !3, line: 2766, type: !4932)
!10063 = !DILocation(line: 2766, column: 26, scope: !10019)
!10064 = !DILocalVariable(name: "obj", scope: !10019, file: !3, line: 2767, type: !5652)
!10065 = !DILocation(line: 2767, column: 26, scope: !10019)
!10066 = !DILocalVariable(name: "old_obj_state", scope: !10019, file: !3, line: 2768, type: !5658)
!10067 = !DILocation(line: 2768, column: 28, scope: !10019)
!10068 = !DILocalVariable(name: "new_obj_state", scope: !10019, file: !3, line: 2768, type: !5658)
!10069 = !DILocation(line: 2768, column: 44, scope: !10019)
!10070 = !DILocation(line: 2770, column: 6, scope: !10071)
!10071 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 2770, column: 6)
!10072 = !DILocation(line: 2770, column: 6, scope: !10019)
!10073 = !DILocation(line: 2780, column: 3, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 2780, column: 3)
!10075 = distinct !DILexicalBlock(scope: !10071, file: !3, line: 2770, column: 13)
!10076 = !DILocation(line: 2780, column: 3, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 2780, column: 3)
!10078 = !DILocation(line: 2780, column: 3, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 2780, column: 3)
!10080 = !DILocation(line: 2780, column: 3, scope: !10081)
!10081 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 2780, column: 3)
!10082 = !DILocation(line: 2781, column: 13, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10079, file: !3, line: 2780, column: 62)
!10084 = !DILocation(line: 2781, column: 29, scope: !10083)
!10085 = !DILocation(line: 2781, column: 11, scope: !10083)
!10086 = !DILocation(line: 2783, column: 9, scope: !10087)
!10087 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 2783, column: 8)
!10088 = !DILocation(line: 2783, column: 8, scope: !10083)
!10089 = !DILocation(line: 2784, column: 5, scope: !10087)
!10090 = !DILocation(line: 2786, column: 45, scope: !10083)
!10091 = !DILocation(line: 2786, column: 53, scope: !10083)
!10092 = !DILocation(line: 2786, column: 10, scope: !10083)
!10093 = !DILocation(line: 2786, column: 8, scope: !10083)
!10094 = !DILocation(line: 2787, column: 8, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 2787, column: 8)
!10096 = !DILocation(line: 2787, column: 8, scope: !10083)
!10097 = !DILocation(line: 2788, column: 12, scope: !10095)
!10098 = !DILocation(line: 2788, column: 5, scope: !10095)
!10099 = distinct !{!10099, !10073, !10100}
!10100 = !DILocation(line: 2789, column: 3, scope: !10074)
!10101 = !DILocation(line: 2791, column: 3, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 2791, column: 3)
!10103 = !DILocation(line: 2791, column: 3, scope: !10104)
!10104 = distinct !DILexicalBlock(scope: !10102, file: !3, line: 2791, column: 3)
!10105 = !DILocation(line: 2791, column: 3, scope: !10106)
!10106 = distinct !DILexicalBlock(scope: !10104, file: !3, line: 2791, column: 3)
!10107 = !DILocation(line: 2791, column: 3, scope: !10108)
!10108 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 2791, column: 3)
!10109 = !DILocation(line: 2792, column: 13, scope: !10110)
!10110 = distinct !DILexicalBlock(scope: !10106, file: !3, line: 2791, column: 72)
!10111 = !DILocation(line: 2792, column: 29, scope: !10110)
!10112 = !DILocation(line: 2792, column: 11, scope: !10110)
!10113 = !DILocation(line: 2794, column: 9, scope: !10114)
!10114 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 2794, column: 8)
!10115 = !DILocation(line: 2794, column: 8, scope: !10110)
!10116 = !DILocation(line: 2795, column: 5, scope: !10114)
!10117 = !DILocation(line: 2797, column: 45, scope: !10110)
!10118 = !DILocation(line: 2797, column: 53, scope: !10110)
!10119 = !DILocation(line: 2797, column: 10, scope: !10110)
!10120 = !DILocation(line: 2797, column: 8, scope: !10110)
!10121 = !DILocation(line: 2798, column: 8, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10110, file: !3, line: 2798, column: 8)
!10123 = !DILocation(line: 2798, column: 8, scope: !10110)
!10124 = !DILocation(line: 2799, column: 12, scope: !10122)
!10125 = !DILocation(line: 2799, column: 5, scope: !10122)
!10126 = distinct !{!10126, !10101, !10127}
!10127 = !DILocation(line: 2800, column: 3, scope: !10102)
!10128 = !DILocation(line: 2802, column: 3, scope: !10129)
!10129 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 2802, column: 3)
!10130 = !DILocation(line: 2802, column: 3, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10129, file: !3, line: 2802, column: 3)
!10132 = !DILocation(line: 2802, column: 3, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10131, file: !3, line: 2802, column: 3)
!10134 = !DILocation(line: 2802, column: 3, scope: !10135)
!10135 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 2802, column: 3)
!10136 = !DILocation(line: 2803, column: 13, scope: !10137)
!10137 = distinct !DILexicalBlock(scope: !10133, file: !3, line: 2802, column: 65)
!10138 = !DILocation(line: 2803, column: 30, scope: !10137)
!10139 = !DILocation(line: 2803, column: 11, scope: !10137)
!10140 = !DILocation(line: 2805, column: 9, scope: !10141)
!10141 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 2805, column: 8)
!10142 = !DILocation(line: 2805, column: 8, scope: !10137)
!10143 = !DILocation(line: 2806, column: 5, scope: !10141)
!10144 = !DILocation(line: 2808, column: 45, scope: !10137)
!10145 = !DILocation(line: 2808, column: 53, scope: !10137)
!10146 = !DILocation(line: 2808, column: 10, scope: !10137)
!10147 = !DILocation(line: 2808, column: 8, scope: !10137)
!10148 = !DILocation(line: 2809, column: 8, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10137, file: !3, line: 2809, column: 8)
!10150 = !DILocation(line: 2809, column: 8, scope: !10137)
!10151 = !DILocation(line: 2810, column: 12, scope: !10149)
!10152 = !DILocation(line: 2810, column: 5, scope: !10149)
!10153 = distinct !{!10153, !10128, !10154}
!10154 = !DILocation(line: 2811, column: 3, scope: !10129)
!10155 = !DILocation(line: 2812, column: 2, scope: !10075)
!10156 = !DILocation(line: 2814, column: 2, scope: !10157)
!10157 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 2814, column: 2)
!10158 = !DILocation(line: 2814, column: 2, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10157, file: !3, line: 2814, column: 2)
!10160 = !DILocation(line: 2814, column: 2, scope: !10161)
!10161 = distinct !DILexicalBlock(scope: !10159, file: !3, line: 2814, column: 2)
!10162 = !DILocation(line: 2814, column: 2, scope: !10163)
!10163 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 2814, column: 2)
!10164 = !DILocalVariable(name: "__ret_warn_on", scope: !10165, file: !3, line: 2815, type: !18)
!10165 = distinct !DILexicalBlock(scope: !10166, file: !3, line: 2815, column: 3)
!10166 = distinct !DILexicalBlock(scope: !10161, file: !3, line: 2814, column: 90)
!10167 = !DILocation(line: 2815, column: 3, scope: !10165)
!10168 = !DILocation(line: 2815, column: 3, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10165, file: !3, line: 2815, column: 3)
!10170 = !DILocation(line: 2815, column: 3, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10169, file: !3, line: 2815, column: 3)
!10172 = !DILocation(line: 2815, column: 3, scope: !10173)
!10173 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 2815, column: 3)
!10174 = !DILocation(line: 2815, column: 3, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 2815, column: 3)
!10176 = !{i32 -2140103080, i32 -2140103051, i32 -2140103005, i32 -2140102947, i32 -2140102893, i32 -2140102839, i32 -2140102784, i32 -2140102753}
!10177 = !DILocation(line: 2815, column: 3, scope: !10178)
!10178 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 2815, column: 3)
!10179 = !{i32 -2140102335, i32 -2140102328, i32 -2140102276, i32 -2140102245, i32 -2140102215}
!10180 = !DILocation(line: 2815, column: 3, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 2815, column: 3)
!10182 = !DILocation(line: 2817, column: 27, scope: !10166)
!10183 = !DILocation(line: 2817, column: 3, scope: !10166)
!10184 = !DILocation(line: 2817, column: 19, scope: !10166)
!10185 = !DILocation(line: 2817, column: 25, scope: !10166)
!10186 = !DILocation(line: 2818, column: 3, scope: !10166)
!10187 = !DILocation(line: 2818, column: 19, scope: !10166)
!10188 = !DILocation(line: 2818, column: 25, scope: !10166)
!10189 = !DILocation(line: 2820, column: 32, scope: !10166)
!10190 = !DILocation(line: 2820, column: 3, scope: !10166)
!10191 = !DILocation(line: 2820, column: 10, scope: !10166)
!10192 = !DILocation(line: 2820, column: 21, scope: !10166)
!10193 = !DILocation(line: 2820, column: 24, scope: !10166)
!10194 = !DILocation(line: 2820, column: 30, scope: !10166)
!10195 = !DILocation(line: 2821, column: 22, scope: !10166)
!10196 = !DILocation(line: 2821, column: 3, scope: !10166)
!10197 = !DILocation(line: 2821, column: 14, scope: !10166)
!10198 = !DILocation(line: 2821, column: 20, scope: !10166)
!10199 = distinct !{!10199, !10156, !10200}
!10200 = !DILocation(line: 2822, column: 2, scope: !10157)
!10201 = !DILocation(line: 2824, column: 2, scope: !10031)
!10202 = !DILocation(line: 2824, column: 2, scope: !10030)
!10203 = !DILocation(line: 2824, column: 2, scope: !10029)
!10204 = !DILocation(line: 2824, column: 2, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10029, file: !3, line: 2824, column: 2)
!10206 = !DILocalVariable(name: "__ret_warn_on", scope: !10207, file: !3, line: 2825, type: !18)
!10207 = distinct !DILexicalBlock(scope: !10028, file: !3, line: 2825, column: 3)
!10208 = !DILocation(line: 2825, column: 3, scope: !10207)
!10209 = !DILocation(line: 2825, column: 3, scope: !10210)
!10210 = distinct !DILexicalBlock(scope: !10207, file: !3, line: 2825, column: 3)
!10211 = !DILocation(line: 2825, column: 3, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10210, file: !3, line: 2825, column: 3)
!10213 = !DILocation(line: 2825, column: 3, scope: !10214)
!10214 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 2825, column: 3)
!10215 = !DILocation(line: 2825, column: 3, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 2825, column: 3)
!10217 = !{i32 -2140100717, i32 -2140100688, i32 -2140100642, i32 -2140100584, i32 -2140100530, i32 -2140100476, i32 -2140100421, i32 -2140100390}
!10218 = !DILocation(line: 2825, column: 3, scope: !10219)
!10219 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 2825, column: 3)
!10220 = !{i32 -2140099972, i32 -2140099965, i32 -2140099913, i32 -2140099882, i32 -2140099852}
!10221 = !DILocation(line: 2825, column: 3, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10212, file: !3, line: 2825, column: 3)
!10223 = !DILocation(line: 2827, column: 27, scope: !10028)
!10224 = !DILocation(line: 2827, column: 3, scope: !10028)
!10225 = !DILocation(line: 2827, column: 19, scope: !10028)
!10226 = !DILocation(line: 2827, column: 25, scope: !10028)
!10227 = !DILocation(line: 2828, column: 3, scope: !10028)
!10228 = !DILocation(line: 2828, column: 19, scope: !10028)
!10229 = !DILocation(line: 2828, column: 25, scope: !10028)
!10230 = !DILocation(line: 2830, column: 27, scope: !10028)
!10231 = !DILocation(line: 2830, column: 3, scope: !10028)
!10232 = !DILocation(line: 2830, column: 10, scope: !10028)
!10233 = !DILocation(line: 2830, column: 16, scope: !10028)
!10234 = !DILocation(line: 2830, column: 19, scope: !10028)
!10235 = !DILocation(line: 2830, column: 25, scope: !10028)
!10236 = !DILocation(line: 2831, column: 17, scope: !10028)
!10237 = !DILocation(line: 2831, column: 3, scope: !10028)
!10238 = !DILocation(line: 2831, column: 9, scope: !10028)
!10239 = !DILocation(line: 2831, column: 15, scope: !10028)
!10240 = !DILocation(line: 2833, column: 7, scope: !10027)
!10241 = !DILocation(line: 2833, column: 23, scope: !10027)
!10242 = !DILocation(line: 2833, column: 7, scope: !10028)
!10243 = !DILocation(line: 2834, column: 15, scope: !10026)
!10244 = !DILocation(line: 2834, column: 21, scope: !10026)
!10245 = !DILocation(line: 354, column: 2, scope: !10246, inlinedAt: !10035)
!10246 = distinct !DILexicalBlock(scope: !10033, file: !9168, line: 354, column: 2)
!10247 = !{i32 -2145457762}
!10248 = !DILocation(line: 354, column: 2, scope: !10249, inlinedAt: !10035)
!10249 = distinct !DILexicalBlock(scope: !10246, file: !9168, line: 354, column: 2)
!10250 = !DILocation(line: 2835, column: 14, scope: !10026)
!10251 = !DILocation(line: 2835, column: 30, scope: !10026)
!10252 = !DILocation(line: 2835, column: 38, scope: !10026)
!10253 = !DILocation(line: 2836, column: 7, scope: !10026)
!10254 = !DILocation(line: 2836, column: 13, scope: !10026)
!10255 = !DILocation(line: 2835, column: 4, scope: !10026)
!10256 = !DILocation(line: 2837, column: 17, scope: !10026)
!10257 = !DILocation(line: 2837, column: 23, scope: !10026)
!10258 = !DILocation(line: 394, column: 2, scope: !10259, inlinedAt: !10025)
!10259 = distinct !DILexicalBlock(scope: !10021, file: !9168, line: 394, column: 2)
!10260 = !{i32 -2145455401}
!10261 = !DILocation(line: 394, column: 2, scope: !10262, inlinedAt: !10025)
!10262 = distinct !DILexicalBlock(scope: !10259, file: !9168, line: 394, column: 2)
!10263 = !DILocation(line: 2839, column: 4, scope: !10026)
!10264 = !DILocation(line: 2839, column: 20, scope: !10026)
!10265 = !DILocation(line: 2839, column: 28, scope: !10026)
!10266 = !DILocation(line: 2839, column: 34, scope: !10026)
!10267 = !DILocation(line: 2840, column: 3, scope: !10026)
!10268 = distinct !{!10268, !10201, !10269}
!10269 = !DILocation(line: 2841, column: 2, scope: !10031)
!10270 = !DILocation(line: 2843, column: 2, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 2843, column: 2)
!10272 = !DILocation(line: 2843, column: 2, scope: !10273)
!10273 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 2843, column: 2)
!10274 = !DILocation(line: 2843, column: 2, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10273, file: !3, line: 2843, column: 2)
!10276 = !DILocation(line: 2843, column: 2, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10275, file: !3, line: 2843, column: 2)
!10278 = !DILocalVariable(name: "__ret_warn_on", scope: !10279, file: !3, line: 2844, type: !18)
!10279 = distinct !DILexicalBlock(scope: !10280, file: !3, line: 2844, column: 3)
!10280 = distinct !DILexicalBlock(scope: !10275, file: !3, line: 2843, column: 84)
!10281 = !DILocation(line: 2844, column: 3, scope: !10279)
!10282 = !DILocation(line: 2844, column: 3, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10279, file: !3, line: 2844, column: 3)
!10284 = !DILocation(line: 2844, column: 3, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 2844, column: 3)
!10286 = !DILocation(line: 2844, column: 3, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 2844, column: 3)
!10288 = !DILocation(line: 2844, column: 3, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 2844, column: 3)
!10290 = !{i32 -2140098450, i32 -2140098421, i32 -2140098375, i32 -2140098317, i32 -2140098263, i32 -2140098209, i32 -2140098154, i32 -2140098123}
!10291 = !DILocation(line: 2844, column: 3, scope: !10292)
!10292 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 2844, column: 3)
!10293 = !{i32 -2140097705, i32 -2140097698, i32 -2140097646, i32 -2140097615, i32 -2140097585}
!10294 = !DILocation(line: 2844, column: 3, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10285, file: !3, line: 2844, column: 3)
!10296 = !DILocation(line: 2846, column: 28, scope: !10280)
!10297 = !DILocation(line: 2846, column: 3, scope: !10280)
!10298 = !DILocation(line: 2846, column: 20, scope: !10280)
!10299 = !DILocation(line: 2846, column: 26, scope: !10280)
!10300 = !DILocation(line: 2847, column: 3, scope: !10280)
!10301 = !DILocation(line: 2847, column: 20, scope: !10280)
!10302 = !DILocation(line: 2847, column: 26, scope: !10280)
!10303 = !DILocation(line: 2849, column: 28, scope: !10280)
!10304 = !DILocation(line: 2849, column: 3, scope: !10280)
!10305 = !DILocation(line: 2849, column: 10, scope: !10280)
!10306 = !DILocation(line: 2849, column: 17, scope: !10280)
!10307 = !DILocation(line: 2849, column: 20, scope: !10280)
!10308 = !DILocation(line: 2849, column: 26, scope: !10280)
!10309 = !DILocation(line: 2850, column: 18, scope: !10280)
!10310 = !DILocation(line: 2850, column: 3, scope: !10280)
!10311 = !DILocation(line: 2850, column: 10, scope: !10280)
!10312 = !DILocation(line: 2850, column: 16, scope: !10280)
!10313 = distinct !{!10313, !10270, !10314}
!10314 = !DILocation(line: 2851, column: 2, scope: !10271)
!10315 = !DILocation(line: 2853, column: 2, scope: !10316)
!10316 = distinct !DILexicalBlock(scope: !10019, file: !3, line: 2853, column: 2)
!10317 = !DILocation(line: 2853, column: 2, scope: !10318)
!10318 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 2853, column: 2)
!10319 = !DILocation(line: 0, scope: !10318)
!10320 = !DILocalVariable(name: "__ret_warn_on", scope: !10321, file: !3, line: 2854, type: !18)
!10321 = distinct !DILexicalBlock(scope: !10322, file: !3, line: 2854, column: 3)
!10322 = distinct !DILexicalBlock(scope: !10318, file: !3, line: 2853, column: 84)
!10323 = !DILocation(line: 2854, column: 3, scope: !10321)
!10324 = !DILocation(line: 2854, column: 3, scope: !10325)
!10325 = distinct !DILexicalBlock(scope: !10321, file: !3, line: 2854, column: 3)
!10326 = !DILocation(line: 2854, column: 3, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10325, file: !3, line: 2854, column: 3)
!10328 = !DILocation(line: 2854, column: 3, scope: !10329)
!10329 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 2854, column: 3)
!10330 = !DILocation(line: 2854, column: 3, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 2854, column: 3)
!10332 = !{i32 -2140096634, i32 -2140096605, i32 -2140096559, i32 -2140096501, i32 -2140096447, i32 -2140096393, i32 -2140096338, i32 -2140096307}
!10333 = !DILocation(line: 2854, column: 3, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 2854, column: 3)
!10335 = !{i32 -2140095889, i32 -2140095882, i32 -2140095830, i32 -2140095799, i32 -2140095769}
!10336 = !DILocation(line: 2854, column: 3, scope: !10337)
!10337 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 2854, column: 3)
!10338 = !DILocation(line: 2856, column: 26, scope: !10322)
!10339 = !DILocation(line: 2856, column: 3, scope: !10322)
!10340 = !DILocation(line: 2856, column: 18, scope: !10322)
!10341 = !DILocation(line: 2856, column: 24, scope: !10322)
!10342 = !DILocation(line: 2857, column: 3, scope: !10322)
!10343 = !DILocation(line: 2857, column: 18, scope: !10322)
!10344 = !DILocation(line: 2857, column: 24, scope: !10322)
!10345 = !DILocation(line: 2859, column: 34, scope: !10322)
!10346 = !DILocation(line: 2859, column: 3, scope: !10322)
!10347 = !DILocation(line: 2859, column: 10, scope: !10322)
!10348 = !DILocation(line: 2859, column: 23, scope: !10322)
!10349 = !DILocation(line: 2859, column: 26, scope: !10322)
!10350 = !DILocation(line: 2859, column: 32, scope: !10322)
!10351 = !DILocation(line: 2860, column: 16, scope: !10322)
!10352 = !DILocation(line: 2860, column: 3, scope: !10322)
!10353 = !DILocation(line: 2860, column: 8, scope: !10322)
!10354 = !DILocation(line: 2860, column: 14, scope: !10322)
!10355 = !DILocation(line: 2861, column: 2, scope: !10322)
!10356 = distinct !{!10356, !10315, !10357}
!10357 = !DILocation(line: 2861, column: 2, scope: !10316)
!10358 = !DILocation(line: 2863, column: 2, scope: !10019)
!10359 = !DILocation(line: 2864, column: 1, scope: !10019)
!10360 = distinct !DISubprogram(name: "drm_atomic_state_get", scope: !4522, file: !4522, line: 420, type: !10361, scopeLine: 421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10361 = !DISubroutineType(types: !10362)
!10362 = !{!4520, !4520}
!10363 = !DILocalVariable(name: "state", arg: 1, scope: !10360, file: !4522, line: 420, type: !4520)
!10364 = !DILocation(line: 420, column: 47, scope: !10360)
!10365 = !DILocation(line: 422, column: 12, scope: !10360)
!10366 = !DILocation(line: 422, column: 19, scope: !10360)
!10367 = !DILocation(line: 422, column: 2, scope: !10360)
!10368 = !DILocation(line: 423, column: 9, scope: !10360)
!10369 = !DILocation(line: 423, column: 2, scope: !10360)
!10370 = distinct !DISubprogram(name: "queue_work", scope: !1900, file: !1900, line: 504, type: !10371, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10371 = !DISubroutineType(types: !10372)
!10372 = !{!315, !2748, !1909}
!10373 = !DILocalVariable(name: "wq", arg: 1, scope: !10370, file: !1900, line: 504, type: !2748)
!10374 = !DILocation(line: 504, column: 56, scope: !10370)
!10375 = !DILocalVariable(name: "work", arg: 2, scope: !10370, file: !1900, line: 505, type: !1909)
!10376 = !DILocation(line: 505, column: 30, scope: !10370)
!10377 = !DILocation(line: 507, column: 41, scope: !10370)
!10378 = !DILocation(line: 507, column: 45, scope: !10370)
!10379 = !DILocation(line: 507, column: 9, scope: !10370)
!10380 = !DILocation(line: 507, column: 2, scope: !10370)
!10381 = distinct !DISubprogram(name: "commit_tail", scope: !3, file: !3, line: 1625, type: !5691, scopeLine: 1626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10382 = !DILocalVariable(name: "old_state", arg: 1, scope: !10381, file: !3, line: 1625, type: !4520)
!10383 = !DILocation(line: 1625, column: 50, scope: !10381)
!10384 = !DILocalVariable(name: "dev", scope: !10381, file: !3, line: 1627, type: !6)
!10385 = !DILocation(line: 1627, column: 21, scope: !10381)
!10386 = !DILocation(line: 1627, column: 27, scope: !10381)
!10387 = !DILocation(line: 1627, column: 38, scope: !10381)
!10388 = !DILocalVariable(name: "funcs", scope: !10381, file: !3, line: 1628, type: !5778)
!10389 = !DILocation(line: 1628, column: 45, scope: !10381)
!10390 = !DILocalVariable(name: "new_crtc_state", scope: !10381, file: !3, line: 1629, type: !4807)
!10391 = !DILocation(line: 1629, column: 25, scope: !10381)
!10392 = !DILocalVariable(name: "crtc", scope: !10381, file: !3, line: 1630, type: !4551)
!10393 = !DILocation(line: 1630, column: 19, scope: !10381)
!10394 = !DILocalVariable(name: "start", scope: !10381, file: !3, line: 1631, type: !1171)
!10395 = !DILocation(line: 1631, column: 10, scope: !10381)
!10396 = !DILocalVariable(name: "commit_time_ms", scope: !10381, file: !3, line: 1632, type: !562)
!10397 = !DILocation(line: 1632, column: 6, scope: !10381)
!10398 = !DILocalVariable(name: "i", scope: !10381, file: !3, line: 1633, type: !210)
!10399 = !DILocation(line: 1633, column: 15, scope: !10381)
!10400 = !DILocalVariable(name: "new_self_refresh_mask", scope: !10381, file: !3, line: 1633, type: !210)
!10401 = !DILocation(line: 1633, column: 18, scope: !10381)
!10402 = !DILocation(line: 1635, column: 10, scope: !10381)
!10403 = !DILocation(line: 1635, column: 15, scope: !10381)
!10404 = !DILocation(line: 1635, column: 27, scope: !10381)
!10405 = !DILocation(line: 1635, column: 8, scope: !10381)
!10406 = !DILocation(line: 1647, column: 10, scope: !10381)
!10407 = !DILocation(line: 1647, column: 8, scope: !10381)
!10408 = !DILocation(line: 1649, column: 36, scope: !10381)
!10409 = !DILocation(line: 1649, column: 41, scope: !10381)
!10410 = !DILocation(line: 1649, column: 2, scope: !10381)
!10411 = !DILocation(line: 1651, column: 42, scope: !10381)
!10412 = !DILocation(line: 1651, column: 2, scope: !10381)
!10413 = !DILocation(line: 1658, column: 2, scope: !10414)
!10414 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 1658, column: 2)
!10415 = !DILocation(line: 1658, column: 2, scope: !10416)
!10416 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 1658, column: 2)
!10417 = !DILocation(line: 1658, column: 2, scope: !10418)
!10418 = distinct !DILexicalBlock(scope: !10416, file: !3, line: 1658, column: 2)
!10419 = !DILocation(line: 1658, column: 2, scope: !10420)
!10420 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 1658, column: 2)
!10421 = !DILocation(line: 1659, column: 7, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10418, file: !3, line: 1659, column: 7)
!10423 = !DILocation(line: 1659, column: 23, scope: !10422)
!10424 = !DILocation(line: 1659, column: 7, scope: !10418)
!10425 = !DILocation(line: 1660, column: 29, scope: !10422)
!10426 = !DILocation(line: 1660, column: 26, scope: !10422)
!10427 = !DILocation(line: 1660, column: 4, scope: !10422)
!10428 = distinct !{!10428, !10413, !10429}
!10429 = !DILocation(line: 1660, column: 29, scope: !10414)
!10430 = !DILocation(line: 1662, column: 6, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 1662, column: 6)
!10432 = !DILocation(line: 1662, column: 12, scope: !10431)
!10433 = !DILocation(line: 1662, column: 15, scope: !10431)
!10434 = !DILocation(line: 1662, column: 22, scope: !10431)
!10435 = !DILocation(line: 1662, column: 6, scope: !10381)
!10436 = !DILocation(line: 1663, column: 3, scope: !10431)
!10437 = !DILocation(line: 1663, column: 10, scope: !10431)
!10438 = !DILocation(line: 1663, column: 29, scope: !10431)
!10439 = !DILocation(line: 1665, column: 33, scope: !10431)
!10440 = !DILocation(line: 1665, column: 3, scope: !10431)
!10441 = !DILocation(line: 1667, column: 34, scope: !10381)
!10442 = !DILocation(line: 1667, column: 47, scope: !10381)
!10443 = !DILocation(line: 1667, column: 19, scope: !10381)
!10444 = !DILocation(line: 1667, column: 17, scope: !10381)
!10445 = !DILocation(line: 1668, column: 6, scope: !10446)
!10446 = distinct !DILexicalBlock(scope: !10381, file: !3, line: 1668, column: 6)
!10447 = !DILocation(line: 1668, column: 21, scope: !10446)
!10448 = !DILocation(line: 1668, column: 6, scope: !10381)
!10449 = !DILocation(line: 1669, column: 44, scope: !10446)
!10450 = !DILocation(line: 1670, column: 23, scope: !10446)
!10451 = !DILocation(line: 1670, column: 8, scope: !10446)
!10452 = !DILocation(line: 1671, column: 8, scope: !10446)
!10453 = !DILocation(line: 1669, column: 3, scope: !10446)
!10454 = !DILocation(line: 1673, column: 40, scope: !10381)
!10455 = !DILocation(line: 1673, column: 2, scope: !10381)
!10456 = !DILocation(line: 1675, column: 23, scope: !10381)
!10457 = !DILocation(line: 1675, column: 2, scope: !10381)
!10458 = !DILocation(line: 1676, column: 1, scope: !10381)
!10459 = distinct !DISubprogram(name: "kzalloc", scope: !5869, file: !5869, line: 662, type: !10460, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10460 = !DISubroutineType(types: !10461)
!10461 = !{!170, !143, !622}
!10462 = !DILocalVariable(name: "s", arg: 1, scope: !10463, file: !5869, line: 445, type: !810)
!10463 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !5869, file: !5869, line: 445, type: !10464, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10464 = !DISubroutineType(types: !10465)
!10465 = !{!170, !810, !622, !143}
!10466 = !DILocation(line: 445, column: 72, scope: !10463, inlinedAt: !10467)
!10467 = distinct !DILocation(line: 552, column: 10, scope: !10468, inlinedAt: !10471)
!10468 = distinct !DILexicalBlock(scope: !10469, file: !5869, line: 540, column: 34)
!10469 = distinct !DILexicalBlock(scope: !10470, file: !5869, line: 540, column: 6)
!10470 = distinct !DISubprogram(name: "kmalloc", scope: !5869, file: !5869, line: 538, type: !10460, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10471 = distinct !DILocation(line: 664, column: 9, scope: !10459)
!10472 = !DILocalVariable(name: "flags", arg: 2, scope: !10463, file: !5869, line: 446, type: !622)
!10473 = !DILocation(line: 446, column: 9, scope: !10463, inlinedAt: !10467)
!10474 = !DILocalVariable(name: "size", arg: 3, scope: !10463, file: !5869, line: 446, type: !143)
!10475 = !DILocation(line: 446, column: 23, scope: !10463, inlinedAt: !10467)
!10476 = !DILocalVariable(name: "ret", scope: !10463, file: !5869, line: 448, type: !170)
!10477 = !DILocation(line: 448, column: 8, scope: !10463, inlinedAt: !10467)
!10478 = !DILocalVariable(name: "flags", arg: 1, scope: !10479, file: !5869, line: 318, type: !622)
!10479 = distinct !DISubprogram(name: "kmalloc_type", scope: !5869, file: !5869, line: 318, type: !10480, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10480 = !DISubroutineType(types: !10481)
!10481 = !{!5868, !622}
!10482 = !DILocation(line: 318, column: 67, scope: !10479, inlinedAt: !10483)
!10483 = distinct !DILocation(line: 553, column: 20, scope: !10468, inlinedAt: !10471)
!10484 = !DILocalVariable(name: "size", arg: 1, scope: !10485, file: !5869, line: 346, type: !143)
!10485 = distinct !DISubprogram(name: "kmalloc_index", scope: !5869, file: !5869, line: 346, type: !10486, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10486 = !DISubroutineType(types: !10487)
!10487 = !{!210, !143}
!10488 = !DILocation(line: 346, column: 58, scope: !10485, inlinedAt: !10489)
!10489 = distinct !DILocation(line: 547, column: 11, scope: !10468, inlinedAt: !10471)
!10490 = !DILocalVariable(name: "size", arg: 1, scope: !10491, file: !5869, line: 472, type: !143)
!10491 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !5869, file: !5869, line: 472, type: !10492, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10492 = !DISubroutineType(types: !10493)
!10493 = !{!170, !143, !622, !210}
!10494 = !DILocation(line: 472, column: 28, scope: !10491, inlinedAt: !10495)
!10495 = distinct !DILocation(line: 481, column: 9, scope: !10496, inlinedAt: !10497)
!10496 = distinct !DISubprogram(name: "kmalloc_large", scope: !5869, file: !5869, line: 478, type: !10460, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10497 = distinct !DILocation(line: 545, column: 11, scope: !10498, inlinedAt: !10471)
!10498 = distinct !DILexicalBlock(scope: !10468, file: !5869, line: 544, column: 7)
!10499 = !DILocalVariable(name: "flags", arg: 2, scope: !10491, file: !5869, line: 472, type: !622)
!10500 = !DILocation(line: 472, column: 40, scope: !10491, inlinedAt: !10495)
!10501 = !DILocalVariable(name: "order", arg: 3, scope: !10491, file: !5869, line: 472, type: !210)
!10502 = !DILocation(line: 472, column: 60, scope: !10491, inlinedAt: !10495)
!10503 = !DILocalVariable(name: "size", arg: 1, scope: !10496, file: !5869, line: 478, type: !143)
!10504 = !DILocation(line: 478, column: 51, scope: !10496, inlinedAt: !10497)
!10505 = !DILocalVariable(name: "flags", arg: 2, scope: !10496, file: !5869, line: 478, type: !622)
!10506 = !DILocation(line: 478, column: 63, scope: !10496, inlinedAt: !10497)
!10507 = !DILocalVariable(name: "order", scope: !10496, file: !5869, line: 480, type: !210)
!10508 = !DILocation(line: 480, column: 15, scope: !10496, inlinedAt: !10497)
!10509 = !DILocalVariable(name: "size", arg: 1, scope: !10470, file: !5869, line: 538, type: !143)
!10510 = !DILocation(line: 538, column: 45, scope: !10470, inlinedAt: !10471)
!10511 = !DILocalVariable(name: "flags", arg: 2, scope: !10470, file: !5869, line: 538, type: !622)
!10512 = !DILocation(line: 538, column: 57, scope: !10470, inlinedAt: !10471)
!10513 = !DILocalVariable(name: "index", scope: !10468, file: !5869, line: 542, type: !210)
!10514 = !DILocation(line: 542, column: 16, scope: !10468, inlinedAt: !10471)
!10515 = !DILocalVariable(name: "size", arg: 1, scope: !10459, file: !5869, line: 662, type: !143)
!10516 = !DILocation(line: 662, column: 36, scope: !10459)
!10517 = !DILocalVariable(name: "flags", arg: 2, scope: !10459, file: !5869, line: 662, type: !622)
!10518 = !DILocation(line: 662, column: 48, scope: !10459)
!10519 = !DILocation(line: 664, column: 17, scope: !10459)
!10520 = !DILocation(line: 664, column: 23, scope: !10459)
!10521 = !DILocation(line: 664, column: 29, scope: !10459)
!10522 = !DILocation(line: 540, column: 27, scope: !10469, inlinedAt: !10471)
!10523 = !DILocation(line: 540, column: 6, scope: !10469, inlinedAt: !10471)
!10524 = !DILocation(line: 540, column: 6, scope: !10470, inlinedAt: !10471)
!10525 = !DILocation(line: 544, column: 7, scope: !10498, inlinedAt: !10471)
!10526 = !DILocation(line: 544, column: 12, scope: !10498, inlinedAt: !10471)
!10527 = !DILocation(line: 544, column: 7, scope: !10468, inlinedAt: !10471)
!10528 = !DILocation(line: 545, column: 25, scope: !10498, inlinedAt: !10471)
!10529 = !DILocation(line: 545, column: 31, scope: !10498, inlinedAt: !10471)
!10530 = !DILocation(line: 480, column: 33, scope: !10496, inlinedAt: !10497)
!10531 = !DILocation(line: 480, column: 23, scope: !10496, inlinedAt: !10497)
!10532 = !DILocation(line: 481, column: 29, scope: !10496, inlinedAt: !10497)
!10533 = !DILocation(line: 481, column: 35, scope: !10496, inlinedAt: !10497)
!10534 = !DILocation(line: 481, column: 42, scope: !10496, inlinedAt: !10497)
!10535 = !DILocation(line: 474, column: 23, scope: !10491, inlinedAt: !10495)
!10536 = !DILocation(line: 474, column: 29, scope: !10491, inlinedAt: !10495)
!10537 = !DILocation(line: 474, column: 36, scope: !10491, inlinedAt: !10495)
!10538 = !DILocation(line: 474, column: 9, scope: !10491, inlinedAt: !10495)
!10539 = !DILocation(line: 545, column: 4, scope: !10498, inlinedAt: !10471)
!10540 = !DILocation(line: 547, column: 25, scope: !10468, inlinedAt: !10471)
!10541 = !DILocation(line: 348, column: 7, scope: !10542, inlinedAt: !10489)
!10542 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 348, column: 6)
!10543 = !DILocation(line: 348, column: 6, scope: !10485, inlinedAt: !10489)
!10544 = !DILocation(line: 349, column: 3, scope: !10542, inlinedAt: !10489)
!10545 = !DILocation(line: 351, column: 6, scope: !10546, inlinedAt: !10489)
!10546 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 351, column: 6)
!10547 = !DILocation(line: 351, column: 11, scope: !10546, inlinedAt: !10489)
!10548 = !DILocation(line: 351, column: 6, scope: !10485, inlinedAt: !10489)
!10549 = !DILocation(line: 352, column: 3, scope: !10546, inlinedAt: !10489)
!10550 = !DILocation(line: 354, column: 32, scope: !10551, inlinedAt: !10489)
!10551 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 354, column: 6)
!10552 = !DILocation(line: 354, column: 37, scope: !10551, inlinedAt: !10489)
!10553 = !DILocation(line: 354, column: 42, scope: !10551, inlinedAt: !10489)
!10554 = !DILocation(line: 354, column: 45, scope: !10551, inlinedAt: !10489)
!10555 = !DILocation(line: 354, column: 50, scope: !10551, inlinedAt: !10489)
!10556 = !DILocation(line: 354, column: 6, scope: !10485, inlinedAt: !10489)
!10557 = !DILocation(line: 355, column: 3, scope: !10551, inlinedAt: !10489)
!10558 = !DILocation(line: 356, column: 32, scope: !10559, inlinedAt: !10489)
!10559 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 356, column: 6)
!10560 = !DILocation(line: 356, column: 37, scope: !10559, inlinedAt: !10489)
!10561 = !DILocation(line: 356, column: 43, scope: !10559, inlinedAt: !10489)
!10562 = !DILocation(line: 356, column: 46, scope: !10559, inlinedAt: !10489)
!10563 = !DILocation(line: 356, column: 51, scope: !10559, inlinedAt: !10489)
!10564 = !DILocation(line: 356, column: 6, scope: !10485, inlinedAt: !10489)
!10565 = !DILocation(line: 357, column: 3, scope: !10559, inlinedAt: !10489)
!10566 = !DILocation(line: 358, column: 6, scope: !10567, inlinedAt: !10489)
!10567 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 358, column: 6)
!10568 = !DILocation(line: 358, column: 11, scope: !10567, inlinedAt: !10489)
!10569 = !DILocation(line: 358, column: 6, scope: !10485, inlinedAt: !10489)
!10570 = !DILocation(line: 358, column: 26, scope: !10567, inlinedAt: !10489)
!10571 = !DILocation(line: 359, column: 6, scope: !10572, inlinedAt: !10489)
!10572 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 359, column: 6)
!10573 = !DILocation(line: 359, column: 11, scope: !10572, inlinedAt: !10489)
!10574 = !DILocation(line: 359, column: 6, scope: !10485, inlinedAt: !10489)
!10575 = !DILocation(line: 359, column: 26, scope: !10572, inlinedAt: !10489)
!10576 = !DILocation(line: 360, column: 6, scope: !10577, inlinedAt: !10489)
!10577 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 360, column: 6)
!10578 = !DILocation(line: 360, column: 11, scope: !10577, inlinedAt: !10489)
!10579 = !DILocation(line: 360, column: 6, scope: !10485, inlinedAt: !10489)
!10580 = !DILocation(line: 360, column: 26, scope: !10577, inlinedAt: !10489)
!10581 = !DILocation(line: 361, column: 6, scope: !10582, inlinedAt: !10489)
!10582 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 361, column: 6)
!10583 = !DILocation(line: 361, column: 11, scope: !10582, inlinedAt: !10489)
!10584 = !DILocation(line: 361, column: 6, scope: !10485, inlinedAt: !10489)
!10585 = !DILocation(line: 361, column: 26, scope: !10582, inlinedAt: !10489)
!10586 = !DILocation(line: 362, column: 6, scope: !10587, inlinedAt: !10489)
!10587 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 362, column: 6)
!10588 = !DILocation(line: 362, column: 11, scope: !10587, inlinedAt: !10489)
!10589 = !DILocation(line: 362, column: 6, scope: !10485, inlinedAt: !10489)
!10590 = !DILocation(line: 362, column: 26, scope: !10587, inlinedAt: !10489)
!10591 = !DILocation(line: 363, column: 6, scope: !10592, inlinedAt: !10489)
!10592 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 363, column: 6)
!10593 = !DILocation(line: 363, column: 11, scope: !10592, inlinedAt: !10489)
!10594 = !DILocation(line: 363, column: 6, scope: !10485, inlinedAt: !10489)
!10595 = !DILocation(line: 363, column: 26, scope: !10592, inlinedAt: !10489)
!10596 = !DILocation(line: 364, column: 6, scope: !10597, inlinedAt: !10489)
!10597 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 364, column: 6)
!10598 = !DILocation(line: 364, column: 11, scope: !10597, inlinedAt: !10489)
!10599 = !DILocation(line: 364, column: 6, scope: !10485, inlinedAt: !10489)
!10600 = !DILocation(line: 364, column: 26, scope: !10597, inlinedAt: !10489)
!10601 = !DILocation(line: 365, column: 6, scope: !10602, inlinedAt: !10489)
!10602 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 365, column: 6)
!10603 = !DILocation(line: 365, column: 11, scope: !10602, inlinedAt: !10489)
!10604 = !DILocation(line: 365, column: 6, scope: !10485, inlinedAt: !10489)
!10605 = !DILocation(line: 365, column: 26, scope: !10602, inlinedAt: !10489)
!10606 = !DILocation(line: 366, column: 6, scope: !10607, inlinedAt: !10489)
!10607 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 366, column: 6)
!10608 = !DILocation(line: 366, column: 11, scope: !10607, inlinedAt: !10489)
!10609 = !DILocation(line: 366, column: 6, scope: !10485, inlinedAt: !10489)
!10610 = !DILocation(line: 366, column: 26, scope: !10607, inlinedAt: !10489)
!10611 = !DILocation(line: 367, column: 6, scope: !10612, inlinedAt: !10489)
!10612 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 367, column: 6)
!10613 = !DILocation(line: 367, column: 11, scope: !10612, inlinedAt: !10489)
!10614 = !DILocation(line: 367, column: 6, scope: !10485, inlinedAt: !10489)
!10615 = !DILocation(line: 367, column: 26, scope: !10612, inlinedAt: !10489)
!10616 = !DILocation(line: 368, column: 6, scope: !10617, inlinedAt: !10489)
!10617 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 368, column: 6)
!10618 = !DILocation(line: 368, column: 11, scope: !10617, inlinedAt: !10489)
!10619 = !DILocation(line: 368, column: 6, scope: !10485, inlinedAt: !10489)
!10620 = !DILocation(line: 368, column: 26, scope: !10617, inlinedAt: !10489)
!10621 = !DILocation(line: 369, column: 6, scope: !10622, inlinedAt: !10489)
!10622 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 369, column: 6)
!10623 = !DILocation(line: 369, column: 11, scope: !10622, inlinedAt: !10489)
!10624 = !DILocation(line: 369, column: 6, scope: !10485, inlinedAt: !10489)
!10625 = !DILocation(line: 369, column: 26, scope: !10622, inlinedAt: !10489)
!10626 = !DILocation(line: 370, column: 6, scope: !10627, inlinedAt: !10489)
!10627 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 370, column: 6)
!10628 = !DILocation(line: 370, column: 11, scope: !10627, inlinedAt: !10489)
!10629 = !DILocation(line: 370, column: 6, scope: !10485, inlinedAt: !10489)
!10630 = !DILocation(line: 370, column: 26, scope: !10627, inlinedAt: !10489)
!10631 = !DILocation(line: 371, column: 6, scope: !10632, inlinedAt: !10489)
!10632 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 371, column: 6)
!10633 = !DILocation(line: 371, column: 11, scope: !10632, inlinedAt: !10489)
!10634 = !DILocation(line: 371, column: 6, scope: !10485, inlinedAt: !10489)
!10635 = !DILocation(line: 371, column: 26, scope: !10632, inlinedAt: !10489)
!10636 = !DILocation(line: 372, column: 6, scope: !10637, inlinedAt: !10489)
!10637 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 372, column: 6)
!10638 = !DILocation(line: 372, column: 11, scope: !10637, inlinedAt: !10489)
!10639 = !DILocation(line: 372, column: 6, scope: !10485, inlinedAt: !10489)
!10640 = !DILocation(line: 372, column: 26, scope: !10637, inlinedAt: !10489)
!10641 = !DILocation(line: 373, column: 6, scope: !10642, inlinedAt: !10489)
!10642 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 373, column: 6)
!10643 = !DILocation(line: 373, column: 11, scope: !10642, inlinedAt: !10489)
!10644 = !DILocation(line: 373, column: 6, scope: !10485, inlinedAt: !10489)
!10645 = !DILocation(line: 373, column: 26, scope: !10642, inlinedAt: !10489)
!10646 = !DILocation(line: 374, column: 6, scope: !10647, inlinedAt: !10489)
!10647 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 374, column: 6)
!10648 = !DILocation(line: 374, column: 11, scope: !10647, inlinedAt: !10489)
!10649 = !DILocation(line: 374, column: 6, scope: !10485, inlinedAt: !10489)
!10650 = !DILocation(line: 374, column: 26, scope: !10647, inlinedAt: !10489)
!10651 = !DILocation(line: 375, column: 6, scope: !10652, inlinedAt: !10489)
!10652 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 375, column: 6)
!10653 = !DILocation(line: 375, column: 11, scope: !10652, inlinedAt: !10489)
!10654 = !DILocation(line: 375, column: 6, scope: !10485, inlinedAt: !10489)
!10655 = !DILocation(line: 375, column: 27, scope: !10652, inlinedAt: !10489)
!10656 = !DILocation(line: 376, column: 6, scope: !10657, inlinedAt: !10489)
!10657 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 376, column: 6)
!10658 = !DILocation(line: 376, column: 11, scope: !10657, inlinedAt: !10489)
!10659 = !DILocation(line: 376, column: 6, scope: !10485, inlinedAt: !10489)
!10660 = !DILocation(line: 376, column: 32, scope: !10657, inlinedAt: !10489)
!10661 = !DILocation(line: 377, column: 6, scope: !10662, inlinedAt: !10489)
!10662 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 377, column: 6)
!10663 = !DILocation(line: 377, column: 11, scope: !10662, inlinedAt: !10489)
!10664 = !DILocation(line: 377, column: 6, scope: !10485, inlinedAt: !10489)
!10665 = !DILocation(line: 377, column: 32, scope: !10662, inlinedAt: !10489)
!10666 = !DILocation(line: 378, column: 6, scope: !10667, inlinedAt: !10489)
!10667 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 378, column: 6)
!10668 = !DILocation(line: 378, column: 11, scope: !10667, inlinedAt: !10489)
!10669 = !DILocation(line: 378, column: 6, scope: !10485, inlinedAt: !10489)
!10670 = !DILocation(line: 378, column: 32, scope: !10667, inlinedAt: !10489)
!10671 = !DILocation(line: 379, column: 6, scope: !10672, inlinedAt: !10489)
!10672 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 379, column: 6)
!10673 = !DILocation(line: 379, column: 11, scope: !10672, inlinedAt: !10489)
!10674 = !DILocation(line: 379, column: 6, scope: !10485, inlinedAt: !10489)
!10675 = !DILocation(line: 379, column: 33, scope: !10672, inlinedAt: !10489)
!10676 = !DILocation(line: 380, column: 6, scope: !10677, inlinedAt: !10489)
!10677 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 380, column: 6)
!10678 = !DILocation(line: 380, column: 11, scope: !10677, inlinedAt: !10489)
!10679 = !DILocation(line: 380, column: 6, scope: !10485, inlinedAt: !10489)
!10680 = !DILocation(line: 380, column: 33, scope: !10677, inlinedAt: !10489)
!10681 = !DILocation(line: 381, column: 6, scope: !10682, inlinedAt: !10489)
!10682 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 381, column: 6)
!10683 = !DILocation(line: 381, column: 11, scope: !10682, inlinedAt: !10489)
!10684 = !DILocation(line: 381, column: 6, scope: !10485, inlinedAt: !10489)
!10685 = !DILocation(line: 381, column: 33, scope: !10682, inlinedAt: !10489)
!10686 = !DILocation(line: 382, column: 2, scope: !10687, inlinedAt: !10489)
!10687 = distinct !DILexicalBlock(scope: !10688, file: !5869, line: 382, column: 2)
!10688 = distinct !DILexicalBlock(scope: !10485, file: !5869, line: 382, column: 2)
!10689 = !{i32 -2143476512, i32 -2143476483, i32 -2143476437, i32 -2143476379, i32 -2143476325, i32 -2143476271, i32 -2143476216, i32 -2143476185}
!10690 = !DILocation(line: 382, column: 2, scope: !10691, inlinedAt: !10489)
!10691 = distinct !DILexicalBlock(scope: !10692, file: !5869, line: 382, column: 2)
!10692 = distinct !DILexicalBlock(scope: !10688, file: !5869, line: 382, column: 2)
!10693 = !{i32 -2143475742, i32 -2143475735, i32 -2143475681, i32 -2143475650, i32 -2143475620}
!10694 = !DILocation(line: 382, column: 2, scope: !10692, inlinedAt: !10489)
!10695 = !DILocation(line: 386, column: 1, scope: !10485, inlinedAt: !10489)
!10696 = !DILocation(line: 547, column: 9, scope: !10468, inlinedAt: !10471)
!10697 = !DILocation(line: 549, column: 8, scope: !10698, inlinedAt: !10471)
!10698 = distinct !DILexicalBlock(scope: !10468, file: !5869, line: 549, column: 7)
!10699 = !DILocation(line: 549, column: 7, scope: !10468, inlinedAt: !10471)
!10700 = !DILocation(line: 550, column: 4, scope: !10698, inlinedAt: !10471)
!10701 = !DILocation(line: 553, column: 33, scope: !10468, inlinedAt: !10471)
!10702 = !DILocation(line: 325, column: 6, scope: !10703, inlinedAt: !10483)
!10703 = distinct !DILexicalBlock(scope: !10479, file: !5869, line: 325, column: 6)
!10704 = !DILocation(line: 325, column: 6, scope: !10479, inlinedAt: !10483)
!10705 = !DILocation(line: 326, column: 3, scope: !10703, inlinedAt: !10483)
!10706 = !DILocation(line: 332, column: 9, scope: !10479, inlinedAt: !10483)
!10707 = !DILocation(line: 332, column: 15, scope: !10479, inlinedAt: !10483)
!10708 = !DILocation(line: 332, column: 2, scope: !10479, inlinedAt: !10483)
!10709 = !DILocation(line: 336, column: 1, scope: !10479, inlinedAt: !10483)
!10710 = !DILocation(line: 553, column: 5, scope: !10468, inlinedAt: !10471)
!10711 = !DILocation(line: 553, column: 41, scope: !10468, inlinedAt: !10471)
!10712 = !DILocation(line: 554, column: 5, scope: !10468, inlinedAt: !10471)
!10713 = !DILocation(line: 554, column: 12, scope: !10468, inlinedAt: !10471)
!10714 = !DILocation(line: 448, column: 31, scope: !10463, inlinedAt: !10467)
!10715 = !DILocation(line: 448, column: 34, scope: !10463, inlinedAt: !10467)
!10716 = !DILocation(line: 448, column: 14, scope: !10463, inlinedAt: !10467)
!10717 = !DILocation(line: 450, column: 22, scope: !10463, inlinedAt: !10467)
!10718 = !DILocation(line: 450, column: 25, scope: !10463, inlinedAt: !10467)
!10719 = !DILocation(line: 450, column: 30, scope: !10463, inlinedAt: !10467)
!10720 = !DILocation(line: 450, column: 36, scope: !10463, inlinedAt: !10467)
!10721 = !DILocation(line: 450, column: 8, scope: !10463, inlinedAt: !10467)
!10722 = !DILocation(line: 450, column: 6, scope: !10463, inlinedAt: !10467)
!10723 = !DILocation(line: 451, column: 9, scope: !10463, inlinedAt: !10467)
!10724 = !DILocation(line: 552, column: 3, scope: !10468, inlinedAt: !10471)
!10725 = !DILocation(line: 557, column: 19, scope: !10470, inlinedAt: !10471)
!10726 = !DILocation(line: 557, column: 25, scope: !10470, inlinedAt: !10471)
!10727 = !DILocation(line: 557, column: 9, scope: !10470, inlinedAt: !10471)
!10728 = !DILocation(line: 557, column: 2, scope: !10470, inlinedAt: !10471)
!10729 = !DILocation(line: 558, column: 1, scope: !10470, inlinedAt: !10471)
!10730 = !DILocation(line: 664, column: 2, scope: !10459)
!10731 = distinct !DISubprogram(name: "init_commit", scope: !3, file: !3, line: 1995, type: !10732, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10732 = !DISubroutineType(types: !10733)
!10733 = !{null, !4932, !4551}
!10734 = !DILocalVariable(name: "commit", arg: 1, scope: !10731, file: !3, line: 1995, type: !4932)
!10735 = !DILocation(line: 1995, column: 49, scope: !10731)
!10736 = !DILocalVariable(name: "crtc", arg: 2, scope: !10731, file: !3, line: 1995, type: !4551)
!10737 = !DILocation(line: 1995, column: 74, scope: !10731)
!10738 = !DILocation(line: 1997, column: 2, scope: !10731)
!10739 = !DILocation(line: 1998, column: 2, scope: !10731)
!10740 = !DILocation(line: 1999, column: 2, scope: !10731)
!10741 = !DILocation(line: 2000, column: 18, scope: !10731)
!10742 = !DILocation(line: 2000, column: 26, scope: !10731)
!10743 = !DILocation(line: 2000, column: 2, scope: !10731)
!10744 = !DILocation(line: 2001, column: 13, scope: !10731)
!10745 = !DILocation(line: 2001, column: 21, scope: !10731)
!10746 = !DILocation(line: 2001, column: 2, scope: !10731)
!10747 = !DILocation(line: 2002, column: 17, scope: !10731)
!10748 = !DILocation(line: 2002, column: 2, scope: !10731)
!10749 = !DILocation(line: 2002, column: 10, scope: !10731)
!10750 = !DILocation(line: 2002, column: 15, scope: !10731)
!10751 = !DILocation(line: 2003, column: 1, scope: !10731)
!10752 = distinct !DISubprogram(name: "stall_checks", scope: !3, file: !3, line: 1942, type: !10753, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10753 = !DISubroutineType(types: !10754)
!10754 = !{!18, !4551, !315}
!10755 = !DILocation(line: 392, column: 53, scope: !10021, inlinedAt: !10756)
!10756 = distinct !DILocation(line: 1967, column: 2, scope: !10752)
!10757 = !DILocation(line: 392, column: 53, scope: !10021, inlinedAt: !10758)
!10758 = distinct !DILocation(line: 1957, column: 5, scope: !10759)
!10759 = distinct !DILexicalBlock(scope: !10760, file: !3, line: 1956, column: 32)
!10760 = distinct !DILexicalBlock(scope: !10761, file: !3, line: 1956, column: 8)
!10761 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1952, column: 15)
!10762 = distinct !DILexicalBlock(scope: !10763, file: !3, line: 1952, column: 7)
!10763 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 1951, column: 64)
!10764 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 1951, column: 2)
!10765 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 1951, column: 2)
!10766 = !DILocation(line: 352, column: 51, scope: !10033, inlinedAt: !10767)
!10767 = distinct !DILocation(line: 1949, column: 2, scope: !10752)
!10768 = !DILocalVariable(name: "crtc", arg: 1, scope: !10752, file: !3, line: 1942, type: !4551)
!10769 = !DILocation(line: 1942, column: 42, scope: !10752)
!10770 = !DILocalVariable(name: "nonblock", arg: 2, scope: !10752, file: !3, line: 1942, type: !315)
!10771 = !DILocation(line: 1942, column: 53, scope: !10752)
!10772 = !DILocalVariable(name: "commit", scope: !10752, file: !3, line: 1944, type: !4932)
!10773 = !DILocation(line: 1944, column: 26, scope: !10752)
!10774 = !DILocalVariable(name: "stall_commit", scope: !10752, file: !3, line: 1944, type: !4932)
!10775 = !DILocation(line: 1944, column: 35, scope: !10752)
!10776 = !DILocalVariable(name: "completed", scope: !10752, file: !3, line: 1945, type: !315)
!10777 = !DILocation(line: 1945, column: 7, scope: !10752)
!10778 = !DILocalVariable(name: "i", scope: !10752, file: !3, line: 1946, type: !18)
!10779 = !DILocation(line: 1946, column: 6, scope: !10752)
!10780 = !DILocalVariable(name: "ret", scope: !10752, file: !3, line: 1947, type: !131)
!10781 = !DILocation(line: 1947, column: 7, scope: !10752)
!10782 = !DILocation(line: 1949, column: 13, scope: !10752)
!10783 = !DILocation(line: 1949, column: 19, scope: !10752)
!10784 = !DILocation(line: 354, column: 2, scope: !10246, inlinedAt: !10767)
!10785 = !DILocation(line: 354, column: 2, scope: !10249, inlinedAt: !10767)
!10786 = !DILocation(line: 1950, column: 4, scope: !10752)
!10787 = !DILocalVariable(name: "__mptr", scope: !10788, file: !3, line: 1951, type: !170)
!10788 = distinct !DILexicalBlock(scope: !10765, file: !3, line: 1951, column: 2)
!10789 = !DILocation(line: 1951, column: 2, scope: !10788)
!10790 = !DILocation(line: 1951, column: 2, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10788, file: !3, line: 1951, column: 2)
!10792 = !DILocation(line: 1951, column: 2, scope: !10765)
!10793 = !DILocation(line: 1951, column: 2, scope: !10764)
!10794 = !DILocation(line: 1952, column: 7, scope: !10762)
!10795 = !DILocation(line: 1952, column: 9, scope: !10762)
!10796 = !DILocation(line: 1952, column: 7, scope: !10763)
!10797 = !DILocation(line: 1953, column: 41, scope: !10761)
!10798 = !DILocation(line: 1953, column: 49, scope: !10761)
!10799 = !DILocation(line: 1953, column: 16, scope: !10761)
!10800 = !DILocation(line: 1953, column: 14, scope: !10761)
!10801 = !DILocation(line: 1956, column: 9, scope: !10760)
!10802 = !DILocation(line: 1956, column: 19, scope: !10760)
!10803 = !DILocation(line: 1956, column: 22, scope: !10760)
!10804 = !DILocation(line: 1956, column: 8, scope: !10761)
!10805 = !DILocation(line: 1957, column: 18, scope: !10759)
!10806 = !DILocation(line: 1957, column: 24, scope: !10759)
!10807 = !DILocation(line: 394, column: 2, scope: !10259, inlinedAt: !10758)
!10808 = !DILocation(line: 394, column: 2, scope: !10262, inlinedAt: !10758)
!10809 = !DILocation(line: 1958, column: 5, scope: !10759)
!10810 = !DILocation(line: 1960, column: 3, scope: !10761)
!10811 = !DILocation(line: 1960, column: 14, scope: !10812)
!10812 = distinct !DILexicalBlock(scope: !10762, file: !3, line: 1960, column: 14)
!10813 = !DILocation(line: 1960, column: 16, scope: !10812)
!10814 = !DILocation(line: 1960, column: 14, scope: !10762)
!10815 = !DILocation(line: 1961, column: 39, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10812, file: !3, line: 1960, column: 22)
!10817 = !DILocation(line: 1961, column: 19, scope: !10816)
!10818 = !DILocation(line: 1961, column: 17, scope: !10816)
!10819 = !DILocation(line: 1962, column: 4, scope: !10816)
!10820 = !DILocation(line: 1965, column: 4, scope: !10763)
!10821 = !DILocation(line: 1966, column: 2, scope: !10763)
!10822 = !DILocalVariable(name: "__mptr", scope: !10823, file: !3, line: 1951, type: !170)
!10823 = distinct !DILexicalBlock(scope: !10764, file: !3, line: 1951, column: 2)
!10824 = !DILocation(line: 1951, column: 2, scope: !10823)
!10825 = !DILocation(line: 1951, column: 2, scope: !10826)
!10826 = distinct !DILexicalBlock(scope: !10823, file: !3, line: 1951, column: 2)
!10827 = distinct !{!10827, !10792, !10828}
!10828 = !DILocation(line: 1966, column: 2, scope: !10765)
!10829 = !DILocation(line: 1967, column: 15, scope: !10752)
!10830 = !DILocation(line: 1967, column: 21, scope: !10752)
!10831 = !DILocation(line: 394, column: 2, scope: !10259, inlinedAt: !10756)
!10832 = !DILocation(line: 394, column: 2, scope: !10262, inlinedAt: !10756)
!10833 = !DILocation(line: 1969, column: 7, scope: !10834)
!10834 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 1969, column: 6)
!10835 = !DILocation(line: 1969, column: 6, scope: !10752)
!10836 = !DILocation(line: 1970, column: 3, scope: !10834)
!10837 = !DILocation(line: 1975, column: 51, scope: !10752)
!10838 = !DILocation(line: 1975, column: 65, scope: !10752)
!10839 = !DILocation(line: 1975, column: 8, scope: !10752)
!10840 = !DILocation(line: 1975, column: 6, scope: !10752)
!10841 = !DILocation(line: 1977, column: 6, scope: !10842)
!10842 = distinct !DILexicalBlock(scope: !10752, file: !3, line: 1977, column: 6)
!10843 = !DILocation(line: 1977, column: 10, scope: !10842)
!10844 = !DILocation(line: 1977, column: 6, scope: !10752)
!10845 = !DILocation(line: 1978, column: 3, scope: !10842)
!10846 = !DILocation(line: 1981, column: 22, scope: !10752)
!10847 = !DILocation(line: 1981, column: 2, scope: !10752)
!10848 = !DILocation(line: 1983, column: 9, scope: !10752)
!10849 = !DILocation(line: 1983, column: 13, scope: !10752)
!10850 = !DILocation(line: 1983, column: 19, scope: !10752)
!10851 = !DILocation(line: 1983, column: 2, scope: !10752)
!10852 = !DILocation(line: 1984, column: 1, scope: !10752)
!10853 = distinct !DISubprogram(name: "release_crtc_commit", scope: !3, file: !3, line: 1986, type: !4852, scopeLine: 1987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10854 = !DILocalVariable(name: "completion", arg: 1, scope: !10853, file: !3, line: 1986, type: !1421)
!10855 = !DILocation(line: 1986, column: 52, scope: !10853)
!10856 = !DILocalVariable(name: "commit", scope: !10853, file: !3, line: 1988, type: !4932)
!10857 = !DILocation(line: 1988, column: 26, scope: !10853)
!10858 = !DILocalVariable(name: "__mptr", scope: !10859, file: !3, line: 1988, type: !170)
!10859 = distinct !DILexicalBlock(scope: !10853, file: !3, line: 1988, column: 35)
!10860 = !DILocation(line: 1988, column: 35, scope: !10859)
!10861 = !DILocation(line: 1988, column: 35, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10859, file: !3, line: 1988, column: 35)
!10863 = !DILocation(line: 1992, column: 22, scope: !10853)
!10864 = !DILocation(line: 1992, column: 2, scope: !10853)
!10865 = !DILocation(line: 1993, column: 1, scope: !10853)
!10866 = distinct !DISubprogram(name: "drm_crtc_commit_get", scope: !4522, file: !4522, line: 391, type: !10867, scopeLine: 392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10867 = !DISubroutineType(types: !10868)
!10868 = !{!4932, !4932}
!10869 = !DILocalVariable(name: "commit", arg: 1, scope: !10866, file: !4522, line: 391, type: !4932)
!10870 = !DILocation(line: 391, column: 83, scope: !10866)
!10871 = !DILocation(line: 393, column: 12, scope: !10866)
!10872 = !DILocation(line: 393, column: 20, scope: !10866)
!10873 = !DILocation(line: 393, column: 2, scope: !10866)
!10874 = !DILocation(line: 394, column: 9, scope: !10866)
!10875 = !DILocation(line: 394, column: 2, scope: !10866)
!10876 = distinct !DISubprogram(name: "crtc_or_fake_commit", scope: !3, file: !3, line: 2006, type: !10877, scopeLine: 2007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10877 = !DISubroutineType(types: !10878)
!10878 = !{!4932, !4520, !4551}
!10879 = !DILocalVariable(name: "state", arg: 1, scope: !10876, file: !3, line: 2006, type: !4520)
!10880 = !DILocation(line: 2006, column: 46, scope: !10876)
!10881 = !DILocalVariable(name: "crtc", arg: 2, scope: !10876, file: !3, line: 2006, type: !4551)
!10882 = !DILocation(line: 2006, column: 70, scope: !10876)
!10883 = !DILocation(line: 2008, column: 6, scope: !10884)
!10884 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 2008, column: 6)
!10885 = !DILocation(line: 2008, column: 6, scope: !10876)
!10886 = !DILocalVariable(name: "new_crtc_state", scope: !10887, file: !3, line: 2009, type: !4807)
!10887 = distinct !DILexicalBlock(scope: !10884, file: !3, line: 2008, column: 12)
!10888 = !DILocation(line: 2009, column: 26, scope: !10887)
!10889 = !DILocation(line: 2011, column: 50, scope: !10887)
!10890 = !DILocation(line: 2011, column: 57, scope: !10887)
!10891 = !DILocation(line: 2011, column: 20, scope: !10887)
!10892 = !DILocation(line: 2011, column: 18, scope: !10887)
!10893 = !DILocation(line: 2013, column: 10, scope: !10887)
!10894 = !DILocation(line: 2013, column: 26, scope: !10887)
!10895 = !DILocation(line: 2013, column: 3, scope: !10887)
!10896 = !DILocation(line: 2016, column: 7, scope: !10897)
!10897 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 2016, column: 6)
!10898 = !DILocation(line: 2016, column: 14, scope: !10897)
!10899 = !DILocation(line: 2016, column: 6, scope: !10876)
!10900 = !DILocation(line: 2017, column: 24, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10897, file: !3, line: 2016, column: 27)
!10902 = !DILocation(line: 2017, column: 3, scope: !10901)
!10903 = !DILocation(line: 2017, column: 10, scope: !10901)
!10904 = !DILocation(line: 2017, column: 22, scope: !10901)
!10905 = !DILocation(line: 2018, column: 8, scope: !10906)
!10906 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 2018, column: 7)
!10907 = !DILocation(line: 2018, column: 15, scope: !10906)
!10908 = !DILocation(line: 2018, column: 7, scope: !10901)
!10909 = !DILocation(line: 2019, column: 4, scope: !10906)
!10910 = !DILocation(line: 2021, column: 15, scope: !10901)
!10911 = !DILocation(line: 2021, column: 22, scope: !10901)
!10912 = !DILocation(line: 2021, column: 3, scope: !10901)
!10913 = !DILocation(line: 2022, column: 2, scope: !10901)
!10914 = !DILocation(line: 2024, column: 9, scope: !10876)
!10915 = !DILocation(line: 2024, column: 16, scope: !10876)
!10916 = !DILocation(line: 2024, column: 2, scope: !10876)
!10917 = !DILocation(line: 2025, column: 1, scope: !10876)
!10918 = distinct !DISubprogram(name: "drm_atomic_helper_wait_for_dependencies", scope: !3, file: !3, line: 2174, type: !5691, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!10919 = !DILocalVariable(name: "old_state", arg: 1, scope: !10918, file: !3, line: 2174, type: !4520)
!10920 = !DILocation(line: 2174, column: 71, scope: !10918)
!10921 = !DILocalVariable(name: "crtc", scope: !10918, file: !3, line: 2176, type: !4551)
!10922 = !DILocation(line: 2176, column: 19, scope: !10918)
!10923 = !DILocalVariable(name: "old_crtc_state", scope: !10918, file: !3, line: 2177, type: !4807)
!10924 = !DILocation(line: 2177, column: 25, scope: !10918)
!10925 = !DILocalVariable(name: "plane", scope: !10918, file: !3, line: 2178, type: !4535)
!10926 = !DILocation(line: 2178, column: 20, scope: !10918)
!10927 = !DILocalVariable(name: "old_plane_state", scope: !10918, file: !3, line: 2179, type: !5517)
!10928 = !DILocation(line: 2179, column: 26, scope: !10918)
!10929 = !DILocalVariable(name: "conn", scope: !10918, file: !3, line: 2180, type: !4613)
!10930 = !DILocation(line: 2180, column: 24, scope: !10918)
!10931 = !DILocalVariable(name: "old_conn_state", scope: !10918, file: !3, line: 2181, type: !4744)
!10932 = !DILocation(line: 2181, column: 30, scope: !10918)
!10933 = !DILocalVariable(name: "commit", scope: !10918, file: !3, line: 2182, type: !4932)
!10934 = !DILocation(line: 2182, column: 26, scope: !10918)
!10935 = !DILocalVariable(name: "i", scope: !10918, file: !3, line: 2183, type: !18)
!10936 = !DILocation(line: 2183, column: 6, scope: !10918)
!10937 = !DILocalVariable(name: "ret", scope: !10918, file: !3, line: 2184, type: !131)
!10938 = !DILocation(line: 2184, column: 7, scope: !10918)
!10939 = !DILocation(line: 2186, column: 2, scope: !10940)
!10940 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 2186, column: 2)
!10941 = !DILocation(line: 2186, column: 2, scope: !10942)
!10942 = distinct !DILexicalBlock(scope: !10940, file: !3, line: 2186, column: 2)
!10943 = !DILocation(line: 2186, column: 2, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10942, file: !3, line: 2186, column: 2)
!10945 = !DILocation(line: 2186, column: 2, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 2186, column: 2)
!10947 = !DILocation(line: 2187, column: 12, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 2186, column: 65)
!10949 = !DILocation(line: 2187, column: 28, scope: !10948)
!10950 = !DILocation(line: 2187, column: 10, scope: !10948)
!10951 = !DILocation(line: 2189, column: 8, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 2189, column: 7)
!10953 = !DILocation(line: 2189, column: 7, scope: !10948)
!10954 = !DILocation(line: 2190, column: 4, scope: !10952)
!10955 = !DILocation(line: 2192, column: 38, scope: !10948)
!10956 = !DILocation(line: 2192, column: 46, scope: !10948)
!10957 = !DILocation(line: 2192, column: 9, scope: !10948)
!10958 = !DILocation(line: 2192, column: 7, scope: !10948)
!10959 = !DILocation(line: 2194, column: 7, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 2194, column: 7)
!10961 = !DILocation(line: 2194, column: 11, scope: !10960)
!10962 = !DILocation(line: 2194, column: 7, scope: !10948)
!10963 = !DILocation(line: 2195, column: 4, scope: !10960)
!10964 = !DILocation(line: 2200, column: 38, scope: !10948)
!10965 = !DILocation(line: 2200, column: 46, scope: !10948)
!10966 = !DILocation(line: 2200, column: 9, scope: !10948)
!10967 = !DILocation(line: 2200, column: 7, scope: !10948)
!10968 = !DILocation(line: 2202, column: 7, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 2202, column: 7)
!10970 = !DILocation(line: 2202, column: 11, scope: !10969)
!10971 = !DILocation(line: 2202, column: 7, scope: !10948)
!10972 = !DILocation(line: 2203, column: 4, scope: !10969)
!10973 = distinct !{!10973, !10939, !10974}
!10974 = !DILocation(line: 2205, column: 2, scope: !10940)
!10975 = !DILocation(line: 2207, column: 2, scope: !10976)
!10976 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 2207, column: 2)
!10977 = !DILocation(line: 2207, column: 2, scope: !10978)
!10978 = distinct !DILexicalBlock(scope: !10976, file: !3, line: 2207, column: 2)
!10979 = !DILocation(line: 2207, column: 2, scope: !10980)
!10980 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 2207, column: 2)
!10981 = !DILocation(line: 2207, column: 2, scope: !10982)
!10982 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 2207, column: 2)
!10983 = !DILocation(line: 2208, column: 12, scope: !10984)
!10984 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 2207, column: 70)
!10985 = !DILocation(line: 2208, column: 28, scope: !10984)
!10986 = !DILocation(line: 2208, column: 10, scope: !10984)
!10987 = !DILocation(line: 2210, column: 8, scope: !10988)
!10988 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 2210, column: 7)
!10989 = !DILocation(line: 2210, column: 7, scope: !10984)
!10990 = !DILocation(line: 2211, column: 4, scope: !10988)
!10991 = !DILocation(line: 2213, column: 38, scope: !10984)
!10992 = !DILocation(line: 2213, column: 46, scope: !10984)
!10993 = !DILocation(line: 2213, column: 9, scope: !10984)
!10994 = !DILocation(line: 2213, column: 7, scope: !10984)
!10995 = !DILocation(line: 2215, column: 7, scope: !10996)
!10996 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 2215, column: 7)
!10997 = !DILocation(line: 2215, column: 11, scope: !10996)
!10998 = !DILocation(line: 2215, column: 7, scope: !10984)
!10999 = !DILocation(line: 2216, column: 4, scope: !10996)
!11000 = !DILocation(line: 2221, column: 38, scope: !10984)
!11001 = !DILocation(line: 2221, column: 46, scope: !10984)
!11002 = !DILocation(line: 2221, column: 9, scope: !10984)
!11003 = !DILocation(line: 2221, column: 7, scope: !10984)
!11004 = !DILocation(line: 2223, column: 7, scope: !11005)
!11005 = distinct !DILexicalBlock(scope: !10984, file: !3, line: 2223, column: 7)
!11006 = !DILocation(line: 2223, column: 11, scope: !11005)
!11007 = !DILocation(line: 2223, column: 7, scope: !10984)
!11008 = !DILocation(line: 2224, column: 4, scope: !11005)
!11009 = distinct !{!11009, !10975, !11010}
!11010 = !DILocation(line: 2226, column: 2, scope: !10976)
!11011 = !DILocation(line: 2228, column: 2, scope: !11012)
!11012 = distinct !DILexicalBlock(scope: !10918, file: !3, line: 2228, column: 2)
!11013 = !DILocation(line: 2228, column: 2, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11012, file: !3, line: 2228, column: 2)
!11015 = !DILocation(line: 2228, column: 2, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 2228, column: 2)
!11017 = !DILocation(line: 2228, column: 2, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 2228, column: 2)
!11019 = !DILocation(line: 2229, column: 12, scope: !11020)
!11020 = distinct !DILexicalBlock(scope: !11016, file: !3, line: 2228, column: 68)
!11021 = !DILocation(line: 2229, column: 29, scope: !11020)
!11022 = !DILocation(line: 2229, column: 10, scope: !11020)
!11023 = !DILocation(line: 2231, column: 8, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 2231, column: 7)
!11025 = !DILocation(line: 2231, column: 7, scope: !11020)
!11026 = !DILocation(line: 2232, column: 4, scope: !11024)
!11027 = !DILocation(line: 2234, column: 38, scope: !11020)
!11028 = !DILocation(line: 2234, column: 46, scope: !11020)
!11029 = !DILocation(line: 2234, column: 9, scope: !11020)
!11030 = !DILocation(line: 2234, column: 7, scope: !11020)
!11031 = !DILocation(line: 2236, column: 7, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 2236, column: 7)
!11033 = !DILocation(line: 2236, column: 11, scope: !11032)
!11034 = !DILocation(line: 2236, column: 7, scope: !11020)
!11035 = !DILocation(line: 2237, column: 4, scope: !11032)
!11036 = !DILocation(line: 2242, column: 38, scope: !11020)
!11037 = !DILocation(line: 2242, column: 46, scope: !11020)
!11038 = !DILocation(line: 2242, column: 9, scope: !11020)
!11039 = !DILocation(line: 2242, column: 7, scope: !11020)
!11040 = !DILocation(line: 2244, column: 7, scope: !11041)
!11041 = distinct !DILexicalBlock(scope: !11020, file: !3, line: 2244, column: 7)
!11042 = !DILocation(line: 2244, column: 11, scope: !11041)
!11043 = !DILocation(line: 2244, column: 7, scope: !11020)
!11044 = !DILocation(line: 2245, column: 4, scope: !11041)
!11045 = distinct !{!11045, !11011, !11046}
!11046 = !DILocation(line: 2247, column: 2, scope: !11012)
!11047 = !DILocation(line: 2248, column: 1, scope: !10918)
!11048 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !11049, file: !11049, line: 666, type: !11050, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11049 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!11050 = !DISubroutineType(types: !11051)
!11051 = !{!146}
!11052 = !DILocalVariable(name: "f", scope: !11048, file: !11049, line: 668, type: !146)
!11053 = !DILocation(line: 668, column: 16, scope: !11048)
!11054 = !DILocation(line: 670, column: 6, scope: !11048)
!11055 = !DILocation(line: 670, column: 4, scope: !11048)
!11056 = !DILocation(line: 671, column: 2, scope: !11048)
!11057 = !DILocation(line: 672, column: 9, scope: !11048)
!11058 = !DILocation(line: 672, column: 2, scope: !11048)
!11059 = distinct !DISubprogram(name: "drm_crtc_commit_put", scope: !4522, file: !4522, line: 404, type: !11060, scopeLine: 405, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11060 = !DISubroutineType(types: !11061)
!11061 = !{null, !4932}
!11062 = !DILocalVariable(name: "commit", arg: 1, scope: !11059, file: !4522, line: 404, type: !4932)
!11063 = !DILocation(line: 404, column: 64, scope: !11059)
!11064 = !DILocation(line: 406, column: 12, scope: !11059)
!11065 = !DILocation(line: 406, column: 20, scope: !11059)
!11066 = !DILocation(line: 406, column: 2, scope: !11059)
!11067 = !DILocation(line: 407, column: 1, scope: !11059)
!11068 = distinct !DISubprogram(name: "drm_atomic_helper_commit_cleanup_done", scope: !3, file: !3, line: 2352, type: !5691, scopeLine: 2353, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11069 = !DILocation(line: 392, column: 53, scope: !10021, inlinedAt: !11070)
!11070 = distinct !DILocation(line: 2369, column: 3, scope: !11071)
!11071 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 2359, column: 65)
!11072 = distinct !DILexicalBlock(scope: !11073, file: !3, line: 2359, column: 2)
!11073 = distinct !DILexicalBlock(scope: !11074, file: !3, line: 2359, column: 2)
!11074 = distinct !DILexicalBlock(scope: !11068, file: !3, line: 2359, column: 2)
!11075 = !DILocation(line: 352, column: 51, scope: !10033, inlinedAt: !11076)
!11076 = distinct !DILocation(line: 2367, column: 3, scope: !11071)
!11077 = !DILocalVariable(name: "old_state", arg: 1, scope: !11068, file: !3, line: 2352, type: !4520)
!11078 = !DILocation(line: 2352, column: 69, scope: !11068)
!11079 = !DILocalVariable(name: "crtc", scope: !11068, file: !3, line: 2354, type: !4551)
!11080 = !DILocation(line: 2354, column: 19, scope: !11068)
!11081 = !DILocalVariable(name: "old_crtc_state", scope: !11068, file: !3, line: 2355, type: !4807)
!11082 = !DILocation(line: 2355, column: 25, scope: !11068)
!11083 = !DILocalVariable(name: "commit", scope: !11068, file: !3, line: 2356, type: !4932)
!11084 = !DILocation(line: 2356, column: 26, scope: !11068)
!11085 = !DILocalVariable(name: "i", scope: !11068, file: !3, line: 2357, type: !18)
!11086 = !DILocation(line: 2357, column: 6, scope: !11068)
!11087 = !DILocation(line: 2359, column: 2, scope: !11074)
!11088 = !DILocation(line: 2359, column: 2, scope: !11073)
!11089 = !DILocation(line: 2359, column: 2, scope: !11072)
!11090 = !DILocation(line: 2359, column: 2, scope: !11091)
!11091 = distinct !DILexicalBlock(scope: !11072, file: !3, line: 2359, column: 2)
!11092 = !DILocation(line: 2360, column: 12, scope: !11071)
!11093 = !DILocation(line: 2360, column: 28, scope: !11071)
!11094 = !DILocation(line: 2360, column: 10, scope: !11071)
!11095 = !DILocalVariable(name: "__ret_warn_on", scope: !11096, file: !3, line: 2361, type: !18)
!11096 = distinct !DILexicalBlock(scope: !11097, file: !3, line: 2361, column: 7)
!11097 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 2361, column: 7)
!11098 = !DILocation(line: 2361, column: 7, scope: !11096)
!11099 = !DILocation(line: 2361, column: 7, scope: !11100)
!11100 = distinct !DILexicalBlock(scope: !11096, file: !3, line: 2361, column: 7)
!11101 = !DILocation(line: 2361, column: 7, scope: !11102)
!11102 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 2361, column: 7)
!11103 = !DILocation(line: 2361, column: 7, scope: !11104)
!11104 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 2361, column: 7)
!11105 = !DILocation(line: 2361, column: 7, scope: !11106)
!11106 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 2361, column: 7)
!11107 = !{i32 -2140129585, i32 -2140129556, i32 -2140129510, i32 -2140129452, i32 -2140129398, i32 -2140129344, i32 -2140129289, i32 -2140129258}
!11108 = !DILocation(line: 2361, column: 7, scope: !11109)
!11109 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 2361, column: 7)
!11110 = !{i32 -2140128840, i32 -2140128833, i32 -2140128781, i32 -2140128750, i32 -2140128720}
!11111 = !DILocation(line: 2361, column: 7, scope: !11112)
!11112 = distinct !DILexicalBlock(scope: !11102, file: !3, line: 2361, column: 7)
!11113 = !DILocation(line: 2361, column: 7, scope: !11097)
!11114 = !DILocation(line: 2361, column: 7, scope: !11071)
!11115 = !DILocation(line: 2362, column: 4, scope: !11097)
!11116 = !DILocation(line: 2364, column: 17, scope: !11071)
!11117 = !DILocation(line: 2364, column: 25, scope: !11071)
!11118 = !DILocation(line: 2364, column: 3, scope: !11071)
!11119 = !DILocalVariable(name: "__ret_warn_on", scope: !11120, file: !3, line: 2365, type: !18)
!11120 = distinct !DILexicalBlock(scope: !11071, file: !3, line: 2365, column: 3)
!11121 = !DILocation(line: 2365, column: 3, scope: !11120)
!11122 = !DILocation(line: 2365, column: 3, scope: !11123)
!11123 = distinct !DILexicalBlock(scope: !11120, file: !3, line: 2365, column: 3)
!11124 = !DILocation(line: 2365, column: 3, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11123, file: !3, line: 2365, column: 3)
!11126 = !DILocation(line: 2365, column: 3, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 2365, column: 3)
!11128 = !DILocation(line: 2365, column: 3, scope: !11129)
!11129 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 2365, column: 3)
!11130 = !{i32 -2140128106, i32 -2140128077, i32 -2140128031, i32 -2140127973, i32 -2140127919, i32 -2140127865, i32 -2140127810, i32 -2140127779}
!11131 = !DILocation(line: 2365, column: 3, scope: !11132)
!11132 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 2365, column: 3)
!11133 = !{i32 -2140127361, i32 -2140127354, i32 -2140127302, i32 -2140127271, i32 -2140127241}
!11134 = !DILocation(line: 2365, column: 3, scope: !11135)
!11135 = distinct !DILexicalBlock(scope: !11125, file: !3, line: 2365, column: 3)
!11136 = !DILocation(line: 2367, column: 14, scope: !11071)
!11137 = !DILocation(line: 2367, column: 20, scope: !11071)
!11138 = !DILocation(line: 354, column: 2, scope: !10246, inlinedAt: !11076)
!11139 = !DILocation(line: 354, column: 2, scope: !10249, inlinedAt: !11076)
!11140 = !DILocation(line: 2368, column: 13, scope: !11071)
!11141 = !DILocation(line: 2368, column: 21, scope: !11071)
!11142 = !DILocation(line: 2368, column: 3, scope: !11071)
!11143 = !DILocation(line: 2369, column: 16, scope: !11071)
!11144 = !DILocation(line: 2369, column: 22, scope: !11071)
!11145 = !DILocation(line: 394, column: 2, scope: !10259, inlinedAt: !11070)
!11146 = !DILocation(line: 394, column: 2, scope: !10262, inlinedAt: !11070)
!11147 = distinct !{!11147, !11087, !11148}
!11148 = !DILocation(line: 2370, column: 2, scope: !11074)
!11149 = !DILocation(line: 2372, column: 6, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11068, file: !3, line: 2372, column: 6)
!11151 = !DILocation(line: 2372, column: 17, scope: !11150)
!11152 = !DILocation(line: 2372, column: 6, scope: !11068)
!11153 = !DILocation(line: 2373, column: 17, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 2372, column: 30)
!11155 = !DILocation(line: 2373, column: 28, scope: !11154)
!11156 = !DILocation(line: 2373, column: 41, scope: !11154)
!11157 = !DILocation(line: 2373, column: 3, scope: !11154)
!11158 = !DILocalVariable(name: "__ret_warn_on", scope: !11159, file: !3, line: 2374, type: !18)
!11159 = distinct !DILexicalBlock(scope: !11154, file: !3, line: 2374, column: 3)
!11160 = !DILocation(line: 2374, column: 3, scope: !11159)
!11161 = !DILocation(line: 2374, column: 3, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11159, file: !3, line: 2374, column: 3)
!11163 = !DILocation(line: 2374, column: 3, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 2374, column: 3)
!11165 = !DILocation(line: 2374, column: 3, scope: !11166)
!11166 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2374, column: 3)
!11167 = !DILocation(line: 2374, column: 3, scope: !11168)
!11168 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2374, column: 3)
!11169 = !{i32 -2140126611, i32 -2140126582, i32 -2140126536, i32 -2140126478, i32 -2140126424, i32 -2140126370, i32 -2140126315, i32 -2140126284}
!11170 = !DILocation(line: 2374, column: 3, scope: !11171)
!11171 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2374, column: 3)
!11172 = !{i32 -2140125866, i32 -2140125859, i32 -2140125807, i32 -2140125776, i32 -2140125746}
!11173 = !DILocation(line: 2374, column: 3, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11164, file: !3, line: 2374, column: 3)
!11175 = !DILocation(line: 2375, column: 2, scope: !11154)
!11176 = !DILocation(line: 2376, column: 1, scope: !11068)
!11177 = distinct !DISubprogram(name: "list_del", scope: !9989, file: !9989, line: 144, type: !9990, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11178 = !DILocalVariable(name: "entry", arg: 1, scope: !11177, file: !9989, line: 144, type: !15)
!11179 = !DILocation(line: 144, column: 47, scope: !11177)
!11180 = !DILocation(line: 146, column: 19, scope: !11177)
!11181 = !DILocation(line: 146, column: 2, scope: !11177)
!11182 = !DILocation(line: 147, column: 2, scope: !11177)
!11183 = !DILocation(line: 147, column: 9, scope: !11177)
!11184 = !DILocation(line: 147, column: 14, scope: !11177)
!11185 = !DILocation(line: 148, column: 2, scope: !11177)
!11186 = !DILocation(line: 148, column: 9, scope: !11177)
!11187 = !DILocation(line: 148, column: 14, scope: !11177)
!11188 = !DILocation(line: 149, column: 1, scope: !11177)
!11189 = distinct !DISubprogram(name: "drm_atomic_plane_disabling", scope: !11190, file: !11190, line: 216, type: !11191, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11190 = !DIFile(filename: "./include/drm/drm_atomic_helper.h", directory: "/home/lizy2001/genbc/linux")
!11191 = !DISubroutineType(types: !11192)
!11192 = !{!315, !5517, !5517}
!11193 = !DILocalVariable(name: "old_plane_state", arg: 1, scope: !11189, file: !11190, line: 216, type: !5517)
!11194 = !DILocation(line: 216, column: 52, scope: !11189)
!11195 = !DILocalVariable(name: "new_plane_state", arg: 2, scope: !11189, file: !11190, line: 217, type: !5517)
!11196 = !DILocation(line: 217, column: 31, scope: !11189)
!11197 = !DILocalVariable(name: "__ret_warn_on", scope: !11198, file: !11190, line: 224, type: !18)
!11198 = distinct !DILexicalBlock(scope: !11189, file: !11190, line: 224, column: 2)
!11199 = !DILocation(line: 224, column: 2, scope: !11198)
!11200 = !DILocation(line: 0, scope: !11198)
!11201 = !DILocation(line: 224, column: 2, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11198, file: !11190, line: 224, column: 2)
!11203 = !DILocation(line: 224, column: 2, scope: !11204)
!11204 = distinct !DILexicalBlock(scope: !11202, file: !11190, line: 224, column: 2)
!11205 = !DILocation(line: 224, column: 2, scope: !11206)
!11206 = distinct !DILexicalBlock(scope: !11204, file: !11190, line: 224, column: 2)
!11207 = !DILocation(line: 224, column: 2, scope: !11208)
!11208 = distinct !DILexicalBlock(scope: !11204, file: !11190, line: 224, column: 2)
!11209 = !{i32 -2140521663, i32 -2140521634, i32 -2140521588, i32 -2140521530, i32 -2140521476, i32 -2140521422, i32 -2140521367, i32 -2140521336}
!11210 = !DILocation(line: 224, column: 2, scope: !11211)
!11211 = distinct !DILexicalBlock(scope: !11204, file: !11190, line: 224, column: 2)
!11212 = !{i32 -2140520923, i32 -2140520916, i32 -2140520864, i32 -2140520833, i32 -2140520803}
!11213 = !DILocation(line: 224, column: 2, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11204, file: !11190, line: 224, column: 2)
!11215 = !DILocation(line: 227, column: 9, scope: !11189)
!11216 = !DILocation(line: 227, column: 26, scope: !11189)
!11217 = !DILocation(line: 227, column: 31, scope: !11189)
!11218 = !DILocation(line: 227, column: 35, scope: !11189)
!11219 = !DILocation(line: 227, column: 52, scope: !11189)
!11220 = !DILocation(line: 227, column: 34, scope: !11189)
!11221 = !DILocation(line: 0, scope: !11189)
!11222 = !DILocation(line: 227, column: 2, scope: !11189)
!11223 = distinct !DISubprogram(name: "plane_crtc_active", scope: !3, file: !3, line: 2441, type: !11224, scopeLine: 2442, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11224 = !DISubroutineType(types: !11225)
!11225 = !{!315, !5576}
!11226 = !DILocalVariable(name: "state", arg: 1, scope: !11223, file: !3, line: 2441, type: !5576)
!11227 = !DILocation(line: 2441, column: 61, scope: !11223)
!11228 = !DILocation(line: 2443, column: 9, scope: !11223)
!11229 = !DILocation(line: 2443, column: 16, scope: !11223)
!11230 = !DILocation(line: 2443, column: 21, scope: !11223)
!11231 = !DILocation(line: 2443, column: 24, scope: !11223)
!11232 = !DILocation(line: 2443, column: 31, scope: !11223)
!11233 = !DILocation(line: 2443, column: 37, scope: !11223)
!11234 = !DILocation(line: 2443, column: 44, scope: !11223)
!11235 = !DILocation(line: 0, scope: !11223)
!11236 = !DILocation(line: 2443, column: 2, scope: !11223)
!11237 = distinct !DISubprogram(name: "drm_atomic_helper_commit_planes_on_crtc", scope: !3, file: !3, line: 2591, type: !11238, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11238 = !DISubroutineType(types: !11239)
!11239 = !{null, !4807}
!11240 = !DILocalVariable(name: "old_crtc_state", arg: 1, scope: !11237, file: !3, line: 2591, type: !4807)
!11241 = !DILocation(line: 2591, column: 64, scope: !11237)
!11242 = !DILocalVariable(name: "crtc_funcs", scope: !11237, file: !3, line: 2593, type: !5411)
!11243 = !DILocation(line: 2593, column: 38, scope: !11237)
!11244 = !DILocalVariable(name: "crtc", scope: !11237, file: !3, line: 2594, type: !4551)
!11245 = !DILocation(line: 2594, column: 19, scope: !11237)
!11246 = !DILocation(line: 2594, column: 26, scope: !11237)
!11247 = !DILocation(line: 2594, column: 42, scope: !11237)
!11248 = !DILocalVariable(name: "old_state", scope: !11237, file: !3, line: 2595, type: !4520)
!11249 = !DILocation(line: 2595, column: 27, scope: !11237)
!11250 = !DILocation(line: 2595, column: 39, scope: !11237)
!11251 = !DILocation(line: 2595, column: 55, scope: !11237)
!11252 = !DILocalVariable(name: "new_crtc_state", scope: !11237, file: !3, line: 2596, type: !4807)
!11253 = !DILocation(line: 2596, column: 25, scope: !11237)
!11254 = !DILocation(line: 2597, column: 33, scope: !11237)
!11255 = !DILocation(line: 2597, column: 44, scope: !11237)
!11256 = !DILocation(line: 2597, column: 3, scope: !11237)
!11257 = !DILocalVariable(name: "plane", scope: !11237, file: !3, line: 2598, type: !4535)
!11258 = !DILocation(line: 2598, column: 20, scope: !11237)
!11259 = !DILocalVariable(name: "plane_mask", scope: !11237, file: !3, line: 2599, type: !210)
!11260 = !DILocation(line: 2599, column: 11, scope: !11237)
!11261 = !DILocation(line: 2601, column: 15, scope: !11237)
!11262 = !DILocation(line: 2601, column: 31, scope: !11237)
!11263 = !DILocation(line: 2601, column: 13, scope: !11237)
!11264 = !DILocation(line: 2602, column: 16, scope: !11237)
!11265 = !DILocation(line: 2602, column: 32, scope: !11237)
!11266 = !DILocation(line: 2602, column: 13, scope: !11237)
!11267 = !DILocation(line: 2604, column: 15, scope: !11237)
!11268 = !DILocation(line: 2604, column: 21, scope: !11237)
!11269 = !DILocation(line: 2604, column: 13, scope: !11237)
!11270 = !DILocation(line: 2605, column: 6, scope: !11271)
!11271 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 2605, column: 6)
!11272 = !DILocation(line: 2605, column: 17, scope: !11271)
!11273 = !DILocation(line: 2605, column: 20, scope: !11271)
!11274 = !DILocation(line: 2605, column: 32, scope: !11271)
!11275 = !DILocation(line: 2605, column: 6, scope: !11237)
!11276 = !DILocation(line: 2606, column: 3, scope: !11271)
!11277 = !DILocation(line: 2606, column: 15, scope: !11271)
!11278 = !DILocation(line: 2606, column: 28, scope: !11271)
!11279 = !DILocation(line: 2606, column: 34, scope: !11271)
!11280 = !DILocalVariable(name: "__mptr", scope: !11281, file: !3, line: 2608, type: !170)
!11281 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 2608, column: 2)
!11282 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 2608, column: 2)
!11283 = !DILocation(line: 2608, column: 2, scope: !11281)
!11284 = !DILocation(line: 2608, column: 2, scope: !11285)
!11285 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 2608, column: 2)
!11286 = !DILocation(line: 2608, column: 2, scope: !11282)
!11287 = !DILocation(line: 2608, column: 2, scope: !11288)
!11288 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 2608, column: 2)
!11289 = !DILocation(line: 2608, column: 2, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 2608, column: 2)
!11291 = !DILocation(line: 2608, column: 2, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 2608, column: 2)
!11293 = !DILocalVariable(name: "old_plane_state", scope: !11294, file: !3, line: 2609, type: !5517)
!11294 = distinct !DILexicalBlock(scope: !11290, file: !3, line: 2608, column: 56)
!11295 = !DILocation(line: 2609, column: 27, scope: !11294)
!11296 = !DILocation(line: 2610, column: 35, scope: !11294)
!11297 = !DILocation(line: 2610, column: 46, scope: !11294)
!11298 = !DILocation(line: 2610, column: 4, scope: !11294)
!11299 = !DILocalVariable(name: "new_plane_state", scope: !11294, file: !3, line: 2611, type: !5517)
!11300 = !DILocation(line: 2611, column: 27, scope: !11294)
!11301 = !DILocation(line: 2612, column: 35, scope: !11294)
!11302 = !DILocation(line: 2612, column: 46, scope: !11294)
!11303 = !DILocation(line: 2612, column: 4, scope: !11294)
!11304 = !DILocalVariable(name: "plane_funcs", scope: !11294, file: !3, line: 2613, type: !5600)
!11305 = !DILocation(line: 2613, column: 40, scope: !11294)
!11306 = !DILocation(line: 2615, column: 17, scope: !11294)
!11307 = !DILocation(line: 2615, column: 24, scope: !11294)
!11308 = !DILocation(line: 2615, column: 15, scope: !11294)
!11309 = !DILocation(line: 2617, column: 8, scope: !11310)
!11310 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 2617, column: 7)
!11311 = !DILocation(line: 2617, column: 24, scope: !11310)
!11312 = !DILocation(line: 2617, column: 28, scope: !11310)
!11313 = !DILocation(line: 2617, column: 7, scope: !11294)
!11314 = !DILocation(line: 2618, column: 4, scope: !11310)
!11315 = !DILocalVariable(name: "__ret_warn_on", scope: !11316, file: !3, line: 2620, type: !18)
!11316 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 2620, column: 3)
!11317 = !DILocation(line: 2620, column: 3, scope: !11316)
!11318 = !DILocation(line: 0, scope: !11316)
!11319 = !DILocation(line: 2620, column: 3, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !11316, file: !3, line: 2620, column: 3)
!11321 = !DILocation(line: 2620, column: 3, scope: !11322)
!11322 = distinct !DILexicalBlock(scope: !11320, file: !3, line: 2620, column: 3)
!11323 = !DILocation(line: 2620, column: 3, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 2620, column: 3)
!11325 = !DILocation(line: 2620, column: 3, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 2620, column: 3)
!11327 = !{i32 -2140114923, i32 -2140114894, i32 -2140114848, i32 -2140114790, i32 -2140114736, i32 -2140114682, i32 -2140114627, i32 -2140114596}
!11328 = !DILocation(line: 2620, column: 3, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 2620, column: 3)
!11330 = !{i32 -2140114178, i32 -2140114171, i32 -2140114119, i32 -2140114088, i32 -2140114058}
!11331 = !DILocation(line: 2620, column: 3, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11322, file: !3, line: 2620, column: 3)
!11333 = !DILocation(line: 2623, column: 34, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 2623, column: 7)
!11335 = !DILocation(line: 2623, column: 51, scope: !11334)
!11336 = !DILocation(line: 2623, column: 7, scope: !11334)
!11337 = !DILocation(line: 2623, column: 68, scope: !11334)
!11338 = !DILocation(line: 2624, column: 7, scope: !11334)
!11339 = !DILocation(line: 2624, column: 20, scope: !11334)
!11340 = !DILocation(line: 2623, column: 7, scope: !11294)
!11341 = !DILocation(line: 2625, column: 4, scope: !11334)
!11342 = !DILocation(line: 2625, column: 17, scope: !11334)
!11343 = !DILocation(line: 2625, column: 32, scope: !11334)
!11344 = !DILocation(line: 2625, column: 39, scope: !11334)
!11345 = !DILocation(line: 2626, column: 12, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 2626, column: 12)
!11347 = !DILocation(line: 2626, column: 29, scope: !11346)
!11348 = !DILocation(line: 2626, column: 34, scope: !11346)
!11349 = !DILocation(line: 2627, column: 32, scope: !11346)
!11350 = !DILocation(line: 2627, column: 49, scope: !11346)
!11351 = !DILocation(line: 2627, column: 5, scope: !11346)
!11352 = !DILocation(line: 2626, column: 12, scope: !11334)
!11353 = !DILocation(line: 2628, column: 4, scope: !11346)
!11354 = !DILocation(line: 2628, column: 17, scope: !11346)
!11355 = !DILocation(line: 2628, column: 31, scope: !11346)
!11356 = !DILocation(line: 2628, column: 38, scope: !11346)
!11357 = !DILocalVariable(name: "__mptr", scope: !11358, file: !3, line: 2608, type: !170)
!11358 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 2608, column: 2)
!11359 = !DILocation(line: 2608, column: 2, scope: !11358)
!11360 = !DILocation(line: 2608, column: 2, scope: !11361)
!11361 = distinct !DILexicalBlock(scope: !11358, file: !3, line: 2608, column: 2)
!11362 = distinct !{!11362, !11286, !11363}
!11363 = !DILocation(line: 2629, column: 2, scope: !11282)
!11364 = !DILocation(line: 2631, column: 6, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11237, file: !3, line: 2631, column: 6)
!11366 = !DILocation(line: 2631, column: 17, scope: !11365)
!11367 = !DILocation(line: 2631, column: 20, scope: !11365)
!11368 = !DILocation(line: 2631, column: 32, scope: !11365)
!11369 = !DILocation(line: 2631, column: 6, scope: !11237)
!11370 = !DILocation(line: 2632, column: 3, scope: !11365)
!11371 = !DILocation(line: 2632, column: 15, scope: !11365)
!11372 = !DILocation(line: 2632, column: 28, scope: !11365)
!11373 = !DILocation(line: 2632, column: 34, scope: !11365)
!11374 = !DILocation(line: 2633, column: 1, scope: !11237)
!11375 = distinct !DISubprogram(name: "drm_plane_mask", scope: !4537, file: !4537, line: 765, type: !11376, scopeLine: 766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11376 = !DISubroutineType(types: !11377)
!11377 = !{!240, !11378}
!11378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11379, size: 64)
!11379 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4536)
!11380 = !DILocalVariable(name: "plane", arg: 1, scope: !11375, file: !4537, line: 765, type: !11378)
!11381 = !DILocation(line: 765, column: 58, scope: !11375)
!11382 = !DILocation(line: 767, column: 30, scope: !11375)
!11383 = !DILocation(line: 767, column: 14, scope: !11375)
!11384 = !DILocation(line: 767, column: 11, scope: !11375)
!11385 = !DILocation(line: 767, column: 2, scope: !11375)
!11386 = distinct !DISubprogram(name: "drm_atomic_get_old_plane_state", scope: !4522, file: !4522, line: 552, type: !7935, scopeLine: 554, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11387 = !DILocalVariable(name: "state", arg: 1, scope: !11386, file: !4522, line: 552, type: !4520)
!11388 = !DILocation(line: 552, column: 57, scope: !11386)
!11389 = !DILocalVariable(name: "plane", arg: 2, scope: !11386, file: !4522, line: 553, type: !4535)
!11390 = !DILocation(line: 553, column: 29, scope: !11386)
!11391 = !DILocation(line: 555, column: 9, scope: !11386)
!11392 = !DILocation(line: 555, column: 16, scope: !11386)
!11393 = !DILocation(line: 555, column: 39, scope: !11386)
!11394 = !DILocation(line: 555, column: 23, scope: !11386)
!11395 = !DILocation(line: 555, column: 47, scope: !11386)
!11396 = !DILocation(line: 555, column: 2, scope: !11386)
!11397 = distinct !DISubprogram(name: "drm_atomic_helper_disable_planes_on_crtc", scope: !3, file: !3, line: 2653, type: !11398, scopeLine: 2655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11398 = !DISubroutineType(types: !11399)
!11399 = !{null, !4807, !315}
!11400 = !DILocalVariable(name: "old_crtc_state", arg: 1, scope: !11397, file: !3, line: 2653, type: !4807)
!11401 = !DILocation(line: 2653, column: 65, scope: !11397)
!11402 = !DILocalVariable(name: "atomic", arg: 2, scope: !11397, file: !3, line: 2654, type: !315)
!11403 = !DILocation(line: 2654, column: 12, scope: !11397)
!11404 = !DILocalVariable(name: "crtc", scope: !11397, file: !3, line: 2656, type: !4551)
!11405 = !DILocation(line: 2656, column: 19, scope: !11397)
!11406 = !DILocation(line: 2656, column: 26, scope: !11397)
!11407 = !DILocation(line: 2656, column: 42, scope: !11397)
!11408 = !DILocalVariable(name: "crtc_funcs", scope: !11397, file: !3, line: 2657, type: !5411)
!11409 = !DILocation(line: 2657, column: 38, scope: !11397)
!11410 = !DILocation(line: 2658, column: 3, scope: !11397)
!11411 = !DILocation(line: 2658, column: 9, scope: !11397)
!11412 = !DILocalVariable(name: "plane", scope: !11397, file: !3, line: 2659, type: !4535)
!11413 = !DILocation(line: 2659, column: 20, scope: !11397)
!11414 = !DILocation(line: 2661, column: 6, scope: !11415)
!11415 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 2661, column: 6)
!11416 = !DILocation(line: 2661, column: 13, scope: !11415)
!11417 = !DILocation(line: 2661, column: 16, scope: !11415)
!11418 = !DILocation(line: 2661, column: 27, scope: !11415)
!11419 = !DILocation(line: 2661, column: 30, scope: !11415)
!11420 = !DILocation(line: 2661, column: 42, scope: !11415)
!11421 = !DILocation(line: 2661, column: 6, scope: !11397)
!11422 = !DILocation(line: 2662, column: 3, scope: !11415)
!11423 = !DILocation(line: 2662, column: 15, scope: !11415)
!11424 = !DILocation(line: 2662, column: 28, scope: !11415)
!11425 = !DILocalVariable(name: "__mptr", scope: !11426, file: !3, line: 2664, type: !170)
!11426 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 2664, column: 2)
!11427 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 2664, column: 2)
!11428 = !DILocation(line: 2664, column: 2, scope: !11426)
!11429 = !DILocation(line: 2664, column: 2, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11426, file: !3, line: 2664, column: 2)
!11431 = !DILocation(line: 2664, column: 2, scope: !11427)
!11432 = !DILocation(line: 2664, column: 2, scope: !11433)
!11433 = distinct !DILexicalBlock(scope: !11427, file: !3, line: 2664, column: 2)
!11434 = !DILocation(line: 2664, column: 2, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11433, file: !3, line: 2664, column: 2)
!11436 = !DILocation(line: 2664, column: 2, scope: !11437)
!11437 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 2664, column: 2)
!11438 = !DILocalVariable(name: "plane_funcs", scope: !11439, file: !3, line: 2665, type: !5600)
!11439 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 2664, column: 62)
!11440 = !DILocation(line: 2665, column: 40, scope: !11439)
!11441 = !DILocation(line: 2666, column: 4, scope: !11439)
!11442 = !DILocation(line: 2666, column: 11, scope: !11439)
!11443 = !DILocation(line: 2668, column: 8, scope: !11444)
!11444 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 2668, column: 7)
!11445 = !DILocation(line: 2668, column: 7, scope: !11439)
!11446 = !DILocation(line: 2669, column: 4, scope: !11444)
!11447 = !DILocalVariable(name: "__ret_warn_on", scope: !11448, file: !3, line: 2671, type: !18)
!11448 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 2671, column: 3)
!11449 = !DILocation(line: 2671, column: 3, scope: !11448)
!11450 = !DILocation(line: 2671, column: 3, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11448, file: !3, line: 2671, column: 3)
!11452 = !DILocation(line: 2671, column: 3, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 2671, column: 3)
!11454 = !DILocation(line: 2671, column: 3, scope: !11455)
!11455 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 2671, column: 3)
!11456 = !DILocation(line: 2671, column: 3, scope: !11457)
!11457 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 2671, column: 3)
!11458 = !{i32 -2140108120, i32 -2140108091, i32 -2140108045, i32 -2140107987, i32 -2140107933, i32 -2140107879, i32 -2140107824, i32 -2140107793}
!11459 = !DILocation(line: 2671, column: 3, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 2671, column: 3)
!11461 = !{i32 -2140107375, i32 -2140107368, i32 -2140107316, i32 -2140107285, i32 -2140107255}
!11462 = !DILocation(line: 2671, column: 3, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 2671, column: 3)
!11464 = !DILocation(line: 2672, column: 7, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11439, file: !3, line: 2672, column: 7)
!11466 = !DILocation(line: 2672, column: 20, scope: !11465)
!11467 = !DILocation(line: 2672, column: 7, scope: !11439)
!11468 = !DILocation(line: 2673, column: 4, scope: !11465)
!11469 = !DILocation(line: 2673, column: 17, scope: !11465)
!11470 = !DILocation(line: 2673, column: 32, scope: !11465)
!11471 = !DILocalVariable(name: "__mptr", scope: !11472, file: !3, line: 2664, type: !170)
!11472 = distinct !DILexicalBlock(scope: !11433, file: !3, line: 2664, column: 2)
!11473 = !DILocation(line: 2664, column: 2, scope: !11472)
!11474 = !DILocation(line: 2664, column: 2, scope: !11475)
!11475 = distinct !DILexicalBlock(scope: !11472, file: !3, line: 2664, column: 2)
!11476 = distinct !{!11476, !11431, !11477}
!11477 = !DILocation(line: 2674, column: 2, scope: !11427)
!11478 = !DILocation(line: 2676, column: 6, scope: !11479)
!11479 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 2676, column: 6)
!11480 = !DILocation(line: 2676, column: 13, scope: !11479)
!11481 = !DILocation(line: 2676, column: 16, scope: !11479)
!11482 = !DILocation(line: 2676, column: 27, scope: !11479)
!11483 = !DILocation(line: 2676, column: 30, scope: !11479)
!11484 = !DILocation(line: 2676, column: 42, scope: !11479)
!11485 = !DILocation(line: 2676, column: 6, scope: !11397)
!11486 = !DILocation(line: 2677, column: 3, scope: !11479)
!11487 = !DILocation(line: 2677, column: 15, scope: !11479)
!11488 = !DILocation(line: 2677, column: 28, scope: !11479)
!11489 = !DILocation(line: 2678, column: 1, scope: !11397)
!11490 = distinct !DISubprogram(name: "list_add", scope: !9989, file: !9989, line: 84, type: !11491, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11491 = !DISubroutineType(types: !11492)
!11492 = !{null, !15, !15}
!11493 = !DILocalVariable(name: "new", arg: 1, scope: !11490, file: !9989, line: 84, type: !15)
!11494 = !DILocation(line: 84, column: 47, scope: !11490)
!11495 = !DILocalVariable(name: "head", arg: 2, scope: !11490, file: !9989, line: 84, type: !15)
!11496 = !DILocation(line: 84, column: 70, scope: !11490)
!11497 = !DILocation(line: 86, column: 13, scope: !11490)
!11498 = !DILocation(line: 86, column: 18, scope: !11490)
!11499 = !DILocation(line: 86, column: 24, scope: !11490)
!11500 = !DILocation(line: 86, column: 30, scope: !11490)
!11501 = !DILocation(line: 86, column: 2, scope: !11490)
!11502 = !DILocation(line: 87, column: 1, scope: !11490)
!11503 = distinct !DISubprogram(name: "drm_atomic_helper_update_plane", scope: !3, file: !3, line: 2887, type: !5498, scopeLine: 2895, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11504 = !DILocalVariable(name: "plane", arg: 1, scope: !11503, file: !3, line: 2887, type: !4535)
!11505 = !DILocation(line: 2887, column: 54, scope: !11503)
!11506 = !DILocalVariable(name: "crtc", arg: 2, scope: !11503, file: !3, line: 2888, type: !4551)
!11507 = !DILocation(line: 2888, column: 25, scope: !11503)
!11508 = !DILocalVariable(name: "fb", arg: 3, scope: !11503, file: !3, line: 2889, type: !4409)
!11509 = !DILocation(line: 2889, column: 32, scope: !11503)
!11510 = !DILocalVariable(name: "crtc_x", arg: 4, scope: !11503, file: !3, line: 2890, type: !18)
!11511 = !DILocation(line: 2890, column: 12, scope: !11503)
!11512 = !DILocalVariable(name: "crtc_y", arg: 5, scope: !11503, file: !3, line: 2890, type: !18)
!11513 = !DILocation(line: 2890, column: 24, scope: !11503)
!11514 = !DILocalVariable(name: "crtc_w", arg: 6, scope: !11503, file: !3, line: 2891, type: !210)
!11515 = !DILocation(line: 2891, column: 21, scope: !11503)
!11516 = !DILocalVariable(name: "crtc_h", arg: 7, scope: !11503, file: !3, line: 2891, type: !210)
!11517 = !DILocation(line: 2891, column: 42, scope: !11503)
!11518 = !DILocalVariable(name: "src_x", arg: 8, scope: !11503, file: !3, line: 2892, type: !384)
!11519 = !DILocation(line: 2892, column: 17, scope: !11503)
!11520 = !DILocalVariable(name: "src_y", arg: 9, scope: !11503, file: !3, line: 2892, type: !384)
!11521 = !DILocation(line: 2892, column: 33, scope: !11503)
!11522 = !DILocalVariable(name: "src_w", arg: 10, scope: !11503, file: !3, line: 2893, type: !384)
!11523 = !DILocation(line: 2893, column: 17, scope: !11503)
!11524 = !DILocalVariable(name: "src_h", arg: 11, scope: !11503, file: !3, line: 2893, type: !384)
!11525 = !DILocation(line: 2893, column: 33, scope: !11503)
!11526 = !DILocalVariable(name: "ctx", arg: 12, scope: !11503, file: !3, line: 2894, type: !4361)
!11527 = !DILocation(line: 2894, column: 40, scope: !11503)
!11528 = !DILocalVariable(name: "state", scope: !11503, file: !3, line: 2896, type: !4520)
!11529 = !DILocation(line: 2896, column: 27, scope: !11503)
!11530 = !DILocalVariable(name: "plane_state", scope: !11503, file: !3, line: 2897, type: !5517)
!11531 = !DILocation(line: 2897, column: 26, scope: !11503)
!11532 = !DILocalVariable(name: "ret", scope: !11503, file: !3, line: 2898, type: !18)
!11533 = !DILocation(line: 2898, column: 6, scope: !11503)
!11534 = !DILocation(line: 2900, column: 33, scope: !11503)
!11535 = !DILocation(line: 2900, column: 40, scope: !11503)
!11536 = !DILocation(line: 2900, column: 10, scope: !11503)
!11537 = !DILocation(line: 2900, column: 8, scope: !11503)
!11538 = !DILocation(line: 2901, column: 7, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 2901, column: 6)
!11540 = !DILocation(line: 2901, column: 6, scope: !11503)
!11541 = !DILocation(line: 2902, column: 3, scope: !11539)
!11542 = !DILocation(line: 2904, column: 23, scope: !11503)
!11543 = !DILocation(line: 2904, column: 2, scope: !11503)
!11544 = !DILocation(line: 2904, column: 9, scope: !11503)
!11545 = !DILocation(line: 2904, column: 21, scope: !11503)
!11546 = !DILocation(line: 2905, column: 43, scope: !11503)
!11547 = !DILocation(line: 2905, column: 50, scope: !11503)
!11548 = !DILocation(line: 2905, column: 16, scope: !11503)
!11549 = !DILocation(line: 2905, column: 14, scope: !11503)
!11550 = !DILocation(line: 2906, column: 13, scope: !11551)
!11551 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 2906, column: 6)
!11552 = !DILocation(line: 2906, column: 6, scope: !11551)
!11553 = !DILocation(line: 2906, column: 6, scope: !11503)
!11554 = !DILocation(line: 2907, column: 17, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11551, file: !3, line: 2906, column: 27)
!11556 = !DILocation(line: 2907, column: 9, scope: !11555)
!11557 = !DILocation(line: 2907, column: 7, scope: !11555)
!11558 = !DILocation(line: 2908, column: 3, scope: !11555)
!11559 = !DILocation(line: 2911, column: 38, scope: !11503)
!11560 = !DILocation(line: 2911, column: 51, scope: !11503)
!11561 = !DILocation(line: 2911, column: 8, scope: !11503)
!11562 = !DILocation(line: 2911, column: 6, scope: !11503)
!11563 = !DILocation(line: 2912, column: 6, scope: !11564)
!11564 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 2912, column: 6)
!11565 = !DILocation(line: 2912, column: 10, scope: !11564)
!11566 = !DILocation(line: 2912, column: 6, scope: !11503)
!11567 = !DILocation(line: 2913, column: 3, scope: !11564)
!11568 = !DILocation(line: 2914, column: 30, scope: !11503)
!11569 = !DILocation(line: 2914, column: 43, scope: !11503)
!11570 = !DILocation(line: 2914, column: 2, scope: !11503)
!11571 = !DILocation(line: 2915, column: 24, scope: !11503)
!11572 = !DILocation(line: 2915, column: 2, scope: !11503)
!11573 = !DILocation(line: 2915, column: 15, scope: !11503)
!11574 = !DILocation(line: 2915, column: 22, scope: !11503)
!11575 = !DILocation(line: 2916, column: 24, scope: !11503)
!11576 = !DILocation(line: 2916, column: 2, scope: !11503)
!11577 = !DILocation(line: 2916, column: 15, scope: !11503)
!11578 = !DILocation(line: 2916, column: 22, scope: !11503)
!11579 = !DILocation(line: 2917, column: 24, scope: !11503)
!11580 = !DILocation(line: 2917, column: 2, scope: !11503)
!11581 = !DILocation(line: 2917, column: 15, scope: !11503)
!11582 = !DILocation(line: 2917, column: 22, scope: !11503)
!11583 = !DILocation(line: 2918, column: 24, scope: !11503)
!11584 = !DILocation(line: 2918, column: 2, scope: !11503)
!11585 = !DILocation(line: 2918, column: 15, scope: !11503)
!11586 = !DILocation(line: 2918, column: 22, scope: !11503)
!11587 = !DILocation(line: 2919, column: 23, scope: !11503)
!11588 = !DILocation(line: 2919, column: 2, scope: !11503)
!11589 = !DILocation(line: 2919, column: 15, scope: !11503)
!11590 = !DILocation(line: 2919, column: 21, scope: !11503)
!11591 = !DILocation(line: 2920, column: 23, scope: !11503)
!11592 = !DILocation(line: 2920, column: 2, scope: !11503)
!11593 = !DILocation(line: 2920, column: 15, scope: !11503)
!11594 = !DILocation(line: 2920, column: 21, scope: !11503)
!11595 = !DILocation(line: 2921, column: 23, scope: !11503)
!11596 = !DILocation(line: 2921, column: 2, scope: !11503)
!11597 = !DILocation(line: 2921, column: 15, scope: !11503)
!11598 = !DILocation(line: 2921, column: 21, scope: !11503)
!11599 = !DILocation(line: 2922, column: 23, scope: !11503)
!11600 = !DILocation(line: 2922, column: 2, scope: !11503)
!11601 = !DILocation(line: 2922, column: 15, scope: !11503)
!11602 = !DILocation(line: 2922, column: 21, scope: !11503)
!11603 = !DILocation(line: 2924, column: 6, scope: !11604)
!11604 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 2924, column: 6)
!11605 = !DILocation(line: 2924, column: 15, scope: !11604)
!11606 = !DILocation(line: 2924, column: 21, scope: !11604)
!11607 = !DILocation(line: 2924, column: 12, scope: !11604)
!11608 = !DILocation(line: 2924, column: 6, scope: !11503)
!11609 = !DILocation(line: 2925, column: 3, scope: !11604)
!11610 = !DILocation(line: 2925, column: 10, scope: !11604)
!11611 = !DILocation(line: 2925, column: 31, scope: !11604)
!11612 = !DILocation(line: 2927, column: 26, scope: !11503)
!11613 = !DILocation(line: 2927, column: 8, scope: !11503)
!11614 = !DILocation(line: 2927, column: 6, scope: !11503)
!11615 = !DILocation(line: 2927, column: 2, scope: !11503)
!11616 = !DILabel(scope: !11503, name: "fail", file: !3, line: 2928)
!11617 = !DILocation(line: 2928, column: 1, scope: !11503)
!11618 = !DILocation(line: 2929, column: 23, scope: !11503)
!11619 = !DILocation(line: 2929, column: 2, scope: !11503)
!11620 = !DILocation(line: 2930, column: 9, scope: !11503)
!11621 = !DILocation(line: 2930, column: 2, scope: !11503)
!11622 = !DILocation(line: 2931, column: 1, scope: !11503)
!11623 = distinct !DISubprogram(name: "IS_ERR", scope: !11624, file: !11624, line: 34, type: !11625, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11624 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!11625 = !DISubroutineType(types: !11626)
!11626 = !{!315, !2069}
!11627 = !DILocalVariable(name: "ptr", arg: 1, scope: !11623, file: !11624, line: 34, type: !2069)
!11628 = !DILocation(line: 34, column: 60, scope: !11623)
!11629 = !DILocation(line: 36, column: 9, scope: !11623)
!11630 = !DILocation(line: 36, column: 2, scope: !11623)
!11631 = distinct !DISubprogram(name: "PTR_ERR", scope: !11624, file: !11624, line: 29, type: !11632, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11632 = !DISubroutineType(types: !11633)
!11633 = !{!131, !2069}
!11634 = !DILocalVariable(name: "ptr", arg: 1, scope: !11631, file: !11624, line: 29, type: !2069)
!11635 = !DILocation(line: 29, column: 61, scope: !11631)
!11636 = !DILocation(line: 31, column: 16, scope: !11631)
!11637 = !DILocation(line: 31, column: 9, scope: !11631)
!11638 = !DILocation(line: 31, column: 2, scope: !11631)
!11639 = distinct !DISubprogram(name: "drm_atomic_state_put", scope: !4522, file: !4522, line: 435, type: !5691, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11640 = !DILocalVariable(name: "state", arg: 1, scope: !11639, file: !4522, line: 435, type: !4520)
!11641 = !DILocation(line: 435, column: 66, scope: !11639)
!11642 = !DILocation(line: 437, column: 12, scope: !11639)
!11643 = !DILocation(line: 437, column: 19, scope: !11639)
!11644 = !DILocation(line: 437, column: 2, scope: !11639)
!11645 = !DILocation(line: 438, column: 1, scope: !11639)
!11646 = distinct !DISubprogram(name: "drm_atomic_helper_disable_plane", scope: !3, file: !3, line: 2944, type: !5502, scopeLine: 2946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11647 = !DILocalVariable(name: "plane", arg: 1, scope: !11646, file: !3, line: 2944, type: !4535)
!11648 = !DILocation(line: 2944, column: 55, scope: !11646)
!11649 = !DILocalVariable(name: "ctx", arg: 2, scope: !11646, file: !3, line: 2945, type: !4361)
!11650 = !DILocation(line: 2945, column: 41, scope: !11646)
!11651 = !DILocalVariable(name: "state", scope: !11646, file: !3, line: 2947, type: !4520)
!11652 = !DILocation(line: 2947, column: 27, scope: !11646)
!11653 = !DILocalVariable(name: "plane_state", scope: !11646, file: !3, line: 2948, type: !5517)
!11654 = !DILocation(line: 2948, column: 26, scope: !11646)
!11655 = !DILocalVariable(name: "ret", scope: !11646, file: !3, line: 2949, type: !18)
!11656 = !DILocation(line: 2949, column: 6, scope: !11646)
!11657 = !DILocation(line: 2951, column: 33, scope: !11646)
!11658 = !DILocation(line: 2951, column: 40, scope: !11646)
!11659 = !DILocation(line: 2951, column: 10, scope: !11646)
!11660 = !DILocation(line: 2951, column: 8, scope: !11646)
!11661 = !DILocation(line: 2952, column: 7, scope: !11662)
!11662 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 2952, column: 6)
!11663 = !DILocation(line: 2952, column: 6, scope: !11646)
!11664 = !DILocation(line: 2953, column: 3, scope: !11662)
!11665 = !DILocation(line: 2955, column: 23, scope: !11646)
!11666 = !DILocation(line: 2955, column: 2, scope: !11646)
!11667 = !DILocation(line: 2955, column: 9, scope: !11646)
!11668 = !DILocation(line: 2955, column: 21, scope: !11646)
!11669 = !DILocation(line: 2956, column: 43, scope: !11646)
!11670 = !DILocation(line: 2956, column: 50, scope: !11646)
!11671 = !DILocation(line: 2956, column: 16, scope: !11646)
!11672 = !DILocation(line: 2956, column: 14, scope: !11646)
!11673 = !DILocation(line: 2957, column: 13, scope: !11674)
!11674 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 2957, column: 6)
!11675 = !DILocation(line: 2957, column: 6, scope: !11674)
!11676 = !DILocation(line: 2957, column: 6, scope: !11646)
!11677 = !DILocation(line: 2958, column: 17, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11674, file: !3, line: 2957, column: 27)
!11679 = !DILocation(line: 2958, column: 9, scope: !11678)
!11680 = !DILocation(line: 2958, column: 7, scope: !11678)
!11681 = !DILocation(line: 2959, column: 3, scope: !11678)
!11682 = !DILocation(line: 2962, column: 6, scope: !11683)
!11683 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 2962, column: 6)
!11684 = !DILocation(line: 2962, column: 19, scope: !11683)
!11685 = !DILocation(line: 2962, column: 24, scope: !11683)
!11686 = !DILocation(line: 2962, column: 27, scope: !11683)
!11687 = !DILocation(line: 2962, column: 40, scope: !11683)
!11688 = !DILocation(line: 2962, column: 46, scope: !11683)
!11689 = !DILocation(line: 2962, column: 56, scope: !11683)
!11690 = !DILocation(line: 2962, column: 53, scope: !11683)
!11691 = !DILocation(line: 2962, column: 6, scope: !11646)
!11692 = !DILocation(line: 2963, column: 3, scope: !11683)
!11693 = !DILocation(line: 2963, column: 16, scope: !11683)
!11694 = !DILocation(line: 2963, column: 23, scope: !11683)
!11695 = !DILocation(line: 2963, column: 44, scope: !11683)
!11696 = !DILocation(line: 2965, column: 42, scope: !11646)
!11697 = !DILocation(line: 2965, column: 49, scope: !11646)
!11698 = !DILocation(line: 2965, column: 8, scope: !11646)
!11699 = !DILocation(line: 2965, column: 6, scope: !11646)
!11700 = !DILocation(line: 2966, column: 6, scope: !11701)
!11701 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 2966, column: 6)
!11702 = !DILocation(line: 2966, column: 10, scope: !11701)
!11703 = !DILocation(line: 2966, column: 6, scope: !11646)
!11704 = !DILocation(line: 2967, column: 3, scope: !11701)
!11705 = !DILocation(line: 2969, column: 26, scope: !11646)
!11706 = !DILocation(line: 2969, column: 8, scope: !11646)
!11707 = !DILocation(line: 2969, column: 6, scope: !11646)
!11708 = !DILocation(line: 2969, column: 2, scope: !11646)
!11709 = !DILabel(scope: !11646, name: "fail", file: !3, line: 2970)
!11710 = !DILocation(line: 2970, column: 1, scope: !11646)
!11711 = !DILocation(line: 2971, column: 23, scope: !11646)
!11712 = !DILocation(line: 2971, column: 2, scope: !11646)
!11713 = !DILocation(line: 2972, column: 9, scope: !11646)
!11714 = !DILocation(line: 2972, column: 2, scope: !11646)
!11715 = !DILocation(line: 2973, column: 1, scope: !11646)
!11716 = distinct !DISubprogram(name: "drm_atomic_helper_set_config", scope: !3, file: !3, line: 2992, type: !4600, scopeLine: 2994, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11717 = !DILocalVariable(name: "set", arg: 1, scope: !11716, file: !3, line: 2992, type: !4602)
!11718 = !DILocation(line: 2992, column: 55, scope: !11716)
!11719 = !DILocalVariable(name: "ctx", arg: 2, scope: !11716, file: !3, line: 2993, type: !4361)
!11720 = !DILocation(line: 2993, column: 38, scope: !11716)
!11721 = !DILocalVariable(name: "state", scope: !11716, file: !3, line: 2995, type: !4520)
!11722 = !DILocation(line: 2995, column: 27, scope: !11716)
!11723 = !DILocalVariable(name: "crtc", scope: !11716, file: !3, line: 2996, type: !4551)
!11724 = !DILocation(line: 2996, column: 19, scope: !11716)
!11725 = !DILocation(line: 2996, column: 26, scope: !11716)
!11726 = !DILocation(line: 2996, column: 31, scope: !11716)
!11727 = !DILocalVariable(name: "ret", scope: !11716, file: !3, line: 2997, type: !18)
!11728 = !DILocation(line: 2997, column: 6, scope: !11716)
!11729 = !DILocation(line: 2999, column: 33, scope: !11716)
!11730 = !DILocation(line: 2999, column: 39, scope: !11716)
!11731 = !DILocation(line: 2999, column: 10, scope: !11716)
!11732 = !DILocation(line: 2999, column: 8, scope: !11716)
!11733 = !DILocation(line: 3000, column: 7, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3000, column: 6)
!11735 = !DILocation(line: 3000, column: 6, scope: !11716)
!11736 = !DILocation(line: 3001, column: 3, scope: !11734)
!11737 = !DILocation(line: 3003, column: 23, scope: !11716)
!11738 = !DILocation(line: 3003, column: 2, scope: !11716)
!11739 = !DILocation(line: 3003, column: 9, scope: !11716)
!11740 = !DILocation(line: 3003, column: 21, scope: !11716)
!11741 = !DILocation(line: 3004, column: 39, scope: !11716)
!11742 = !DILocation(line: 3004, column: 44, scope: !11716)
!11743 = !DILocation(line: 3004, column: 8, scope: !11716)
!11744 = !DILocation(line: 3004, column: 6, scope: !11716)
!11745 = !DILocation(line: 3005, column: 6, scope: !11746)
!11746 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3005, column: 6)
!11747 = !DILocation(line: 3005, column: 10, scope: !11746)
!11748 = !DILocation(line: 3005, column: 6, scope: !11716)
!11749 = !DILocation(line: 3006, column: 3, scope: !11746)
!11750 = !DILocation(line: 3008, column: 36, scope: !11716)
!11751 = !DILocation(line: 3008, column: 8, scope: !11716)
!11752 = !DILocation(line: 3008, column: 6, scope: !11716)
!11753 = !DILocation(line: 3009, column: 6, scope: !11754)
!11754 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3009, column: 6)
!11755 = !DILocation(line: 3009, column: 6, scope: !11716)
!11756 = !DILocation(line: 3010, column: 10, scope: !11754)
!11757 = !DILocation(line: 3010, column: 3, scope: !11754)
!11758 = !DILocation(line: 3012, column: 26, scope: !11716)
!11759 = !DILocation(line: 3012, column: 8, scope: !11716)
!11760 = !DILocation(line: 3012, column: 6, scope: !11716)
!11761 = !DILocation(line: 3012, column: 2, scope: !11716)
!11762 = !DILabel(scope: !11716, name: "fail", file: !3, line: 3014)
!11763 = !DILocation(line: 3014, column: 1, scope: !11716)
!11764 = !DILocation(line: 3015, column: 23, scope: !11716)
!11765 = !DILocation(line: 3015, column: 2, scope: !11716)
!11766 = !DILocation(line: 3016, column: 9, scope: !11716)
!11767 = !DILocation(line: 3016, column: 2, scope: !11716)
!11768 = !DILocation(line: 3017, column: 1, scope: !11716)
!11769 = distinct !DISubprogram(name: "drm_atomic_helper_disable_all", scope: !3, file: !3, line: 3043, type: !11770, scopeLine: 3045, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11770 = !DISubroutineType(types: !11771)
!11771 = !{!18, !6, !4361}
!11772 = !DILocalVariable(name: "dev", arg: 1, scope: !11769, file: !3, line: 3043, type: !6)
!11773 = !DILocation(line: 3043, column: 54, scope: !11769)
!11774 = !DILocalVariable(name: "ctx", arg: 2, scope: !11769, file: !3, line: 3044, type: !4361)
!11775 = !DILocation(line: 3044, column: 39, scope: !11769)
!11776 = !DILocalVariable(name: "state", scope: !11769, file: !3, line: 3046, type: !4520)
!11777 = !DILocation(line: 3046, column: 27, scope: !11769)
!11778 = !DILocalVariable(name: "conn_state", scope: !11769, file: !3, line: 3047, type: !4744)
!11779 = !DILocation(line: 3047, column: 30, scope: !11769)
!11780 = !DILocalVariable(name: "conn", scope: !11769, file: !3, line: 3048, type: !4613)
!11781 = !DILocation(line: 3048, column: 24, scope: !11769)
!11782 = !DILocalVariable(name: "plane_state", scope: !11769, file: !3, line: 3049, type: !5517)
!11783 = !DILocation(line: 3049, column: 26, scope: !11769)
!11784 = !DILocalVariable(name: "plane", scope: !11769, file: !3, line: 3050, type: !4535)
!11785 = !DILocation(line: 3050, column: 20, scope: !11769)
!11786 = !DILocalVariable(name: "crtc_state", scope: !11769, file: !3, line: 3051, type: !4807)
!11787 = !DILocation(line: 3051, column: 25, scope: !11769)
!11788 = !DILocalVariable(name: "crtc", scope: !11769, file: !3, line: 3052, type: !4551)
!11789 = !DILocation(line: 3052, column: 19, scope: !11769)
!11790 = !DILocalVariable(name: "ret", scope: !11769, file: !3, line: 3053, type: !18)
!11791 = !DILocation(line: 3053, column: 6, scope: !11769)
!11792 = !DILocalVariable(name: "i", scope: !11769, file: !3, line: 3053, type: !18)
!11793 = !DILocation(line: 3053, column: 11, scope: !11769)
!11794 = !DILocation(line: 3055, column: 33, scope: !11769)
!11795 = !DILocation(line: 3055, column: 10, scope: !11769)
!11796 = !DILocation(line: 3055, column: 8, scope: !11769)
!11797 = !DILocation(line: 3056, column: 7, scope: !11798)
!11798 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 3056, column: 6)
!11799 = !DILocation(line: 3056, column: 6, scope: !11769)
!11800 = !DILocation(line: 3057, column: 3, scope: !11798)
!11801 = !DILocation(line: 3059, column: 23, scope: !11769)
!11802 = !DILocation(line: 3059, column: 2, scope: !11769)
!11803 = !DILocation(line: 3059, column: 9, scope: !11769)
!11804 = !DILocation(line: 3059, column: 21, scope: !11769)
!11805 = !DILocalVariable(name: "__mptr", scope: !11806, file: !3, line: 3061, type: !170)
!11806 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 3061, column: 2)
!11807 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 3061, column: 2)
!11808 = !DILocation(line: 3061, column: 2, scope: !11806)
!11809 = !DILocation(line: 3061, column: 2, scope: !11810)
!11810 = distinct !DILexicalBlock(scope: !11806, file: !3, line: 3061, column: 2)
!11811 = !DILocation(line: 3061, column: 2, scope: !11807)
!11812 = !DILocation(line: 3061, column: 2, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 3061, column: 2)
!11814 = !DILocation(line: 3062, column: 42, scope: !11815)
!11815 = distinct !DILexicalBlock(scope: !11813, file: !3, line: 3061, column: 31)
!11816 = !DILocation(line: 3062, column: 49, scope: !11815)
!11817 = !DILocation(line: 3062, column: 16, scope: !11815)
!11818 = !DILocation(line: 3062, column: 14, scope: !11815)
!11819 = !DILocation(line: 3063, column: 14, scope: !11820)
!11820 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 3063, column: 7)
!11821 = !DILocation(line: 3063, column: 7, scope: !11820)
!11822 = !DILocation(line: 3063, column: 7, scope: !11815)
!11823 = !DILocation(line: 3064, column: 18, scope: !11824)
!11824 = distinct !DILexicalBlock(scope: !11820, file: !3, line: 3063, column: 27)
!11825 = !DILocation(line: 3064, column: 10, scope: !11824)
!11826 = !DILocation(line: 3064, column: 8, scope: !11824)
!11827 = !DILocation(line: 3065, column: 4, scope: !11824)
!11828 = !DILocation(line: 3068, column: 3, scope: !11815)
!11829 = !DILocation(line: 3068, column: 15, scope: !11815)
!11830 = !DILocation(line: 3068, column: 22, scope: !11815)
!11831 = !DILocation(line: 3070, column: 43, scope: !11815)
!11832 = !DILocation(line: 3070, column: 9, scope: !11815)
!11833 = !DILocation(line: 3070, column: 7, scope: !11815)
!11834 = !DILocation(line: 3071, column: 7, scope: !11835)
!11835 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 3071, column: 7)
!11836 = !DILocation(line: 3071, column: 11, scope: !11835)
!11837 = !DILocation(line: 3071, column: 7, scope: !11815)
!11838 = !DILocation(line: 3072, column: 4, scope: !11835)
!11839 = !DILocation(line: 3074, column: 40, scope: !11815)
!11840 = !DILocation(line: 3074, column: 47, scope: !11815)
!11841 = !DILocation(line: 3074, column: 9, scope: !11815)
!11842 = !DILocation(line: 3074, column: 7, scope: !11815)
!11843 = !DILocation(line: 3075, column: 7, scope: !11844)
!11844 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 3075, column: 7)
!11845 = !DILocation(line: 3075, column: 11, scope: !11844)
!11846 = !DILocation(line: 3075, column: 7, scope: !11815)
!11847 = !DILocation(line: 3076, column: 4, scope: !11844)
!11848 = !DILocation(line: 3078, column: 44, scope: !11815)
!11849 = !DILocation(line: 3078, column: 51, scope: !11815)
!11850 = !DILocation(line: 3078, column: 9, scope: !11815)
!11851 = !DILocation(line: 3078, column: 7, scope: !11815)
!11852 = !DILocation(line: 3079, column: 7, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11815, file: !3, line: 3079, column: 7)
!11854 = !DILocation(line: 3079, column: 11, scope: !11853)
!11855 = !DILocation(line: 3079, column: 7, scope: !11815)
!11856 = !DILocation(line: 3080, column: 4, scope: !11853)
!11857 = !DILocation(line: 3081, column: 2, scope: !11815)
!11858 = !DILocalVariable(name: "__mptr", scope: !11859, file: !3, line: 3061, type: !170)
!11859 = distinct !DILexicalBlock(scope: !11813, file: !3, line: 3061, column: 2)
!11860 = !DILocation(line: 3061, column: 2, scope: !11859)
!11861 = !DILocation(line: 3061, column: 2, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11859, file: !3, line: 3061, column: 2)
!11863 = distinct !{!11863, !11811, !11864}
!11864 = !DILocation(line: 3081, column: 2, scope: !11807)
!11865 = !DILocation(line: 3083, column: 2, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 3083, column: 2)
!11867 = !DILocation(line: 3083, column: 2, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11866, file: !3, line: 3083, column: 2)
!11869 = !DILocation(line: 3083, column: 2, scope: !11870)
!11870 = distinct !DILexicalBlock(scope: !11868, file: !3, line: 3083, column: 2)
!11871 = !DILocation(line: 3083, column: 2, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 3083, column: 2)
!11873 = !DILocation(line: 3084, column: 43, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11870, file: !3, line: 3083, column: 62)
!11875 = !DILocation(line: 3084, column: 9, scope: !11874)
!11876 = !DILocation(line: 3084, column: 7, scope: !11874)
!11877 = !DILocation(line: 3085, column: 7, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11874, file: !3, line: 3085, column: 7)
!11879 = !DILocation(line: 3085, column: 11, scope: !11878)
!11880 = !DILocation(line: 3085, column: 7, scope: !11874)
!11881 = !DILocation(line: 3086, column: 4, scope: !11878)
!11882 = distinct !{!11882, !11865, !11883}
!11883 = !DILocation(line: 3087, column: 2, scope: !11866)
!11884 = !DILocation(line: 3089, column: 2, scope: !11885)
!11885 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 3089, column: 2)
!11886 = !DILocation(line: 3089, column: 2, scope: !11887)
!11887 = distinct !DILexicalBlock(scope: !11885, file: !3, line: 3089, column: 2)
!11888 = !DILocation(line: 3089, column: 2, scope: !11889)
!11889 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 3089, column: 2)
!11890 = !DILocation(line: 3089, column: 2, scope: !11891)
!11891 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 3089, column: 2)
!11892 = !DILocation(line: 3090, column: 39, scope: !11893)
!11893 = distinct !DILexicalBlock(scope: !11889, file: !3, line: 3089, column: 60)
!11894 = !DILocation(line: 3090, column: 9, scope: !11893)
!11895 = !DILocation(line: 3090, column: 7, scope: !11893)
!11896 = !DILocation(line: 3091, column: 7, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11893, file: !3, line: 3091, column: 7)
!11898 = !DILocation(line: 3091, column: 11, scope: !11897)
!11899 = !DILocation(line: 3091, column: 7, scope: !11893)
!11900 = !DILocation(line: 3092, column: 4, scope: !11897)
!11901 = !DILocation(line: 3094, column: 31, scope: !11893)
!11902 = !DILocation(line: 3094, column: 3, scope: !11893)
!11903 = distinct !{!11903, !11884, !11904}
!11904 = !DILocation(line: 3095, column: 2, scope: !11885)
!11905 = !DILocation(line: 3097, column: 26, scope: !11769)
!11906 = !DILocation(line: 3097, column: 8, scope: !11769)
!11907 = !DILocation(line: 3097, column: 6, scope: !11769)
!11908 = !DILocation(line: 3097, column: 2, scope: !11769)
!11909 = !DILabel(scope: !11769, name: "free", file: !3, line: 3098)
!11910 = !DILocation(line: 3098, column: 1, scope: !11769)
!11911 = !DILocation(line: 3099, column: 23, scope: !11769)
!11912 = !DILocation(line: 3099, column: 2, scope: !11769)
!11913 = !DILocation(line: 3100, column: 9, scope: !11769)
!11914 = !DILocation(line: 3100, column: 2, scope: !11769)
!11915 = !DILocation(line: 3101, column: 1, scope: !11769)
!11916 = distinct !DISubprogram(name: "drm_atomic_helper_shutdown", scope: !3, file: !3, line: 3115, type: !3997, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11917 = !DILocalVariable(name: "dev", arg: 1, scope: !11916, file: !3, line: 3115, type: !6)
!11918 = !DILocation(line: 3115, column: 52, scope: !11916)
!11919 = !DILocalVariable(name: "ctx", scope: !11916, file: !3, line: 3117, type: !4362)
!11920 = !DILocation(line: 3117, column: 33, scope: !11916)
!11921 = !DILocalVariable(name: "ret", scope: !11916, file: !3, line: 3118, type: !18)
!11922 = !DILocation(line: 3118, column: 6, scope: !11916)
!11923 = !DILocation(line: 3120, column: 2, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 3120, column: 2)
!11925 = !DILocation(line: 3120, column: 2, scope: !11916)
!11926 = !DILabel(scope: !11916, name: "modeset_lock_retry", file: !3, line: 3120)
!11927 = !DILocation(line: 3120, column: 2, scope: !11928)
!11928 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 3120, column: 2)
!11929 = !DILocation(line: 3122, column: 38, scope: !11916)
!11930 = !DILocation(line: 3122, column: 8, scope: !11916)
!11931 = !DILocation(line: 3122, column: 6, scope: !11916)
!11932 = !DILocation(line: 3123, column: 6, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 3123, column: 6)
!11934 = !DILocation(line: 3123, column: 6, scope: !11916)
!11935 = !DILocation(line: 3124, column: 3, scope: !11933)
!11936 = !DILabel(scope: !11916, name: "modeset_lock_fail", file: !3, line: 3126)
!11937 = !DILocation(line: 3126, column: 2, scope: !11916)
!11938 = !DILocation(line: 3126, column: 2, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 3126, column: 2)
!11940 = !DILocation(line: 3126, column: 2, scope: !11941)
!11941 = distinct !DILexicalBlock(scope: !11939, file: !3, line: 3126, column: 2)
!11942 = !DILocation(line: 3126, column: 2, scope: !11943)
!11943 = distinct !DILexicalBlock(scope: !11941, file: !3, line: 3126, column: 2)
!11944 = !DILocation(line: 3126, column: 2, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 3126, column: 2)
!11946 = !DILocation(line: 3127, column: 1, scope: !11916)
!11947 = distinct !DISubprogram(name: "drm_drv_uses_atomic_modeset", scope: !3928, file: !3928, line: 704, type: !11948, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11948 = !DISubroutineType(types: !11949)
!11949 = !{!315, !6}
!11950 = !DILocalVariable(name: "dev", arg: 1, scope: !11947, file: !3928, line: 704, type: !6)
!11951 = !DILocation(line: 704, column: 67, scope: !11947)
!11952 = !DILocation(line: 706, column: 32, scope: !11947)
!11953 = !DILocation(line: 706, column: 9, scope: !11947)
!11954 = !DILocation(line: 706, column: 52, scope: !11947)
!11955 = !DILocation(line: 707, column: 4, scope: !11947)
!11956 = !DILocation(line: 707, column: 9, scope: !11947)
!11957 = !DILocation(line: 707, column: 21, scope: !11947)
!11958 = !DILocation(line: 707, column: 27, scope: !11947)
!11959 = !DILocation(line: 707, column: 30, scope: !11947)
!11960 = !DILocation(line: 707, column: 35, scope: !11947)
!11961 = !DILocation(line: 707, column: 47, scope: !11947)
!11962 = !DILocation(line: 707, column: 54, scope: !11947)
!11963 = !DILocation(line: 707, column: 68, scope: !11947)
!11964 = !DILocation(line: 0, scope: !11947)
!11965 = !DILocation(line: 706, column: 2, scope: !11947)
!11966 = distinct !DISubprogram(name: "drm_atomic_helper_duplicate_state", scope: !3, file: !3, line: 3155, type: !11967, scopeLine: 3157, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!11967 = !DISubroutineType(types: !11968)
!11968 = !{!4520, !6, !4361}
!11969 = !DILocalVariable(name: "dev", arg: 1, scope: !11966, file: !3, line: 3155, type: !6)
!11970 = !DILocation(line: 3155, column: 54, scope: !11966)
!11971 = !DILocalVariable(name: "ctx", arg: 2, scope: !11966, file: !3, line: 3156, type: !4361)
!11972 = !DILocation(line: 3156, column: 39, scope: !11966)
!11973 = !DILocalVariable(name: "state", scope: !11966, file: !3, line: 3158, type: !4520)
!11974 = !DILocation(line: 3158, column: 27, scope: !11966)
!11975 = !DILocalVariable(name: "conn", scope: !11966, file: !3, line: 3159, type: !4613)
!11976 = !DILocation(line: 3159, column: 24, scope: !11966)
!11977 = !DILocalVariable(name: "conn_iter", scope: !11966, file: !3, line: 3160, type: !6516)
!11978 = !DILocation(line: 3160, column: 33, scope: !11966)
!11979 = !DILocalVariable(name: "plane", scope: !11966, file: !3, line: 3161, type: !4535)
!11980 = !DILocation(line: 3161, column: 20, scope: !11966)
!11981 = !DILocalVariable(name: "crtc", scope: !11966, file: !3, line: 3162, type: !4551)
!11982 = !DILocation(line: 3162, column: 19, scope: !11966)
!11983 = !DILocalVariable(name: "err", scope: !11966, file: !3, line: 3163, type: !18)
!11984 = !DILocation(line: 3163, column: 6, scope: !11966)
!11985 = !DILocation(line: 3165, column: 33, scope: !11966)
!11986 = !DILocation(line: 3165, column: 10, scope: !11966)
!11987 = !DILocation(line: 3165, column: 8, scope: !11966)
!11988 = !DILocation(line: 3166, column: 7, scope: !11989)
!11989 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 3166, column: 6)
!11990 = !DILocation(line: 3166, column: 6, scope: !11966)
!11991 = !DILocation(line: 3167, column: 10, scope: !11989)
!11992 = !DILocation(line: 3167, column: 3, scope: !11989)
!11993 = !DILocation(line: 3169, column: 23, scope: !11966)
!11994 = !DILocation(line: 3169, column: 2, scope: !11966)
!11995 = !DILocation(line: 3169, column: 9, scope: !11966)
!11996 = !DILocation(line: 3169, column: 21, scope: !11966)
!11997 = !DILocation(line: 3170, column: 2, scope: !11966)
!11998 = !DILocation(line: 3170, column: 9, scope: !11966)
!11999 = !DILocation(line: 3170, column: 20, scope: !11966)
!12000 = !DILocalVariable(name: "__mptr", scope: !12001, file: !3, line: 3172, type: !170)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 3172, column: 2)
!12002 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 3172, column: 2)
!12003 = !DILocation(line: 3172, column: 2, scope: !12001)
!12004 = !DILocation(line: 3172, column: 2, scope: !12005)
!12005 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 3172, column: 2)
!12006 = !DILocation(line: 3172, column: 2, scope: !12002)
!12007 = !DILocation(line: 3172, column: 2, scope: !12008)
!12008 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 3172, column: 2)
!12009 = !DILocalVariable(name: "crtc_state", scope: !12010, file: !3, line: 3173, type: !4807)
!12010 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 3172, column: 31)
!12011 = !DILocation(line: 3173, column: 26, scope: !12010)
!12012 = !DILocation(line: 3175, column: 42, scope: !12010)
!12013 = !DILocation(line: 3175, column: 49, scope: !12010)
!12014 = !DILocation(line: 3175, column: 16, scope: !12010)
!12015 = !DILocation(line: 3175, column: 14, scope: !12010)
!12016 = !DILocation(line: 3176, column: 14, scope: !12017)
!12017 = distinct !DILexicalBlock(scope: !12010, file: !3, line: 3176, column: 7)
!12018 = !DILocation(line: 3176, column: 7, scope: !12017)
!12019 = !DILocation(line: 3176, column: 7, scope: !12010)
!12020 = !DILocation(line: 3177, column: 18, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12017, file: !3, line: 3176, column: 27)
!12022 = !DILocation(line: 3177, column: 10, scope: !12021)
!12023 = !DILocation(line: 3177, column: 8, scope: !12021)
!12024 = !DILocation(line: 3178, column: 4, scope: !12021)
!12025 = !DILocation(line: 3180, column: 2, scope: !12010)
!12026 = !DILocalVariable(name: "__mptr", scope: !12027, file: !3, line: 3172, type: !170)
!12027 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 3172, column: 2)
!12028 = !DILocation(line: 3172, column: 2, scope: !12027)
!12029 = !DILocation(line: 3172, column: 2, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12027, file: !3, line: 3172, column: 2)
!12031 = distinct !{!12031, !12006, !12032}
!12032 = !DILocation(line: 3180, column: 2, scope: !12002)
!12033 = !DILocalVariable(name: "__mptr", scope: !12034, file: !3, line: 3182, type: !170)
!12034 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 3182, column: 2)
!12035 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 3182, column: 2)
!12036 = !DILocation(line: 3182, column: 2, scope: !12034)
!12037 = !DILocation(line: 3182, column: 2, scope: !12038)
!12038 = distinct !DILexicalBlock(scope: !12034, file: !3, line: 3182, column: 2)
!12039 = !DILocation(line: 3182, column: 2, scope: !12035)
!12040 = !DILocation(line: 3182, column: 2, scope: !12041)
!12041 = distinct !DILexicalBlock(scope: !12035, file: !3, line: 3182, column: 2)
!12042 = !DILocalVariable(name: "plane_state", scope: !12043, file: !3, line: 3183, type: !5517)
!12043 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 3182, column: 33)
!12044 = !DILocation(line: 3183, column: 27, scope: !12043)
!12045 = !DILocation(line: 3185, column: 44, scope: !12043)
!12046 = !DILocation(line: 3185, column: 51, scope: !12043)
!12047 = !DILocation(line: 3185, column: 17, scope: !12043)
!12048 = !DILocation(line: 3185, column: 15, scope: !12043)
!12049 = !DILocation(line: 3186, column: 14, scope: !12050)
!12050 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 3186, column: 7)
!12051 = !DILocation(line: 3186, column: 7, scope: !12050)
!12052 = !DILocation(line: 3186, column: 7, scope: !12043)
!12053 = !DILocation(line: 3187, column: 18, scope: !12054)
!12054 = distinct !DILexicalBlock(scope: !12050, file: !3, line: 3186, column: 28)
!12055 = !DILocation(line: 3187, column: 10, scope: !12054)
!12056 = !DILocation(line: 3187, column: 8, scope: !12054)
!12057 = !DILocation(line: 3188, column: 4, scope: !12054)
!12058 = !DILocation(line: 3190, column: 2, scope: !12043)
!12059 = !DILocalVariable(name: "__mptr", scope: !12060, file: !3, line: 3182, type: !170)
!12060 = distinct !DILexicalBlock(scope: !12041, file: !3, line: 3182, column: 2)
!12061 = !DILocation(line: 3182, column: 2, scope: !12060)
!12062 = !DILocation(line: 3182, column: 2, scope: !12063)
!12063 = distinct !DILexicalBlock(scope: !12060, file: !3, line: 3182, column: 2)
!12064 = distinct !{!12064, !12039, !12065}
!12065 = !DILocation(line: 3190, column: 2, scope: !12035)
!12066 = !DILocation(line: 3192, column: 32, scope: !11966)
!12067 = !DILocation(line: 3192, column: 2, scope: !11966)
!12068 = !DILocation(line: 3193, column: 2, scope: !11966)
!12069 = !DILocalVariable(name: "conn_state", scope: !12070, file: !3, line: 3194, type: !4744)
!12070 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 3193, column: 48)
!12071 = !DILocation(line: 3194, column: 31, scope: !12070)
!12072 = !DILocation(line: 3196, column: 47, scope: !12070)
!12073 = !DILocation(line: 3196, column: 54, scope: !12070)
!12074 = !DILocation(line: 3196, column: 16, scope: !12070)
!12075 = !DILocation(line: 3196, column: 14, scope: !12070)
!12076 = !DILocation(line: 3197, column: 14, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !12070, file: !3, line: 3197, column: 7)
!12078 = !DILocation(line: 3197, column: 7, scope: !12077)
!12079 = !DILocation(line: 3197, column: 7, scope: !12070)
!12080 = !DILocation(line: 3198, column: 18, scope: !12081)
!12081 = distinct !DILexicalBlock(scope: !12077, file: !3, line: 3197, column: 27)
!12082 = !DILocation(line: 3198, column: 10, scope: !12081)
!12083 = !DILocation(line: 3198, column: 8, scope: !12081)
!12084 = !DILocation(line: 3199, column: 4, scope: !12081)
!12085 = !DILocation(line: 3200, column: 4, scope: !12081)
!12086 = distinct !{!12086, !12068, !12087}
!12087 = !DILocation(line: 3202, column: 2, scope: !11966)
!12088 = !DILocation(line: 3203, column: 2, scope: !11966)
!12089 = !DILocation(line: 3206, column: 2, scope: !11966)
!12090 = !DILocation(line: 3206, column: 9, scope: !11966)
!12091 = !DILocation(line: 3206, column: 21, scope: !11966)
!12092 = !DILabel(scope: !11966, name: "free", file: !3, line: 3208)
!12093 = !DILocation(line: 3208, column: 1, scope: !11966)
!12094 = !DILocation(line: 3209, column: 6, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !11966, file: !3, line: 3209, column: 6)
!12096 = !DILocation(line: 3209, column: 10, scope: !12095)
!12097 = !DILocation(line: 3209, column: 6, scope: !11966)
!12098 = !DILocation(line: 3210, column: 24, scope: !12099)
!12099 = distinct !DILexicalBlock(scope: !12095, file: !3, line: 3209, column: 15)
!12100 = !DILocation(line: 3210, column: 3, scope: !12099)
!12101 = !DILocation(line: 3211, column: 19, scope: !12099)
!12102 = !DILocation(line: 3211, column: 11, scope: !12099)
!12103 = !DILocation(line: 3211, column: 9, scope: !12099)
!12104 = !DILocation(line: 3212, column: 2, scope: !12099)
!12105 = !DILocation(line: 3214, column: 9, scope: !11966)
!12106 = !DILocation(line: 3214, column: 2, scope: !11966)
!12107 = !DILocation(line: 3215, column: 1, scope: !11966)
!12108 = distinct !DISubprogram(name: "ERR_PTR", scope: !11624, file: !11624, line: 24, type: !12109, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12109 = !DISubroutineType(types: !12110)
!12110 = !{!170, !131}
!12111 = !DILocalVariable(name: "error", arg: 1, scope: !12108, file: !11624, line: 24, type: !131)
!12112 = !DILocation(line: 24, column: 48, scope: !12108)
!12113 = !DILocation(line: 26, column: 18, scope: !12108)
!12114 = !DILocation(line: 26, column: 9, scope: !12108)
!12115 = !DILocation(line: 26, column: 2, scope: !12108)
!12116 = distinct !DISubprogram(name: "drm_atomic_helper_suspend", scope: !3, file: !3, line: 3243, type: !5687, scopeLine: 3244, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12117 = !DILocalVariable(name: "dev", arg: 1, scope: !12116, file: !3, line: 3243, type: !6)
!12118 = !DILocation(line: 3243, column: 71, scope: !12116)
!12119 = !DILocalVariable(name: "ctx", scope: !12116, file: !3, line: 3245, type: !4362)
!12120 = !DILocation(line: 3245, column: 33, scope: !12116)
!12121 = !DILocalVariable(name: "state", scope: !12116, file: !3, line: 3246, type: !4520)
!12122 = !DILocation(line: 3246, column: 27, scope: !12116)
!12123 = !DILocalVariable(name: "err", scope: !12116, file: !3, line: 3247, type: !18)
!12124 = !DILocation(line: 3247, column: 6, scope: !12116)
!12125 = !DILocation(line: 3250, column: 10, scope: !12116)
!12126 = !DILocation(line: 3250, column: 8, scope: !12116)
!12127 = !DILocation(line: 3252, column: 2, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3252, column: 2)
!12129 = !DILocation(line: 3252, column: 2, scope: !12116)
!12130 = !DILabel(scope: !12116, name: "modeset_lock_retry", file: !3, line: 3252)
!12131 = !DILocation(line: 3252, column: 2, scope: !12132)
!12132 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3252, column: 2)
!12133 = !DILocation(line: 3254, column: 44, scope: !12116)
!12134 = !DILocation(line: 3254, column: 10, scope: !12116)
!12135 = !DILocation(line: 3254, column: 8, scope: !12116)
!12136 = !DILocation(line: 3255, column: 13, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3255, column: 6)
!12138 = !DILocation(line: 3255, column: 6, scope: !12137)
!12139 = !DILocation(line: 3255, column: 6, scope: !12116)
!12140 = !DILocation(line: 3256, column: 3, scope: !12137)
!12141 = !DILocation(line: 3258, column: 38, scope: !12116)
!12142 = !DILocation(line: 3258, column: 8, scope: !12116)
!12143 = !DILocation(line: 3258, column: 6, scope: !12116)
!12144 = !DILocation(line: 3259, column: 6, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3259, column: 6)
!12146 = !DILocation(line: 3259, column: 10, scope: !12145)
!12147 = !DILocation(line: 3259, column: 6, scope: !12116)
!12148 = !DILocation(line: 3260, column: 24, scope: !12149)
!12149 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 3259, column: 15)
!12150 = !DILocation(line: 3260, column: 3, scope: !12149)
!12151 = !DILocation(line: 3261, column: 19, scope: !12149)
!12152 = !DILocation(line: 3261, column: 11, scope: !12149)
!12153 = !DILocation(line: 3261, column: 9, scope: !12149)
!12154 = !DILocation(line: 3262, column: 3, scope: !12149)
!12155 = !DILocation(line: 3259, column: 12, scope: !12145)
!12156 = !DILabel(scope: !12116, name: "unlock", file: !3, line: 3265)
!12157 = !DILocation(line: 3265, column: 1, scope: !12116)
!12158 = !DILabel(scope: !12116, name: "modeset_lock_fail", file: !3, line: 3266)
!12159 = !DILocation(line: 3266, column: 2, scope: !12116)
!12160 = !DILocation(line: 3266, column: 2, scope: !12161)
!12161 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3266, column: 2)
!12162 = !DILocation(line: 3266, column: 2, scope: !12163)
!12163 = distinct !DILexicalBlock(scope: !12161, file: !3, line: 3266, column: 2)
!12164 = !DILocation(line: 3266, column: 2, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12163, file: !3, line: 3266, column: 2)
!12166 = !DILocation(line: 3266, column: 2, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3266, column: 2)
!12168 = !DILocation(line: 3267, column: 6, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !12116, file: !3, line: 3267, column: 6)
!12170 = !DILocation(line: 3267, column: 6, scope: !12116)
!12171 = !DILocation(line: 3268, column: 18, scope: !12169)
!12172 = !DILocation(line: 3268, column: 10, scope: !12169)
!12173 = !DILocation(line: 3268, column: 3, scope: !12169)
!12174 = !DILocation(line: 3270, column: 9, scope: !12116)
!12175 = !DILocation(line: 3270, column: 2, scope: !12116)
!12176 = !DILocation(line: 3271, column: 1, scope: !12116)
!12177 = distinct !DISubprogram(name: "drm_atomic_helper_commit_duplicated_state", scope: !3, file: !3, line: 3289, type: !12178, scopeLine: 3291, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12178 = !DISubroutineType(types: !12179)
!12179 = !{!18, !4520, !4361}
!12180 = !DILocalVariable(name: "state", arg: 1, scope: !12177, file: !3, line: 3289, type: !4520)
!12181 = !DILocation(line: 3289, column: 72, scope: !12177)
!12182 = !DILocalVariable(name: "ctx", arg: 2, scope: !12177, file: !3, line: 3290, type: !4361)
!12183 = !DILocation(line: 3290, column: 44, scope: !12177)
!12184 = !DILocalVariable(name: "i", scope: !12177, file: !3, line: 3292, type: !18)
!12185 = !DILocation(line: 3292, column: 6, scope: !12177)
!12186 = !DILocalVariable(name: "ret", scope: !12177, file: !3, line: 3292, type: !18)
!12187 = !DILocation(line: 3292, column: 9, scope: !12177)
!12188 = !DILocalVariable(name: "plane", scope: !12177, file: !3, line: 3293, type: !4535)
!12189 = !DILocation(line: 3293, column: 20, scope: !12177)
!12190 = !DILocalVariable(name: "new_plane_state", scope: !12177, file: !3, line: 3294, type: !5517)
!12191 = !DILocation(line: 3294, column: 26, scope: !12177)
!12192 = !DILocalVariable(name: "connector", scope: !12177, file: !3, line: 3295, type: !4613)
!12193 = !DILocation(line: 3295, column: 24, scope: !12177)
!12194 = !DILocalVariable(name: "new_conn_state", scope: !12177, file: !3, line: 3296, type: !4744)
!12195 = !DILocation(line: 3296, column: 30, scope: !12177)
!12196 = !DILocalVariable(name: "crtc", scope: !12177, file: !3, line: 3297, type: !4551)
!12197 = !DILocation(line: 3297, column: 19, scope: !12177)
!12198 = !DILocalVariable(name: "new_crtc_state", scope: !12177, file: !3, line: 3298, type: !4807)
!12199 = !DILocation(line: 3298, column: 25, scope: !12177)
!12200 = !DILocation(line: 3300, column: 23, scope: !12177)
!12201 = !DILocation(line: 3300, column: 2, scope: !12177)
!12202 = !DILocation(line: 3300, column: 9, scope: !12177)
!12203 = !DILocation(line: 3300, column: 21, scope: !12177)
!12204 = !DILocation(line: 3302, column: 2, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 3302, column: 2)
!12206 = !DILocation(line: 3302, column: 2, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12205, file: !3, line: 3302, column: 2)
!12208 = !DILocation(line: 3302, column: 2, scope: !12209)
!12209 = distinct !DILexicalBlock(scope: !12207, file: !3, line: 3302, column: 2)
!12210 = !DILocation(line: 3302, column: 2, scope: !12211)
!12211 = distinct !DILexicalBlock(scope: !12209, file: !3, line: 3302, column: 2)
!12212 = !DILocation(line: 3303, column: 32, scope: !12209)
!12213 = !DILocation(line: 3303, column: 39, scope: !12209)
!12214 = !DILocation(line: 3303, column: 3, scope: !12209)
!12215 = !DILocation(line: 3303, column: 10, scope: !12209)
!12216 = !DILocation(line: 3303, column: 17, scope: !12209)
!12217 = !DILocation(line: 3303, column: 20, scope: !12209)
!12218 = !DILocation(line: 3303, column: 30, scope: !12209)
!12219 = distinct !{!12219, !12204, !12220}
!12220 = !DILocation(line: 3303, column: 39, scope: !12205)
!12221 = !DILocation(line: 3305, column: 2, scope: !12222)
!12222 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 3305, column: 2)
!12223 = !DILocation(line: 3305, column: 2, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12222, file: !3, line: 3305, column: 2)
!12225 = !DILocation(line: 3305, column: 2, scope: !12226)
!12226 = distinct !DILexicalBlock(scope: !12224, file: !3, line: 3305, column: 2)
!12227 = !DILocation(line: 3305, column: 2, scope: !12228)
!12228 = distinct !DILexicalBlock(scope: !12226, file: !3, line: 3305, column: 2)
!12229 = !DILocation(line: 3306, column: 31, scope: !12226)
!12230 = !DILocation(line: 3306, column: 37, scope: !12226)
!12231 = !DILocation(line: 3306, column: 3, scope: !12226)
!12232 = !DILocation(line: 3306, column: 10, scope: !12226)
!12233 = !DILocation(line: 3306, column: 16, scope: !12226)
!12234 = !DILocation(line: 3306, column: 19, scope: !12226)
!12235 = !DILocation(line: 3306, column: 29, scope: !12226)
!12236 = distinct !{!12236, !12221, !12237}
!12237 = !DILocation(line: 3306, column: 37, scope: !12222)
!12238 = !DILocation(line: 3308, column: 2, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12177, file: !3, line: 3308, column: 2)
!12240 = !DILocation(line: 3308, column: 2, scope: !12241)
!12241 = distinct !DILexicalBlock(scope: !12239, file: !3, line: 3308, column: 2)
!12242 = !DILocation(line: 3308, column: 2, scope: !12243)
!12243 = distinct !DILexicalBlock(scope: !12241, file: !3, line: 3308, column: 2)
!12244 = !DILocation(line: 3308, column: 2, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12243, file: !3, line: 3308, column: 2)
!12246 = !DILocation(line: 3309, column: 36, scope: !12243)
!12247 = !DILocation(line: 3309, column: 47, scope: !12243)
!12248 = !DILocation(line: 3309, column: 3, scope: !12243)
!12249 = !DILocation(line: 3309, column: 10, scope: !12243)
!12250 = !DILocation(line: 3309, column: 21, scope: !12243)
!12251 = !DILocation(line: 3309, column: 24, scope: !12243)
!12252 = !DILocation(line: 3309, column: 34, scope: !12243)
!12253 = distinct !{!12253, !12238, !12254}
!12254 = !DILocation(line: 3309, column: 47, scope: !12239)
!12255 = !DILocation(line: 3311, column: 26, scope: !12177)
!12256 = !DILocation(line: 3311, column: 8, scope: !12177)
!12257 = !DILocation(line: 3311, column: 6, scope: !12177)
!12258 = !DILocation(line: 3313, column: 2, scope: !12177)
!12259 = !DILocation(line: 3313, column: 9, scope: !12177)
!12260 = !DILocation(line: 3313, column: 21, scope: !12177)
!12261 = !DILocation(line: 3315, column: 9, scope: !12177)
!12262 = !DILocation(line: 3315, column: 2, scope: !12177)
!12263 = distinct !DISubprogram(name: "drm_atomic_helper_resume", scope: !3, file: !3, line: 3335, type: !4518, scopeLine: 3337, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12264 = !DILocalVariable(name: "dev", arg: 1, scope: !12263, file: !3, line: 3335, type: !6)
!12265 = !DILocation(line: 3335, column: 49, scope: !12263)
!12266 = !DILocalVariable(name: "state", arg: 2, scope: !12263, file: !3, line: 3336, type: !4520)
!12267 = !DILocation(line: 3336, column: 34, scope: !12263)
!12268 = !DILocalVariable(name: "ctx", scope: !12263, file: !3, line: 3338, type: !4362)
!12269 = !DILocation(line: 3338, column: 33, scope: !12263)
!12270 = !DILocalVariable(name: "err", scope: !12263, file: !3, line: 3339, type: !18)
!12271 = !DILocation(line: 3339, column: 6, scope: !12263)
!12272 = !DILocation(line: 3341, column: 24, scope: !12263)
!12273 = !DILocation(line: 3341, column: 2, scope: !12263)
!12274 = !DILocation(line: 3343, column: 2, scope: !12275)
!12275 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 3343, column: 2)
!12276 = !DILocation(line: 3343, column: 2, scope: !12263)
!12277 = !DILabel(scope: !12263, name: "modeset_lock_retry", file: !3, line: 3343)
!12278 = !DILocation(line: 3343, column: 2, scope: !12279)
!12279 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 3343, column: 2)
!12280 = !DILocation(line: 3345, column: 50, scope: !12263)
!12281 = !DILocation(line: 3345, column: 8, scope: !12263)
!12282 = !DILocation(line: 3345, column: 6, scope: !12263)
!12283 = !DILocation(line: 3345, column: 2, scope: !12263)
!12284 = !DILabel(scope: !12263, name: "modeset_lock_fail", file: !3, line: 3347)
!12285 = !DILocation(line: 3347, column: 2, scope: !12263)
!12286 = !DILocation(line: 3347, column: 2, scope: !12287)
!12287 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 3347, column: 2)
!12288 = !DILocation(line: 3347, column: 2, scope: !12289)
!12289 = distinct !DILexicalBlock(scope: !12287, file: !3, line: 3347, column: 2)
!12290 = !DILocation(line: 3347, column: 2, scope: !12291)
!12291 = distinct !DILexicalBlock(scope: !12289, file: !3, line: 3347, column: 2)
!12292 = !DILocation(line: 3347, column: 2, scope: !12293)
!12293 = distinct !DILexicalBlock(scope: !12263, file: !3, line: 3347, column: 2)
!12294 = !DILocation(line: 3348, column: 23, scope: !12263)
!12295 = !DILocation(line: 3348, column: 2, scope: !12263)
!12296 = !DILocation(line: 3350, column: 9, scope: !12263)
!12297 = !DILocation(line: 3350, column: 2, scope: !12263)
!12298 = distinct !DISubprogram(name: "drm_atomic_helper_page_flip", scope: !3, file: !3, line: 3409, type: !5344, scopeLine: 3414, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12299 = !DILocalVariable(name: "crtc", arg: 1, scope: !12298, file: !3, line: 3409, type: !4551)
!12300 = !DILocation(line: 3409, column: 50, scope: !12298)
!12301 = !DILocalVariable(name: "fb", arg: 2, scope: !12298, file: !3, line: 3410, type: !4409)
!12302 = !DILocation(line: 3410, column: 29, scope: !12298)
!12303 = !DILocalVariable(name: "event", arg: 3, scope: !12298, file: !3, line: 3411, type: !4843)
!12304 = !DILocation(line: 3411, column: 38, scope: !12298)
!12305 = !DILocalVariable(name: "flags", arg: 4, scope: !12298, file: !3, line: 3412, type: !384)
!12306 = !DILocation(line: 3412, column: 14, scope: !12298)
!12307 = !DILocalVariable(name: "ctx", arg: 5, scope: !12298, file: !3, line: 3413, type: !4361)
!12308 = !DILocation(line: 3413, column: 37, scope: !12298)
!12309 = !DILocalVariable(name: "plane", scope: !12298, file: !3, line: 3415, type: !4535)
!12310 = !DILocation(line: 3415, column: 20, scope: !12298)
!12311 = !DILocation(line: 3415, column: 28, scope: !12298)
!12312 = !DILocation(line: 3415, column: 34, scope: !12298)
!12313 = !DILocalVariable(name: "state", scope: !12298, file: !3, line: 3416, type: !4520)
!12314 = !DILocation(line: 3416, column: 27, scope: !12298)
!12315 = !DILocalVariable(name: "ret", scope: !12298, file: !3, line: 3417, type: !18)
!12316 = !DILocation(line: 3417, column: 6, scope: !12298)
!12317 = !DILocation(line: 3419, column: 33, scope: !12298)
!12318 = !DILocation(line: 3419, column: 40, scope: !12298)
!12319 = !DILocation(line: 3419, column: 10, scope: !12298)
!12320 = !DILocation(line: 3419, column: 8, scope: !12298)
!12321 = !DILocation(line: 3420, column: 7, scope: !12322)
!12322 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3420, column: 6)
!12323 = !DILocation(line: 3420, column: 6, scope: !12298)
!12324 = !DILocation(line: 3421, column: 3, scope: !12322)
!12325 = !DILocation(line: 3423, column: 23, scope: !12298)
!12326 = !DILocation(line: 3423, column: 2, scope: !12298)
!12327 = !DILocation(line: 3423, column: 9, scope: !12298)
!12328 = !DILocation(line: 3423, column: 21, scope: !12298)
!12329 = !DILocation(line: 3425, column: 25, scope: !12298)
!12330 = !DILocation(line: 3425, column: 32, scope: !12298)
!12331 = !DILocation(line: 3425, column: 38, scope: !12298)
!12332 = !DILocation(line: 3425, column: 42, scope: !12298)
!12333 = !DILocation(line: 3425, column: 49, scope: !12298)
!12334 = !DILocation(line: 3425, column: 8, scope: !12298)
!12335 = !DILocation(line: 3425, column: 6, scope: !12298)
!12336 = !DILocation(line: 3426, column: 6, scope: !12337)
!12337 = distinct !DILexicalBlock(scope: !12298, file: !3, line: 3426, column: 6)
!12338 = !DILocation(line: 3426, column: 10, scope: !12337)
!12339 = !DILocation(line: 3426, column: 6, scope: !12298)
!12340 = !DILocation(line: 3427, column: 3, scope: !12337)
!12341 = !DILocation(line: 3429, column: 38, scope: !12298)
!12342 = !DILocation(line: 3429, column: 8, scope: !12298)
!12343 = !DILocation(line: 3429, column: 6, scope: !12298)
!12344 = !DILocation(line: 3429, column: 2, scope: !12298)
!12345 = !DILabel(scope: !12298, name: "fail", file: !3, line: 3430)
!12346 = !DILocation(line: 3430, column: 1, scope: !12298)
!12347 = !DILocation(line: 3431, column: 23, scope: !12298)
!12348 = !DILocation(line: 3431, column: 2, scope: !12298)
!12349 = !DILocation(line: 3432, column: 9, scope: !12298)
!12350 = !DILocation(line: 3432, column: 2, scope: !12298)
!12351 = !DILocation(line: 3433, column: 1, scope: !12298)
!12352 = distinct !DISubprogram(name: "page_flip_common", scope: !3, file: !3, line: 3354, type: !12353, scopeLine: 3359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12353 = !DISubroutineType(types: !12354)
!12354 = !{!18, !4520, !4551, !4409, !4843, !384}
!12355 = !DILocalVariable(name: "state", arg: 1, scope: !12352, file: !3, line: 3354, type: !4520)
!12356 = !DILocation(line: 3354, column: 54, scope: !12352)
!12357 = !DILocalVariable(name: "crtc", arg: 2, scope: !12352, file: !3, line: 3355, type: !4551)
!12358 = !DILocation(line: 3355, column: 25, scope: !12352)
!12359 = !DILocalVariable(name: "fb", arg: 3, scope: !12352, file: !3, line: 3356, type: !4409)
!12360 = !DILocation(line: 3356, column: 32, scope: !12352)
!12361 = !DILocalVariable(name: "event", arg: 4, scope: !12352, file: !3, line: 3357, type: !4843)
!12362 = !DILocation(line: 3357, column: 41, scope: !12352)
!12363 = !DILocalVariable(name: "flags", arg: 5, scope: !12352, file: !3, line: 3358, type: !384)
!12364 = !DILocation(line: 3358, column: 17, scope: !12352)
!12365 = !DILocalVariable(name: "plane", scope: !12352, file: !3, line: 3360, type: !4535)
!12366 = !DILocation(line: 3360, column: 20, scope: !12352)
!12367 = !DILocation(line: 3360, column: 28, scope: !12352)
!12368 = !DILocation(line: 3360, column: 34, scope: !12352)
!12369 = !DILocalVariable(name: "plane_state", scope: !12352, file: !3, line: 3361, type: !5517)
!12370 = !DILocation(line: 3361, column: 26, scope: !12352)
!12371 = !DILocalVariable(name: "crtc_state", scope: !12352, file: !3, line: 3362, type: !4807)
!12372 = !DILocation(line: 3362, column: 25, scope: !12352)
!12373 = !DILocalVariable(name: "ret", scope: !12352, file: !3, line: 3363, type: !18)
!12374 = !DILocation(line: 3363, column: 6, scope: !12352)
!12375 = !DILocation(line: 3365, column: 41, scope: !12352)
!12376 = !DILocation(line: 3365, column: 48, scope: !12352)
!12377 = !DILocation(line: 3365, column: 15, scope: !12352)
!12378 = !DILocation(line: 3365, column: 13, scope: !12352)
!12379 = !DILocation(line: 3366, column: 13, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 3366, column: 6)
!12381 = !DILocation(line: 3366, column: 6, scope: !12380)
!12382 = !DILocation(line: 3366, column: 6, scope: !12352)
!12383 = !DILocation(line: 3367, column: 18, scope: !12380)
!12384 = !DILocation(line: 3367, column: 10, scope: !12380)
!12385 = !DILocation(line: 3367, column: 3, scope: !12380)
!12386 = !DILocation(line: 3369, column: 22, scope: !12352)
!12387 = !DILocation(line: 3369, column: 2, scope: !12352)
!12388 = !DILocation(line: 3369, column: 14, scope: !12352)
!12389 = !DILocation(line: 3369, column: 20, scope: !12352)
!12390 = !DILocation(line: 3370, column: 27, scope: !12352)
!12391 = !DILocation(line: 3370, column: 33, scope: !12352)
!12392 = !DILocation(line: 3370, column: 2, scope: !12352)
!12393 = !DILocation(line: 3370, column: 14, scope: !12352)
!12394 = !DILocation(line: 3370, column: 25, scope: !12352)
!12395 = !DILocation(line: 3372, column: 43, scope: !12352)
!12396 = !DILocation(line: 3372, column: 50, scope: !12352)
!12397 = !DILocation(line: 3372, column: 16, scope: !12352)
!12398 = !DILocation(line: 3372, column: 14, scope: !12352)
!12399 = !DILocation(line: 3373, column: 13, scope: !12400)
!12400 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 3373, column: 6)
!12401 = !DILocation(line: 3373, column: 6, scope: !12400)
!12402 = !DILocation(line: 3373, column: 6, scope: !12352)
!12403 = !DILocation(line: 3374, column: 18, scope: !12400)
!12404 = !DILocation(line: 3374, column: 10, scope: !12400)
!12405 = !DILocation(line: 3374, column: 3, scope: !12400)
!12406 = !DILocation(line: 3376, column: 38, scope: !12352)
!12407 = !DILocation(line: 3376, column: 51, scope: !12352)
!12408 = !DILocation(line: 3376, column: 8, scope: !12352)
!12409 = !DILocation(line: 3376, column: 6, scope: !12352)
!12410 = !DILocation(line: 3377, column: 6, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 3377, column: 6)
!12412 = !DILocation(line: 3377, column: 10, scope: !12411)
!12413 = !DILocation(line: 3377, column: 6, scope: !12352)
!12414 = !DILocation(line: 3378, column: 10, scope: !12411)
!12415 = !DILocation(line: 3378, column: 3, scope: !12411)
!12416 = !DILocation(line: 3379, column: 30, scope: !12352)
!12417 = !DILocation(line: 3379, column: 43, scope: !12352)
!12418 = !DILocation(line: 3379, column: 2, scope: !12352)
!12419 = !DILocation(line: 3382, column: 2, scope: !12352)
!12420 = !DILocation(line: 3382, column: 9, scope: !12352)
!12421 = !DILocation(line: 3382, column: 23, scope: !12352)
!12422 = !DILocation(line: 3383, column: 7, scope: !12423)
!12423 = distinct !DILexicalBlock(scope: !12352, file: !3, line: 3383, column: 6)
!12424 = !DILocation(line: 3383, column: 19, scope: !12423)
!12425 = !DILocation(line: 3383, column: 6, scope: !12352)
!12426 = !DILocation(line: 3384, column: 3, scope: !12427)
!12427 = distinct !DILexicalBlock(scope: !12423, file: !3, line: 3383, column: 27)
!12428 = !DILocation(line: 3386, column: 3, scope: !12427)
!12429 = !DILocation(line: 3389, column: 9, scope: !12352)
!12430 = !DILocation(line: 3389, column: 2, scope: !12352)
!12431 = !DILocation(line: 3390, column: 1, scope: !12352)
!12432 = distinct !DISubprogram(name: "drm_atomic_helper_page_flip_target", scope: !3, file: !3, line: 3452, type: !5348, scopeLine: 3458, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12433 = !DILocalVariable(name: "crtc", arg: 1, scope: !12432, file: !3, line: 3452, type: !4551)
!12434 = !DILocation(line: 3452, column: 57, scope: !12432)
!12435 = !DILocalVariable(name: "fb", arg: 2, scope: !12432, file: !3, line: 3453, type: !4409)
!12436 = !DILocation(line: 3453, column: 36, scope: !12432)
!12437 = !DILocalVariable(name: "event", arg: 3, scope: !12432, file: !3, line: 3454, type: !4843)
!12438 = !DILocation(line: 3454, column: 45, scope: !12432)
!12439 = !DILocalVariable(name: "flags", arg: 4, scope: !12432, file: !3, line: 3455, type: !384)
!12440 = !DILocation(line: 3455, column: 21, scope: !12432)
!12441 = !DILocalVariable(name: "target", arg: 5, scope: !12432, file: !3, line: 3456, type: !384)
!12442 = !DILocation(line: 3456, column: 21, scope: !12432)
!12443 = !DILocalVariable(name: "ctx", arg: 6, scope: !12432, file: !3, line: 3457, type: !4361)
!12444 = !DILocation(line: 3457, column: 44, scope: !12432)
!12445 = !DILocalVariable(name: "plane", scope: !12432, file: !3, line: 3459, type: !4535)
!12446 = !DILocation(line: 3459, column: 20, scope: !12432)
!12447 = !DILocation(line: 3459, column: 28, scope: !12432)
!12448 = !DILocation(line: 3459, column: 34, scope: !12432)
!12449 = !DILocalVariable(name: "state", scope: !12432, file: !3, line: 3460, type: !4520)
!12450 = !DILocation(line: 3460, column: 27, scope: !12432)
!12451 = !DILocalVariable(name: "crtc_state", scope: !12432, file: !3, line: 3461, type: !4807)
!12452 = !DILocation(line: 3461, column: 25, scope: !12432)
!12453 = !DILocalVariable(name: "ret", scope: !12432, file: !3, line: 3462, type: !18)
!12454 = !DILocation(line: 3462, column: 6, scope: !12432)
!12455 = !DILocation(line: 3464, column: 33, scope: !12432)
!12456 = !DILocation(line: 3464, column: 40, scope: !12432)
!12457 = !DILocation(line: 3464, column: 10, scope: !12432)
!12458 = !DILocation(line: 3464, column: 8, scope: !12432)
!12459 = !DILocation(line: 3465, column: 7, scope: !12460)
!12460 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 3465, column: 6)
!12461 = !DILocation(line: 3465, column: 6, scope: !12432)
!12462 = !DILocation(line: 3466, column: 3, scope: !12460)
!12463 = !DILocation(line: 3468, column: 23, scope: !12432)
!12464 = !DILocation(line: 3468, column: 2, scope: !12432)
!12465 = !DILocation(line: 3468, column: 9, scope: !12432)
!12466 = !DILocation(line: 3468, column: 21, scope: !12432)
!12467 = !DILocation(line: 3470, column: 25, scope: !12432)
!12468 = !DILocation(line: 3470, column: 32, scope: !12432)
!12469 = !DILocation(line: 3470, column: 38, scope: !12432)
!12470 = !DILocation(line: 3470, column: 42, scope: !12432)
!12471 = !DILocation(line: 3470, column: 49, scope: !12432)
!12472 = !DILocation(line: 3470, column: 8, scope: !12432)
!12473 = !DILocation(line: 3470, column: 6, scope: !12432)
!12474 = !DILocation(line: 3471, column: 6, scope: !12475)
!12475 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 3471, column: 6)
!12476 = !DILocation(line: 3471, column: 10, scope: !12475)
!12477 = !DILocation(line: 3471, column: 6, scope: !12432)
!12478 = !DILocation(line: 3472, column: 3, scope: !12475)
!12479 = !DILocation(line: 3474, column: 45, scope: !12432)
!12480 = !DILocation(line: 3474, column: 52, scope: !12432)
!12481 = !DILocation(line: 3474, column: 15, scope: !12432)
!12482 = !DILocation(line: 3474, column: 13, scope: !12432)
!12483 = !DILocalVariable(name: "__ret_warn_on", scope: !12484, file: !3, line: 3475, type: !18)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !3, line: 3475, column: 6)
!12485 = distinct !DILexicalBlock(scope: !12432, file: !3, line: 3475, column: 6)
!12486 = !DILocation(line: 3475, column: 6, scope: !12484)
!12487 = !DILocation(line: 3475, column: 6, scope: !12488)
!12488 = distinct !DILexicalBlock(scope: !12484, file: !3, line: 3475, column: 6)
!12489 = !DILocation(line: 3475, column: 6, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12488, file: !3, line: 3475, column: 6)
!12491 = !DILocation(line: 3475, column: 6, scope: !12492)
!12492 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3475, column: 6)
!12493 = !DILocation(line: 3475, column: 6, scope: !12494)
!12494 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3475, column: 6)
!12495 = !{i32 -2140075087, i32 -2140075058, i32 -2140075012, i32 -2140074954, i32 -2140074900, i32 -2140074846, i32 -2140074791, i32 -2140074760}
!12496 = !DILocation(line: 3475, column: 6, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3475, column: 6)
!12498 = !{i32 -2140074342, i32 -2140074335, i32 -2140074283, i32 -2140074252, i32 -2140074222}
!12499 = !DILocation(line: 3475, column: 6, scope: !12500)
!12500 = distinct !DILexicalBlock(scope: !12490, file: !3, line: 3475, column: 6)
!12501 = !DILocation(line: 3475, column: 6, scope: !12485)
!12502 = !DILocation(line: 3475, column: 6, scope: !12432)
!12503 = !DILocation(line: 3476, column: 7, scope: !12504)
!12504 = distinct !DILexicalBlock(scope: !12485, file: !3, line: 3475, column: 28)
!12505 = !DILocation(line: 3477, column: 3, scope: !12504)
!12506 = !DILocation(line: 3479, column: 30, scope: !12432)
!12507 = !DILocation(line: 3479, column: 2, scope: !12432)
!12508 = !DILocation(line: 3479, column: 14, scope: !12432)
!12509 = !DILocation(line: 3479, column: 28, scope: !12432)
!12510 = !DILocation(line: 3481, column: 38, scope: !12432)
!12511 = !DILocation(line: 3481, column: 8, scope: !12432)
!12512 = !DILocation(line: 3481, column: 6, scope: !12432)
!12513 = !DILocation(line: 3481, column: 2, scope: !12432)
!12514 = !DILabel(scope: !12432, name: "fail", file: !3, line: 3482)
!12515 = !DILocation(line: 3482, column: 1, scope: !12432)
!12516 = !DILocation(line: 3483, column: 23, scope: !12432)
!12517 = !DILocation(line: 3483, column: 2, scope: !12432)
!12518 = !DILocation(line: 3484, column: 9, scope: !12432)
!12519 = !DILocation(line: 3484, column: 2, scope: !12432)
!12520 = !DILocation(line: 3485, column: 1, scope: !12432)
!12521 = distinct !DISubprogram(name: "drm_atomic_helper_legacy_gamma_set", scope: !3, file: !3, line: 3502, type: !4594, scopeLine: 3506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12522 = !DILocalVariable(name: "crtc", arg: 1, scope: !12521, file: !3, line: 3502, type: !4551)
!12523 = !DILocation(line: 3502, column: 57, scope: !12521)
!12524 = !DILocalVariable(name: "red", arg: 2, scope: !12521, file: !3, line: 3503, type: !4596)
!12525 = !DILocation(line: 3503, column: 17, scope: !12521)
!12526 = !DILocalVariable(name: "green", arg: 3, scope: !12521, file: !3, line: 3503, type: !4596)
!12527 = !DILocation(line: 3503, column: 27, scope: !12521)
!12528 = !DILocalVariable(name: "blue", arg: 4, scope: !12521, file: !3, line: 3503, type: !4596)
!12529 = !DILocation(line: 3503, column: 39, scope: !12521)
!12530 = !DILocalVariable(name: "size", arg: 5, scope: !12521, file: !3, line: 3504, type: !384)
!12531 = !DILocation(line: 3504, column: 21, scope: !12521)
!12532 = !DILocalVariable(name: "ctx", arg: 6, scope: !12521, file: !3, line: 3505, type: !4361)
!12533 = !DILocation(line: 3505, column: 44, scope: !12521)
!12534 = !DILocalVariable(name: "dev", scope: !12521, file: !3, line: 3507, type: !6)
!12535 = !DILocation(line: 3507, column: 21, scope: !12521)
!12536 = !DILocation(line: 3507, column: 27, scope: !12521)
!12537 = !DILocation(line: 3507, column: 33, scope: !12521)
!12538 = !DILocalVariable(name: "state", scope: !12521, file: !3, line: 3508, type: !4520)
!12539 = !DILocation(line: 3508, column: 27, scope: !12521)
!12540 = !DILocalVariable(name: "crtc_state", scope: !12521, file: !3, line: 3509, type: !4807)
!12541 = !DILocation(line: 3509, column: 25, scope: !12521)
!12542 = !DILocalVariable(name: "blob", scope: !12521, file: !3, line: 3510, type: !4826)
!12543 = !DILocation(line: 3510, column: 28, scope: !12521)
!12544 = !DILocalVariable(name: "blob_data", scope: !12521, file: !3, line: 3511, type: !12545)
!12545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12546, size: 64)
!12546 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_color_lut", file: !4113, line: 637, size: 64, elements: !12547)
!12547 = !{!12548, !12549, !12550, !12551}
!12548 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !12546, file: !4113, line: 642, baseType: !728, size: 16)
!12549 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !12546, file: !4113, line: 643, baseType: !728, size: 16, offset: 16)
!12550 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !12546, file: !4113, line: 644, baseType: !728, size: 16, offset: 32)
!12551 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !12546, file: !4113, line: 645, baseType: !728, size: 16, offset: 48)
!12552 = !DILocation(line: 3511, column: 24, scope: !12521)
!12553 = !DILocalVariable(name: "i", scope: !12521, file: !3, line: 3512, type: !18)
!12554 = !DILocation(line: 3512, column: 6, scope: !12521)
!12555 = !DILocalVariable(name: "ret", scope: !12521, file: !3, line: 3512, type: !18)
!12556 = !DILocation(line: 3512, column: 9, scope: !12521)
!12557 = !DILocalVariable(name: "replaced", scope: !12521, file: !3, line: 3513, type: !315)
!12558 = !DILocation(line: 3513, column: 7, scope: !12521)
!12559 = !DILocation(line: 3515, column: 33, scope: !12521)
!12560 = !DILocation(line: 3515, column: 39, scope: !12521)
!12561 = !DILocation(line: 3515, column: 10, scope: !12521)
!12562 = !DILocation(line: 3515, column: 8, scope: !12521)
!12563 = !DILocation(line: 3516, column: 7, scope: !12564)
!12564 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 3516, column: 6)
!12565 = !DILocation(line: 3516, column: 6, scope: !12521)
!12566 = !DILocation(line: 3517, column: 3, scope: !12564)
!12567 = !DILocation(line: 3519, column: 34, scope: !12521)
!12568 = !DILocation(line: 3520, column: 37, scope: !12521)
!12569 = !DILocation(line: 3520, column: 35, scope: !12521)
!12570 = !DILocation(line: 3519, column: 9, scope: !12521)
!12571 = !DILocation(line: 3519, column: 7, scope: !12521)
!12572 = !DILocation(line: 3522, column: 13, scope: !12573)
!12573 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 3522, column: 6)
!12574 = !DILocation(line: 3522, column: 6, scope: !12573)
!12575 = !DILocation(line: 3522, column: 6, scope: !12521)
!12576 = !DILocation(line: 3523, column: 17, scope: !12577)
!12577 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 3522, column: 20)
!12578 = !DILocation(line: 3523, column: 9, scope: !12577)
!12579 = !DILocation(line: 3523, column: 7, scope: !12577)
!12580 = !DILocation(line: 3524, column: 8, scope: !12577)
!12581 = !DILocation(line: 3525, column: 3, scope: !12577)
!12582 = !DILocation(line: 3529, column: 14, scope: !12521)
!12583 = !DILocation(line: 3529, column: 20, scope: !12521)
!12584 = !DILocation(line: 3529, column: 12, scope: !12521)
!12585 = !DILocation(line: 3530, column: 9, scope: !12586)
!12586 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 3530, column: 2)
!12587 = !DILocation(line: 3530, column: 7, scope: !12586)
!12588 = !DILocation(line: 3530, column: 14, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12586, file: !3, line: 3530, column: 2)
!12590 = !DILocation(line: 3530, column: 18, scope: !12589)
!12591 = !DILocation(line: 3530, column: 16, scope: !12589)
!12592 = !DILocation(line: 3530, column: 2, scope: !12586)
!12593 = !DILocation(line: 3531, column: 22, scope: !12594)
!12594 = distinct !DILexicalBlock(scope: !12589, file: !3, line: 3530, column: 29)
!12595 = !DILocation(line: 3531, column: 26, scope: !12594)
!12596 = !DILocation(line: 3531, column: 3, scope: !12594)
!12597 = !DILocation(line: 3531, column: 13, scope: !12594)
!12598 = !DILocation(line: 3531, column: 16, scope: !12594)
!12599 = !DILocation(line: 3531, column: 20, scope: !12594)
!12600 = !DILocation(line: 3532, column: 24, scope: !12594)
!12601 = !DILocation(line: 3532, column: 30, scope: !12594)
!12602 = !DILocation(line: 3532, column: 3, scope: !12594)
!12603 = !DILocation(line: 3532, column: 13, scope: !12594)
!12604 = !DILocation(line: 3532, column: 16, scope: !12594)
!12605 = !DILocation(line: 3532, column: 22, scope: !12594)
!12606 = !DILocation(line: 3533, column: 23, scope: !12594)
!12607 = !DILocation(line: 3533, column: 28, scope: !12594)
!12608 = !DILocation(line: 3533, column: 3, scope: !12594)
!12609 = !DILocation(line: 3533, column: 13, scope: !12594)
!12610 = !DILocation(line: 3533, column: 16, scope: !12594)
!12611 = !DILocation(line: 3533, column: 21, scope: !12594)
!12612 = !DILocation(line: 3534, column: 2, scope: !12594)
!12613 = !DILocation(line: 3530, column: 25, scope: !12589)
!12614 = !DILocation(line: 3530, column: 2, scope: !12589)
!12615 = distinct !{!12615, !12592, !12616}
!12616 = !DILocation(line: 3534, column: 2, scope: !12586)
!12617 = !DILocation(line: 3536, column: 23, scope: !12521)
!12618 = !DILocation(line: 3536, column: 2, scope: !12521)
!12619 = !DILocation(line: 3536, column: 9, scope: !12521)
!12620 = !DILocation(line: 3536, column: 21, scope: !12521)
!12621 = !DILocation(line: 3537, column: 41, scope: !12521)
!12622 = !DILocation(line: 3537, column: 48, scope: !12521)
!12623 = !DILocation(line: 3537, column: 15, scope: !12521)
!12624 = !DILocation(line: 3537, column: 13, scope: !12521)
!12625 = !DILocation(line: 3538, column: 13, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12521, file: !3, line: 3538, column: 6)
!12627 = !DILocation(line: 3538, column: 6, scope: !12626)
!12628 = !DILocation(line: 3538, column: 6, scope: !12521)
!12629 = !DILocation(line: 3539, column: 17, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 3538, column: 26)
!12631 = !DILocation(line: 3539, column: 9, scope: !12630)
!12632 = !DILocation(line: 3539, column: 7, scope: !12630)
!12633 = !DILocation(line: 3540, column: 3, scope: !12630)
!12634 = !DILocation(line: 3544, column: 41, scope: !12521)
!12635 = !DILocation(line: 3544, column: 53, scope: !12521)
!12636 = !DILocation(line: 3544, column: 14, scope: !12521)
!12637 = !DILocation(line: 3544, column: 12, scope: !12521)
!12638 = !DILocation(line: 3545, column: 41, scope: !12521)
!12639 = !DILocation(line: 3545, column: 53, scope: !12521)
!12640 = !DILocation(line: 3545, column: 14, scope: !12521)
!12641 = !DILocation(line: 3545, column: 11, scope: !12521)
!12642 = !DILocation(line: 3546, column: 41, scope: !12521)
!12643 = !DILocation(line: 3546, column: 53, scope: !12521)
!12644 = !DILocation(line: 3546, column: 64, scope: !12521)
!12645 = !DILocation(line: 3546, column: 14, scope: !12521)
!12646 = !DILocation(line: 3546, column: 11, scope: !12521)
!12647 = !DILocation(line: 3547, column: 36, scope: !12521)
!12648 = !DILocation(line: 3547, column: 2, scope: !12521)
!12649 = !DILocation(line: 3547, column: 14, scope: !12521)
!12650 = !DILocation(line: 3547, column: 33, scope: !12521)
!12651 = !DILocation(line: 3549, column: 26, scope: !12521)
!12652 = !DILocation(line: 3549, column: 8, scope: !12521)
!12653 = !DILocation(line: 3549, column: 6, scope: !12521)
!12654 = !DILocation(line: 3549, column: 2, scope: !12521)
!12655 = !DILabel(scope: !12521, name: "fail", file: !3, line: 3551)
!12656 = !DILocation(line: 3551, column: 1, scope: !12521)
!12657 = !DILocation(line: 3552, column: 23, scope: !12521)
!12658 = !DILocation(line: 3552, column: 2, scope: !12521)
!12659 = !DILocation(line: 3553, column: 24, scope: !12521)
!12660 = !DILocation(line: 3553, column: 2, scope: !12521)
!12661 = !DILocation(line: 3554, column: 9, scope: !12521)
!12662 = !DILocation(line: 3554, column: 2, scope: !12521)
!12663 = !DILocation(line: 3555, column: 1, scope: !12521)
!12664 = distinct !DISubprogram(name: "drm_atomic_helper_bridge_propagate_bus_fmt", scope: !3, file: !3, line: 3578, type: !5975, scopeLine: 3584, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12665 = !DILocalVariable(name: "bridge", arg: 1, scope: !12664, file: !3, line: 3578, type: !5897)
!12666 = !DILocation(line: 3578, column: 63, scope: !12664)
!12667 = !DILocalVariable(name: "bridge_state", arg: 2, scope: !12664, file: !3, line: 3579, type: !5950)
!12668 = !DILocation(line: 3579, column: 31, scope: !12664)
!12669 = !DILocalVariable(name: "crtc_state", arg: 3, scope: !12664, file: !3, line: 3580, type: !4807)
!12670 = !DILocation(line: 3580, column: 29, scope: !12664)
!12671 = !DILocalVariable(name: "conn_state", arg: 4, scope: !12664, file: !3, line: 3581, type: !4744)
!12672 = !DILocation(line: 3581, column: 34, scope: !12664)
!12673 = !DILocalVariable(name: "output_fmt", arg: 5, scope: !12664, file: !3, line: 3582, type: !240)
!12674 = !DILocation(line: 3582, column: 10, scope: !12664)
!12675 = !DILocalVariable(name: "num_input_fmts", arg: 6, scope: !12664, file: !3, line: 3583, type: !2638)
!12676 = !DILocation(line: 3583, column: 20, scope: !12664)
!12677 = !DILocalVariable(name: "input_fmts", scope: !12664, file: !3, line: 3585, type: !1291)
!12678 = !DILocation(line: 3585, column: 7, scope: !12664)
!12679 = !DILocation(line: 3587, column: 15, scope: !12664)
!12680 = !DILocation(line: 3587, column: 13, scope: !12664)
!12681 = !DILocation(line: 3588, column: 7, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12664, file: !3, line: 3588, column: 6)
!12683 = !DILocation(line: 3588, column: 6, scope: !12664)
!12684 = !DILocation(line: 3589, column: 4, scope: !12685)
!12685 = distinct !DILexicalBlock(scope: !12682, file: !3, line: 3588, column: 19)
!12686 = !DILocation(line: 3589, column: 19, scope: !12685)
!12687 = !DILocation(line: 3590, column: 3, scope: !12685)
!12688 = !DILocation(line: 3593, column: 3, scope: !12664)
!12689 = !DILocation(line: 3593, column: 18, scope: !12664)
!12690 = !DILocation(line: 3594, column: 18, scope: !12664)
!12691 = !DILocation(line: 3594, column: 2, scope: !12664)
!12692 = !DILocation(line: 3594, column: 16, scope: !12664)
!12693 = !DILocation(line: 3595, column: 9, scope: !12664)
!12694 = !DILocation(line: 3595, column: 2, scope: !12664)
!12695 = !DILocation(line: 3596, column: 1, scope: !12664)
!12696 = distinct !DISubprogram(name: "ww_mutex_is_locked", scope: !4352, file: !4352, line: 359, type: !12697, scopeLine: 360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12697 = !DISubroutineType(types: !12698)
!12698 = !{!315, !12699}
!12699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!12700 = !DILocalVariable(name: "lock", arg: 1, scope: !12696, file: !4352, line: 359, type: !12699)
!12701 = !DILocation(line: 359, column: 56, scope: !12696)
!12702 = !DILocation(line: 361, column: 26, scope: !12696)
!12703 = !DILocation(line: 361, column: 32, scope: !12696)
!12704 = !DILocation(line: 361, column: 9, scope: !12696)
!12705 = !DILocation(line: 361, column: 2, scope: !12696)
!12706 = distinct !DISubprogram(name: "drm_encoder_mask", scope: !4752, file: !4752, line: 217, type: !12707, scopeLine: 218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12707 = !DISubroutineType(types: !12708)
!12708 = !{!240, !12709}
!12709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12710, size: 64)
!12710 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4751)
!12711 = !DILocalVariable(name: "encoder", arg: 1, scope: !12706, file: !4752, line: 217, type: !12709)
!12712 = !DILocation(line: 217, column: 62, scope: !12706)
!12713 = !DILocation(line: 219, column: 32, scope: !12706)
!12714 = !DILocation(line: 219, column: 14, scope: !12706)
!12715 = !DILocation(line: 219, column: 11, scope: !12706)
!12716 = !DILocation(line: 219, column: 2, scope: !12706)
!12717 = distinct !DISubprogram(name: "drm_atomic_get_new_connector_state", scope: !4522, file: !4522, line: 625, type: !12718, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12718 = !DISubroutineType(types: !12719)
!12719 = !{!4744, !4520, !4613}
!12720 = !DILocalVariable(name: "state", arg: 1, scope: !12717, file: !4522, line: 625, type: !4520)
!12721 = !DILocation(line: 625, column: 61, scope: !12717)
!12722 = !DILocalVariable(name: "connector", arg: 2, scope: !12717, file: !4522, line: 626, type: !4613)
!12723 = !DILocation(line: 626, column: 30, scope: !12717)
!12724 = !DILocalVariable(name: "index", scope: !12717, file: !4522, line: 628, type: !18)
!12725 = !DILocation(line: 628, column: 6, scope: !12717)
!12726 = !DILocation(line: 628, column: 34, scope: !12717)
!12727 = !DILocation(line: 628, column: 14, scope: !12717)
!12728 = !DILocation(line: 630, column: 6, scope: !12729)
!12729 = distinct !DILexicalBlock(scope: !12717, file: !4522, line: 630, column: 6)
!12730 = !DILocation(line: 630, column: 15, scope: !12729)
!12731 = !DILocation(line: 630, column: 22, scope: !12729)
!12732 = !DILocation(line: 630, column: 12, scope: !12729)
!12733 = !DILocation(line: 630, column: 6, scope: !12717)
!12734 = !DILocation(line: 631, column: 3, scope: !12729)
!12735 = !DILocation(line: 633, column: 9, scope: !12717)
!12736 = !DILocation(line: 633, column: 16, scope: !12717)
!12737 = !DILocation(line: 633, column: 27, scope: !12717)
!12738 = !DILocation(line: 633, column: 34, scope: !12717)
!12739 = !DILocation(line: 633, column: 2, scope: !12717)
!12740 = !DILocation(line: 634, column: 1, scope: !12717)
!12741 = distinct !DISubprogram(name: "drm_encoder_index", scope: !4752, file: !4752, line: 205, type: !12742, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12742 = !DISubroutineType(types: !12743)
!12743 = !{!210, !12709}
!12744 = !DILocalVariable(name: "encoder", arg: 1, scope: !12741, file: !4752, line: 205, type: !12709)
!12745 = !DILocation(line: 205, column: 72, scope: !12741)
!12746 = !DILocation(line: 207, column: 9, scope: !12741)
!12747 = !DILocation(line: 207, column: 18, scope: !12741)
!12748 = !DILocation(line: 207, column: 2, scope: !12741)
!12749 = distinct !DISubprogram(name: "drm_connector_index", scope: !4615, file: !4615, line: 1530, type: !12750, scopeLine: 1531, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12750 = !DISubroutineType(types: !12751)
!12751 = !{!210, !12752}
!12752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12753, size: 64)
!12753 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4614)
!12754 = !DILocalVariable(name: "connector", arg: 1, scope: !12749, file: !4615, line: 1530, type: !12752)
!12755 = !DILocation(line: 1530, column: 76, scope: !12749)
!12756 = !DILocation(line: 1532, column: 9, scope: !12749)
!12757 = !DILocation(line: 1532, column: 20, scope: !12749)
!12758 = !DILocation(line: 1532, column: 2, scope: !12749)
!12759 = distinct !DISubprogram(name: "set_best_encoder", scope: !3, file: !3, line: 212, type: !12760, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12760 = !DISubroutineType(types: !12761)
!12761 = !{null, !4520, !4744, !4750}
!12762 = !DILocalVariable(name: "state", arg: 1, scope: !12759, file: !3, line: 212, type: !4520)
!12763 = !DILocation(line: 212, column: 43, scope: !12759)
!12764 = !DILocalVariable(name: "conn_state", arg: 2, scope: !12759, file: !3, line: 213, type: !4744)
!12765 = !DILocation(line: 213, column: 32, scope: !12759)
!12766 = !DILocalVariable(name: "encoder", arg: 3, scope: !12759, file: !3, line: 214, type: !4750)
!12767 = !DILocation(line: 214, column: 24, scope: !12759)
!12768 = !DILocalVariable(name: "crtc_state", scope: !12759, file: !3, line: 216, type: !4807)
!12769 = !DILocation(line: 216, column: 25, scope: !12759)
!12770 = !DILocalVariable(name: "crtc", scope: !12759, file: !3, line: 217, type: !4551)
!12771 = !DILocation(line: 217, column: 19, scope: !12759)
!12772 = !DILocation(line: 219, column: 6, scope: !12773)
!12773 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 219, column: 6)
!12774 = !DILocation(line: 219, column: 18, scope: !12773)
!12775 = !DILocation(line: 219, column: 6, scope: !12759)
!12776 = !DILocation(line: 221, column: 10, scope: !12777)
!12777 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 219, column: 32)
!12778 = !DILocation(line: 221, column: 22, scope: !12777)
!12779 = !DILocation(line: 221, column: 33, scope: !12777)
!12780 = !DILocation(line: 221, column: 40, scope: !12777)
!12781 = !DILocation(line: 221, column: 8, scope: !12777)
!12782 = !DILocalVariable(name: "__ret_warn_on", scope: !12783, file: !3, line: 229, type: !18)
!12783 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 229, column: 3)
!12784 = !DILocation(line: 229, column: 3, scope: !12783)
!12785 = !DILocation(line: 0, scope: !12783)
!12786 = !DILocation(line: 229, column: 3, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12783, file: !3, line: 229, column: 3)
!12788 = !DILocation(line: 229, column: 3, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12787, file: !3, line: 229, column: 3)
!12790 = !DILocation(line: 229, column: 3, scope: !12791)
!12791 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 229, column: 3)
!12792 = !DILocation(line: 229, column: 3, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 229, column: 3)
!12794 = !{i32 -2140217411, i32 -2140217382, i32 -2140217336, i32 -2140217278, i32 -2140217224, i32 -2140217170, i32 -2140217115, i32 -2140217084}
!12795 = !DILocation(line: 229, column: 3, scope: !12796)
!12796 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 229, column: 3)
!12797 = !{i32 -2140216667, i32 -2140216660, i32 -2140216608, i32 -2140216577, i32 -2140216547}
!12798 = !DILocation(line: 229, column: 3, scope: !12799)
!12799 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 229, column: 3)
!12800 = !DILocation(line: 230, column: 7, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 230, column: 7)
!12802 = !DILocation(line: 230, column: 7, scope: !12777)
!12803 = !DILocation(line: 231, column: 47, scope: !12804)
!12804 = distinct !DILexicalBlock(scope: !12801, file: !3, line: 230, column: 13)
!12805 = !DILocation(line: 231, column: 54, scope: !12804)
!12806 = !DILocation(line: 231, column: 17, scope: !12804)
!12807 = !DILocation(line: 231, column: 15, scope: !12804)
!12808 = !DILocation(line: 234, column: 23, scope: !12804)
!12809 = !DILocation(line: 234, column: 35, scope: !12804)
!12810 = !DILocation(line: 234, column: 6, scope: !12804)
!12811 = !DILocation(line: 234, column: 5, scope: !12804)
!12812 = !DILocation(line: 233, column: 4, scope: !12804)
!12813 = !DILocation(line: 233, column: 16, scope: !12804)
!12814 = !DILocation(line: 233, column: 29, scope: !12804)
!12815 = !DILocation(line: 235, column: 3, scope: !12804)
!12816 = !DILocation(line: 236, column: 2, scope: !12777)
!12817 = !DILocation(line: 238, column: 6, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12759, file: !3, line: 238, column: 6)
!12819 = !DILocation(line: 238, column: 6, scope: !12759)
!12820 = !DILocation(line: 239, column: 10, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12818, file: !3, line: 238, column: 15)
!12822 = !DILocation(line: 239, column: 22, scope: !12821)
!12823 = !DILocation(line: 239, column: 8, scope: !12821)
!12824 = !DILocalVariable(name: "__ret_warn_on", scope: !12825, file: !3, line: 240, type: !18)
!12825 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 240, column: 3)
!12826 = !DILocation(line: 240, column: 3, scope: !12825)
!12827 = !DILocation(line: 240, column: 3, scope: !12828)
!12828 = distinct !DILexicalBlock(scope: !12825, file: !3, line: 240, column: 3)
!12829 = !DILocation(line: 240, column: 3, scope: !12830)
!12830 = distinct !DILexicalBlock(scope: !12828, file: !3, line: 240, column: 3)
!12831 = !DILocation(line: 240, column: 3, scope: !12832)
!12832 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 240, column: 3)
!12833 = !DILocation(line: 240, column: 3, scope: !12834)
!12834 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 240, column: 3)
!12835 = !{i32 -2140215970, i32 -2140215941, i32 -2140215895, i32 -2140215837, i32 -2140215783, i32 -2140215729, i32 -2140215674, i32 -2140215643}
!12836 = !DILocation(line: 240, column: 3, scope: !12837)
!12837 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 240, column: 3)
!12838 = !{i32 -2140215226, i32 -2140215219, i32 -2140215167, i32 -2140215136, i32 -2140215106}
!12839 = !DILocation(line: 240, column: 3, scope: !12840)
!12840 = distinct !DILexicalBlock(scope: !12830, file: !3, line: 240, column: 3)
!12841 = !DILocation(line: 241, column: 7, scope: !12842)
!12842 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 241, column: 7)
!12843 = !DILocation(line: 241, column: 7, scope: !12821)
!12844 = !DILocation(line: 242, column: 47, scope: !12845)
!12845 = distinct !DILexicalBlock(scope: !12842, file: !3, line: 241, column: 13)
!12846 = !DILocation(line: 242, column: 54, scope: !12845)
!12847 = !DILocation(line: 242, column: 17, scope: !12845)
!12848 = !DILocation(line: 242, column: 15, scope: !12845)
!12849 = !DILocation(line: 245, column: 22, scope: !12845)
!12850 = !DILocation(line: 245, column: 5, scope: !12845)
!12851 = !DILocation(line: 244, column: 4, scope: !12845)
!12852 = !DILocation(line: 244, column: 16, scope: !12845)
!12853 = !DILocation(line: 244, column: 29, scope: !12845)
!12854 = !DILocation(line: 246, column: 3, scope: !12845)
!12855 = !DILocation(line: 247, column: 2, scope: !12821)
!12856 = !DILocation(line: 249, column: 29, scope: !12759)
!12857 = !DILocation(line: 249, column: 2, scope: !12759)
!12858 = !DILocation(line: 249, column: 14, scope: !12759)
!12859 = !DILocation(line: 249, column: 27, scope: !12759)
!12860 = !DILocation(line: 250, column: 1, scope: !12759)
!12861 = distinct !DISubprogram(name: "drm_connector_is_unregistered", scope: !4615, file: !4615, line: 1593, type: !12862, scopeLine: 1594, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12862 = !DISubroutineType(types: !12863)
!12863 = !{!315, !4613}
!12864 = !DILocalVariable(name: "connector", arg: 1, scope: !12861, file: !4615, line: 1593, type: !4613)
!12865 = !DILocation(line: 1593, column: 53, scope: !12861)
!12866 = !DILocation(line: 1595, column: 9, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12861, file: !4615, line: 1595, column: 9)
!12868 = !DILocation(line: 1595, column: 9, scope: !12869)
!12869 = distinct !DILexicalBlock(scope: !12867, file: !4615, line: 1595, column: 9)
!12870 = !DILocation(line: 1595, column: 50, scope: !12861)
!12871 = !DILocation(line: 1595, column: 2, scope: !12861)
!12872 = distinct !DISubprogram(name: "drm_encoder_crtc_ok", scope: !4752, file: !4752, line: 229, type: !12873, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12873 = !DISubroutineType(types: !12874)
!12874 = !{!315, !4750, !4551}
!12875 = !DILocalVariable(name: "encoder", arg: 1, scope: !12872, file: !4752, line: 229, type: !4750)
!12876 = !DILocation(line: 229, column: 60, scope: !12872)
!12877 = !DILocalVariable(name: "crtc", arg: 2, scope: !12872, file: !4752, line: 230, type: !4551)
!12878 = !DILocation(line: 230, column: 29, scope: !12872)
!12879 = !DILocation(line: 232, column: 12, scope: !12872)
!12880 = !DILocation(line: 232, column: 21, scope: !12872)
!12881 = !DILocation(line: 232, column: 52, scope: !12872)
!12882 = !DILocation(line: 232, column: 38, scope: !12872)
!12883 = !DILocation(line: 232, column: 36, scope: !12872)
!12884 = !DILocation(line: 232, column: 10, scope: !12872)
!12885 = !DILocation(line: 232, column: 9, scope: !12872)
!12886 = !DILocation(line: 232, column: 2, scope: !12872)
!12887 = distinct !DISubprogram(name: "steal_encoder", scope: !3, file: !3, line: 253, type: !12888, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12888 = !DISubroutineType(types: !12889)
!12889 = !{null, !4520, !4750}
!12890 = !DILocalVariable(name: "state", arg: 1, scope: !12887, file: !3, line: 253, type: !4520)
!12891 = !DILocation(line: 253, column: 40, scope: !12887)
!12892 = !DILocalVariable(name: "encoder", arg: 2, scope: !12887, file: !3, line: 254, type: !4750)
!12893 = !DILocation(line: 254, column: 28, scope: !12887)
!12894 = !DILocalVariable(name: "crtc_state", scope: !12887, file: !3, line: 256, type: !4807)
!12895 = !DILocation(line: 256, column: 25, scope: !12887)
!12896 = !DILocalVariable(name: "connector", scope: !12887, file: !3, line: 257, type: !4613)
!12897 = !DILocation(line: 257, column: 24, scope: !12887)
!12898 = !DILocalVariable(name: "old_connector_state", scope: !12887, file: !3, line: 258, type: !4744)
!12899 = !DILocation(line: 258, column: 30, scope: !12887)
!12900 = !DILocalVariable(name: "new_connector_state", scope: !12887, file: !3, line: 258, type: !4744)
!12901 = !DILocation(line: 258, column: 52, scope: !12887)
!12902 = !DILocalVariable(name: "i", scope: !12887, file: !3, line: 259, type: !18)
!12903 = !DILocation(line: 259, column: 6, scope: !12887)
!12904 = !DILocation(line: 261, column: 2, scope: !12905)
!12905 = distinct !DILexicalBlock(scope: !12887, file: !3, line: 261, column: 2)
!12906 = !DILocation(line: 261, column: 2, scope: !12907)
!12907 = distinct !DILexicalBlock(scope: !12905, file: !3, line: 261, column: 2)
!12908 = !DILocation(line: 261, column: 2, scope: !12909)
!12909 = distinct !DILexicalBlock(scope: !12907, file: !3, line: 261, column: 2)
!12910 = !DILocation(line: 261, column: 2, scope: !12911)
!12911 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 261, column: 2)
!12912 = !DILocalVariable(name: "encoder_crtc", scope: !12913, file: !3, line: 262, type: !4551)
!12913 = distinct !DILexicalBlock(scope: !12909, file: !3, line: 261, column: 100)
!12914 = !DILocation(line: 262, column: 20, scope: !12913)
!12915 = !DILocation(line: 264, column: 7, scope: !12916)
!12916 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 264, column: 7)
!12917 = !DILocation(line: 264, column: 28, scope: !12916)
!12918 = !DILocation(line: 264, column: 44, scope: !12916)
!12919 = !DILocation(line: 264, column: 41, scope: !12916)
!12920 = !DILocation(line: 264, column: 7, scope: !12913)
!12921 = !DILocation(line: 265, column: 4, scope: !12916)
!12922 = !DILocation(line: 267, column: 18, scope: !12913)
!12923 = !DILocation(line: 267, column: 39, scope: !12913)
!12924 = !DILocation(line: 267, column: 16, scope: !12913)
!12925 = !DILocation(line: 269, column: 3, scope: !12913)
!12926 = !DILocation(line: 273, column: 20, scope: !12913)
!12927 = !DILocation(line: 273, column: 27, scope: !12913)
!12928 = !DILocation(line: 273, column: 3, scope: !12913)
!12929 = !DILocation(line: 275, column: 46, scope: !12913)
!12930 = !DILocation(line: 275, column: 53, scope: !12913)
!12931 = !DILocation(line: 275, column: 16, scope: !12913)
!12932 = !DILocation(line: 275, column: 14, scope: !12913)
!12933 = !DILocation(line: 276, column: 3, scope: !12913)
!12934 = !DILocation(line: 276, column: 15, scope: !12913)
!12935 = !DILocation(line: 276, column: 34, scope: !12913)
!12936 = !DILocation(line: 278, column: 3, scope: !12913)
!12937 = distinct !{!12937, !12904, !12938}
!12938 = !DILocation(line: 279, column: 2, scope: !12905)
!12939 = !DILocation(line: 280, column: 1, scope: !12887)
!12940 = distinct !DISubprogram(name: "drm_crtc_index", scope: !4553, file: !4553, line: 1220, type: !12941, scopeLine: 1221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12941 = !DISubroutineType(types: !12942)
!12942 = !{!210, !8886}
!12943 = !DILocalVariable(name: "crtc", arg: 1, scope: !12940, file: !4553, line: 1220, type: !8886)
!12944 = !DILocation(line: 1220, column: 66, scope: !12940)
!12945 = !DILocation(line: 1222, column: 9, scope: !12940)
!12946 = !DILocation(line: 1222, column: 15, scope: !12940)
!12947 = !DILocation(line: 1222, column: 2, scope: !12940)
!12948 = distinct !DISubprogram(name: "mode_valid_path", scope: !3, file: !3, line: 494, type: !12949, scopeLine: 498, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!12949 = !DISubroutineType(types: !12950)
!12950 = !{!4246, !4613, !4750, !4551, !4514}
!12951 = !DILocalVariable(name: "connector", arg: 1, scope: !12948, file: !3, line: 494, type: !4613)
!12952 = !DILocation(line: 494, column: 67, scope: !12948)
!12953 = !DILocalVariable(name: "encoder", arg: 2, scope: !12948, file: !3, line: 495, type: !4750)
!12954 = !DILocation(line: 495, column: 30, scope: !12948)
!12955 = !DILocalVariable(name: "crtc", arg: 3, scope: !12948, file: !3, line: 496, type: !4551)
!12956 = !DILocation(line: 496, column: 27, scope: !12948)
!12957 = !DILocalVariable(name: "mode", arg: 4, scope: !12948, file: !3, line: 497, type: !4514)
!12958 = !DILocation(line: 497, column: 41, scope: !12948)
!12959 = !DILocalVariable(name: "bridge", scope: !12948, file: !3, line: 499, type: !5897)
!12960 = !DILocation(line: 499, column: 21, scope: !12948)
!12961 = !DILocalVariable(name: "ret", scope: !12948, file: !3, line: 500, type: !4246)
!12962 = !DILocation(line: 500, column: 23, scope: !12948)
!12963 = !DILocation(line: 502, column: 31, scope: !12948)
!12964 = !DILocation(line: 502, column: 40, scope: !12948)
!12965 = !DILocation(line: 502, column: 8, scope: !12948)
!12966 = !DILocation(line: 502, column: 6, scope: !12948)
!12967 = !DILocation(line: 503, column: 6, scope: !12968)
!12968 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 503, column: 6)
!12969 = !DILocation(line: 503, column: 10, scope: !12968)
!12970 = !DILocation(line: 503, column: 6, scope: !12948)
!12971 = !DILocation(line: 504, column: 3, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 503, column: 22)
!12973 = !DILocation(line: 506, column: 10, scope: !12972)
!12974 = !DILocation(line: 506, column: 3, scope: !12972)
!12975 = !DILocation(line: 509, column: 45, scope: !12948)
!12976 = !DILocation(line: 509, column: 11, scope: !12948)
!12977 = !DILocation(line: 509, column: 9, scope: !12948)
!12978 = !DILocation(line: 510, column: 36, scope: !12948)
!12979 = !DILocation(line: 510, column: 45, scope: !12948)
!12980 = !DILocation(line: 510, column: 56, scope: !12948)
!12981 = !DILocation(line: 511, column: 8, scope: !12948)
!12982 = !DILocation(line: 510, column: 8, scope: !12948)
!12983 = !DILocation(line: 510, column: 6, scope: !12948)
!12984 = !DILocation(line: 512, column: 6, scope: !12985)
!12985 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 512, column: 6)
!12986 = !DILocation(line: 512, column: 10, scope: !12985)
!12987 = !DILocation(line: 512, column: 6, scope: !12948)
!12988 = !DILocation(line: 513, column: 3, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12985, file: !3, line: 512, column: 22)
!12990 = !DILocation(line: 514, column: 10, scope: !12989)
!12991 = !DILocation(line: 514, column: 3, scope: !12989)
!12992 = !DILocation(line: 517, column: 28, scope: !12948)
!12993 = !DILocation(line: 517, column: 34, scope: !12948)
!12994 = !DILocation(line: 517, column: 8, scope: !12948)
!12995 = !DILocation(line: 517, column: 6, scope: !12948)
!12996 = !DILocation(line: 518, column: 6, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 518, column: 6)
!12998 = !DILocation(line: 518, column: 10, scope: !12997)
!12999 = !DILocation(line: 518, column: 6, scope: !12948)
!13000 = !DILocation(line: 519, column: 3, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 518, column: 22)
!13002 = !DILocation(line: 521, column: 10, scope: !13001)
!13003 = !DILocation(line: 521, column: 3, scope: !13001)
!13004 = !DILocation(line: 524, column: 9, scope: !12948)
!13005 = !DILocation(line: 524, column: 2, scope: !12948)
!13006 = !DILocation(line: 525, column: 1, scope: !12948)
!13007 = distinct !DISubprogram(name: "drm_plane_index", scope: !4537, file: !4537, line: 756, type: !13008, scopeLine: 757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13008 = !DISubroutineType(types: !13009)
!13009 = !{!210, !11378}
!13010 = !DILocalVariable(name: "plane", arg: 1, scope: !13007, file: !4537, line: 756, type: !11378)
!13011 = !DILocation(line: 756, column: 68, scope: !13007)
!13012 = !DILocation(line: 758, column: 9, scope: !13007)
!13013 = !DILocation(line: 758, column: 16, scope: !13007)
!13014 = !DILocation(line: 758, column: 2, scope: !13007)
!13015 = distinct !DISubprogram(name: "drm_atomic_get_old_crtc_state", scope: !4522, file: !4522, line: 505, type: !6828, scopeLine: 507, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13016 = !DILocalVariable(name: "state", arg: 1, scope: !13015, file: !4522, line: 505, type: !4520)
!13017 = !DILocation(line: 505, column: 56, scope: !13015)
!13018 = !DILocalVariable(name: "crtc", arg: 2, scope: !13015, file: !4522, line: 506, type: !4551)
!13019 = !DILocation(line: 506, column: 27, scope: !13015)
!13020 = !DILocation(line: 508, column: 9, scope: !13015)
!13021 = !DILocation(line: 508, column: 16, scope: !13015)
!13022 = !DILocation(line: 508, column: 37, scope: !13015)
!13023 = !DILocation(line: 508, column: 22, scope: !13015)
!13024 = !DILocation(line: 508, column: 44, scope: !13015)
!13025 = !DILocation(line: 508, column: 2, scope: !13015)
!13026 = distinct !DISubprogram(name: "crtc_needs_disable", scope: !3, file: !3, line: 988, type: !13027, scopeLine: 990, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13027 = !DISubroutineType(types: !13028)
!13028 = !{!315, !4807, !4807}
!13029 = !DILocalVariable(name: "old_state", arg: 1, scope: !13026, file: !3, line: 988, type: !4807)
!13030 = !DILocation(line: 988, column: 43, scope: !13026)
!13031 = !DILocalVariable(name: "new_state", arg: 2, scope: !13026, file: !3, line: 989, type: !4807)
!13032 = !DILocation(line: 989, column: 29, scope: !13026)
!13033 = !DILocation(line: 995, column: 7, scope: !13034)
!13034 = distinct !DILexicalBlock(scope: !13026, file: !3, line: 995, column: 6)
!13035 = !DILocation(line: 995, column: 6, scope: !13026)
!13036 = !DILocation(line: 996, column: 45, scope: !13034)
!13037 = !DILocation(line: 996, column: 10, scope: !13034)
!13038 = !DILocation(line: 996, column: 3, scope: !13034)
!13039 = !DILocation(line: 1003, column: 9, scope: !13026)
!13040 = !DILocation(line: 1003, column: 20, scope: !13026)
!13041 = !DILocation(line: 1003, column: 27, scope: !13026)
!13042 = !DILocation(line: 1004, column: 10, scope: !13026)
!13043 = !DILocation(line: 1004, column: 21, scope: !13026)
!13044 = !DILocation(line: 1004, column: 41, scope: !13026)
!13045 = !DILocation(line: 1004, column: 45, scope: !13026)
!13046 = !DILocation(line: 1004, column: 56, scope: !13026)
!13047 = !DILocation(line: 1004, column: 64, scope: !13026)
!13048 = !DILocation(line: 1005, column: 9, scope: !13026)
!13049 = !DILocation(line: 1005, column: 20, scope: !13026)
!13050 = !DILocation(line: 1003, column: 2, scope: !13026)
!13051 = !DILocation(line: 1006, column: 1, scope: !13026)
!13052 = distinct !DISubprogram(name: "drm_atomic_crtc_effectively_active", scope: !4522, file: !4522, line: 993, type: !6841, scopeLine: 994, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13053 = !DILocalVariable(name: "state", arg: 1, scope: !13052, file: !4522, line: 993, type: !5370)
!13054 = !DILocation(line: 993, column: 65, scope: !13052)
!13055 = !DILocation(line: 995, column: 9, scope: !13052)
!13056 = !DILocation(line: 995, column: 16, scope: !13052)
!13057 = !DILocation(line: 995, column: 23, scope: !13052)
!13058 = !DILocation(line: 995, column: 26, scope: !13052)
!13059 = !DILocation(line: 995, column: 33, scope: !13052)
!13060 = !DILocation(line: 995, column: 2, scope: !13052)
!13061 = distinct !DISubprogram(name: "kref_put", scope: !21, file: !21, line: 62, type: !13062, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13062 = !DISubroutineType(types: !13063)
!13063 = !{!18, !4448, !4445}
!13064 = !DILocalVariable(name: "kref", arg: 1, scope: !13061, file: !21, line: 62, type: !4448)
!13065 = !DILocation(line: 62, column: 41, scope: !13061)
!13066 = !DILocalVariable(name: "release", arg: 2, scope: !13061, file: !21, line: 62, type: !4445)
!13067 = !DILocation(line: 62, column: 54, scope: !13061)
!13068 = !DILocation(line: 64, column: 29, scope: !13069)
!13069 = distinct !DILexicalBlock(scope: !13061, file: !21, line: 64, column: 6)
!13070 = !DILocation(line: 64, column: 35, scope: !13069)
!13071 = !DILocation(line: 64, column: 6, scope: !13069)
!13072 = !DILocation(line: 64, column: 6, scope: !13061)
!13073 = !DILocation(line: 65, column: 3, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !13069, file: !21, line: 64, column: 46)
!13075 = !DILocation(line: 65, column: 11, scope: !13074)
!13076 = !DILocation(line: 66, column: 3, scope: !13074)
!13077 = !DILocation(line: 68, column: 2, scope: !13061)
!13078 = !DILocation(line: 69, column: 1, scope: !13061)
!13079 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !25, file: !25, line: 331, type: !13080, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13080 = !DISubroutineType(types: !13081)
!13081 = !{!315, !13082}
!13082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !24, size: 64)
!13083 = !DILocalVariable(name: "r", arg: 1, scope: !13079, file: !25, line: 331, type: !13082)
!13084 = !DILocation(line: 331, column: 67, scope: !13079)
!13085 = !DILocation(line: 333, column: 33, scope: !13079)
!13086 = !DILocation(line: 333, column: 9, scope: !13079)
!13087 = !DILocation(line: 333, column: 2, scope: !13079)
!13088 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !25, file: !25, line: 313, type: !13089, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13089 = !DISubroutineType(types: !13090)
!13090 = !{!315, !13082, !534}
!13091 = !DILocalVariable(name: "r", arg: 1, scope: !13088, file: !25, line: 313, type: !13082)
!13092 = !DILocation(line: 313, column: 69, scope: !13088)
!13093 = !DILocalVariable(name: "oldp", arg: 2, scope: !13088, file: !25, line: 313, type: !534)
!13094 = !DILocation(line: 313, column: 77, scope: !13088)
!13095 = !DILocation(line: 315, column: 36, scope: !13088)
!13096 = !DILocation(line: 315, column: 39, scope: !13088)
!13097 = !DILocation(line: 315, column: 9, scope: !13088)
!13098 = !DILocation(line: 315, column: 2, scope: !13088)
!13099 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !25, file: !25, line: 270, type: !13100, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13100 = !DISubroutineType(types: !13101)
!13101 = !{!315, !18, !13082, !534}
!13102 = !DILocalVariable(name: "i", arg: 1, scope: !13103, file: !13104, line: 188, type: !18)
!13103 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !13104, file: !13104, line: 188, type: !13105, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13104 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!13105 = !DISubroutineType(types: !13106)
!13106 = !{!18, !18, !13107}
!13107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !29, size: 64)
!13108 = !DILocation(line: 188, column: 54, scope: !13103, inlinedAt: !13109)
!13109 = distinct !DILocation(line: 221, column: 9, scope: !13110, inlinedAt: !13112)
!13110 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !13111, file: !13111, line: 218, type: !13105, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13111 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13112 = distinct !DILocation(line: 272, column: 12, scope: !13099)
!13113 = !DILocalVariable(name: "v", arg: 2, scope: !13103, file: !13104, line: 188, type: !13107)
!13114 = !DILocation(line: 188, column: 67, scope: !13103, inlinedAt: !13109)
!13115 = !DILocalVariable(name: "__ret", scope: !13116, file: !13104, line: 190, type: !18)
!13116 = distinct !DILexicalBlock(scope: !13103, file: !13104, line: 190, column: 9)
!13117 = !DILocation(line: 190, column: 9, scope: !13116, inlinedAt: !13109)
!13118 = !DILocalVariable(name: "v", arg: 1, scope: !13119, file: !13120, line: 99, type: !13123)
!13119 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !13120, file: !13120, line: 99, type: !13121, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13120 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!13121 = !DISubroutineType(types: !13122)
!13122 = !{null, !13123, !143}
!13123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13124, size: 64)
!13124 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !13125)
!13125 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!13126 = !DILocation(line: 99, column: 79, scope: !13119, inlinedAt: !13127)
!13127 = distinct !DILocation(line: 220, column: 2, scope: !13110, inlinedAt: !13112)
!13128 = !DILocalVariable(name: "size", arg: 2, scope: !13119, file: !13120, line: 99, type: !143)
!13129 = !DILocation(line: 99, column: 89, scope: !13119, inlinedAt: !13127)
!13130 = !DILocalVariable(name: "i", arg: 1, scope: !13110, file: !13111, line: 218, type: !18)
!13131 = !DILocation(line: 218, column: 30, scope: !13110, inlinedAt: !13112)
!13132 = !DILocalVariable(name: "v", arg: 2, scope: !13110, file: !13111, line: 218, type: !13107)
!13133 = !DILocation(line: 218, column: 43, scope: !13110, inlinedAt: !13112)
!13134 = !DILocalVariable(name: "i", arg: 1, scope: !13099, file: !25, line: 270, type: !18)
!13135 = !DILocation(line: 270, column: 61, scope: !13099)
!13136 = !DILocalVariable(name: "r", arg: 2, scope: !13099, file: !25, line: 270, type: !13082)
!13137 = !DILocation(line: 270, column: 76, scope: !13099)
!13138 = !DILocalVariable(name: "oldp", arg: 3, scope: !13099, file: !25, line: 270, type: !534)
!13139 = !DILocation(line: 270, column: 84, scope: !13099)
!13140 = !DILocalVariable(name: "old", scope: !13099, file: !25, line: 272, type: !18)
!13141 = !DILocation(line: 272, column: 6, scope: !13099)
!13142 = !DILocation(line: 272, column: 37, scope: !13099)
!13143 = !DILocation(line: 272, column: 41, scope: !13099)
!13144 = !DILocation(line: 272, column: 44, scope: !13099)
!13145 = !DILocation(line: 220, column: 31, scope: !13110, inlinedAt: !13112)
!13146 = !DILocation(line: 101, column: 20, scope: !13119, inlinedAt: !13127)
!13147 = !DILocation(line: 101, column: 23, scope: !13119, inlinedAt: !13127)
!13148 = !DILocation(line: 101, column: 2, scope: !13119, inlinedAt: !13127)
!13149 = !DILocation(line: 102, column: 2, scope: !13119, inlinedAt: !13127)
!13150 = !DILocation(line: 221, column: 39, scope: !13110, inlinedAt: !13112)
!13151 = !DILocation(line: 221, column: 42, scope: !13110, inlinedAt: !13112)
!13152 = !{i32 -2146364401}
!13153 = !DILocation(line: 274, column: 6, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13099, file: !25, line: 274, column: 6)
!13155 = !DILocation(line: 274, column: 6, scope: !13099)
!13156 = !DILocation(line: 275, column: 11, scope: !13154)
!13157 = !DILocation(line: 275, column: 4, scope: !13154)
!13158 = !DILocation(line: 275, column: 9, scope: !13154)
!13159 = !DILocation(line: 275, column: 3, scope: !13154)
!13160 = !DILocation(line: 277, column: 6, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13099, file: !25, line: 277, column: 6)
!13162 = !DILocation(line: 277, column: 13, scope: !13161)
!13163 = !DILocation(line: 277, column: 10, scope: !13161)
!13164 = !DILocation(line: 277, column: 6, scope: !13099)
!13165 = !DILocation(line: 278, column: 3, scope: !13166)
!13166 = distinct !DILexicalBlock(scope: !13161, file: !25, line: 277, column: 16)
!13167 = !{i32 -2145430357}
!13168 = !DILocation(line: 279, column: 3, scope: !13166)
!13169 = !DILocation(line: 282, column: 6, scope: !13170)
!13170 = distinct !DILexicalBlock(scope: !13099, file: !25, line: 282, column: 6)
!13171 = !DILocation(line: 282, column: 6, scope: !13099)
!13172 = !DILocation(line: 283, column: 26, scope: !13170)
!13173 = !DILocation(line: 283, column: 3, scope: !13170)
!13174 = !DILocation(line: 285, column: 2, scope: !13099)
!13175 = !DILocation(line: 286, column: 1, scope: !13099)
!13176 = distinct !DISubprogram(name: "kasan_check_write", scope: !13177, file: !13177, line: 38, type: !13178, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13177 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13178 = !DISubroutineType(types: !13179)
!13179 = !{!315, !13123, !210}
!13180 = !DILocalVariable(name: "p", arg: 1, scope: !13176, file: !13177, line: 38, type: !13123)
!13181 = !DILocation(line: 38, column: 59, scope: !13176)
!13182 = !DILocalVariable(name: "size", arg: 2, scope: !13176, file: !13177, line: 38, type: !210)
!13183 = !DILocation(line: 38, column: 75, scope: !13176)
!13184 = !DILocation(line: 40, column: 2, scope: !13176)
!13185 = distinct !DISubprogram(name: "kcsan_check_access", scope: !13186, file: !13186, line: 178, type: !13187, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13186 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!13187 = !DISubroutineType(types: !13188)
!13188 = !{null, !13123, !143, !18}
!13189 = !DILocalVariable(name: "ptr", arg: 1, scope: !13185, file: !13186, line: 178, type: !13123)
!13190 = !DILocation(line: 178, column: 60, scope: !13185)
!13191 = !DILocalVariable(name: "size", arg: 2, scope: !13185, file: !13186, line: 178, type: !143)
!13192 = !DILocation(line: 178, column: 72, scope: !13185)
!13193 = !DILocalVariable(name: "type", arg: 3, scope: !13185, file: !13186, line: 179, type: !18)
!13194 = !DILocation(line: 179, column: 15, scope: !13185)
!13195 = !DILocation(line: 179, column: 23, scope: !13185)
!13196 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !8698, file: !8698, line: 308, type: !8699, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13197 = !DILocalVariable(name: "m", arg: 1, scope: !13196, file: !8698, line: 308, type: !2782)
!13198 = !DILocation(line: 308, column: 66, scope: !13196)
!13199 = !DILocation(line: 310, column: 10, scope: !13196)
!13200 = !DILocation(line: 310, column: 12, scope: !13196)
!13201 = !DILocation(line: 310, column: 34, scope: !13196)
!13202 = !DILocation(line: 310, column: 39, scope: !13196)
!13203 = !DILocation(line: 310, column: 2, scope: !13196)
!13204 = distinct !DISubprogram(name: "kref_get", scope: !21, file: !21, line: 43, type: !4446, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13205 = !DILocalVariable(name: "kref", arg: 1, scope: !13204, file: !21, line: 43, type: !4448)
!13206 = !DILocation(line: 43, column: 42, scope: !13204)
!13207 = !DILocation(line: 45, column: 16, scope: !13204)
!13208 = !DILocation(line: 45, column: 22, scope: !13204)
!13209 = !DILocation(line: 45, column: 2, scope: !13204)
!13210 = !DILocation(line: 46, column: 1, scope: !13204)
!13211 = distinct !DISubprogram(name: "refcount_inc", scope: !25, file: !25, line: 265, type: !13212, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13212 = !DISubroutineType(types: !13213)
!13213 = !{null, !13082}
!13214 = !DILocalVariable(name: "r", arg: 1, scope: !13211, file: !25, line: 265, type: !13082)
!13215 = !DILocation(line: 265, column: 45, scope: !13211)
!13216 = !DILocation(line: 267, column: 17, scope: !13211)
!13217 = !DILocation(line: 267, column: 2, scope: !13211)
!13218 = !DILocation(line: 268, column: 1, scope: !13211)
!13219 = distinct !DISubprogram(name: "__refcount_inc", scope: !25, file: !25, line: 248, type: !13220, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13220 = !DISubroutineType(types: !13221)
!13221 = !{null, !13082, !534}
!13222 = !DILocalVariable(name: "r", arg: 1, scope: !13219, file: !25, line: 248, type: !13082)
!13223 = !DILocation(line: 248, column: 47, scope: !13219)
!13224 = !DILocalVariable(name: "oldp", arg: 2, scope: !13219, file: !25, line: 248, type: !534)
!13225 = !DILocation(line: 248, column: 55, scope: !13219)
!13226 = !DILocation(line: 250, column: 20, scope: !13219)
!13227 = !DILocation(line: 250, column: 23, scope: !13219)
!13228 = !DILocation(line: 250, column: 2, scope: !13219)
!13229 = !DILocation(line: 251, column: 1, scope: !13219)
!13230 = distinct !DISubprogram(name: "__refcount_add", scope: !25, file: !25, line: 191, type: !13231, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13231 = !DISubroutineType(types: !13232)
!13232 = !{null, !18, !13082, !534}
!13233 = !DILocalVariable(name: "i", arg: 1, scope: !13234, file: !13104, line: 182, type: !18)
!13234 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !13104, file: !13104, line: 182, type: !13105, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13235 = !DILocation(line: 182, column: 54, scope: !13234, inlinedAt: !13236)
!13236 = distinct !DILocation(line: 143, column: 9, scope: !13237, inlinedAt: !13238)
!13237 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !13111, file: !13111, line: 140, type: !13105, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13238 = distinct !DILocation(line: 193, column: 12, scope: !13230)
!13239 = !DILocalVariable(name: "v", arg: 2, scope: !13234, file: !13104, line: 182, type: !13107)
!13240 = !DILocation(line: 182, column: 67, scope: !13234, inlinedAt: !13236)
!13241 = !DILocalVariable(name: "__ret", scope: !13242, file: !13104, line: 184, type: !18)
!13242 = distinct !DILexicalBlock(scope: !13234, file: !13104, line: 184, column: 9)
!13243 = !DILocation(line: 184, column: 9, scope: !13242, inlinedAt: !13236)
!13244 = !DILocation(line: 99, column: 79, scope: !13119, inlinedAt: !13245)
!13245 = distinct !DILocation(line: 142, column: 2, scope: !13237, inlinedAt: !13238)
!13246 = !DILocation(line: 99, column: 89, scope: !13119, inlinedAt: !13245)
!13247 = !DILocalVariable(name: "i", arg: 1, scope: !13237, file: !13111, line: 140, type: !18)
!13248 = !DILocation(line: 140, column: 30, scope: !13237, inlinedAt: !13238)
!13249 = !DILocalVariable(name: "v", arg: 2, scope: !13237, file: !13111, line: 140, type: !13107)
!13250 = !DILocation(line: 140, column: 43, scope: !13237, inlinedAt: !13238)
!13251 = !DILocalVariable(name: "i", arg: 1, scope: !13230, file: !25, line: 191, type: !18)
!13252 = !DILocation(line: 191, column: 39, scope: !13230)
!13253 = !DILocalVariable(name: "r", arg: 2, scope: !13230, file: !25, line: 191, type: !13082)
!13254 = !DILocation(line: 191, column: 54, scope: !13230)
!13255 = !DILocalVariable(name: "oldp", arg: 3, scope: !13230, file: !25, line: 191, type: !534)
!13256 = !DILocation(line: 191, column: 62, scope: !13230)
!13257 = !DILocalVariable(name: "old", scope: !13230, file: !25, line: 193, type: !18)
!13258 = !DILocation(line: 193, column: 6, scope: !13230)
!13259 = !DILocation(line: 193, column: 37, scope: !13230)
!13260 = !DILocation(line: 193, column: 41, scope: !13230)
!13261 = !DILocation(line: 193, column: 44, scope: !13230)
!13262 = !DILocation(line: 142, column: 31, scope: !13237, inlinedAt: !13238)
!13263 = !DILocation(line: 101, column: 20, scope: !13119, inlinedAt: !13245)
!13264 = !DILocation(line: 101, column: 23, scope: !13119, inlinedAt: !13245)
!13265 = !DILocation(line: 101, column: 2, scope: !13119, inlinedAt: !13245)
!13266 = !DILocation(line: 102, column: 2, scope: !13119, inlinedAt: !13245)
!13267 = !DILocation(line: 143, column: 39, scope: !13237, inlinedAt: !13238)
!13268 = !DILocation(line: 143, column: 42, scope: !13237, inlinedAt: !13238)
!13269 = !{i32 -2146365753}
!13270 = !DILocation(line: 195, column: 6, scope: !13271)
!13271 = distinct !DILexicalBlock(scope: !13230, file: !25, line: 195, column: 6)
!13272 = !DILocation(line: 195, column: 6, scope: !13230)
!13273 = !DILocation(line: 196, column: 11, scope: !13271)
!13274 = !DILocation(line: 196, column: 4, scope: !13271)
!13275 = !DILocation(line: 196, column: 9, scope: !13271)
!13276 = !DILocation(line: 196, column: 3, scope: !13271)
!13277 = !DILocation(line: 198, column: 6, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13230, file: !25, line: 198, column: 6)
!13279 = !DILocation(line: 198, column: 6, scope: !13230)
!13280 = !DILocation(line: 199, column: 26, scope: !13278)
!13281 = !DILocation(line: 199, column: 3, scope: !13278)
!13282 = !DILocation(line: 200, column: 11, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13278, file: !25, line: 200, column: 11)
!13284 = !DILocation(line: 200, column: 11, scope: !13278)
!13285 = !DILocation(line: 201, column: 26, scope: !13283)
!13286 = !DILocation(line: 201, column: 3, scope: !13283)
!13287 = !DILocation(line: 202, column: 1, scope: !13230)
!13288 = distinct !DISubprogram(name: "ktime_ms_delta", scope: !1172, file: !1172, line: 174, type: !13289, scopeLine: 175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13289 = !DISubroutineType(types: !13290)
!13290 = !{!562, !13291, !13291}
!13291 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1171)
!13292 = !DILocalVariable(name: "later", arg: 1, scope: !13288, file: !1172, line: 174, type: !13291)
!13293 = !DILocation(line: 174, column: 48, scope: !13288)
!13294 = !DILocalVariable(name: "earlier", arg: 2, scope: !13288, file: !1172, line: 174, type: !13291)
!13295 = !DILocation(line: 174, column: 69, scope: !13288)
!13296 = !DILocation(line: 176, column: 21, scope: !13288)
!13297 = !DILocation(line: 176, column: 9, scope: !13288)
!13298 = !DILocation(line: 176, column: 2, scope: !13288)
!13299 = distinct !DISubprogram(name: "ktime_to_ms", scope: !1172, file: !1172, line: 164, type: !13300, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13300 = !DISubroutineType(types: !13301)
!13301 = !{!562, !13291}
!13302 = !DILocalVariable(name: "kt", arg: 1, scope: !13299, file: !1172, line: 164, type: !13291)
!13303 = !DILocation(line: 164, column: 45, scope: !13299)
!13304 = !DILocation(line: 166, column: 21, scope: !13299)
!13305 = !DILocation(line: 166, column: 9, scope: !13299)
!13306 = !DILocation(line: 166, column: 2, scope: !13299)
!13307 = distinct !DISubprogram(name: "ktime_divns", scope: !1172, file: !1172, line: 148, type: !13308, scopeLine: 149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13308 = !DISubroutineType(types: !13309)
!13309 = !{!562, !13291, !562}
!13310 = !DILocalVariable(name: "kt", arg: 1, scope: !13307, file: !1172, line: 148, type: !13291)
!13311 = !DILocation(line: 148, column: 45, scope: !13307)
!13312 = !DILocalVariable(name: "div", arg: 2, scope: !13307, file: !1172, line: 148, type: !562)
!13313 = !DILocation(line: 148, column: 53, scope: !13307)
!13314 = !DILocalVariable(name: "__ret_warn_on", scope: !13315, file: !1172, line: 154, type: !18)
!13315 = distinct !DILexicalBlock(scope: !13307, file: !1172, line: 154, column: 2)
!13316 = !DILocation(line: 154, column: 2, scope: !13315)
!13317 = !DILocation(line: 154, column: 2, scope: !13318)
!13318 = distinct !DILexicalBlock(scope: !13315, file: !1172, line: 154, column: 2)
!13319 = !DILocation(line: 154, column: 2, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13318, file: !1172, line: 154, column: 2)
!13321 = !DILocation(line: 154, column: 2, scope: !13322)
!13322 = distinct !DILexicalBlock(scope: !13320, file: !1172, line: 154, column: 2)
!13323 = !DILocation(line: 154, column: 2, scope: !13324)
!13324 = distinct !DILexicalBlock(scope: !13320, file: !1172, line: 154, column: 2)
!13325 = !{i32 -2145064143, i32 -2145064114, i32 -2145064068, i32 -2145064010, i32 -2145063956, i32 -2145063902, i32 -2145063847, i32 -2145063816}
!13326 = !DILocation(line: 154, column: 2, scope: !13327)
!13327 = distinct !DILexicalBlock(scope: !13320, file: !1172, line: 154, column: 2)
!13328 = !{i32 -2145063413, i32 -2145063406, i32 -2145063354, i32 -2145063323, i32 -2145063293}
!13329 = !DILocation(line: 154, column: 2, scope: !13330)
!13330 = distinct !DILexicalBlock(scope: !13320, file: !1172, line: 154, column: 2)
!13331 = !DILocation(line: 155, column: 9, scope: !13307)
!13332 = !DILocation(line: 155, column: 14, scope: !13307)
!13333 = !DILocation(line: 155, column: 12, scope: !13307)
!13334 = !DILocation(line: 155, column: 2, scope: !13307)
!13335 = distinct !DISubprogram(name: "get_order", scope: !13336, file: !13336, line: 29, type: !13337, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13336 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13337 = !DISubroutineType(types: !13338)
!13338 = !{!18, !146}
!13339 = !DILocalVariable(name: "x", arg: 1, scope: !13340, file: !13341, line: 366, type: !247)
!13340 = distinct !DISubprogram(name: "fls64", scope: !13341, file: !13341, line: 366, type: !13342, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13341 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!13342 = !DISubroutineType(types: !13343)
!13343 = !{!18, !247}
!13344 = !DILocation(line: 366, column: 40, scope: !13340, inlinedAt: !13345)
!13345 = distinct !DILocation(line: 46, column: 9, scope: !13335)
!13346 = !DILocalVariable(name: "bitpos", scope: !13340, file: !13341, line: 368, type: !18)
!13347 = !DILocation(line: 368, column: 6, scope: !13340, inlinedAt: !13345)
!13348 = !DILocalVariable(name: "size", arg: 1, scope: !13335, file: !13336, line: 29, type: !146)
!13349 = !DILocation(line: 29, column: 63, scope: !13335)
!13350 = !DILocation(line: 31, column: 27, scope: !13351)
!13351 = distinct !DILexicalBlock(scope: !13335, file: !13336, line: 31, column: 6)
!13352 = !DILocation(line: 31, column: 6, scope: !13351)
!13353 = !DILocation(line: 31, column: 6, scope: !13335)
!13354 = !DILocation(line: 32, column: 8, scope: !13355)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !13336, line: 32, column: 7)
!13356 = distinct !DILexicalBlock(scope: !13351, file: !13336, line: 31, column: 34)
!13357 = !DILocation(line: 32, column: 7, scope: !13356)
!13358 = !DILocation(line: 33, column: 4, scope: !13355)
!13359 = !DILocation(line: 35, column: 7, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13356, file: !13336, line: 35, column: 7)
!13361 = !DILocation(line: 35, column: 12, scope: !13360)
!13362 = !DILocation(line: 35, column: 7, scope: !13356)
!13363 = !DILocation(line: 36, column: 4, scope: !13360)
!13364 = !DILocation(line: 38, column: 10, scope: !13356)
!13365 = !DILocation(line: 38, column: 28, scope: !13356)
!13366 = !DILocation(line: 38, column: 41, scope: !13356)
!13367 = !DILocation(line: 38, column: 3, scope: !13356)
!13368 = !DILocation(line: 41, column: 6, scope: !13335)
!13369 = !DILocation(line: 42, column: 7, scope: !13335)
!13370 = !DILocation(line: 46, column: 15, scope: !13335)
!13371 = !DILocation(line: 374, column: 2, scope: !13340, inlinedAt: !13345)
!13372 = !DILocation(line: 376, column: 14, scope: !13340, inlinedAt: !13345)
!13373 = !{i32 457140}
!13374 = !DILocation(line: 377, column: 9, scope: !13340, inlinedAt: !13345)
!13375 = !DILocation(line: 377, column: 16, scope: !13340, inlinedAt: !13345)
!13376 = !DILocation(line: 46, column: 2, scope: !13335)
!13377 = !DILocation(line: 48, column: 1, scope: !13335)
!13378 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13379, file: !13379, line: 30, type: !13380, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13379 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13380 = !DISubroutineType(types: !13381)
!13381 = !{!18, !246}
!13382 = !DILocation(line: 366, column: 40, scope: !13340, inlinedAt: !13383)
!13383 = distinct !DILocation(line: 32, column: 9, scope: !13378)
!13384 = !DILocation(line: 368, column: 6, scope: !13340, inlinedAt: !13383)
!13385 = !DILocalVariable(name: "n", arg: 1, scope: !13378, file: !13379, line: 30, type: !246)
!13386 = !DILocation(line: 30, column: 21, scope: !13378)
!13387 = !DILocation(line: 32, column: 15, scope: !13378)
!13388 = !DILocation(line: 374, column: 2, scope: !13340, inlinedAt: !13383)
!13389 = !DILocation(line: 376, column: 14, scope: !13340, inlinedAt: !13383)
!13390 = !DILocation(line: 377, column: 9, scope: !13340, inlinedAt: !13383)
!13391 = !DILocation(line: 377, column: 16, scope: !13340, inlinedAt: !13383)
!13392 = !DILocation(line: 32, column: 18, scope: !13378)
!13393 = !DILocation(line: 32, column: 2, scope: !13378)
!13394 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13395, file: !13395, line: 137, type: !13396, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13395 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13396 = !DISubroutineType(types: !13397)
!13397 = !{!170, !810, !2069, !143, !622}
!13398 = !DILocalVariable(name: "s", arg: 1, scope: !13394, file: !13395, line: 137, type: !810)
!13399 = !DILocation(line: 137, column: 54, scope: !13394)
!13400 = !DILocalVariable(name: "object", arg: 2, scope: !13394, file: !13395, line: 137, type: !2069)
!13401 = !DILocation(line: 137, column: 69, scope: !13394)
!13402 = !DILocalVariable(name: "size", arg: 3, scope: !13394, file: !13395, line: 138, type: !143)
!13403 = !DILocation(line: 138, column: 12, scope: !13394)
!13404 = !DILocalVariable(name: "flags", arg: 4, scope: !13394, file: !13395, line: 138, type: !622)
!13405 = !DILocation(line: 138, column: 24, scope: !13394)
!13406 = !DILocation(line: 140, column: 17, scope: !13394)
!13407 = !DILocation(line: 140, column: 2, scope: !13394)
!13408 = !DILocalVariable(name: "x", arg: 1, scope: !6149, file: !1423, line: 85, type: !1421)
!13409 = !DILocation(line: 85, column: 57, scope: !6149)
!13410 = !DILocation(line: 87, column: 2, scope: !6149)
!13411 = !DILocation(line: 87, column: 5, scope: !6149)
!13412 = !DILocation(line: 87, column: 10, scope: !6149)
!13413 = !DILocation(line: 88, column: 2, scope: !6149)
!13414 = !DILocation(line: 88, column: 2, scope: !13415)
!13415 = distinct !DILexicalBlock(scope: !6149, file: !1423, line: 88, column: 2)
!13416 = !DILocation(line: 89, column: 1, scope: !6149)
!13417 = distinct !DISubprogram(name: "kref_init", scope: !21, file: !21, line: 29, type: !4446, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13418 = !DILocalVariable(name: "kref", arg: 1, scope: !13417, file: !21, line: 29, type: !4448)
!13419 = !DILocation(line: 29, column: 43, scope: !13417)
!13420 = !DILocation(line: 31, column: 16, scope: !13417)
!13421 = !DILocation(line: 31, column: 22, scope: !13417)
!13422 = !DILocation(line: 31, column: 2, scope: !13417)
!13423 = !DILocation(line: 32, column: 1, scope: !13417)
!13424 = distinct !DISubprogram(name: "refcount_set", scope: !25, file: !25, line: 134, type: !13425, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13425 = !DISubroutineType(types: !13426)
!13426 = !{null, !13082, !18}
!13427 = !DILocalVariable(name: "v", arg: 1, scope: !13428, file: !13104, line: 39, type: !13107)
!13428 = distinct !DISubprogram(name: "arch_atomic_set", scope: !13104, file: !13104, line: 39, type: !13429, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13429 = !DISubroutineType(types: !13430)
!13430 = !{null, !13107, !18}
!13431 = !DILocation(line: 39, column: 55, scope: !13428, inlinedAt: !13432)
!13432 = distinct !DILocation(line: 46, column: 2, scope: !13433, inlinedAt: !13434)
!13433 = distinct !DISubprogram(name: "atomic_set", scope: !13111, file: !13111, line: 43, type: !13429, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13434 = distinct !DILocation(line: 136, column: 2, scope: !13424)
!13435 = !DILocalVariable(name: "i", arg: 2, scope: !13428, file: !13104, line: 39, type: !18)
!13436 = !DILocation(line: 39, column: 62, scope: !13428, inlinedAt: !13432)
!13437 = !DILocalVariable(name: "v", arg: 1, scope: !13438, file: !13120, line: 84, type: !13123)
!13438 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !13120, file: !13120, line: 84, type: !13121, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13439 = !DILocation(line: 84, column: 74, scope: !13438, inlinedAt: !13440)
!13440 = distinct !DILocation(line: 45, column: 2, scope: !13433, inlinedAt: !13434)
!13441 = !DILocalVariable(name: "size", arg: 2, scope: !13438, file: !13120, line: 84, type: !143)
!13442 = !DILocation(line: 84, column: 84, scope: !13438, inlinedAt: !13440)
!13443 = !DILocalVariable(name: "v", arg: 1, scope: !13433, file: !13111, line: 43, type: !13107)
!13444 = !DILocation(line: 43, column: 22, scope: !13433, inlinedAt: !13434)
!13445 = !DILocalVariable(name: "i", arg: 2, scope: !13433, file: !13111, line: 43, type: !18)
!13446 = !DILocation(line: 43, column: 29, scope: !13433, inlinedAt: !13434)
!13447 = !DILocalVariable(name: "r", arg: 1, scope: !13424, file: !25, line: 134, type: !13082)
!13448 = !DILocation(line: 134, column: 45, scope: !13424)
!13449 = !DILocalVariable(name: "n", arg: 2, scope: !13424, file: !25, line: 134, type: !18)
!13450 = !DILocation(line: 134, column: 52, scope: !13424)
!13451 = !DILocation(line: 136, column: 14, scope: !13424)
!13452 = !DILocation(line: 136, column: 17, scope: !13424)
!13453 = !DILocation(line: 136, column: 23, scope: !13424)
!13454 = !DILocation(line: 45, column: 26, scope: !13433, inlinedAt: !13434)
!13455 = !DILocation(line: 86, column: 20, scope: !13438, inlinedAt: !13440)
!13456 = !DILocation(line: 86, column: 23, scope: !13438, inlinedAt: !13440)
!13457 = !DILocation(line: 86, column: 2, scope: !13438, inlinedAt: !13440)
!13458 = !DILocation(line: 87, column: 2, scope: !13438, inlinedAt: !13440)
!13459 = !DILocation(line: 46, column: 18, scope: !13433, inlinedAt: !13434)
!13460 = !DILocation(line: 46, column: 21, scope: !13433, inlinedAt: !13434)
!13461 = !DILocation(line: 41, column: 2, scope: !13462, inlinedAt: !13432)
!13462 = distinct !DILexicalBlock(scope: !13428, file: !13104, line: 41, column: 2)
!13463 = !DILocation(line: 137, column: 1, scope: !13424)
!13464 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !11049, file: !11049, line: 646, type: !11050, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13465 = !DILocalVariable(name: "__ret", scope: !13466, file: !11049, line: 648, type: !146)
!13466 = distinct !DILexicalBlock(scope: !13464, file: !11049, line: 648, column: 9)
!13467 = !DILocation(line: 648, column: 9, scope: !13466)
!13468 = !DILocalVariable(name: "__edi", scope: !13466, file: !11049, line: 648, type: !146)
!13469 = !DILocalVariable(name: "__esi", scope: !13466, file: !11049, line: 648, type: !146)
!13470 = !DILocalVariable(name: "__edx", scope: !13466, file: !11049, line: 648, type: !146)
!13471 = !DILocalVariable(name: "__ecx", scope: !13466, file: !11049, line: 648, type: !146)
!13472 = !DILocalVariable(name: "__eax", scope: !13466, file: !11049, line: 648, type: !146)
!13473 = !DILocation(line: 648, column: 9, scope: !13474)
!13474 = distinct !DILexicalBlock(scope: !13475, file: !11049, line: 648, column: 9)
!13475 = distinct !DILexicalBlock(scope: !13466, file: !11049, line: 648, column: 9)
!13476 = !{i32 -2145623735, i32 -2145621420, i32 -2145621186, i32 -2145621135, i32 -2145621107, i32 -2145621082, i32 -2145621398, i32 -2145621385, i32 -2145620947, i32 -2145620828, i32 -2145621293, i32 -2145621266, i32 -2145621238, i32 -2145621208}
!13477 = !DILocalVariable(name: "__mask", scope: !13478, file: !11049, line: 648, type: !146)
!13478 = distinct !DILexicalBlock(scope: !13474, file: !11049, line: 648, column: 9)
!13479 = !DILocation(line: 648, column: 9, scope: !13478)
!13480 = !DILocation(line: 648, column: 9, scope: !13475)
!13481 = !DILocation(line: 648, column: 2, scope: !13464)
!13482 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !11049, file: !11049, line: 656, type: !1820, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13483 = !DILocalVariable(name: "__edi", scope: !13484, file: !11049, line: 658, type: !146)
!13484 = distinct !DILexicalBlock(scope: !13482, file: !11049, line: 658, column: 2)
!13485 = !DILocation(line: 658, column: 2, scope: !13484)
!13486 = !DILocalVariable(name: "__esi", scope: !13484, file: !11049, line: 658, type: !146)
!13487 = !DILocalVariable(name: "__edx", scope: !13484, file: !11049, line: 658, type: !146)
!13488 = !DILocalVariable(name: "__ecx", scope: !13484, file: !11049, line: 658, type: !146)
!13489 = !DILocalVariable(name: "__eax", scope: !13484, file: !11049, line: 658, type: !146)
!13490 = !{i32 -2145616641, i32 -2145615909, i32 -2145615675, i32 -2145615624, i32 -2145615596, i32 -2145615571, i32 -2145615887, i32 -2145615874, i32 -2145615436, i32 -2145615317, i32 -2145615782, i32 -2145615755, i32 -2145615727, i32 -2145615697}
!13491 = !DILocation(line: 659, column: 1, scope: !13482)
!13492 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !11049, file: !11049, line: 651, type: !13493, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13493 = !DISubroutineType(types: !13494)
!13494 = !{null, !146}
!13495 = !DILocalVariable(name: "f", arg: 1, scope: !13492, file: !11049, line: 651, type: !146)
!13496 = !DILocation(line: 651, column: 65, scope: !13492)
!13497 = !DILocalVariable(name: "__edi", scope: !13498, file: !11049, line: 653, type: !146)
!13498 = distinct !DILexicalBlock(scope: !13492, file: !11049, line: 653, column: 2)
!13499 = !DILocation(line: 653, column: 2, scope: !13498)
!13500 = !DILocalVariable(name: "__esi", scope: !13498, file: !11049, line: 653, type: !146)
!13501 = !DILocalVariable(name: "__edx", scope: !13498, file: !11049, line: 653, type: !146)
!13502 = !DILocalVariable(name: "__ecx", scope: !13498, file: !11049, line: 653, type: !146)
!13503 = !DILocalVariable(name: "__eax", scope: !13498, file: !11049, line: 653, type: !146)
!13504 = !{i32 -2145619268, i32 -2145618518, i32 -2145618284, i32 -2145618233, i32 -2145618205, i32 -2145618180, i32 -2145618496, i32 -2145618483, i32 -2145618045, i32 -2145617926, i32 -2145618391, i32 -2145618364, i32 -2145618336, i32 -2145618306}
!13505 = !DILocation(line: 654, column: 1, scope: !13492)
!13506 = distinct !DISubprogram(name: "__list_del_entry", scope: !9989, file: !9989, line: 130, type: !9990, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13507 = !DILocalVariable(name: "entry", arg: 1, scope: !13506, file: !9989, line: 130, type: !15)
!13508 = !DILocation(line: 130, column: 55, scope: !13506)
!13509 = !DILocation(line: 132, column: 30, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13506, file: !9989, line: 132, column: 6)
!13511 = !DILocation(line: 132, column: 7, scope: !13510)
!13512 = !DILocation(line: 132, column: 6, scope: !13506)
!13513 = !DILocation(line: 133, column: 3, scope: !13510)
!13514 = !DILocation(line: 135, column: 13, scope: !13506)
!13515 = !DILocation(line: 135, column: 20, scope: !13506)
!13516 = !DILocation(line: 135, column: 26, scope: !13506)
!13517 = !DILocation(line: 135, column: 33, scope: !13506)
!13518 = !DILocation(line: 135, column: 2, scope: !13506)
!13519 = !DILocation(line: 136, column: 1, scope: !13506)
!13520 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !9989, file: !9989, line: 51, type: !13521, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13521 = !DISubroutineType(types: !13522)
!13522 = !{!315, !15}
!13523 = !DILocalVariable(name: "entry", arg: 1, scope: !13520, file: !9989, line: 51, type: !15)
!13524 = !DILocation(line: 51, column: 61, scope: !13520)
!13525 = !DILocation(line: 53, column: 2, scope: !13520)
!13526 = distinct !DISubprogram(name: "__list_del", scope: !9989, file: !9989, line: 110, type: !11491, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13527 = !DILocalVariable(name: "prev", arg: 1, scope: !13526, file: !9989, line: 110, type: !15)
!13528 = !DILocation(line: 110, column: 50, scope: !13526)
!13529 = !DILocalVariable(name: "next", arg: 2, scope: !13526, file: !9989, line: 110, type: !15)
!13530 = !DILocation(line: 110, column: 75, scope: !13526)
!13531 = !DILocation(line: 112, column: 15, scope: !13526)
!13532 = !DILocation(line: 112, column: 2, scope: !13526)
!13533 = !DILocation(line: 112, column: 8, scope: !13526)
!13534 = !DILocation(line: 112, column: 13, scope: !13526)
!13535 = !DILocation(line: 113, column: 2, scope: !13526)
!13536 = !DILocation(line: 113, column: 2, scope: !13537)
!13537 = distinct !DILexicalBlock(scope: !13526, file: !9989, line: 113, column: 2)
!13538 = !DILocation(line: 113, column: 2, scope: !13539)
!13539 = distinct !DILexicalBlock(scope: !13537, file: !9989, line: 113, column: 2)
!13540 = !DILocation(line: 113, column: 2, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13537, file: !9989, line: 113, column: 2)
!13542 = !DILocation(line: 114, column: 1, scope: !13526)
!13543 = distinct !DISubprogram(name: "__list_add", scope: !9989, file: !9989, line: 63, type: !13544, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13544 = !DISubroutineType(types: !13545)
!13545 = !{null, !15, !15, !15}
!13546 = !DILocalVariable(name: "new", arg: 1, scope: !13543, file: !9989, line: 63, type: !15)
!13547 = !DILocation(line: 63, column: 49, scope: !13543)
!13548 = !DILocalVariable(name: "prev", arg: 2, scope: !13543, file: !9989, line: 64, type: !15)
!13549 = !DILocation(line: 64, column: 28, scope: !13543)
!13550 = !DILocalVariable(name: "next", arg: 3, scope: !13543, file: !9989, line: 65, type: !15)
!13551 = !DILocation(line: 65, column: 28, scope: !13543)
!13552 = !DILocation(line: 67, column: 24, scope: !13553)
!13553 = distinct !DILexicalBlock(scope: !13543, file: !9989, line: 67, column: 6)
!13554 = !DILocation(line: 67, column: 29, scope: !13553)
!13555 = !DILocation(line: 67, column: 35, scope: !13553)
!13556 = !DILocation(line: 67, column: 7, scope: !13553)
!13557 = !DILocation(line: 67, column: 6, scope: !13543)
!13558 = !DILocation(line: 68, column: 3, scope: !13553)
!13559 = !DILocation(line: 70, column: 15, scope: !13543)
!13560 = !DILocation(line: 70, column: 2, scope: !13543)
!13561 = !DILocation(line: 70, column: 8, scope: !13543)
!13562 = !DILocation(line: 70, column: 13, scope: !13543)
!13563 = !DILocation(line: 71, column: 14, scope: !13543)
!13564 = !DILocation(line: 71, column: 2, scope: !13543)
!13565 = !DILocation(line: 71, column: 7, scope: !13543)
!13566 = !DILocation(line: 71, column: 12, scope: !13543)
!13567 = !DILocation(line: 72, column: 14, scope: !13543)
!13568 = !DILocation(line: 72, column: 2, scope: !13543)
!13569 = !DILocation(line: 72, column: 7, scope: !13543)
!13570 = !DILocation(line: 72, column: 12, scope: !13543)
!13571 = !DILocation(line: 73, column: 2, scope: !13543)
!13572 = !DILocation(line: 73, column: 2, scope: !13573)
!13573 = distinct !DILexicalBlock(scope: !13543, file: !9989, line: 73, column: 2)
!13574 = !DILocation(line: 73, column: 2, scope: !13575)
!13575 = distinct !DILexicalBlock(scope: !13573, file: !9989, line: 73, column: 2)
!13576 = !DILocation(line: 73, column: 2, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13573, file: !9989, line: 73, column: 2)
!13578 = !DILocation(line: 74, column: 1, scope: !13543)
!13579 = distinct !DISubprogram(name: "__list_add_valid", scope: !9989, file: !9989, line: 45, type: !13580, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13580 = !DISubroutineType(types: !13581)
!13581 = !{!315, !15, !15, !15}
!13582 = !DILocalVariable(name: "new", arg: 1, scope: !13579, file: !9989, line: 45, type: !15)
!13583 = !DILocation(line: 45, column: 55, scope: !13579)
!13584 = !DILocalVariable(name: "prev", arg: 2, scope: !13579, file: !9989, line: 46, type: !15)
!13585 = !DILocation(line: 46, column: 23, scope: !13579)
!13586 = !DILocalVariable(name: "next", arg: 3, scope: !13579, file: !9989, line: 47, type: !15)
!13587 = !DILocation(line: 47, column: 23, scope: !13579)
!13588 = !DILocation(line: 49, column: 2, scope: !13579)
!13589 = distinct !DISubprogram(name: "drm_core_check_feature", scope: !3928, file: !3928, line: 690, type: !13590, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13590 = !DISubroutineType(types: !13591)
!13591 = !{!315, !13592, !5875}
!13592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13593, size: 64)
!13593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!13594 = !DILocalVariable(name: "dev", arg: 1, scope: !13589, file: !3928, line: 690, type: !13592)
!13595 = !DILocation(line: 690, column: 68, scope: !13589)
!13596 = !DILocalVariable(name: "feature", arg: 2, scope: !13589, file: !3928, line: 691, type: !5875)
!13597 = !DILocation(line: 691, column: 32, scope: !13589)
!13598 = !DILocation(line: 693, column: 37, scope: !13589)
!13599 = !DILocation(line: 693, column: 42, scope: !13589)
!13600 = !DILocation(line: 693, column: 9, scope: !13589)
!13601 = !DILocation(line: 693, column: 2, scope: !13589)
!13602 = distinct !DISubprogram(name: "drm_core_check_all_features", scope: !3928, file: !3928, line: 672, type: !13603, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !5801, retainedNodes: !69)
!13603 = !DISubroutineType(types: !13604)
!13604 = !{!315, !13592, !240}
!13605 = !DILocalVariable(name: "dev", arg: 1, scope: !13602, file: !3928, line: 672, type: !13592)
!13606 = !DILocation(line: 672, column: 73, scope: !13602)
!13607 = !DILocalVariable(name: "features", arg: 2, scope: !13602, file: !3928, line: 673, type: !240)
!13608 = !DILocation(line: 673, column: 17, scope: !13602)
!13609 = !DILocalVariable(name: "supported", scope: !13602, file: !3928, line: 675, type: !240)
!13610 = !DILocation(line: 675, column: 6, scope: !13602)
!13611 = !DILocation(line: 675, column: 18, scope: !13602)
!13612 = !DILocation(line: 675, column: 23, scope: !13602)
!13613 = !DILocation(line: 675, column: 31, scope: !13602)
!13614 = !DILocation(line: 675, column: 49, scope: !13602)
!13615 = !DILocation(line: 675, column: 54, scope: !13602)
!13616 = !DILocation(line: 675, column: 47, scope: !13602)
!13617 = !DILocation(line: 677, column: 9, scope: !13602)
!13618 = !DILocation(line: 677, column: 18, scope: !13602)
!13619 = !DILocation(line: 677, column: 22, scope: !13602)
!13620 = !DILocation(line: 677, column: 34, scope: !13602)
!13621 = !DILocation(line: 677, column: 32, scope: !13602)
!13622 = !DILocation(line: 677, column: 47, scope: !13602)
!13623 = !DILocation(line: 677, column: 44, scope: !13602)
!13624 = !DILocation(line: 0, scope: !13602)
!13625 = !DILocation(line: 677, column: 2, scope: !13602)
