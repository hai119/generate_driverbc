; ModuleID = '../bcout/drivers/gpu/drm/drm_dp_mst_topology.llvm.bc'
source_filename = "drivers/gpu/drm/drm_dp_mst_topology.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

%struct.workqueue_struct = type opaque
%struct.drm_private_state_funcs = type { %struct.drm_private_state* (%struct.drm_private_obj*)*, void (%struct.drm_private_obj*, %struct.drm_private_state*)* }
%struct.drm_private_state = type { %struct.drm_atomic_state* }
%struct.drm_atomic_state = type { %struct.kref, %struct.drm_device*, i8, %struct.__drm_planes_state*, %struct.__drm_crtcs_state*, i32, %struct.__drm_connnectors_state*, i32, %struct.__drm_private_objs_state*, %struct.drm_modeset_acquire_ctx*, %struct.drm_crtc_commit*, %struct.work_struct }
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.drm_device = type { %struct.list_head, i32, %struct.kref, %struct.device*, %struct.anon.61, %struct.drm_driver*, i8*, %struct.drm_minor*, %struct.drm_minor*, i8, %struct.drm_master*, i32, i8, %struct.inode*, i8*, %struct.mutex, %struct.mutex, %struct.atomic_t, %struct.mutex, %struct.list_head, %struct.list_head, %struct.mutex, %struct.list_head, i8, i32, i8, %struct.drm_vblank_crtc*, %struct.spinlock, %struct.spinlock, i32, %struct.list_head, %struct.spinlock, %struct.drm_agp_head*, %struct.pci_dev*, i32, %struct.drm_mode_config, %struct.mutex, %struct.idr, %struct.drm_vma_offset_manager*, %struct.drm_vram_mm*, i32, %struct.drm_fb_helper* }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.60, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.60 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.3, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.3 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.9, %struct.list_head, %struct.list_head, %union.anon.10 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.4, i8* }
%union.anon.4 = type { i64 }
%struct.lockref = type { %union.anon.6 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon, %union.anon.35, %struct.atomic_t, [8 x i8] }
%union.anon = type { %struct.anon.1 }
%struct.anon.1 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.35 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.8, i32 }
%union.anon.8 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.55, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon, [0 x i64] }
%struct.anon = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.0, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.0 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.36 }
%union.anon.36 = type { %struct.anon.37 }
%struct.anon.37 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type { %struct.kref, %struct.idr, %struct.callback_head, i32, %struct.task_struct*, %struct.kmem_cache*, i32, %struct.pid_namespace*, %struct.user_namespace*, %struct.ucounts*, i32, %struct.ns_common }
%struct.kmem_cache = type opaque
%struct.ucounts = type opaque
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.14, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.15, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.16, %union.anon.20, %struct.key_restriction* }
%union.anon.14 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.15 = type { i64 }
%union.anon.16 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.17, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.17 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.20 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.time_namespace*, %struct.time_namespace*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.time_namespace = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.41, %union.anon.42, i32 }
%struct.request_queue = type opaque
%union.anon.41 = type { %struct.list_head }
%union.anon.42 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.43 }
%struct.anon.43 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.47 }
%struct.anon.47 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.54, i32, [12 x i8] }
%union.anon.54 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.55 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.56, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.59 }
%union.anon.56 = type { %struct.anon.57 }
%struct.anon.57 = type { i64, i64 }
%union.anon.59 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%union.anon.9 = type { %struct.list_head }
%union.anon.10 = type { %struct.hlist_node }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.11 }
%union.anon.11 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type opaque
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.12 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.12 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.22 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.22 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.swap_info_struct = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type opaque
%struct.irq_domain_chip_generic = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.anon.61 = type { %struct.list_head, i8*, %struct.spinlock }
%struct.drm_driver = type { i32 (%struct.drm_device*, i64)*, i32 (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_device*)*, void (%struct.drm_device*)*, void (%struct.drm_device*)*, i32 (i32, i8*)*, void (%struct.drm_device*)*, i32 (%struct.drm_device*)*, void (%struct.drm_device*)*, void (%struct.drm_device*, %struct.drm_file*, i1)*, void (%struct.drm_device*, %struct.drm_file*)*, void (%struct.drm_minor*)*, void (%struct.drm_gem_object*)*, i32 (%struct.drm_gem_object*, %struct.drm_file*)*, void (%struct.drm_gem_object*, %struct.drm_file*)*, %struct.drm_gem_object* (%struct.drm_device*, i64)*, i32 (%struct.drm_device*, %struct.drm_file*, i32, i32, i32*)*, i32 (%struct.drm_device*, %struct.drm_file*, i32, i32*)*, %struct.dma_buf* (%struct.drm_gem_object*, i32)*, %struct.drm_gem_object* (%struct.drm_device*, %struct.dma_buf*)*, i32 (%struct.drm_gem_object*)*, void (%struct.drm_gem_object*)*, %struct.sg_table* (%struct.drm_gem_object*)*, %struct.drm_gem_object* (%struct.drm_device*, %struct.dma_buf_attachment*, %struct.sg_table*)*, i8* (%struct.drm_gem_object*)*, void (%struct.drm_gem_object*, i8*)*, i32 (%struct.drm_gem_object*, %struct.vm_area_struct*)*, i32 (%struct.drm_file*, %struct.drm_device*, %struct.drm_mode_create_dumb*)*, i32 (%struct.drm_file*, %struct.drm_device*, i32, i64*)*, i32 (%struct.drm_file*, %struct.drm_device*, i32)*, %struct.vm_operations_struct*, i32, i32, i32, i8*, i8*, i8*, i32, %struct.drm_ioctl_desc*, i32, %struct.file_operations*, %struct.list_head, i32 (%struct.drm_device*)*, void (%struct.drm_device*, %struct.drm_file*)*, i32 (%struct.drm_device*, i8*, %struct.drm_file*)*, i32 (%struct.drm_device*)*, i32 (%struct.drm_device*, i32)*, i32 (%struct.drm_device*, i32)*, i32 (%struct.drm_device*, i32)*, void (%struct.drm_device*, i32)*, i32 }
%struct.drm_file = type opaque
%struct.drm_gem_object = type opaque
%struct.dma_buf = type opaque
%struct.sg_table = type opaque
%struct.dma_buf_attachment = type opaque
%struct.drm_mode_create_dumb = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.drm_ioctl_desc = type opaque
%struct.drm_minor = type opaque
%struct.drm_master = type opaque
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.62, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.63, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.64, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.65, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.62 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.63 = type { %struct.callback_head }
%union.anon.64 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%union.anon.65 = type { %struct.pipe_inode_info* }
%struct.drm_vblank_crtc = type opaque
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.spinlock = type { %union.anon.2 }
%union.anon.2 = type { %struct.raw_spinlock }
%struct.drm_agp_head = type opaque
%struct.pci_dev = type opaque
%struct.drm_mode_config = type { %struct.mutex, %struct.drm_modeset_lock, %struct.drm_modeset_acquire_ctx*, %struct.mutex, %struct.idr, %struct.idr, %struct.mutex, i32, %struct.list_head, %struct.spinlock, i32, %struct.ida, %struct.list_head, %struct.llist_head, %struct.work_struct, i32, %struct.list_head, i32, %struct.list_head, i32, %struct.list_head, %struct.list_head, %struct.list_head, i32, i32, i32, i32, %struct.drm_mode_config_funcs*, i64, i8, i8, i8, %struct.delayed_work, %struct.mutex, %struct.list_head, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, i32, i32, i8, i8, i8, i8, i8, i8, i8, %struct.drm_property*, i32, i32, %struct.drm_atomic_state*, %struct.drm_mode_config_helper_funcs* }
%struct.drm_modeset_lock = type { %struct.ww_mutex, %struct.list_head }
%struct.ww_mutex = type { %struct.mutex, %struct.ww_acquire_ctx* }
%struct.ww_acquire_ctx = type { %struct.task_struct*, i64, i32, i16, i16 }
%struct.ida = type { %struct.xarray }
%struct.llist_head = type { %struct.llist_node* }
%struct.llist_node = type { %struct.llist_node* }
%struct.drm_mode_config_funcs = type { %struct.drm_framebuffer* (%struct.drm_device*, %struct.drm_file*, %struct.drm_mode_fb_cmd2*)*, %struct.drm_format_info* (%struct.drm_mode_fb_cmd2*)*, void (%struct.drm_device*)*, i32 (%struct.drm_device*, %struct.drm_display_mode*)*, i32 (%struct.drm_device*, %struct.drm_atomic_state*)*, i32 (%struct.drm_device*, %struct.drm_atomic_state*, i1)*, %struct.drm_atomic_state* (%struct.drm_device*)*, void (%struct.drm_atomic_state*)*, void (%struct.drm_atomic_state*)* }
%struct.drm_framebuffer = type { %struct.drm_device*, %struct.list_head, %struct.drm_mode_object, [16 x i8], %struct.drm_format_info*, %struct.drm_framebuffer_funcs*, [4 x i32], [4 x i32], i64, i32, i32, i32, i32, i32, %struct.list_head, [4 x %struct.drm_gem_object*] }
%struct.drm_mode_object = type { i32, i32, %struct.drm_object_properties*, %struct.kref, void (%struct.kref*)* }
%struct.drm_object_properties = type { i32, [24 x %struct.drm_property*], [24 x i64] }
%struct.drm_format_info = type opaque
%struct.drm_framebuffer_funcs = type { void (%struct.drm_framebuffer*)*, i32 (%struct.drm_framebuffer*, %struct.drm_file*, i32*)*, i32 (%struct.drm_framebuffer*, %struct.drm_file*, i32, i32, %struct.drm_clip_rect*, i32)* }
%struct.drm_clip_rect = type { i16, i16, i16, i16 }
%struct.drm_mode_fb_cmd2 = type { i32, i32, i32, i32, i32, [4 x i32], [4 x i32], [4 x i32], [4 x i64] }
%struct.drm_display_mode = type { i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, %struct.list_head, [32 x i8], i32, i32 }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.drm_property = type { %struct.list_head, %struct.drm_mode_object, i32, [32 x i8], i32, i64*, %struct.drm_device*, %struct.list_head }
%struct.drm_mode_config_helper_funcs = type { void (%struct.drm_atomic_state*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.drm_vma_offset_manager = type opaque
%struct.drm_vram_mm = type opaque
%struct.drm_fb_helper = type opaque
%struct.__drm_planes_state = type { %struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_plane_state*, %struct.drm_plane_state* }
%struct.drm_plane = type { %struct.drm_device*, %struct.list_head, i8*, %struct.drm_modeset_lock, %struct.drm_mode_object, i32, i32*, i32, i8, i64*, i32, %struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_framebuffer*, %struct.drm_plane_funcs*, %struct.drm_object_properties, i32, i32, %struct.drm_plane_helper_funcs*, %struct.drm_plane_state*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property* }
%struct.drm_crtc = type { %struct.drm_device*, %struct.device_node*, %struct.list_head, i8*, %struct.drm_modeset_lock, %struct.drm_mode_object, %struct.drm_plane*, %struct.drm_plane*, i32, i32, i32, i8, %struct.drm_display_mode, %struct.drm_display_mode, i32, i32, %struct.drm_crtc_funcs*, i32, i16*, %struct.drm_crtc_helper_funcs*, %struct.drm_object_properties, %struct.drm_crtc_state*, %struct.list_head, %struct.spinlock, %struct.drm_crtc_crc, i32, %struct.spinlock, i64, [32 x i8], %struct.drm_self_refresh_data* }
%struct.drm_crtc_funcs = type { void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, %struct.drm_file*, i32, i32, i32)*, i32 (%struct.drm_crtc*, %struct.drm_file*, i32, i32, i32, i32, i32)*, i32 (%struct.drm_crtc*, i32, i32)*, i32 (%struct.drm_crtc*, i16*, i16*, i16*, i32, %struct.drm_modeset_acquire_ctx*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_mode_set*, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_pending_vblank_event*, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_framebuffer*, %struct.drm_pending_vblank_event*, i32, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_crtc*, %struct.drm_property*, i64)*, %struct.drm_crtc_state* (%struct.drm_crtc*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_property*, i64*)*, i32 (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, i8*)*, i32 (%struct.drm_crtc*, i8*, i64*)*, i8** (%struct.drm_crtc*, i64*)*, void (%struct.drm_printer*, %struct.drm_crtc_state*)*, i32 (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i1 (%struct.drm_crtc*, i32*, i64*, i1)* }
%struct.drm_mode_set = type { %struct.drm_framebuffer*, %struct.drm_crtc*, %struct.drm_display_mode*, i32, i32, %struct.drm_connector**, i64 }
%struct.drm_connector = type { %struct.drm_device*, %struct.device*, %struct.device_attribute*, %struct.list_head, %struct.drm_mode_object, i8*, %struct.mutex, i32, i32, i32, i8, i8, i8, i8, i32, %struct.list_head, i32, %struct.list_head, %struct.drm_display_info, %struct.drm_connector_funcs*, %struct.drm_property_blob*, %struct.drm_object_properties, %struct.drm_property*, %struct.drm_property*, %struct.drm_property*, %struct.drm_property_blob*, %struct.drm_property*, i8, i32, %struct.drm_connector_helper_funcs*, %struct.drm_cmdline_mode, i32, i8, i64, i32, %struct.drm_encoder*, [128 x i8], [2 x i8], [2 x i32], [2 x i32], %struct.i2c_adapter*, i32, i32, i8, i8, %struct.dentry*, %struct.drm_connector_state*, %struct.drm_property_blob*, i8, %struct.drm_tile_group*, i8, i8, i8, i8, i8, i16, i16, %struct.llist_node, %struct.hdr_sink_metadata }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.drm_display_info = type { i32, i32, i32, i32, i32, i32, i32*, i32, i32, i32, i8, i8, i8, i8, i8, i8, %struct.drm_hdmi_info, i8, %struct.drm_monitor_range_info }
%struct.drm_hdmi_info = type { %struct.drm_scdc, [4 x i64], [4 x i64], i64, i8 }
%struct.drm_scdc = type { i8, i8, %struct.drm_scrambling }
%struct.drm_scrambling = type { i8, i8 }
%struct.drm_monitor_range_info = type { i8, i8 }
%struct.drm_connector_funcs = type { i32 (%struct.drm_connector*, i32)*, void (%struct.drm_connector*)*, i32 (%struct.drm_connector*, i1)*, void (%struct.drm_connector*)*, i32 (%struct.drm_connector*, i32, i32)*, i32 (%struct.drm_connector*, %struct.drm_property*, i64)*, i32 (%struct.drm_connector*)*, void (%struct.drm_connector*)*, void (%struct.drm_connector*)*, %struct.drm_connector_state* (%struct.drm_connector*)*, void (%struct.drm_connector*, %struct.drm_connector_state*)*, i32 (%struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_property*, i64*)*, void (%struct.drm_printer*, %struct.drm_connector_state*)* }
%struct.drm_printer = type { void (%struct.drm_printer*, %struct.va_format*)*, void (%struct.drm_printer*, i8*)*, i8*, i8* }
%struct.va_format = type { i8*, [1 x %struct.__va_list_tag]* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.drm_connector_helper_funcs = type { i32 (%struct.drm_connector*)*, i32 (%struct.drm_connector*, %struct.drm_modeset_acquire_ctx*, i1)*, i32 (%struct.drm_connector*, %struct.drm_display_mode*)*, i32 (%struct.drm_connector*, %struct.drm_display_mode*, %struct.drm_modeset_acquire_ctx*, i32*)*, %struct.drm_encoder* (%struct.drm_connector*)*, %struct.drm_encoder* (%struct.drm_connector*, %struct.drm_connector_state*)*, i32 (%struct.drm_connector*, %struct.drm_atomic_state*)*, void (%struct.drm_connector*, %struct.drm_connector_state*)*, i32 (%struct.drm_writeback_connector*, %struct.drm_writeback_job*)*, void (%struct.drm_writeback_connector*, %struct.drm_writeback_job*)* }
%struct.drm_writeback_connector = type opaque
%struct.drm_writeback_job = type opaque
%struct.drm_cmdline_mode = type { [32 x i8], i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i32, i32, i32, %struct.drm_connector_tv_margins }
%struct.drm_connector_tv_margins = type { i32, i32, i32, i32 }
%struct.drm_encoder = type { %struct.drm_device*, %struct.list_head, %struct.drm_mode_object, i8*, i32, i32, i32, i32, %struct.drm_crtc*, %struct.list_head, %struct.drm_encoder_funcs*, %struct.drm_encoder_helper_funcs* }
%struct.drm_encoder_funcs = type { void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)*, i32 (%struct.drm_encoder*)*, void (%struct.drm_encoder*)* }
%struct.drm_encoder_helper_funcs = type { void (%struct.drm_encoder*, i32)*, i32 (%struct.drm_encoder*, %struct.drm_display_mode*)*, i1 (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)*, void (%struct.drm_encoder*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, void (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)*, i32 (%struct.drm_encoder*, %struct.drm_connector*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*, %struct.drm_atomic_state*)*, void (%struct.drm_encoder*)*, void (%struct.drm_encoder*)*, i32 (%struct.drm_encoder*, %struct.drm_crtc_state*, %struct.drm_connector_state*)* }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i64, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root_cached, %struct.task_struct* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, %struct.gpio_desc*, %struct.gpio_desc*, %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.gpio_desc = type opaque
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.drm_connector_state = type { %struct.drm_connector*, %struct.drm_crtc*, %struct.drm_encoder*, i32, %struct.drm_atomic_state*, %struct.drm_crtc_commit*, %struct.drm_tv_connector_state, i8, i32, i32, i32, i32, i32, i32, %struct.drm_writeback_job*, i8, i8, %struct.drm_property_blob* }
%struct.drm_tv_connector_state = type { i32, %struct.drm_connector_tv_margins, i32, i32, i32, i32, i32, i32, i32 }
%struct.drm_property_blob = type { %struct.drm_mode_object, %struct.drm_device*, %struct.list_head, %struct.list_head, i64, i8* }
%struct.drm_tile_group = type { %struct.kref, %struct.drm_device*, i32, [8 x i8] }
%struct.hdr_sink_metadata = type { i32, %union.anon.66 }
%union.anon.66 = type { %struct.hdr_static_metadata }
%struct.hdr_static_metadata = type { i8, i8, i16, i16, i16 }
%struct.drm_pending_vblank_event = type opaque
%struct.drm_crtc_helper_funcs = type { void (%struct.drm_crtc*, i32)*, void (%struct.drm_crtc*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, %struct.drm_display_mode*)*, i1 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*)*, i32 (%struct.drm_crtc*, %struct.drm_display_mode*, %struct.drm_display_mode*, i32, i32, %struct.drm_framebuffer*)*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, i32, i32, %struct.drm_framebuffer*)*, {}*, void (%struct.drm_crtc*)*, i32 (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, void (%struct.drm_crtc*, %struct.drm_crtc_state*)*, i1 (%struct.drm_crtc*, i1, i32*, i32*, i64*, i64*, %struct.drm_display_mode*)* }
%struct.drm_crtc_state = type { %struct.drm_crtc*, i8, i8, i8, i32, i32, i32, %struct.drm_display_mode, %struct.drm_display_mode, %struct.drm_property_blob*, %struct.drm_property_blob*, %struct.drm_property_blob*, %struct.drm_property_blob*, i32, i8, i8, i8, %struct.drm_pending_vblank_event*, %struct.drm_crtc_commit*, %struct.drm_atomic_state* }
%struct.drm_crtc_crc = type { %struct.spinlock, i8*, i8, i8, %struct.drm_crtc_crc_entry*, i32, i32, i64, %struct.wait_queue_head }
%struct.drm_crtc_crc_entry = type { i8, i32, [10 x i32] }
%struct.drm_self_refresh_data = type opaque
%struct.drm_plane_funcs = type { i32 (%struct.drm_plane*, %struct.drm_crtc*, %struct.drm_framebuffer*, i32, i32, i32, i32, i32, i32, i32, i32, %struct.drm_modeset_acquire_ctx*)*, i32 (%struct.drm_plane*, %struct.drm_modeset_acquire_ctx*)*, void (%struct.drm_plane*)*, void (%struct.drm_plane*)*, i32 (%struct.drm_plane*, %struct.drm_property*, i64)*, %struct.drm_plane_state* (%struct.drm_plane*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_property*, i64)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*, %struct.drm_property*, i64*)*, i32 (%struct.drm_plane*)*, void (%struct.drm_plane*)*, void (%struct.drm_printer*, %struct.drm_plane_state*)*, i1 (%struct.drm_plane*, i32, i64)* }
%struct.drm_plane_helper_funcs = type { i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)*, i32 (%struct.drm_plane*, %struct.drm_plane_state*)*, void (%struct.drm_plane*, %struct.drm_plane_state*)* }
%struct.drm_plane_state = type { %struct.drm_plane*, %struct.drm_crtc*, %struct.drm_framebuffer*, %struct.dma_fence*, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, %struct.drm_property_blob*, %struct.drm_rect, %struct.drm_rect, i8, %struct.drm_crtc_commit*, %struct.drm_atomic_state* }
%struct.dma_fence = type opaque
%struct.drm_rect = type { i32, i32, i32, i32 }
%struct.__drm_crtcs_state = type { %struct.drm_crtc*, %struct.drm_crtc_state*, %struct.drm_crtc_state*, %struct.drm_crtc_state*, %struct.drm_crtc_commit*, i32*, i64 }
%struct.__drm_connnectors_state = type { %struct.drm_connector*, %struct.drm_connector_state*, %struct.drm_connector_state*, %struct.drm_connector_state*, i32* }
%struct.__drm_private_objs_state = type { %struct.drm_private_obj*, %struct.drm_private_state*, %struct.drm_private_state*, %struct.drm_private_state* }
%struct.drm_modeset_acquire_ctx = type { %struct.ww_acquire_ctx, %struct.drm_modeset_lock*, %struct.list_head, i8, i8 }
%struct.drm_crtc_commit = type { %struct.drm_crtc*, %struct.kref, %struct.completion, %struct.completion, %struct.completion, %struct.list_head, %struct.drm_pending_vblank_event*, i8 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%struct.drm_private_obj = type { %struct.list_head, %struct.drm_modeset_lock, %struct.drm_private_state*, %struct.drm_private_state_funcs* }
%struct.drm_dp_sideband_msg_req_body = type { i8, %union.ack_req }
%union.ack_req = type { %struct.drm_dp_remote_i2c_read }
%struct.drm_dp_remote_i2c_read = type { i8, i8, [4 x %struct.drm_dp_remote_i2c_read_tx], i8, i8 }
%struct.drm_dp_remote_i2c_read_tx = type { i8, i8, i8*, i8, i8 }
%struct.drm_dp_sideband_msg_tx = type { [256 x i8], [48 x i8], i8, i8, %struct.drm_dp_mst_branch*, %struct.list_head, i32, i32, i8, %struct.drm_dp_sideband_msg_reply_body }
%struct.drm_dp_mst_branch = type { %struct.kref, %struct.kref, %struct.list_head, [8 x i8], i8, i32, %struct.list_head, %struct.drm_dp_mst_port*, %struct.drm_dp_mst_topology_mgr*, i8, [16 x i8] }
%struct.drm_dp_mst_port = type { %struct.kref, %struct.kref, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, %struct.list_head, %struct.drm_dp_mst_branch*, %struct.drm_dp_aux, %struct.drm_dp_mst_branch*, %struct.drm_dp_vcpi, %struct.drm_connector*, %struct.drm_dp_mst_topology_mgr*, %struct.edid*, i8, i8 }
%struct.drm_dp_aux = type { i8*, %struct.i2c_adapter, %struct.device*, %struct.drm_crtc*, %struct.mutex, %struct.work_struct, i8, i64 (%struct.drm_dp_aux*, %struct.drm_dp_aux_msg*)*, i32, i32, %struct.drm_dp_aux_cec, i8 }
%struct.drm_dp_aux_msg = type { i32, i8, i8, i8*, i64 }
%struct.drm_dp_aux_cec = type { %struct.mutex, %struct.cec_adapter*, %struct.drm_connector*, %struct.delayed_work }
%struct.cec_adapter = type opaque
%struct.drm_dp_vcpi = type { i32, i32, i32, i32 }
%struct.edid = type { [8 x i8], [2 x i8], [2 x i8], i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.est_timings, [8 x %struct.std_timing], [4 x %struct.detailed_timing], i8, i8 }
%struct.est_timings = type { i8, i8, i8 }
%struct.std_timing = type { i8, i8 }
%struct.detailed_timing = type { i16, %union.anon.67 }
%union.anon.67 = type { %struct.detailed_pixel_timing }
%struct.detailed_pixel_timing = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.drm_dp_mst_topology_mgr = type { %struct.drm_private_obj, %struct.drm_device*, %struct.drm_dp_mst_topology_cbs*, i32, %struct.drm_dp_aux*, i32, i32, %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx, %struct.mutex, %struct.mutex, i8, %struct.drm_dp_mst_branch*, [15 x i8], i8, i32, %struct.drm_private_state_funcs*, %struct.mutex, %struct.list_head, %struct.mutex, %struct.drm_dp_vcpi**, %struct.drm_dp_payload*, i64, i64, %struct.wait_queue_head, %struct.work_struct, %struct.work_struct, %struct.list_head, %struct.list_head, %struct.mutex, %struct.workqueue_struct*, %struct.work_struct, %struct.list_head, %struct.mutex, %struct.work_struct }
%struct.drm_dp_mst_topology_cbs = type { %struct.drm_connector* (%struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_port*, i8*)*, void (%struct.drm_dp_mst_topology_mgr*)* }
%struct.drm_dp_sideband_msg_rx = type { [48 x i8], [256 x i8], i8, i8, i8, i8, i8, i8, %struct.drm_dp_sideband_msg_hdr }
%struct.drm_dp_sideband_msg_hdr = type { i8, i8, [8 x i8], i8, i8, i8, i8, i8, i8 }
%struct.drm_dp_payload = type { i32, i32, i32, i32 }
%struct.drm_dp_sideband_msg_reply_body = type { i8, i8, %union.ack_replies }
%union.ack_replies = type { %struct.drm_dp_enum_path_resources_ack_reply, [412 x i8] }
%struct.drm_dp_enum_path_resources_ack_reply = type { i8, i8, i16, i16 }
%struct.drm_dp_query_stream_enc_status = type { i8, [7 x i8], i8, i8, i8, i8 }
%struct.drm_dp_port_number_req = type { i8 }
%struct.drm_dp_allocate_payload = type { i8, i8, i8, i16, [16 x i8] }
%struct.drm_dp_query_payload = type { i8, i8 }
%struct.drm_dp_remote_dpcd_read = type { i8, i32, i8 }
%struct.drm_dp_remote_dpcd_write = type { i8, i32, i8, i8* }
%struct.drm_dp_remote_i2c_write = type { i8, i8, i8, i8* }
%struct.drm_dp_remote_dpcd_read_ack_reply = type { i8, i8, [255 x i8] }
%struct.wait_queue_entry = type { i32, i8*, i32 (%struct.wait_queue_entry*, i32, i32, i8*)*, %struct.list_head }
%struct.drm_dp_query_stream_enc_status_ack_reply = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.drm_dp_nak_reply = type { [16 x i8], i8, i8 }
%struct.drm_dp_pending_up_req = type { %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_req_body, %struct.list_head }
%struct.drm_dp_connection_status_notify = type { [16 x i8], i8, i8, i8, i8, i8, i8 }
%struct.drm_dp_resource_status_notify = type { i8, [16 x i8], i16 }
%struct.drm_dp_mst_topology_state = type { %struct.drm_private_state, %struct.list_head, %struct.drm_dp_mst_topology_mgr* }
%struct.drm_dp_vcpi_allocation = type { %struct.drm_dp_mst_port*, i32, i32, i8, %struct.list_head }
%struct.drm_dp_desc = type { %struct.drm_dp_dpcd_ident, i32 }
%struct.drm_dp_dpcd_ident = type { [3 x i8], [6 x i8], i8, i8, i8 }
%struct.drm_dp_link_address_ack_reply = type { [16 x i8], i8, [16 x %struct.drm_dp_link_addr_reply_port] }
%struct.drm_dp_link_addr_reply_port = type { i8, i8, i8, i8, i8, i8, i8, [16 x i8], i8, i8 }
%struct.drm_dp_query_payload_ack_reply = type { i8, i16 }
%struct.drm_dp_remote_dpcd_write_ack_reply = type { i8 }
%struct.drm_dp_remote_i2c_read_ack_reply = type { i8, i8, [255 x i8] }
%struct.drm_dp_allocate_payload_ack_reply = type { i8, i8, i16 }
%struct.drm_dp_port_number_rep = type { i8 }

@.str = private unnamed_addr constant [38 x i8] c"drivers/gpu/drm/drm_dp_mst_topology.c\00", align 1
@.str.1 = private unnamed_addr constant [13 x i8] c"%.*stype=%s\0A\00", align 1
@.str.2 = private unnamed_addr constant [7 x i8] c"\09\09\09\09\09X\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"%.*stype=%s contents:\0A\00", align 1
@.str.4 = private unnamed_addr constant [13 x i8] c"%.*sport=%d\0A\00", align 1
@.str.5 = private unnamed_addr constant [48 x i8] c"%.*sport=%d vcpi=%d pbn=%d sdp_streams=%d %*ph\0A\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"%.*sport=%d vcpi=%d\0A\00", align 1
@.str.7 = private unnamed_addr constant [35 x i8] c"%.*sport=%d dpcd_addr=%05x len=%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [36 x i8] c"%.*sport=%d addr=%05x len=%d: %*ph\0A\00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c"%.*sport=%d num_tx=%d id=%d size=%d:\0A\00", align 1
@.str.10 = private unnamed_addr constant [62 x i8] c"%.*s%d: id=%03d size=%03d no_stop_bit=%d tx_delay=%03d: %*ph\0A\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"%.*sport=%d id=%d size=%d: %*ph\0A\00", align 1
@.str.12 = private unnamed_addr constant [100 x i8] c"%.*sstream_id=%u client_id=%*ph stream_event=%x valid_event=%d stream_behavior=%x valid_behavior=%d\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"%.*s???\0A\00", align 1
@.str.14 = private unnamed_addr constant [14 x i8] c"port %p (%d)\0A\00", align 1
@.str.15 = private unnamed_addr constant [34 x i8] c"registering %s remote bus for %s\0A\00", align 1
@.str.16 = private unnamed_addr constant [36 x i8] c"unregistering %s remote bus for %s\0A\00", align 1
@.str.17 = private unnamed_addr constant [38 x i8] c"query encryption status nak received\0A\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"removing payload %d\0A\00", align 1
@.str.19 = private unnamed_addr constant [15 x i8] c"payload %d %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [21 x i8] c"failed to read DPCD\0A\00", align 1
@system_long_wq = external dso_local global %struct.workqueue_struct*, align 8
@.str.21 = private unnamed_addr constant [45 x i8] c"dpcd read failed - undocked during suspend?\0A\00", align 1
@.str.22 = private unnamed_addr constant [45 x i8] c"mst write failed - undocked during suspend?\0A\00", align 1
@.str.23 = private unnamed_addr constant [46 x i8] c"check mstb failed - undocked during suspend?\0A\00", align 1
@.str.24 = private unnamed_addr constant [62 x i8] c"Waiting for link probe work to finish re-syncing topology...\0A\00", align 1
@.str.25 = private unnamed_addr constant [69 x i8] c"cannot allocate and release VCPI on [MST PORT:%p] in the same state\0A\00", align 1
@.str.26 = private unnamed_addr constant [47 x i8] c"[CONNECTOR:%d:%s] [MST PORT:%p] VCPI %d -> %d\0A\00", align 1
@.str.27 = private unnamed_addr constant [46 x i8] c"[CONNECTOR:%d:%s] [MST PORT:%p] PBN %d -> %d\0A\00", align 1
@.str.28 = private unnamed_addr constant [49 x i8] c"no VCPI for [MST PORT:%p] found in mst state %p\0A\00", align 1
@.str.29 = private unnamed_addr constant [28 x i8] c"[MST PORT:%p] VCPI %d -> 0\0A\00", align 1
@.str.30 = private unnamed_addr constant [66 x i8] c"payload: vcpi %d already allocated for pbn %d - requested pbn %d\0A\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"failed to init vcpi slots=%d max=63 ret=%d\0A\00", align 1
@.str.32 = private unnamed_addr constant [34 x i8] c"initing vcpi for pbn=%d slots=%d\0A\00", align 1
@.str.33 = private unnamed_addr constant [49 x i8] c"Failed to get ACT after %dms, last status: %02x\0A\00", align 1
@.str.34 = private unnamed_addr constant [41 x i8] c"Failed to read payload table status: %d\0A\00", align 1
@.str.35 = private unnamed_addr constant [18 x i8] c"vcpi: %lx %lx %d\0A\00", align 1
@.str.36 = private unnamed_addr constant [33 x i8] c"vcpi %d: %d %d %d sink name: %s\0A\00", align 1
@.str.37 = private unnamed_addr constant [8 x i8] c"Unknown\00", align 1
@.str.38 = private unnamed_addr constant [16 x i8] c"vcpi %d:unused\0A\00", align 1
@.str.39 = private unnamed_addr constant [24 x i8] c"payload %d: %d, %d, %d\0A\00", align 1
@.str.40 = private unnamed_addr constant [18 x i8] c"dpcd read failed\0A\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"dpcd: %*ph\0A\00", align 1
@.str.42 = private unnamed_addr constant [22 x i8] c"faux/mst read failed\0A\00", align 1
@.str.43 = private unnamed_addr constant [16 x i8] c"faux/mst: %*ph\0A\00", align 1
@.str.44 = private unnamed_addr constant [22 x i8] c"mst ctrl read failed\0A\00", align 1
@.str.45 = private unnamed_addr constant [16 x i8] c"mst ctrl: %*ph\0A\00", align 1
@.str.46 = private unnamed_addr constant [24 x i8] c"branch oui read failed\0A\00", align 1
@.str.47 = private unnamed_addr constant [26 x i8] c"branch oui: %*phN devid: \00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"%c\00", align 1
@.str.49 = private unnamed_addr constant [32 x i8] c" revision: hw: %x.%x sw: %x.%x\0A\00", align 1
@.str.50 = private unnamed_addr constant [21 x i8] c"payload table: %*ph\0A\00", align 1
@.str.51 = private unnamed_addr constant [51 x i8] c"[MST MGR:%p] Setting mode_changed flag on CRTC %p\0A\00", align 1
@.str.52 = private unnamed_addr constant [61 x i8] c"[MST PORT:%p] Couldn't find VCPI allocation in mst state %p\0A\00", align 1
@.str.53 = private unnamed_addr constant [70 x i8] c"[MST PORT:%p] DSC flag is already set to %d, returning %d VCPI slots\0A\00", align 1
@.str.54 = private unnamed_addr constant [73 x i8] c"[MST PORT:%p] Enabling DSC flag, reallocating %d VCPI slots on the port\0A\00", align 1
@drm_dp_mst_topology_state_funcs = dso_local constant %struct.drm_private_state_funcs { %struct.drm_private_state* (%struct.drm_private_obj*)* @drm_dp_mst_duplicate_state, void (%struct.drm_private_obj*, %struct.drm_private_state*)* @drm_dp_mst_destroy_state }, align 8, !dbg !0
@drm_dp_mst_topology_mgr_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6218
@.str.55 = private unnamed_addr constant [11 x i8] c"&mgr->lock\00", align 1
@drm_dp_mst_topology_mgr_init.__key.56 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6223
@.str.57 = private unnamed_addr constant [12 x i8] c"&mgr->qlock\00", align 1
@drm_dp_mst_topology_mgr_init.__key.58 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6225
@.str.59 = private unnamed_addr constant [19 x i8] c"&mgr->payload_lock\00", align 1
@drm_dp_mst_topology_mgr_init.__key.60 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6227
@.str.61 = private unnamed_addr constant [27 x i8] c"&mgr->delayed_destroy_lock\00", align 1
@drm_dp_mst_topology_mgr_init.__key.62 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6229
@.str.63 = private unnamed_addr constant [18 x i8] c"&mgr->up_req_lock\00", align 1
@drm_dp_mst_topology_mgr_init.__key.64 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6231
@.str.65 = private unnamed_addr constant [17 x i8] c"&mgr->probe_lock\00", align 1
@.str.66 = private unnamed_addr constant [14 x i8] c"drm_dp_mst_wq\00", align 1
@drm_dp_mst_topology_mgr_init.__key.67 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !6233
@.str.68 = private unnamed_addr constant [15 x i8] c"&mgr->tx_waitq\00", align 1
@drm_dp_mst_req_type_str.req_type_str = internal constant [57 x i8*] [i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.70, i32 0, i32 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.71, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.73, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.74, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.75, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.76, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.78, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.80, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.81, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.82, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.83, i32 0, i32 0), i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.84, i32 0, i32 0)], align 16, !dbg !6235
@.str.69 = private unnamed_addr constant [28 x i8] c"GET_MSG_TRANSACTION_VERSION\00", align 1
@.str.70 = private unnamed_addr constant [13 x i8] c"LINK_ADDRESS\00", align 1
@.str.71 = private unnamed_addr constant [25 x i8] c"CONNECTION_STATUS_NOTIFY\00", align 1
@.str.72 = private unnamed_addr constant [20 x i8] c"ENUM_PATH_RESOURCES\00", align 1
@.str.73 = private unnamed_addr constant [17 x i8] c"ALLOCATE_PAYLOAD\00", align 1
@.str.74 = private unnamed_addr constant [14 x i8] c"QUERY_PAYLOAD\00", align 1
@.str.75 = private unnamed_addr constant [23 x i8] c"RESOURCE_STATUS_NOTIFY\00", align 1
@.str.76 = private unnamed_addr constant [23 x i8] c"CLEAR_PAYLOAD_ID_TABLE\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"REMOTE_DPCD_READ\00", align 1
@.str.78 = private unnamed_addr constant [18 x i8] c"REMOTE_DPCD_WRITE\00", align 1
@.str.79 = private unnamed_addr constant [16 x i8] c"REMOTE_I2C_READ\00", align 1
@.str.80 = private unnamed_addr constant [17 x i8] c"REMOTE_I2C_WRITE\00", align 1
@.str.81 = private unnamed_addr constant [13 x i8] c"POWER_UP_PHY\00", align 1
@.str.82 = private unnamed_addr constant [15 x i8] c"POWER_DOWN_PHY\00", align 1
@.str.83 = private unnamed_addr constant [18 x i8] c"SINK_EVENT_NOTIFY\00", align 1
@.str.84 = private unnamed_addr constant [24 x i8] c"QUERY_STREAM_ENC_STATUS\00", align 1
@.str.85 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@.str.86 = private unnamed_addr constant [14 x i8] c"mstb %p (%d)\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.87 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"[dp_mst]\00", align 1
@__drm_debug = external dso_local global i32, align 4
@.str.89 = private unnamed_addr constant [69 x i8] c"txmsg cur_offset=%x cur_len=%x seqno=%x state=%s path_msg=%d dst=%s\0A\00", align 1
@.str.90 = private unnamed_addr constant [37 x i8] c"<failed to decode sideband req: %d>\0A\00", align 1
@.str.91 = private unnamed_addr constant [6 x i8] c"%*phC\00", align 1
@drm_dp_mst_sideband_tx_state_str.sideband_reason_str = internal constant [5 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.93, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.94, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.95, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.96, i32 0, i32 0)], align 16, !dbg !6243
@.str.92 = private unnamed_addr constant [7 x i8] c"QUEUED\00", align 1
@.str.93 = private unnamed_addr constant [11 x i8] c"START_SEND\00", align 1
@.str.94 = private unnamed_addr constant [5 x i8] c"SENT\00", align 1
@.str.95 = private unnamed_addr constant [3 x i8] c"RX\00", align 1
@.str.96 = private unnamed_addr constant [8 x i8] c"TIMEOUT\00", align 1
@.str.97 = private unnamed_addr constant [28 x i8] c"failed to send msg in q %d\0A\00", align 1
@.str.98 = private unnamed_addr constant [29 x i8] c"sideband msg failed to send\0A\00", align 1
@.str.99 = private unnamed_addr constant [28 x i8] c"failed to dpcd write %d %d\0A\00", align 1
@jiffies = external dso_local global i64, align 8
@.str.100 = private unnamed_addr constant [28 x i8] c"timedout msg send %p %d %d\0A\00", align 1
@.str.101 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.102 = private unnamed_addr constant [60 x i8] c"mstb %p port %d: DPCD read on addr 0x%x for %d bytes NAKed\0A\00", align 1
@.str.103 = private unnamed_addr constant [53 x i8] c"invalid link bandwidth in DPCD: %x (link count: %d)\0A\00", align 1
@.str.104 = private unnamed_addr constant [46 x i8] c"Got MST reply with no msg %p %d %d %02x %02x\0A\00", align 1
@.str.105 = private unnamed_addr constant [69 x i8] c"Got NAK reply: req 0x%02x (%s), reason 0x%02x (%s), nak data 0x%02x\0A\00", align 1
@.str.106 = private unnamed_addr constant [36 x i8] c"failed to read DPCD down rep %d %d\0A\00", align 1
@.str.107 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.108 = private unnamed_addr constant [11 x i8] c"failed hdr\00", align 1
@.str.109 = private unnamed_addr constant [22 x i8] c"ERROR: failed header\0A\00", align 1
@.str.110 = private unnamed_addr constant [38 x i8] c"Got MST reply from unknown device %d\0A\00", align 1
@.str.111 = private unnamed_addr constant [35 x i8] c"sideband msg set header failed %d\0A\00", align 1
@.str.112 = private unnamed_addr constant [30 x i8] c"sideband msg build failed %d\0A\00", align 1
@.str.113 = private unnamed_addr constant [41 x i8] c"failed to read a chunk (len %d, ret %d)\0A\00", align 1
@.str.114 = private unnamed_addr constant [30 x i8] c"failed to build sideband msg\0A\00", align 1
@.str.115 = private unnamed_addr constant [25 x i8] c"crc4 mismatch 0x%x 0x%x\0A\00", align 1
@.str.116 = private unnamed_addr constant [45 x i8] c"failed to lookup MSTB with lct %d, rad %02x\0A\00", align 1
@.str.117 = private unnamed_addr constant [10 x i8] c"wrong crc\00", align 1
@.str.118 = private unnamed_addr constant [31 x i8] c"Got unknown reply 0x%02x (%s)\0A\00", align 1
@.str.119 = private unnamed_addr constant [44 x i8] c"link address reply parse length fail %d %d\0A\00", align 1
@.str.120 = private unnamed_addr constant [39 x i8] c"query payload parse length fail %d %d\0A\00", align 1
@.str.121 = private unnamed_addr constant [25 x i8] c"parse length fail %d %d\0A\00", align 1
@.str.122 = private unnamed_addr constant [42 x i8] c"remote i2c reply parse length fail %d %d\0A\00", align 1
@.str.123 = private unnamed_addr constant [39 x i8] c"enum resource parse length fail %d %d\0A\00", align 1
@.str.124 = private unnamed_addr constant [42 x i8] c"allocate payload parse length fail %d %d\0A\00", align 1
@.str.125 = private unnamed_addr constant [43 x i8] c"power up/down phy parse length fail %d %d\0A\00", align 1
@drm_dp_mst_nak_reason_str.nak_reason_str = internal constant [11 x i8*] [i8* null, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.126, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.127, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.128, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.129, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.130, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.131, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.132, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.133, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.134, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.135, i32 0, i32 0)], align 16, !dbg !6251
@.str.126 = private unnamed_addr constant [14 x i8] c"WRITE_FAILURE\00", align 1
@.str.127 = private unnamed_addr constant [13 x i8] c"INVALID_READ\00", align 1
@.str.128 = private unnamed_addr constant [12 x i8] c"CRC_FAILURE\00", align 1
@.str.129 = private unnamed_addr constant [10 x i8] c"BAD_PARAM\00", align 1
@.str.130 = private unnamed_addr constant [6 x i8] c"DEFER\00", align 1
@.str.131 = private unnamed_addr constant [13 x i8] c"LINK_FAILURE\00", align 1
@.str.132 = private unnamed_addr constant [13 x i8] c"NO_RESOURCES\00", align 1
@.str.133 = private unnamed_addr constant [10 x i8] c"DPCD_FAIL\00", align 1
@.str.134 = private unnamed_addr constant [8 x i8] c"I2C_NAK\00", align 1
@.str.135 = private unnamed_addr constant [14 x i8] c"ALLOCATE_FAIL\00", align 1
@.str.136 = private unnamed_addr constant [41 x i8] c"Not enough memory to process MST up req\0A\00", align 1
@.str.137 = private unnamed_addr constant [44 x i8] c"Received unknown up req type, ignoring: %x\0A\00", align 1
@.str.138 = private unnamed_addr constant [57 x i8] c"Got CSN: pn: %d ldps:%d ddps: %d mcs: %d ip: %d pdt: %d\0A\00", align 1
@.str.139 = private unnamed_addr constant [30 x i8] c"Got RSN: pn: %d avail_pbn %d\0A\00", align 1
@.str.140 = private unnamed_addr constant [33 x i8] c"Got unknown request 0x%02x (%s)\0A\00", align 1
@.str.141 = private unnamed_addr constant [49 x i8] c"connection status reply parse length fail %d %d\0A\00", align 1
@.str.142 = private unnamed_addr constant [47 x i8] c"resource status reply parse length fail %d %d\0A\00", align 1
@.str.143 = private unnamed_addr constant [23 x i8] c"out of payload ids %d\0A\00", align 1
@.str.144 = private unnamed_addr constant [20 x i8] c"out of vcpi ids %d\0A\00", align 1
@.str.145 = private unnamed_addr constant [20 x i8] c"putting payload %d\0A\00", align 1
@.str.146 = private unnamed_addr constant [39 x i8] c"failed to write payload allocation %d\0A\00", align 1
@.str.147 = private unnamed_addr constant [40 x i8] c"failed to read payload table status %d\0A\00", align 1
@.str.148 = private unnamed_addr constant [51 x i8] c"status not set after read payload table status %d\0A\00", align 1
@.str.149 = private unnamed_addr constant [15 x i8] c"%smst: %p, %d\0A\00", align 1
@.str.150 = private unnamed_addr constant [77 x i8] c"%sport: %d: input: %d: pdt: %d, ddps: %d ldps: %d, sdp: %d/%d, %p, conn: %p\0A\00", align 1
@.str.151 = private unnamed_addr constant [39 x i8] c"[MST PORT:%p] releases all VCPI slots\0A\00", align 1
@.str.152 = private unnamed_addr constant [38 x i8] c"[MST PORT:%p] requires %d vcpi slots\0A\00", align 1
@.str.153 = private unnamed_addr constant [64 x i8] c"[MST PORT:%p] not enough VCPI slots in mst state %p (avail=%d)\0A\00", align 1
@.str.154 = private unnamed_addr constant [54 x i8] c"[MST MGR:%p] state %p has too many payloads (max=%d)\0A\00", align 1
@.str.155 = private unnamed_addr constant [49 x i8] c"[MST MGR:%p] mst state %p VCPI avail=%d used=%d\0A\00", align 1
@.str.156 = private unnamed_addr constant [64 x i8] c"[MSTB:%p] [MST PORT:%p] Checking bandwidth limits on [MSTB:%p]\0A\00", align 1
@.str.157 = private unnamed_addr constant [37 x i8] c"[MSTB:%p] Checking bandwidth limits\0A\00", align 1
@.str.158 = private unnamed_addr constant [69 x i8] c"[MSTB:%p] [MST PORT:%p] required PBN of %d exceeds port limit of %d\0A\00", align 1
@.str.159 = private unnamed_addr constant [47 x i8] c"[MSTB:%p] [MST PORT:%p] uses %d out of %d PBN\0A\00", align 1
@.str.160 = private unnamed_addr constant [27 x i8] c"Clearing payload ID table\0A\00", align 1
@.str.161 = private unnamed_addr constant [37 x i8] c"clear payload table id nak received\0A\00", align 1
@.str.162 = private unnamed_addr constant [37 x i8] c"Sending link address failed with %d\0A\00", align 1
@.str.163 = private unnamed_addr constant [27 x i8] c"link address NAK received\0A\00", align 1
@.str.164 = private unnamed_addr constant [24 x i8] c"link address reply: %d\0A\00", align 1
@.str.165 = private unnamed_addr constant [29 x i8] c"GUID check on %s failed: %d\0A\00", align 1
@.str.166 = private unnamed_addr constant [43 x i8] c"port %d was not in link address, removing\0A\00", align 1
@.str.167 = private unnamed_addr constant [91 x i8] c"port %d: input %d, pdt: %d, pn: %d, dpcd_rev: %02x, mcs: %d, ddps: %d, ldps %d, sdp %d/%d\0A\00", align 1
@.str.168 = private unnamed_addr constant [37 x i8] c"Failed to change PDT on port %p: %d\0A\00", align 1
@.str.169 = private unnamed_addr constant [6 x i8] c"DPMST\00", align 1
@.str.170 = private unnamed_addr constant [34 x i8] c"enum path resources nak received\0A\00", align 1
@.str.171 = private unnamed_addr constant [32 x i8] c"got incorrect port in response\0A\00", align 1
@.str.172 = private unnamed_addr constant [31 x i8] c"enum path resources %d: %d %d\0A\00", align 1
@.str.173 = private unnamed_addr constant [34 x i8] c"Failed to create MSTB for port %p\00", align 1
@drm_dp_mst_i2c_algo = internal constant %struct.i2c_algorithm { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)* @drm_dp_mst_i2c_xfer, i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)* null, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)* null, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)* null, i32 (%struct.i2c_adapter*)* @drm_dp_mst_i2c_functionality }, align 8, !dbg !6257
@.str.174 = private unnamed_addr constant [44 x i8] c"Unsupported I2C transaction for MST device\0A\00", align 1
@.str.175 = private unnamed_addr constant [44 x i8] c"Failed to create connector for port %p: %d\0A\00", align 1
@.str.176 = private unnamed_addr constant [7 x i8] c"mst:%d\00", align 1
@.str.177 = private unnamed_addr constant [4 x i8] c"-%d\00", align 1
@.str.178 = private unnamed_addr constant [38 x i8] c"Failed to change PDT for port %p: %d\0A\00", align 1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %raw) #0 !dbg !6264 {
entry:
  %req.addr = alloca %struct.drm_dp_sideband_msg_req_body*, align 8
  %raw.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %idx = alloca i32, align 4
  %i = alloca i32, align 4
  %buf = alloca i8*, align 8
  %msg362 = alloca %struct.drm_dp_query_stream_enc_status*, align 8
  %tmp = alloca i64, align 8
  %tmp408 = alloca i64, align 8
  store %struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body** %req.addr, metadata !6269, metadata !DIExpression()), !dbg !6270
  store %struct.drm_dp_sideband_msg_tx* %raw, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %raw.addr, metadata !6271, metadata !DIExpression()), !dbg !6272
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6273, metadata !DIExpression()), !dbg !6274
  store i32 0, i32* %idx, align 4, !dbg !6274
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6277, metadata !DIExpression()), !dbg !6278
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8, !dbg !6279
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %0, i32 0, i32 0, !dbg !6280
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i64 0, i64 0, !dbg !6279
  store i8* %arraydecay, i8** %buf, align 8, !dbg !6278
  %1 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6281
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %1, i32 0, i32 0, !dbg !6282
  %2 = load i8, i8* %req_type, align 8, !dbg !6282
  %conv = zext i8 %2 to i32, !dbg !6281
  %and = and i32 %conv, 127, !dbg !6283
  %conv1 = trunc i32 %and to i8, !dbg !6281
  %3 = load i8*, i8** %buf, align 8, !dbg !6284
  %4 = load i32, i32* %idx, align 4, !dbg !6285
  %inc = add i32 %4, 1, !dbg !6285
  store i32 %inc, i32* %idx, align 4, !dbg !6285
  %idxprom = sext i32 %4 to i64, !dbg !6284
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !6284
  store i8 %conv1, i8* %arrayidx, align 1, !dbg !6286
  %5 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6287
  %req_type2 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %5, i32 0, i32 0, !dbg !6288
  %6 = load i8, i8* %req_type2, align 8, !dbg !6288
  %conv3 = zext i8 %6 to i32, !dbg !6287
  switch i32 %conv3, label %sw.epilog [
    i32 16, label %sw.bb
    i32 37, label %sw.bb
    i32 36, label %sw.bb
    i32 17, label %sw.bb10
    i32 18, label %sw.bb95
    i32 32, label %sw.bb114
    i32 33, label %sw.bb156
    i32 34, label %sw.bb213
    i32 35, label %sw.bb323
    i32 56, label %sw.bb361
  ], !dbg !6289

sw.bb:                                            ; preds = %entry, %entry, %entry
  %7 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6290
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %7, i32 0, i32 1, !dbg !6292
  %port_num = bitcast %union.ack_req* %u to %struct.drm_dp_port_number_req*, !dbg !6293
  %port_number = getelementptr inbounds %struct.drm_dp_port_number_req, %struct.drm_dp_port_number_req* %port_num, i32 0, i32 0, !dbg !6294
  %8 = load i8, i8* %port_number, align 8, !dbg !6294
  %conv4 = zext i8 %8 to i32, !dbg !6290
  %and5 = and i32 %conv4, 15, !dbg !6295
  %shl = shl i32 %and5, 4, !dbg !6296
  %conv6 = trunc i32 %shl to i8, !dbg !6297
  %9 = load i8*, i8** %buf, align 8, !dbg !6298
  %10 = load i32, i32* %idx, align 4, !dbg !6299
  %idxprom7 = sext i32 %10 to i64, !dbg !6298
  %arrayidx8 = getelementptr i8, i8* %9, i64 %idxprom7, !dbg !6298
  store i8 %conv6, i8* %arrayidx8, align 1, !dbg !6300
  %11 = load i32, i32* %idx, align 4, !dbg !6301
  %inc9 = add i32 %11, 1, !dbg !6301
  store i32 %inc9, i32* %idx, align 4, !dbg !6301
  br label %sw.epilog, !dbg !6302

sw.bb10:                                          ; preds = %entry
  %12 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6303
  %u11 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %12, i32 0, i32 1, !dbg !6304
  %allocate_payload = bitcast %union.ack_req* %u11 to %struct.drm_dp_allocate_payload*, !dbg !6305
  %port_number12 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload, i32 0, i32 0, !dbg !6306
  %13 = load i8, i8* %port_number12, align 8, !dbg !6306
  %conv13 = zext i8 %13 to i32, !dbg !6303
  %and14 = and i32 %conv13, 15, !dbg !6307
  %shl15 = shl i32 %and14, 4, !dbg !6308
  %14 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6309
  %u16 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %14, i32 0, i32 1, !dbg !6310
  %allocate_payload17 = bitcast %union.ack_req* %u16 to %struct.drm_dp_allocate_payload*, !dbg !6311
  %number_sdp_streams = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload17, i32 0, i32 1, !dbg !6312
  %15 = load i8, i8* %number_sdp_streams, align 1, !dbg !6312
  %conv18 = zext i8 %15 to i32, !dbg !6309
  %and19 = and i32 %conv18, 15, !dbg !6313
  %or = or i32 %shl15, %and19, !dbg !6314
  %conv20 = trunc i32 %or to i8, !dbg !6315
  %16 = load i8*, i8** %buf, align 8, !dbg !6316
  %17 = load i32, i32* %idx, align 4, !dbg !6317
  %idxprom21 = sext i32 %17 to i64, !dbg !6316
  %arrayidx22 = getelementptr i8, i8* %16, i64 %idxprom21, !dbg !6316
  store i8 %conv20, i8* %arrayidx22, align 1, !dbg !6318
  %18 = load i32, i32* %idx, align 4, !dbg !6319
  %inc23 = add i32 %18, 1, !dbg !6319
  store i32 %inc23, i32* %idx, align 4, !dbg !6319
  %19 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6320
  %u24 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %19, i32 0, i32 1, !dbg !6321
  %allocate_payload25 = bitcast %union.ack_req* %u24 to %struct.drm_dp_allocate_payload*, !dbg !6322
  %vcpi = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload25, i32 0, i32 2, !dbg !6323
  %20 = load i8, i8* %vcpi, align 2, !dbg !6323
  %conv26 = zext i8 %20 to i32, !dbg !6320
  %and27 = and i32 %conv26, 127, !dbg !6324
  %conv28 = trunc i32 %and27 to i8, !dbg !6325
  %21 = load i8*, i8** %buf, align 8, !dbg !6326
  %22 = load i32, i32* %idx, align 4, !dbg !6327
  %idxprom29 = sext i32 %22 to i64, !dbg !6326
  %arrayidx30 = getelementptr i8, i8* %21, i64 %idxprom29, !dbg !6326
  store i8 %conv28, i8* %arrayidx30, align 1, !dbg !6328
  %23 = load i32, i32* %idx, align 4, !dbg !6329
  %inc31 = add i32 %23, 1, !dbg !6329
  store i32 %inc31, i32* %idx, align 4, !dbg !6329
  %24 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6330
  %u32 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %24, i32 0, i32 1, !dbg !6331
  %allocate_payload33 = bitcast %union.ack_req* %u32 to %struct.drm_dp_allocate_payload*, !dbg !6332
  %pbn = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload33, i32 0, i32 3, !dbg !6333
  %25 = load i16, i16* %pbn, align 4, !dbg !6333
  %conv34 = zext i16 %25 to i32, !dbg !6330
  %shr = ashr i32 %conv34, 8, !dbg !6334
  %conv35 = trunc i32 %shr to i8, !dbg !6335
  %26 = load i8*, i8** %buf, align 8, !dbg !6336
  %27 = load i32, i32* %idx, align 4, !dbg !6337
  %idxprom36 = sext i32 %27 to i64, !dbg !6336
  %arrayidx37 = getelementptr i8, i8* %26, i64 %idxprom36, !dbg !6336
  store i8 %conv35, i8* %arrayidx37, align 1, !dbg !6338
  %28 = load i32, i32* %idx, align 4, !dbg !6339
  %inc38 = add i32 %28, 1, !dbg !6339
  store i32 %inc38, i32* %idx, align 4, !dbg !6339
  %29 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6340
  %u39 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %29, i32 0, i32 1, !dbg !6341
  %allocate_payload40 = bitcast %union.ack_req* %u39 to %struct.drm_dp_allocate_payload*, !dbg !6342
  %pbn41 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload40, i32 0, i32 3, !dbg !6343
  %30 = load i16, i16* %pbn41, align 4, !dbg !6343
  %conv42 = zext i16 %30 to i32, !dbg !6340
  %and43 = and i32 %conv42, 255, !dbg !6344
  %conv44 = trunc i32 %and43 to i8, !dbg !6345
  %31 = load i8*, i8** %buf, align 8, !dbg !6346
  %32 = load i32, i32* %idx, align 4, !dbg !6347
  %idxprom45 = sext i32 %32 to i64, !dbg !6346
  %arrayidx46 = getelementptr i8, i8* %31, i64 %idxprom45, !dbg !6346
  store i8 %conv44, i8* %arrayidx46, align 1, !dbg !6348
  %33 = load i32, i32* %idx, align 4, !dbg !6349
  %inc47 = add i32 %33, 1, !dbg !6349
  store i32 %inc47, i32* %idx, align 4, !dbg !6349
  store i32 0, i32* %i, align 4, !dbg !6350
  br label %for.cond, !dbg !6352

for.cond:                                         ; preds = %for.inc, %sw.bb10
  %34 = load i32, i32* %i, align 4, !dbg !6353
  %35 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6355
  %u48 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %35, i32 0, i32 1, !dbg !6356
  %allocate_payload49 = bitcast %union.ack_req* %u48 to %struct.drm_dp_allocate_payload*, !dbg !6357
  %number_sdp_streams50 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload49, i32 0, i32 1, !dbg !6358
  %36 = load i8, i8* %number_sdp_streams50, align 1, !dbg !6358
  %conv51 = zext i8 %36 to i32, !dbg !6355
  %div = sdiv i32 %conv51, 2, !dbg !6359
  %cmp = icmp slt i32 %34, %div, !dbg !6360
  br i1 %cmp, label %for.body, label %for.end, !dbg !6361

for.body:                                         ; preds = %for.cond
  %37 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6362
  %u53 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %37, i32 0, i32 1, !dbg !6364
  %allocate_payload54 = bitcast %union.ack_req* %u53 to %struct.drm_dp_allocate_payload*, !dbg !6365
  %sdp_stream_sink = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload54, i32 0, i32 4, !dbg !6366
  %38 = load i32, i32* %i, align 4, !dbg !6367
  %mul = mul i32 %38, 2, !dbg !6368
  %idxprom55 = sext i32 %mul to i64, !dbg !6362
  %arrayidx56 = getelementptr [16 x i8], [16 x i8]* %sdp_stream_sink, i64 0, i64 %idxprom55, !dbg !6362
  %39 = load i8, i8* %arrayidx56, align 1, !dbg !6362
  %conv57 = zext i8 %39 to i32, !dbg !6362
  %and58 = and i32 %conv57, 15, !dbg !6369
  %shl59 = shl i32 %and58, 4, !dbg !6370
  %40 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6371
  %u60 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %40, i32 0, i32 1, !dbg !6372
  %allocate_payload61 = bitcast %union.ack_req* %u60 to %struct.drm_dp_allocate_payload*, !dbg !6373
  %sdp_stream_sink62 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload61, i32 0, i32 4, !dbg !6374
  %41 = load i32, i32* %i, align 4, !dbg !6375
  %mul63 = mul i32 %41, 2, !dbg !6376
  %add = add i32 %mul63, 1, !dbg !6377
  %idxprom64 = sext i32 %add to i64, !dbg !6371
  %arrayidx65 = getelementptr [16 x i8], [16 x i8]* %sdp_stream_sink62, i64 0, i64 %idxprom64, !dbg !6371
  %42 = load i8, i8* %arrayidx65, align 1, !dbg !6371
  %conv66 = zext i8 %42 to i32, !dbg !6371
  %and67 = and i32 %conv66, 15, !dbg !6378
  %or68 = or i32 %shl59, %and67, !dbg !6379
  %conv69 = trunc i32 %or68 to i8, !dbg !6380
  %43 = load i8*, i8** %buf, align 8, !dbg !6381
  %44 = load i32, i32* %idx, align 4, !dbg !6382
  %idxprom70 = sext i32 %44 to i64, !dbg !6381
  %arrayidx71 = getelementptr i8, i8* %43, i64 %idxprom70, !dbg !6381
  store i8 %conv69, i8* %arrayidx71, align 1, !dbg !6383
  %45 = load i32, i32* %idx, align 4, !dbg !6384
  %inc72 = add i32 %45, 1, !dbg !6384
  store i32 %inc72, i32* %idx, align 4, !dbg !6384
  br label %for.inc, !dbg !6385

for.inc:                                          ; preds = %for.body
  %46 = load i32, i32* %i, align 4, !dbg !6386
  %inc73 = add i32 %46, 1, !dbg !6386
  store i32 %inc73, i32* %i, align 4, !dbg !6386
  br label %for.cond, !dbg !6387, !llvm.loop !6388

for.end:                                          ; preds = %for.cond
  %47 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6390
  %u74 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %47, i32 0, i32 1, !dbg !6392
  %allocate_payload75 = bitcast %union.ack_req* %u74 to %struct.drm_dp_allocate_payload*, !dbg !6393
  %number_sdp_streams76 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload75, i32 0, i32 1, !dbg !6394
  %48 = load i8, i8* %number_sdp_streams76, align 1, !dbg !6394
  %conv77 = zext i8 %48 to i32, !dbg !6390
  %and78 = and i32 %conv77, 1, !dbg !6395
  %tobool = icmp ne i32 %and78, 0, !dbg !6395
  br i1 %tobool, label %if.then, label %if.end, !dbg !6396

if.then:                                          ; preds = %for.end
  %49 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6397
  %u79 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %49, i32 0, i32 1, !dbg !6399
  %allocate_payload80 = bitcast %union.ack_req* %u79 to %struct.drm_dp_allocate_payload*, !dbg !6400
  %number_sdp_streams81 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload80, i32 0, i32 1, !dbg !6401
  %50 = load i8, i8* %number_sdp_streams81, align 1, !dbg !6401
  %conv82 = zext i8 %50 to i32, !dbg !6397
  %sub = sub i32 %conv82, 1, !dbg !6402
  store i32 %sub, i32* %i, align 4, !dbg !6403
  %51 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6404
  %u83 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %51, i32 0, i32 1, !dbg !6405
  %allocate_payload84 = bitcast %union.ack_req* %u83 to %struct.drm_dp_allocate_payload*, !dbg !6406
  %sdp_stream_sink85 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload84, i32 0, i32 4, !dbg !6407
  %52 = load i32, i32* %i, align 4, !dbg !6408
  %idxprom86 = sext i32 %52 to i64, !dbg !6404
  %arrayidx87 = getelementptr [16 x i8], [16 x i8]* %sdp_stream_sink85, i64 0, i64 %idxprom86, !dbg !6404
  %53 = load i8, i8* %arrayidx87, align 1, !dbg !6404
  %conv88 = zext i8 %53 to i32, !dbg !6404
  %and89 = and i32 %conv88, 15, !dbg !6409
  %shl90 = shl i32 %and89, 4, !dbg !6410
  %conv91 = trunc i32 %shl90 to i8, !dbg !6411
  %54 = load i8*, i8** %buf, align 8, !dbg !6412
  %55 = load i32, i32* %idx, align 4, !dbg !6413
  %idxprom92 = sext i32 %55 to i64, !dbg !6412
  %arrayidx93 = getelementptr i8, i8* %54, i64 %idxprom92, !dbg !6412
  store i8 %conv91, i8* %arrayidx93, align 1, !dbg !6414
  %56 = load i32, i32* %idx, align 4, !dbg !6415
  %inc94 = add i32 %56, 1, !dbg !6415
  store i32 %inc94, i32* %idx, align 4, !dbg !6415
  br label %if.end, !dbg !6416

if.end:                                           ; preds = %if.then, %for.end
  br label %sw.epilog, !dbg !6417

sw.bb95:                                          ; preds = %entry
  %57 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6418
  %u96 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %57, i32 0, i32 1, !dbg !6419
  %query_payload = bitcast %union.ack_req* %u96 to %struct.drm_dp_query_payload*, !dbg !6420
  %port_number97 = getelementptr inbounds %struct.drm_dp_query_payload, %struct.drm_dp_query_payload* %query_payload, i32 0, i32 0, !dbg !6421
  %58 = load i8, i8* %port_number97, align 8, !dbg !6421
  %conv98 = zext i8 %58 to i32, !dbg !6418
  %and99 = and i32 %conv98, 15, !dbg !6422
  %shl100 = shl i32 %and99, 4, !dbg !6423
  %conv101 = trunc i32 %shl100 to i8, !dbg !6424
  %59 = load i8*, i8** %buf, align 8, !dbg !6425
  %60 = load i32, i32* %idx, align 4, !dbg !6426
  %idxprom102 = sext i32 %60 to i64, !dbg !6425
  %arrayidx103 = getelementptr i8, i8* %59, i64 %idxprom102, !dbg !6425
  store i8 %conv101, i8* %arrayidx103, align 1, !dbg !6427
  %61 = load i32, i32* %idx, align 4, !dbg !6428
  %inc104 = add i32 %61, 1, !dbg !6428
  store i32 %inc104, i32* %idx, align 4, !dbg !6428
  %62 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6429
  %u105 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %62, i32 0, i32 1, !dbg !6430
  %query_payload106 = bitcast %union.ack_req* %u105 to %struct.drm_dp_query_payload*, !dbg !6431
  %vcpi107 = getelementptr inbounds %struct.drm_dp_query_payload, %struct.drm_dp_query_payload* %query_payload106, i32 0, i32 1, !dbg !6432
  %63 = load i8, i8* %vcpi107, align 1, !dbg !6432
  %conv108 = zext i8 %63 to i32, !dbg !6429
  %and109 = and i32 %conv108, 127, !dbg !6433
  %conv110 = trunc i32 %and109 to i8, !dbg !6434
  %64 = load i8*, i8** %buf, align 8, !dbg !6435
  %65 = load i32, i32* %idx, align 4, !dbg !6436
  %idxprom111 = sext i32 %65 to i64, !dbg !6435
  %arrayidx112 = getelementptr i8, i8* %64, i64 %idxprom111, !dbg !6435
  store i8 %conv110, i8* %arrayidx112, align 1, !dbg !6437
  %66 = load i32, i32* %idx, align 4, !dbg !6438
  %inc113 = add i32 %66, 1, !dbg !6438
  store i32 %inc113, i32* %idx, align 4, !dbg !6438
  br label %sw.epilog, !dbg !6439

sw.bb114:                                         ; preds = %entry
  %67 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6440
  %u115 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %67, i32 0, i32 1, !dbg !6441
  %dpcd_read = bitcast %union.ack_req* %u115 to %struct.drm_dp_remote_dpcd_read*, !dbg !6442
  %port_number116 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read, i32 0, i32 0, !dbg !6443
  %68 = load i8, i8* %port_number116, align 8, !dbg !6443
  %conv117 = zext i8 %68 to i32, !dbg !6440
  %and118 = and i32 %conv117, 15, !dbg !6444
  %shl119 = shl i32 %and118, 4, !dbg !6445
  %conv120 = trunc i32 %shl119 to i8, !dbg !6446
  %69 = load i8*, i8** %buf, align 8, !dbg !6447
  %70 = load i32, i32* %idx, align 4, !dbg !6448
  %idxprom121 = sext i32 %70 to i64, !dbg !6447
  %arrayidx122 = getelementptr i8, i8* %69, i64 %idxprom121, !dbg !6447
  store i8 %conv120, i8* %arrayidx122, align 1, !dbg !6449
  %71 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6450
  %u123 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %71, i32 0, i32 1, !dbg !6451
  %dpcd_read124 = bitcast %union.ack_req* %u123 to %struct.drm_dp_remote_dpcd_read*, !dbg !6452
  %dpcd_address = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read124, i32 0, i32 1, !dbg !6453
  %72 = load i32, i32* %dpcd_address, align 4, !dbg !6453
  %and125 = and i32 %72, 983040, !dbg !6454
  %shr126 = lshr i32 %and125, 16, !dbg !6455
  %and127 = and i32 %shr126, 15, !dbg !6456
  %73 = load i8*, i8** %buf, align 8, !dbg !6457
  %74 = load i32, i32* %idx, align 4, !dbg !6458
  %idxprom128 = sext i32 %74 to i64, !dbg !6457
  %arrayidx129 = getelementptr i8, i8* %73, i64 %idxprom128, !dbg !6457
  %75 = load i8, i8* %arrayidx129, align 1, !dbg !6459
  %conv130 = zext i8 %75 to i32, !dbg !6459
  %or131 = or i32 %conv130, %and127, !dbg !6459
  %conv132 = trunc i32 %or131 to i8, !dbg !6459
  store i8 %conv132, i8* %arrayidx129, align 1, !dbg !6459
  %76 = load i32, i32* %idx, align 4, !dbg !6460
  %inc133 = add i32 %76, 1, !dbg !6460
  store i32 %inc133, i32* %idx, align 4, !dbg !6460
  %77 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6461
  %u134 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %77, i32 0, i32 1, !dbg !6462
  %dpcd_read135 = bitcast %union.ack_req* %u134 to %struct.drm_dp_remote_dpcd_read*, !dbg !6463
  %dpcd_address136 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read135, i32 0, i32 1, !dbg !6464
  %78 = load i32, i32* %dpcd_address136, align 4, !dbg !6464
  %and137 = and i32 %78, 65280, !dbg !6465
  %shr138 = lshr i32 %and137, 8, !dbg !6466
  %conv139 = trunc i32 %shr138 to i8, !dbg !6467
  %79 = load i8*, i8** %buf, align 8, !dbg !6468
  %80 = load i32, i32* %idx, align 4, !dbg !6469
  %idxprom140 = sext i32 %80 to i64, !dbg !6468
  %arrayidx141 = getelementptr i8, i8* %79, i64 %idxprom140, !dbg !6468
  store i8 %conv139, i8* %arrayidx141, align 1, !dbg !6470
  %81 = load i32, i32* %idx, align 4, !dbg !6471
  %inc142 = add i32 %81, 1, !dbg !6471
  store i32 %inc142, i32* %idx, align 4, !dbg !6471
  %82 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6472
  %u143 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %82, i32 0, i32 1, !dbg !6473
  %dpcd_read144 = bitcast %union.ack_req* %u143 to %struct.drm_dp_remote_dpcd_read*, !dbg !6474
  %dpcd_address145 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read144, i32 0, i32 1, !dbg !6475
  %83 = load i32, i32* %dpcd_address145, align 4, !dbg !6475
  %and146 = and i32 %83, 255, !dbg !6476
  %conv147 = trunc i32 %and146 to i8, !dbg !6477
  %84 = load i8*, i8** %buf, align 8, !dbg !6478
  %85 = load i32, i32* %idx, align 4, !dbg !6479
  %idxprom148 = sext i32 %85 to i64, !dbg !6478
  %arrayidx149 = getelementptr i8, i8* %84, i64 %idxprom148, !dbg !6478
  store i8 %conv147, i8* %arrayidx149, align 1, !dbg !6480
  %86 = load i32, i32* %idx, align 4, !dbg !6481
  %inc150 = add i32 %86, 1, !dbg !6481
  store i32 %inc150, i32* %idx, align 4, !dbg !6481
  %87 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6482
  %u151 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %87, i32 0, i32 1, !dbg !6483
  %dpcd_read152 = bitcast %union.ack_req* %u151 to %struct.drm_dp_remote_dpcd_read*, !dbg !6484
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read152, i32 0, i32 2, !dbg !6485
  %88 = load i8, i8* %num_bytes, align 8, !dbg !6485
  %89 = load i8*, i8** %buf, align 8, !dbg !6486
  %90 = load i32, i32* %idx, align 4, !dbg !6487
  %idxprom153 = sext i32 %90 to i64, !dbg !6486
  %arrayidx154 = getelementptr i8, i8* %89, i64 %idxprom153, !dbg !6486
  store i8 %88, i8* %arrayidx154, align 1, !dbg !6488
  %91 = load i32, i32* %idx, align 4, !dbg !6489
  %inc155 = add i32 %91, 1, !dbg !6489
  store i32 %inc155, i32* %idx, align 4, !dbg !6489
  br label %sw.epilog, !dbg !6490

sw.bb156:                                         ; preds = %entry
  %92 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6491
  %u157 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %92, i32 0, i32 1, !dbg !6492
  %dpcd_write = bitcast %union.ack_req* %u157 to %struct.drm_dp_remote_dpcd_write*, !dbg !6493
  %port_number158 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write, i32 0, i32 0, !dbg !6494
  %93 = load i8, i8* %port_number158, align 8, !dbg !6494
  %conv159 = zext i8 %93 to i32, !dbg !6491
  %and160 = and i32 %conv159, 15, !dbg !6495
  %shl161 = shl i32 %and160, 4, !dbg !6496
  %conv162 = trunc i32 %shl161 to i8, !dbg !6497
  %94 = load i8*, i8** %buf, align 8, !dbg !6498
  %95 = load i32, i32* %idx, align 4, !dbg !6499
  %idxprom163 = sext i32 %95 to i64, !dbg !6498
  %arrayidx164 = getelementptr i8, i8* %94, i64 %idxprom163, !dbg !6498
  store i8 %conv162, i8* %arrayidx164, align 1, !dbg !6500
  %96 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6501
  %u165 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %96, i32 0, i32 1, !dbg !6502
  %dpcd_write166 = bitcast %union.ack_req* %u165 to %struct.drm_dp_remote_dpcd_write*, !dbg !6503
  %dpcd_address167 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write166, i32 0, i32 1, !dbg !6504
  %97 = load i32, i32* %dpcd_address167, align 4, !dbg !6504
  %and168 = and i32 %97, 983040, !dbg !6505
  %shr169 = lshr i32 %and168, 16, !dbg !6506
  %and170 = and i32 %shr169, 15, !dbg !6507
  %98 = load i8*, i8** %buf, align 8, !dbg !6508
  %99 = load i32, i32* %idx, align 4, !dbg !6509
  %idxprom171 = sext i32 %99 to i64, !dbg !6508
  %arrayidx172 = getelementptr i8, i8* %98, i64 %idxprom171, !dbg !6508
  %100 = load i8, i8* %arrayidx172, align 1, !dbg !6510
  %conv173 = zext i8 %100 to i32, !dbg !6510
  %or174 = or i32 %conv173, %and170, !dbg !6510
  %conv175 = trunc i32 %or174 to i8, !dbg !6510
  store i8 %conv175, i8* %arrayidx172, align 1, !dbg !6510
  %101 = load i32, i32* %idx, align 4, !dbg !6511
  %inc176 = add i32 %101, 1, !dbg !6511
  store i32 %inc176, i32* %idx, align 4, !dbg !6511
  %102 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6512
  %u177 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %102, i32 0, i32 1, !dbg !6513
  %dpcd_write178 = bitcast %union.ack_req* %u177 to %struct.drm_dp_remote_dpcd_write*, !dbg !6514
  %dpcd_address179 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write178, i32 0, i32 1, !dbg !6515
  %103 = load i32, i32* %dpcd_address179, align 4, !dbg !6515
  %and180 = and i32 %103, 65280, !dbg !6516
  %shr181 = lshr i32 %and180, 8, !dbg !6517
  %conv182 = trunc i32 %shr181 to i8, !dbg !6518
  %104 = load i8*, i8** %buf, align 8, !dbg !6519
  %105 = load i32, i32* %idx, align 4, !dbg !6520
  %idxprom183 = sext i32 %105 to i64, !dbg !6519
  %arrayidx184 = getelementptr i8, i8* %104, i64 %idxprom183, !dbg !6519
  store i8 %conv182, i8* %arrayidx184, align 1, !dbg !6521
  %106 = load i32, i32* %idx, align 4, !dbg !6522
  %inc185 = add i32 %106, 1, !dbg !6522
  store i32 %inc185, i32* %idx, align 4, !dbg !6522
  %107 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6523
  %u186 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %107, i32 0, i32 1, !dbg !6524
  %dpcd_write187 = bitcast %union.ack_req* %u186 to %struct.drm_dp_remote_dpcd_write*, !dbg !6525
  %dpcd_address188 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write187, i32 0, i32 1, !dbg !6526
  %108 = load i32, i32* %dpcd_address188, align 4, !dbg !6526
  %and189 = and i32 %108, 255, !dbg !6527
  %conv190 = trunc i32 %and189 to i8, !dbg !6528
  %109 = load i8*, i8** %buf, align 8, !dbg !6529
  %110 = load i32, i32* %idx, align 4, !dbg !6530
  %idxprom191 = sext i32 %110 to i64, !dbg !6529
  %arrayidx192 = getelementptr i8, i8* %109, i64 %idxprom191, !dbg !6529
  store i8 %conv190, i8* %arrayidx192, align 1, !dbg !6531
  %111 = load i32, i32* %idx, align 4, !dbg !6532
  %inc193 = add i32 %111, 1, !dbg !6532
  store i32 %inc193, i32* %idx, align 4, !dbg !6532
  %112 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6533
  %u194 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %112, i32 0, i32 1, !dbg !6534
  %dpcd_write195 = bitcast %union.ack_req* %u194 to %struct.drm_dp_remote_dpcd_write*, !dbg !6535
  %num_bytes196 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write195, i32 0, i32 2, !dbg !6536
  %113 = load i8, i8* %num_bytes196, align 8, !dbg !6536
  %114 = load i8*, i8** %buf, align 8, !dbg !6537
  %115 = load i32, i32* %idx, align 4, !dbg !6538
  %idxprom197 = sext i32 %115 to i64, !dbg !6537
  %arrayidx198 = getelementptr i8, i8* %114, i64 %idxprom197, !dbg !6537
  store i8 %113, i8* %arrayidx198, align 1, !dbg !6539
  %116 = load i32, i32* %idx, align 4, !dbg !6540
  %inc199 = add i32 %116, 1, !dbg !6540
  store i32 %inc199, i32* %idx, align 4, !dbg !6540
  %117 = load i8*, i8** %buf, align 8, !dbg !6541
  %118 = load i32, i32* %idx, align 4, !dbg !6542
  %idxprom200 = sext i32 %118 to i64, !dbg !6541
  %arrayidx201 = getelementptr i8, i8* %117, i64 %idxprom200, !dbg !6541
  %119 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6543
  %u202 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %119, i32 0, i32 1, !dbg !6544
  %dpcd_write203 = bitcast %union.ack_req* %u202 to %struct.drm_dp_remote_dpcd_write*, !dbg !6545
  %bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write203, i32 0, i32 3, !dbg !6546
  %120 = load i8*, i8** %bytes, align 8, !dbg !6546
  %121 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6547
  %u204 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %121, i32 0, i32 1, !dbg !6548
  %dpcd_write205 = bitcast %union.ack_req* %u204 to %struct.drm_dp_remote_dpcd_write*, !dbg !6549
  %num_bytes206 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write205, i32 0, i32 2, !dbg !6550
  %122 = load i8, i8* %num_bytes206, align 8, !dbg !6550
  %conv207 = zext i8 %122 to i64, !dbg !6547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx201, i8* align 1 %120, i64 %conv207, i1 false), !dbg !6551
  %123 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6552
  %u208 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %123, i32 0, i32 1, !dbg !6553
  %dpcd_write209 = bitcast %union.ack_req* %u208 to %struct.drm_dp_remote_dpcd_write*, !dbg !6554
  %num_bytes210 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write209, i32 0, i32 2, !dbg !6555
  %124 = load i8, i8* %num_bytes210, align 8, !dbg !6555
  %conv211 = zext i8 %124 to i32, !dbg !6552
  %125 = load i32, i32* %idx, align 4, !dbg !6556
  %add212 = add i32 %125, %conv211, !dbg !6556
  store i32 %add212, i32* %idx, align 4, !dbg !6556
  br label %sw.epilog, !dbg !6557

sw.bb213:                                         ; preds = %entry
  %126 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6558
  %u214 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %126, i32 0, i32 1, !dbg !6559
  %i2c_read = bitcast %union.ack_req* %u214 to %struct.drm_dp_remote_i2c_read*, !dbg !6560
  %port_number215 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read, i32 0, i32 1, !dbg !6561
  %127 = load i8, i8* %port_number215, align 1, !dbg !6561
  %conv216 = zext i8 %127 to i32, !dbg !6558
  %and217 = and i32 %conv216, 15, !dbg !6562
  %shl218 = shl i32 %and217, 4, !dbg !6563
  %conv219 = trunc i32 %shl218 to i8, !dbg !6564
  %128 = load i8*, i8** %buf, align 8, !dbg !6565
  %129 = load i32, i32* %idx, align 4, !dbg !6566
  %idxprom220 = sext i32 %129 to i64, !dbg !6565
  %arrayidx221 = getelementptr i8, i8* %128, i64 %idxprom220, !dbg !6565
  store i8 %conv219, i8* %arrayidx221, align 1, !dbg !6567
  %130 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6568
  %u222 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %130, i32 0, i32 1, !dbg !6569
  %i2c_read223 = bitcast %union.ack_req* %u222 to %struct.drm_dp_remote_i2c_read*, !dbg !6570
  %num_transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read223, i32 0, i32 0, !dbg !6571
  %131 = load i8, i8* %num_transactions, align 8, !dbg !6571
  %conv224 = zext i8 %131 to i32, !dbg !6568
  %and225 = and i32 %conv224, 3, !dbg !6572
  %132 = load i8*, i8** %buf, align 8, !dbg !6573
  %133 = load i32, i32* %idx, align 4, !dbg !6574
  %idxprom226 = sext i32 %133 to i64, !dbg !6573
  %arrayidx227 = getelementptr i8, i8* %132, i64 %idxprom226, !dbg !6573
  %134 = load i8, i8* %arrayidx227, align 1, !dbg !6575
  %conv228 = zext i8 %134 to i32, !dbg !6575
  %or229 = or i32 %conv228, %and225, !dbg !6575
  %conv230 = trunc i32 %or229 to i8, !dbg !6575
  store i8 %conv230, i8* %arrayidx227, align 1, !dbg !6575
  %135 = load i32, i32* %idx, align 4, !dbg !6576
  %inc231 = add i32 %135, 1, !dbg !6576
  store i32 %inc231, i32* %idx, align 4, !dbg !6576
  store i32 0, i32* %i, align 4, !dbg !6577
  br label %for.cond232, !dbg !6579

for.cond232:                                      ; preds = %for.inc307, %sw.bb213
  %136 = load i32, i32* %i, align 4, !dbg !6580
  %137 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6582
  %u233 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %137, i32 0, i32 1, !dbg !6583
  %i2c_read234 = bitcast %union.ack_req* %u233 to %struct.drm_dp_remote_i2c_read*, !dbg !6584
  %num_transactions235 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read234, i32 0, i32 0, !dbg !6585
  %138 = load i8, i8* %num_transactions235, align 8, !dbg !6585
  %conv236 = zext i8 %138 to i32, !dbg !6582
  %and237 = and i32 %conv236, 3, !dbg !6586
  %cmp238 = icmp slt i32 %136, %and237, !dbg !6587
  br i1 %cmp238, label %for.body240, label %for.end309, !dbg !6588

for.body240:                                      ; preds = %for.cond232
  %139 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6589
  %u241 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %139, i32 0, i32 1, !dbg !6591
  %i2c_read242 = bitcast %union.ack_req* %u241 to %struct.drm_dp_remote_i2c_read*, !dbg !6592
  %transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read242, i32 0, i32 2, !dbg !6593
  %140 = load i32, i32* %i, align 4, !dbg !6594
  %idxprom243 = sext i32 %140 to i64, !dbg !6589
  %arrayidx244 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions, i64 0, i64 %idxprom243, !dbg !6589
  %i2c_dev_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx244, i32 0, i32 0, !dbg !6595
  %141 = load i8, i8* %i2c_dev_id, align 8, !dbg !6595
  %conv245 = zext i8 %141 to i32, !dbg !6589
  %and246 = and i32 %conv245, 127, !dbg !6596
  %conv247 = trunc i32 %and246 to i8, !dbg !6589
  %142 = load i8*, i8** %buf, align 8, !dbg !6597
  %143 = load i32, i32* %idx, align 4, !dbg !6598
  %idxprom248 = sext i32 %143 to i64, !dbg !6597
  %arrayidx249 = getelementptr i8, i8* %142, i64 %idxprom248, !dbg !6597
  store i8 %conv247, i8* %arrayidx249, align 1, !dbg !6599
  %144 = load i32, i32* %idx, align 4, !dbg !6600
  %inc250 = add i32 %144, 1, !dbg !6600
  store i32 %inc250, i32* %idx, align 4, !dbg !6600
  %145 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6601
  %u251 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %145, i32 0, i32 1, !dbg !6602
  %i2c_read252 = bitcast %union.ack_req* %u251 to %struct.drm_dp_remote_i2c_read*, !dbg !6603
  %transactions253 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read252, i32 0, i32 2, !dbg !6604
  %146 = load i32, i32* %i, align 4, !dbg !6605
  %idxprom254 = sext i32 %146 to i64, !dbg !6601
  %arrayidx255 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions253, i64 0, i64 %idxprom254, !dbg !6601
  %num_bytes256 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx255, i32 0, i32 1, !dbg !6606
  %147 = load i8, i8* %num_bytes256, align 1, !dbg !6606
  %148 = load i8*, i8** %buf, align 8, !dbg !6607
  %149 = load i32, i32* %idx, align 4, !dbg !6608
  %idxprom257 = sext i32 %149 to i64, !dbg !6607
  %arrayidx258 = getelementptr i8, i8* %148, i64 %idxprom257, !dbg !6607
  store i8 %147, i8* %arrayidx258, align 1, !dbg !6609
  %150 = load i32, i32* %idx, align 4, !dbg !6610
  %inc259 = add i32 %150, 1, !dbg !6610
  store i32 %inc259, i32* %idx, align 4, !dbg !6610
  %151 = load i8*, i8** %buf, align 8, !dbg !6611
  %152 = load i32, i32* %idx, align 4, !dbg !6612
  %idxprom260 = sext i32 %152 to i64, !dbg !6611
  %arrayidx261 = getelementptr i8, i8* %151, i64 %idxprom260, !dbg !6611
  %153 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6613
  %u262 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %153, i32 0, i32 1, !dbg !6614
  %i2c_read263 = bitcast %union.ack_req* %u262 to %struct.drm_dp_remote_i2c_read*, !dbg !6615
  %transactions264 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read263, i32 0, i32 2, !dbg !6616
  %154 = load i32, i32* %i, align 4, !dbg !6617
  %idxprom265 = sext i32 %154 to i64, !dbg !6613
  %arrayidx266 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions264, i64 0, i64 %idxprom265, !dbg !6613
  %bytes267 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx266, i32 0, i32 2, !dbg !6618
  %155 = load i8*, i8** %bytes267, align 8, !dbg !6618
  %156 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6619
  %u268 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %156, i32 0, i32 1, !dbg !6620
  %i2c_read269 = bitcast %union.ack_req* %u268 to %struct.drm_dp_remote_i2c_read*, !dbg !6621
  %transactions270 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read269, i32 0, i32 2, !dbg !6622
  %157 = load i32, i32* %i, align 4, !dbg !6623
  %idxprom271 = sext i32 %157 to i64, !dbg !6619
  %arrayidx272 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions270, i64 0, i64 %idxprom271, !dbg !6619
  %num_bytes273 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx272, i32 0, i32 1, !dbg !6624
  %158 = load i8, i8* %num_bytes273, align 1, !dbg !6624
  %conv274 = zext i8 %158 to i64, !dbg !6619
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx261, i8* align 1 %155, i64 %conv274, i1 false), !dbg !6625
  %159 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6626
  %u275 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %159, i32 0, i32 1, !dbg !6627
  %i2c_read276 = bitcast %union.ack_req* %u275 to %struct.drm_dp_remote_i2c_read*, !dbg !6628
  %transactions277 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read276, i32 0, i32 2, !dbg !6629
  %160 = load i32, i32* %i, align 4, !dbg !6630
  %idxprom278 = sext i32 %160 to i64, !dbg !6626
  %arrayidx279 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions277, i64 0, i64 %idxprom278, !dbg !6626
  %num_bytes280 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx279, i32 0, i32 1, !dbg !6631
  %161 = load i8, i8* %num_bytes280, align 1, !dbg !6631
  %conv281 = zext i8 %161 to i32, !dbg !6626
  %162 = load i32, i32* %idx, align 4, !dbg !6632
  %add282 = add i32 %162, %conv281, !dbg !6632
  store i32 %add282, i32* %idx, align 4, !dbg !6632
  %163 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6633
  %u283 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %163, i32 0, i32 1, !dbg !6634
  %i2c_read284 = bitcast %union.ack_req* %u283 to %struct.drm_dp_remote_i2c_read*, !dbg !6635
  %transactions285 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read284, i32 0, i32 2, !dbg !6636
  %164 = load i32, i32* %i, align 4, !dbg !6637
  %idxprom286 = sext i32 %164 to i64, !dbg !6633
  %arrayidx287 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions285, i64 0, i64 %idxprom286, !dbg !6633
  %no_stop_bit = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx287, i32 0, i32 3, !dbg !6638
  %165 = load i8, i8* %no_stop_bit, align 8, !dbg !6638
  %conv288 = zext i8 %165 to i32, !dbg !6633
  %and289 = and i32 %conv288, 1, !dbg !6639
  %shl290 = shl i32 %and289, 4, !dbg !6640
  %conv291 = trunc i32 %shl290 to i8, !dbg !6641
  %166 = load i8*, i8** %buf, align 8, !dbg !6642
  %167 = load i32, i32* %idx, align 4, !dbg !6643
  %idxprom292 = sext i32 %167 to i64, !dbg !6642
  %arrayidx293 = getelementptr i8, i8* %166, i64 %idxprom292, !dbg !6642
  store i8 %conv291, i8* %arrayidx293, align 1, !dbg !6644
  %168 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6645
  %u294 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %168, i32 0, i32 1, !dbg !6646
  %i2c_read295 = bitcast %union.ack_req* %u294 to %struct.drm_dp_remote_i2c_read*, !dbg !6647
  %transactions296 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read295, i32 0, i32 2, !dbg !6648
  %169 = load i32, i32* %i, align 4, !dbg !6649
  %idxprom297 = sext i32 %169 to i64, !dbg !6645
  %arrayidx298 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions296, i64 0, i64 %idxprom297, !dbg !6645
  %i2c_transaction_delay = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx298, i32 0, i32 4, !dbg !6650
  %170 = load i8, i8* %i2c_transaction_delay, align 1, !dbg !6650
  %conv299 = zext i8 %170 to i32, !dbg !6645
  %and300 = and i32 %conv299, 15, !dbg !6651
  %171 = load i8*, i8** %buf, align 8, !dbg !6652
  %172 = load i32, i32* %idx, align 4, !dbg !6653
  %idxprom301 = sext i32 %172 to i64, !dbg !6652
  %arrayidx302 = getelementptr i8, i8* %171, i64 %idxprom301, !dbg !6652
  %173 = load i8, i8* %arrayidx302, align 1, !dbg !6654
  %conv303 = zext i8 %173 to i32, !dbg !6654
  %or304 = or i32 %conv303, %and300, !dbg !6654
  %conv305 = trunc i32 %or304 to i8, !dbg !6654
  store i8 %conv305, i8* %arrayidx302, align 1, !dbg !6654
  %174 = load i32, i32* %idx, align 4, !dbg !6655
  %inc306 = add i32 %174, 1, !dbg !6655
  store i32 %inc306, i32* %idx, align 4, !dbg !6655
  br label %for.inc307, !dbg !6656

for.inc307:                                       ; preds = %for.body240
  %175 = load i32, i32* %i, align 4, !dbg !6657
  %inc308 = add i32 %175, 1, !dbg !6657
  store i32 %inc308, i32* %i, align 4, !dbg !6657
  br label %for.cond232, !dbg !6658, !llvm.loop !6659

for.end309:                                       ; preds = %for.cond232
  %176 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6661
  %u310 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %176, i32 0, i32 1, !dbg !6662
  %i2c_read311 = bitcast %union.ack_req* %u310 to %struct.drm_dp_remote_i2c_read*, !dbg !6663
  %read_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read311, i32 0, i32 3, !dbg !6664
  %177 = load i8, i8* %read_i2c_device_id, align 8, !dbg !6664
  %conv312 = zext i8 %177 to i32, !dbg !6665
  %and313 = and i32 %conv312, 127, !dbg !6666
  %conv314 = trunc i32 %and313 to i8, !dbg !6665
  %178 = load i8*, i8** %buf, align 8, !dbg !6667
  %179 = load i32, i32* %idx, align 4, !dbg !6668
  %idxprom315 = sext i32 %179 to i64, !dbg !6667
  %arrayidx316 = getelementptr i8, i8* %178, i64 %idxprom315, !dbg !6667
  store i8 %conv314, i8* %arrayidx316, align 1, !dbg !6669
  %180 = load i32, i32* %idx, align 4, !dbg !6670
  %inc317 = add i32 %180, 1, !dbg !6670
  store i32 %inc317, i32* %idx, align 4, !dbg !6670
  %181 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6671
  %u318 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %181, i32 0, i32 1, !dbg !6672
  %i2c_read319 = bitcast %union.ack_req* %u318 to %struct.drm_dp_remote_i2c_read*, !dbg !6673
  %num_bytes_read = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read319, i32 0, i32 4, !dbg !6674
  %182 = load i8, i8* %num_bytes_read, align 1, !dbg !6674
  %183 = load i8*, i8** %buf, align 8, !dbg !6675
  %184 = load i32, i32* %idx, align 4, !dbg !6676
  %idxprom320 = sext i32 %184 to i64, !dbg !6675
  %arrayidx321 = getelementptr i8, i8* %183, i64 %idxprom320, !dbg !6675
  store i8 %182, i8* %arrayidx321, align 1, !dbg !6677
  %185 = load i32, i32* %idx, align 4, !dbg !6678
  %inc322 = add i32 %185, 1, !dbg !6678
  store i32 %inc322, i32* %idx, align 4, !dbg !6678
  br label %sw.epilog, !dbg !6679

sw.bb323:                                         ; preds = %entry
  %186 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6680
  %u324 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %186, i32 0, i32 1, !dbg !6681
  %i2c_write = bitcast %union.ack_req* %u324 to %struct.drm_dp_remote_i2c_write*, !dbg !6682
  %port_number325 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write, i32 0, i32 0, !dbg !6683
  %187 = load i8, i8* %port_number325, align 8, !dbg !6683
  %conv326 = zext i8 %187 to i32, !dbg !6680
  %and327 = and i32 %conv326, 15, !dbg !6684
  %shl328 = shl i32 %and327, 4, !dbg !6685
  %conv329 = trunc i32 %shl328 to i8, !dbg !6686
  %188 = load i8*, i8** %buf, align 8, !dbg !6687
  %189 = load i32, i32* %idx, align 4, !dbg !6688
  %idxprom330 = sext i32 %189 to i64, !dbg !6687
  %arrayidx331 = getelementptr i8, i8* %188, i64 %idxprom330, !dbg !6687
  store i8 %conv329, i8* %arrayidx331, align 1, !dbg !6689
  %190 = load i32, i32* %idx, align 4, !dbg !6690
  %inc332 = add i32 %190, 1, !dbg !6690
  store i32 %inc332, i32* %idx, align 4, !dbg !6690
  %191 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6691
  %u333 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %191, i32 0, i32 1, !dbg !6692
  %i2c_write334 = bitcast %union.ack_req* %u333 to %struct.drm_dp_remote_i2c_write*, !dbg !6693
  %write_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write334, i32 0, i32 1, !dbg !6694
  %192 = load i8, i8* %write_i2c_device_id, align 1, !dbg !6694
  %conv335 = zext i8 %192 to i32, !dbg !6695
  %and336 = and i32 %conv335, 127, !dbg !6696
  %conv337 = trunc i32 %and336 to i8, !dbg !6695
  %193 = load i8*, i8** %buf, align 8, !dbg !6697
  %194 = load i32, i32* %idx, align 4, !dbg !6698
  %idxprom338 = sext i32 %194 to i64, !dbg !6697
  %arrayidx339 = getelementptr i8, i8* %193, i64 %idxprom338, !dbg !6697
  store i8 %conv337, i8* %arrayidx339, align 1, !dbg !6699
  %195 = load i32, i32* %idx, align 4, !dbg !6700
  %inc340 = add i32 %195, 1, !dbg !6700
  store i32 %inc340, i32* %idx, align 4, !dbg !6700
  %196 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6701
  %u341 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %196, i32 0, i32 1, !dbg !6702
  %i2c_write342 = bitcast %union.ack_req* %u341 to %struct.drm_dp_remote_i2c_write*, !dbg !6703
  %num_bytes343 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write342, i32 0, i32 2, !dbg !6704
  %197 = load i8, i8* %num_bytes343, align 2, !dbg !6704
  %198 = load i8*, i8** %buf, align 8, !dbg !6705
  %199 = load i32, i32* %idx, align 4, !dbg !6706
  %idxprom344 = sext i32 %199 to i64, !dbg !6705
  %arrayidx345 = getelementptr i8, i8* %198, i64 %idxprom344, !dbg !6705
  store i8 %197, i8* %arrayidx345, align 1, !dbg !6707
  %200 = load i32, i32* %idx, align 4, !dbg !6708
  %inc346 = add i32 %200, 1, !dbg !6708
  store i32 %inc346, i32* %idx, align 4, !dbg !6708
  %201 = load i8*, i8** %buf, align 8, !dbg !6709
  %202 = load i32, i32* %idx, align 4, !dbg !6710
  %idxprom347 = sext i32 %202 to i64, !dbg !6709
  %arrayidx348 = getelementptr i8, i8* %201, i64 %idxprom347, !dbg !6709
  %203 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6711
  %u349 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %203, i32 0, i32 1, !dbg !6712
  %i2c_write350 = bitcast %union.ack_req* %u349 to %struct.drm_dp_remote_i2c_write*, !dbg !6713
  %bytes351 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write350, i32 0, i32 3, !dbg !6714
  %204 = load i8*, i8** %bytes351, align 8, !dbg !6714
  %205 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6715
  %u352 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %205, i32 0, i32 1, !dbg !6716
  %i2c_write353 = bitcast %union.ack_req* %u352 to %struct.drm_dp_remote_i2c_write*, !dbg !6717
  %num_bytes354 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write353, i32 0, i32 2, !dbg !6718
  %206 = load i8, i8* %num_bytes354, align 2, !dbg !6718
  %conv355 = zext i8 %206 to i64, !dbg !6715
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx348, i8* align 1 %204, i64 %conv355, i1 false), !dbg !6719
  %207 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6720
  %u356 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %207, i32 0, i32 1, !dbg !6721
  %i2c_write357 = bitcast %union.ack_req* %u356 to %struct.drm_dp_remote_i2c_write*, !dbg !6722
  %num_bytes358 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write357, i32 0, i32 2, !dbg !6723
  %208 = load i8, i8* %num_bytes358, align 2, !dbg !6723
  %conv359 = zext i8 %208 to i32, !dbg !6720
  %209 = load i32, i32* %idx, align 4, !dbg !6724
  %add360 = add i32 %209, %conv359, !dbg !6724
  store i32 %add360, i32* %idx, align 4, !dbg !6724
  br label %sw.epilog, !dbg !6725

sw.bb361:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_dp_query_stream_enc_status** %msg362, metadata !6726, metadata !DIExpression()), !dbg !6730
  %210 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6731
  %u363 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %210, i32 0, i32 1, !dbg !6732
  %enc_status = bitcast %union.ack_req* %u363 to %struct.drm_dp_query_stream_enc_status*, !dbg !6733
  store %struct.drm_dp_query_stream_enc_status* %enc_status, %struct.drm_dp_query_stream_enc_status** %msg362, align 8, !dbg !6734
  %211 = load %struct.drm_dp_query_stream_enc_status*, %struct.drm_dp_query_stream_enc_status** %msg362, align 8, !dbg !6735
  %stream_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %211, i32 0, i32 0, !dbg !6736
  %212 = load i8, i8* %stream_id, align 1, !dbg !6736
  %213 = load i8*, i8** %buf, align 8, !dbg !6737
  %214 = load i32, i32* %idx, align 4, !dbg !6738
  %idxprom364 = sext i32 %214 to i64, !dbg !6737
  %arrayidx365 = getelementptr i8, i8* %213, i64 %idxprom364, !dbg !6737
  store i8 %212, i8* %arrayidx365, align 1, !dbg !6739
  %215 = load i32, i32* %idx, align 4, !dbg !6740
  %inc366 = add i32 %215, 1, !dbg !6740
  store i32 %inc366, i32* %idx, align 4, !dbg !6740
  %216 = load i8*, i8** %buf, align 8, !dbg !6741
  %217 = load i32, i32* %idx, align 4, !dbg !6742
  %idxprom367 = sext i32 %217 to i64, !dbg !6741
  %arrayidx368 = getelementptr i8, i8* %216, i64 %idxprom367, !dbg !6741
  %218 = load %struct.drm_dp_query_stream_enc_status*, %struct.drm_dp_query_stream_enc_status** %msg362, align 8, !dbg !6743
  %client_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %218, i32 0, i32 1, !dbg !6744
  %arraydecay369 = getelementptr inbounds [7 x i8], [7 x i8]* %client_id, i64 0, i64 0, !dbg !6745
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx368, i8* align 1 %arraydecay369, i64 7, i1 false), !dbg !6745
  %219 = load i32, i32* %idx, align 4, !dbg !6746
  %conv370 = sext i32 %219 to i64, !dbg !6746
  %add371 = add i64 %conv370, 7, !dbg !6746
  %conv372 = trunc i64 %add371 to i32, !dbg !6746
  store i32 %conv372, i32* %idx, align 4, !dbg !6746
  %220 = load i8*, i8** %buf, align 8, !dbg !6747
  %221 = load i32, i32* %idx, align 4, !dbg !6748
  %idxprom373 = sext i32 %221 to i64, !dbg !6747
  %arrayidx374 = getelementptr i8, i8* %220, i64 %idxprom373, !dbg !6747
  store i8 0, i8* %arrayidx374, align 1, !dbg !6749
  br label %do.body, !dbg !6750

do.body:                                          ; preds = %sw.bb361
  br label %do.end, !dbg !6753

do.end:                                           ; preds = %do.body
  br label %do.body375, !dbg !6750

do.body375:                                       ; preds = %do.end
  br label %do.end376, !dbg !6755

do.end376:                                        ; preds = %do.body375
  br label %do.body377, !dbg !6750

do.body377:                                       ; preds = %do.end376
  br label %do.end378, !dbg !6757

do.end378:                                        ; preds = %do.body377
  br label %do.body379, !dbg !6750

do.body379:                                       ; preds = %do.end378
  br label %do.end380, !dbg !6759

do.end380:                                        ; preds = %do.body379
  br label %do.body381, !dbg !6750

do.body381:                                       ; preds = %do.end380
  br label %do.end382, !dbg !6761

do.end382:                                        ; preds = %do.body381
  %222 = load %struct.drm_dp_query_stream_enc_status*, %struct.drm_dp_query_stream_enc_status** %msg362, align 8, !dbg !6763
  %stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %222, i32 0, i32 2, !dbg !6763
  %223 = load i8, i8* %stream_event, align 1, !dbg !6763
  %conv383 = zext i8 %223 to i64, !dbg !6763
  %shl384 = shl i64 %conv383, 0, !dbg !6763
  %and385 = and i64 %shl384, 3, !dbg !6763
  store i64 %and385, i64* %tmp, align 8, !dbg !6763
  %224 = load i64, i64* %tmp, align 8, !dbg !6763
  %225 = load i8*, i8** %buf, align 8, !dbg !6764
  %226 = load i32, i32* %idx, align 4, !dbg !6765
  %idxprom386 = sext i32 %226 to i64, !dbg !6764
  %arrayidx387 = getelementptr i8, i8* %225, i64 %idxprom386, !dbg !6764
  %227 = load i8, i8* %arrayidx387, align 1, !dbg !6766
  %conv388 = zext i8 %227 to i64, !dbg !6766
  %or389 = or i64 %conv388, %224, !dbg !6766
  %conv390 = trunc i64 %or389 to i8, !dbg !6766
  store i8 %conv390, i8* %arrayidx387, align 1, !dbg !6766
  %228 = load %struct.drm_dp_query_stream_enc_status*, %struct.drm_dp_query_stream_enc_status** %msg362, align 8, !dbg !6767
  %valid_stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %228, i32 0, i32 3, !dbg !6768
  %229 = load i8, i8* %valid_stream_event, align 1, !dbg !6768
  %tobool391 = trunc i8 %229 to i1, !dbg !6768
  %230 = zext i1 %tobool391 to i64, !dbg !6767
  %cond = select i1 %tobool391, i64 4, i64 0, !dbg !6767
  %231 = load i8*, i8** %buf, align 8, !dbg !6769
  %232 = load i32, i32* %idx, align 4, !dbg !6770
  %idxprom393 = sext i32 %232 to i64, !dbg !6769
  %arrayidx394 = getelementptr i8, i8* %231, i64 %idxprom393, !dbg !6769
  %233 = load i8, i8* %arrayidx394, align 1, !dbg !6771
  %conv395 = zext i8 %233 to i64, !dbg !6771
  %or396 = or i64 %conv395, %cond, !dbg !6771
  %conv397 = trunc i64 %or396 to i8, !dbg !6771
  store i8 %conv397, i8* %arrayidx394, align 1, !dbg !6771
  br label %do.body398, !dbg !6772

do.body398:                                       ; preds = %do.end382
  br label %do.end399, !dbg !6775

do.end399:                                        ; preds = %do.body398
  br label %do.body400, !dbg !6772

do.body400:                                       ; preds = %do.end399
  br label %do.end401, !dbg !6777

do.end401:                                        ; preds = %do.body400
  br label %do.body402, !dbg !6772

do.body402:                                       ; preds = %do.end401
  br label %do.end403, !dbg !6779

do.end403:                                        ; preds = %do.body402
  br label %do.body404, !dbg !6772

do.body404:                                       ; preds = %do.end403
  br label %do.end405, !dbg !6781

do.end405:                                        ; preds = %do.body404
  br label %do.body406, !dbg !6772

do.body406:                                       ; preds = %do.end405
  br label %do.end407, !dbg !6783

do.end407:                                        ; preds = %do.body406
  %234 = load %struct.drm_dp_query_stream_enc_status*, %struct.drm_dp_query_stream_enc_status** %msg362, align 8, !dbg !6785
  %stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %234, i32 0, i32 4, !dbg !6785
  %235 = load i8, i8* %stream_behavior, align 1, !dbg !6785
  %conv409 = zext i8 %235 to i64, !dbg !6785
  %shl410 = shl i64 %conv409, 3, !dbg !6785
  %and411 = and i64 %shl410, 24, !dbg !6785
  store i64 %and411, i64* %tmp408, align 8, !dbg !6785
  %236 = load i64, i64* %tmp408, align 8, !dbg !6785
  %237 = load i8*, i8** %buf, align 8, !dbg !6786
  %238 = load i32, i32* %idx, align 4, !dbg !6787
  %idxprom412 = sext i32 %238 to i64, !dbg !6786
  %arrayidx413 = getelementptr i8, i8* %237, i64 %idxprom412, !dbg !6786
  %239 = load i8, i8* %arrayidx413, align 1, !dbg !6788
  %conv414 = zext i8 %239 to i64, !dbg !6788
  %or415 = or i64 %conv414, %236, !dbg !6788
  %conv416 = trunc i64 %or415 to i8, !dbg !6788
  store i8 %conv416, i8* %arrayidx413, align 1, !dbg !6788
  %240 = load %struct.drm_dp_query_stream_enc_status*, %struct.drm_dp_query_stream_enc_status** %msg362, align 8, !dbg !6789
  %valid_stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %240, i32 0, i32 5, !dbg !6790
  %241 = load i8, i8* %valid_stream_behavior, align 1, !dbg !6790
  %conv417 = zext i8 %241 to i32, !dbg !6789
  %tobool418 = icmp ne i32 %conv417, 0, !dbg !6789
  %242 = zext i1 %tobool418 to i64, !dbg !6789
  %cond419 = select i1 %tobool418, i64 32, i64 0, !dbg !6789
  %243 = load i8*, i8** %buf, align 8, !dbg !6791
  %244 = load i32, i32* %idx, align 4, !dbg !6792
  %idxprom420 = sext i32 %244 to i64, !dbg !6791
  %arrayidx421 = getelementptr i8, i8* %243, i64 %idxprom420, !dbg !6791
  %245 = load i8, i8* %arrayidx421, align 1, !dbg !6793
  %conv422 = zext i8 %245 to i64, !dbg !6793
  %or423 = or i64 %conv422, %cond419, !dbg !6793
  %conv424 = trunc i64 %or423 to i8, !dbg !6793
  store i8 %conv424, i8* %arrayidx421, align 1, !dbg !6793
  %246 = load i32, i32* %idx, align 4, !dbg !6794
  %inc425 = add i32 %246, 1, !dbg !6794
  store i32 %inc425, i32* %idx, align 4, !dbg !6794
  br label %sw.epilog, !dbg !6795

sw.epilog:                                        ; preds = %entry, %do.end407, %sw.bb323, %for.end309, %sw.bb156, %sw.bb114, %sw.bb95, %if.end, %sw.bb
  %247 = load i32, i32* %idx, align 4, !dbg !6796
  %conv426 = trunc i32 %247 to i8, !dbg !6796
  %248 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8, !dbg !6797
  %cur_len = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %248, i32 0, i32 3, !dbg !6798
  store i8 %conv426, i8* %cur_len, align 1, !dbg !6799
  ret void, !dbg !6800
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_decode_sideband_req(%struct.drm_dp_sideband_msg_tx* %raw, %struct.drm_dp_sideband_msg_req_body* %req) #0 !dbg !6801 {
entry:
  %retval = alloca i32, align 4
  %raw.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %req.addr = alloca %struct.drm_dp_sideband_msg_req_body*, align 8
  %buf = alloca i8*, align 8
  %i = alloca i32, align 4
  %idx = alloca i32, align 4
  %a = alloca %struct.drm_dp_allocate_payload*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on88 = alloca i32, align 4
  %tmp116 = alloca i64, align 8
  %r = alloca %struct.drm_dp_remote_dpcd_read*, align 8
  %w = alloca %struct.drm_dp_remote_dpcd_write*, align 8
  %r207 = alloca %struct.drm_dp_remote_i2c_read*, align 8
  %tx = alloca %struct.drm_dp_remote_i2c_read_tx*, align 8
  %failed = alloca i8, align 1
  %w293 = alloca %struct.drm_dp_remote_i2c_write*, align 8
  %tmp353 = alloca i64, align 8
  %tmp372 = alloca i64, align 8
  %tmp391 = alloca i64, align 8
  %tmp410 = alloca i64, align 8
  store %struct.drm_dp_sideband_msg_tx* %raw, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %raw.addr, metadata !6807, metadata !DIExpression()), !dbg !6808
  store %struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body** %req.addr, metadata !6809, metadata !DIExpression()), !dbg !6810
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !6811, metadata !DIExpression()), !dbg !6814
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8, !dbg !6815
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %0, i32 0, i32 0, !dbg !6816
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i64 0, i64 0, !dbg !6815
  store i8* %arraydecay, i8** %buf, align 8, !dbg !6814
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6817, metadata !DIExpression()), !dbg !6818
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !6819, metadata !DIExpression()), !dbg !6820
  store i32 0, i32* %idx, align 4, !dbg !6820
  %1 = load i8*, i8** %buf, align 8, !dbg !6821
  %2 = load i32, i32* %idx, align 4, !dbg !6822
  %inc = add i32 %2, 1, !dbg !6822
  store i32 %inc, i32* %idx, align 4, !dbg !6822
  %idxprom = sext i32 %2 to i64, !dbg !6821
  %arrayidx = getelementptr i8, i8* %1, i64 %idxprom, !dbg !6821
  %3 = load i8, i8* %arrayidx, align 1, !dbg !6821
  %conv = zext i8 %3 to i32, !dbg !6821
  %and = and i32 %conv, 127, !dbg !6823
  %conv1 = trunc i32 %and to i8, !dbg !6821
  %4 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6824
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %4, i32 0, i32 0, !dbg !6825
  store i8 %conv1, i8* %req_type, align 8, !dbg !6826
  %5 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6827
  %req_type2 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %5, i32 0, i32 0, !dbg !6828
  %6 = load i8, i8* %req_type2, align 8, !dbg !6828
  %conv3 = zext i8 %6 to i32, !dbg !6827
  switch i32 %conv3, label %sw.epilog [
    i32 16, label %sw.bb
    i32 37, label %sw.bb
    i32 36, label %sw.bb
    i32 17, label %sw.bb9
    i32 18, label %sw.bb79
    i32 32, label %sw.bb131
    i32 33, label %sw.bb163
    i32 34, label %sw.bb206
    i32 35, label %sw.bb292
    i32 56, label %sw.bb323
  ], !dbg !6829

sw.bb:                                            ; preds = %entry, %entry, %entry
  %7 = load i8*, i8** %buf, align 8, !dbg !6830
  %8 = load i32, i32* %idx, align 4, !dbg !6832
  %idxprom4 = sext i32 %8 to i64, !dbg !6830
  %arrayidx5 = getelementptr i8, i8* %7, i64 %idxprom4, !dbg !6830
  %9 = load i8, i8* %arrayidx5, align 1, !dbg !6830
  %conv6 = zext i8 %9 to i32, !dbg !6830
  %shr = ashr i32 %conv6, 4, !dbg !6833
  %and7 = and i32 %shr, 15, !dbg !6834
  %conv8 = trunc i32 %and7 to i8, !dbg !6835
  %10 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6836
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %10, i32 0, i32 1, !dbg !6837
  %port_num = bitcast %union.ack_req* %u to %struct.drm_dp_port_number_req*, !dbg !6838
  %port_number = getelementptr inbounds %struct.drm_dp_port_number_req, %struct.drm_dp_port_number_req* %port_num, i32 0, i32 0, !dbg !6839
  store i8 %conv8, i8* %port_number, align 8, !dbg !6840
  br label %sw.epilog, !dbg !6841

sw.bb9:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_dp_allocate_payload** %a, metadata !6842, metadata !DIExpression()), !dbg !6845
  %11 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6846
  %u10 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %11, i32 0, i32 1, !dbg !6847
  %allocate_payload = bitcast %union.ack_req* %u10 to %struct.drm_dp_allocate_payload*, !dbg !6848
  store %struct.drm_dp_allocate_payload* %allocate_payload, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6845
  %12 = load i8*, i8** %buf, align 8, !dbg !6849
  %13 = load i32, i32* %idx, align 4, !dbg !6850
  %idxprom11 = sext i32 %13 to i64, !dbg !6849
  %arrayidx12 = getelementptr i8, i8* %12, i64 %idxprom11, !dbg !6849
  %14 = load i8, i8* %arrayidx12, align 1, !dbg !6849
  %conv13 = zext i8 %14 to i32, !dbg !6849
  %and14 = and i32 %conv13, 15, !dbg !6851
  %conv15 = trunc i32 %and14 to i8, !dbg !6849
  %15 = load %struct.drm_dp_allocate_payload*, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6852
  %number_sdp_streams = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %15, i32 0, i32 1, !dbg !6853
  store i8 %conv15, i8* %number_sdp_streams, align 1, !dbg !6854
  %16 = load i8*, i8** %buf, align 8, !dbg !6855
  %17 = load i32, i32* %idx, align 4, !dbg !6856
  %idxprom16 = sext i32 %17 to i64, !dbg !6855
  %arrayidx17 = getelementptr i8, i8* %16, i64 %idxprom16, !dbg !6855
  %18 = load i8, i8* %arrayidx17, align 1, !dbg !6855
  %conv18 = zext i8 %18 to i32, !dbg !6855
  %shr19 = ashr i32 %conv18, 4, !dbg !6857
  %and20 = and i32 %shr19, 15, !dbg !6858
  %conv21 = trunc i32 %and20 to i8, !dbg !6859
  %19 = load %struct.drm_dp_allocate_payload*, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6860
  %port_number22 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %19, i32 0, i32 0, !dbg !6861
  store i8 %conv21, i8* %port_number22, align 2, !dbg !6862
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6863, metadata !DIExpression()), !dbg !6865
  %20 = load i8*, i8** %buf, align 8, !dbg !6865
  %21 = load i32, i32* %idx, align 4, !dbg !6865
  %inc23 = add i32 %21, 1, !dbg !6865
  store i32 %inc23, i32* %idx, align 4, !dbg !6865
  %idxprom24 = sext i32 %inc23 to i64, !dbg !6865
  %arrayidx25 = getelementptr i8, i8* %20, i64 %idxprom24, !dbg !6865
  %22 = load i8, i8* %arrayidx25, align 1, !dbg !6865
  %conv26 = zext i8 %22 to i32, !dbg !6865
  %and27 = and i32 %conv26, 128, !dbg !6865
  %tobool = icmp ne i32 %and27, 0, !dbg !6865
  %lnot = xor i1 %tobool, true, !dbg !6865
  %lnot28 = xor i1 %lnot, true, !dbg !6865
  %lnot.ext = zext i1 %lnot28 to i32, !dbg !6865
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6865
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !6866
  %tobool29 = icmp ne i32 %23, 0, !dbg !6866
  %lnot30 = xor i1 %tobool29, true, !dbg !6866
  %lnot32 = xor i1 %lnot30, true, !dbg !6866
  %lnot.ext33 = zext i1 %lnot32 to i32, !dbg !6866
  %conv34 = sext i32 %lnot.ext33 to i64, !dbg !6866
  %tobool35 = icmp ne i64 %conv34, 0, !dbg !6866
  br i1 %tobool35, label %if.then, label %if.end, !dbg !6865

if.then:                                          ; preds = %sw.bb9
  br label %do.body, !dbg !6866

do.body:                                          ; preds = %if.then
  br label %do.body36, !dbg !6868

do.body36:                                        ; preds = %do.body
  br label %do.end, !dbg !6870

do.end:                                           ; preds = %do.body36
  br label %do.body37, !dbg !6868

do.body37:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 472, i32 2305, i64 12) #7, !dbg !6872, !srcloc !6874
  br label %do.end38, !dbg !6872

do.end38:                                         ; preds = %do.body37
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 269) #7, !dbg !6875, !srcloc !6877
  br label %do.body39, !dbg !6868

do.body39:                                        ; preds = %do.end38
  br label %do.end40, !dbg !6878

do.end40:                                         ; preds = %do.body39
  br label %do.end41, !dbg !6868

do.end41:                                         ; preds = %do.end40
  br label %if.end, !dbg !6868

if.end:                                           ; preds = %do.end41, %sw.bb9
  %24 = load i32, i32* %__ret_warn_on, align 4, !dbg !6865
  %tobool42 = icmp ne i32 %24, 0, !dbg !6865
  %lnot43 = xor i1 %tobool42, true, !dbg !6865
  %lnot45 = xor i1 %lnot43, true, !dbg !6865
  %lnot.ext46 = zext i1 %lnot45 to i32, !dbg !6865
  %conv47 = sext i32 %lnot.ext46 to i64, !dbg !6865
  store i64 %conv47, i64* %tmp, align 8, !dbg !6866
  %25 = load i64, i64* %tmp, align 8, !dbg !6865
  %26 = load i8*, i8** %buf, align 8, !dbg !6880
  %27 = load i32, i32* %idx, align 4, !dbg !6881
  %idxprom48 = sext i32 %27 to i64, !dbg !6880
  %arrayidx49 = getelementptr i8, i8* %26, i64 %idxprom48, !dbg !6880
  %28 = load i8, i8* %arrayidx49, align 1, !dbg !6880
  %conv50 = zext i8 %28 to i32, !dbg !6880
  %and51 = and i32 %conv50, 127, !dbg !6882
  %conv52 = trunc i32 %and51 to i8, !dbg !6880
  %29 = load %struct.drm_dp_allocate_payload*, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6883
  %vcpi = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %29, i32 0, i32 2, !dbg !6884
  store i8 %conv52, i8* %vcpi, align 2, !dbg !6885
  %30 = load i8*, i8** %buf, align 8, !dbg !6886
  %31 = load i32, i32* %idx, align 4, !dbg !6887
  %inc53 = add i32 %31, 1, !dbg !6887
  store i32 %inc53, i32* %idx, align 4, !dbg !6887
  %idxprom54 = sext i32 %inc53 to i64, !dbg !6886
  %arrayidx55 = getelementptr i8, i8* %30, i64 %idxprom54, !dbg !6886
  %32 = load i8, i8* %arrayidx55, align 1, !dbg !6886
  %conv56 = zext i8 %32 to i32, !dbg !6886
  %shl = shl i32 %conv56, 8, !dbg !6888
  %conv57 = trunc i32 %shl to i16, !dbg !6886
  %33 = load %struct.drm_dp_allocate_payload*, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6889
  %pbn = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %33, i32 0, i32 3, !dbg !6890
  store i16 %conv57, i16* %pbn, align 2, !dbg !6891
  %34 = load i8*, i8** %buf, align 8, !dbg !6892
  %35 = load i32, i32* %idx, align 4, !dbg !6893
  %inc58 = add i32 %35, 1, !dbg !6893
  store i32 %inc58, i32* %idx, align 4, !dbg !6893
  %idxprom59 = sext i32 %inc58 to i64, !dbg !6892
  %arrayidx60 = getelementptr i8, i8* %34, i64 %idxprom59, !dbg !6892
  %36 = load i8, i8* %arrayidx60, align 1, !dbg !6892
  %conv61 = zext i8 %36 to i32, !dbg !6892
  %37 = load %struct.drm_dp_allocate_payload*, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6894
  %pbn62 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %37, i32 0, i32 3, !dbg !6895
  %38 = load i16, i16* %pbn62, align 2, !dbg !6896
  %conv63 = zext i16 %38 to i32, !dbg !6896
  %or = or i32 %conv63, %conv61, !dbg !6896
  %conv64 = trunc i32 %or to i16, !dbg !6896
  store i16 %conv64, i16* %pbn62, align 2, !dbg !6896
  %39 = load i32, i32* %idx, align 4, !dbg !6897
  %inc65 = add i32 %39, 1, !dbg !6897
  store i32 %inc65, i32* %idx, align 4, !dbg !6897
  store i32 0, i32* %i, align 4, !dbg !6898
  br label %for.cond, !dbg !6900

for.cond:                                         ; preds = %for.inc, %if.end
  %40 = load i32, i32* %i, align 4, !dbg !6901
  %41 = load %struct.drm_dp_allocate_payload*, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6903
  %number_sdp_streams66 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %41, i32 0, i32 1, !dbg !6904
  %42 = load i8, i8* %number_sdp_streams66, align 1, !dbg !6904
  %conv67 = zext i8 %42 to i32, !dbg !6903
  %cmp = icmp slt i32 %40, %conv67, !dbg !6905
  br i1 %cmp, label %for.body, label %for.end, !dbg !6906

for.body:                                         ; preds = %for.cond
  %43 = load i8*, i8** %buf, align 8, !dbg !6907
  %44 = load i32, i32* %idx, align 4, !dbg !6909
  %45 = load i32, i32* %i, align 4, !dbg !6910
  %div = sdiv i32 %45, 2, !dbg !6911
  %add = add i32 %44, %div, !dbg !6912
  %idxprom69 = sext i32 %add to i64, !dbg !6907
  %arrayidx70 = getelementptr i8, i8* %43, i64 %idxprom69, !dbg !6907
  %46 = load i8, i8* %arrayidx70, align 1, !dbg !6907
  %conv71 = zext i8 %46 to i32, !dbg !6907
  %47 = load i32, i32* %i, align 4, !dbg !6913
  %rem = srem i32 %47, 2, !dbg !6914
  %tobool72 = icmp ne i32 %rem, 0, !dbg !6915
  %48 = zext i1 %tobool72 to i64, !dbg !6915
  %cond = select i1 %tobool72, i32 0, i32 4, !dbg !6915
  %shr73 = ashr i32 %conv71, %cond, !dbg !6916
  %and74 = and i32 %shr73, 15, !dbg !6917
  %conv75 = trunc i32 %and74 to i8, !dbg !6918
  %49 = load %struct.drm_dp_allocate_payload*, %struct.drm_dp_allocate_payload** %a, align 8, !dbg !6919
  %sdp_stream_sink = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %49, i32 0, i32 4, !dbg !6920
  %50 = load i32, i32* %i, align 4, !dbg !6921
  %idxprom76 = sext i32 %50 to i64, !dbg !6919
  %arrayidx77 = getelementptr [16 x i8], [16 x i8]* %sdp_stream_sink, i64 0, i64 %idxprom76, !dbg !6919
  store i8 %conv75, i8* %arrayidx77, align 1, !dbg !6922
  br label %for.inc, !dbg !6923

for.inc:                                          ; preds = %for.body
  %51 = load i32, i32* %i, align 4, !dbg !6924
  %inc78 = add i32 %51, 1, !dbg !6924
  store i32 %inc78, i32* %i, align 4, !dbg !6924
  br label %for.cond, !dbg !6925, !llvm.loop !6926

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !6928

sw.bb79:                                          ; preds = %entry
  %52 = load i8*, i8** %buf, align 8, !dbg !6929
  %53 = load i32, i32* %idx, align 4, !dbg !6930
  %idxprom80 = sext i32 %53 to i64, !dbg !6929
  %arrayidx81 = getelementptr i8, i8* %52, i64 %idxprom80, !dbg !6929
  %54 = load i8, i8* %arrayidx81, align 1, !dbg !6929
  %conv82 = zext i8 %54 to i32, !dbg !6929
  %shr83 = ashr i32 %conv82, 4, !dbg !6931
  %and84 = and i32 %shr83, 15, !dbg !6932
  %conv85 = trunc i32 %and84 to i8, !dbg !6933
  %55 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6934
  %u86 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %55, i32 0, i32 1, !dbg !6935
  %query_payload = bitcast %union.ack_req* %u86 to %struct.drm_dp_query_payload*, !dbg !6936
  %port_number87 = getelementptr inbounds %struct.drm_dp_query_payload, %struct.drm_dp_query_payload* %query_payload, i32 0, i32 0, !dbg !6937
  store i8 %conv85, i8* %port_number87, align 8, !dbg !6938
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on88, metadata !6939, metadata !DIExpression()), !dbg !6941
  %56 = load i8*, i8** %buf, align 8, !dbg !6941
  %57 = load i32, i32* %idx, align 4, !dbg !6941
  %inc89 = add i32 %57, 1, !dbg !6941
  store i32 %inc89, i32* %idx, align 4, !dbg !6941
  %idxprom90 = sext i32 %inc89 to i64, !dbg !6941
  %arrayidx91 = getelementptr i8, i8* %56, i64 %idxprom90, !dbg !6941
  %58 = load i8, i8* %arrayidx91, align 1, !dbg !6941
  %conv92 = zext i8 %58 to i32, !dbg !6941
  %and93 = and i32 %conv92, 128, !dbg !6941
  %tobool94 = icmp ne i32 %and93, 0, !dbg !6941
  %lnot95 = xor i1 %tobool94, true, !dbg !6941
  %lnot97 = xor i1 %lnot95, true, !dbg !6941
  %lnot.ext98 = zext i1 %lnot97 to i32, !dbg !6941
  store i32 %lnot.ext98, i32* %__ret_warn_on88, align 4, !dbg !6941
  %59 = load i32, i32* %__ret_warn_on88, align 4, !dbg !6942
  %tobool99 = icmp ne i32 %59, 0, !dbg !6942
  %lnot100 = xor i1 %tobool99, true, !dbg !6942
  %lnot102 = xor i1 %lnot100, true, !dbg !6942
  %lnot.ext103 = zext i1 %lnot102 to i32, !dbg !6942
  %conv104 = sext i32 %lnot.ext103 to i64, !dbg !6942
  %tobool105 = icmp ne i64 %conv104, 0, !dbg !6942
  br i1 %tobool105, label %if.then106, label %if.end115, !dbg !6941

if.then106:                                       ; preds = %sw.bb79
  br label %do.body107, !dbg !6942

do.body107:                                       ; preds = %if.then106
  br label %do.body108, !dbg !6944

do.body108:                                       ; preds = %do.body107
  br label %do.end109, !dbg !6946

do.end109:                                        ; preds = %do.body108
  br label %do.body110, !dbg !6944

do.body110:                                       ; preds = %do.end109
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 487, i32 2305, i64 12) #7, !dbg !6948, !srcloc !6950
  br label %do.end111, !dbg !6948

do.end111:                                        ; preds = %do.body110
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 270) #7, !dbg !6951, !srcloc !6953
  br label %do.body112, !dbg !6944

do.body112:                                       ; preds = %do.end111
  br label %do.end113, !dbg !6954

do.end113:                                        ; preds = %do.body112
  br label %do.end114, !dbg !6944

do.end114:                                        ; preds = %do.end113
  br label %if.end115, !dbg !6944

if.end115:                                        ; preds = %do.end114, %sw.bb79
  %60 = load i32, i32* %__ret_warn_on88, align 4, !dbg !6941
  %tobool117 = icmp ne i32 %60, 0, !dbg !6941
  %lnot118 = xor i1 %tobool117, true, !dbg !6941
  %lnot120 = xor i1 %lnot118, true, !dbg !6941
  %lnot.ext121 = zext i1 %lnot120 to i32, !dbg !6941
  %conv122 = sext i32 %lnot.ext121 to i64, !dbg !6941
  store i64 %conv122, i64* %tmp116, align 8, !dbg !6942
  %61 = load i64, i64* %tmp116, align 8, !dbg !6941
  %62 = load i8*, i8** %buf, align 8, !dbg !6956
  %63 = load i32, i32* %idx, align 4, !dbg !6957
  %idxprom123 = sext i32 %63 to i64, !dbg !6956
  %arrayidx124 = getelementptr i8, i8* %62, i64 %idxprom123, !dbg !6956
  %64 = load i8, i8* %arrayidx124, align 1, !dbg !6956
  %conv125 = zext i8 %64 to i32, !dbg !6956
  %and126 = and i32 %conv125, 127, !dbg !6958
  %conv127 = trunc i32 %and126 to i8, !dbg !6956
  %65 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6959
  %u128 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %65, i32 0, i32 1, !dbg !6960
  %query_payload129 = bitcast %union.ack_req* %u128 to %struct.drm_dp_query_payload*, !dbg !6961
  %vcpi130 = getelementptr inbounds %struct.drm_dp_query_payload, %struct.drm_dp_query_payload* %query_payload129, i32 0, i32 1, !dbg !6962
  store i8 %conv127, i8* %vcpi130, align 1, !dbg !6963
  br label %sw.epilog, !dbg !6964

sw.bb131:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_dp_remote_dpcd_read** %r, metadata !6965, metadata !DIExpression()), !dbg !6968
  %66 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !6969
  %u132 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %66, i32 0, i32 1, !dbg !6970
  %dpcd_read = bitcast %union.ack_req* %u132 to %struct.drm_dp_remote_dpcd_read*, !dbg !6971
  store %struct.drm_dp_remote_dpcd_read* %dpcd_read, %struct.drm_dp_remote_dpcd_read** %r, align 8, !dbg !6968
  %67 = load i8*, i8** %buf, align 8, !dbg !6972
  %68 = load i32, i32* %idx, align 4, !dbg !6973
  %idxprom133 = sext i32 %68 to i64, !dbg !6972
  %arrayidx134 = getelementptr i8, i8* %67, i64 %idxprom133, !dbg !6972
  %69 = load i8, i8* %arrayidx134, align 1, !dbg !6972
  %conv135 = zext i8 %69 to i32, !dbg !6972
  %shr136 = ashr i32 %conv135, 4, !dbg !6974
  %and137 = and i32 %shr136, 15, !dbg !6975
  %conv138 = trunc i32 %and137 to i8, !dbg !6976
  %70 = load %struct.drm_dp_remote_dpcd_read*, %struct.drm_dp_remote_dpcd_read** %r, align 8, !dbg !6977
  %port_number139 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %70, i32 0, i32 0, !dbg !6978
  store i8 %conv138, i8* %port_number139, align 4, !dbg !6979
  %71 = load i8*, i8** %buf, align 8, !dbg !6980
  %72 = load i32, i32* %idx, align 4, !dbg !6981
  %idxprom140 = sext i32 %72 to i64, !dbg !6980
  %arrayidx141 = getelementptr i8, i8* %71, i64 %idxprom140, !dbg !6980
  %73 = load i8, i8* %arrayidx141, align 1, !dbg !6980
  %conv142 = zext i8 %73 to i32, !dbg !6980
  %shl143 = shl i32 %conv142, 16, !dbg !6982
  %and144 = and i32 %shl143, 983040, !dbg !6983
  %74 = load %struct.drm_dp_remote_dpcd_read*, %struct.drm_dp_remote_dpcd_read** %r, align 8, !dbg !6984
  %dpcd_address = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %74, i32 0, i32 1, !dbg !6985
  store i32 %and144, i32* %dpcd_address, align 4, !dbg !6986
  %75 = load i8*, i8** %buf, align 8, !dbg !6987
  %76 = load i32, i32* %idx, align 4, !dbg !6988
  %inc145 = add i32 %76, 1, !dbg !6988
  store i32 %inc145, i32* %idx, align 4, !dbg !6988
  %idxprom146 = sext i32 %inc145 to i64, !dbg !6987
  %arrayidx147 = getelementptr i8, i8* %75, i64 %idxprom146, !dbg !6987
  %77 = load i8, i8* %arrayidx147, align 1, !dbg !6987
  %conv148 = zext i8 %77 to i32, !dbg !6987
  %shl149 = shl i32 %conv148, 8, !dbg !6989
  %and150 = and i32 %shl149, 65280, !dbg !6990
  %78 = load %struct.drm_dp_remote_dpcd_read*, %struct.drm_dp_remote_dpcd_read** %r, align 8, !dbg !6991
  %dpcd_address151 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %78, i32 0, i32 1, !dbg !6992
  %79 = load i32, i32* %dpcd_address151, align 4, !dbg !6993
  %or152 = or i32 %79, %and150, !dbg !6993
  store i32 %or152, i32* %dpcd_address151, align 4, !dbg !6993
  %80 = load i8*, i8** %buf, align 8, !dbg !6994
  %81 = load i32, i32* %idx, align 4, !dbg !6995
  %inc153 = add i32 %81, 1, !dbg !6995
  store i32 %inc153, i32* %idx, align 4, !dbg !6995
  %idxprom154 = sext i32 %inc153 to i64, !dbg !6994
  %arrayidx155 = getelementptr i8, i8* %80, i64 %idxprom154, !dbg !6994
  %82 = load i8, i8* %arrayidx155, align 1, !dbg !6994
  %conv156 = zext i8 %82 to i32, !dbg !6994
  %and157 = and i32 %conv156, 255, !dbg !6996
  %83 = load %struct.drm_dp_remote_dpcd_read*, %struct.drm_dp_remote_dpcd_read** %r, align 8, !dbg !6997
  %dpcd_address158 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %83, i32 0, i32 1, !dbg !6998
  %84 = load i32, i32* %dpcd_address158, align 4, !dbg !6999
  %or159 = or i32 %84, %and157, !dbg !6999
  store i32 %or159, i32* %dpcd_address158, align 4, !dbg !6999
  %85 = load i8*, i8** %buf, align 8, !dbg !7000
  %86 = load i32, i32* %idx, align 4, !dbg !7001
  %inc160 = add i32 %86, 1, !dbg !7001
  store i32 %inc160, i32* %idx, align 4, !dbg !7001
  %idxprom161 = sext i32 %inc160 to i64, !dbg !7000
  %arrayidx162 = getelementptr i8, i8* %85, i64 %idxprom161, !dbg !7000
  %87 = load i8, i8* %arrayidx162, align 1, !dbg !7000
  %88 = load %struct.drm_dp_remote_dpcd_read*, %struct.drm_dp_remote_dpcd_read** %r, align 8, !dbg !7002
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %88, i32 0, i32 2, !dbg !7003
  store i8 %87, i8* %num_bytes, align 4, !dbg !7004
  br label %sw.epilog, !dbg !7005

sw.bb163:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_dp_remote_dpcd_write** %w, metadata !7006, metadata !DIExpression()), !dbg !7009
  %89 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7010
  %u164 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %89, i32 0, i32 1, !dbg !7011
  %dpcd_write = bitcast %union.ack_req* %u164 to %struct.drm_dp_remote_dpcd_write*, !dbg !7012
  store %struct.drm_dp_remote_dpcd_write* %dpcd_write, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7009
  %90 = load i8*, i8** %buf, align 8, !dbg !7013
  %91 = load i32, i32* %idx, align 4, !dbg !7014
  %idxprom165 = sext i32 %91 to i64, !dbg !7013
  %arrayidx166 = getelementptr i8, i8* %90, i64 %idxprom165, !dbg !7013
  %92 = load i8, i8* %arrayidx166, align 1, !dbg !7013
  %conv167 = zext i8 %92 to i32, !dbg !7013
  %shr168 = ashr i32 %conv167, 4, !dbg !7015
  %and169 = and i32 %shr168, 15, !dbg !7016
  %conv170 = trunc i32 %and169 to i8, !dbg !7017
  %93 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7018
  %port_number171 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %93, i32 0, i32 0, !dbg !7019
  store i8 %conv170, i8* %port_number171, align 8, !dbg !7020
  %94 = load i8*, i8** %buf, align 8, !dbg !7021
  %95 = load i32, i32* %idx, align 4, !dbg !7022
  %idxprom172 = sext i32 %95 to i64, !dbg !7021
  %arrayidx173 = getelementptr i8, i8* %94, i64 %idxprom172, !dbg !7021
  %96 = load i8, i8* %arrayidx173, align 1, !dbg !7021
  %conv174 = zext i8 %96 to i32, !dbg !7021
  %shl175 = shl i32 %conv174, 16, !dbg !7023
  %and176 = and i32 %shl175, 983040, !dbg !7024
  %97 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7025
  %dpcd_address177 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %97, i32 0, i32 1, !dbg !7026
  store i32 %and176, i32* %dpcd_address177, align 4, !dbg !7027
  %98 = load i8*, i8** %buf, align 8, !dbg !7028
  %99 = load i32, i32* %idx, align 4, !dbg !7029
  %inc178 = add i32 %99, 1, !dbg !7029
  store i32 %inc178, i32* %idx, align 4, !dbg !7029
  %idxprom179 = sext i32 %inc178 to i64, !dbg !7028
  %arrayidx180 = getelementptr i8, i8* %98, i64 %idxprom179, !dbg !7028
  %100 = load i8, i8* %arrayidx180, align 1, !dbg !7028
  %conv181 = zext i8 %100 to i32, !dbg !7028
  %shl182 = shl i32 %conv181, 8, !dbg !7030
  %and183 = and i32 %shl182, 65280, !dbg !7031
  %101 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7032
  %dpcd_address184 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %101, i32 0, i32 1, !dbg !7033
  %102 = load i32, i32* %dpcd_address184, align 4, !dbg !7034
  %or185 = or i32 %102, %and183, !dbg !7034
  store i32 %or185, i32* %dpcd_address184, align 4, !dbg !7034
  %103 = load i8*, i8** %buf, align 8, !dbg !7035
  %104 = load i32, i32* %idx, align 4, !dbg !7036
  %inc186 = add i32 %104, 1, !dbg !7036
  store i32 %inc186, i32* %idx, align 4, !dbg !7036
  %idxprom187 = sext i32 %inc186 to i64, !dbg !7035
  %arrayidx188 = getelementptr i8, i8* %103, i64 %idxprom187, !dbg !7035
  %105 = load i8, i8* %arrayidx188, align 1, !dbg !7035
  %conv189 = zext i8 %105 to i32, !dbg !7035
  %and190 = and i32 %conv189, 255, !dbg !7037
  %106 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7038
  %dpcd_address191 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %106, i32 0, i32 1, !dbg !7039
  %107 = load i32, i32* %dpcd_address191, align 4, !dbg !7040
  %or192 = or i32 %107, %and190, !dbg !7040
  store i32 %or192, i32* %dpcd_address191, align 4, !dbg !7040
  %108 = load i8*, i8** %buf, align 8, !dbg !7041
  %109 = load i32, i32* %idx, align 4, !dbg !7042
  %inc193 = add i32 %109, 1, !dbg !7042
  store i32 %inc193, i32* %idx, align 4, !dbg !7042
  %idxprom194 = sext i32 %inc193 to i64, !dbg !7041
  %arrayidx195 = getelementptr i8, i8* %108, i64 %idxprom194, !dbg !7041
  %110 = load i8, i8* %arrayidx195, align 1, !dbg !7041
  %111 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7043
  %num_bytes196 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %111, i32 0, i32 2, !dbg !7044
  store i8 %110, i8* %num_bytes196, align 8, !dbg !7045
  %112 = load i8*, i8** %buf, align 8, !dbg !7046
  %113 = load i32, i32* %idx, align 4, !dbg !7047
  %inc197 = add i32 %113, 1, !dbg !7047
  store i32 %inc197, i32* %idx, align 4, !dbg !7047
  %idxprom198 = sext i32 %inc197 to i64, !dbg !7046
  %arrayidx199 = getelementptr i8, i8* %112, i64 %idxprom198, !dbg !7046
  %114 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7048
  %num_bytes200 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %114, i32 0, i32 2, !dbg !7049
  %115 = load i8, i8* %num_bytes200, align 8, !dbg !7049
  %conv201 = zext i8 %115 to i64, !dbg !7048
  %call = call i8* @kmemdup(i8* %arrayidx199, i64 %conv201, i32 3264) #8, !dbg !7050
  %116 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7051
  %bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %116, i32 0, i32 3, !dbg !7052
  store i8* %call, i8** %bytes, align 8, !dbg !7053
  %117 = load %struct.drm_dp_remote_dpcd_write*, %struct.drm_dp_remote_dpcd_write** %w, align 8, !dbg !7054
  %bytes202 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %117, i32 0, i32 3, !dbg !7056
  %118 = load i8*, i8** %bytes202, align 8, !dbg !7056
  %tobool203 = icmp ne i8* %118, null, !dbg !7054
  br i1 %tobool203, label %if.end205, label %if.then204, !dbg !7057

if.then204:                                       ; preds = %sw.bb163
  store i32 -12, i32* %retval, align 4, !dbg !7058
  br label %return, !dbg !7058

if.end205:                                        ; preds = %sw.bb163
  br label %sw.epilog, !dbg !7059

sw.bb206:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_dp_remote_i2c_read** %r207, metadata !7060, metadata !DIExpression()), !dbg !7063
  %119 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7064
  %u208 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %119, i32 0, i32 1, !dbg !7065
  %i2c_read = bitcast %union.ack_req* %u208 to %struct.drm_dp_remote_i2c_read*, !dbg !7066
  store %struct.drm_dp_remote_i2c_read* %i2c_read, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7063
  call void @llvm.dbg.declare(metadata %struct.drm_dp_remote_i2c_read_tx** %tx, metadata !7067, metadata !DIExpression()), !dbg !7069
  call void @llvm.dbg.declare(metadata i8* %failed, metadata !7070, metadata !DIExpression()), !dbg !7071
  store i8 0, i8* %failed, align 1, !dbg !7071
  %120 = load i8*, i8** %buf, align 8, !dbg !7072
  %121 = load i32, i32* %idx, align 4, !dbg !7073
  %idxprom209 = sext i32 %121 to i64, !dbg !7072
  %arrayidx210 = getelementptr i8, i8* %120, i64 %idxprom209, !dbg !7072
  %122 = load i8, i8* %arrayidx210, align 1, !dbg !7072
  %conv211 = zext i8 %122 to i32, !dbg !7072
  %and212 = and i32 %conv211, 3, !dbg !7074
  %conv213 = trunc i32 %and212 to i8, !dbg !7072
  %123 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7075
  %num_transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %123, i32 0, i32 0, !dbg !7076
  store i8 %conv213, i8* %num_transactions, align 8, !dbg !7077
  %124 = load i8*, i8** %buf, align 8, !dbg !7078
  %125 = load i32, i32* %idx, align 4, !dbg !7079
  %idxprom214 = sext i32 %125 to i64, !dbg !7078
  %arrayidx215 = getelementptr i8, i8* %124, i64 %idxprom214, !dbg !7078
  %126 = load i8, i8* %arrayidx215, align 1, !dbg !7078
  %conv216 = zext i8 %126 to i32, !dbg !7078
  %shr217 = ashr i32 %conv216, 4, !dbg !7080
  %and218 = and i32 %shr217, 15, !dbg !7081
  %conv219 = trunc i32 %and218 to i8, !dbg !7082
  %127 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7083
  %port_number220 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %127, i32 0, i32 1, !dbg !7084
  store i8 %conv219, i8* %port_number220, align 1, !dbg !7085
  store i32 0, i32* %i, align 4, !dbg !7086
  br label %for.cond221, !dbg !7088

for.cond221:                                      ; preds = %for.inc264, %sw.bb206
  %128 = load i32, i32* %i, align 4, !dbg !7089
  %129 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7091
  %num_transactions222 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %129, i32 0, i32 0, !dbg !7092
  %130 = load i8, i8* %num_transactions222, align 8, !dbg !7092
  %conv223 = zext i8 %130 to i32, !dbg !7091
  %cmp224 = icmp slt i32 %128, %conv223, !dbg !7093
  br i1 %cmp224, label %for.body226, label %for.end266, !dbg !7094

for.body226:                                      ; preds = %for.cond221
  %131 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7095
  %transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %131, i32 0, i32 2, !dbg !7097
  %132 = load i32, i32* %i, align 4, !dbg !7098
  %idxprom227 = sext i32 %132 to i64, !dbg !7095
  %arrayidx228 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions, i64 0, i64 %idxprom227, !dbg !7095
  store %struct.drm_dp_remote_i2c_read_tx* %arrayidx228, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7099
  %133 = load i8*, i8** %buf, align 8, !dbg !7100
  %134 = load i32, i32* %idx, align 4, !dbg !7101
  %inc229 = add i32 %134, 1, !dbg !7101
  store i32 %inc229, i32* %idx, align 4, !dbg !7101
  %idxprom230 = sext i32 %inc229 to i64, !dbg !7100
  %arrayidx231 = getelementptr i8, i8* %133, i64 %idxprom230, !dbg !7100
  %135 = load i8, i8* %arrayidx231, align 1, !dbg !7100
  %conv232 = zext i8 %135 to i32, !dbg !7100
  %and233 = and i32 %conv232, 127, !dbg !7102
  %conv234 = trunc i32 %and233 to i8, !dbg !7100
  %136 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7103
  %i2c_dev_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %136, i32 0, i32 0, !dbg !7104
  store i8 %conv234, i8* %i2c_dev_id, align 8, !dbg !7105
  %137 = load i8*, i8** %buf, align 8, !dbg !7106
  %138 = load i32, i32* %idx, align 4, !dbg !7107
  %inc235 = add i32 %138, 1, !dbg !7107
  store i32 %inc235, i32* %idx, align 4, !dbg !7107
  %idxprom236 = sext i32 %inc235 to i64, !dbg !7106
  %arrayidx237 = getelementptr i8, i8* %137, i64 %idxprom236, !dbg !7106
  %139 = load i8, i8* %arrayidx237, align 1, !dbg !7106
  %140 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7108
  %num_bytes238 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %140, i32 0, i32 1, !dbg !7109
  store i8 %139, i8* %num_bytes238, align 1, !dbg !7110
  %141 = load i8*, i8** %buf, align 8, !dbg !7111
  %142 = load i32, i32* %idx, align 4, !dbg !7112
  %inc239 = add i32 %142, 1, !dbg !7112
  store i32 %inc239, i32* %idx, align 4, !dbg !7112
  %idxprom240 = sext i32 %inc239 to i64, !dbg !7111
  %arrayidx241 = getelementptr i8, i8* %141, i64 %idxprom240, !dbg !7111
  %143 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7113
  %num_bytes242 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %143, i32 0, i32 1, !dbg !7114
  %144 = load i8, i8* %num_bytes242, align 1, !dbg !7114
  %conv243 = zext i8 %144 to i64, !dbg !7113
  %call244 = call i8* @kmemdup(i8* %arrayidx241, i64 %conv243, i32 3264) #8, !dbg !7115
  %145 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7116
  %bytes245 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %145, i32 0, i32 2, !dbg !7117
  store i8* %call244, i8** %bytes245, align 8, !dbg !7118
  %146 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7119
  %bytes246 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %146, i32 0, i32 2, !dbg !7121
  %147 = load i8*, i8** %bytes246, align 8, !dbg !7121
  %tobool247 = icmp ne i8* %147, null, !dbg !7119
  br i1 %tobool247, label %if.end249, label %if.then248, !dbg !7122

if.then248:                                       ; preds = %for.body226
  store i8 1, i8* %failed, align 1, !dbg !7123
  br label %for.end266, !dbg !7125

if.end249:                                        ; preds = %for.body226
  %148 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7126
  %num_bytes250 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %148, i32 0, i32 1, !dbg !7127
  %149 = load i8, i8* %num_bytes250, align 1, !dbg !7127
  %conv251 = zext i8 %149 to i32, !dbg !7126
  %150 = load i32, i32* %idx, align 4, !dbg !7128
  %add252 = add i32 %150, %conv251, !dbg !7128
  store i32 %add252, i32* %idx, align 4, !dbg !7128
  %151 = load i8*, i8** %buf, align 8, !dbg !7129
  %152 = load i32, i32* %idx, align 4, !dbg !7130
  %idxprom253 = sext i32 %152 to i64, !dbg !7129
  %arrayidx254 = getelementptr i8, i8* %151, i64 %idxprom253, !dbg !7129
  %153 = load i8, i8* %arrayidx254, align 1, !dbg !7129
  %conv255 = zext i8 %153 to i32, !dbg !7129
  %shr256 = ashr i32 %conv255, 5, !dbg !7131
  %and257 = and i32 %shr256, 1, !dbg !7132
  %conv258 = trunc i32 %and257 to i8, !dbg !7133
  %154 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7134
  %no_stop_bit = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %154, i32 0, i32 3, !dbg !7135
  store i8 %conv258, i8* %no_stop_bit, align 8, !dbg !7136
  %155 = load i8*, i8** %buf, align 8, !dbg !7137
  %156 = load i32, i32* %idx, align 4, !dbg !7138
  %idxprom259 = sext i32 %156 to i64, !dbg !7137
  %arrayidx260 = getelementptr i8, i8* %155, i64 %idxprom259, !dbg !7137
  %157 = load i8, i8* %arrayidx260, align 1, !dbg !7137
  %conv261 = zext i8 %157 to i32, !dbg !7137
  %and262 = and i32 %conv261, 15, !dbg !7139
  %conv263 = trunc i32 %and262 to i8, !dbg !7137
  %158 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7140
  %i2c_transaction_delay = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %158, i32 0, i32 4, !dbg !7141
  store i8 %conv263, i8* %i2c_transaction_delay, align 1, !dbg !7142
  br label %for.inc264, !dbg !7143

for.inc264:                                       ; preds = %if.end249
  %159 = load i32, i32* %i, align 4, !dbg !7144
  %inc265 = add i32 %159, 1, !dbg !7144
  store i32 %inc265, i32* %i, align 4, !dbg !7144
  br label %for.cond221, !dbg !7145, !llvm.loop !7146

for.end266:                                       ; preds = %if.then248, %for.cond221
  %160 = load i8, i8* %failed, align 1, !dbg !7148
  %tobool267 = trunc i8 %160 to i1, !dbg !7148
  br i1 %tobool267, label %if.then268, label %if.end282, !dbg !7150

if.then268:                                       ; preds = %for.end266
  store i32 0, i32* %i, align 4, !dbg !7151
  br label %for.cond269, !dbg !7154

for.cond269:                                      ; preds = %for.inc279, %if.then268
  %161 = load i32, i32* %i, align 4, !dbg !7155
  %162 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7157
  %num_transactions270 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %162, i32 0, i32 0, !dbg !7158
  %163 = load i8, i8* %num_transactions270, align 8, !dbg !7158
  %conv271 = zext i8 %163 to i32, !dbg !7157
  %cmp272 = icmp slt i32 %161, %conv271, !dbg !7159
  br i1 %cmp272, label %for.body274, label %for.end281, !dbg !7160

for.body274:                                      ; preds = %for.cond269
  %164 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7161
  %transactions275 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %164, i32 0, i32 2, !dbg !7163
  %165 = load i32, i32* %i, align 4, !dbg !7164
  %idxprom276 = sext i32 %165 to i64, !dbg !7161
  %arrayidx277 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions275, i64 0, i64 %idxprom276, !dbg !7161
  store %struct.drm_dp_remote_i2c_read_tx* %arrayidx277, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7165
  %166 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %tx, align 8, !dbg !7166
  %bytes278 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %166, i32 0, i32 2, !dbg !7167
  %167 = load i8*, i8** %bytes278, align 8, !dbg !7167
  call void @kfree(i8* %167) #8, !dbg !7168
  br label %for.inc279, !dbg !7169

for.inc279:                                       ; preds = %for.body274
  %168 = load i32, i32* %i, align 4, !dbg !7170
  %inc280 = add i32 %168, 1, !dbg !7170
  store i32 %inc280, i32* %i, align 4, !dbg !7170
  br label %for.cond269, !dbg !7171, !llvm.loop !7172

for.end281:                                       ; preds = %for.cond269
  store i32 -12, i32* %retval, align 4, !dbg !7174
  br label %return, !dbg !7174

if.end282:                                        ; preds = %for.end266
  %169 = load i8*, i8** %buf, align 8, !dbg !7175
  %170 = load i32, i32* %idx, align 4, !dbg !7176
  %inc283 = add i32 %170, 1, !dbg !7176
  store i32 %inc283, i32* %idx, align 4, !dbg !7176
  %idxprom284 = sext i32 %inc283 to i64, !dbg !7175
  %arrayidx285 = getelementptr i8, i8* %169, i64 %idxprom284, !dbg !7175
  %171 = load i8, i8* %arrayidx285, align 1, !dbg !7175
  %conv286 = zext i8 %171 to i32, !dbg !7175
  %and287 = and i32 %conv286, 127, !dbg !7177
  %conv288 = trunc i32 %and287 to i8, !dbg !7175
  %172 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7178
  %read_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %172, i32 0, i32 3, !dbg !7179
  store i8 %conv288, i8* %read_i2c_device_id, align 8, !dbg !7180
  %173 = load i8*, i8** %buf, align 8, !dbg !7181
  %174 = load i32, i32* %idx, align 4, !dbg !7182
  %inc289 = add i32 %174, 1, !dbg !7182
  store i32 %inc289, i32* %idx, align 4, !dbg !7182
  %idxprom290 = sext i32 %inc289 to i64, !dbg !7181
  %arrayidx291 = getelementptr i8, i8* %173, i64 %idxprom290, !dbg !7181
  %175 = load i8, i8* %arrayidx291, align 1, !dbg !7181
  %176 = load %struct.drm_dp_remote_i2c_read*, %struct.drm_dp_remote_i2c_read** %r207, align 8, !dbg !7183
  %num_bytes_read = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %176, i32 0, i32 4, !dbg !7184
  store i8 %175, i8* %num_bytes_read, align 1, !dbg !7185
  br label %sw.epilog, !dbg !7186

sw.bb292:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_dp_remote_i2c_write** %w293, metadata !7187, metadata !DIExpression()), !dbg !7190
  %177 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7191
  %u294 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %177, i32 0, i32 1, !dbg !7192
  %i2c_write = bitcast %union.ack_req* %u294 to %struct.drm_dp_remote_i2c_write*, !dbg !7193
  store %struct.drm_dp_remote_i2c_write* %i2c_write, %struct.drm_dp_remote_i2c_write** %w293, align 8, !dbg !7190
  %178 = load i8*, i8** %buf, align 8, !dbg !7194
  %179 = load i32, i32* %idx, align 4, !dbg !7195
  %idxprom295 = sext i32 %179 to i64, !dbg !7194
  %arrayidx296 = getelementptr i8, i8* %178, i64 %idxprom295, !dbg !7194
  %180 = load i8, i8* %arrayidx296, align 1, !dbg !7194
  %conv297 = zext i8 %180 to i32, !dbg !7194
  %shr298 = ashr i32 %conv297, 4, !dbg !7196
  %and299 = and i32 %shr298, 15, !dbg !7197
  %conv300 = trunc i32 %and299 to i8, !dbg !7198
  %181 = load %struct.drm_dp_remote_i2c_write*, %struct.drm_dp_remote_i2c_write** %w293, align 8, !dbg !7199
  %port_number301 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %181, i32 0, i32 0, !dbg !7200
  store i8 %conv300, i8* %port_number301, align 8, !dbg !7201
  %182 = load i8*, i8** %buf, align 8, !dbg !7202
  %183 = load i32, i32* %idx, align 4, !dbg !7203
  %inc302 = add i32 %183, 1, !dbg !7203
  store i32 %inc302, i32* %idx, align 4, !dbg !7203
  %idxprom303 = sext i32 %inc302 to i64, !dbg !7202
  %arrayidx304 = getelementptr i8, i8* %182, i64 %idxprom303, !dbg !7202
  %184 = load i8, i8* %arrayidx304, align 1, !dbg !7202
  %conv305 = zext i8 %184 to i32, !dbg !7202
  %and306 = and i32 %conv305, 127, !dbg !7204
  %conv307 = trunc i32 %and306 to i8, !dbg !7202
  %185 = load %struct.drm_dp_remote_i2c_write*, %struct.drm_dp_remote_i2c_write** %w293, align 8, !dbg !7205
  %write_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %185, i32 0, i32 1, !dbg !7206
  store i8 %conv307, i8* %write_i2c_device_id, align 1, !dbg !7207
  %186 = load i8*, i8** %buf, align 8, !dbg !7208
  %187 = load i32, i32* %idx, align 4, !dbg !7209
  %inc308 = add i32 %187, 1, !dbg !7209
  store i32 %inc308, i32* %idx, align 4, !dbg !7209
  %idxprom309 = sext i32 %inc308 to i64, !dbg !7208
  %arrayidx310 = getelementptr i8, i8* %186, i64 %idxprom309, !dbg !7208
  %188 = load i8, i8* %arrayidx310, align 1, !dbg !7208
  %189 = load %struct.drm_dp_remote_i2c_write*, %struct.drm_dp_remote_i2c_write** %w293, align 8, !dbg !7210
  %num_bytes311 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %189, i32 0, i32 2, !dbg !7211
  store i8 %188, i8* %num_bytes311, align 2, !dbg !7212
  %190 = load i8*, i8** %buf, align 8, !dbg !7213
  %191 = load i32, i32* %idx, align 4, !dbg !7214
  %inc312 = add i32 %191, 1, !dbg !7214
  store i32 %inc312, i32* %idx, align 4, !dbg !7214
  %idxprom313 = sext i32 %inc312 to i64, !dbg !7213
  %arrayidx314 = getelementptr i8, i8* %190, i64 %idxprom313, !dbg !7213
  %192 = load %struct.drm_dp_remote_i2c_write*, %struct.drm_dp_remote_i2c_write** %w293, align 8, !dbg !7215
  %num_bytes315 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %192, i32 0, i32 2, !dbg !7216
  %193 = load i8, i8* %num_bytes315, align 2, !dbg !7216
  %conv316 = zext i8 %193 to i64, !dbg !7215
  %call317 = call i8* @kmemdup(i8* %arrayidx314, i64 %conv316, i32 3264) #8, !dbg !7217
  %194 = load %struct.drm_dp_remote_i2c_write*, %struct.drm_dp_remote_i2c_write** %w293, align 8, !dbg !7218
  %bytes318 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %194, i32 0, i32 3, !dbg !7219
  store i8* %call317, i8** %bytes318, align 8, !dbg !7220
  %195 = load %struct.drm_dp_remote_i2c_write*, %struct.drm_dp_remote_i2c_write** %w293, align 8, !dbg !7221
  %bytes319 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %195, i32 0, i32 3, !dbg !7223
  %196 = load i8*, i8** %bytes319, align 8, !dbg !7223
  %tobool320 = icmp ne i8* %196, null, !dbg !7221
  br i1 %tobool320, label %if.end322, label %if.then321, !dbg !7224

if.then321:                                       ; preds = %sw.bb292
  store i32 -12, i32* %retval, align 4, !dbg !7225
  br label %return, !dbg !7225

if.end322:                                        ; preds = %sw.bb292
  br label %sw.epilog, !dbg !7226

sw.bb323:                                         ; preds = %entry
  %197 = load i8*, i8** %buf, align 8, !dbg !7227
  %198 = load i32, i32* %idx, align 4, !dbg !7228
  %inc324 = add i32 %198, 1, !dbg !7228
  store i32 %inc324, i32* %idx, align 4, !dbg !7228
  %idxprom325 = sext i32 %198 to i64, !dbg !7227
  %arrayidx326 = getelementptr i8, i8* %197, i64 %idxprom325, !dbg !7227
  %199 = load i8, i8* %arrayidx326, align 1, !dbg !7227
  %200 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7229
  %u327 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %200, i32 0, i32 1, !dbg !7230
  %enc_status = bitcast %union.ack_req* %u327 to %struct.drm_dp_query_stream_enc_status*, !dbg !7231
  %stream_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status, i32 0, i32 0, !dbg !7232
  store i8 %199, i8* %stream_id, align 8, !dbg !7233
  store i32 0, i32* %i, align 4, !dbg !7234
  br label %for.cond328, !dbg !7236

for.cond328:                                      ; preds = %for.inc340, %sw.bb323
  %201 = load i32, i32* %i, align 4, !dbg !7237
  %conv329 = sext i32 %201 to i64, !dbg !7237
  %cmp330 = icmp ult i64 %conv329, 7, !dbg !7239
  br i1 %cmp330, label %for.body332, label %for.end342, !dbg !7240

for.body332:                                      ; preds = %for.cond328
  %202 = load i8*, i8** %buf, align 8, !dbg !7241
  %203 = load i32, i32* %idx, align 4, !dbg !7242
  %inc333 = add i32 %203, 1, !dbg !7242
  store i32 %inc333, i32* %idx, align 4, !dbg !7242
  %idxprom334 = sext i32 %203 to i64, !dbg !7241
  %arrayidx335 = getelementptr i8, i8* %202, i64 %idxprom334, !dbg !7241
  %204 = load i8, i8* %arrayidx335, align 1, !dbg !7241
  %205 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7243
  %u336 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %205, i32 0, i32 1, !dbg !7244
  %enc_status337 = bitcast %union.ack_req* %u336 to %struct.drm_dp_query_stream_enc_status*, !dbg !7245
  %client_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status337, i32 0, i32 1, !dbg !7246
  %206 = load i32, i32* %i, align 4, !dbg !7247
  %idxprom338 = sext i32 %206 to i64, !dbg !7243
  %arrayidx339 = getelementptr [7 x i8], [7 x i8]* %client_id, i64 0, i64 %idxprom338, !dbg !7243
  store i8 %204, i8* %arrayidx339, align 1, !dbg !7248
  br label %for.inc340, !dbg !7243

for.inc340:                                       ; preds = %for.body332
  %207 = load i32, i32* %i, align 4, !dbg !7249
  %inc341 = add i32 %207, 1, !dbg !7249
  store i32 %inc341, i32* %i, align 4, !dbg !7249
  br label %for.cond328, !dbg !7250, !llvm.loop !7251

for.end342:                                       ; preds = %for.cond328
  br label %do.body343, !dbg !7253

do.body343:                                       ; preds = %for.end342
  br label %do.end344, !dbg !7256

do.end344:                                        ; preds = %do.body343
  br label %do.body345, !dbg !7253

do.body345:                                       ; preds = %do.end344
  br label %do.end346, !dbg !7258

do.end346:                                        ; preds = %do.body345
  br label %do.body347, !dbg !7253

do.body347:                                       ; preds = %do.end346
  br label %do.end348, !dbg !7260

do.end348:                                        ; preds = %do.body347
  br label %do.body349, !dbg !7253

do.body349:                                       ; preds = %do.end348
  br label %do.end350, !dbg !7262

do.end350:                                        ; preds = %do.body349
  br label %do.body351, !dbg !7253

do.body351:                                       ; preds = %do.end350
  br label %do.end352, !dbg !7264

do.end352:                                        ; preds = %do.body351
  %208 = load i8*, i8** %buf, align 8, !dbg !7266
  %209 = load i32, i32* %idx, align 4, !dbg !7266
  %idxprom354 = sext i32 %209 to i64, !dbg !7266
  %arrayidx355 = getelementptr i8, i8* %208, i64 %idxprom354, !dbg !7266
  %210 = load i8, i8* %arrayidx355, align 1, !dbg !7266
  %conv356 = zext i8 %210 to i64, !dbg !7266
  %and357 = and i64 %conv356, 3, !dbg !7266
  %shr358 = lshr i64 %and357, 0, !dbg !7266
  store i64 %shr358, i64* %tmp353, align 8, !dbg !7266
  %211 = load i64, i64* %tmp353, align 8, !dbg !7266
  %conv359 = trunc i64 %211 to i8, !dbg !7267
  %212 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7268
  %u360 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %212, i32 0, i32 1, !dbg !7269
  %enc_status361 = bitcast %union.ack_req* %u360 to %struct.drm_dp_query_stream_enc_status*, !dbg !7270
  %stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status361, i32 0, i32 2, !dbg !7271
  store i8 %conv359, i8* %stream_event, align 8, !dbg !7272
  br label %do.body362, !dbg !7273

do.body362:                                       ; preds = %do.end352
  br label %do.end363, !dbg !7276

do.end363:                                        ; preds = %do.body362
  br label %do.body364, !dbg !7273

do.body364:                                       ; preds = %do.end363
  br label %do.end365, !dbg !7278

do.end365:                                        ; preds = %do.body364
  br label %do.body366, !dbg !7273

do.body366:                                       ; preds = %do.end365
  br label %do.end367, !dbg !7280

do.end367:                                        ; preds = %do.body366
  br label %do.body368, !dbg !7273

do.body368:                                       ; preds = %do.end367
  br label %do.end369, !dbg !7282

do.end369:                                        ; preds = %do.body368
  br label %do.body370, !dbg !7273

do.body370:                                       ; preds = %do.end369
  br label %do.end371, !dbg !7284

do.end371:                                        ; preds = %do.body370
  %213 = load i8*, i8** %buf, align 8, !dbg !7286
  %214 = load i32, i32* %idx, align 4, !dbg !7286
  %idxprom373 = sext i32 %214 to i64, !dbg !7286
  %arrayidx374 = getelementptr i8, i8* %213, i64 %idxprom373, !dbg !7286
  %215 = load i8, i8* %arrayidx374, align 1, !dbg !7286
  %conv375 = zext i8 %215 to i64, !dbg !7286
  %and376 = and i64 %conv375, 4, !dbg !7286
  %shr377 = lshr i64 %and376, 2, !dbg !7286
  store i64 %shr377, i64* %tmp372, align 8, !dbg !7286
  %216 = load i64, i64* %tmp372, align 8, !dbg !7286
  %tobool378 = icmp ne i64 %216, 0, !dbg !7287
  %217 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7288
  %u379 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %217, i32 0, i32 1, !dbg !7289
  %enc_status380 = bitcast %union.ack_req* %u379 to %struct.drm_dp_query_stream_enc_status*, !dbg !7290
  %valid_stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status380, i32 0, i32 3, !dbg !7291
  %frombool = zext i1 %tobool378 to i8, !dbg !7292
  store i8 %frombool, i8* %valid_stream_event, align 1, !dbg !7292
  br label %do.body381, !dbg !7293

do.body381:                                       ; preds = %do.end371
  br label %do.end382, !dbg !7296

do.end382:                                        ; preds = %do.body381
  br label %do.body383, !dbg !7293

do.body383:                                       ; preds = %do.end382
  br label %do.end384, !dbg !7298

do.end384:                                        ; preds = %do.body383
  br label %do.body385, !dbg !7293

do.body385:                                       ; preds = %do.end384
  br label %do.end386, !dbg !7300

do.end386:                                        ; preds = %do.body385
  br label %do.body387, !dbg !7293

do.body387:                                       ; preds = %do.end386
  br label %do.end388, !dbg !7302

do.end388:                                        ; preds = %do.body387
  br label %do.body389, !dbg !7293

do.body389:                                       ; preds = %do.end388
  br label %do.end390, !dbg !7304

do.end390:                                        ; preds = %do.body389
  %218 = load i8*, i8** %buf, align 8, !dbg !7306
  %219 = load i32, i32* %idx, align 4, !dbg !7306
  %idxprom392 = sext i32 %219 to i64, !dbg !7306
  %arrayidx393 = getelementptr i8, i8* %218, i64 %idxprom392, !dbg !7306
  %220 = load i8, i8* %arrayidx393, align 1, !dbg !7306
  %conv394 = zext i8 %220 to i64, !dbg !7306
  %and395 = and i64 %conv394, 24, !dbg !7306
  %shr396 = lshr i64 %and395, 3, !dbg !7306
  store i64 %shr396, i64* %tmp391, align 8, !dbg !7306
  %221 = load i64, i64* %tmp391, align 8, !dbg !7306
  %conv397 = trunc i64 %221 to i8, !dbg !7307
  %222 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7308
  %u398 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %222, i32 0, i32 1, !dbg !7309
  %enc_status399 = bitcast %union.ack_req* %u398 to %struct.drm_dp_query_stream_enc_status*, !dbg !7310
  %stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status399, i32 0, i32 4, !dbg !7311
  store i8 %conv397, i8* %stream_behavior, align 2, !dbg !7312
  br label %do.body400, !dbg !7313

do.body400:                                       ; preds = %do.end390
  br label %do.end401, !dbg !7316

do.end401:                                        ; preds = %do.body400
  br label %do.body402, !dbg !7313

do.body402:                                       ; preds = %do.end401
  br label %do.end403, !dbg !7318

do.end403:                                        ; preds = %do.body402
  br label %do.body404, !dbg !7313

do.body404:                                       ; preds = %do.end403
  br label %do.end405, !dbg !7320

do.end405:                                        ; preds = %do.body404
  br label %do.body406, !dbg !7313

do.body406:                                       ; preds = %do.end405
  br label %do.end407, !dbg !7322

do.end407:                                        ; preds = %do.body406
  br label %do.body408, !dbg !7313

do.body408:                                       ; preds = %do.end407
  br label %do.end409, !dbg !7324

do.end409:                                        ; preds = %do.body408
  %223 = load i8*, i8** %buf, align 8, !dbg !7326
  %224 = load i32, i32* %idx, align 4, !dbg !7326
  %idxprom411 = sext i32 %224 to i64, !dbg !7326
  %arrayidx412 = getelementptr i8, i8* %223, i64 %idxprom411, !dbg !7326
  %225 = load i8, i8* %arrayidx412, align 1, !dbg !7326
  %conv413 = zext i8 %225 to i64, !dbg !7326
  %and414 = and i64 %conv413, 32, !dbg !7326
  %shr415 = lshr i64 %and414, 5, !dbg !7326
  store i64 %shr415, i64* %tmp410, align 8, !dbg !7326
  %226 = load i64, i64* %tmp410, align 8, !dbg !7326
  %conv416 = trunc i64 %226 to i8, !dbg !7327
  %227 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7328
  %u417 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %227, i32 0, i32 1, !dbg !7329
  %enc_status418 = bitcast %union.ack_req* %u417 to %struct.drm_dp_query_stream_enc_status*, !dbg !7330
  %valid_stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status418, i32 0, i32 5, !dbg !7331
  store i8 %conv416, i8* %valid_stream_behavior, align 1, !dbg !7332
  br label %sw.epilog, !dbg !7333

sw.epilog:                                        ; preds = %entry, %do.end409, %if.end322, %if.end282, %if.end205, %sw.bb131, %if.end115, %for.end, %sw.bb
  store i32 0, i32* %retval, align 4, !dbg !7334
  br label %return, !dbg !7334

return:                                           ; preds = %sw.epilog, %if.then321, %for.end281, %if.then204
  %228 = load i32, i32* %retval, align 4, !dbg !7335
  ret i32 %228, !dbg !7335
}

; Function Attrs: noredzone
declare dso_local i8* @kmemdup(i8*, i64, i32) #3

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_dump_sideband_msg_req_body(%struct.drm_dp_sideband_msg_req_body* %req, i32 %indent, %struct.drm_printer* %printer) #0 !dbg !7336 {
entry:
  %req.addr = alloca %struct.drm_dp_sideband_msg_req_body*, align 8
  %indent.addr = alloca i32, align 4
  %printer.addr = alloca %struct.drm_printer*, align 8
  %i = alloca i32, align 4
  %rtx = alloca %struct.drm_dp_remote_i2c_read_tx*, align 8
  store %struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body** %req.addr, metadata !7339, metadata !DIExpression()), !dbg !7340
  store i32 %indent, i32* %indent.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %indent.addr, metadata !7341, metadata !DIExpression()), !dbg !7342
  store %struct.drm_printer* %printer, %struct.drm_printer** %printer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_printer** %printer.addr, metadata !7343, metadata !DIExpression()), !dbg !7344
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7345, metadata !DIExpression()), !dbg !7346
  %0 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7347
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %0, i32 0, i32 0, !dbg !7349
  %1 = load i8, i8* %req_type, align 8, !dbg !7349
  %conv = zext i8 %1 to i32, !dbg !7347
  %cmp = icmp eq i32 %conv, 1, !dbg !7350
  br i1 %cmp, label %if.then, label %if.end, !dbg !7351

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7352
  %3 = load i32, i32* %indent.addr, align 4, !dbg !7352
  %4 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7352
  %req_type2 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %4, i32 0, i32 0, !dbg !7352
  %5 = load i8, i8* %req_type2, align 8, !dbg !7352
  %call = call i8* @drm_dp_mst_req_type_str(i8 zeroext %5) #8, !dbg !7352
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0), i32 %3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %call) #8, !dbg !7352
  br label %sw.epilog, !dbg !7354

if.end:                                           ; preds = %entry
  %6 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7355
  %7 = load i32, i32* %indent.addr, align 4, !dbg !7355
  %8 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7355
  %req_type3 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %8, i32 0, i32 0, !dbg !7355
  %9 = load i8, i8* %req_type3, align 8, !dbg !7355
  %call4 = call i8* @drm_dp_mst_req_type_str(i8 zeroext %9) #8, !dbg !7355
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %6, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i32 %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i8* %call4) #8, !dbg !7355
  %10 = load i32, i32* %indent.addr, align 4, !dbg !7356
  %inc = add i32 %10, 1, !dbg !7356
  store i32 %inc, i32* %indent.addr, align 4, !dbg !7356
  %11 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7357
  %req_type5 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %11, i32 0, i32 0, !dbg !7358
  %12 = load i8, i8* %req_type5, align 8, !dbg !7358
  %conv6 = zext i8 %12 to i32, !dbg !7357
  switch i32 %conv6, label %sw.default [
    i32 16, label %sw.bb
    i32 37, label %sw.bb
    i32 36, label %sw.bb
    i32 17, label %sw.bb8
    i32 18, label %sw.bb27
    i32 32, label %sw.bb35
    i32 33, label %sw.bb44
    i32 34, label %sw.bb61
    i32 35, label %sw.bb92
    i32 56, label %sw.bb110
  ], !dbg !7359

sw.bb:                                            ; preds = %if.end, %if.end, %if.end
  %13 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7360
  %14 = load i32, i32* %indent.addr, align 4, !dbg !7360
  %15 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7360
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %15, i32 0, i32 1, !dbg !7360
  %port_num = bitcast %union.ack_req* %u to %struct.drm_dp_port_number_req*, !dbg !7360
  %port_number = getelementptr inbounds %struct.drm_dp_port_number_req, %struct.drm_dp_port_number_req* %port_num, i32 0, i32 0, !dbg !7360
  %16 = load i8, i8* %port_number, align 8, !dbg !7360
  %conv7 = zext i8 %16 to i32, !dbg !7360
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.4, i64 0, i64 0), i32 %14, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv7) #8, !dbg !7360
  br label %sw.epilog, !dbg !7362

sw.bb8:                                           ; preds = %if.end
  %17 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7363
  %18 = load i32, i32* %indent.addr, align 4, !dbg !7363
  %19 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7363
  %u9 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %19, i32 0, i32 1, !dbg !7363
  %allocate_payload = bitcast %union.ack_req* %u9 to %struct.drm_dp_allocate_payload*, !dbg !7363
  %port_number10 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload, i32 0, i32 0, !dbg !7363
  %20 = load i8, i8* %port_number10, align 8, !dbg !7363
  %conv11 = zext i8 %20 to i32, !dbg !7363
  %21 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7363
  %u12 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %21, i32 0, i32 1, !dbg !7363
  %allocate_payload13 = bitcast %union.ack_req* %u12 to %struct.drm_dp_allocate_payload*, !dbg !7363
  %vcpi = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload13, i32 0, i32 2, !dbg !7363
  %22 = load i8, i8* %vcpi, align 2, !dbg !7363
  %conv14 = zext i8 %22 to i32, !dbg !7363
  %23 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7363
  %u15 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %23, i32 0, i32 1, !dbg !7363
  %allocate_payload16 = bitcast %union.ack_req* %u15 to %struct.drm_dp_allocate_payload*, !dbg !7363
  %pbn = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload16, i32 0, i32 3, !dbg !7363
  %24 = load i16, i16* %pbn, align 4, !dbg !7363
  %conv17 = zext i16 %24 to i32, !dbg !7363
  %25 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7363
  %u18 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %25, i32 0, i32 1, !dbg !7363
  %allocate_payload19 = bitcast %union.ack_req* %u18 to %struct.drm_dp_allocate_payload*, !dbg !7363
  %number_sdp_streams = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload19, i32 0, i32 1, !dbg !7363
  %26 = load i8, i8* %number_sdp_streams, align 1, !dbg !7363
  %conv20 = zext i8 %26 to i32, !dbg !7363
  %27 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7363
  %u21 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %27, i32 0, i32 1, !dbg !7363
  %allocate_payload22 = bitcast %union.ack_req* %u21 to %struct.drm_dp_allocate_payload*, !dbg !7363
  %number_sdp_streams23 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload22, i32 0, i32 1, !dbg !7363
  %28 = load i8, i8* %number_sdp_streams23, align 1, !dbg !7363
  %conv24 = zext i8 %28 to i32, !dbg !7363
  %29 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7363
  %u25 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %29, i32 0, i32 1, !dbg !7363
  %allocate_payload26 = bitcast %union.ack_req* %u25 to %struct.drm_dp_allocate_payload*, !dbg !7363
  %sdp_stream_sink = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload26, i32 0, i32 4, !dbg !7363
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %sdp_stream_sink, i64 0, i64 0, !dbg !7363
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %17, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5, i64 0, i64 0), i32 %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv11, i32 %conv14, i32 %conv17, i32 %conv20, i32 %conv24, i8* %arraydecay) #8, !dbg !7363
  br label %sw.epilog, !dbg !7364

sw.bb27:                                          ; preds = %if.end
  %30 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7365
  %31 = load i32, i32* %indent.addr, align 4, !dbg !7365
  %32 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7365
  %u28 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %32, i32 0, i32 1, !dbg !7365
  %query_payload = bitcast %union.ack_req* %u28 to %struct.drm_dp_query_payload*, !dbg !7365
  %port_number29 = getelementptr inbounds %struct.drm_dp_query_payload, %struct.drm_dp_query_payload* %query_payload, i32 0, i32 0, !dbg !7365
  %33 = load i8, i8* %port_number29, align 8, !dbg !7365
  %conv30 = zext i8 %33 to i32, !dbg !7365
  %34 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7365
  %u31 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %34, i32 0, i32 1, !dbg !7365
  %query_payload32 = bitcast %union.ack_req* %u31 to %struct.drm_dp_query_payload*, !dbg !7365
  %vcpi33 = getelementptr inbounds %struct.drm_dp_query_payload, %struct.drm_dp_query_payload* %query_payload32, i32 0, i32 1, !dbg !7365
  %35 = load i8, i8* %vcpi33, align 1, !dbg !7365
  %conv34 = zext i8 %35 to i32, !dbg !7365
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %30, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i32 %31, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv30, i32 %conv34) #8, !dbg !7365
  br label %sw.epilog, !dbg !7366

sw.bb35:                                          ; preds = %if.end
  %36 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7367
  %37 = load i32, i32* %indent.addr, align 4, !dbg !7367
  %38 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7367
  %u36 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %38, i32 0, i32 1, !dbg !7367
  %dpcd_read = bitcast %union.ack_req* %u36 to %struct.drm_dp_remote_dpcd_read*, !dbg !7367
  %port_number37 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read, i32 0, i32 0, !dbg !7367
  %39 = load i8, i8* %port_number37, align 8, !dbg !7367
  %conv38 = zext i8 %39 to i32, !dbg !7367
  %40 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7367
  %u39 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %40, i32 0, i32 1, !dbg !7367
  %dpcd_read40 = bitcast %union.ack_req* %u39 to %struct.drm_dp_remote_dpcd_read*, !dbg !7367
  %dpcd_address = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read40, i32 0, i32 1, !dbg !7367
  %41 = load i32, i32* %dpcd_address, align 4, !dbg !7367
  %42 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7367
  %u41 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %42, i32 0, i32 1, !dbg !7367
  %dpcd_read42 = bitcast %union.ack_req* %u41 to %struct.drm_dp_remote_dpcd_read*, !dbg !7367
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read42, i32 0, i32 2, !dbg !7367
  %43 = load i8, i8* %num_bytes, align 8, !dbg !7367
  %conv43 = zext i8 %43 to i32, !dbg !7367
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %36, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.7, i64 0, i64 0), i32 %37, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv38, i32 %41, i32 %conv43) #8, !dbg !7367
  br label %sw.epilog, !dbg !7368

sw.bb44:                                          ; preds = %if.end
  %44 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7369
  %45 = load i32, i32* %indent.addr, align 4, !dbg !7369
  %46 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7369
  %u45 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %46, i32 0, i32 1, !dbg !7369
  %dpcd_write = bitcast %union.ack_req* %u45 to %struct.drm_dp_remote_dpcd_write*, !dbg !7369
  %port_number46 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write, i32 0, i32 0, !dbg !7369
  %47 = load i8, i8* %port_number46, align 8, !dbg !7369
  %conv47 = zext i8 %47 to i32, !dbg !7369
  %48 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7369
  %u48 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %48, i32 0, i32 1, !dbg !7369
  %dpcd_write49 = bitcast %union.ack_req* %u48 to %struct.drm_dp_remote_dpcd_write*, !dbg !7369
  %dpcd_address50 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write49, i32 0, i32 1, !dbg !7369
  %49 = load i32, i32* %dpcd_address50, align 4, !dbg !7369
  %50 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7369
  %u51 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %50, i32 0, i32 1, !dbg !7369
  %dpcd_write52 = bitcast %union.ack_req* %u51 to %struct.drm_dp_remote_dpcd_write*, !dbg !7369
  %num_bytes53 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write52, i32 0, i32 2, !dbg !7369
  %51 = load i8, i8* %num_bytes53, align 8, !dbg !7369
  %conv54 = zext i8 %51 to i32, !dbg !7369
  %52 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7369
  %u55 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %52, i32 0, i32 1, !dbg !7369
  %dpcd_write56 = bitcast %union.ack_req* %u55 to %struct.drm_dp_remote_dpcd_write*, !dbg !7369
  %num_bytes57 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write56, i32 0, i32 2, !dbg !7369
  %53 = load i8, i8* %num_bytes57, align 8, !dbg !7369
  %conv58 = zext i8 %53 to i32, !dbg !7369
  %54 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7369
  %u59 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %54, i32 0, i32 1, !dbg !7369
  %dpcd_write60 = bitcast %union.ack_req* %u59 to %struct.drm_dp_remote_dpcd_write*, !dbg !7369
  %bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write60, i32 0, i32 3, !dbg !7369
  %55 = load i8*, i8** %bytes, align 8, !dbg !7369
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %44, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.8, i64 0, i64 0), i32 %45, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv47, i32 %49, i32 %conv54, i32 %conv58, i8* %55) #8, !dbg !7369
  br label %sw.epilog, !dbg !7370

sw.bb61:                                          ; preds = %if.end
  %56 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7371
  %57 = load i32, i32* %indent.addr, align 4, !dbg !7371
  %58 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7371
  %u62 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %58, i32 0, i32 1, !dbg !7371
  %i2c_read = bitcast %union.ack_req* %u62 to %struct.drm_dp_remote_i2c_read*, !dbg !7371
  %port_number63 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read, i32 0, i32 1, !dbg !7371
  %59 = load i8, i8* %port_number63, align 1, !dbg !7371
  %conv64 = zext i8 %59 to i32, !dbg !7371
  %60 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7371
  %u65 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %60, i32 0, i32 1, !dbg !7371
  %i2c_read66 = bitcast %union.ack_req* %u65 to %struct.drm_dp_remote_i2c_read*, !dbg !7371
  %num_transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read66, i32 0, i32 0, !dbg !7371
  %61 = load i8, i8* %num_transactions, align 8, !dbg !7371
  %conv67 = zext i8 %61 to i32, !dbg !7371
  %62 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7371
  %u68 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %62, i32 0, i32 1, !dbg !7371
  %i2c_read69 = bitcast %union.ack_req* %u68 to %struct.drm_dp_remote_i2c_read*, !dbg !7371
  %read_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read69, i32 0, i32 3, !dbg !7371
  %63 = load i8, i8* %read_i2c_device_id, align 8, !dbg !7371
  %conv70 = zext i8 %63 to i32, !dbg !7371
  %64 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7371
  %u71 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %64, i32 0, i32 1, !dbg !7371
  %i2c_read72 = bitcast %union.ack_req* %u71 to %struct.drm_dp_remote_i2c_read*, !dbg !7371
  %num_bytes_read = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read72, i32 0, i32 4, !dbg !7371
  %65 = load i8, i8* %num_bytes_read, align 1, !dbg !7371
  %conv73 = zext i8 %65 to i32, !dbg !7371
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %56, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i32 %57, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv64, i32 %conv67, i32 %conv70, i32 %conv73) #8, !dbg !7371
  %66 = load i32, i32* %indent.addr, align 4, !dbg !7372
  %inc74 = add i32 %66, 1, !dbg !7372
  store i32 %inc74, i32* %indent.addr, align 4, !dbg !7372
  store i32 0, i32* %i, align 4, !dbg !7373
  br label %for.cond, !dbg !7375

for.cond:                                         ; preds = %for.inc, %sw.bb61
  %67 = load i32, i32* %i, align 4, !dbg !7376
  %68 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7378
  %u75 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %68, i32 0, i32 1, !dbg !7379
  %i2c_read76 = bitcast %union.ack_req* %u75 to %struct.drm_dp_remote_i2c_read*, !dbg !7380
  %num_transactions77 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read76, i32 0, i32 0, !dbg !7381
  %69 = load i8, i8* %num_transactions77, align 8, !dbg !7381
  %conv78 = zext i8 %69 to i32, !dbg !7378
  %cmp79 = icmp slt i32 %67, %conv78, !dbg !7382
  br i1 %cmp79, label %for.body, label %for.end, !dbg !7383

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_dp_remote_i2c_read_tx** %rtx, metadata !7384, metadata !DIExpression()), !dbg !7388
  %70 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7389
  %u81 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %70, i32 0, i32 1, !dbg !7390
  %i2c_read82 = bitcast %union.ack_req* %u81 to %struct.drm_dp_remote_i2c_read*, !dbg !7391
  %transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read82, i32 0, i32 2, !dbg !7392
  %71 = load i32, i32* %i, align 4, !dbg !7393
  %idxprom = sext i32 %71 to i64, !dbg !7389
  %arrayidx = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions, i64 0, i64 %idxprom, !dbg !7389
  store %struct.drm_dp_remote_i2c_read_tx* %arrayidx, %struct.drm_dp_remote_i2c_read_tx** %rtx, align 8, !dbg !7388
  %72 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7394
  %73 = load i32, i32* %indent.addr, align 4, !dbg !7394
  %74 = load i32, i32* %i, align 4, !dbg !7394
  %75 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %rtx, align 8, !dbg !7394
  %i2c_dev_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %75, i32 0, i32 0, !dbg !7394
  %76 = load i8, i8* %i2c_dev_id, align 8, !dbg !7394
  %conv83 = zext i8 %76 to i32, !dbg !7394
  %77 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %rtx, align 8, !dbg !7394
  %num_bytes84 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %77, i32 0, i32 1, !dbg !7394
  %78 = load i8, i8* %num_bytes84, align 1, !dbg !7394
  %conv85 = zext i8 %78 to i32, !dbg !7394
  %79 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %rtx, align 8, !dbg !7394
  %no_stop_bit = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %79, i32 0, i32 3, !dbg !7394
  %80 = load i8, i8* %no_stop_bit, align 8, !dbg !7394
  %conv86 = zext i8 %80 to i32, !dbg !7394
  %81 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %rtx, align 8, !dbg !7394
  %i2c_transaction_delay = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %81, i32 0, i32 4, !dbg !7394
  %82 = load i8, i8* %i2c_transaction_delay, align 1, !dbg !7394
  %conv87 = zext i8 %82 to i32, !dbg !7394
  %83 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %rtx, align 8, !dbg !7394
  %num_bytes88 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %83, i32 0, i32 1, !dbg !7394
  %84 = load i8, i8* %num_bytes88, align 1, !dbg !7394
  %conv89 = zext i8 %84 to i32, !dbg !7394
  %85 = load %struct.drm_dp_remote_i2c_read_tx*, %struct.drm_dp_remote_i2c_read_tx** %rtx, align 8, !dbg !7394
  %bytes90 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %85, i32 0, i32 2, !dbg !7394
  %86 = load i8*, i8** %bytes90, align 8, !dbg !7394
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %72, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.10, i64 0, i64 0), i32 %73, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %74, i32 %conv83, i32 %conv85, i32 %conv86, i32 %conv87, i32 %conv89, i8* %86) #8, !dbg !7394
  br label %for.inc, !dbg !7395

for.inc:                                          ; preds = %for.body
  %87 = load i32, i32* %i, align 4, !dbg !7396
  %inc91 = add i32 %87, 1, !dbg !7396
  store i32 %inc91, i32* %i, align 4, !dbg !7396
  br label %for.cond, !dbg !7397, !llvm.loop !7398

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !7400

sw.bb92:                                          ; preds = %if.end
  %88 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7401
  %89 = load i32, i32* %indent.addr, align 4, !dbg !7401
  %90 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7401
  %u93 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %90, i32 0, i32 1, !dbg !7401
  %i2c_write = bitcast %union.ack_req* %u93 to %struct.drm_dp_remote_i2c_write*, !dbg !7401
  %port_number94 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write, i32 0, i32 0, !dbg !7401
  %91 = load i8, i8* %port_number94, align 8, !dbg !7401
  %conv95 = zext i8 %91 to i32, !dbg !7401
  %92 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7401
  %u96 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %92, i32 0, i32 1, !dbg !7401
  %i2c_write97 = bitcast %union.ack_req* %u96 to %struct.drm_dp_remote_i2c_write*, !dbg !7401
  %write_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write97, i32 0, i32 1, !dbg !7401
  %93 = load i8, i8* %write_i2c_device_id, align 1, !dbg !7401
  %conv98 = zext i8 %93 to i32, !dbg !7401
  %94 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7401
  %u99 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %94, i32 0, i32 1, !dbg !7401
  %i2c_write100 = bitcast %union.ack_req* %u99 to %struct.drm_dp_remote_i2c_write*, !dbg !7401
  %num_bytes101 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write100, i32 0, i32 2, !dbg !7401
  %95 = load i8, i8* %num_bytes101, align 2, !dbg !7401
  %conv102 = zext i8 %95 to i32, !dbg !7401
  %96 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7401
  %u103 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %96, i32 0, i32 1, !dbg !7401
  %i2c_write104 = bitcast %union.ack_req* %u103 to %struct.drm_dp_remote_i2c_write*, !dbg !7401
  %num_bytes105 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write104, i32 0, i32 2, !dbg !7401
  %97 = load i8, i8* %num_bytes105, align 2, !dbg !7401
  %conv106 = zext i8 %97 to i32, !dbg !7401
  %98 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7401
  %u107 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %98, i32 0, i32 1, !dbg !7401
  %i2c_write108 = bitcast %union.ack_req* %u107 to %struct.drm_dp_remote_i2c_write*, !dbg !7401
  %bytes109 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write108, i32 0, i32 3, !dbg !7401
  %99 = load i8*, i8** %bytes109, align 8, !dbg !7401
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %88, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0), i32 %89, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv95, i32 %conv98, i32 %conv102, i32 %conv106, i8* %99) #8, !dbg !7401
  br label %sw.epilog, !dbg !7402

sw.bb110:                                         ; preds = %if.end
  %100 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7403
  %101 = load i32, i32* %indent.addr, align 4, !dbg !7403
  %102 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7403
  %u111 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %102, i32 0, i32 1, !dbg !7403
  %enc_status = bitcast %union.ack_req* %u111 to %struct.drm_dp_query_stream_enc_status*, !dbg !7403
  %stream_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status, i32 0, i32 0, !dbg !7403
  %103 = load i8, i8* %stream_id, align 8, !dbg !7403
  %conv112 = zext i8 %103 to i32, !dbg !7403
  %104 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7403
  %u113 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %104, i32 0, i32 1, !dbg !7403
  %enc_status114 = bitcast %union.ack_req* %u113 to %struct.drm_dp_query_stream_enc_status*, !dbg !7403
  %client_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status114, i32 0, i32 1, !dbg !7403
  %arraydecay115 = getelementptr inbounds [7 x i8], [7 x i8]* %client_id, i64 0, i64 0, !dbg !7403
  %105 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7403
  %u116 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %105, i32 0, i32 1, !dbg !7403
  %enc_status117 = bitcast %union.ack_req* %u116 to %struct.drm_dp_query_stream_enc_status*, !dbg !7403
  %stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status117, i32 0, i32 2, !dbg !7403
  %106 = load i8, i8* %stream_event, align 8, !dbg !7403
  %conv118 = zext i8 %106 to i32, !dbg !7403
  %107 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7403
  %u119 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %107, i32 0, i32 1, !dbg !7403
  %enc_status120 = bitcast %union.ack_req* %u119 to %struct.drm_dp_query_stream_enc_status*, !dbg !7403
  %valid_stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status120, i32 0, i32 3, !dbg !7403
  %108 = load i8, i8* %valid_stream_event, align 1, !dbg !7403
  %tobool = trunc i8 %108 to i1, !dbg !7403
  %conv121 = zext i1 %tobool to i32, !dbg !7403
  %109 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7403
  %u122 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %109, i32 0, i32 1, !dbg !7403
  %enc_status123 = bitcast %union.ack_req* %u122 to %struct.drm_dp_query_stream_enc_status*, !dbg !7403
  %stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status123, i32 0, i32 4, !dbg !7403
  %110 = load i8, i8* %stream_behavior, align 2, !dbg !7403
  %conv124 = zext i8 %110 to i32, !dbg !7403
  %111 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %req.addr, align 8, !dbg !7403
  %u125 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %111, i32 0, i32 1, !dbg !7403
  %enc_status126 = bitcast %union.ack_req* %u125 to %struct.drm_dp_query_stream_enc_status*, !dbg !7403
  %valid_stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status126, i32 0, i32 5, !dbg !7403
  %112 = load i8, i8* %valid_stream_behavior, align 1, !dbg !7403
  %conv127 = zext i8 %112 to i32, !dbg !7403
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %100, i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.12, i64 0, i64 0), i32 %101, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0), i32 %conv112, i32 7, i8* %arraydecay115, i32 %conv118, i32 %conv121, i32 %conv124, i32 %conv127) #8, !dbg !7403
  br label %sw.epilog, !dbg !7404

sw.default:                                       ; preds = %if.end
  %113 = load %struct.drm_printer*, %struct.drm_printer** %printer.addr, align 8, !dbg !7405
  %114 = load i32, i32* %indent.addr, align 4, !dbg !7405
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %113, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i64 0, i64 0), i32 %114, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.2, i64 0, i64 0)) #8, !dbg !7405
  br label %sw.epilog, !dbg !7406

sw.epilog:                                        ; preds = %if.then, %sw.default, %sw.bb110, %sw.bb92, %for.end, %sw.bb44, %sw.bb35, %sw.bb27, %sw.bb8, %sw.bb
  ret void, !dbg !7407
}

; Function Attrs: noredzone
declare dso_local void @drm_printf(%struct.drm_printer*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @drm_dp_mst_req_type_str(i8 zeroext %req_type) #0 !dbg !6237 {
entry:
  %retval = alloca i8*, align 8
  %req_type.addr = alloca i8, align 1
  store i8 %req_type, i8* %req_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %req_type.addr, metadata !7408, metadata !DIExpression()), !dbg !7409
  %0 = load i8, i8* %req_type.addr, align 1, !dbg !7410
  %conv = zext i8 %0 to i64, !dbg !7410
  %cmp = icmp uge i64 %conv, 57, !dbg !7412
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7413

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %req_type.addr, align 1, !dbg !7414
  %idxprom = zext i8 %1 to i64, !dbg !7415
  %arrayidx = getelementptr [57 x i8*], [57 x i8*]* @drm_dp_mst_req_type_str.req_type_str, i64 0, i64 %idxprom, !dbg !7415
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !7415
  %tobool = icmp ne i8* %2, null, !dbg !7415
  br i1 %tobool, label %if.end, label %if.then, !dbg !7416

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i8** %retval, align 8, !dbg !7417
  br label %return, !dbg !7417

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i8, i8* %req_type.addr, align 1, !dbg !7418
  %idxprom2 = zext i8 %3 to i64, !dbg !7419
  %arrayidx3 = getelementptr [57 x i8*], [57 x i8*]* @drm_dp_mst_req_type_str.req_type_str, i64 0, i64 %idxprom2, !dbg !7419
  %4 = load i8*, i8** %arrayidx3, align 8, !dbg !7419
  store i8* %4, i8** %retval, align 8, !dbg !7420
  br label %return, !dbg !7420

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !7421
  ret i8* %5, !dbg !7421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_get_port_malloc(%struct.drm_dp_mst_port* %port) #0 !dbg !7422 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7427
  %malloc_kref = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 1, !dbg !7428
  call void @kref_get(%struct.kref* %malloc_kref) #8, !dbg !7429
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7430
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7430
  %malloc_kref1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 1, !dbg !7430
  %call = call i32 @kref_read(%struct.kref* %malloc_kref1) #8, !dbg !7430
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), %struct.drm_dp_mst_port* %1, i32 %call) #8, !dbg !7430
  ret void, !dbg !7431
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_get(%struct.kref* %kref) #0 !dbg !7432 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7433, metadata !DIExpression()), !dbg !7434
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7435
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7436
  call void @refcount_inc(%struct.refcount_struct* %refcount) #8, !dbg !7437
  ret void, !dbg !7438
}

; Function Attrs: noredzone
declare dso_local void @__drm_dbg(i32, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_read(%struct.kref* %kref) #0 !dbg !7439 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7444, metadata !DIExpression()), !dbg !7445
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7446
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7447
  %call = call i32 @refcount_read(%struct.refcount_struct* %refcount) #8, !dbg !7448
  ret i32 %call, !dbg !7449
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %port) #0 !dbg !7450 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7451, metadata !DIExpression()), !dbg !7452
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7453
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7453
  %malloc_kref = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 1, !dbg !7453
  %call = call i32 @kref_read(%struct.kref* %malloc_kref) #8, !dbg !7453
  %sub = sub i32 %call, 1, !dbg !7453
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), %struct.drm_dp_mst_port* %0, i32 %sub) #8, !dbg !7453
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7454
  %malloc_kref1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 1, !dbg !7455
  %call2 = call i32 @kref_put(%struct.kref* %malloc_kref1, void (%struct.kref*)* @drm_dp_free_mst_port) #8, !dbg !7456
  ret void, !dbg !7457
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_put(%struct.kref* %kref, void (%struct.kref*)* %release) #0 !dbg !7458 {
entry:
  %retval = alloca i32, align 4
  %kref.addr = alloca %struct.kref*, align 8
  %release.addr = alloca void (%struct.kref*)*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7461, metadata !DIExpression()), !dbg !7462
  store void (%struct.kref*)* %release, void (%struct.kref*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.kref*)** %release.addr, metadata !7463, metadata !DIExpression()), !dbg !7464
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7465
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !7467
  %call = call zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %refcount) #8, !dbg !7468
  br i1 %call, label %if.then, label %if.end, !dbg !7469

if.then:                                          ; preds = %entry
  %1 = load void (%struct.kref*)*, void (%struct.kref*)** %release.addr, align 8, !dbg !7470
  %2 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7472
  call void %1(%struct.kref* %2) #8, !dbg !7470
  store i32 1, i32* %retval, align 4, !dbg !7473
  br label %return, !dbg !7473

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7474
  br label %return, !dbg !7474

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !7475
  ret i32 %3, !dbg !7475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_free_mst_port(%struct.kref* %kref) #0 !dbg !7476 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !7477, metadata !DIExpression()), !dbg !7478
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !7479, metadata !DIExpression()), !dbg !7480
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7481, metadata !DIExpression()), !dbg !7483
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !7483
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !7483
  store i8* %1, i8** %__mptr, align 8, !dbg !7483
  br label %do.body, !dbg !7483

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7484

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7483
  %add.ptr = getelementptr i8, i8* %2, i64 -4, !dbg !7483
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !7483
  store %struct.drm_dp_mst_port* %3, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !7484
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !7483
  store %struct.drm_dp_mst_port* %4, %struct.drm_dp_mst_port** %port, align 8, !dbg !7480
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !7486
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 15, !dbg !7487
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !7487
  call void @drm_dp_mst_put_mstb_malloc(%struct.drm_dp_mst_branch* %6) #8, !dbg !7488
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !7489
  %8 = bitcast %struct.drm_dp_mst_port* %7 to i8*, !dbg !7489
  call void @kfree(i8* %8) #8, !dbg !7490
  ret void, !dbg !7491
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @drm_dp_mst_dpcd_read(%struct.drm_dp_aux* %aux, i32 %offset, i8* %buffer, i64 %size) #0 !dbg !7492 {
entry:
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  %offset.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7499, metadata !DIExpression()), !dbg !7500
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7501, metadata !DIExpression()), !dbg !7502
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !7503, metadata !DIExpression()), !dbg !7504
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7505, metadata !DIExpression()), !dbg !7507
  %0 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux.addr, align 8, !dbg !7507
  %1 = bitcast %struct.drm_dp_aux* %0 to i8*, !dbg !7507
  store i8* %1, i8** %__mptr, align 8, !dbg !7507
  br label %do.body, !dbg !7507

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7508

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7507
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !7507
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !7507
  store %struct.drm_dp_mst_port* %3, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !7508
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !7507
  store %struct.drm_dp_mst_port* %4, %struct.drm_dp_mst_port** %port, align 8, !dbg !7504
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !7510
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 18, !dbg !7511
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !7511
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !7512
  %8 = load i32, i32* %offset.addr, align 4, !dbg !7513
  %9 = load i64, i64* %size.addr, align 8, !dbg !7514
  %conv = trunc i64 %9 to i32, !dbg !7514
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !7515
  %call = call i32 @drm_dp_send_dpcd_read(%struct.drm_dp_mst_topology_mgr* %6, %struct.drm_dp_mst_port* %7, i32 %8, i32 %conv, i8* %10) #8, !dbg !7516
  %conv1 = sext i32 %call to i64, !dbg !7516
  ret i64 %conv1, !dbg !7517
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_send_dpcd_read(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i32 %offset, i32 %size, i8* %bytes) #0 !dbg !7518 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %offset.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %bytes.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %__UNIQUE_ID___x327 = alloca i64, align 8
  %__UNIQUE_ID___y328 = alloca i64, align 8
  %tmp = alloca i64, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !7521, metadata !DIExpression()), !dbg !7522
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7523, metadata !DIExpression()), !dbg !7524
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7525, metadata !DIExpression()), !dbg !7526
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7527, metadata !DIExpression()), !dbg !7528
  store i8* %bytes, i8** %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bytes.addr, metadata !7529, metadata !DIExpression()), !dbg !7530
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7531, metadata !DIExpression()), !dbg !7532
  store i32 0, i32* %ret, align 4, !dbg !7532
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !7533, metadata !DIExpression()), !dbg !7534
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !7535, metadata !DIExpression()), !dbg !7536
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7537
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7538
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 15, !dbg !7539
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !7539
  %call = call %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated(%struct.drm_dp_mst_topology_mgr* %0, %struct.drm_dp_mst_branch* %2) #8, !dbg !7540
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7541
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7542
  %tobool = icmp ne %struct.drm_dp_mst_branch* %3, null, !dbg !7542
  br i1 %tobool, label %if.end, label %if.then, !dbg !7544

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7545
  br label %return, !dbg !7545

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !7546
  %4 = bitcast i8* %call1 to %struct.drm_dp_sideband_msg_tx*, !dbg !7546
  store %struct.drm_dp_sideband_msg_tx* %4, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7547
  %5 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7548
  %tobool2 = icmp ne %struct.drm_dp_sideband_msg_tx* %5, null, !dbg !7548
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7550

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !7551
  br label %fail_put, !dbg !7553

if.end4:                                          ; preds = %if.end
  %6 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7554
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7555
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 2, !dbg !7556
  %8 = load i8, i8* %port_num, align 8, !dbg !7556
  %9 = load i32, i32* %offset.addr, align 4, !dbg !7557
  %10 = load i32, i32* %size.addr, align 4, !dbg !7558
  %conv = trunc i32 %10 to i8, !dbg !7558
  call void @build_dpcd_read(%struct.drm_dp_sideband_msg_tx* %6, i8 zeroext %8, i32 %9, i8 zeroext %conv) #8, !dbg !7559
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7560
  %parent5 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 15, !dbg !7561
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent5, align 8, !dbg !7561
  %13 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7562
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %13, i32 0, i32 4, !dbg !7563
  store %struct.drm_dp_mst_branch* %12, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !7564
  %14 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7565
  %15 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7566
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %14, %struct.drm_dp_sideband_msg_tx* %15) #8, !dbg !7567
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7568
  %17 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7569
  %call6 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %16, %struct.drm_dp_sideband_msg_tx* %17) #8, !dbg !7570
  store i32 %call6, i32* %ret, align 4, !dbg !7571
  %18 = load i32, i32* %ret, align 4, !dbg !7572
  %cmp = icmp slt i32 %18, 0, !dbg !7574
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !7575

if.then8:                                         ; preds = %if.end4
  br label %fail_free, !dbg !7576

if.end9:                                          ; preds = %if.end4
  %19 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7577
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %19, i32 0, i32 9, !dbg !7579
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !7580
  %20 = load i8, i8* %reply_type, align 2, !dbg !7580
  %conv10 = zext i8 %20 to i32, !dbg !7577
  %cmp11 = icmp eq i32 %conv10, 1, !dbg !7581
  br i1 %cmp11, label %if.then13, label %if.end16, !dbg !7582

if.then13:                                        ; preds = %if.end9
  %21 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7583
  %22 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7583
  %port_num14 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %22, i32 0, i32 2, !dbg !7583
  %23 = load i8, i8* %port_num14, align 8, !dbg !7583
  %conv15 = zext i8 %23 to i32, !dbg !7583
  %24 = load i32, i32* %offset.addr, align 4, !dbg !7583
  %25 = load i32, i32* %size.addr, align 4, !dbg !7583
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.102, i64 0, i64 0), %struct.drm_dp_mst_branch* %21, i32 %conv15, i32 %24, i32 %25) #8, !dbg !7583
  store i32 -5, i32* %ret, align 4, !dbg !7585
  br label %fail_free, !dbg !7586

if.end16:                                         ; preds = %if.end9
  %26 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7587
  %reply17 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %26, i32 0, i32 9, !dbg !7589
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply17, i32 0, i32 2, !dbg !7590
  %remote_dpcd_read_ack = bitcast %union.ack_replies* %u to %struct.drm_dp_remote_dpcd_read_ack_reply*, !dbg !7591
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_read_ack_reply, %struct.drm_dp_remote_dpcd_read_ack_reply* %remote_dpcd_read_ack, i32 0, i32 1, !dbg !7592
  %27 = load i8, i8* %num_bytes, align 1, !dbg !7592
  %conv18 = zext i8 %27 to i32, !dbg !7587
  %28 = load i32, i32* %size.addr, align 4, !dbg !7593
  %cmp19 = icmp ne i32 %conv18, %28, !dbg !7594
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !7595

if.then21:                                        ; preds = %if.end16
  store i32 -71, i32* %ret, align 4, !dbg !7596
  br label %fail_free, !dbg !7598

if.end22:                                         ; preds = %if.end16
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x327, metadata !7599, metadata !DIExpression()), !dbg !7601
  %29 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7601
  %reply23 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %29, i32 0, i32 9, !dbg !7601
  %u24 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply23, i32 0, i32 2, !dbg !7601
  %remote_dpcd_read_ack25 = bitcast %union.ack_replies* %u24 to %struct.drm_dp_remote_dpcd_read_ack_reply*, !dbg !7601
  %num_bytes26 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read_ack_reply, %struct.drm_dp_remote_dpcd_read_ack_reply* %remote_dpcd_read_ack25, i32 0, i32 1, !dbg !7601
  %30 = load i8, i8* %num_bytes26, align 1, !dbg !7601
  %conv27 = zext i8 %30 to i64, !dbg !7601
  store i64 %conv27, i64* %__UNIQUE_ID___x327, align 8, !dbg !7601
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y328, metadata !7602, metadata !DIExpression()), !dbg !7601
  %31 = load i32, i32* %size.addr, align 4, !dbg !7601
  %conv28 = sext i32 %31 to i64, !dbg !7601
  store i64 %conv28, i64* %__UNIQUE_ID___y328, align 8, !dbg !7601
  %32 = load i64, i64* %__UNIQUE_ID___x327, align 8, !dbg !7601
  %33 = load i64, i64* %__UNIQUE_ID___y328, align 8, !dbg !7601
  %cmp29 = icmp ult i64 %32, %33, !dbg !7601
  br i1 %cmp29, label %cond.true, label %cond.false, !dbg !7601

cond.true:                                        ; preds = %if.end22
  %34 = load i64, i64* %__UNIQUE_ID___x327, align 8, !dbg !7601
  br label %cond.end, !dbg !7601

cond.false:                                       ; preds = %if.end22
  %35 = load i64, i64* %__UNIQUE_ID___y328, align 8, !dbg !7601
  br label %cond.end, !dbg !7601

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %34, %cond.true ], [ %35, %cond.false ], !dbg !7601
  store i64 %cond, i64* %tmp, align 8, !dbg !7601
  %36 = load i64, i64* %tmp, align 8, !dbg !7601
  %conv31 = trunc i64 %36 to i32, !dbg !7603
  store i32 %conv31, i32* %ret, align 4, !dbg !7604
  %37 = load i8*, i8** %bytes.addr, align 8, !dbg !7605
  %38 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7606
  %reply32 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %38, i32 0, i32 9, !dbg !7607
  %u33 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply32, i32 0, i32 2, !dbg !7608
  %remote_dpcd_read_ack34 = bitcast %union.ack_replies* %u33 to %struct.drm_dp_remote_dpcd_read_ack_reply*, !dbg !7609
  %bytes35 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read_ack_reply, %struct.drm_dp_remote_dpcd_read_ack_reply* %remote_dpcd_read_ack34, i32 0, i32 2, !dbg !7610
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %bytes35, i64 0, i64 0, !dbg !7611
  %39 = load i32, i32* %ret, align 4, !dbg !7612
  %conv36 = sext i32 %39 to i64, !dbg !7612
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %37, i8* align 2 %arraydecay, i64 %conv36, i1 false), !dbg !7611
  br label %fail_free, !dbg !7611

fail_free:                                        ; preds = %cond.end, %if.then21, %if.then13, %if.then8
  call void @llvm.dbg.label(metadata !7613), !dbg !7614
  %40 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7615
  %41 = bitcast %struct.drm_dp_sideband_msg_tx* %40 to i8*, !dbg !7615
  call void @kfree(i8* %41) #8, !dbg !7616
  br label %fail_put, !dbg !7616

fail_put:                                         ; preds = %fail_free, %if.then3
  call void @llvm.dbg.label(metadata !7617), !dbg !7618
  %42 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7619
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %42) #8, !dbg !7620
  %43 = load i32, i32* %ret, align 4, !dbg !7621
  store i32 %43, i32* %retval, align 4, !dbg !7622
  br label %return, !dbg !7622

return:                                           ; preds = %fail_put, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !7623
  ret i32 %44, !dbg !7623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i64 @drm_dp_mst_dpcd_write(%struct.drm_dp_aux* %aux, i32 %offset, i8* %buffer, i64 %size) #0 !dbg !7624 {
entry:
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  %offset.addr = alloca i32, align 4
  %buffer.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !7625, metadata !DIExpression()), !dbg !7626
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7627, metadata !DIExpression()), !dbg !7628
  store i8* %buffer, i8** %buffer.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buffer.addr, metadata !7629, metadata !DIExpression()), !dbg !7630
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7631, metadata !DIExpression()), !dbg !7632
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !7633, metadata !DIExpression()), !dbg !7634
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7635, metadata !DIExpression()), !dbg !7637
  %0 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux.addr, align 8, !dbg !7637
  %1 = bitcast %struct.drm_dp_aux* %0 to i8*, !dbg !7637
  store i8* %1, i8** %__mptr, align 8, !dbg !7637
  br label %do.body, !dbg !7637

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7638

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !7637
  %add.ptr = getelementptr i8, i8* %2, i64 -48, !dbg !7637
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !7637
  store %struct.drm_dp_mst_port* %3, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !7638
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !7637
  store %struct.drm_dp_mst_port* %4, %struct.drm_dp_mst_port** %port, align 8, !dbg !7634
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !7640
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 18, !dbg !7641
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !7641
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !7642
  %8 = load i32, i32* %offset.addr, align 4, !dbg !7643
  %9 = load i64, i64* %size.addr, align 8, !dbg !7644
  %conv = trunc i64 %9 to i32, !dbg !7644
  %10 = load i8*, i8** %buffer.addr, align 8, !dbg !7645
  %call = call i32 @drm_dp_send_dpcd_write(%struct.drm_dp_mst_topology_mgr* %6, %struct.drm_dp_mst_port* %7, i32 %8, i32 %conv, i8* %10) #8, !dbg !7646
  %conv1 = sext i32 %call to i64, !dbg !7646
  ret i64 %conv1, !dbg !7647
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_send_dpcd_write(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i32 %offset, i32 %size, i8* %bytes) #0 !dbg !7648 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %offset.addr = alloca i32, align 4
  %size.addr = alloca i32, align 4
  %bytes.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !7649, metadata !DIExpression()), !dbg !7650
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7651, metadata !DIExpression()), !dbg !7652
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  store i8* %bytes, i8** %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bytes.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7659, metadata !DIExpression()), !dbg !7660
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !7661, metadata !DIExpression()), !dbg !7662
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !7663, metadata !DIExpression()), !dbg !7664
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7665
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7666
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 15, !dbg !7667
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !7667
  %call = call %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated(%struct.drm_dp_mst_topology_mgr* %0, %struct.drm_dp_mst_branch* %2) #8, !dbg !7668
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7669
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7670
  %tobool = icmp ne %struct.drm_dp_mst_branch* %3, null, !dbg !7670
  br i1 %tobool, label %if.end, label %if.then, !dbg !7672

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7673
  br label %return, !dbg !7673

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !7674
  %4 = bitcast i8* %call1 to %struct.drm_dp_sideband_msg_tx*, !dbg !7674
  store %struct.drm_dp_sideband_msg_tx* %4, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7675
  %5 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7676
  %tobool2 = icmp ne %struct.drm_dp_sideband_msg_tx* %5, null, !dbg !7676
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7678

if.then3:                                         ; preds = %if.end
  store i32 -12, i32* %ret, align 4, !dbg !7679
  br label %fail_put, !dbg !7681

if.end4:                                          ; preds = %if.end
  %6 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7682
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7683
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 2, !dbg !7684
  %8 = load i8, i8* %port_num, align 8, !dbg !7684
  %9 = load i32, i32* %offset.addr, align 4, !dbg !7685
  %10 = load i32, i32* %size.addr, align 4, !dbg !7686
  %conv = trunc i32 %10 to i8, !dbg !7686
  %11 = load i8*, i8** %bytes.addr, align 8, !dbg !7687
  call void @build_dpcd_write(%struct.drm_dp_sideband_msg_tx* %6, i8 zeroext %8, i32 %9, i8 zeroext %conv, i8* %11) #8, !dbg !7688
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7689
  %13 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7690
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %13, i32 0, i32 4, !dbg !7691
  store %struct.drm_dp_mst_branch* %12, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !7692
  %14 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7693
  %15 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7694
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %14, %struct.drm_dp_sideband_msg_tx* %15) #8, !dbg !7695
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7696
  %17 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7697
  %call5 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %16, %struct.drm_dp_sideband_msg_tx* %17) #8, !dbg !7698
  store i32 %call5, i32* %ret, align 4, !dbg !7699
  %18 = load i32, i32* %ret, align 4, !dbg !7700
  %cmp = icmp sgt i32 %18, 0, !dbg !7702
  br i1 %cmp, label %if.then7, label %if.end13, !dbg !7703

if.then7:                                         ; preds = %if.end4
  %19 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7704
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %19, i32 0, i32 9, !dbg !7707
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !7708
  %20 = load i8, i8* %reply_type, align 2, !dbg !7708
  %conv8 = zext i8 %20 to i32, !dbg !7704
  %cmp9 = icmp eq i32 %conv8, 1, !dbg !7709
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !7710

if.then11:                                        ; preds = %if.then7
  store i32 -5, i32* %ret, align 4, !dbg !7711
  br label %if.end12, !dbg !7712

if.else:                                          ; preds = %if.then7
  %21 = load i32, i32* %size.addr, align 4, !dbg !7713
  store i32 %21, i32* %ret, align 4, !dbg !7714
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  br label %if.end13, !dbg !7715

if.end13:                                         ; preds = %if.end12, %if.end4
  %22 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7716
  %23 = bitcast %struct.drm_dp_sideband_msg_tx* %22 to i8*, !dbg !7716
  call void @kfree(i8* %23) #8, !dbg !7717
  br label %fail_put, !dbg !7717

fail_put:                                         ; preds = %if.end13, %if.then3
  call void @llvm.dbg.label(metadata !7718), !dbg !7719
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !7720
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %24) #8, !dbg !7721
  %25 = load i32, i32* %ret, align 4, !dbg !7722
  store i32 %25, i32* %retval, align 4, !dbg !7723
  br label %return, !dbg !7723

return:                                           ; preds = %fail_put, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !7724
  ret i32 %26, !dbg !7724
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_connector_late_register(%struct.drm_connector* %connector, %struct.drm_dp_mst_port* %port) #0 !dbg !7725 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !7728, metadata !DIExpression()), !dbg !7729
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7730, metadata !DIExpression()), !dbg !7731
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7732
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 14, !dbg !7732
  %name = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux, i32 0, i32 0, !dbg !7732
  %1 = load i8*, i8** %name, align 8, !dbg !7732
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7732
  %kdev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 1, !dbg !7732
  %3 = load %struct.device*, %struct.device** %kdev, align 8, !dbg !7732
  %kobj = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 0, !dbg !7732
  %name1 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 0, !dbg !7732
  %4 = load i8*, i8** %name1, align 8, !dbg !7732
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.15, i64 0, i64 0), i8* %1, i8* %4) #8, !dbg !7732
  %5 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7733
  %kdev2 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %5, i32 0, i32 1, !dbg !7734
  %6 = load %struct.device*, %struct.device** %kdev2, align 8, !dbg !7734
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7735
  %aux3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 14, !dbg !7736
  %dev = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux3, i32 0, i32 2, !dbg !7737
  store %struct.device* %6, %struct.device** %dev, align 8, !dbg !7738
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7739
  %aux4 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 14, !dbg !7740
  %call = call i32 @drm_dp_aux_register_devnode(%struct.drm_dp_aux* %aux4) #8, !dbg !7741
  ret i32 %call, !dbg !7742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_aux_register_devnode(%struct.drm_dp_aux* %aux) #0 !dbg !7743 {
entry:
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !7747, metadata !DIExpression()), !dbg !7748
  ret i32 0, !dbg !7749
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_connector_early_unregister(%struct.drm_connector* %connector, %struct.drm_dp_mst_port* %port) #0 !dbg !7750 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !7753, metadata !DIExpression()), !dbg !7754
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7755, metadata !DIExpression()), !dbg !7756
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7757
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 14, !dbg !7757
  %name = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux, i32 0, i32 0, !dbg !7757
  %1 = load i8*, i8** %name, align 8, !dbg !7757
  %2 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !7757
  %kdev = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %2, i32 0, i32 1, !dbg !7757
  %3 = load %struct.device*, %struct.device** %kdev, align 8, !dbg !7757
  %kobj = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 0, !dbg !7757
  %name1 = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 0, !dbg !7757
  %4 = load i8*, i8** %name1, align 8, !dbg !7757
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.16, i64 0, i64 0), i8* %1, i8* %4) #8, !dbg !7757
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7758
  %aux2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 14, !dbg !7759
  call void @drm_dp_aux_unregister_devnode(%struct.drm_dp_aux* %aux2) #8, !dbg !7760
  ret void, !dbg !7761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_aux_unregister_devnode(%struct.drm_dp_aux* %aux) #0 !dbg !7762 {
entry:
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !7765, metadata !DIExpression()), !dbg !7766
  ret void, !dbg !7767
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_send_power_updown_phy(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i1 zeroext %power_up) #0 !dbg !7768 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %power_up.addr = alloca i8, align 1
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !7771, metadata !DIExpression()), !dbg !7772
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7773, metadata !DIExpression()), !dbg !7774
  %frombool = zext i1 %power_up to i8
  store i8 %frombool, i8* %power_up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %power_up.addr, metadata !7775, metadata !DIExpression()), !dbg !7776
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !7777, metadata !DIExpression()), !dbg !7778
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7779, metadata !DIExpression()), !dbg !7780
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7781
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7782
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %0, %struct.drm_dp_mst_port* %1) #8, !dbg !7783
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7784
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7785
  %tobool = icmp ne %struct.drm_dp_mst_port* %2, null, !dbg !7785
  br i1 %tobool, label %if.end, label %if.then, !dbg !7787

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !7788
  br label %return, !dbg !7788

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !7789
  %3 = bitcast i8* %call1 to %struct.drm_dp_sideband_msg_tx*, !dbg !7789
  store %struct.drm_dp_sideband_msg_tx* %3, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7790
  %4 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7791
  %tobool2 = icmp ne %struct.drm_dp_sideband_msg_tx* %4, null, !dbg !7791
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !7793

if.then3:                                         ; preds = %if.end
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7794
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %5) #8, !dbg !7796
  store i32 -12, i32* %retval, align 4, !dbg !7797
  br label %return, !dbg !7797

if.end4:                                          ; preds = %if.end
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7798
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 15, !dbg !7799
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !7799
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7800
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %8, i32 0, i32 4, !dbg !7801
  store %struct.drm_dp_mst_branch* %7, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !7802
  %9 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7803
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7804
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %10, i32 0, i32 2, !dbg !7805
  %11 = load i8, i8* %port_num, align 8, !dbg !7805
  %conv = zext i8 %11 to i32, !dbg !7804
  %12 = load i8, i8* %power_up.addr, align 1, !dbg !7806
  %tobool5 = trunc i8 %12 to i1, !dbg !7806
  call void @build_power_updown_phy(%struct.drm_dp_sideband_msg_tx* %9, i32 %conv, i1 zeroext %tobool5) #8, !dbg !7807
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7808
  %14 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7809
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %13, %struct.drm_dp_sideband_msg_tx* %14) #8, !dbg !7810
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7811
  %parent6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 15, !dbg !7812
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent6, align 8, !dbg !7812
  %17 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7813
  %call7 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %16, %struct.drm_dp_sideband_msg_tx* %17) #8, !dbg !7814
  store i32 %call7, i32* %ret, align 4, !dbg !7815
  %18 = load i32, i32* %ret, align 4, !dbg !7816
  %cmp = icmp sgt i32 %18, 0, !dbg !7818
  br i1 %cmp, label %if.then9, label %if.end15, !dbg !7819

if.then9:                                         ; preds = %if.end4
  %19 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7820
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %19, i32 0, i32 9, !dbg !7823
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !7824
  %20 = load i8, i8* %reply_type, align 2, !dbg !7824
  %conv10 = zext i8 %20 to i32, !dbg !7820
  %cmp11 = icmp eq i32 %conv10, 1, !dbg !7825
  br i1 %cmp11, label %if.then13, label %if.else, !dbg !7826

if.then13:                                        ; preds = %if.then9
  store i32 -22, i32* %ret, align 4, !dbg !7827
  br label %if.end14, !dbg !7828

if.else:                                          ; preds = %if.then9
  store i32 0, i32* %ret, align 4, !dbg !7829
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then13
  br label %if.end15, !dbg !7830

if.end15:                                         ; preds = %if.end14, %if.end4
  %21 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !7831
  %22 = bitcast %struct.drm_dp_sideband_msg_tx* %21 to i8*, !dbg !7831
  call void @kfree(i8* %22) #8, !dbg !7832
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7833
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %23) #8, !dbg !7834
  %24 = load i32, i32* %ret, align 4, !dbg !7835
  store i32 %24, i32* %retval, align 4, !dbg !7836
  br label %return, !dbg !7836

return:                                           ; preds = %if.end15, %if.then3, %if.then
  %25 = load i32, i32* %retval, align 4, !dbg !7837
  ret i32 %25, !dbg !7837
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !7838 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %rport = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !7841, metadata !DIExpression()), !dbg !7842
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !7843, metadata !DIExpression()), !dbg !7844
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %rport, metadata !7845, metadata !DIExpression()), !dbg !7846
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %rport, align 8, !dbg !7846
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7847
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !7848
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !7849
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7850
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 12, !dbg !7852
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !7852
  %tobool = icmp ne %struct.drm_dp_mst_branch* %2, null, !dbg !7850
  br i1 %tobool, label %if.then, label %if.end6, !dbg !7853

if.then:                                          ; preds = %entry
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7854
  %mst_primary1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 12, !dbg !7856
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary1, align 8, !dbg !7856
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !7857
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated_locked(%struct.drm_dp_mst_branch* %4, %struct.drm_dp_mst_port* %5) #8, !dbg !7858
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %rport, align 8, !dbg !7859
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %rport, align 8, !dbg !7860
  %tobool2 = icmp ne %struct.drm_dp_mst_port* %6, null, !dbg !7860
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !7862

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %rport, align 8, !dbg !7863
  %call3 = call i32 @drm_dp_mst_topology_try_get_port(%struct.drm_dp_mst_port* %7) #8, !dbg !7864
  %tobool4 = icmp ne i32 %call3, 0, !dbg !7864
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !7865

if.then5:                                         ; preds = %land.lhs.true
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %rport, align 8, !dbg !7866
  br label %if.end, !dbg !7867

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !7868

if.end6:                                          ; preds = %if.end, %entry
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !7869
  %lock7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 9, !dbg !7870
  call void @mutex_unlock(%struct.mutex* %lock7) #8, !dbg !7871
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %rport, align 8, !dbg !7872
  ret %struct.drm_dp_mst_port* %9, !dbg !7873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !7874 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7877, metadata !DIExpression()), !dbg !7881
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7887, metadata !DIExpression()), !dbg !7888
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7889, metadata !DIExpression()), !dbg !7890
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7891, metadata !DIExpression()), !dbg !7892
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7893, metadata !DIExpression()), !dbg !7897
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7899, metadata !DIExpression()), !dbg !7903
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7905, metadata !DIExpression()), !dbg !7909
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7914, metadata !DIExpression()), !dbg !7915
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7916, metadata !DIExpression()), !dbg !7917
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7918, metadata !DIExpression()), !dbg !7919
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7920, metadata !DIExpression()), !dbg !7921
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7922, metadata !DIExpression()), !dbg !7923
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7924, metadata !DIExpression()), !dbg !7925
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7926, metadata !DIExpression()), !dbg !7927
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7928, metadata !DIExpression()), !dbg !7929
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !7930, metadata !DIExpression()), !dbg !7931
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !7932, metadata !DIExpression()), !dbg !7933
  %0 = load i64, i64* %size.addr, align 8, !dbg !7934
  %1 = load i32, i32* %flags.addr, align 4, !dbg !7935
  %or = or i32 %1, 256, !dbg !7936
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !7937
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !7938
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !7939

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !7940
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !7941
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !7942

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !7943
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !7944
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !7945
  %call.i.i = call i32 @get_order(i64 %7) #9, !dbg !7946
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !7923
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !7947
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !7948
  %10 = load i32, i32* %order.i.i, align 4, !dbg !7949
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !7950
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !7951
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !7952
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #10, !dbg !7953
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !7953
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !7953
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !7953
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !7953
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !7954
  br label %kmalloc.exit, !dbg !7954

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !7955
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7956
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !7956
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !7958

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !7959
  br label %kmalloc_index.exit.i, !dbg !7959

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7960
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !7962
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !7963

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7964
  br label %kmalloc_index.exit.i, !dbg !7964

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7965
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !7967
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !7968

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7969
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !7970
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !7971

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !7972
  br label %kmalloc_index.exit.i, !dbg !7972

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7973
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !7975
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !7976

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7977
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !7978
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !7979

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !7980
  br label %kmalloc_index.exit.i, !dbg !7980

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7981
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !7983
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !7984

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !7985
  br label %kmalloc_index.exit.i, !dbg !7985

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7986
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !7988
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !7989

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !7990
  br label %kmalloc_index.exit.i, !dbg !7990

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7991
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !7993
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !7994

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !7995
  br label %kmalloc_index.exit.i, !dbg !7995

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !7996
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !7998
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !7999

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !8000
  br label %kmalloc_index.exit.i, !dbg !8000

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8001
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !8003
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !8004

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !8005
  br label %kmalloc_index.exit.i, !dbg !8005

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8006
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !8008
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !8009

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !8010
  br label %kmalloc_index.exit.i, !dbg !8010

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8011
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !8013
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !8014

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !8015
  br label %kmalloc_index.exit.i, !dbg !8015

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8016
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !8018
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !8019

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !8020
  br label %kmalloc_index.exit.i, !dbg !8020

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8021
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !8023
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !8024

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !8025
  br label %kmalloc_index.exit.i, !dbg !8025

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8026
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !8028
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !8029

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !8030
  br label %kmalloc_index.exit.i, !dbg !8030

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8031
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !8033
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !8034

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !8035
  br label %kmalloc_index.exit.i, !dbg !8035

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8036
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !8038
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !8039

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !8040
  br label %kmalloc_index.exit.i, !dbg !8040

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8041
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !8043
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !8044

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !8045
  br label %kmalloc_index.exit.i, !dbg !8045

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8046
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !8048
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !8049

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !8050
  br label %kmalloc_index.exit.i, !dbg !8050

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8051
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !8053
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !8054

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !8055
  br label %kmalloc_index.exit.i, !dbg !8055

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8056
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !8058
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !8059

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !8060
  br label %kmalloc_index.exit.i, !dbg !8060

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8061
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !8063
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !8064

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !8065
  br label %kmalloc_index.exit.i, !dbg !8065

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8066
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !8068
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !8069

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !8070
  br label %kmalloc_index.exit.i, !dbg !8070

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8071
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !8073
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !8074

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !8075
  br label %kmalloc_index.exit.i, !dbg !8075

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8076
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !8078
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !8079

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !8080
  br label %kmalloc_index.exit.i, !dbg !8080

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8081
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !8083
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !8084

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !8085
  br label %kmalloc_index.exit.i, !dbg !8085

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8086
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !8088
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !8089

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !8090
  br label %kmalloc_index.exit.i, !dbg !8090

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8091
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !8093
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !8094

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !8095
  br label %kmalloc_index.exit.i, !dbg !8095

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !8096
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !8098
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !8099

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !8100
  br label %kmalloc_index.exit.i, !dbg !8100

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !8101, !srcloc !8104
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 102) #7, !dbg !8105, !srcloc !8108
  unreachable, !dbg !8109

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !8110
  store i32 %45, i32* %index.i, align 4, !dbg !8111
  %46 = load i32, i32* %index.i, align 4, !dbg !8112
  %tobool.i = icmp ne i32 %46, 0, !dbg !8112
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !8114

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !8115
  br label %kmalloc.exit, !dbg !8115

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !8116
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8117
  %and.i.i = and i32 %48, 17, !dbg !8117
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !8117
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !8117
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !8117
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !8117
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !8119

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !8120
  br label %kmalloc_type.exit.i, !dbg !8120

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !8121
  %and2.i.i = and i32 %49, 1, !dbg !8122
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !8121
  %50 = zext i1 %tobool3.i.i to i64, !dbg !8121
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !8121
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !8123
  br label %kmalloc_type.exit.i, !dbg !8123

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !8124
  %idxprom.i = zext i32 %51 to i64, !dbg !8125
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !8125
  %52 = load i32, i32* %index.i, align 4, !dbg !8126
  %idxprom6.i = zext i32 %52 to i64, !dbg !8125
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !8125
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !8125
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !8127
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !8128
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8129
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8130
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #10, !dbg !8131
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !8131
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !8131
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !8131
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !8131
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !7892
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !8132
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !8133
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !8134
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !8135
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #10, !dbg !8136
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !8137
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !8138
  store i8* %62, i8** %retval.i, align 8, !dbg !8139
  br label %kmalloc.exit, !dbg !8139

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !8140
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !8141
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #10, !dbg !8142
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !8142
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !8142
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !8142
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !8142
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !8143
  br label %kmalloc.exit, !dbg !8143

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !8144
  ret i8* %65, !dbg !8145
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %port) #0 !dbg !8146 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !8147, metadata !DIExpression()), !dbg !8148
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8149
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 18, !dbg !8150
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8150
  call void @topology_ref_history_lock(%struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !8151
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8152
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8152
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 0, !dbg !8152
  %call = call i32 @kref_read(%struct.kref* %topology_kref) #8, !dbg !8152
  %sub = sub i32 %call, 1, !dbg !8152
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), %struct.drm_dp_mst_port* %2, i32 %sub) #8, !dbg !8152
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8153
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %4, i32 0, i32 18, !dbg !8154
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !8154
  call void @topology_ref_history_unlock(%struct.drm_dp_mst_topology_mgr* %5) #8, !dbg !8155
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8156
  %topology_kref2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 0, !dbg !8157
  %call3 = call i32 @kref_put(%struct.kref* %topology_kref2, void (%struct.kref*)* @drm_dp_destroy_port) #8, !dbg !8158
  ret void, !dbg !8159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_power_updown_phy(%struct.drm_dp_sideband_msg_tx* %msg, i32 %port_num, i1 zeroext %power_up) #0 !dbg !8160 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %port_num.addr = alloca i32, align 4
  %power_up.addr = alloca i8, align 1
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !8163, metadata !DIExpression()), !dbg !8164
  store i32 %port_num, i32* %port_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_num.addr, metadata !8165, metadata !DIExpression()), !dbg !8166
  %frombool = zext i1 %power_up to i8
  store i8 %frombool, i8* %power_up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %power_up.addr, metadata !8167, metadata !DIExpression()), !dbg !8168
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !8169, metadata !DIExpression()), !dbg !8170
  %0 = load i8, i8* %power_up.addr, align 1, !dbg !8171
  %tobool = trunc i8 %0 to i1, !dbg !8171
  br i1 %tobool, label %if.then, label %if.else, !dbg !8173

if.then:                                          ; preds = %entry
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !8174
  store i8 36, i8* %req_type, align 8, !dbg !8175
  br label %if.end, !dbg !8176

if.else:                                          ; preds = %entry
  %req_type1 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !8177
  store i8 37, i8* %req_type1, align 8, !dbg !8178
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %1 = load i32, i32* %port_num.addr, align 4, !dbg !8179
  %conv = trunc i32 %1 to i8, !dbg !8179
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !8180
  %port_num2 = bitcast %union.ack_req* %u to %struct.drm_dp_port_number_req*, !dbg !8181
  %port_number = getelementptr inbounds %struct.drm_dp_port_number_req, %struct.drm_dp_port_number_req* %port_num2, i32 0, i32 0, !dbg !8182
  store i8 %conv, i8* %port_number, align 8, !dbg !8183
  %2 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !8184
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %2) #8, !dbg !8185
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !8186
  %path_msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %3, i32 0, i32 8, !dbg !8187
  store i8 1, i8* %path_msg, align 8, !dbg !8188
  ret void, !dbg !8189
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_sideband_msg_tx* %txmsg) #0 !dbg !8190 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %txmsg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %p = alloca %struct.drm_printer, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !8193, metadata !DIExpression()), !dbg !8194
  store %struct.drm_dp_sideband_msg_tx* %txmsg, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg.addr, metadata !8195, metadata !DIExpression()), !dbg !8196
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8197
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 17, !dbg !8198
  call void @mutex_lock(%struct.mutex* %qlock) #8, !dbg !8199
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8200
  %next = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %1, i32 0, i32 5, !dbg !8201
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8202
  %tx_msg_downq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 18, !dbg !8203
  call void @list_add_tail(%struct.list_head* %next, %struct.list_head* %tx_msg_downq) #8, !dbg !8204
  %call = call zeroext i1 @drm_debug_enabled(i32 256) #8, !dbg !8205
  br i1 %call, label %if.then, label %if.end, !dbg !8207

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.drm_printer* %p, metadata !8208, metadata !DIExpression()), !dbg !8210
  call void @drm_debug_printer(%struct.drm_printer* sret %p, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0)) #8, !dbg !8211
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8212
  call void @drm_dp_mst_dump_sideband_msg_tx(%struct.drm_printer* %p, %struct.drm_dp_sideband_msg_tx* %3) #8, !dbg !8213
  br label %if.end, !dbg !8214

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8215
  %tx_msg_downq1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 18, !dbg !8217
  %call2 = call i32 @list_is_singular(%struct.list_head* %tx_msg_downq1) #8, !dbg !8218
  %tobool = icmp ne i32 %call2, 0, !dbg !8218
  br i1 %tobool, label %if.then3, label %if.end4, !dbg !8219

if.then3:                                         ; preds = %if.end
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8220
  call void @process_single_down_tx_qlock(%struct.drm_dp_mst_topology_mgr* %5) #8, !dbg !8221
  br label %if.end4, !dbg !8221

if.end4:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8222
  %qlock5 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 17, !dbg !8223
  call void @mutex_unlock(%struct.mutex* %qlock5) #8, !dbg !8224
  ret void, !dbg !8225
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_sideband_msg_tx* %txmsg) #0 !dbg !8226 {
entry:
  %retval.i101 = alloca i64, align 8
  %m.addr.i102 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i102, metadata !8229, metadata !DIExpression()), !dbg !8234
  %retval.i91 = alloca i64, align 8
  %m.addr.i92 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i92, metadata !8229, metadata !DIExpression()), !dbg !8242
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !8229, metadata !DIExpression()), !dbg !8244
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %txmsg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %wait_timeout = alloca i64, align 8
  %wait_expires = alloca i64, align 8
  %ret = alloca i32, align 4
  %__ret = alloca i64, align 8
  %__cond = alloca i8, align 1
  %tmp = alloca i32, align 4
  %__wq_entry = alloca %struct.wait_queue_entry, align 8
  %__ret12 = alloca i64, align 8
  %__int = alloca i64, align 8
  %__cond23 = alloca i8, align 1
  %tmp31 = alloca i32, align 4
  %tmp43 = alloca i64, align 8
  %tmp45 = alloca i64, align 8
  %p = alloca %struct.drm_printer, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  store %struct.drm_dp_sideband_msg_tx* %txmsg, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg.addr, metadata !8248, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !8250, metadata !DIExpression()), !dbg !8251
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !8252
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 8, !dbg !8253
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !8253
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8251
  call void @llvm.dbg.declare(metadata i64* %wait_timeout, metadata !8254, metadata !DIExpression()), !dbg !8255
  store i32 4000, i32* %m.addr.i, align 4
  %2 = load i32, i32* %m.addr.i, align 4, !dbg !8256
  %3 = call i1 @llvm.is.constant.i32(i32 %2) #7, !dbg !8258
  br i1 %3, label %if.then.i, label %if.else.i, !dbg !8259

if.then.i:                                        ; preds = %entry
  %4 = load i32, i32* %m.addr.i, align 4, !dbg !8260
  %cmp.i = icmp slt i32 %4, 0, !dbg !8263
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !8264

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !8265
  br label %msecs_to_jiffies.exit, !dbg !8265

if.end.i:                                         ; preds = %if.then.i
  %5 = load i32, i32* %m.addr.i, align 4, !dbg !8266
  %call.i = call i64 @_msecs_to_jiffies(i32 %5) #10, !dbg !8267
  store i64 %call.i, i64* %retval.i, align 8, !dbg !8268
  br label %msecs_to_jiffies.exit, !dbg !8268

if.else.i:                                        ; preds = %entry
  %6 = load i32, i32* %m.addr.i, align 4, !dbg !8269
  %call2.i = call i64 @__msecs_to_jiffies(i32 %6) #10, !dbg !8271
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !8272
  br label %msecs_to_jiffies.exit, !dbg !8272

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %7 = load i64, i64* %retval.i, align 8, !dbg !8273
  store i64 %7, i64* %wait_timeout, align 8, !dbg !8255
  call void @llvm.dbg.declare(metadata i64* %wait_expires, metadata !8274, metadata !DIExpression()), !dbg !8275
  %8 = load volatile i64, i64* @jiffies, align 8, !dbg !8276
  %9 = load i64, i64* %wait_timeout, align 8, !dbg !8277
  %add = add i64 %8, %9, !dbg !8278
  store i64 %add, i64* %wait_expires, align 8, !dbg !8275
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8279, metadata !DIExpression()), !dbg !8280
  br label %for.cond, !dbg !8281

for.cond:                                         ; preds = %if.end53, %msecs_to_jiffies.exit
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !8282, metadata !DIExpression()), !dbg !8283
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8283
  %cbs = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %10, i32 0, i32 2, !dbg !8283
  %11 = load %struct.drm_dp_mst_topology_cbs*, %struct.drm_dp_mst_topology_cbs** %cbs, align 8, !dbg !8283
  %poll_hpd_irq = getelementptr inbounds %struct.drm_dp_mst_topology_cbs, %struct.drm_dp_mst_topology_cbs* %11, i32 0, i32 1, !dbg !8283
  %12 = load void (%struct.drm_dp_mst_topology_mgr*)*, void (%struct.drm_dp_mst_topology_mgr*)** %poll_hpd_irq, align 8, !dbg !8283
  %tobool = icmp ne void (%struct.drm_dp_mst_topology_mgr*)* %12, null, !dbg !8283
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !8283

cond.true:                                        ; preds = %for.cond
  store i32 50, i32* %m.addr.i92, align 4
  %13 = load i32, i32* %m.addr.i92, align 4, !dbg !8284
  %14 = call i1 @llvm.is.constant.i32(i32 %13) #7, !dbg !8285
  br i1 %14, label %if.then.i94, label %if.else.i99, !dbg !8286

if.then.i94:                                      ; preds = %cond.true
  %15 = load i32, i32* %m.addr.i92, align 4, !dbg !8287
  %cmp.i93 = icmp slt i32 %15, 0, !dbg !8288
  br i1 %cmp.i93, label %if.then1.i95, label %if.end.i97, !dbg !8289

if.then1.i95:                                     ; preds = %if.then.i94
  store i64 4611686018427387902, i64* %retval.i91, align 8, !dbg !8290
  br label %msecs_to_jiffies.exit100, !dbg !8290

if.end.i97:                                       ; preds = %if.then.i94
  %16 = load i32, i32* %m.addr.i92, align 4, !dbg !8291
  %call.i96 = call i64 @_msecs_to_jiffies(i32 %16) #10, !dbg !8292
  store i64 %call.i96, i64* %retval.i91, align 8, !dbg !8293
  br label %msecs_to_jiffies.exit100, !dbg !8293

if.else.i99:                                      ; preds = %cond.true
  %17 = load i32, i32* %m.addr.i92, align 4, !dbg !8294
  %call2.i98 = call i64 @__msecs_to_jiffies(i32 %17) #10, !dbg !8295
  store i64 %call2.i98, i64* %retval.i91, align 8, !dbg !8296
  br label %msecs_to_jiffies.exit100, !dbg !8296

msecs_to_jiffies.exit100:                         ; preds = %if.then1.i95, %if.end.i97, %if.else.i99
  %18 = load i64, i64* %retval.i91, align 8, !dbg !8297
  br label %cond.end, !dbg !8283

cond.false:                                       ; preds = %for.cond
  %19 = load i64, i64* %wait_timeout, align 8, !dbg !8283
  br label %cond.end, !dbg !8283

cond.end:                                         ; preds = %cond.false, %msecs_to_jiffies.exit100
  %cond = phi i64 [ %18, %msecs_to_jiffies.exit100 ], [ %19, %cond.false ], !dbg !8283
  store i64 %cond, i64* %__ret, align 8, !dbg !8283
  br label %do.body, !dbg !8283

do.body:                                          ; preds = %cond.end
  br label %do.body3, !dbg !8298

do.body3:                                         ; preds = %do.body
  br label %do.end, !dbg !8300

do.end:                                           ; preds = %do.body3
  br label %do.end4, !dbg !8298

do.end4:                                          ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8* %__cond, metadata !8302, metadata !DIExpression()), !dbg !8304
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8304
  %21 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8304
  %call5 = call zeroext i1 @check_txmsg_state(%struct.drm_dp_mst_topology_mgr* %20, %struct.drm_dp_sideband_msg_tx* %21) #8, !dbg !8304
  %frombool = zext i1 %call5 to i8, !dbg !8304
  store i8 %frombool, i8* %__cond, align 1, !dbg !8304
  %22 = load i8, i8* %__cond, align 1, !dbg !8305
  %tobool6 = trunc i8 %22 to i1, !dbg !8305
  br i1 %tobool6, label %land.lhs.true, label %if.end, !dbg !8305

land.lhs.true:                                    ; preds = %do.end4
  %23 = load i64, i64* %__ret, align 8, !dbg !8305
  %tobool7 = icmp ne i64 %23, 0, !dbg !8305
  br i1 %tobool7, label %if.end, label %if.then, !dbg !8304

if.then:                                          ; preds = %land.lhs.true
  store i64 1, i64* %__ret, align 8, !dbg !8305
  br label %if.end, !dbg !8305

if.end:                                           ; preds = %if.then, %land.lhs.true, %do.end4
  %24 = load i8, i8* %__cond, align 1, !dbg !8304
  %tobool8 = trunc i8 %24 to i1, !dbg !8304
  br i1 %tobool8, label %lor.end, label %lor.rhs, !dbg !8304

lor.rhs:                                          ; preds = %if.end
  %25 = load i64, i64* %__ret, align 8, !dbg !8304
  %tobool9 = icmp ne i64 %25, 0, !dbg !8304
  %lnot = xor i1 %tobool9, true, !dbg !8304
  br label %lor.end, !dbg !8304

lor.end:                                          ; preds = %lor.rhs, %if.end
  %26 = phi i1 [ true, %if.end ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %26 to i32, !dbg !8304
  store i32 %lor.ext, i32* %tmp, align 4, !dbg !8305
  %27 = load i32, i32* %tmp, align 4, !dbg !8304
  %tobool10 = icmp ne i32 %27, 0, !dbg !8307
  br i1 %tobool10, label %if.end44, label %if.then11, !dbg !8283

if.then11:                                        ; preds = %lor.end
  call void @llvm.dbg.declare(metadata %struct.wait_queue_entry* %__wq_entry, metadata !8308, metadata !DIExpression()), !dbg !8320
  call void @llvm.dbg.declare(metadata i64* %__ret12, metadata !8321, metadata !DIExpression()), !dbg !8320
  %28 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8320
  %cbs13 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %28, i32 0, i32 2, !dbg !8320
  %29 = load %struct.drm_dp_mst_topology_cbs*, %struct.drm_dp_mst_topology_cbs** %cbs13, align 8, !dbg !8320
  %poll_hpd_irq14 = getelementptr inbounds %struct.drm_dp_mst_topology_cbs, %struct.drm_dp_mst_topology_cbs* %29, i32 0, i32 1, !dbg !8320
  %30 = load void (%struct.drm_dp_mst_topology_mgr*)*, void (%struct.drm_dp_mst_topology_mgr*)** %poll_hpd_irq14, align 8, !dbg !8320
  %tobool15 = icmp ne void (%struct.drm_dp_mst_topology_mgr*)* %30, null, !dbg !8320
  br i1 %tobool15, label %cond.true16, label %cond.false18, !dbg !8320

cond.true16:                                      ; preds = %if.then11
  store i32 50, i32* %m.addr.i102, align 4
  %31 = load i32, i32* %m.addr.i102, align 4, !dbg !8322
  %32 = call i1 @llvm.is.constant.i32(i32 %31) #7, !dbg !8323
  br i1 %32, label %if.then.i104, label %if.else.i109, !dbg !8324

if.then.i104:                                     ; preds = %cond.true16
  %33 = load i32, i32* %m.addr.i102, align 4, !dbg !8325
  %cmp.i103 = icmp slt i32 %33, 0, !dbg !8326
  br i1 %cmp.i103, label %if.then1.i105, label %if.end.i107, !dbg !8327

if.then1.i105:                                    ; preds = %if.then.i104
  store i64 4611686018427387902, i64* %retval.i101, align 8, !dbg !8328
  br label %msecs_to_jiffies.exit110, !dbg !8328

if.end.i107:                                      ; preds = %if.then.i104
  %34 = load i32, i32* %m.addr.i102, align 4, !dbg !8329
  %call.i106 = call i64 @_msecs_to_jiffies(i32 %34) #10, !dbg !8330
  store i64 %call.i106, i64* %retval.i101, align 8, !dbg !8331
  br label %msecs_to_jiffies.exit110, !dbg !8331

if.else.i109:                                     ; preds = %cond.true16
  %35 = load i32, i32* %m.addr.i102, align 4, !dbg !8332
  %call2.i108 = call i64 @__msecs_to_jiffies(i32 %35) #10, !dbg !8333
  store i64 %call2.i108, i64* %retval.i101, align 8, !dbg !8334
  br label %msecs_to_jiffies.exit110, !dbg !8334

msecs_to_jiffies.exit110:                         ; preds = %if.then1.i105, %if.end.i107, %if.else.i109
  %36 = load i64, i64* %retval.i101, align 8, !dbg !8335
  br label %cond.end19, !dbg !8320

cond.false18:                                     ; preds = %if.then11
  %37 = load i64, i64* %wait_timeout, align 8, !dbg !8320
  br label %cond.end19, !dbg !8320

cond.end19:                                       ; preds = %cond.false18, %msecs_to_jiffies.exit110
  %cond20 = phi i64 [ %36, %msecs_to_jiffies.exit110 ], [ %37, %cond.false18 ], !dbg !8320
  store i64 %cond20, i64* %__ret12, align 8, !dbg !8320
  call void @init_wait_entry(%struct.wait_queue_entry* %__wq_entry, i32 0) #8, !dbg !8320
  br label %for.cond21, !dbg !8320

for.cond21:                                       ; preds = %if.end40, %cond.end19
  call void @llvm.dbg.declare(metadata i64* %__int, metadata !8336, metadata !DIExpression()), !dbg !8340
  %38 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8340
  %tx_waitq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %38, i32 0, i32 24, !dbg !8340
  %call22 = call i64 @prepare_to_wait_event(%struct.wait_queue_head* %tx_waitq, %struct.wait_queue_entry* %__wq_entry, i32 2) #8, !dbg !8340
  store i64 %call22, i64* %__int, align 8, !dbg !8340
  call void @llvm.dbg.declare(metadata i8* %__cond23, metadata !8341, metadata !DIExpression()), !dbg !8344
  %39 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8344
  %40 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8344
  %call24 = call zeroext i1 @check_txmsg_state(%struct.drm_dp_mst_topology_mgr* %39, %struct.drm_dp_sideband_msg_tx* %40) #8, !dbg !8344
  %frombool25 = zext i1 %call24 to i8, !dbg !8344
  store i8 %frombool25, i8* %__cond23, align 1, !dbg !8344
  %41 = load i8, i8* %__cond23, align 1, !dbg !8345
  %tobool26 = trunc i8 %41 to i1, !dbg !8345
  br i1 %tobool26, label %land.lhs.true27, label %if.end30, !dbg !8345

land.lhs.true27:                                  ; preds = %for.cond21
  %42 = load i64, i64* %__ret12, align 8, !dbg !8345
  %tobool28 = icmp ne i64 %42, 0, !dbg !8345
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !8344

if.then29:                                        ; preds = %land.lhs.true27
  store i64 1, i64* %__ret12, align 8, !dbg !8345
  br label %if.end30, !dbg !8345

if.end30:                                         ; preds = %if.then29, %land.lhs.true27, %for.cond21
  %43 = load i8, i8* %__cond23, align 1, !dbg !8344
  %tobool32 = trunc i8 %43 to i1, !dbg !8344
  br i1 %tobool32, label %lor.end36, label %lor.rhs33, !dbg !8344

lor.rhs33:                                        ; preds = %if.end30
  %44 = load i64, i64* %__ret12, align 8, !dbg !8344
  %tobool34 = icmp ne i64 %44, 0, !dbg !8344
  %lnot35 = xor i1 %tobool34, true, !dbg !8344
  br label %lor.end36, !dbg !8344

lor.end36:                                        ; preds = %lor.rhs33, %if.end30
  %45 = phi i1 [ true, %if.end30 ], [ %lnot35, %lor.rhs33 ]
  %lor.ext37 = zext i1 %45 to i32, !dbg !8344
  store i32 %lor.ext37, i32* %tmp31, align 4, !dbg !8345
  %46 = load i32, i32* %tmp31, align 4, !dbg !8344
  %tobool38 = icmp ne i32 %46, 0, !dbg !8347
  br i1 %tobool38, label %if.then39, label %if.end40, !dbg !8340

if.then39:                                        ; preds = %lor.end36
  br label %for.end, !dbg !8347

if.end40:                                         ; preds = %lor.end36
  %47 = load i64, i64* %__ret12, align 8, !dbg !8340
  %call41 = call i64 @schedule_timeout(i64 %47) #8, !dbg !8340
  store i64 %call41, i64* %__ret12, align 8, !dbg !8340
  br label %for.cond21, !dbg !8348, !llvm.loop !8349

for.end:                                          ; preds = %if.then39
  %48 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8320
  %tx_waitq42 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %48, i32 0, i32 24, !dbg !8320
  call void @finish_wait(%struct.wait_queue_head* %tx_waitq42, %struct.wait_queue_entry* %__wq_entry) #8, !dbg !8320
  br label %__out, !dbg !8320

__out:                                            ; preds = %for.end
  call void @llvm.dbg.label(metadata !8351), !dbg !8320
  %49 = load i64, i64* %__ret12, align 8, !dbg !8320
  store i64 %49, i64* %tmp43, align 8, !dbg !8320
  %50 = load i64, i64* %tmp43, align 8, !dbg !8320
  store i64 %50, i64* %__ret, align 8, !dbg !8307
  br label %if.end44, !dbg !8307

if.end44:                                         ; preds = %__out, %lor.end
  %51 = load i64, i64* %__ret, align 8, !dbg !8283
  store i64 %51, i64* %tmp45, align 8, !dbg !8307
  %52 = load i64, i64* %tmp45, align 8, !dbg !8283
  %conv = trunc i64 %52 to i32, !dbg !8352
  store i32 %conv, i32* %ret, align 4, !dbg !8353
  %53 = load i32, i32* %ret, align 4, !dbg !8354
  %tobool46 = icmp ne i32 %53, 0, !dbg !8354
  br i1 %tobool46, label %if.then52, label %lor.lhs.false, !dbg !8356

lor.lhs.false:                                    ; preds = %if.end44
  %54 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8357
  %cbs47 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %54, i32 0, i32 2, !dbg !8358
  %55 = load %struct.drm_dp_mst_topology_cbs*, %struct.drm_dp_mst_topology_cbs** %cbs47, align 8, !dbg !8358
  %poll_hpd_irq48 = getelementptr inbounds %struct.drm_dp_mst_topology_cbs, %struct.drm_dp_mst_topology_cbs* %55, i32 0, i32 1, !dbg !8359
  %56 = load void (%struct.drm_dp_mst_topology_mgr*)*, void (%struct.drm_dp_mst_topology_mgr*)** %poll_hpd_irq48, align 8, !dbg !8359
  %tobool49 = icmp ne void (%struct.drm_dp_mst_topology_mgr*)* %56, null, !dbg !8357
  br i1 %tobool49, label %lor.lhs.false50, label %if.then52, !dbg !8360

lor.lhs.false50:                                  ; preds = %lor.lhs.false
  %57 = load i64, i64* %wait_expires, align 8, !dbg !8361
  %58 = load volatile i64, i64* @jiffies, align 8, !dbg !8361
  %sub = sub i64 %57, %58, !dbg !8361
  %cmp = icmp slt i64 %sub, 0, !dbg !8361
  br i1 %cmp, label %if.then52, label %if.end53, !dbg !8362

if.then52:                                        ; preds = %lor.lhs.false50, %lor.lhs.false, %if.end44
  br label %for.end56, !dbg !8363

if.end53:                                         ; preds = %lor.lhs.false50
  %59 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8364
  %cbs54 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %59, i32 0, i32 2, !dbg !8365
  %60 = load %struct.drm_dp_mst_topology_cbs*, %struct.drm_dp_mst_topology_cbs** %cbs54, align 8, !dbg !8365
  %poll_hpd_irq55 = getelementptr inbounds %struct.drm_dp_mst_topology_cbs, %struct.drm_dp_mst_topology_cbs* %60, i32 0, i32 1, !dbg !8366
  %61 = load void (%struct.drm_dp_mst_topology_mgr*)*, void (%struct.drm_dp_mst_topology_mgr*)** %poll_hpd_irq55, align 8, !dbg !8366
  %62 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8367
  call void %61(%struct.drm_dp_mst_topology_mgr* %62) #8, !dbg !8364
  br label %for.cond, !dbg !8368, !llvm.loop !8369

for.end56:                                        ; preds = %if.then52
  %63 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8372
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %63, i32 0, i32 17, !dbg !8373
  call void @mutex_lock(%struct.mutex* %qlock) #8, !dbg !8374
  %64 = load i32, i32* %ret, align 4, !dbg !8375
  %cmp57 = icmp sgt i32 %64, 0, !dbg !8377
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !8378

if.then59:                                        ; preds = %for.end56
  %65 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8379
  %state = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %65, i32 0, i32 7, !dbg !8382
  %66 = load i32, i32* %state, align 4, !dbg !8382
  %cmp60 = icmp eq i32 %66, 4, !dbg !8383
  br i1 %cmp60, label %if.then62, label %if.end63, !dbg !8384

if.then62:                                        ; preds = %if.then59
  store i32 -5, i32* %ret, align 4, !dbg !8385
  br label %out, !dbg !8387

if.end63:                                         ; preds = %if.then59
  br label %if.end78, !dbg !8388

if.else:                                          ; preds = %for.end56
  %67 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8389
  %68 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8389
  %state64 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %68, i32 0, i32 7, !dbg !8389
  %69 = load i32, i32* %state64, align 4, !dbg !8389
  %70 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8389
  %seqno = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %70, i32 0, i32 6, !dbg !8389
  %71 = load i32, i32* %seqno, align 8, !dbg !8389
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.100, i64 0, i64 0), %struct.drm_dp_sideband_msg_tx* %67, i32 %69, i32 %71) #8, !dbg !8389
  store i32 -5, i32* %ret, align 4, !dbg !8391
  %72 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8392
  %state65 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %72, i32 0, i32 7, !dbg !8394
  %73 = load i32, i32* %state65, align 4, !dbg !8394
  %cmp66 = icmp eq i32 %73, 0, !dbg !8395
  br i1 %cmp66, label %if.then76, label %lor.lhs.false68, !dbg !8396

lor.lhs.false68:                                  ; preds = %if.else
  %74 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8397
  %state69 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %74, i32 0, i32 7, !dbg !8398
  %75 = load i32, i32* %state69, align 4, !dbg !8398
  %cmp70 = icmp eq i32 %75, 1, !dbg !8399
  br i1 %cmp70, label %if.then76, label %lor.lhs.false72, !dbg !8400

lor.lhs.false72:                                  ; preds = %lor.lhs.false68
  %76 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8401
  %state73 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %76, i32 0, i32 7, !dbg !8402
  %77 = load i32, i32* %state73, align 4, !dbg !8402
  %cmp74 = icmp eq i32 %77, 2, !dbg !8403
  br i1 %cmp74, label %if.then76, label %if.end77, !dbg !8404

if.then76:                                        ; preds = %lor.lhs.false72, %lor.lhs.false68, %if.else
  %78 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8405
  %next = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %78, i32 0, i32 5, !dbg !8406
  call void @list_del(%struct.list_head* %next) #8, !dbg !8407
  br label %if.end77, !dbg !8407

if.end77:                                         ; preds = %if.then76, %lor.lhs.false72
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end63
  br label %out, !dbg !8408

out:                                              ; preds = %if.end78, %if.then62
  call void @llvm.dbg.label(metadata !8409), !dbg !8410
  %79 = load i32, i32* %ret, align 4, !dbg !8411
  %cmp79 = icmp eq i32 %79, -5, !dbg !8411
  %lnot81 = xor i1 %cmp79, true, !dbg !8411
  %lnot82 = xor i1 %lnot81, true, !dbg !8411
  %lnot.ext = zext i1 %lnot82 to i32, !dbg !8411
  %conv83 = sext i32 %lnot.ext to i64, !dbg !8411
  %tobool84 = icmp ne i64 %conv83, 0, !dbg !8411
  br i1 %tobool84, label %land.lhs.true85, label %if.end89, !dbg !8413

land.lhs.true85:                                  ; preds = %out
  %call86 = call zeroext i1 @drm_debug_enabled(i32 256) #8, !dbg !8414
  br i1 %call86, label %if.then88, label %if.end89, !dbg !8415

if.then88:                                        ; preds = %land.lhs.true85
  call void @llvm.dbg.declare(metadata %struct.drm_printer* %p, metadata !8416, metadata !DIExpression()), !dbg !8418
  call void @drm_debug_printer(%struct.drm_printer* sret %p, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0)) #8, !dbg !8419
  %80 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !8420
  call void @drm_dp_mst_dump_sideband_msg_tx(%struct.drm_printer* %p, %struct.drm_dp_sideband_msg_tx* %80) #8, !dbg !8421
  br label %if.end89, !dbg !8422

if.end89:                                         ; preds = %if.then88, %land.lhs.true85, %out
  %81 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8423
  %qlock90 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %81, i32 0, i32 17, !dbg !8424
  call void @mutex_unlock(%struct.mutex* %qlock90) #8, !dbg !8425
  %82 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !8426
  call void @drm_dp_mst_kick_tx(%struct.drm_dp_mst_topology_mgr* %82) #8, !dbg !8427
  %83 = load i32, i32* %ret, align 4, !dbg !8428
  ret i32 %83, !dbg !8429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_send_query_stream_enc_status(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, %struct.drm_dp_query_stream_enc_status_ack_reply* %status) #0 !dbg !8430 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %status.addr = alloca %struct.drm_dp_query_stream_enc_status_ack_reply*, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %nonce = alloca [7 x i8], align 1
  %len = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !8434, metadata !DIExpression()), !dbg !8435
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !8436, metadata !DIExpression()), !dbg !8437
  store %struct.drm_dp_query_stream_enc_status_ack_reply* %status, %struct.drm_dp_query_stream_enc_status_ack_reply** %status.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_query_stream_enc_status_ack_reply** %status.addr, metadata !8438, metadata !DIExpression()), !dbg !8439
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !8440, metadata !DIExpression()), !dbg !8441
  call void @llvm.dbg.declare(metadata [7 x i8]* %nonce, metadata !8442, metadata !DIExpression()), !dbg !8443
  call void @llvm.dbg.declare(metadata i32* %len, metadata !8444, metadata !DIExpression()), !dbg !8445
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8446, metadata !DIExpression()), !dbg !8447
  %call = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !8448
  %0 = bitcast i8* %call to %struct.drm_dp_sideband_msg_tx*, !dbg !8448
  store %struct.drm_dp_sideband_msg_tx* %0, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8449
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8450
  %tobool = icmp ne %struct.drm_dp_sideband_msg_tx* %1, null, !dbg !8450
  br i1 %tobool, label %if.end, label %if.then, !dbg !8452

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !8453
  br label %return, !dbg !8453

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8454
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8455
  %call1 = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %2, %struct.drm_dp_mst_port* %3) #8, !dbg !8456
  store %struct.drm_dp_mst_port* %call1, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8457
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8458
  %tobool2 = icmp ne %struct.drm_dp_mst_port* %4, null, !dbg !8458
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !8460

if.then3:                                         ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !8461
  br label %out_get_port, !dbg !8463

if.end4:                                          ; preds = %if.end
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %nonce, i64 0, i64 0, !dbg !8464
  call void @get_random_bytes(i8* %arraydecay, i32 7) #8, !dbg !8465
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8466
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 12, !dbg !8467
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !8467
  %7 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8468
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %7, i32 0, i32 4, !dbg !8469
  store %struct.drm_dp_mst_branch* %6, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !8470
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8471
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8472
  %vcpi = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 16, !dbg !8473
  %vcpi5 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi, i32 0, i32 0, !dbg !8474
  %10 = load i32, i32* %vcpi5, align 8, !dbg !8474
  %conv = trunc i32 %10 to i8, !dbg !8472
  %arraydecay6 = getelementptr inbounds [7 x i8], [7 x i8]* %nonce, i64 0, i64 0, !dbg !8475
  %call7 = call i32 @build_query_stream_enc_status(%struct.drm_dp_sideband_msg_tx* %8, i8 zeroext %conv, i8* %arraydecay6) #8, !dbg !8476
  store i32 %call7, i32* %len, align 4, !dbg !8477
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8478
  %12 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8479
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %11, %struct.drm_dp_sideband_msg_tx* %12) #8, !dbg !8480
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8481
  %mst_primary8 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 12, !dbg !8482
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary8, align 8, !dbg !8482
  %15 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8483
  %call9 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %14, %struct.drm_dp_sideband_msg_tx* %15) #8, !dbg !8484
  store i32 %call9, i32* %ret, align 4, !dbg !8485
  %16 = load i32, i32* %ret, align 4, !dbg !8486
  %cmp = icmp slt i32 %16, 0, !dbg !8488
  br i1 %cmp, label %if.then11, label %if.else, !dbg !8489

if.then11:                                        ; preds = %if.end4
  br label %out, !dbg !8490

if.else:                                          ; preds = %if.end4
  %17 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8492
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %17, i32 0, i32 9, !dbg !8494
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !8495
  %18 = load i8, i8* %reply_type, align 2, !dbg !8495
  %conv12 = zext i8 %18 to i32, !dbg !8492
  %cmp13 = icmp eq i32 %conv12, 1, !dbg !8496
  br i1 %cmp13, label %if.then15, label %if.end17, !dbg !8497

if.then15:                                        ; preds = %if.else
  %19 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8498
  %dev = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %19, i32 0, i32 1, !dbg !8498
  %20 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !8498
  %dev16 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %20, i32 0, i32 3, !dbg !8498
  %21 = load %struct.device*, %struct.device** %dev16, align 8, !dbg !8498
  call void (%struct.device*, i32, i8*, ...) @drm_dev_dbg(%struct.device* %21, i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.17, i64 0, i64 0)) #8, !dbg !8498
  store i32 -6, i32* %ret, align 4, !dbg !8500
  br label %out, !dbg !8501

if.end17:                                         ; preds = %if.else
  br label %if.end18

if.end18:                                         ; preds = %if.end17
  store i32 0, i32* %ret, align 4, !dbg !8502
  %22 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %status.addr, align 8, !dbg !8503
  %23 = bitcast %struct.drm_dp_query_stream_enc_status_ack_reply* %22 to i8*, !dbg !8504
  %24 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8505
  %reply19 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %24, i32 0, i32 9, !dbg !8506
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply19, i32 0, i32 2, !dbg !8507
  %enc_status = bitcast %union.ack_replies* %u to %struct.drm_dp_query_stream_enc_status_ack_reply*, !dbg !8508
  %25 = bitcast %struct.drm_dp_query_stream_enc_status_ack_reply* %enc_status to i8*, !dbg !8504
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %23, i8* align 2 %25, i64 11, i1 false), !dbg !8504
  br label %out, !dbg !8504

out:                                              ; preds = %if.end18, %if.then15, %if.then11
  call void @llvm.dbg.label(metadata !8509), !dbg !8510
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8511
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %26) #8, !dbg !8512
  br label %out_get_port, !dbg !8512

out_get_port:                                     ; preds = %out, %if.then3
  call void @llvm.dbg.label(metadata !8513), !dbg !8514
  %27 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !8515
  %28 = bitcast %struct.drm_dp_sideband_msg_tx* %27 to i8*, !dbg !8515
  call void @kfree(i8* %28) #8, !dbg !8516
  %29 = load i32, i32* %ret, align 4, !dbg !8517
  store i32 %29, i32* %retval, align 4, !dbg !8518
  br label %return, !dbg !8518

return:                                           ; preds = %out_get_port, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !8519
  ret i32 %30, !dbg !8519
}

; Function Attrs: noredzone
declare dso_local void @get_random_bytes(i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @build_query_stream_enc_status(%struct.drm_dp_sideband_msg_tx* %msg, i8 zeroext %stream_id, i8* %q_id) #0 !dbg !8520 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %stream_id.addr = alloca i8, align 1
  %q_id.addr = alloca i8*, align 8
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !8523, metadata !DIExpression()), !dbg !8524
  store i8 %stream_id, i8* %stream_id.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %stream_id.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  store i8* %q_id, i8** %q_id.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %q_id.addr, metadata !8527, metadata !DIExpression()), !dbg !8528
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !8529, metadata !DIExpression()), !dbg !8530
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !8531
  store i8 56, i8* %req_type, align 8, !dbg !8532
  %0 = load i8, i8* %stream_id.addr, align 1, !dbg !8533
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !8534
  %enc_status = bitcast %union.ack_req* %u to %struct.drm_dp_query_stream_enc_status*, !dbg !8535
  %stream_id1 = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status, i32 0, i32 0, !dbg !8536
  store i8 %0, i8* %stream_id1, align 8, !dbg !8537
  %u2 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !8538
  %enc_status3 = bitcast %union.ack_req* %u2 to %struct.drm_dp_query_stream_enc_status*, !dbg !8539
  %client_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status3, i32 0, i32 1, !dbg !8540
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %client_id, i64 0, i64 0, !dbg !8541
  %1 = load i8*, i8** %q_id.addr, align 8, !dbg !8542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %1, i64 7, i1 false), !dbg !8541
  %u4 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !8543
  %enc_status5 = bitcast %union.ack_req* %u4 to %struct.drm_dp_query_stream_enc_status*, !dbg !8544
  %stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status5, i32 0, i32 2, !dbg !8545
  store i8 0, i8* %stream_event, align 8, !dbg !8546
  %u6 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !8547
  %enc_status7 = bitcast %union.ack_req* %u6 to %struct.drm_dp_query_stream_enc_status*, !dbg !8548
  %valid_stream_event = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status7, i32 0, i32 3, !dbg !8549
  store i8 0, i8* %valid_stream_event, align 1, !dbg !8550
  %u8 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !8551
  %enc_status9 = bitcast %union.ack_req* %u8 to %struct.drm_dp_query_stream_enc_status*, !dbg !8552
  %stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status9, i32 0, i32 4, !dbg !8553
  store i8 0, i8* %stream_behavior, align 2, !dbg !8554
  %u10 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !8555
  %enc_status11 = bitcast %union.ack_req* %u10 to %struct.drm_dp_query_stream_enc_status*, !dbg !8556
  %valid_stream_behavior = getelementptr inbounds %struct.drm_dp_query_stream_enc_status, %struct.drm_dp_query_stream_enc_status* %enc_status11, i32 0, i32 5, !dbg !8557
  store i8 0, i8* %valid_stream_behavior, align 1, !dbg !8558
  %2 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !8559
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %2) #8, !dbg !8560
  ret i32 0, !dbg !8561
}

; Function Attrs: noredzone
declare dso_local void @drm_dev_dbg(%struct.device*, i32, i8*, ...) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_update_payload_part1(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !8562 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %req_payload = alloca %struct.drm_dp_payload, align 4
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cur_slots = alloca i32, align 4
  %vcpi = alloca %struct.drm_dp_vcpi*, align 8
  %payload = alloca %struct.drm_dp_payload*, align 8
  %put_port = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !8565, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload* %req_payload, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !8569, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8571, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8573, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.declare(metadata i32* %cur_slots, metadata !8575, metadata !DIExpression()), !dbg !8576
  store i32 1, i32* %cur_slots, align 4, !dbg !8576
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8577
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 19, !dbg !8578
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !8579
  store i32 0, i32* %i, align 4, !dbg !8580
  br label %for.cond, !dbg !8582

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8583
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8585
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 5, !dbg !8586
  %3 = load i32, i32* %max_payloads, align 8, !dbg !8586
  %cmp = icmp slt i32 %1, %3, !dbg !8587
  br i1 %cmp, label %for.body, label %for.end, !dbg !8588

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi** %vcpi, metadata !8589, metadata !DIExpression()), !dbg !8591
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8592
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 20, !dbg !8593
  %5 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !8593
  %6 = load i32, i32* %i, align 4, !dbg !8594
  %idxprom = sext i32 %6 to i64, !dbg !8592
  %arrayidx = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %5, i64 %idxprom, !dbg !8592
  %7 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx, align 8, !dbg !8592
  store %struct.drm_dp_vcpi* %7, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !8591
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload** %payload, metadata !8595, metadata !DIExpression()), !dbg !8596
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8597
  %payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 21, !dbg !8598
  %9 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads, align 8, !dbg !8598
  %10 = load i32, i32* %i, align 4, !dbg !8599
  %idxprom1 = sext i32 %10 to i64, !dbg !8597
  %arrayidx2 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %9, i64 %idxprom1, !dbg !8597
  store %struct.drm_dp_payload* %arrayidx2, %struct.drm_dp_payload** %payload, align 8, !dbg !8596
  call void @llvm.dbg.declare(metadata i8* %put_port, metadata !8600, metadata !DIExpression()), !dbg !8601
  store i8 0, i8* %put_port, align 1, !dbg !8601
  %11 = load i32, i32* %cur_slots, align 4, !dbg !8602
  %start_slot = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 1, !dbg !8603
  store i32 %11, i32* %start_slot, align 4, !dbg !8604
  %12 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !8605
  %tobool = icmp ne %struct.drm_dp_vcpi* %12, null, !dbg !8605
  br i1 %tobool, label %if.then, label %if.else, !dbg !8607

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8608, metadata !DIExpression()), !dbg !8611
  %13 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !8611
  %14 = bitcast %struct.drm_dp_vcpi* %13 to i8*, !dbg !8611
  store i8* %14, i8** %__mptr, align 8, !dbg !8611
  br label %do.body, !dbg !8611

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !8612

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !8611
  %add.ptr = getelementptr i8, i8* %15, i64 -1240, !dbg !8611
  %16 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !8611
  store %struct.drm_dp_mst_port* %16, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !8612
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !8611
  store %struct.drm_dp_mst_port* %17, %struct.drm_dp_mst_port** %port, align 8, !dbg !8614
  %18 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !8615
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %18, i32 0, i32 3, !dbg !8617
  %19 = load i32, i32* %num_slots, align 4, !dbg !8617
  %tobool3 = icmp ne i32 %19, 0, !dbg !8615
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !8618

if.then4:                                         ; preds = %do.end
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8619
  %21 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !8621
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %20, %struct.drm_dp_mst_port* %21) #8, !dbg !8622
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port, align 8, !dbg !8623
  %22 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !8624
  %tobool5 = icmp ne %struct.drm_dp_mst_port* %22, null, !dbg !8624
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !8626

if.then6:                                         ; preds = %if.then4
  %23 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8627
  %payload_lock7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %23, i32 0, i32 19, !dbg !8629
  call void @mutex_unlock(%struct.mutex* %payload_lock7) #8, !dbg !8630
  store i32 -22, i32* %retval, align 4, !dbg !8631
  br label %return, !dbg !8631

if.end:                                           ; preds = %if.then4
  store i8 1, i8* %put_port, align 1, !dbg !8632
  br label %if.end8, !dbg !8633

if.end8:                                          ; preds = %if.end, %do.end
  %24 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !8634
  %num_slots9 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %24, i32 0, i32 3, !dbg !8635
  %25 = load i32, i32* %num_slots9, align 4, !dbg !8635
  %num_slots10 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 2, !dbg !8636
  store i32 %25, i32* %num_slots10, align 4, !dbg !8637
  %26 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !8638
  %vcpi11 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %26, i32 0, i32 0, !dbg !8639
  %27 = load i32, i32* %vcpi11, align 4, !dbg !8639
  %vcpi12 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 3, !dbg !8640
  store i32 %27, i32* %vcpi12, align 4, !dbg !8641
  br label %if.end14, !dbg !8642

if.else:                                          ; preds = %for.body
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %port, align 8, !dbg !8643
  %num_slots13 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 2, !dbg !8645
  store i32 0, i32* %num_slots13, align 4, !dbg !8646
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.end8
  %start_slot15 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 1, !dbg !8647
  %28 = load i32, i32* %start_slot15, align 4, !dbg !8647
  %29 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8648
  %start_slot16 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %29, i32 0, i32 1, !dbg !8649
  store i32 %28, i32* %start_slot16, align 4, !dbg !8650
  %30 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8651
  %num_slots17 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %30, i32 0, i32 2, !dbg !8653
  %31 = load i32, i32* %num_slots17, align 4, !dbg !8653
  %num_slots18 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 2, !dbg !8654
  %32 = load i32, i32* %num_slots18, align 4, !dbg !8654
  %cmp19 = icmp ne i32 %31, %32, !dbg !8655
  br i1 %cmp19, label %if.then20, label %if.end43, !dbg !8656

if.then20:                                        ; preds = %if.end14
  %num_slots21 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 2, !dbg !8657
  %33 = load i32, i32* %num_slots21, align 4, !dbg !8657
  %tobool22 = icmp ne i32 %33, 0, !dbg !8660
  br i1 %tobool22, label %if.then23, label %if.else30, !dbg !8661

if.then23:                                        ; preds = %if.then20
  %34 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8662
  %35 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !8664
  %vcpi24 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %35, i32 0, i32 0, !dbg !8665
  %36 = load i32, i32* %vcpi24, align 4, !dbg !8665
  %call25 = call i32 @drm_dp_create_payload_step1(%struct.drm_dp_mst_topology_mgr* %34, i32 %36, %struct.drm_dp_payload* %req_payload) #8, !dbg !8666
  %num_slots26 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 2, !dbg !8667
  %37 = load i32, i32* %num_slots26, align 4, !dbg !8667
  %38 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8668
  %num_slots27 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %38, i32 0, i32 2, !dbg !8669
  store i32 %37, i32* %num_slots27, align 4, !dbg !8670
  %vcpi28 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 3, !dbg !8671
  %39 = load i32, i32* %vcpi28, align 4, !dbg !8671
  %40 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8672
  %vcpi29 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %40, i32 0, i32 3, !dbg !8673
  store i32 %39, i32* %vcpi29, align 4, !dbg !8674
  br label %if.end40, !dbg !8675

if.else30:                                        ; preds = %if.then20
  %41 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8676
  %num_slots31 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %41, i32 0, i32 2, !dbg !8678
  %42 = load i32, i32* %num_slots31, align 4, !dbg !8678
  %tobool32 = icmp ne i32 %42, 0, !dbg !8676
  br i1 %tobool32, label %if.then33, label %if.end39, !dbg !8679

if.then33:                                        ; preds = %if.else30
  %43 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8680
  %num_slots34 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %43, i32 0, i32 2, !dbg !8682
  store i32 0, i32* %num_slots34, align 4, !dbg !8683
  %44 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8684
  %45 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !8685
  %46 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8686
  %vcpi35 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %46, i32 0, i32 3, !dbg !8687
  %47 = load i32, i32* %vcpi35, align 4, !dbg !8687
  %48 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8688
  %call36 = call i32 @drm_dp_destroy_payload_step1(%struct.drm_dp_mst_topology_mgr* %44, %struct.drm_dp_mst_port* %45, i32 %47, %struct.drm_dp_payload* %48) #8, !dbg !8689
  %49 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8690
  %payload_state = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %49, i32 0, i32 0, !dbg !8691
  %50 = load i32, i32* %payload_state, align 4, !dbg !8691
  %payload_state37 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 0, !dbg !8692
  store i32 %50, i32* %payload_state37, align 4, !dbg !8693
  %51 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8694
  %start_slot38 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %51, i32 0, i32 1, !dbg !8695
  store i32 0, i32* %start_slot38, align 4, !dbg !8696
  br label %if.end39, !dbg !8697

if.end39:                                         ; preds = %if.then33, %if.else30
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then23
  %payload_state41 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 0, !dbg !8698
  %52 = load i32, i32* %payload_state41, align 4, !dbg !8698
  %53 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload, align 8, !dbg !8699
  %payload_state42 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %53, i32 0, i32 0, !dbg !8700
  store i32 %52, i32* %payload_state42, align 4, !dbg !8701
  br label %if.end43, !dbg !8702

if.end43:                                         ; preds = %if.end40, %if.end14
  %num_slots44 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %req_payload, i32 0, i32 2, !dbg !8703
  %54 = load i32, i32* %num_slots44, align 4, !dbg !8703
  %55 = load i32, i32* %cur_slots, align 4, !dbg !8704
  %add = add i32 %55, %54, !dbg !8704
  store i32 %add, i32* %cur_slots, align 4, !dbg !8704
  %56 = load i8, i8* %put_port, align 1, !dbg !8705
  %tobool45 = trunc i8 %56 to i1, !dbg !8705
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !8707

if.then46:                                        ; preds = %if.end43
  %57 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !8708
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %57) #8, !dbg !8709
  br label %if.end47, !dbg !8709

if.end47:                                         ; preds = %if.then46, %if.end43
  br label %for.inc, !dbg !8710

for.inc:                                          ; preds = %if.end47
  %58 = load i32, i32* %i, align 4, !dbg !8711
  %inc = add i32 %58, 1, !dbg !8711
  store i32 %inc, i32* %i, align 4, !dbg !8711
  br label %for.cond, !dbg !8712, !llvm.loop !8713

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !8715
  br label %for.cond48, !dbg !8717

for.cond48:                                       ; preds = %for.end96, %if.then57, %for.end
  %59 = load i32, i32* %i, align 4, !dbg !8718
  %60 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8720
  %max_payloads49 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %60, i32 0, i32 5, !dbg !8721
  %61 = load i32, i32* %max_payloads49, align 8, !dbg !8721
  %cmp50 = icmp slt i32 %59, %61, !dbg !8722
  br i1 %cmp50, label %for.body51, label %for.end110, !dbg !8723

for.body51:                                       ; preds = %for.cond48
  %62 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8724
  %payloads52 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %62, i32 0, i32 21, !dbg !8727
  %63 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads52, align 8, !dbg !8727
  %64 = load i32, i32* %i, align 4, !dbg !8728
  %idxprom53 = sext i32 %64 to i64, !dbg !8724
  %arrayidx54 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %63, i64 %idxprom53, !dbg !8724
  %payload_state55 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %arrayidx54, i32 0, i32 0, !dbg !8729
  %65 = load i32, i32* %payload_state55, align 4, !dbg !8729
  %cmp56 = icmp ne i32 %65, 3, !dbg !8730
  br i1 %cmp56, label %if.then57, label %if.end59, !dbg !8731

if.then57:                                        ; preds = %for.body51
  %66 = load i32, i32* %i, align 4, !dbg !8732
  %inc58 = add i32 %66, 1, !dbg !8732
  store i32 %inc58, i32* %i, align 4, !dbg !8732
  br label %for.cond48, !dbg !8734, !llvm.loop !8735

if.end59:                                         ; preds = %for.body51
  %67 = load i32, i32* %i, align 4, !dbg !8737
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0), i32 %67) #8, !dbg !8737
  %68 = load i32, i32* %i, align 4, !dbg !8738
  store i32 %68, i32* %j, align 4, !dbg !8740
  br label %for.cond60, !dbg !8741

for.cond60:                                       ; preds = %for.inc94, %if.end59
  %69 = load i32, i32* %j, align 4, !dbg !8742
  %70 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8744
  %max_payloads61 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %70, i32 0, i32 5, !dbg !8745
  %71 = load i32, i32* %max_payloads61, align 8, !dbg !8745
  %sub = sub i32 %71, 1, !dbg !8746
  %cmp62 = icmp slt i32 %69, %sub, !dbg !8747
  br i1 %cmp62, label %for.body63, label %for.end96, !dbg !8748

for.body63:                                       ; preds = %for.cond60
  %72 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8749
  %payloads64 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %72, i32 0, i32 21, !dbg !8751
  %73 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads64, align 8, !dbg !8751
  %74 = load i32, i32* %j, align 4, !dbg !8752
  %idxprom65 = sext i32 %74 to i64, !dbg !8749
  %arrayidx66 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %73, i64 %idxprom65, !dbg !8749
  %75 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8753
  %payloads67 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %75, i32 0, i32 21, !dbg !8754
  %76 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads67, align 8, !dbg !8754
  %77 = load i32, i32* %j, align 4, !dbg !8755
  %add68 = add i32 %77, 1, !dbg !8756
  %idxprom69 = sext i32 %add68 to i64, !dbg !8753
  %arrayidx70 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %76, i64 %idxprom69, !dbg !8753
  %78 = bitcast %struct.drm_dp_payload* %arrayidx66 to i8*, !dbg !8753
  %79 = bitcast %struct.drm_dp_payload* %arrayidx70 to i8*, !dbg !8753
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %78, i8* align 4 %79, i64 16, i1 false), !dbg !8753
  %80 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8757
  %proposed_vcpis71 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %80, i32 0, i32 20, !dbg !8758
  %81 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis71, align 8, !dbg !8758
  %82 = load i32, i32* %j, align 4, !dbg !8759
  %add72 = add i32 %82, 1, !dbg !8760
  %idxprom73 = sext i32 %add72 to i64, !dbg !8757
  %arrayidx74 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %81, i64 %idxprom73, !dbg !8757
  %83 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx74, align 8, !dbg !8757
  %84 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8761
  %proposed_vcpis75 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %84, i32 0, i32 20, !dbg !8762
  %85 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis75, align 8, !dbg !8762
  %86 = load i32, i32* %j, align 4, !dbg !8763
  %idxprom76 = sext i32 %86 to i64, !dbg !8761
  %arrayidx77 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %85, i64 %idxprom76, !dbg !8761
  store %struct.drm_dp_vcpi* %83, %struct.drm_dp_vcpi** %arrayidx77, align 8, !dbg !8764
  %87 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8765
  %proposed_vcpis78 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %87, i32 0, i32 20, !dbg !8767
  %88 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis78, align 8, !dbg !8767
  %89 = load i32, i32* %j, align 4, !dbg !8768
  %idxprom79 = sext i32 %89 to i64, !dbg !8765
  %arrayidx80 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %88, i64 %idxprom79, !dbg !8765
  %90 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx80, align 8, !dbg !8765
  %tobool81 = icmp ne %struct.drm_dp_vcpi* %90, null, !dbg !8765
  br i1 %tobool81, label %land.lhs.true, label %if.else89, !dbg !8769

land.lhs.true:                                    ; preds = %for.body63
  %91 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8770
  %proposed_vcpis82 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %91, i32 0, i32 20, !dbg !8771
  %92 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis82, align 8, !dbg !8771
  %93 = load i32, i32* %j, align 4, !dbg !8772
  %idxprom83 = sext i32 %93 to i64, !dbg !8770
  %arrayidx84 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %92, i64 %idxprom83, !dbg !8770
  %94 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx84, align 8, !dbg !8770
  %num_slots85 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %94, i32 0, i32 3, !dbg !8773
  %95 = load i32, i32* %num_slots85, align 4, !dbg !8773
  %tobool86 = icmp ne i32 %95, 0, !dbg !8770
  br i1 %tobool86, label %if.then87, label %if.else89, !dbg !8774

if.then87:                                        ; preds = %land.lhs.true
  %96 = load i32, i32* %j, align 4, !dbg !8775
  %add88 = add i32 %96, 1, !dbg !8777
  %conv = sext i32 %add88 to i64, !dbg !8775
  %97 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8778
  %payload_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %97, i32 0, i32 22, !dbg !8779
  call void @set_bit(i64 %conv, i64* %payload_mask) #8, !dbg !8780
  br label %if.end93, !dbg !8781

if.else89:                                        ; preds = %land.lhs.true, %for.body63
  %98 = load i32, i32* %j, align 4, !dbg !8782
  %add90 = add i32 %98, 1, !dbg !8784
  %conv91 = sext i32 %add90 to i64, !dbg !8782
  %99 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8785
  %payload_mask92 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %99, i32 0, i32 22, !dbg !8786
  call void @clear_bit(i64 %conv91, i64* %payload_mask92) #8, !dbg !8787
  br label %if.end93

if.end93:                                         ; preds = %if.else89, %if.then87
  br label %for.inc94, !dbg !8788

for.inc94:                                        ; preds = %if.end93
  %100 = load i32, i32* %j, align 4, !dbg !8789
  %inc95 = add i32 %100, 1, !dbg !8789
  store i32 %inc95, i32* %j, align 4, !dbg !8789
  br label %for.cond60, !dbg !8790, !llvm.loop !8791

for.end96:                                        ; preds = %for.cond60
  %101 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8793
  %payloads97 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %101, i32 0, i32 21, !dbg !8794
  %102 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads97, align 8, !dbg !8794
  %103 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8795
  %max_payloads98 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %103, i32 0, i32 5, !dbg !8796
  %104 = load i32, i32* %max_payloads98, align 8, !dbg !8796
  %sub99 = sub i32 %104, 1, !dbg !8797
  %idxprom100 = sext i32 %sub99 to i64, !dbg !8793
  %arrayidx101 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %102, i64 %idxprom100, !dbg !8793
  %105 = bitcast %struct.drm_dp_payload* %arrayidx101 to i8*, !dbg !8798
  call void @llvm.memset.p0i8.i64(i8* align 4 %105, i8 0, i64 16, i1 false), !dbg !8798
  %106 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8799
  %proposed_vcpis102 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %106, i32 0, i32 20, !dbg !8800
  %107 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis102, align 8, !dbg !8800
  %108 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8801
  %max_payloads103 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %108, i32 0, i32 5, !dbg !8802
  %109 = load i32, i32* %max_payloads103, align 8, !dbg !8802
  %sub104 = sub i32 %109, 1, !dbg !8803
  %idxprom105 = sext i32 %sub104 to i64, !dbg !8799
  %arrayidx106 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %107, i64 %idxprom105, !dbg !8799
  store %struct.drm_dp_vcpi* null, %struct.drm_dp_vcpi** %arrayidx106, align 8, !dbg !8804
  %110 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8805
  %max_payloads107 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %110, i32 0, i32 5, !dbg !8806
  %111 = load i32, i32* %max_payloads107, align 8, !dbg !8806
  %conv108 = sext i32 %111 to i64, !dbg !8805
  %112 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8807
  %payload_mask109 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %112, i32 0, i32 22, !dbg !8808
  call void @clear_bit(i64 %conv108, i64* %payload_mask109) #8, !dbg !8809
  br label %for.cond48, !dbg !8810, !llvm.loop !8735

for.end110:                                       ; preds = %for.cond48
  %113 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8811
  %payload_lock111 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %113, i32 0, i32 19, !dbg !8812
  call void @mutex_unlock(%struct.mutex* %payload_lock111) #8, !dbg !8813
  store i32 0, i32* %retval, align 4, !dbg !8814
  br label %return, !dbg !8814

return:                                           ; preds = %for.end110, %if.then6
  %114 = load i32, i32* %retval, align 4, !dbg !8815
  ret i32 %114, !dbg !8815
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #3

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_create_payload_step1(%struct.drm_dp_mst_topology_mgr* %mgr, i32 %id, %struct.drm_dp_payload* %payload) #0 !dbg !8816 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %id.addr = alloca i32, align 4
  %payload.addr = alloca %struct.drm_dp_payload*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !8819, metadata !DIExpression()), !dbg !8820
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !8821, metadata !DIExpression()), !dbg !8822
  store %struct.drm_dp_payload* %payload, %struct.drm_dp_payload** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload** %payload.addr, metadata !8823, metadata !DIExpression()), !dbg !8824
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8825, metadata !DIExpression()), !dbg !8826
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8827
  %1 = load i32, i32* %id.addr, align 4, !dbg !8828
  %2 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !8829
  %call = call i32 @drm_dp_dpcd_write_payload(%struct.drm_dp_mst_topology_mgr* %0, i32 %1, %struct.drm_dp_payload* %2) #8, !dbg !8830
  store i32 %call, i32* %ret, align 4, !dbg !8831
  %3 = load i32, i32* %ret, align 4, !dbg !8832
  %cmp = icmp slt i32 %3, 0, !dbg !8834
  br i1 %cmp, label %if.then, label %if.end, !dbg !8835

if.then:                                          ; preds = %entry
  %4 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !8836
  %payload_state = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %4, i32 0, i32 0, !dbg !8838
  store i32 0, i32* %payload_state, align 4, !dbg !8839
  %5 = load i32, i32* %ret, align 4, !dbg !8840
  store i32 %5, i32* %retval, align 4, !dbg !8841
  br label %return, !dbg !8841

if.end:                                           ; preds = %entry
  %6 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !8842
  %payload_state1 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %6, i32 0, i32 0, !dbg !8843
  store i32 1, i32* %payload_state1, align 4, !dbg !8844
  store i32 0, i32* %retval, align 4, !dbg !8845
  br label %return, !dbg !8845

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !8846
  ret i32 %7, !dbg !8846
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_destroy_payload_step1(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i32 %id, %struct.drm_dp_payload* %payload) #0 !dbg !8847 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %id.addr = alloca i32, align 4
  %payload.addr = alloca %struct.drm_dp_payload*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !8850, metadata !DIExpression()), !dbg !8851
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !8852, metadata !DIExpression()), !dbg !8853
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !8854, metadata !DIExpression()), !dbg !8855
  store %struct.drm_dp_payload* %payload, %struct.drm_dp_payload** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload** %payload.addr, metadata !8856, metadata !DIExpression()), !dbg !8857
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.101, i64 0, i64 0)) #8, !dbg !8858
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8859
  %tobool = icmp ne %struct.drm_dp_mst_port* %0, null, !dbg !8859
  br i1 %tobool, label %if.then, label %if.end, !dbg !8861

if.then:                                          ; preds = %entry
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8862
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !8864
  %3 = load i32, i32* %id.addr, align 4, !dbg !8865
  %call = call i32 @drm_dp_payload_send_msg(%struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_port* %2, i32 %3, i32 0) #8, !dbg !8866
  br label %if.end, !dbg !8867

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8868
  %5 = load i32, i32* %id.addr, align 4, !dbg !8869
  %6 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !8870
  %call1 = call i32 @drm_dp_dpcd_write_payload(%struct.drm_dp_mst_topology_mgr* %4, i32 %5, %struct.drm_dp_payload* %6) #8, !dbg !8871
  %7 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !8872
  %payload_state = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %7, i32 0, i32 0, !dbg !8873
  store i32 3, i32* %payload_state, align 4, !dbg !8874
  ret i32 0, !dbg !8875
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @set_bit(i64 %nr, i64* %addr) #0 !dbg !8876 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8882, metadata !DIExpression()), !dbg !8885
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8887, metadata !DIExpression()), !dbg !8888
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8889, metadata !DIExpression()), !dbg !8897
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8899, metadata !DIExpression()), !dbg !8900
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8901, metadata !DIExpression()), !dbg !8902
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8903, metadata !DIExpression()), !dbg !8904
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8905
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8906
  %div = sdiv i64 %1, 64, !dbg !8906
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8907
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8905
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8908
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8909
  %conv.i = trunc i64 %4 to i32, !dbg !8909
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #10, !dbg !8910
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8911
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8911
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #10, !dbg !8911
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8912
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8913
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !8914
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !8916
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !8917

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !8918
  %12 = bitcast i64* %11 to i8*, !dbg !8918
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8918
  %shr.i = ashr i64 %13, 3, !dbg !8918
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !8918
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !8920
  %and.i = and i64 %14, 7, !dbg !8920
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !8920
  %shl.i = shl i32 1, %sh_prom.i, !dbg !8920
  call void asm sideeffect "orb ${1:b},$0", "=*m,iq,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %shl.i, i8* %add.ptr.i) #7, !dbg !8921, !srcloc !8922
  br label %arch_set_bit.exit, !dbg !8923

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !8924
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !8926
  call void asm sideeffect " btsq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !8927, !srcloc !8928
  br label %arch_set_bit.exit

arch_set_bit.exit:                                ; preds = %if.then.i, %if.else.i
  ret void, !dbg !8929
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !8930 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !8931, metadata !DIExpression()), !dbg !8933
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !8935, metadata !DIExpression()), !dbg !8936
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !8889, metadata !DIExpression()), !dbg !8937
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !8899, metadata !DIExpression()), !dbg !8939
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !8940, metadata !DIExpression()), !dbg !8941
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !8942, metadata !DIExpression()), !dbg !8943
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !8944
  %1 = load i64, i64* %nr.addr, align 8, !dbg !8945
  %div = sdiv i64 %1, 64, !dbg !8945
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !8946
  %2 = bitcast i64* %add.ptr to i8*, !dbg !8944
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !8947
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !8948
  %conv.i = trunc i64 %4 to i32, !dbg !8948
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #10, !dbg !8949
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !8950
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !8950
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #10, !dbg !8950
  %7 = load i64, i64* %nr.addr, align 8, !dbg !8951
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !8952
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !8953
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !8955
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !8956

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !8957
  %12 = bitcast i64* %11 to i8*, !dbg !8957
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !8957
  %shr.i = ashr i64 %13, 3, !dbg !8957
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !8957
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !8959
  %and.i = and i64 %14, 7, !dbg !8959
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !8959
  %shl.i = shl i32 1, %sh_prom.i, !dbg !8959
  %neg.i = xor i32 %shl.i, -1, !dbg !8960
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !8961, !srcloc !8962
  br label %arch_clear_bit.exit, !dbg !8963

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !8964
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !8966
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !8967, !srcloc !8968
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !8969
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_update_payload_part2(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !8970 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !8971, metadata !DIExpression()), !dbg !8972
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !8973, metadata !DIExpression()), !dbg !8974
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8975, metadata !DIExpression()), !dbg !8976
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !8977, metadata !DIExpression()), !dbg !8978
  store i32 0, i32* %ret, align 4, !dbg !8978
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8979
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 19, !dbg !8980
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !8981
  store i32 0, i32* %i, align 4, !dbg !8982
  br label %for.cond, !dbg !8984

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !8985
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8987
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 5, !dbg !8988
  %3 = load i32, i32* %max_payloads, align 8, !dbg !8988
  %cmp = icmp slt i32 %1, %3, !dbg !8989
  br i1 %cmp, label %for.body, label %for.end, !dbg !8990

for.body:                                         ; preds = %for.cond
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !8991
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 20, !dbg !8994
  %5 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !8994
  %6 = load i32, i32* %i, align 4, !dbg !8995
  %idxprom = sext i32 %6 to i64, !dbg !8991
  %arrayidx = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %5, i64 %idxprom, !dbg !8991
  %7 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx, align 8, !dbg !8991
  %tobool = icmp ne %struct.drm_dp_vcpi* %7, null, !dbg !8991
  br i1 %tobool, label %if.end, label %if.then, !dbg !8996

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !8997

if.end:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8998, metadata !DIExpression()), !dbg !9000
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9000
  %proposed_vcpis1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 20, !dbg !9000
  %9 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis1, align 8, !dbg !9000
  %10 = load i32, i32* %i, align 4, !dbg !9000
  %idxprom2 = sext i32 %10 to i64, !dbg !9000
  %arrayidx3 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %9, i64 %idxprom2, !dbg !9000
  %11 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx3, align 8, !dbg !9000
  %12 = bitcast %struct.drm_dp_vcpi* %11 to i8*, !dbg !9000
  store i8* %12, i8** %__mptr, align 8, !dbg !9000
  br label %do.body, !dbg !9000

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !9001

do.end:                                           ; preds = %do.body
  %13 = load i8*, i8** %__mptr, align 8, !dbg !9000
  %add.ptr = getelementptr i8, i8* %13, i64 -1240, !dbg !9000
  %14 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !9000
  store %struct.drm_dp_mst_port* %14, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !9001
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !9000
  store %struct.drm_dp_mst_port* %15, %struct.drm_dp_mst_port** %port, align 8, !dbg !9003
  %16 = load i32, i32* %i, align 4, !dbg !9004
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9004
  %payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 21, !dbg !9004
  %18 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads, align 8, !dbg !9004
  %19 = load i32, i32* %i, align 4, !dbg !9004
  %idxprom4 = sext i32 %19 to i64, !dbg !9004
  %arrayidx5 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %18, i64 %idxprom4, !dbg !9004
  %payload_state = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %arrayidx5, i32 0, i32 0, !dbg !9004
  %20 = load i32, i32* %payload_state, align 4, !dbg !9004
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0), i32 %16, i32 %20) #8, !dbg !9004
  %21 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9005
  %payloads6 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %21, i32 0, i32 21, !dbg !9007
  %22 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads6, align 8, !dbg !9007
  %23 = load i32, i32* %i, align 4, !dbg !9008
  %idxprom7 = sext i32 %23 to i64, !dbg !9005
  %arrayidx8 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %22, i64 %idxprom7, !dbg !9005
  %payload_state9 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %arrayidx8, i32 0, i32 0, !dbg !9009
  %24 = load i32, i32* %payload_state9, align 4, !dbg !9009
  %cmp10 = icmp eq i32 %24, 1, !dbg !9010
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !9011

if.then11:                                        ; preds = %do.end
  %25 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9012
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !9014
  %27 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9015
  %proposed_vcpis12 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %27, i32 0, i32 20, !dbg !9016
  %28 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis12, align 8, !dbg !9016
  %29 = load i32, i32* %i, align 4, !dbg !9017
  %idxprom13 = sext i32 %29 to i64, !dbg !9015
  %arrayidx14 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %28, i64 %idxprom13, !dbg !9015
  %30 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx14, align 8, !dbg !9015
  %vcpi = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %30, i32 0, i32 0, !dbg !9018
  %31 = load i32, i32* %vcpi, align 4, !dbg !9018
  %32 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9019
  %payloads15 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %32, i32 0, i32 21, !dbg !9020
  %33 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads15, align 8, !dbg !9020
  %34 = load i32, i32* %i, align 4, !dbg !9021
  %idxprom16 = sext i32 %34 to i64, !dbg !9019
  %arrayidx17 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %33, i64 %idxprom16, !dbg !9019
  %call = call i32 @drm_dp_create_payload_step2(%struct.drm_dp_mst_topology_mgr* %25, %struct.drm_dp_mst_port* %26, i32 %31, %struct.drm_dp_payload* %arrayidx17) #8, !dbg !9022
  store i32 %call, i32* %ret, align 4, !dbg !9023
  br label %if.end33, !dbg !9024

if.else:                                          ; preds = %do.end
  %35 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9025
  %payloads18 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %35, i32 0, i32 21, !dbg !9027
  %36 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads18, align 8, !dbg !9027
  %37 = load i32, i32* %i, align 4, !dbg !9028
  %idxprom19 = sext i32 %37 to i64, !dbg !9025
  %arrayidx20 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %36, i64 %idxprom19, !dbg !9025
  %payload_state21 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %arrayidx20, i32 0, i32 0, !dbg !9029
  %38 = load i32, i32* %payload_state21, align 4, !dbg !9029
  %cmp22 = icmp eq i32 %38, 3, !dbg !9030
  br i1 %cmp22, label %if.then23, label %if.end32, !dbg !9031

if.then23:                                        ; preds = %if.else
  %39 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9032
  %40 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9034
  %proposed_vcpis24 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %40, i32 0, i32 20, !dbg !9035
  %41 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis24, align 8, !dbg !9035
  %42 = load i32, i32* %i, align 4, !dbg !9036
  %idxprom25 = sext i32 %42 to i64, !dbg !9034
  %arrayidx26 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %41, i64 %idxprom25, !dbg !9034
  %43 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx26, align 8, !dbg !9034
  %vcpi27 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %43, i32 0, i32 0, !dbg !9037
  %44 = load i32, i32* %vcpi27, align 4, !dbg !9037
  %45 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9038
  %payloads28 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %45, i32 0, i32 21, !dbg !9039
  %46 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads28, align 8, !dbg !9039
  %47 = load i32, i32* %i, align 4, !dbg !9040
  %idxprom29 = sext i32 %47 to i64, !dbg !9038
  %arrayidx30 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %46, i64 %idxprom29, !dbg !9038
  %call31 = call i32 @drm_dp_destroy_payload_step2(%struct.drm_dp_mst_topology_mgr* %39, i32 %44, %struct.drm_dp_payload* %arrayidx30) #8, !dbg !9041
  store i32 %call31, i32* %ret, align 4, !dbg !9042
  br label %if.end32, !dbg !9043

if.end32:                                         ; preds = %if.then23, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then11
  %48 = load i32, i32* %ret, align 4, !dbg !9044
  %tobool34 = icmp ne i32 %48, 0, !dbg !9044
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !9046

if.then35:                                        ; preds = %if.end33
  %49 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9047
  %payload_lock36 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %49, i32 0, i32 19, !dbg !9049
  call void @mutex_unlock(%struct.mutex* %payload_lock36) #8, !dbg !9050
  %50 = load i32, i32* %ret, align 4, !dbg !9051
  store i32 %50, i32* %retval, align 4, !dbg !9052
  br label %return, !dbg !9052

if.end37:                                         ; preds = %if.end33
  br label %for.inc, !dbg !9053

for.inc:                                          ; preds = %if.end37, %if.then
  %51 = load i32, i32* %i, align 4, !dbg !9054
  %inc = add i32 %51, 1, !dbg !9054
  store i32 %inc, i32* %i, align 4, !dbg !9054
  br label %for.cond, !dbg !9055, !llvm.loop !9056

for.end:                                          ; preds = %for.cond
  %52 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9058
  %payload_lock38 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %52, i32 0, i32 19, !dbg !9059
  call void @mutex_unlock(%struct.mutex* %payload_lock38) #8, !dbg !9060
  store i32 0, i32* %retval, align 4, !dbg !9061
  br label %return, !dbg !9061

return:                                           ; preds = %for.end, %if.then35
  %53 = load i32, i32* %retval, align 4, !dbg !9062
  ret i32 %53, !dbg !9062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_create_payload_step2(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i32 %id, %struct.drm_dp_payload* %payload) #0 !dbg !9063 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %id.addr = alloca i32, align 4
  %payload.addr = alloca %struct.drm_dp_payload*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !9066, metadata !DIExpression()), !dbg !9067
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !9068, metadata !DIExpression()), !dbg !9069
  store %struct.drm_dp_payload* %payload, %struct.drm_dp_payload** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload** %payload.addr, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9072, metadata !DIExpression()), !dbg !9073
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9074
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !9075
  %2 = load i32, i32* %id.addr, align 4, !dbg !9076
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !9077
  %vcpi = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 16, !dbg !9078
  %pbn = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi, i32 0, i32 1, !dbg !9079
  %4 = load i32, i32* %pbn, align 4, !dbg !9079
  %call = call i32 @drm_dp_payload_send_msg(%struct.drm_dp_mst_topology_mgr* %0, %struct.drm_dp_mst_port* %1, i32 %2, i32 %4) #8, !dbg !9080
  store i32 %call, i32* %ret, align 4, !dbg !9081
  %5 = load i32, i32* %ret, align 4, !dbg !9082
  %cmp = icmp slt i32 %5, 0, !dbg !9084
  br i1 %cmp, label %if.then, label %if.end, !dbg !9085

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !9086
  store i32 %6, i32* %retval, align 4, !dbg !9087
  br label %return, !dbg !9087

if.end:                                           ; preds = %entry
  %7 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !9088
  %payload_state = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %7, i32 0, i32 0, !dbg !9089
  store i32 2, i32* %payload_state, align 4, !dbg !9090
  %8 = load i32, i32* %ret, align 4, !dbg !9091
  store i32 %8, i32* %retval, align 4, !dbg !9092
  br label %return, !dbg !9092

return:                                           ; preds = %if.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !9093
  ret i32 %9, !dbg !9093
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_destroy_payload_step2(%struct.drm_dp_mst_topology_mgr* %mgr, i32 %id, %struct.drm_dp_payload* %payload) #0 !dbg !9094 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %id.addr = alloca i32, align 4
  %payload.addr = alloca %struct.drm_dp_payload*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9095, metadata !DIExpression()), !dbg !9096
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !9097, metadata !DIExpression()), !dbg !9098
  store %struct.drm_dp_payload* %payload, %struct.drm_dp_payload** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload** %payload.addr, metadata !9099, metadata !DIExpression()), !dbg !9100
  %0 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !9101
  %payload_state = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %0, i32 0, i32 0, !dbg !9102
  store i32 0, i32* %payload_state, align 4, !dbg !9103
  ret i32 0, !dbg !9104
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_dp_read_mst_cap(%struct.drm_dp_aux* %aux, i8* %dpcd) #0 !dbg !9105 {
entry:
  %retval = alloca i1, align 1
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  %dpcd.addr = alloca i8*, align 8
  %mstm_cap = alloca i8, align 1
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !9108, metadata !DIExpression()), !dbg !9109
  store i8* %dpcd, i8** %dpcd.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dpcd.addr, metadata !9110, metadata !DIExpression()), !dbg !9111
  call void @llvm.dbg.declare(metadata i8* %mstm_cap, metadata !9112, metadata !DIExpression()), !dbg !9113
  %0 = load i8*, i8** %dpcd.addr, align 8, !dbg !9114
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !9114
  %1 = load i8, i8* %arrayidx, align 1, !dbg !9114
  %conv = zext i8 %1 to i32, !dbg !9114
  %cmp = icmp slt i32 %conv, 18, !dbg !9116
  br i1 %cmp, label %if.then, label %if.end, !dbg !9117

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !9118
  br label %return, !dbg !9118

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux.addr, align 8, !dbg !9119
  %call = call i64 @drm_dp_dpcd_readb(%struct.drm_dp_aux* %2, i32 33, i8* %mstm_cap) #8, !dbg !9121
  %cmp2 = icmp ne i64 %call, 1, !dbg !9122
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !9123

if.then4:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !9124
  br label %return, !dbg !9124

if.end5:                                          ; preds = %if.end
  %3 = load i8, i8* %mstm_cap, align 1, !dbg !9125
  %conv6 = zext i8 %3 to i32, !dbg !9125
  %and = and i32 %conv6, 1, !dbg !9126
  %tobool = icmp ne i32 %and, 0, !dbg !9125
  store i1 %tobool, i1* %retval, align 1, !dbg !9127
  br label %return, !dbg !9127

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i1, i1* %retval, align 1, !dbg !9128
  ret i1 %4, !dbg !9128
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @drm_dp_dpcd_readb(%struct.drm_dp_aux* %aux, i32 %offset, i8* %valuep) #0 !dbg !9129 {
entry:
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  %offset.addr = alloca i32, align 4
  %valuep.addr = alloca i8*, align 8
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !9132, metadata !DIExpression()), !dbg !9133
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  store i8* %valuep, i8** %valuep.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %valuep.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  %0 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux.addr, align 8, !dbg !9138
  %1 = load i32, i32* %offset.addr, align 4, !dbg !9139
  %2 = load i8*, i8** %valuep.addr, align 8, !dbg !9140
  %call = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %0, i32 %1, i8* %2, i64 1) #8, !dbg !9141
  ret i64 %call, !dbg !9142
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_topology_mgr_set_mst(%struct.drm_dp_mst_topology_mgr* %mgr, i1 zeroext %mst_state) #0 !dbg !9143 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mst_state.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %reset_pay = alloca %struct.drm_dp_payload, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9146, metadata !DIExpression()), !dbg !9147
  %frombool = zext i1 %mst_state to i8
  store i8 %frombool, i8* %mst_state.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mst_state.addr, metadata !9148, metadata !DIExpression()), !dbg !9149
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9150, metadata !DIExpression()), !dbg !9151
  store i32 0, i32* %ret, align 4, !dbg !9151
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !9152, metadata !DIExpression()), !dbg !9153
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9153
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9154
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 19, !dbg !9155
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !9156
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9157
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 9, !dbg !9158
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !9159
  %2 = load i8, i8* %mst_state.addr, align 1, !dbg !9160
  %tobool = trunc i8 %2 to i1, !dbg !9160
  %conv = zext i1 %tobool to i32, !dbg !9160
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9162
  %mst_state1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 11, !dbg !9163
  %bf.load = load i8, i8* %mst_state1, align 8, !dbg !9163
  %bf.clear = and i8 %bf.load, 1, !dbg !9163
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !9163
  %conv2 = zext i1 %bf.cast to i32, !dbg !9162
  %cmp = icmp eq i32 %conv, %conv2, !dbg !9164
  br i1 %cmp, label %if.then, label %if.end, !dbg !9165

if.then:                                          ; preds = %entry
  br label %out_unlock, !dbg !9166

if.end:                                           ; preds = %entry
  %4 = load i8, i8* %mst_state.addr, align 1, !dbg !9167
  %tobool4 = trunc i8 %4 to i1, !dbg !9167
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9168
  %mst_state5 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 11, !dbg !9169
  %6 = zext i1 %tobool4 to i8, !dbg !9170
  %bf.load6 = load i8, i8* %mst_state5, align 8, !dbg !9170
  %bf.clear7 = and i8 %bf.load6, -2, !dbg !9170
  %bf.set = or i8 %bf.clear7, %6, !dbg !9170
  store i8 %bf.set, i8* %mst_state5, align 8, !dbg !9170
  %tobool8 = trunc i8 %6 to i1, !dbg !9170
  %7 = load i8, i8* %mst_state.addr, align 1, !dbg !9171
  %tobool9 = trunc i8 %7 to i1, !dbg !9171
  br i1 %tobool9, label %if.then10, label %if.else, !dbg !9173

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload* %reset_pay, metadata !9174, metadata !DIExpression()), !dbg !9176
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9177, metadata !DIExpression()), !dbg !9179
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9179
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 12, !dbg !9179
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !9179
  %tobool11 = icmp ne %struct.drm_dp_mst_branch* %9, null, !dbg !9179
  %lnot = xor i1 %tobool11, true, !dbg !9179
  %lnot12 = xor i1 %lnot, true, !dbg !9179
  %lnot.ext = zext i1 %lnot12 to i32, !dbg !9179
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9179
  %10 = load i32, i32* %__ret_warn_on, align 4, !dbg !9180
  %tobool13 = icmp ne i32 %10, 0, !dbg !9180
  %lnot14 = xor i1 %tobool13, true, !dbg !9180
  %lnot16 = xor i1 %lnot14, true, !dbg !9180
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9180
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9180
  %tobool19 = icmp ne i64 %conv18, 0, !dbg !9180
  br i1 %tobool19, label %if.then20, label %if.end27, !dbg !9179

if.then20:                                        ; preds = %if.then10
  br label %do.body, !dbg !9180

do.body:                                          ; preds = %if.then20
  br label %do.body21, !dbg !9182

do.body21:                                        ; preds = %do.body
  br label %do.end, !dbg !9184

do.end:                                           ; preds = %do.body21
  br label %do.body22, !dbg !9182

do.body22:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 3686, i32 2305, i64 12) #7, !dbg !9186, !srcloc !9188
  br label %do.end23, !dbg !9186

do.end23:                                         ; preds = %do.body22
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 329) #7, !dbg !9189, !srcloc !9191
  br label %do.body24, !dbg !9182

do.body24:                                        ; preds = %do.end23
  br label %do.end25, !dbg !9192

do.end25:                                         ; preds = %do.body24
  br label %do.end26, !dbg !9182

do.end26:                                         ; preds = %do.end25
  br label %if.end27, !dbg !9182

if.end27:                                         ; preds = %do.end26, %if.then10
  %11 = load i32, i32* %__ret_warn_on, align 4, !dbg !9179
  %tobool28 = icmp ne i32 %11, 0, !dbg !9179
  %lnot29 = xor i1 %tobool28, true, !dbg !9179
  %lnot31 = xor i1 %lnot29, true, !dbg !9179
  %lnot.ext32 = zext i1 %lnot31 to i32, !dbg !9179
  %conv33 = sext i32 %lnot.ext32 to i64, !dbg !9179
  store i64 %conv33, i64* %tmp, align 8, !dbg !9180
  %12 = load i64, i64* %tmp, align 8, !dbg !9179
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9194
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 4, !dbg !9195
  %14 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !9195
  %15 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9196
  %dpcd = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %15, i32 0, i32 13, !dbg !9197
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %dpcd, i64 0, i64 0, !dbg !9196
  %call = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %14, i32 0, i8* %arraydecay, i64 15) #8, !dbg !9198
  %conv34 = trunc i64 %call to i32, !dbg !9198
  store i32 %conv34, i32* %ret, align 4, !dbg !9199
  %16 = load i32, i32* %ret, align 4, !dbg !9200
  %cmp35 = icmp ne i32 %16, 15, !dbg !9202
  br i1 %cmp35, label %if.then37, label %if.end38, !dbg !9203

if.then37:                                        ; preds = %if.end27
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20, i64 0, i64 0)) #8, !dbg !9204
  br label %out_unlock, !dbg !9206

if.end38:                                         ; preds = %if.end27
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9207
  %dpcd39 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 13, !dbg !9208
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %dpcd39, i64 0, i64 1, !dbg !9207
  %18 = load i8, i8* %arrayidx, align 1, !dbg !9207
  %19 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9209
  %dpcd40 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %19, i32 0, i32 13, !dbg !9210
  %arrayidx41 = getelementptr [15 x i8], [15 x i8]* %dpcd40, i64 0, i64 2, !dbg !9209
  %20 = load i8, i8* %arrayidx41, align 2, !dbg !9209
  %conv42 = zext i8 %20 to i32, !dbg !9209
  %and = and i32 %conv42, 31, !dbg !9211
  %conv43 = trunc i32 %and to i8, !dbg !9209
  %call44 = call i32 @drm_dp_get_vc_payload_bw(i8 zeroext %18, i8 zeroext %conv43) #8, !dbg !9212
  %21 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9213
  %pbn_div = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %21, i32 0, i32 15, !dbg !9214
  store i32 %call44, i32* %pbn_div, align 8, !dbg !9215
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9216
  %pbn_div45 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %22, i32 0, i32 15, !dbg !9218
  %23 = load i32, i32* %pbn_div45, align 8, !dbg !9218
  %cmp46 = icmp eq i32 %23, 0, !dbg !9219
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !9220

if.then48:                                        ; preds = %if.end38
  store i32 -22, i32* %ret, align 4, !dbg !9221
  br label %out_unlock, !dbg !9223

if.end49:                                         ; preds = %if.end38
  %call50 = call %struct.drm_dp_mst_branch* @drm_dp_add_mst_branch_device(i8 zeroext 1, i8* null) #8, !dbg !9224
  store %struct.drm_dp_mst_branch* %call50, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9225
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9226
  %cmp51 = icmp eq %struct.drm_dp_mst_branch* %24, null, !dbg !9228
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !9229

if.then53:                                        ; preds = %if.end49
  store i32 -12, i32* %ret, align 4, !dbg !9230
  br label %out_unlock, !dbg !9232

if.end54:                                         ; preds = %if.end49
  %25 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9233
  %26 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9234
  %mgr55 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %26, i32 0, i32 8, !dbg !9235
  store %struct.drm_dp_mst_topology_mgr* %25, %struct.drm_dp_mst_topology_mgr** %mgr55, align 8, !dbg !9236
  %27 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9237
  %28 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9238
  %mst_primary56 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %28, i32 0, i32 12, !dbg !9239
  store %struct.drm_dp_mst_branch* %27, %struct.drm_dp_mst_branch** %mst_primary56, align 8, !dbg !9240
  %29 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9241
  %mst_primary57 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %29, i32 0, i32 12, !dbg !9242
  %30 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary57, align 8, !dbg !9242
  call void @drm_dp_mst_topology_get_mstb(%struct.drm_dp_mst_branch* %30) #8, !dbg !9243
  %31 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9244
  %aux58 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %31, i32 0, i32 4, !dbg !9245
  %32 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux58, align 8, !dbg !9245
  %call59 = call i64 @drm_dp_dpcd_writeb(%struct.drm_dp_aux* %32, i32 273, i8 zeroext 7) #8, !dbg !9246
  %conv60 = trunc i64 %call59 to i32, !dbg !9246
  store i32 %conv60, i32* %ret, align 4, !dbg !9247
  %33 = load i32, i32* %ret, align 4, !dbg !9248
  %cmp61 = icmp slt i32 %33, 0, !dbg !9250
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !9251

if.then63:                                        ; preds = %if.end54
  br label %out_unlock, !dbg !9252

if.end64:                                         ; preds = %if.end54
  %start_slot = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %reset_pay, i32 0, i32 1, !dbg !9253
  store i32 0, i32* %start_slot, align 4, !dbg !9254
  %num_slots = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %reset_pay, i32 0, i32 2, !dbg !9255
  store i32 63, i32* %num_slots, align 4, !dbg !9256
  %34 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9257
  %call65 = call i32 @drm_dp_dpcd_write_payload(%struct.drm_dp_mst_topology_mgr* %34, i32 0, %struct.drm_dp_payload* %reset_pay) #8, !dbg !9258
  %35 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !9259
  %36 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9260
  %work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %36, i32 0, i32 25, !dbg !9261
  %call66 = call zeroext i1 @queue_work(%struct.workqueue_struct* %35, %struct.work_struct* %work) #8, !dbg !9262
  store i32 0, i32* %ret, align 4, !dbg !9263
  br label %if.end78, !dbg !9264

if.else:                                          ; preds = %if.end
  %37 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9265
  %mst_primary67 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %37, i32 0, i32 12, !dbg !9267
  %38 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary67, align 8, !dbg !9267
  store %struct.drm_dp_mst_branch* %38, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9268
  %39 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9269
  %mst_primary68 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %39, i32 0, i32 12, !dbg !9270
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mst_primary68, align 8, !dbg !9271
  %40 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9272
  %aux69 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %40, i32 0, i32 4, !dbg !9273
  %41 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux69, align 8, !dbg !9273
  %call70 = call i64 @drm_dp_dpcd_writeb(%struct.drm_dp_aux* %41, i32 273, i8 zeroext 0) #8, !dbg !9274
  store i32 0, i32* %ret, align 4, !dbg !9275
  %42 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9276
  %payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %42, i32 0, i32 21, !dbg !9277
  %43 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads, align 8, !dbg !9277
  %44 = bitcast %struct.drm_dp_payload* %43 to i8*, !dbg !9278
  %45 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9279
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %45, i32 0, i32 5, !dbg !9280
  %46 = load i32, i32* %max_payloads, align 8, !dbg !9280
  %conv71 = sext i32 %46 to i64, !dbg !9279
  %mul = mul i64 %conv71, 16, !dbg !9281
  call void @llvm.memset.p0i8.i64(i8* align 4 %44, i8 0, i64 %mul, i1 false), !dbg !9278
  %47 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9282
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %47, i32 0, i32 20, !dbg !9283
  %48 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !9283
  %49 = bitcast %struct.drm_dp_vcpi** %48 to i8*, !dbg !9284
  %50 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9285
  %max_payloads72 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %50, i32 0, i32 5, !dbg !9286
  %51 = load i32, i32* %max_payloads72, align 8, !dbg !9286
  %conv73 = sext i32 %51 to i64, !dbg !9285
  %mul74 = mul i64 %conv73, 8, !dbg !9287
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 %mul74, i1 false), !dbg !9284
  %52 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9288
  %payload_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %52, i32 0, i32 22, !dbg !9289
  store i64 0, i64* %payload_mask, align 8, !dbg !9290
  %53 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9291
  %payload_mask75 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %53, i32 0, i32 22, !dbg !9292
  call void @set_bit(i64 0, i64* %payload_mask75) #8, !dbg !9293
  %54 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9294
  %vcpi_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %54, i32 0, i32 23, !dbg !9295
  store i64 0, i64* %vcpi_mask, align 8, !dbg !9296
  %55 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9297
  %payload_id_table_cleared = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %55, i32 0, i32 11, !dbg !9298
  %bf.load76 = load i8, i8* %payload_id_table_cleared, align 8, !dbg !9299
  %bf.clear77 = and i8 %bf.load76, -3, !dbg !9299
  store i8 %bf.clear77, i8* %payload_id_table_cleared, align 8, !dbg !9299
  br label %if.end78

if.end78:                                         ; preds = %if.else, %if.end64
  br label %out_unlock, !dbg !9171

out_unlock:                                       ; preds = %if.end78, %if.then63, %if.then53, %if.then48, %if.then37, %if.then
  call void @llvm.dbg.label(metadata !9300), !dbg !9301
  %56 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9302
  %lock79 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %56, i32 0, i32 9, !dbg !9303
  call void @mutex_unlock(%struct.mutex* %lock79) #8, !dbg !9304
  %57 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9305
  %payload_lock80 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %57, i32 0, i32 19, !dbg !9306
  call void @mutex_unlock(%struct.mutex* %payload_lock80) #8, !dbg !9307
  %58 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9308
  %tobool81 = icmp ne %struct.drm_dp_mst_branch* %58, null, !dbg !9308
  br i1 %tobool81, label %if.then82, label %if.end83, !dbg !9310

if.then82:                                        ; preds = %out_unlock
  %59 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9311
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %59) #8, !dbg !9312
  br label %if.end83, !dbg !9312

if.end83:                                         ; preds = %if.then82, %out_unlock
  %60 = load i32, i32* %ret, align 4, !dbg !9313
  ret i32 %60, !dbg !9314
}

; Function Attrs: noredzone
declare dso_local i64 @drm_dp_dpcd_read(%struct.drm_dp_aux*, i32, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_get_vc_payload_bw(i8 zeroext %dp_link_bw, i8 zeroext %dp_link_count) #0 !dbg !9315 {
entry:
  %dp_link_bw.addr = alloca i8, align 1
  %dp_link_count.addr = alloca i8, align 1
  store i8 %dp_link_bw, i8* %dp_link_bw.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dp_link_bw.addr, metadata !9318, metadata !DIExpression()), !dbg !9319
  store i8 %dp_link_count, i8* %dp_link_count.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dp_link_count.addr, metadata !9320, metadata !DIExpression()), !dbg !9321
  %0 = load i8, i8* %dp_link_bw.addr, align 1, !dbg !9322
  %conv = zext i8 %0 to i32, !dbg !9322
  %cmp = icmp eq i32 %conv, 0, !dbg !9324
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9325

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %dp_link_count.addr, align 1, !dbg !9326
  %conv2 = zext i8 %1 to i32, !dbg !9326
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !9327
  br i1 %cmp3, label %if.then, label %if.end, !dbg !9328

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load i8, i8* %dp_link_bw.addr, align 1, !dbg !9329
  %conv5 = zext i8 %2 to i32, !dbg !9329
  %3 = load i8, i8* %dp_link_count.addr, align 1, !dbg !9329
  %conv6 = zext i8 %3 to i32, !dbg !9329
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.103, i64 0, i64 0), i32 %conv5, i32 %conv6) #8, !dbg !9329
  br label %if.end, !dbg !9329

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %4 = load i8, i8* %dp_link_bw.addr, align 1, !dbg !9330
  %conv7 = zext i8 %4 to i32, !dbg !9330
  %5 = load i8, i8* %dp_link_count.addr, align 1, !dbg !9331
  %conv8 = zext i8 %5 to i32, !dbg !9331
  %mul = mul i32 %conv7, %conv8, !dbg !9332
  %div = sdiv i32 %mul, 2, !dbg !9333
  ret i32 %div, !dbg !9334
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_branch* @drm_dp_add_mst_branch_device(i8 zeroext %lct, i8* %rad) #0 !dbg !9335 {
entry:
  %retval = alloca %struct.drm_dp_mst_branch*, align 8
  %lct.addr = alloca i8, align 1
  %rad.addr = alloca i8*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  store i8 %lct, i8* %lct.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lct.addr, metadata !9338, metadata !DIExpression()), !dbg !9339
  store i8* %rad, i8** %rad.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rad.addr, metadata !9340, metadata !DIExpression()), !dbg !9341
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !9342, metadata !DIExpression()), !dbg !9343
  %call = call i8* @kzalloc(i64 96, i32 3264) #8, !dbg !9344
  %0 = bitcast i8* %call to %struct.drm_dp_mst_branch*, !dbg !9344
  store %struct.drm_dp_mst_branch* %0, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9345
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9346
  %tobool = icmp ne %struct.drm_dp_mst_branch* %1, null, !dbg !9346
  br i1 %tobool, label %if.end, label %if.then, !dbg !9348

if.then:                                          ; preds = %entry
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !9349
  br label %return, !dbg !9349

if.end:                                           ; preds = %entry
  %2 = load i8, i8* %lct.addr, align 1, !dbg !9350
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9351
  %lct1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %3, i32 0, i32 4, !dbg !9352
  store i8 %2, i8* %lct1, align 8, !dbg !9353
  %4 = load i8, i8* %lct.addr, align 1, !dbg !9354
  %conv = zext i8 %4 to i32, !dbg !9354
  %cmp = icmp sgt i32 %conv, 1, !dbg !9356
  br i1 %cmp, label %if.then3, label %if.end7, !dbg !9357

if.then3:                                         ; preds = %if.end
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9358
  %rad4 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %5, i32 0, i32 3, !dbg !9359
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %rad4, i64 0, i64 0, !dbg !9360
  %6 = load i8*, i8** %rad.addr, align 8, !dbg !9361
  %7 = load i8, i8* %lct.addr, align 1, !dbg !9362
  %conv5 = zext i8 %7 to i32, !dbg !9362
  %div = sdiv i32 %conv5, 2, !dbg !9363
  %conv6 = sext i32 %div to i64, !dbg !9362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %6, i64 %conv6, i1 false), !dbg !9360
  br label %if.end7, !dbg !9360

if.end7:                                          ; preds = %if.then3, %if.end
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9364
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %8, i32 0, i32 6, !dbg !9365
  call void @INIT_LIST_HEAD(%struct.list_head* %ports) #8, !dbg !9366
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9367
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %9, i32 0, i32 0, !dbg !9368
  call void @kref_init(%struct.kref* %topology_kref) #8, !dbg !9369
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9370
  %malloc_kref = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %10, i32 0, i32 1, !dbg !9371
  call void @kref_init(%struct.kref* %malloc_kref) #8, !dbg !9372
  %11 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9373
  store %struct.drm_dp_mst_branch* %11, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !9374
  br label %return, !dbg !9374

return:                                           ; preds = %if.end7, %if.then
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !9375
  ret %struct.drm_dp_mst_branch* %12, !dbg !9375
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_topology_get_mstb(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !9376 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !9379, metadata !DIExpression()), !dbg !9380
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9381
  %mgr = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 8, !dbg !9382
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !9382
  call void @topology_ref_history_lock(%struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !9383
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9384, metadata !DIExpression()), !dbg !9386
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9386
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 0, !dbg !9386
  %call = call i32 @kref_read(%struct.kref* %topology_kref) #8, !dbg !9386
  %cmp = icmp eq i32 %call, 0, !dbg !9386
  %lnot = xor i1 %cmp, true, !dbg !9386
  %lnot1 = xor i1 %lnot, true, !dbg !9386
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !9386
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9386
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !9387
  %tobool = icmp ne i32 %3, 0, !dbg !9387
  %lnot2 = xor i1 %tobool, true, !dbg !9387
  %lnot4 = xor i1 %lnot2, true, !dbg !9387
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !9387
  %conv = sext i32 %lnot.ext5 to i64, !dbg !9387
  %tobool6 = icmp ne i64 %conv, 0, !dbg !9387
  br i1 %tobool6, label %if.then, label %if.end, !dbg !9386

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !9387

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !9389

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !9391

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !9389

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 1809, i32 2305, i64 12) #7, !dbg !9393, !srcloc !9395
  br label %do.end9, !dbg !9393

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 295) #7, !dbg !9396, !srcloc !9398
  br label %do.body10, !dbg !9389

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !9399

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !9389

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !9389

if.end:                                           ; preds = %do.end12, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !9386
  %tobool13 = icmp ne i32 %4, 0, !dbg !9386
  %lnot14 = xor i1 %tobool13, true, !dbg !9386
  %lnot16 = xor i1 %lnot14, true, !dbg !9386
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !9386
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !9386
  store i64 %conv18, i64* %tmp, align 8, !dbg !9387
  %5 = load i64, i64* %tmp, align 8, !dbg !9386
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9401
  %topology_kref19 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %6, i32 0, i32 0, !dbg !9402
  call void @kref_get(%struct.kref* %topology_kref19) #8, !dbg !9403
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9404
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9404
  %topology_kref20 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %8, i32 0, i32 0, !dbg !9404
  %call21 = call i32 @kref_read(%struct.kref* %topology_kref20) #8, !dbg !9404
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86, i64 0, i64 0), %struct.drm_dp_mst_branch* %7, i32 %call21) #8, !dbg !9404
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9405
  %mgr22 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %9, i32 0, i32 8, !dbg !9406
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr22, align 8, !dbg !9406
  call void @topology_ref_history_unlock(%struct.drm_dp_mst_topology_mgr* %10) #8, !dbg !9407
  ret void, !dbg !9408
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @drm_dp_dpcd_writeb(%struct.drm_dp_aux* %aux, i32 %offset, i8 zeroext %value) #0 !dbg !9409 {
entry:
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  %offset.addr = alloca i32, align 4
  %value.addr = alloca i8, align 1
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !9412, metadata !DIExpression()), !dbg !9413
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !9414, metadata !DIExpression()), !dbg !9415
  store i8 %value, i8* %value.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %value.addr, metadata !9416, metadata !DIExpression()), !dbg !9417
  %0 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux.addr, align 8, !dbg !9418
  %1 = load i32, i32* %offset.addr, align 4, !dbg !9419
  %call = call i64 @drm_dp_dpcd_write(%struct.drm_dp_aux* %0, i32 %1, i8* %value.addr, i64 1) #8, !dbg !9420
  ret i64 %call, !dbg !9421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_dpcd_write_payload(%struct.drm_dp_mst_topology_mgr* %mgr, i32 %id, %struct.drm_dp_payload* %payload) #0 !dbg !9422 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %id.addr = alloca i32, align 4
  %payload.addr = alloca %struct.drm_dp_payload*, align 8
  %payload_alloc = alloca [3 x i8], align 1
  %status = alloca i8, align 1
  %ret = alloca i32, align 4
  %retries = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9423, metadata !DIExpression()), !dbg !9424
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !9425, metadata !DIExpression()), !dbg !9426
  store %struct.drm_dp_payload* %payload, %struct.drm_dp_payload** %payload.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_payload** %payload.addr, metadata !9427, metadata !DIExpression()), !dbg !9428
  call void @llvm.dbg.declare(metadata [3 x i8]* %payload_alloc, metadata !9429, metadata !DIExpression()), !dbg !9430
  call void @llvm.dbg.declare(metadata i8* %status, metadata !9431, metadata !DIExpression()), !dbg !9432
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9433, metadata !DIExpression()), !dbg !9434
  call void @llvm.dbg.declare(metadata i32* %retries, metadata !9435, metadata !DIExpression()), !dbg !9436
  store i32 0, i32* %retries, align 4, !dbg !9436
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9437
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 4, !dbg !9438
  %1 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !9438
  %call = call i64 @drm_dp_dpcd_writeb(%struct.drm_dp_aux* %1, i32 704, i8 zeroext 1) #8, !dbg !9439
  %2 = load i32, i32* %id.addr, align 4, !dbg !9440
  %conv = trunc i32 %2 to i8, !dbg !9440
  %arrayidx = getelementptr [3 x i8], [3 x i8]* %payload_alloc, i64 0, i64 0, !dbg !9441
  store i8 %conv, i8* %arrayidx, align 1, !dbg !9442
  %3 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !9443
  %start_slot = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %3, i32 0, i32 1, !dbg !9444
  %4 = load i32, i32* %start_slot, align 4, !dbg !9444
  %conv1 = trunc i32 %4 to i8, !dbg !9443
  %arrayidx2 = getelementptr [3 x i8], [3 x i8]* %payload_alloc, i64 0, i64 1, !dbg !9445
  store i8 %conv1, i8* %arrayidx2, align 1, !dbg !9446
  %5 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payload.addr, align 8, !dbg !9447
  %num_slots = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %5, i32 0, i32 2, !dbg !9448
  %6 = load i32, i32* %num_slots, align 4, !dbg !9448
  %conv3 = trunc i32 %6 to i8, !dbg !9447
  %arrayidx4 = getelementptr [3 x i8], [3 x i8]* %payload_alloc, i64 0, i64 2, !dbg !9449
  store i8 %conv3, i8* %arrayidx4, align 1, !dbg !9450
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9451
  %aux5 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 4, !dbg !9452
  %8 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux5, align 8, !dbg !9452
  %arraydecay = getelementptr inbounds [3 x i8], [3 x i8]* %payload_alloc, i64 0, i64 0, !dbg !9453
  %call6 = call i64 @drm_dp_dpcd_write(%struct.drm_dp_aux* %8, i32 448, i8* %arraydecay, i64 3) #8, !dbg !9454
  %conv7 = trunc i64 %call6 to i32, !dbg !9454
  store i32 %conv7, i32* %ret, align 4, !dbg !9455
  %9 = load i32, i32* %ret, align 4, !dbg !9456
  %cmp = icmp ne i32 %9, 3, !dbg !9458
  br i1 %cmp, label %if.then, label %if.end, !dbg !9459

if.then:                                          ; preds = %entry
  %10 = load i32, i32* %ret, align 4, !dbg !9460
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.146, i64 0, i64 0), i32 %10) #8, !dbg !9460
  br label %fail, !dbg !9462

if.end:                                           ; preds = %entry
  br label %retry, !dbg !9463

retry:                                            ; preds = %if.then20, %if.end
  call void @llvm.dbg.label(metadata !9464), !dbg !9465
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9466
  %aux9 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %11, i32 0, i32 4, !dbg !9467
  %12 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux9, align 8, !dbg !9467
  %call10 = call i64 @drm_dp_dpcd_readb(%struct.drm_dp_aux* %12, i32 704, i8* %status) #8, !dbg !9468
  %conv11 = trunc i64 %call10 to i32, !dbg !9468
  store i32 %conv11, i32* %ret, align 4, !dbg !9469
  %13 = load i32, i32* %ret, align 4, !dbg !9470
  %cmp12 = icmp slt i32 %13, 0, !dbg !9472
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !9473

if.then14:                                        ; preds = %retry
  %14 = load i32, i32* %ret, align 4, !dbg !9474
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.147, i64 0, i64 0), i32 %14) #8, !dbg !9474
  br label %fail, !dbg !9476

if.end15:                                         ; preds = %retry
  %15 = load i8, i8* %status, align 1, !dbg !9477
  %conv16 = zext i8 %15 to i32, !dbg !9477
  %and = and i32 %conv16, 1, !dbg !9479
  %tobool = icmp ne i32 %and, 0, !dbg !9479
  br i1 %tobool, label %if.end23, label %if.then17, !dbg !9480

if.then17:                                        ; preds = %if.end15
  %16 = load i32, i32* %retries, align 4, !dbg !9481
  %inc = add i32 %16, 1, !dbg !9481
  store i32 %inc, i32* %retries, align 4, !dbg !9481
  %17 = load i32, i32* %retries, align 4, !dbg !9483
  %cmp18 = icmp slt i32 %17, 20, !dbg !9485
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !9486

if.then20:                                        ; preds = %if.then17
  call void @usleep_range(i64 10000, i64 20000) #8, !dbg !9487
  br label %retry, !dbg !9489

if.end21:                                         ; preds = %if.then17
  %18 = load i8, i8* %status, align 1, !dbg !9490
  %conv22 = zext i8 %18 to i32, !dbg !9490
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.148, i64 0, i64 0), i32 %conv22) #8, !dbg !9490
  store i32 -22, i32* %ret, align 4, !dbg !9491
  br label %fail, !dbg !9492

if.end23:                                         ; preds = %if.end15
  store i32 0, i32* %ret, align 4, !dbg !9493
  br label %fail, !dbg !9494

fail:                                             ; preds = %if.end23, %if.end21, %if.then14, %if.then
  call void @llvm.dbg.label(metadata !9495), !dbg !9496
  %19 = load i32, i32* %ret, align 4, !dbg !9497
  ret i32 %19, !dbg !9498
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #0 !dbg !9499 {
entry:
  %wq.addr = alloca %struct.workqueue_struct*, align 8
  %work.addr = alloca %struct.work_struct*, align 8
  store %struct.workqueue_struct* %wq, %struct.workqueue_struct** %wq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.workqueue_struct** %wq.addr, metadata !9502, metadata !DIExpression()), !dbg !9503
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !9504, metadata !DIExpression()), !dbg !9505
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** %wq.addr, align 8, !dbg !9506
  %1 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !9507
  %call = call zeroext i1 @queue_work_on(i32 1, %struct.workqueue_struct* %0, %struct.work_struct* %1) #8, !dbg !9508
  ret i1 %call, !dbg !9509
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !9510 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !9511, metadata !DIExpression()), !dbg !9512
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9513
  %mgr = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 8, !dbg !9514
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !9514
  call void @topology_ref_history_lock(%struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !9515
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9516
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9516
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %3, i32 0, i32 0, !dbg !9516
  %call = call i32 @kref_read(%struct.kref* %topology_kref) #8, !dbg !9516
  %sub = sub i32 %call, 1, !dbg !9516
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86, i64 0, i64 0), %struct.drm_dp_mst_branch* %2, i32 %sub) #8, !dbg !9516
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9517
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %4, i32 0, i32 8, !dbg !9518
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !9518
  call void @topology_ref_history_unlock(%struct.drm_dp_mst_topology_mgr* %5) #8, !dbg !9519
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9520
  %topology_kref2 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %6, i32 0, i32 0, !dbg !9521
  %call3 = call i32 @kref_put(%struct.kref* %topology_kref2, void (%struct.kref*)* @drm_dp_destroy_mst_branch_device) #8, !dbg !9522
  ret void, !dbg !9523
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_topology_mgr_suspend(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !9524 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9525, metadata !DIExpression()), !dbg !9526
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9527
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !9528
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !9529
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9530
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 4, !dbg !9531
  %2 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !9531
  %call = call i64 @drm_dp_dpcd_writeb(%struct.drm_dp_aux* %2, i32 273, i8 zeroext 5) #8, !dbg !9532
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9533
  %lock1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 9, !dbg !9534
  call void @mutex_unlock(%struct.mutex* %lock1) #8, !dbg !9535
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9536
  %up_req_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 34, !dbg !9537
  %call2 = call zeroext i1 @flush_work(%struct.work_struct* %up_req_work) #8, !dbg !9538
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9539
  %work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 25, !dbg !9540
  %call3 = call zeroext i1 @flush_work(%struct.work_struct* %work) #8, !dbg !9541
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9542
  %delayed_destroy_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 31, !dbg !9543
  %call4 = call zeroext i1 @flush_work(%struct.work_struct* %delayed_destroy_work) #8, !dbg !9544
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9545
  %lock5 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 9, !dbg !9546
  call void @mutex_lock(%struct.mutex* %lock5) #8, !dbg !9547
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9548
  %mst_state = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 11, !dbg !9550
  %bf.load = load i8, i8* %mst_state, align 8, !dbg !9550
  %bf.clear = and i8 %bf.load, 1, !dbg !9550
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !9550
  br i1 %bf.cast, label %land.lhs.true, label %if.end, !dbg !9551

land.lhs.true:                                    ; preds = %entry
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9552
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 12, !dbg !9553
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !9553
  %tobool = icmp ne %struct.drm_dp_mst_branch* %10, null, !dbg !9552
  br i1 %tobool, label %if.then, label %if.end, !dbg !9554

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9555
  %mst_primary6 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %11, i32 0, i32 12, !dbg !9556
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary6, align 8, !dbg !9556
  call void @drm_dp_mst_topology_mgr_invalidate_mstb(%struct.drm_dp_mst_branch* %12) #8, !dbg !9557
  br label %if.end, !dbg !9557

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9558
  %lock7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 9, !dbg !9559
  call void @mutex_unlock(%struct.mutex* %lock7) #8, !dbg !9560
  ret void, !dbg !9561
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @flush_work(%struct.work_struct*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_topology_mgr_invalidate_mstb(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !9562 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp10 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !9565, metadata !DIExpression()), !dbg !9566
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9567
  %link_address_sent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 9, !dbg !9568
  store i8 0, i8* %link_address_sent, align 8, !dbg !9569
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9570, metadata !DIExpression()), !dbg !9573
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9573
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %1, i32 0, i32 6, !dbg !9573
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !9573
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9573
  %3 = bitcast %struct.list_head* %2 to i8*, !dbg !9573
  store i8* %3, i8** %__mptr, align 8, !dbg !9573
  br label %do.body, !dbg !9573

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9574

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9573
  %add.ptr = getelementptr i8, i8* %4, i64 -24, !dbg !9573
  %5 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !9573
  store %struct.drm_dp_mst_port* %5, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !9574
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !9573
  store %struct.drm_dp_mst_port* %6, %struct.drm_dp_mst_port** %port, align 8, !dbg !9576
  br label %for.cond, !dbg !9576

for.cond:                                         ; preds = %do.end9, %do.end
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !9577
  %next1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 12, !dbg !9577
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9577
  %ports2 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %8, i32 0, i32 6, !dbg !9577
  %cmp = icmp eq %struct.list_head* %next1, %ports2, !dbg !9577
  %lnot = xor i1 %cmp, true, !dbg !9577
  br i1 %lnot, label %for.body, label %for.end, !dbg !9576

for.body:                                         ; preds = %for.cond
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !9579
  %mstb3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 13, !dbg !9581
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb3, align 8, !dbg !9581
  %tobool = icmp ne %struct.drm_dp_mst_branch* %10, null, !dbg !9579
  br i1 %tobool, label %if.then, label %if.end, !dbg !9582

if.then:                                          ; preds = %for.body
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !9583
  %mstb4 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 13, !dbg !9584
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb4, align 8, !dbg !9584
  call void @drm_dp_mst_topology_mgr_invalidate_mstb(%struct.drm_dp_mst_branch* %12) #8, !dbg !9585
  br label %if.end, !dbg !9585

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !9581

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !9586, metadata !DIExpression()), !dbg !9588
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !9588
  %next6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 12, !dbg !9588
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %next6, i32 0, i32 0, !dbg !9588
  %14 = load %struct.list_head*, %struct.list_head** %next7, align 8, !dbg !9588
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !9588
  store i8* %15, i8** %__mptr5, align 8, !dbg !9588
  br label %do.body8, !dbg !9588

do.body8:                                         ; preds = %for.inc
  br label %do.end9, !dbg !9589

do.end9:                                          ; preds = %do.body8
  %16 = load i8*, i8** %__mptr5, align 8, !dbg !9588
  %add.ptr11 = getelementptr i8, i8* %16, i64 -24, !dbg !9588
  %17 = bitcast i8* %add.ptr11 to %struct.drm_dp_mst_port*, !dbg !9588
  store %struct.drm_dp_mst_port* %17, %struct.drm_dp_mst_port** %tmp10, align 8, !dbg !9589
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp10, align 8, !dbg !9588
  store %struct.drm_dp_mst_port* %18, %struct.drm_dp_mst_port** %port, align 8, !dbg !9577
  br label %for.cond, !dbg !9577, !llvm.loop !9591

for.end:                                          ; preds = %for.cond
  ret void, !dbg !9593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_topology_mgr_resume(%struct.drm_dp_mst_topology_mgr* %mgr, i1 zeroext %sync) #0 !dbg !9594 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %sync.addr = alloca i8, align 1
  %ret = alloca i32, align 4
  %guid = alloca [16 x i8], align 16
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9595, metadata !DIExpression()), !dbg !9596
  %frombool = zext i1 %sync to i8
  store i8 %frombool, i8* %sync.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %sync.addr, metadata !9597, metadata !DIExpression()), !dbg !9598
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9599, metadata !DIExpression()), !dbg !9600
  call void @llvm.dbg.declare(metadata [16 x i8]* %guid, metadata !9601, metadata !DIExpression()), !dbg !9602
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9603
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !9604
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !9605
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9606
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 12, !dbg !9608
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !9608
  %tobool = icmp ne %struct.drm_dp_mst_branch* %2, null, !dbg !9606
  br i1 %tobool, label %if.end, label %if.then, !dbg !9609

if.then:                                          ; preds = %entry
  br label %out_fail, !dbg !9610

if.end:                                           ; preds = %entry
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9611
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 4, !dbg !9612
  %4 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !9612
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9613
  %dpcd = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 13, !dbg !9614
  %arraydecay = getelementptr inbounds [15 x i8], [15 x i8]* %dpcd, i64 0, i64 0, !dbg !9613
  %call = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %4, i32 0, i8* %arraydecay, i64 15) #8, !dbg !9615
  %conv = trunc i64 %call to i32, !dbg !9615
  store i32 %conv, i32* %ret, align 4, !dbg !9616
  %6 = load i32, i32* %ret, align 4, !dbg !9617
  %cmp = icmp ne i32 %6, 15, !dbg !9619
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !9620

if.then2:                                         ; preds = %if.end
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.21, i64 0, i64 0)) #8, !dbg !9621
  br label %out_fail, !dbg !9623

if.end3:                                          ; preds = %if.end
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9624
  %aux4 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 4, !dbg !9625
  %8 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux4, align 8, !dbg !9625
  %call5 = call i64 @drm_dp_dpcd_writeb(%struct.drm_dp_aux* %8, i32 273, i8 zeroext 7) #8, !dbg !9626
  %conv6 = trunc i64 %call5 to i32, !dbg !9626
  store i32 %conv6, i32* %ret, align 4, !dbg !9627
  %9 = load i32, i32* %ret, align 4, !dbg !9628
  %cmp7 = icmp slt i32 %9, 0, !dbg !9630
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !9631

if.then9:                                         ; preds = %if.end3
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.22, i64 0, i64 0)) #8, !dbg !9632
  br label %out_fail, !dbg !9634

if.end10:                                         ; preds = %if.end3
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9635
  %aux11 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %10, i32 0, i32 4, !dbg !9636
  %11 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux11, align 8, !dbg !9636
  %arraydecay12 = getelementptr inbounds [16 x i8], [16 x i8]* %guid, i64 0, i64 0, !dbg !9637
  %call13 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %11, i32 48, i8* %arraydecay12, i64 16) #8, !dbg !9638
  %conv14 = trunc i64 %call13 to i32, !dbg !9638
  store i32 %conv14, i32* %ret, align 4, !dbg !9639
  %12 = load i32, i32* %ret, align 4, !dbg !9640
  %cmp15 = icmp ne i32 %12, 16, !dbg !9642
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !9643

if.then17:                                        ; preds = %if.end10
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.21, i64 0, i64 0)) #8, !dbg !9644
  br label %out_fail, !dbg !9646

if.end18:                                         ; preds = %if.end10
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9647
  %mst_primary19 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 12, !dbg !9648
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary19, align 8, !dbg !9648
  %arraydecay20 = getelementptr inbounds [16 x i8], [16 x i8]* %guid, i64 0, i64 0, !dbg !9649
  %call21 = call i32 @drm_dp_check_mstb_guid(%struct.drm_dp_mst_branch* %14, i8* %arraydecay20) #8, !dbg !9650
  store i32 %call21, i32* %ret, align 4, !dbg !9651
  %15 = load i32, i32* %ret, align 4, !dbg !9652
  %tobool22 = icmp ne i32 %15, 0, !dbg !9652
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !9654

if.then23:                                        ; preds = %if.end18
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.23, i64 0, i64 0)) #8, !dbg !9655
  br label %out_fail, !dbg !9657

if.end24:                                         ; preds = %if.end18
  %16 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !9658
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9659
  %work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 25, !dbg !9660
  %call25 = call zeroext i1 @queue_work(%struct.workqueue_struct* %16, %struct.work_struct* %work) #8, !dbg !9661
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9662
  %lock26 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 9, !dbg !9663
  call void @mutex_unlock(%struct.mutex* %lock26) #8, !dbg !9664
  %19 = load i8, i8* %sync.addr, align 1, !dbg !9665
  %tobool27 = trunc i8 %19 to i1, !dbg !9665
  br i1 %tobool27, label %if.then28, label %if.end31, !dbg !9667

if.then28:                                        ; preds = %if.end24
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.24, i64 0, i64 0)) #8, !dbg !9668
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9670
  %work29 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %20, i32 0, i32 25, !dbg !9671
  %call30 = call zeroext i1 @flush_work(%struct.work_struct* %work29) #8, !dbg !9672
  br label %if.end31, !dbg !9673

if.end31:                                         ; preds = %if.then28, %if.end24
  store i32 0, i32* %retval, align 4, !dbg !9674
  br label %return, !dbg !9674

out_fail:                                         ; preds = %if.then23, %if.then17, %if.then9, %if.then2, %if.then
  call void @llvm.dbg.label(metadata !9675), !dbg !9676
  %21 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9677
  %lock32 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %21, i32 0, i32 9, !dbg !9678
  call void @mutex_unlock(%struct.mutex* %lock32) #8, !dbg !9679
  store i32 -1, i32* %retval, align 4, !dbg !9680
  br label %return, !dbg !9680

return:                                           ; preds = %out_fail, %if.end31
  %22 = load i32, i32* %retval, align 4, !dbg !9681
  ret i32 %22, !dbg !9681
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_check_mstb_guid(%struct.drm_dp_mst_branch* %mstb, i8* %guid) #0 !dbg !9682 {
entry:
  %retval = alloca i32, align 4
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %guid.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !9685, metadata !DIExpression()), !dbg !9686
  store i8* %guid, i8** %guid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %guid.addr, metadata !9687, metadata !DIExpression()), !dbg !9688
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9689, metadata !DIExpression()), !dbg !9690
  store i32 0, i32* %ret, align 4, !dbg !9690
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9691
  %guid1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 10, !dbg !9692
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid1, i64 0, i64 0, !dbg !9693
  %1 = load i8*, i8** %guid.addr, align 8, !dbg !9694
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %1, i64 16, i1 false), !dbg !9693
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9695
  %mgr = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 8, !dbg !9697
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !9697
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9698
  %guid2 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %4, i32 0, i32 10, !dbg !9699
  %arraydecay3 = getelementptr inbounds [16 x i8], [16 x i8]* %guid2, i64 0, i64 0, !dbg !9698
  %call = call zeroext i1 @drm_dp_validate_guid(%struct.drm_dp_mst_topology_mgr* %3, i8* %arraydecay3) #8, !dbg !9700
  br i1 %call, label %if.end14, label %if.then, !dbg !9701

if.then:                                          ; preds = %entry
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9702
  %port_parent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %5, i32 0, i32 7, !dbg !9705
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent, align 8, !dbg !9705
  %tobool = icmp ne %struct.drm_dp_mst_port* %6, null, !dbg !9702
  br i1 %tobool, label %if.then4, label %if.else, !dbg !9706

if.then4:                                         ; preds = %if.then
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9707
  %mgr5 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %7, i32 0, i32 8, !dbg !9709
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr5, align 8, !dbg !9709
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9710
  %port_parent6 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %9, i32 0, i32 7, !dbg !9711
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent6, align 8, !dbg !9711
  %11 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9712
  %guid7 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %11, i32 0, i32 10, !dbg !9713
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %guid7, i64 0, i64 0, !dbg !9712
  %call9 = call i32 @drm_dp_send_dpcd_write(%struct.drm_dp_mst_topology_mgr* %8, %struct.drm_dp_mst_port* %10, i32 48, i32 16, i8* %arraydecay8) #8, !dbg !9714
  store i32 %call9, i32* %ret, align 4, !dbg !9715
  br label %if.end, !dbg !9716

if.else:                                          ; preds = %if.then
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9717
  %mgr10 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %12, i32 0, i32 8, !dbg !9719
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr10, align 8, !dbg !9719
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 4, !dbg !9720
  %14 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !9720
  %15 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !9721
  %guid11 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %15, i32 0, i32 10, !dbg !9722
  %arraydecay12 = getelementptr inbounds [16 x i8], [16 x i8]* %guid11, i64 0, i64 0, !dbg !9721
  %call13 = call i64 @drm_dp_dpcd_write(%struct.drm_dp_aux* %14, i32 48, i8* %arraydecay12, i64 16) #8, !dbg !9723
  %conv = trunc i64 %call13 to i32, !dbg !9723
  store i32 %conv, i32* %ret, align 4, !dbg !9724
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end14, !dbg !9725

if.end14:                                         ; preds = %if.end, %entry
  %16 = load i32, i32* %ret, align 4, !dbg !9726
  %cmp = icmp slt i32 %16, 16, !dbg !9728
  br i1 %cmp, label %land.lhs.true, label %if.end19, !dbg !9729

land.lhs.true:                                    ; preds = %if.end14
  %17 = load i32, i32* %ret, align 4, !dbg !9730
  %cmp16 = icmp sgt i32 %17, 0, !dbg !9731
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !9732

if.then18:                                        ; preds = %land.lhs.true
  store i32 -71, i32* %retval, align 4, !dbg !9733
  br label %return, !dbg !9733

if.end19:                                         ; preds = %land.lhs.true, %if.end14
  %18 = load i32, i32* %ret, align 4, !dbg !9734
  %cmp20 = icmp eq i32 %18, 16, !dbg !9735
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !9734

cond.true:                                        ; preds = %if.end19
  br label %cond.end, !dbg !9734

cond.false:                                       ; preds = %if.end19
  %19 = load i32, i32* %ret, align 4, !dbg !9736
  br label %cond.end, !dbg !9734

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %19, %cond.false ], !dbg !9734
  store i32 %cond, i32* %retval, align 4, !dbg !9737
  br label %return, !dbg !9737

return:                                           ; preds = %cond.end, %if.then18
  %20 = load i32, i32* %retval, align 4, !dbg !9738
  ret i32 %20, !dbg !9738
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_hpd_irq(%struct.drm_dp_mst_topology_mgr* %mgr, i8* %esi, i8* %handled) #0 !dbg !9739 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %esi.addr = alloca i8*, align 8
  %handled.addr = alloca i8*, align 8
  %ret = alloca i32, align 4
  %sc = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i8* %esi, i8** %esi.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %esi.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  store i8* %handled, i8** %handled.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handled.addr, metadata !9746, metadata !DIExpression()), !dbg !9747
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9748, metadata !DIExpression()), !dbg !9749
  store i32 0, i32* %ret, align 4, !dbg !9749
  call void @llvm.dbg.declare(metadata i32* %sc, metadata !9750, metadata !DIExpression()), !dbg !9751
  %0 = load i8*, i8** %handled.addr, align 8, !dbg !9752
  store i8 0, i8* %0, align 1, !dbg !9753
  %1 = load i8*, i8** %esi.addr, align 8, !dbg !9754
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !9754
  %2 = load i8, i8* %arrayidx, align 1, !dbg !9754
  %conv = zext i8 %2 to i32, !dbg !9754
  %and = and i32 %conv, 63, !dbg !9755
  store i32 %and, i32* %sc, align 4, !dbg !9756
  %3 = load i32, i32* %sc, align 4, !dbg !9757
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9759
  %sink_count = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 14, !dbg !9760
  %5 = load i8, i8* %sink_count, align 1, !dbg !9760
  %conv1 = zext i8 %5 to i32, !dbg !9759
  %cmp = icmp ne i32 %3, %conv1, !dbg !9761
  br i1 %cmp, label %if.then, label %if.end, !dbg !9762

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %sc, align 4, !dbg !9763
  %conv3 = trunc i32 %6 to i8, !dbg !9763
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9765
  %sink_count4 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 14, !dbg !9766
  store i8 %conv3, i8* %sink_count4, align 1, !dbg !9767
  %8 = load i8*, i8** %handled.addr, align 8, !dbg !9768
  store i8 1, i8* %8, align 1, !dbg !9769
  br label %if.end, !dbg !9770

if.end:                                           ; preds = %if.then, %entry
  %9 = load i8*, i8** %esi.addr, align 8, !dbg !9771
  %arrayidx5 = getelementptr i8, i8* %9, i64 1, !dbg !9771
  %10 = load i8, i8* %arrayidx5, align 1, !dbg !9771
  %conv6 = zext i8 %10 to i32, !dbg !9771
  %and7 = and i32 %conv6, 16, !dbg !9773
  %tobool = icmp ne i32 %and7, 0, !dbg !9773
  br i1 %tobool, label %if.then8, label %if.end9, !dbg !9774

if.then8:                                         ; preds = %if.end
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9775
  %call = call i32 @drm_dp_mst_handle_down_rep(%struct.drm_dp_mst_topology_mgr* %11) #8, !dbg !9777
  store i32 %call, i32* %ret, align 4, !dbg !9778
  %12 = load i8*, i8** %handled.addr, align 8, !dbg !9779
  store i8 1, i8* %12, align 1, !dbg !9780
  br label %if.end9, !dbg !9781

if.end9:                                          ; preds = %if.then8, %if.end
  %13 = load i8*, i8** %esi.addr, align 8, !dbg !9782
  %arrayidx10 = getelementptr i8, i8* %13, i64 1, !dbg !9782
  %14 = load i8, i8* %arrayidx10, align 1, !dbg !9782
  %conv11 = zext i8 %14 to i32, !dbg !9782
  %and12 = and i32 %conv11, 32, !dbg !9784
  %tobool13 = icmp ne i32 %and12, 0, !dbg !9784
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !9785

if.then14:                                        ; preds = %if.end9
  %15 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9786
  %call15 = call i32 @drm_dp_mst_handle_up_req(%struct.drm_dp_mst_topology_mgr* %15) #8, !dbg !9788
  %16 = load i32, i32* %ret, align 4, !dbg !9789
  %or = or i32 %16, %call15, !dbg !9789
  store i32 %or, i32* %ret, align 4, !dbg !9789
  %17 = load i8*, i8** %handled.addr, align 8, !dbg !9790
  store i8 1, i8* %17, align 1, !dbg !9791
  br label %if.end16, !dbg !9792

if.end16:                                         ; preds = %if.then14, %if.end9
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9793
  call void @drm_dp_mst_kick_tx(%struct.drm_dp_mst_topology_mgr* %18) #8, !dbg !9794
  %19 = load i32, i32* %ret, align 4, !dbg !9795
  ret i32 %19, !dbg !9796
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_handle_down_rep(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !9797 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %msg = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  %tmp3 = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %__mptr = alloca i8*, align 8
  %tmp6 = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %hdr = alloca %struct.drm_dp_sideband_msg_hdr*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !9800, metadata !DIExpression()), !dbg !9801
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !9802, metadata !DIExpression()), !dbg !9803
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9803
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %msg, metadata !9804, metadata !DIExpression()), !dbg !9806
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9807
  %down_rep_recv = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 8, !dbg !9808
  store %struct.drm_dp_sideband_msg_rx* %down_rep_recv, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !9806
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9809
  %call = call zeroext i1 @drm_dp_get_one_sb_msg(%struct.drm_dp_mst_topology_mgr* %1, i1 zeroext false, %struct.drm_dp_mst_branch** %mstb) #8, !dbg !9811
  br i1 %call, label %if.end, label %if.then, !dbg !9812

if.then:                                          ; preds = %entry
  br label %out, !dbg !9813

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !9814
  %have_eomt = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %2, i32 0, i32 7, !dbg !9816
  %3 = load i8, i8* %have_eomt, align 1, !dbg !9816
  %tobool = trunc i8 %3 to i1, !dbg !9816
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !9817

if.then1:                                         ; preds = %if.end
  br label %out, !dbg !9818

if.end2:                                          ; preds = %if.end
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9819
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 17, !dbg !9820
  call void @mutex_lock(%struct.mutex* %qlock) #8, !dbg !9821
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !9822, metadata !DIExpression()), !dbg !9824
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9824
  %tx_msg_downq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 18, !dbg !9824
  store %struct.list_head* %tx_msg_downq, %struct.list_head** %head__, align 8, !dbg !9824
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !9825, metadata !DIExpression()), !dbg !9824
  br label %do.body, !dbg !9826

do.body:                                          ; preds = %if.end2
  br label %do.end, !dbg !9828

do.end:                                           ; preds = %do.body
  %6 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !9826
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !9826
  %7 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9826
  store %struct.list_head* %7, %struct.list_head** %tmp, align 8, !dbg !9828
  %8 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !9826
  store %struct.list_head* %8, %struct.list_head** %pos__, align 8, !dbg !9824
  %9 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !9824
  %10 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !9824
  %cmp = icmp ne %struct.list_head* %9, %10, !dbg !9824
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9824

cond.true:                                        ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9830, metadata !DIExpression()), !dbg !9832
  %11 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !9832
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !9832
  store i8* %12, i8** %__mptr, align 8, !dbg !9832
  br label %do.body4, !dbg !9832

do.body4:                                         ; preds = %cond.true
  br label %do.end5, !dbg !9833

do.end5:                                          ; preds = %do.body4
  %13 = load i8*, i8** %__mptr, align 8, !dbg !9832
  %add.ptr = getelementptr i8, i8* %13, i64 -320, !dbg !9832
  %14 = bitcast i8* %add.ptr to %struct.drm_dp_sideband_msg_tx*, !dbg !9832
  store %struct.drm_dp_sideband_msg_tx* %14, %struct.drm_dp_sideband_msg_tx** %tmp6, align 8, !dbg !9833
  %15 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %tmp6, align 8, !dbg !9832
  br label %cond.end, !dbg !9824

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !9824

cond.end:                                         ; preds = %cond.false, %do.end5
  %cond = phi %struct.drm_dp_sideband_msg_tx* [ %15, %do.end5 ], [ null, %cond.false ], !dbg !9824
  store %struct.drm_dp_sideband_msg_tx* %cond, %struct.drm_dp_sideband_msg_tx** %tmp3, align 8, !dbg !9824
  %16 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %tmp3, align 8, !dbg !9824
  store %struct.drm_dp_sideband_msg_tx* %16, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9835
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9836
  %qlock7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 17, !dbg !9837
  call void @mutex_unlock(%struct.mutex* %qlock7) #8, !dbg !9838
  %18 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9839
  %tobool8 = icmp ne %struct.drm_dp_sideband_msg_tx* %18, null, !dbg !9839
  br i1 %tobool8, label %lor.lhs.false, label %if.then10, !dbg !9841

lor.lhs.false:                                    ; preds = %cond.end
  %19 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9842
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %19, i32 0, i32 4, !dbg !9843
  %20 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !9843
  %21 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9844
  %cmp9 = icmp ne %struct.drm_dp_mst_branch* %20, %21, !dbg !9845
  br i1 %cmp9, label %if.then10, label %if.end17, !dbg !9846

if.then10:                                        ; preds = %lor.lhs.false, %cond.end
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr** %hdr, metadata !9847, metadata !DIExpression()), !dbg !9850
  %22 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !9851
  %initial_hdr = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %22, i32 0, i32 8, !dbg !9852
  store %struct.drm_dp_sideband_msg_hdr* %initial_hdr, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !9853
  %23 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9854
  %24 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !9854
  %seqno = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %24, i32 0, i32 8, !dbg !9854
  %25 = load i8, i8* %seqno, align 1, !dbg !9854
  %tobool11 = trunc i8 %25 to i1, !dbg !9854
  %conv = zext i1 %tobool11 to i32, !dbg !9854
  %26 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !9854
  %lct = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %26, i32 0, i32 0, !dbg !9854
  %27 = load i8, i8* %lct, align 1, !dbg !9854
  %conv12 = zext i8 %27 to i32, !dbg !9854
  %28 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !9854
  %rad = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %28, i32 0, i32 2, !dbg !9854
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !9854
  %29 = load i8, i8* %arrayidx, align 1, !dbg !9854
  %conv13 = zext i8 %29 to i32, !dbg !9854
  %30 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !9854
  %msg14 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %30, i32 0, i32 1, !dbg !9854
  %arrayidx15 = getelementptr [256 x i8], [256 x i8]* %msg14, i64 0, i64 0, !dbg !9854
  %31 = load i8, i8* %arrayidx15, align 1, !dbg !9854
  %conv16 = zext i8 %31 to i32, !dbg !9854
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.104, i64 0, i64 0), %struct.drm_dp_mst_branch* %23, i32 %conv, i32 %conv12, i32 %conv13, i32 %conv16) #8, !dbg !9854
  br label %out_clear_reply, !dbg !9855

if.end17:                                         ; preds = %lor.lhs.false
  %32 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !9856
  %33 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9857
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %33, i32 0, i32 9, !dbg !9858
  %call18 = call zeroext i1 @drm_dp_sideband_parse_reply(%struct.drm_dp_sideband_msg_rx* %32, %struct.drm_dp_sideband_msg_reply_body* %reply) #8, !dbg !9859
  %34 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9860
  %reply19 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %34, i32 0, i32 9, !dbg !9862
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply19, i32 0, i32 0, !dbg !9863
  %35 = load i8, i8* %reply_type, align 2, !dbg !9863
  %conv20 = zext i8 %35 to i32, !dbg !9860
  %cmp21 = icmp eq i32 %conv20, 1, !dbg !9864
  br i1 %cmp21, label %if.then23, label %if.end40, !dbg !9865

if.then23:                                        ; preds = %if.end17
  %36 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9866
  %reply24 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %36, i32 0, i32 9, !dbg !9866
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply24, i32 0, i32 1, !dbg !9866
  %37 = load i8, i8* %req_type, align 1, !dbg !9866
  %conv25 = zext i8 %37 to i32, !dbg !9866
  %38 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9866
  %reply26 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %38, i32 0, i32 9, !dbg !9866
  %req_type27 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply26, i32 0, i32 1, !dbg !9866
  %39 = load i8, i8* %req_type27, align 1, !dbg !9866
  %call28 = call i8* @drm_dp_mst_req_type_str(i8 zeroext %39) #8, !dbg !9866
  %40 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9866
  %reply29 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %40, i32 0, i32 9, !dbg !9866
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply29, i32 0, i32 2, !dbg !9866
  %nak = bitcast %union.ack_replies* %u to %struct.drm_dp_nak_reply*, !dbg !9866
  %reason = getelementptr inbounds %struct.drm_dp_nak_reply, %struct.drm_dp_nak_reply* %nak, i32 0, i32 1, !dbg !9866
  %41 = load i8, i8* %reason, align 2, !dbg !9866
  %conv30 = zext i8 %41 to i32, !dbg !9866
  %42 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9866
  %reply31 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %42, i32 0, i32 9, !dbg !9866
  %u32 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply31, i32 0, i32 2, !dbg !9866
  %nak33 = bitcast %union.ack_replies* %u32 to %struct.drm_dp_nak_reply*, !dbg !9866
  %reason34 = getelementptr inbounds %struct.drm_dp_nak_reply, %struct.drm_dp_nak_reply* %nak33, i32 0, i32 1, !dbg !9866
  %43 = load i8, i8* %reason34, align 2, !dbg !9866
  %call35 = call i8* @drm_dp_mst_nak_reason_str(i8 zeroext %43) #8, !dbg !9866
  %44 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9866
  %reply36 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %44, i32 0, i32 9, !dbg !9866
  %u37 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply36, i32 0, i32 2, !dbg !9866
  %nak38 = bitcast %union.ack_replies* %u37 to %struct.drm_dp_nak_reply*, !dbg !9866
  %nak_data = getelementptr inbounds %struct.drm_dp_nak_reply, %struct.drm_dp_nak_reply* %nak38, i32 0, i32 2, !dbg !9866
  %45 = load i8, i8* %nak_data, align 1, !dbg !9866
  %conv39 = zext i8 %45 to i32, !dbg !9866
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.105, i64 0, i64 0), i32 %conv25, i8* %call28, i32 %conv30, i8* %call35, i32 %conv39) #8, !dbg !9866
  br label %if.end40, !dbg !9868

if.end40:                                         ; preds = %if.then23, %if.end17
  %46 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !9869
  %47 = bitcast %struct.drm_dp_sideband_msg_rx* %46 to i8*, !dbg !9870
  call void @llvm.memset.p0i8.i64(i8* align 1 %47, i8 0, i64 326, i1 false), !dbg !9870
  %48 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9871
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %48) #8, !dbg !9872
  %49 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9873
  %qlock41 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %49, i32 0, i32 17, !dbg !9874
  call void @mutex_lock(%struct.mutex* %qlock41) #8, !dbg !9875
  %50 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9876
  %state = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %50, i32 0, i32 7, !dbg !9877
  store i32 3, i32* %state, align 4, !dbg !9878
  %51 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !9879
  %next42 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %51, i32 0, i32 5, !dbg !9880
  call void @list_del(%struct.list_head* %next42) #8, !dbg !9881
  %52 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9882
  %qlock43 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %52, i32 0, i32 17, !dbg !9883
  call void @mutex_unlock(%struct.mutex* %qlock43) #8, !dbg !9884
  %53 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9885
  %tx_waitq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %53, i32 0, i32 24, !dbg !9885
  call void @__wake_up(%struct.wait_queue_head* %tx_waitq, i32 3, i32 0, i8* null) #8, !dbg !9885
  store i32 0, i32* %retval, align 4, !dbg !9886
  br label %return, !dbg !9886

out_clear_reply:                                  ; preds = %if.then10
  call void @llvm.dbg.label(metadata !9887), !dbg !9888
  %54 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !9889
  %55 = bitcast %struct.drm_dp_sideband_msg_rx* %54 to i8*, !dbg !9890
  call void @llvm.memset.p0i8.i64(i8* align 1 %55, i8 0, i64 326, i1 false), !dbg !9890
  br label %out, !dbg !9890

out:                                              ; preds = %out_clear_reply, %if.then1, %if.then
  call void @llvm.dbg.label(metadata !9891), !dbg !9892
  %56 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9893
  %tobool44 = icmp ne %struct.drm_dp_mst_branch* %56, null, !dbg !9893
  br i1 %tobool44, label %if.then45, label %if.end46, !dbg !9895

if.then45:                                        ; preds = %out
  %57 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !9896
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %57) #8, !dbg !9897
  br label %if.end46, !dbg !9897

if.end46:                                         ; preds = %if.then45, %out
  store i32 0, i32* %retval, align 4, !dbg !9898
  br label %return, !dbg !9898

return:                                           ; preds = %if.end46, %if.end40
  %58 = load i32, i32* %retval, align 4, !dbg !9899
  ret i32 %58, !dbg !9899
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_handle_up_req(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !9900 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %up_req = alloca %struct.drm_dp_pending_up_req*, align 8
  %conn_stat = alloca %struct.drm_dp_connection_status_notify*, align 8
  %res_stat = alloca %struct.drm_dp_resource_status_notify*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata %struct.drm_dp_pending_up_req** %up_req, metadata !9903, metadata !DIExpression()), !dbg !9904
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9905
  %call = call zeroext i1 @drm_dp_get_one_sb_msg(%struct.drm_dp_mst_topology_mgr* %0, i1 zeroext true, %struct.drm_dp_mst_branch** null) #8, !dbg !9907
  br i1 %call, label %if.end, label %if.then, !dbg !9908

if.then:                                          ; preds = %entry
  br label %out, !dbg !9909

if.end:                                           ; preds = %entry
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9910
  %up_req_recv = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 7, !dbg !9912
  %have_eomt = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %up_req_recv, i32 0, i32 7, !dbg !9913
  %2 = load i8, i8* %have_eomt, align 1, !dbg !9913
  %tobool = trunc i8 %2 to i1, !dbg !9913
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !9914

if.then1:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !9915
  br label %return, !dbg !9915

if.end2:                                          ; preds = %if.end
  %call3 = call i8* @kzalloc(i64 152, i32 3264) #8, !dbg !9916
  %3 = bitcast i8* %call3 to %struct.drm_dp_pending_up_req*, !dbg !9916
  store %struct.drm_dp_pending_up_req* %3, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9917
  %4 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9918
  %tobool4 = icmp ne %struct.drm_dp_pending_up_req* %4, null, !dbg !9918
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !9920

if.then5:                                         ; preds = %if.end2
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.136, i64 0, i64 0)) #8, !dbg !9921
  store i32 -12, i32* %retval, align 4, !dbg !9923
  br label %return, !dbg !9923

if.end6:                                          ; preds = %if.end2
  %5 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9924
  %next = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %5, i32 0, i32 2, !dbg !9925
  call void @INIT_LIST_HEAD(%struct.list_head* %next) #8, !dbg !9926
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9927
  %up_req_recv7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 7, !dbg !9928
  %7 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9929
  %msg = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %7, i32 0, i32 1, !dbg !9930
  %call8 = call zeroext i1 @drm_dp_sideband_parse_req(%struct.drm_dp_sideband_msg_rx* %up_req_recv7, %struct.drm_dp_sideband_msg_req_body* %msg) #8, !dbg !9931
  %8 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9932
  %msg9 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %8, i32 0, i32 1, !dbg !9934
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg9, i32 0, i32 0, !dbg !9935
  %9 = load i8, i8* %req_type, align 8, !dbg !9935
  %conv = zext i8 %9 to i32, !dbg !9932
  %cmp = icmp ne i32 %conv, 2, !dbg !9936
  br i1 %cmp, label %land.lhs.true, label %if.end20, !dbg !9937

land.lhs.true:                                    ; preds = %if.end6
  %10 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9938
  %msg11 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %10, i32 0, i32 1, !dbg !9939
  %req_type12 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg11, i32 0, i32 0, !dbg !9940
  %11 = load i8, i8* %req_type12, align 8, !dbg !9940
  %conv13 = zext i8 %11 to i32, !dbg !9938
  %cmp14 = icmp ne i32 %conv13, 19, !dbg !9941
  br i1 %cmp14, label %if.then16, label %if.end20, !dbg !9942

if.then16:                                        ; preds = %land.lhs.true
  %12 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9943
  %msg17 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %12, i32 0, i32 1, !dbg !9943
  %req_type18 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg17, i32 0, i32 0, !dbg !9943
  %13 = load i8, i8* %req_type18, align 8, !dbg !9943
  %conv19 = zext i8 %13 to i32, !dbg !9943
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.137, i64 0, i64 0), i32 %conv19) #8, !dbg !9943
  %14 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9945
  %15 = bitcast %struct.drm_dp_pending_up_req* %14 to i8*, !dbg !9945
  call void @kfree(i8* %15) #8, !dbg !9946
  br label %out, !dbg !9947

if.end20:                                         ; preds = %land.lhs.true, %if.end6
  %16 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9948
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9949
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 12, !dbg !9950
  %18 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !9950
  %19 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9951
  %msg21 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %19, i32 0, i32 1, !dbg !9952
  %req_type22 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg21, i32 0, i32 0, !dbg !9953
  %20 = load i8, i8* %req_type22, align 8, !dbg !9953
  %conv23 = zext i8 %20 to i32, !dbg !9951
  %call24 = call i32 @drm_dp_send_up_ack_reply(%struct.drm_dp_mst_topology_mgr* %16, %struct.drm_dp_mst_branch* %18, i32 %conv23, i1 zeroext false) #8, !dbg !9954
  %21 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9955
  %msg25 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %21, i32 0, i32 1, !dbg !9957
  %req_type26 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg25, i32 0, i32 0, !dbg !9958
  %22 = load i8, i8* %req_type26, align 8, !dbg !9958
  %conv27 = zext i8 %22 to i32, !dbg !9955
  %cmp28 = icmp eq i32 %conv27, 2, !dbg !9959
  br i1 %cmp28, label %if.then30, label %if.else, !dbg !9960

if.then30:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.drm_dp_connection_status_notify** %conn_stat, metadata !9961, metadata !DIExpression()), !dbg !9965
  %23 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9966
  %msg31 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %23, i32 0, i32 1, !dbg !9967
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg31, i32 0, i32 1, !dbg !9968
  %conn_stat32 = bitcast %union.ack_req* %u to %struct.drm_dp_connection_status_notify*, !dbg !9969
  store %struct.drm_dp_connection_status_notify* %conn_stat32, %struct.drm_dp_connection_status_notify** %conn_stat, align 8, !dbg !9965
  %24 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat, align 8, !dbg !9970
  %port_number = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %24, i32 0, i32 1, !dbg !9970
  %25 = load i8, i8* %port_number, align 1, !dbg !9970
  %conv33 = zext i8 %25 to i32, !dbg !9970
  %26 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat, align 8, !dbg !9970
  %legacy_device_plug_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %26, i32 0, i32 2, !dbg !9970
  %27 = load i8, i8* %legacy_device_plug_status, align 1, !dbg !9970
  %tobool34 = trunc i8 %27 to i1, !dbg !9970
  %conv35 = zext i1 %tobool34 to i32, !dbg !9970
  %28 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat, align 8, !dbg !9970
  %displayport_device_plug_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %28, i32 0, i32 3, !dbg !9970
  %29 = load i8, i8* %displayport_device_plug_status, align 1, !dbg !9970
  %tobool36 = trunc i8 %29 to i1, !dbg !9970
  %conv37 = zext i1 %tobool36 to i32, !dbg !9970
  %30 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat, align 8, !dbg !9970
  %message_capability_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %30, i32 0, i32 4, !dbg !9970
  %31 = load i8, i8* %message_capability_status, align 1, !dbg !9970
  %tobool38 = trunc i8 %31 to i1, !dbg !9970
  %conv39 = zext i1 %tobool38 to i32, !dbg !9970
  %32 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat, align 8, !dbg !9970
  %input_port = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %32, i32 0, i32 5, !dbg !9970
  %33 = load i8, i8* %input_port, align 1, !dbg !9970
  %tobool40 = trunc i8 %33 to i1, !dbg !9970
  %conv41 = zext i1 %tobool40 to i32, !dbg !9970
  %34 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat, align 8, !dbg !9970
  %peer_device_type = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %34, i32 0, i32 6, !dbg !9970
  %35 = load i8, i8* %peer_device_type, align 1, !dbg !9970
  %conv42 = zext i8 %35 to i32, !dbg !9970
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.138, i64 0, i64 0), i32 %conv33, i32 %conv35, i32 %conv37, i32 %conv39, i32 %conv41, i32 %conv42) #8, !dbg !9970
  br label %if.end55, !dbg !9971

if.else:                                          ; preds = %if.end20
  %36 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9972
  %msg43 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %36, i32 0, i32 1, !dbg !9974
  %req_type44 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg43, i32 0, i32 0, !dbg !9975
  %37 = load i8, i8* %req_type44, align 8, !dbg !9975
  %conv45 = zext i8 %37 to i32, !dbg !9972
  %cmp46 = icmp eq i32 %conv45, 19, !dbg !9976
  br i1 %cmp46, label %if.then48, label %if.end54, !dbg !9977

if.then48:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.drm_dp_resource_status_notify** %res_stat, metadata !9978, metadata !DIExpression()), !dbg !9982
  %38 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9983
  %msg49 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %38, i32 0, i32 1, !dbg !9984
  %u50 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg49, i32 0, i32 1, !dbg !9985
  %resource_stat = bitcast %union.ack_req* %u50 to %struct.drm_dp_resource_status_notify*, !dbg !9986
  store %struct.drm_dp_resource_status_notify* %resource_stat, %struct.drm_dp_resource_status_notify** %res_stat, align 8, !dbg !9982
  %39 = load %struct.drm_dp_resource_status_notify*, %struct.drm_dp_resource_status_notify** %res_stat, align 8, !dbg !9987
  %port_number51 = getelementptr inbounds %struct.drm_dp_resource_status_notify, %struct.drm_dp_resource_status_notify* %39, i32 0, i32 0, !dbg !9987
  %40 = load i8, i8* %port_number51, align 2, !dbg !9987
  %conv52 = zext i8 %40 to i32, !dbg !9987
  %41 = load %struct.drm_dp_resource_status_notify*, %struct.drm_dp_resource_status_notify** %res_stat, align 8, !dbg !9987
  %available_pbn = getelementptr inbounds %struct.drm_dp_resource_status_notify, %struct.drm_dp_resource_status_notify* %41, i32 0, i32 2, !dbg !9987
  %42 = load i16, i16* %available_pbn, align 2, !dbg !9987
  %conv53 = zext i16 %42 to i32, !dbg !9987
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.139, i64 0, i64 0), i32 %conv52, i32 %conv53) #8, !dbg !9987
  br label %if.end54, !dbg !9988

if.end54:                                         ; preds = %if.then48, %if.else
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %if.then30
  %43 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9989
  %hdr = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %43, i32 0, i32 0, !dbg !9990
  %44 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9991
  %up_req_recv56 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %44, i32 0, i32 7, !dbg !9992
  %initial_hdr = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %up_req_recv56, i32 0, i32 8, !dbg !9993
  %45 = bitcast %struct.drm_dp_sideband_msg_hdr* %hdr to i8*, !dbg !9993
  %46 = bitcast %struct.drm_dp_sideband_msg_hdr* %initial_hdr to i8*, !dbg !9993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 2 %46, i64 16, i1 false), !dbg !9993
  %47 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9994
  %up_req_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %47, i32 0, i32 33, !dbg !9995
  call void @mutex_lock(%struct.mutex* %up_req_lock) #8, !dbg !9996
  %48 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !9997
  %next57 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %48, i32 0, i32 2, !dbg !9998
  %49 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !9999
  %up_req_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %49, i32 0, i32 32, !dbg !10000
  call void @list_add_tail(%struct.list_head* %next57, %struct.list_head* %up_req_list) #8, !dbg !10001
  %50 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10002
  %up_req_lock58 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %50, i32 0, i32 33, !dbg !10003
  call void @mutex_unlock(%struct.mutex* %up_req_lock58) #8, !dbg !10004
  %51 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !10005
  %52 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10006
  %up_req_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %52, i32 0, i32 34, !dbg !10007
  %call59 = call zeroext i1 @queue_work(%struct.workqueue_struct* %51, %struct.work_struct* %up_req_work) #8, !dbg !10008
  br label %out, !dbg !10008

out:                                              ; preds = %if.end55, %if.then16, %if.then
  call void @llvm.dbg.label(metadata !10009), !dbg !10010
  %53 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10011
  %up_req_recv60 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %53, i32 0, i32 7, !dbg !10012
  %54 = bitcast %struct.drm_dp_sideband_msg_rx* %up_req_recv60 to i8*, !dbg !10013
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 326, i1 false), !dbg !10013
  store i32 0, i32* %retval, align 4, !dbg !10014
  br label %return, !dbg !10014

return:                                           ; preds = %out, %if.then5, %if.then1
  %55 = load i32, i32* %retval, align 4, !dbg !10015
  ret i32 %55, !dbg !10015
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_kick_tx(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !10016 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10017, metadata !DIExpression()), !dbg !10018
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !10019
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10020
  %tx_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 26, !dbg !10021
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %tx_work) #8, !dbg !10022
  ret void, !dbg !10023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_detect_port(%struct.drm_connector* %connector, %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !10024 {
entry:
  %retval = alloca i32, align 4
  %connector.addr = alloca %struct.drm_connector*, align 8
  %ctx.addr = alloca %struct.drm_modeset_acquire_ctx*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10027, metadata !DIExpression()), !dbg !10028
  store %struct.drm_modeset_acquire_ctx* %ctx, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_modeset_acquire_ctx** %ctx.addr, metadata !10029, metadata !DIExpression()), !dbg !10030
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10031, metadata !DIExpression()), !dbg !10032
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10033, metadata !DIExpression()), !dbg !10034
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10035, metadata !DIExpression()), !dbg !10036
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10037
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10038
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %0, %struct.drm_dp_mst_port* %1) #8, !dbg !10039
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10040
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10041
  %tobool = icmp ne %struct.drm_dp_mst_port* %2, null, !dbg !10041
  br i1 %tobool, label %if.end, label %if.then, !dbg !10043

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10044
  br label %return, !dbg !10044

if.end:                                           ; preds = %entry
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10045
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 0, !dbg !10046
  %lock = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %base, i32 0, i32 1, !dbg !10047
  %4 = load %struct.drm_modeset_acquire_ctx*, %struct.drm_modeset_acquire_ctx** %ctx.addr, align 8, !dbg !10048
  %call1 = call i32 @drm_modeset_lock(%struct.drm_modeset_lock* %lock, %struct.drm_modeset_acquire_ctx* %4) #8, !dbg !10049
  store i32 %call1, i32* %ret, align 4, !dbg !10050
  %5 = load i32, i32* %ret, align 4, !dbg !10051
  %tobool2 = icmp ne i32 %5, 0, !dbg !10051
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !10053

if.then3:                                         ; preds = %if.end
  br label %out, !dbg !10054

if.end4:                                          ; preds = %if.end
  store i32 2, i32* %ret, align 4, !dbg !10055
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10056
  %ddps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 5, !dbg !10058
  %7 = load i8, i8* %ddps, align 1, !dbg !10058
  %tobool5 = trunc i8 %7 to i1, !dbg !10058
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !10059

if.then6:                                         ; preds = %if.end4
  br label %out, !dbg !10060

if.end7:                                          ; preds = %if.end4
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10061
  %pdt = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 6, !dbg !10062
  %9 = load i8, i8* %pdt, align 4, !dbg !10062
  %conv = zext i8 %9 to i32, !dbg !10061
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb11
    i32 4, label %sw.bb19
  ], !dbg !10063

sw.bb:                                            ; preds = %if.end7, %if.end7
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10064
  %mcs = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %10, i32 0, i32 4, !dbg !10067
  %11 = load i8, i8* %mcs, align 2, !dbg !10067
  %tobool8 = trunc i8 %11 to i1, !dbg !10067
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !10068

if.then9:                                         ; preds = %sw.bb
  store i32 1, i32* %ret, align 4, !dbg !10069
  br label %if.end10, !dbg !10070

if.end10:                                         ; preds = %if.then9, %sw.bb
  br label %sw.epilog, !dbg !10071

sw.bb11:                                          ; preds = %if.end7
  store i32 1, i32* %ret, align 4, !dbg !10072
  %12 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10073
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %12, i32 0, i32 2, !dbg !10075
  %13 = load i8, i8* %port_num, align 8, !dbg !10075
  %conv12 = zext i8 %13 to i32, !dbg !10073
  %cmp = icmp sge i32 %conv12, 8, !dbg !10076
  br i1 %cmp, label %land.lhs.true, label %if.end18, !dbg !10077

land.lhs.true:                                    ; preds = %sw.bb11
  %14 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10078
  %cached_edid = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %14, i32 0, i32 19, !dbg !10079
  %15 = load %struct.edid*, %struct.edid** %cached_edid, align 8, !dbg !10079
  %tobool14 = icmp ne %struct.edid* %15, null, !dbg !10078
  br i1 %tobool14, label %if.end18, label %if.then15, !dbg !10080

if.then15:                                        ; preds = %land.lhs.true
  %16 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10081
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10083
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %17, i32 0, i32 14, !dbg !10084
  %ddc = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux, i32 0, i32 1, !dbg !10085
  %call16 = call %struct.edid* @drm_get_edid(%struct.drm_connector* %16, %struct.i2c_adapter* %ddc) #8, !dbg !10086
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10087
  %cached_edid17 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %18, i32 0, i32 19, !dbg !10088
  store %struct.edid* %call16, %struct.edid** %cached_edid17, align 8, !dbg !10089
  br label %if.end18, !dbg !10090

if.end18:                                         ; preds = %if.then15, %land.lhs.true, %sw.bb11
  br label %sw.epilog, !dbg !10091

sw.bb19:                                          ; preds = %if.end7
  %19 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10092
  %ldps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %19, i32 0, i32 7, !dbg !10094
  %20 = load i8, i8* %ldps, align 1, !dbg !10094
  %tobool20 = trunc i8 %20 to i1, !dbg !10094
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10095

if.then21:                                        ; preds = %sw.bb19
  store i32 1, i32* %ret, align 4, !dbg !10096
  br label %if.end22, !dbg !10097

if.end22:                                         ; preds = %if.then21, %sw.bb19
  br label %sw.epilog, !dbg !10098

sw.epilog:                                        ; preds = %if.end7, %if.end22, %if.end18, %if.end10
  br label %out, !dbg !10099

out:                                              ; preds = %sw.epilog, %if.then6, %if.then3
  call void @llvm.dbg.label(metadata !10100), !dbg !10101
  %21 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10102
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %21) #8, !dbg !10103
  %22 = load i32, i32* %ret, align 4, !dbg !10104
  store i32 %22, i32* %retval, align 4, !dbg !10105
  br label %return, !dbg !10105

return:                                           ; preds = %out, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10106
  ret i32 %23, !dbg !10106
}

; Function Attrs: noredzone
declare dso_local i32 @drm_modeset_lock(%struct.drm_modeset_lock*, %struct.drm_modeset_acquire_ctx*) #3

; Function Attrs: noredzone
declare dso_local %struct.edid* @drm_get_edid(%struct.drm_connector*, %struct.i2c_adapter*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.edid* @drm_dp_mst_get_edid(%struct.drm_connector* %connector, %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !10107 {
entry:
  %retval = alloca %struct.edid*, align 8
  %connector.addr = alloca %struct.drm_connector*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %edid = alloca %struct.edid*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !10110, metadata !DIExpression()), !dbg !10111
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10114, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.declare(metadata %struct.edid** %edid, metadata !10116, metadata !DIExpression()), !dbg !10117
  store %struct.edid* null, %struct.edid** %edid, align 8, !dbg !10117
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10118
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10119
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %0, %struct.drm_dp_mst_port* %1) #8, !dbg !10120
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10121
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10122
  %tobool = icmp ne %struct.drm_dp_mst_port* %2, null, !dbg !10122
  br i1 %tobool, label %if.end, label %if.then, !dbg !10124

if.then:                                          ; preds = %entry
  store %struct.edid* null, %struct.edid** %retval, align 8, !dbg !10125
  br label %return, !dbg !10125

if.end:                                           ; preds = %entry
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10126
  %cached_edid = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 19, !dbg !10128
  %4 = load %struct.edid*, %struct.edid** %cached_edid, align 8, !dbg !10128
  %tobool1 = icmp ne %struct.edid* %4, null, !dbg !10126
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !10129

if.then2:                                         ; preds = %if.end
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10130
  %cached_edid3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 19, !dbg !10131
  %6 = load %struct.edid*, %struct.edid** %cached_edid3, align 8, !dbg !10131
  %call4 = call %struct.edid* @drm_edid_duplicate(%struct.edid* %6) #8, !dbg !10132
  store %struct.edid* %call4, %struct.edid** %edid, align 8, !dbg !10133
  br label %if.end6, !dbg !10134

if.else:                                          ; preds = %if.end
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !10135
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10137
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 14, !dbg !10138
  %ddc = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux, i32 0, i32 1, !dbg !10139
  %call5 = call %struct.edid* @drm_get_edid(%struct.drm_connector* %7, %struct.i2c_adapter* %ddc) #8, !dbg !10140
  store %struct.edid* %call5, %struct.edid** %edid, align 8, !dbg !10141
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then2
  %9 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !10142
  %call7 = call zeroext i1 @drm_detect_monitor_audio(%struct.edid* %9) #8, !dbg !10143
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10144
  %has_audio = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %10, i32 0, i32 20, !dbg !10145
  %frombool = zext i1 %call7 to i8, !dbg !10146
  store i8 %frombool, i8* %has_audio, align 8, !dbg !10146
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10147
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %11) #8, !dbg !10148
  %12 = load %struct.edid*, %struct.edid** %edid, align 8, !dbg !10149
  store %struct.edid* %12, %struct.edid** %retval, align 8, !dbg !10150
  br label %return, !dbg !10150

return:                                           ; preds = %if.end6, %if.then
  %13 = load %struct.edid*, %struct.edid** %retval, align 8, !dbg !10151
  ret %struct.edid* %13, !dbg !10151
}

; Function Attrs: noredzone
declare dso_local %struct.edid* @drm_edid_duplicate(%struct.edid*) #3

; Function Attrs: noredzone
declare dso_local zeroext i1 @drm_detect_monitor_audio(%struct.edid*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_find_vcpi_slots(%struct.drm_dp_mst_topology_mgr* %mgr, i32 %pbn) #0 !dbg !10152 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %pbn.addr = alloca i32, align 4
  %num_slots = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10155, metadata !DIExpression()), !dbg !10156
  store i32 %pbn, i32* %pbn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn.addr, metadata !10157, metadata !DIExpression()), !dbg !10158
  call void @llvm.dbg.declare(metadata i32* %num_slots, metadata !10159, metadata !DIExpression()), !dbg !10160
  %0 = load i32, i32* %pbn.addr, align 4, !dbg !10161
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10161
  %pbn_div = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 15, !dbg !10161
  %2 = load i32, i32* %pbn_div, align 8, !dbg !10161
  %add = add i32 %0, %2, !dbg !10161
  %sub = sub i32 %add, 1, !dbg !10161
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10161
  %pbn_div1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 15, !dbg !10161
  %4 = load i32, i32* %pbn_div1, align 8, !dbg !10161
  %div = sdiv i32 %sub, %4, !dbg !10161
  store i32 %div, i32* %num_slots, align 4, !dbg !10162
  %5 = load i32, i32* %num_slots, align 4, !dbg !10163
  %cmp = icmp sgt i32 %5, 63, !dbg !10165
  br i1 %cmp, label %if.then, label %if.end, !dbg !10166

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval, align 4, !dbg !10167
  br label %return, !dbg !10167

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %num_slots, align 4, !dbg !10168
  store i32 %6, i32* %retval, align 4, !dbg !10169
  br label %return, !dbg !10169

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10170
  ret i32 %7, !dbg !10170
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_atomic_find_vcpi_slots(%struct.drm_atomic_state* %state, %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i32 %pbn, i32 %pbn_div) #0 !dbg !10171 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %pbn.addr = alloca i32, align 4
  %pbn_div.addr = alloca i32, align 4
  %topology_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %pos = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %vcpi = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %prev_slots = alloca i32, align 4
  %prev_bw = alloca i32, align 4
  %req_slots = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp32 = alloca i64, align 8
  %__mptr43 = alloca i8*, align 8
  %tmp48 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !10174, metadata !DIExpression()), !dbg !10175
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10176, metadata !DIExpression()), !dbg !10177
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10178, metadata !DIExpression()), !dbg !10179
  store i32 %pbn, i32* %pbn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn.addr, metadata !10180, metadata !DIExpression()), !dbg !10181
  store i32 %pbn_div, i32* %pbn_div.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn_div.addr, metadata !10182, metadata !DIExpression()), !dbg !10183
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %topology_state, metadata !10184, metadata !DIExpression()), !dbg !10185
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %pos, metadata !10186, metadata !DIExpression()), !dbg !10187
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %vcpi, metadata !10188, metadata !DIExpression()), !dbg !10189
  store %struct.drm_dp_vcpi_allocation* null, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10189
  call void @llvm.dbg.declare(metadata i32* %prev_slots, metadata !10190, metadata !DIExpression()), !dbg !10191
  call void @llvm.dbg.declare(metadata i32* %prev_bw, metadata !10192, metadata !DIExpression()), !dbg !10193
  call void @llvm.dbg.declare(metadata i32* %req_slots, metadata !10194, metadata !DIExpression()), !dbg !10195
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10196
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10197
  %call = call %struct.drm_dp_mst_topology_state* @drm_atomic_get_mst_topology_state(%struct.drm_atomic_state* %0, %struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !10198
  store %struct.drm_dp_mst_topology_state* %call, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10199
  %2 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10200
  %3 = bitcast %struct.drm_dp_mst_topology_state* %2 to i8*, !dbg !10200
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !10202
  br i1 %call1, label %if.then, label %if.end, !dbg !10203

if.then:                                          ; preds = %entry
  %4 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10204
  %5 = bitcast %struct.drm_dp_mst_topology_state* %4 to i8*, !dbg !10204
  %call2 = call i64 @PTR_ERR(i8* %5) #8, !dbg !10205
  %conv = trunc i64 %call2 to i32, !dbg !10205
  store i32 %conv, i32* %retval, align 4, !dbg !10206
  br label %return, !dbg !10206

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10207, metadata !DIExpression()), !dbg !10210
  %6 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10210
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %6, i32 0, i32 1, !dbg !10210
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !10210
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10210
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !10210
  store i8* %8, i8** %__mptr, align 8, !dbg !10210
  br label %do.body, !dbg !10210

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !10211

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !10210
  %add.ptr = getelementptr i8, i8* %9, i64 -24, !dbg !10210
  %10 = bitcast i8* %add.ptr to %struct.drm_dp_vcpi_allocation*, !dbg !10210
  store %struct.drm_dp_vcpi_allocation* %10, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !10211
  %11 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !10210
  store %struct.drm_dp_vcpi_allocation* %11, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10213
  br label %for.cond, !dbg !10213

for.cond:                                         ; preds = %do.end47, %do.end
  %12 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10214
  %next3 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %12, i32 0, i32 4, !dbg !10214
  %13 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10214
  %vcpis4 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %13, i32 0, i32 1, !dbg !10214
  %cmp = icmp eq %struct.list_head* %next3, %vcpis4, !dbg !10214
  %lnot = xor i1 %cmp, true, !dbg !10214
  br i1 %lnot, label %for.body, label %for.end, !dbg !10213

for.body:                                         ; preds = %for.cond
  %14 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10216
  %port6 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %14, i32 0, i32 0, !dbg !10219
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port6, align 8, !dbg !10219
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10220
  %cmp7 = icmp eq %struct.drm_dp_mst_port* %15, %16, !dbg !10221
  br i1 %cmp7, label %if.then9, label %if.end42, !dbg !10222

if.then9:                                         ; preds = %for.body
  %17 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10223
  store %struct.drm_dp_vcpi_allocation* %17, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10225
  %18 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10226
  %vcpi10 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %18, i32 0, i32 1, !dbg !10227
  %19 = load i32, i32* %vcpi10, align 8, !dbg !10227
  store i32 %19, i32* %prev_slots, align 4, !dbg !10228
  %20 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10229
  %pbn11 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %20, i32 0, i32 2, !dbg !10230
  %21 = load i32, i32* %pbn11, align 4, !dbg !10230
  store i32 %21, i32* %prev_bw, align 4, !dbg !10231
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10232, metadata !DIExpression()), !dbg !10235
  %22 = load i32, i32* %prev_slots, align 4, !dbg !10235
  %tobool = icmp ne i32 %22, 0, !dbg !10235
  %lnot12 = xor i1 %tobool, true, !dbg !10235
  %lnot13 = xor i1 %lnot12, true, !dbg !10235
  %lnot14 = xor i1 %lnot13, true, !dbg !10235
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !10235
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10235
  %23 = load i32, i32* %__ret_warn_on, align 4, !dbg !10236
  %tobool15 = icmp ne i32 %23, 0, !dbg !10236
  %lnot16 = xor i1 %tobool15, true, !dbg !10236
  %lnot18 = xor i1 %lnot16, true, !dbg !10236
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !10236
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !10236
  %tobool21 = icmp ne i64 %conv20, 0, !dbg !10236
  br i1 %tobool21, label %if.then22, label %if.end31, !dbg !10235

if.then22:                                        ; preds = %if.then9
  br label %do.body23, !dbg !10236

do.body23:                                        ; preds = %if.then22
  br label %do.body24, !dbg !10238

do.body24:                                        ; preds = %do.body23
  br label %do.end25, !dbg !10240

do.end25:                                         ; preds = %do.body24
  br label %do.body26, !dbg !10238

do.body26:                                        ; preds = %do.end25
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 4369, i32 2305, i64 12) #7, !dbg !10242, !srcloc !10244
  br label %do.end27, !dbg !10242

do.end27:                                         ; preds = %do.body26
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 347) #7, !dbg !10245, !srcloc !10247
  br label %do.body28, !dbg !10238

do.body28:                                        ; preds = %do.end27
  br label %do.end29, !dbg !10248

do.end29:                                         ; preds = %do.body28
  br label %do.end30, !dbg !10238

do.end30:                                         ; preds = %do.end29
  br label %if.end31, !dbg !10238

if.end31:                                         ; preds = %do.end30, %if.then9
  %24 = load i32, i32* %__ret_warn_on, align 4, !dbg !10235
  %tobool33 = icmp ne i32 %24, 0, !dbg !10235
  %lnot34 = xor i1 %tobool33, true, !dbg !10235
  %lnot36 = xor i1 %lnot34, true, !dbg !10235
  %lnot.ext37 = zext i1 %lnot36 to i32, !dbg !10235
  %conv38 = sext i32 %lnot.ext37 to i64, !dbg !10235
  store i64 %conv38, i64* %tmp32, align 8, !dbg !10236
  %25 = load i64, i64* %tmp32, align 8, !dbg !10235
  %tobool39 = icmp ne i64 %25, 0, !dbg !10250
  br i1 %tobool39, label %if.then40, label %if.end41, !dbg !10251

if.then40:                                        ; preds = %if.end31
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10252
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.25, i64 0, i64 0), %struct.drm_dp_mst_port* %26) #8, !dbg !10252
  store i32 -22, i32* %retval, align 4, !dbg !10254
  br label %return, !dbg !10254

if.end41:                                         ; preds = %if.end31
  br label %for.end, !dbg !10255

if.end42:                                         ; preds = %for.body
  br label %for.inc, !dbg !10256

for.inc:                                          ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i8** %__mptr43, metadata !10257, metadata !DIExpression()), !dbg !10259
  %27 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10259
  %next44 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %27, i32 0, i32 4, !dbg !10259
  %next45 = getelementptr inbounds %struct.list_head, %struct.list_head* %next44, i32 0, i32 0, !dbg !10259
  %28 = load %struct.list_head*, %struct.list_head** %next45, align 8, !dbg !10259
  %29 = bitcast %struct.list_head* %28 to i8*, !dbg !10259
  store i8* %29, i8** %__mptr43, align 8, !dbg !10259
  br label %do.body46, !dbg !10259

do.body46:                                        ; preds = %for.inc
  br label %do.end47, !dbg !10260

do.end47:                                         ; preds = %do.body46
  %30 = load i8*, i8** %__mptr43, align 8, !dbg !10259
  %add.ptr49 = getelementptr i8, i8* %30, i64 -24, !dbg !10259
  %31 = bitcast i8* %add.ptr49 to %struct.drm_dp_vcpi_allocation*, !dbg !10259
  store %struct.drm_dp_vcpi_allocation* %31, %struct.drm_dp_vcpi_allocation** %tmp48, align 8, !dbg !10260
  %32 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp48, align 8, !dbg !10259
  store %struct.drm_dp_vcpi_allocation* %32, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10214
  br label %for.cond, !dbg !10214, !llvm.loop !10262

for.end:                                          ; preds = %if.end41, %for.cond
  %33 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10264
  %tobool50 = icmp ne %struct.drm_dp_vcpi_allocation* %33, null, !dbg !10264
  br i1 %tobool50, label %if.end52, label %if.then51, !dbg !10266

if.then51:                                        ; preds = %for.end
  store i32 0, i32* %prev_slots, align 4, !dbg !10267
  store i32 0, i32* %prev_bw, align 4, !dbg !10269
  br label %if.end52, !dbg !10270

if.end52:                                         ; preds = %if.then51, %for.end
  %34 = load i32, i32* %pbn_div.addr, align 4, !dbg !10271
  %cmp53 = icmp sle i32 %34, 0, !dbg !10273
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !10274

if.then55:                                        ; preds = %if.end52
  %35 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10275
  %pbn_div56 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %35, i32 0, i32 15, !dbg !10276
  %36 = load i32, i32* %pbn_div56, align 8, !dbg !10276
  store i32 %36, i32* %pbn_div.addr, align 4, !dbg !10277
  br label %if.end57, !dbg !10278

if.end57:                                         ; preds = %if.then55, %if.end52
  %37 = load i32, i32* %pbn.addr, align 4, !dbg !10279
  %38 = load i32, i32* %pbn_div.addr, align 4, !dbg !10279
  %add = add i32 %37, %38, !dbg !10279
  %sub = sub i32 %add, 1, !dbg !10279
  %39 = load i32, i32* %pbn_div.addr, align 4, !dbg !10279
  %div = sdiv i32 %sub, %39, !dbg !10279
  store i32 %div, i32* %req_slots, align 4, !dbg !10280
  %40 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10281
  %connector = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %40, i32 0, i32 17, !dbg !10281
  %41 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !10281
  %base = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %41, i32 0, i32 4, !dbg !10281
  %id = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base, i32 0, i32 0, !dbg !10281
  %42 = load i32, i32* %id, align 8, !dbg !10281
  %43 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10281
  %connector58 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %43, i32 0, i32 17, !dbg !10281
  %44 = load %struct.drm_connector*, %struct.drm_connector** %connector58, align 8, !dbg !10281
  %name = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %44, i32 0, i32 5, !dbg !10281
  %45 = load i8*, i8** %name, align 8, !dbg !10281
  %46 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10281
  %47 = load i32, i32* %prev_slots, align 4, !dbg !10281
  %48 = load i32, i32* %req_slots, align 4, !dbg !10281
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26, i64 0, i64 0), i32 %42, i8* %45, %struct.drm_dp_mst_port* %46, i32 %47, i32 %48) #8, !dbg !10281
  %49 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10282
  %connector59 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %49, i32 0, i32 17, !dbg !10282
  %50 = load %struct.drm_connector*, %struct.drm_connector** %connector59, align 8, !dbg !10282
  %base60 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %50, i32 0, i32 4, !dbg !10282
  %id61 = getelementptr inbounds %struct.drm_mode_object, %struct.drm_mode_object* %base60, i32 0, i32 0, !dbg !10282
  %51 = load i32, i32* %id61, align 8, !dbg !10282
  %52 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10282
  %connector62 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %52, i32 0, i32 17, !dbg !10282
  %53 = load %struct.drm_connector*, %struct.drm_connector** %connector62, align 8, !dbg !10282
  %name63 = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %53, i32 0, i32 5, !dbg !10282
  %54 = load i8*, i8** %name63, align 8, !dbg !10282
  %55 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10282
  %56 = load i32, i32* %prev_bw, align 4, !dbg !10282
  %57 = load i32, i32* %pbn.addr, align 4, !dbg !10282
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.27, i64 0, i64 0), i32 %51, i8* %54, %struct.drm_dp_mst_port* %55, i32 %56, i32 %57) #8, !dbg !10282
  %58 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10283
  %tobool64 = icmp ne %struct.drm_dp_vcpi_allocation* %58, null, !dbg !10283
  br i1 %tobool64, label %if.end73, label %if.then65, !dbg !10285

if.then65:                                        ; preds = %if.end57
  %call66 = call i8* @kzalloc(i64 40, i32 3264) #8, !dbg !10286
  %59 = bitcast i8* %call66 to %struct.drm_dp_vcpi_allocation*, !dbg !10286
  store %struct.drm_dp_vcpi_allocation* %59, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10288
  %60 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10289
  %tobool67 = icmp ne %struct.drm_dp_vcpi_allocation* %60, null, !dbg !10289
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !10291

if.then68:                                        ; preds = %if.then65
  store i32 -12, i32* %retval, align 4, !dbg !10292
  br label %return, !dbg !10292

if.end69:                                         ; preds = %if.then65
  %61 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10293
  call void @drm_dp_mst_get_port_malloc(%struct.drm_dp_mst_port* %61) #8, !dbg !10294
  %62 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10295
  %63 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10296
  %port70 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %63, i32 0, i32 0, !dbg !10297
  store %struct.drm_dp_mst_port* %62, %struct.drm_dp_mst_port** %port70, align 8, !dbg !10298
  %64 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10299
  %next71 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %64, i32 0, i32 4, !dbg !10300
  %65 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10301
  %vcpis72 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %65, i32 0, i32 1, !dbg !10302
  call void @list_add(%struct.list_head* %next71, %struct.list_head* %vcpis72) #8, !dbg !10303
  br label %if.end73, !dbg !10304

if.end73:                                         ; preds = %if.end69, %if.end57
  %66 = load i32, i32* %req_slots, align 4, !dbg !10305
  %67 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10306
  %vcpi74 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %67, i32 0, i32 1, !dbg !10307
  store i32 %66, i32* %vcpi74, align 8, !dbg !10308
  %68 = load i32, i32* %pbn.addr, align 4, !dbg !10309
  %69 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !10310
  %pbn75 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %69, i32 0, i32 2, !dbg !10311
  store i32 %68, i32* %pbn75, align 4, !dbg !10312
  %70 = load i32, i32* %req_slots, align 4, !dbg !10313
  store i32 %70, i32* %retval, align 4, !dbg !10314
  br label %return, !dbg !10314

return:                                           ; preds = %if.end73, %if.then68, %if.then40, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !10315
  ret i32 %71, !dbg !10315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.drm_dp_mst_topology_state* @drm_atomic_get_mst_topology_state(%struct.drm_atomic_state* %state, %struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !10316 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !10319, metadata !DIExpression()), !dbg !10320
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10321, metadata !DIExpression()), !dbg !10322
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10323, metadata !DIExpression()), !dbg !10325
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10325
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10325
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 0, !dbg !10325
  %call = call %struct.drm_private_state* @drm_atomic_get_private_obj_state(%struct.drm_atomic_state* %0, %struct.drm_private_obj* %base) #8, !dbg !10325
  %2 = bitcast %struct.drm_private_state* %call to i8*, !dbg !10325
  store i8* %2, i8** %__mptr, align 8, !dbg !10325
  br label %do.body, !dbg !10325

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10326

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10325
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !10325
  %4 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_state*, !dbg !10325
  store %struct.drm_dp_mst_topology_state* %4, %struct.drm_dp_mst_topology_state** %tmp, align 8, !dbg !10326
  %5 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %tmp, align 8, !dbg !10325
  ret %struct.drm_dp_mst_topology_state* %5, !dbg !10328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !10329 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10333, metadata !DIExpression()), !dbg !10334
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10335
  %1 = ptrtoint i8* %0 to i64, !dbg !10335
  %2 = inttoptr i64 %1 to i8*, !dbg !10335
  %3 = ptrtoint i8* %2 to i64, !dbg !10335
  %cmp = icmp uge i64 %3, -4095, !dbg !10335
  %lnot = xor i1 %cmp, true, !dbg !10335
  %lnot1 = xor i1 %lnot, true, !dbg !10335
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !10335
  %conv = sext i32 %lnot.ext to i64, !dbg !10335
  %tobool = icmp ne i64 %conv, 0, !dbg !10335
  ret i1 %tobool, !dbg !10336
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !10337 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !10340, metadata !DIExpression()), !dbg !10341
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !10342
  %1 = ptrtoint i8* %0 to i64, !dbg !10343
  ret i64 %1, !dbg !10344
}

; Function Attrs: noredzone
declare dso_local void @__drm_err(i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !10345 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10349, metadata !DIExpression()), !dbg !10350
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10351, metadata !DIExpression()), !dbg !10352
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10353
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10354
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10355
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !10356
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10356
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #8, !dbg !10357
  ret void, !dbg !10358
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_atomic_release_vcpi_slots(%struct.drm_atomic_state* %state, %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !10359 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %topology_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %pos = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %found = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp38 = alloca i64, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !10362, metadata !DIExpression()), !dbg !10363
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10364, metadata !DIExpression()), !dbg !10365
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10366, metadata !DIExpression()), !dbg !10367
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %topology_state, metadata !10368, metadata !DIExpression()), !dbg !10369
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %pos, metadata !10370, metadata !DIExpression()), !dbg !10371
  call void @llvm.dbg.declare(metadata i8* %found, metadata !10372, metadata !DIExpression()), !dbg !10373
  store i8 0, i8* %found, align 1, !dbg !10373
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !10374
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10375
  %call = call %struct.drm_dp_mst_topology_state* @drm_atomic_get_mst_topology_state(%struct.drm_atomic_state* %0, %struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !10376
  store %struct.drm_dp_mst_topology_state* %call, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10377
  %2 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10378
  %3 = bitcast %struct.drm_dp_mst_topology_state* %2 to i8*, !dbg !10378
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !10380
  br i1 %call1, label %if.then, label %if.end, !dbg !10381

if.then:                                          ; preds = %entry
  %4 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10382
  %5 = bitcast %struct.drm_dp_mst_topology_state* %4 to i8*, !dbg !10382
  %call2 = call i64 @PTR_ERR(i8* %5) #8, !dbg !10383
  %conv = trunc i64 %call2 to i32, !dbg !10383
  store i32 %conv, i32* %retval, align 4, !dbg !10384
  br label %return, !dbg !10384

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10385, metadata !DIExpression()), !dbg !10388
  %6 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10388
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %6, i32 0, i32 1, !dbg !10388
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !10388
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10388
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !10388
  store i8* %8, i8** %__mptr, align 8, !dbg !10388
  br label %do.body, !dbg !10388

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !10389

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !10388
  %add.ptr = getelementptr i8, i8* %9, i64 -24, !dbg !10388
  %10 = bitcast i8* %add.ptr to %struct.drm_dp_vcpi_allocation*, !dbg !10388
  store %struct.drm_dp_vcpi_allocation* %10, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !10389
  %11 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !10388
  store %struct.drm_dp_vcpi_allocation* %11, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10391
  br label %for.cond, !dbg !10391

for.cond:                                         ; preds = %do.end15, %do.end
  %12 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10392
  %next3 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %12, i32 0, i32 4, !dbg !10392
  %13 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10392
  %vcpis4 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %13, i32 0, i32 1, !dbg !10392
  %cmp = icmp eq %struct.list_head* %next3, %vcpis4, !dbg !10392
  %lnot = xor i1 %cmp, true, !dbg !10392
  br i1 %lnot, label %for.body, label %for.end, !dbg !10391

for.body:                                         ; preds = %for.cond
  %14 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10394
  %port6 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %14, i32 0, i32 0, !dbg !10397
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port6, align 8, !dbg !10397
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10398
  %cmp7 = icmp eq %struct.drm_dp_mst_port* %15, %16, !dbg !10399
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !10400

if.then9:                                         ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !10401
  br label %for.end, !dbg !10403

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !10404

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !10405, metadata !DIExpression()), !dbg !10407
  %17 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10407
  %next12 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %17, i32 0, i32 4, !dbg !10407
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %next12, i32 0, i32 0, !dbg !10407
  %18 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !10407
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !10407
  store i8* %19, i8** %__mptr11, align 8, !dbg !10407
  br label %do.body14, !dbg !10407

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !10408

do.end15:                                         ; preds = %do.body14
  %20 = load i8*, i8** %__mptr11, align 8, !dbg !10407
  %add.ptr17 = getelementptr i8, i8* %20, i64 -24, !dbg !10407
  %21 = bitcast i8* %add.ptr17 to %struct.drm_dp_vcpi_allocation*, !dbg !10407
  store %struct.drm_dp_vcpi_allocation* %21, %struct.drm_dp_vcpi_allocation** %tmp16, align 8, !dbg !10408
  %22 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp16, align 8, !dbg !10407
  store %struct.drm_dp_vcpi_allocation* %22, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10392
  br label %for.cond, !dbg !10392, !llvm.loop !10410

for.end:                                          ; preds = %if.then9, %for.cond
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !10412, metadata !DIExpression()), !dbg !10415
  %23 = load i8, i8* %found, align 1, !dbg !10415
  %tobool = trunc i8 %23 to i1, !dbg !10415
  %lnot18 = xor i1 %tobool, true, !dbg !10415
  %lnot19 = xor i1 %lnot18, true, !dbg !10415
  %lnot20 = xor i1 %lnot19, true, !dbg !10415
  %lnot.ext = zext i1 %lnot20 to i32, !dbg !10415
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !10415
  %24 = load i32, i32* %__ret_warn_on, align 4, !dbg !10416
  %tobool21 = icmp ne i32 %24, 0, !dbg !10416
  %lnot22 = xor i1 %tobool21, true, !dbg !10416
  %lnot24 = xor i1 %lnot22, true, !dbg !10416
  %lnot.ext25 = zext i1 %lnot24 to i32, !dbg !10416
  %conv26 = sext i32 %lnot.ext25 to i64, !dbg !10416
  %tobool27 = icmp ne i64 %conv26, 0, !dbg !10416
  br i1 %tobool27, label %if.then28, label %if.end37, !dbg !10415

if.then28:                                        ; preds = %for.end
  br label %do.body29, !dbg !10416

do.body29:                                        ; preds = %if.then28
  br label %do.body30, !dbg !10418

do.body30:                                        ; preds = %do.body29
  br label %do.end31, !dbg !10420

do.end31:                                         ; preds = %do.body30
  br label %do.body32, !dbg !10418

do.body32:                                        ; preds = %do.end31
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 4456, i32 2305, i64 12) #7, !dbg !10422, !srcloc !10424
  br label %do.end33, !dbg !10422

do.end33:                                         ; preds = %do.body32
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 350) #7, !dbg !10425, !srcloc !10427
  br label %do.body34, !dbg !10418

do.body34:                                        ; preds = %do.end33
  br label %do.end35, !dbg !10428

do.end35:                                         ; preds = %do.body34
  br label %do.end36, !dbg !10418

do.end36:                                         ; preds = %do.end35
  br label %if.end37, !dbg !10418

if.end37:                                         ; preds = %do.end36, %for.end
  %25 = load i32, i32* %__ret_warn_on, align 4, !dbg !10415
  %tobool39 = icmp ne i32 %25, 0, !dbg !10415
  %lnot40 = xor i1 %tobool39, true, !dbg !10415
  %lnot42 = xor i1 %lnot40, true, !dbg !10415
  %lnot.ext43 = zext i1 %lnot42 to i32, !dbg !10415
  %conv44 = sext i32 %lnot.ext43 to i64, !dbg !10415
  store i64 %conv44, i64* %tmp38, align 8, !dbg !10416
  %26 = load i64, i64* %tmp38, align 8, !dbg !10415
  %tobool45 = icmp ne i64 %26, 0, !dbg !10430
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !10431

if.then46:                                        ; preds = %if.end37
  %27 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10432
  %28 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %topology_state, align 8, !dbg !10432
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %28, i32 0, i32 0, !dbg !10432
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.28, i64 0, i64 0), %struct.drm_dp_mst_port* %27, %struct.drm_private_state* %base) #8, !dbg !10432
  store i32 -22, i32* %retval, align 4, !dbg !10434
  br label %return, !dbg !10434

if.end47:                                         ; preds = %if.end37
  %29 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10435
  %30 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10435
  %vcpi = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %30, i32 0, i32 1, !dbg !10435
  %31 = load i32, i32* %vcpi, align 8, !dbg !10435
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29, i64 0, i64 0), %struct.drm_dp_mst_port* %29, i32 %31) #8, !dbg !10435
  %32 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10436
  %vcpi48 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %32, i32 0, i32 1, !dbg !10438
  %33 = load i32, i32* %vcpi48, align 8, !dbg !10438
  %tobool49 = icmp ne i32 %33, 0, !dbg !10436
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !10439

if.then50:                                        ; preds = %if.end47
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10440
  call void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %34) #8, !dbg !10442
  %35 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10443
  %vcpi51 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %35, i32 0, i32 1, !dbg !10444
  store i32 0, i32* %vcpi51, align 8, !dbg !10445
  %36 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !10446
  %pbn = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %36, i32 0, i32 2, !dbg !10447
  store i32 0, i32* %pbn, align 4, !dbg !10448
  br label %if.end52, !dbg !10449

if.end52:                                         ; preds = %if.then50, %if.end47
  store i32 0, i32* %retval, align 4, !dbg !10450
  br label %return, !dbg !10450

return:                                           ; preds = %if.end52, %if.then46, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !10451
  ret i32 %37, !dbg !10451
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local zeroext i1 @drm_dp_mst_allocate_vcpi(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i32 %pbn, i32 %slots) #0 !dbg !10452 {
entry:
  %retval = alloca i1, align 1
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %pbn.addr = alloca i32, align 4
  %slots.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10455, metadata !DIExpression()), !dbg !10456
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10457, metadata !DIExpression()), !dbg !10458
  store i32 %pbn, i32* %pbn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn.addr, metadata !10459, metadata !DIExpression()), !dbg !10460
  store i32 %slots, i32* %slots.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slots.addr, metadata !10461, metadata !DIExpression()), !dbg !10462
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10463, metadata !DIExpression()), !dbg !10464
  %0 = load i32, i32* %slots.addr, align 4, !dbg !10465
  %cmp = icmp slt i32 %0, 0, !dbg !10467
  br i1 %cmp, label %if.then, label %if.end, !dbg !10468

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !10469
  br label %return, !dbg !10469

if.end:                                           ; preds = %entry
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10470
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10471
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_port* %2) #8, !dbg !10472
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10473
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10474
  %tobool = icmp ne %struct.drm_dp_mst_port* %3, null, !dbg !10474
  br i1 %tobool, label %if.end2, label %if.then1, !dbg !10476

if.then1:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !10477
  br label %return, !dbg !10477

if.end2:                                          ; preds = %if.end
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10478
  %vcpi = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %4, i32 0, i32 16, !dbg !10480
  %vcpi3 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi, i32 0, i32 0, !dbg !10481
  %5 = load i32, i32* %vcpi3, align 8, !dbg !10481
  %cmp4 = icmp sgt i32 %5, 0, !dbg !10482
  br i1 %cmp4, label %if.then5, label %if.end15, !dbg !10483

if.then5:                                         ; preds = %if.end2
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10484
  %vcpi6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 16, !dbg !10484
  %vcpi7 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi6, i32 0, i32 0, !dbg !10484
  %7 = load i32, i32* %vcpi7, align 8, !dbg !10484
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10484
  %vcpi8 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 16, !dbg !10484
  %pbn9 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi8, i32 0, i32 1, !dbg !10484
  %9 = load i32, i32* %pbn9, align 4, !dbg !10484
  %10 = load i32, i32* %pbn.addr, align 4, !dbg !10484
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.30, i64 0, i64 0), i32 %7, i32 %9, i32 %10) #8, !dbg !10484
  %11 = load i32, i32* %pbn.addr, align 4, !dbg !10486
  %12 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10488
  %vcpi10 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %12, i32 0, i32 16, !dbg !10489
  %pbn11 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi10, i32 0, i32 1, !dbg !10490
  %13 = load i32, i32* %pbn11, align 4, !dbg !10490
  %cmp12 = icmp eq i32 %11, %13, !dbg !10491
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !10492

if.then13:                                        ; preds = %if.then5
  %14 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10493
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %14) #8, !dbg !10495
  store i1 true, i1* %retval, align 1, !dbg !10496
  br label %return, !dbg !10496

if.end14:                                         ; preds = %if.then5
  br label %if.end15, !dbg !10497

if.end15:                                         ; preds = %if.end14, %if.end2
  %15 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10498
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10499
  %vcpi16 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %16, i32 0, i32 16, !dbg !10500
  %17 = load i32, i32* %pbn.addr, align 4, !dbg !10501
  %18 = load i32, i32* %slots.addr, align 4, !dbg !10502
  %call17 = call i32 @drm_dp_init_vcpi(%struct.drm_dp_mst_topology_mgr* %15, %struct.drm_dp_vcpi* %vcpi16, i32 %17, i32 %18) #8, !dbg !10503
  store i32 %call17, i32* %ret, align 4, !dbg !10504
  %19 = load i32, i32* %ret, align 4, !dbg !10505
  %tobool18 = icmp ne i32 %19, 0, !dbg !10505
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !10507

if.then19:                                        ; preds = %if.end15
  %20 = load i32, i32* %pbn.addr, align 4, !dbg !10508
  %21 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10508
  %pbn_div = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %21, i32 0, i32 15, !dbg !10508
  %22 = load i32, i32* %pbn_div, align 8, !dbg !10508
  %add = add i32 %20, %22, !dbg !10508
  %sub = sub i32 %add, 1, !dbg !10508
  %23 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10508
  %pbn_div20 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %23, i32 0, i32 15, !dbg !10508
  %24 = load i32, i32* %pbn_div20, align 8, !dbg !10508
  %div = sdiv i32 %sub, %24, !dbg !10508
  %25 = load i32, i32* %ret, align 4, !dbg !10508
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i32 %div, i32 %25) #8, !dbg !10508
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10510
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %26) #8, !dbg !10511
  br label %out, !dbg !10512

if.end21:                                         ; preds = %if.end15
  %27 = load i32, i32* %pbn.addr, align 4, !dbg !10513
  %28 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10513
  %vcpi22 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %28, i32 0, i32 16, !dbg !10513
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi22, i32 0, i32 3, !dbg !10513
  %29 = load i32, i32* %num_slots, align 4, !dbg !10513
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.32, i64 0, i64 0), i32 %27, i32 %29) #8, !dbg !10513
  %30 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10514
  call void @drm_dp_mst_get_port_malloc(%struct.drm_dp_mst_port* %30) #8, !dbg !10515
  %31 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10516
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %31) #8, !dbg !10517
  store i1 true, i1* %retval, align 1, !dbg !10518
  br label %return, !dbg !10518

out:                                              ; preds = %if.then19
  call void @llvm.dbg.label(metadata !10519), !dbg !10520
  store i1 false, i1* %retval, align 1, !dbg !10521
  br label %return, !dbg !10521

return:                                           ; preds = %out, %if.end21, %if.then13, %if.then1, %if.then
  %32 = load i1, i1* %retval, align 1, !dbg !10522
  ret i1 %32, !dbg !10522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_init_vcpi(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_vcpi* %vcpi, i32 %pbn, i32 %slots) #0 !dbg !10523 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %vcpi.addr = alloca %struct.drm_dp_vcpi*, align 8
  %pbn.addr = alloca i32, align 4
  %slots.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10526, metadata !DIExpression()), !dbg !10527
  store %struct.drm_dp_vcpi* %vcpi, %struct.drm_dp_vcpi** %vcpi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi** %vcpi.addr, metadata !10528, metadata !DIExpression()), !dbg !10529
  store i32 %pbn, i32* %pbn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn.addr, metadata !10530, metadata !DIExpression()), !dbg !10531
  store i32 %slots, i32* %slots.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %slots.addr, metadata !10532, metadata !DIExpression()), !dbg !10533
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10534, metadata !DIExpression()), !dbg !10535
  %0 = load i32, i32* %slots.addr, align 4, !dbg !10536
  %cmp = icmp sgt i32 %0, 63, !dbg !10538
  br i1 %cmp, label %if.then, label %if.end, !dbg !10539

if.then:                                          ; preds = %entry
  store i32 -28, i32* %retval, align 4, !dbg !10540
  br label %return, !dbg !10540

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %pbn.addr, align 4, !dbg !10541
  %2 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi.addr, align 8, !dbg !10542
  %pbn1 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %2, i32 0, i32 1, !dbg !10543
  store i32 %1, i32* %pbn1, align 4, !dbg !10544
  %3 = load i32, i32* %slots.addr, align 4, !dbg !10545
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10546
  %pbn_div = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 15, !dbg !10547
  %5 = load i32, i32* %pbn_div, align 8, !dbg !10547
  %mul = mul i32 %3, %5, !dbg !10548
  %6 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi.addr, align 8, !dbg !10549
  %aligned_pbn = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %6, i32 0, i32 2, !dbg !10550
  store i32 %mul, i32* %aligned_pbn, align 4, !dbg !10551
  %7 = load i32, i32* %slots.addr, align 4, !dbg !10552
  %8 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi.addr, align 8, !dbg !10553
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %8, i32 0, i32 3, !dbg !10554
  store i32 %7, i32* %num_slots, align 4, !dbg !10555
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10556
  %10 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi.addr, align 8, !dbg !10557
  %call = call i32 @drm_dp_mst_assign_payload_id(%struct.drm_dp_mst_topology_mgr* %9, %struct.drm_dp_vcpi* %10) #8, !dbg !10558
  store i32 %call, i32* %ret, align 4, !dbg !10559
  %11 = load i32, i32* %ret, align 4, !dbg !10560
  %cmp2 = icmp slt i32 %11, 0, !dbg !10562
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !10563

if.then3:                                         ; preds = %if.end
  %12 = load i32, i32* %ret, align 4, !dbg !10564
  store i32 %12, i32* %retval, align 4, !dbg !10565
  br label %return, !dbg !10565

if.end4:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10566
  br label %return, !dbg !10566

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10567
  ret i32 %13, !dbg !10567
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_get_vcpi_slots(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !10568 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %slots = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10571, metadata !DIExpression()), !dbg !10572
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10573, metadata !DIExpression()), !dbg !10574
  call void @llvm.dbg.declare(metadata i32* %slots, metadata !10575, metadata !DIExpression()), !dbg !10576
  store i32 0, i32* %slots, align 4, !dbg !10576
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10577
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10578
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %0, %struct.drm_dp_mst_port* %1) #8, !dbg !10579
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10580
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10581
  %tobool = icmp ne %struct.drm_dp_mst_port* %2, null, !dbg !10581
  br i1 %tobool, label %if.end, label %if.then, !dbg !10583

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %slots, align 4, !dbg !10584
  store i32 %3, i32* %retval, align 4, !dbg !10585
  br label %return, !dbg !10585

if.end:                                           ; preds = %entry
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10586
  %vcpi = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %4, i32 0, i32 16, !dbg !10587
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi, i32 0, i32 3, !dbg !10588
  %5 = load i32, i32* %num_slots, align 4, !dbg !10588
  store i32 %5, i32* %slots, align 4, !dbg !10589
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10590
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %6) #8, !dbg !10591
  %7 = load i32, i32* %slots, align 4, !dbg !10592
  store i32 %7, i32* %retval, align 4, !dbg !10593
  br label %return, !dbg !10593

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10594
  ret i32 %8, !dbg !10594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_reset_vcpi_slots(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !10595 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10598, metadata !DIExpression()), !dbg !10599
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10600, metadata !DIExpression()), !dbg !10601
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10602
  %vcpi = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 16, !dbg !10603
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi, i32 0, i32 3, !dbg !10604
  store i32 0, i32* %num_slots, align 4, !dbg !10605
  ret void, !dbg !10606
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_deallocate_vcpi(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !10607 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10608, metadata !DIExpression()), !dbg !10609
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !10610, metadata !DIExpression()), !dbg !10611
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10612
  %vcpi = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 16, !dbg !10614
  %vcpi1 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi, i32 0, i32 0, !dbg !10615
  %1 = load i32, i32* %vcpi1, align 8, !dbg !10615
  %tobool = icmp ne i32 %1, 0, !dbg !10612
  br i1 %tobool, label %if.end, label %if.then, !dbg !10616

if.then:                                          ; preds = %entry
  br label %return, !dbg !10617

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10618
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10619
  %vcpi2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 16, !dbg !10620
  %vcpi3 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi2, i32 0, i32 0, !dbg !10621
  %4 = load i32, i32* %vcpi3, align 8, !dbg !10621
  call void @drm_dp_mst_put_payload_id(%struct.drm_dp_mst_topology_mgr* %2, i32 %4) #8, !dbg !10622
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10623
  %vcpi4 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 16, !dbg !10624
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi4, i32 0, i32 3, !dbg !10625
  store i32 0, i32* %num_slots, align 4, !dbg !10626
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10627
  %vcpi5 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 16, !dbg !10628
  %pbn = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi5, i32 0, i32 1, !dbg !10629
  store i32 0, i32* %pbn, align 4, !dbg !10630
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10631
  %vcpi6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 16, !dbg !10632
  %aligned_pbn = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi6, i32 0, i32 2, !dbg !10633
  store i32 0, i32* %aligned_pbn, align 8, !dbg !10634
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10635
  %vcpi7 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 16, !dbg !10636
  %vcpi8 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi7, i32 0, i32 0, !dbg !10637
  store i32 0, i32* %vcpi8, align 8, !dbg !10638
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !10639
  call void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %9) #8, !dbg !10640
  br label %return, !dbg !10641

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !10641
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_put_payload_id(%struct.drm_dp_mst_topology_mgr* %mgr, i32 %vcpi) #0 !dbg !10642 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %vcpi.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10645, metadata !DIExpression()), !dbg !10646
  store i32 %vcpi, i32* %vcpi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vcpi.addr, metadata !10647, metadata !DIExpression()), !dbg !10648
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10649, metadata !DIExpression()), !dbg !10650
  %0 = load i32, i32* %vcpi.addr, align 4, !dbg !10651
  %cmp = icmp eq i32 %0, 0, !dbg !10653
  br i1 %cmp, label %if.then, label %if.end, !dbg !10654

if.then:                                          ; preds = %entry
  br label %return, !dbg !10655

if.end:                                           ; preds = %entry
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10656
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 19, !dbg !10657
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !10658
  %2 = load i32, i32* %vcpi.addr, align 4, !dbg !10659
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.145, i64 0, i64 0), i32 %2) #8, !dbg !10659
  %3 = load i32, i32* %vcpi.addr, align 4, !dbg !10660
  %sub = sub i32 %3, 1, !dbg !10661
  %conv = sext i32 %sub to i64, !dbg !10660
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10662
  %vcpi_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 23, !dbg !10663
  call void @clear_bit(i64 %conv, i64* %vcpi_mask) #8, !dbg !10664
  store i32 0, i32* %i, align 4, !dbg !10665
  br label %for.cond, !dbg !10667

for.cond:                                         ; preds = %for.inc, %if.end
  %5 = load i32, i32* %i, align 4, !dbg !10668
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10670
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 5, !dbg !10671
  %7 = load i32, i32* %max_payloads, align 8, !dbg !10671
  %cmp1 = icmp slt i32 %5, %7, !dbg !10672
  br i1 %cmp1, label %for.body, label %for.end, !dbg !10673

for.body:                                         ; preds = %for.cond
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10674
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 20, !dbg !10677
  %9 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !10677
  %10 = load i32, i32* %i, align 4, !dbg !10678
  %idxprom = sext i32 %10 to i64, !dbg !10674
  %arrayidx = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %9, i64 %idxprom, !dbg !10674
  %11 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx, align 8, !dbg !10674
  %tobool = icmp ne %struct.drm_dp_vcpi* %11, null, !dbg !10674
  br i1 %tobool, label %land.lhs.true, label %if.end14, !dbg !10679

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10680
  %proposed_vcpis3 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %12, i32 0, i32 20, !dbg !10681
  %13 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis3, align 8, !dbg !10681
  %14 = load i32, i32* %i, align 4, !dbg !10682
  %idxprom4 = sext i32 %14 to i64, !dbg !10680
  %arrayidx5 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %13, i64 %idxprom4, !dbg !10680
  %15 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx5, align 8, !dbg !10680
  %vcpi6 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %15, i32 0, i32 0, !dbg !10683
  %16 = load i32, i32* %vcpi6, align 4, !dbg !10683
  %17 = load i32, i32* %vcpi.addr, align 4, !dbg !10684
  %cmp7 = icmp eq i32 %16, %17, !dbg !10685
  br i1 %cmp7, label %if.then9, label %if.end14, !dbg !10686

if.then9:                                         ; preds = %land.lhs.true
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10687
  %proposed_vcpis10 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 20, !dbg !10689
  %19 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis10, align 8, !dbg !10689
  %20 = load i32, i32* %i, align 4, !dbg !10690
  %idxprom11 = sext i32 %20 to i64, !dbg !10687
  %arrayidx12 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %19, i64 %idxprom11, !dbg !10687
  store %struct.drm_dp_vcpi* null, %struct.drm_dp_vcpi** %arrayidx12, align 8, !dbg !10691
  %21 = load i32, i32* %i, align 4, !dbg !10692
  %add = add i32 %21, 1, !dbg !10693
  %conv13 = sext i32 %add to i64, !dbg !10692
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10694
  %payload_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %22, i32 0, i32 22, !dbg !10695
  call void @clear_bit(i64 %conv13, i64* %payload_mask) #8, !dbg !10696
  br label %if.end14, !dbg !10697

if.end14:                                         ; preds = %if.then9, %land.lhs.true, %for.body
  br label %for.inc, !dbg !10698

for.inc:                                          ; preds = %if.end14
  %23 = load i32, i32* %i, align 4, !dbg !10699
  %inc = add i32 %23, 1, !dbg !10699
  store i32 %inc, i32* %i, align 4, !dbg !10699
  br label %for.cond, !dbg !10700, !llvm.loop !10701

for.end:                                          ; preds = %for.cond
  %24 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10703
  %payload_lock15 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %24, i32 0, i32 19, !dbg !10704
  call void @mutex_unlock(%struct.mutex* %payload_lock15) #8, !dbg !10705
  br label %return, !dbg !10706

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !10706
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_check_act_status(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !10707 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %timeout_ms = alloca i32, align 4
  %ret = alloca i32, align 4
  %status = alloca i32, align 4
  %__timeout_us = alloca i64, align 8
  %__sleep_us = alloca i64, align 8
  %__timeout = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10708, metadata !DIExpression()), !dbg !10709
  call void @llvm.dbg.declare(metadata i32* %timeout_ms, metadata !10710, metadata !DIExpression()), !dbg !10712
  store i32 3000, i32* %timeout_ms, align 4, !dbg !10712
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10713, metadata !DIExpression()), !dbg !10714
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10715, metadata !DIExpression()), !dbg !10716
  call void @llvm.dbg.declare(metadata i64* %__timeout_us, metadata !10717, metadata !DIExpression()), !dbg !10719
  store i64 3000000, i64* %__timeout_us, align 8, !dbg !10719
  call void @llvm.dbg.declare(metadata i64* %__sleep_us, metadata !10720, metadata !DIExpression()), !dbg !10719
  store i64 200, i64* %__sleep_us, align 8, !dbg !10719
  call void @llvm.dbg.declare(metadata i64* %__timeout, metadata !10721, metadata !DIExpression()), !dbg !10719
  %call = call i64 @ktime_get() #8, !dbg !10719
  %0 = load i64, i64* %__timeout_us, align 8, !dbg !10719
  %call1 = call i64 @ktime_add_us(i64 %call, i64 %0) #8, !dbg !10719
  store i64 %call1, i64* %__timeout, align 8, !dbg !10719
  br label %do.body, !dbg !10719

do.body:                                          ; preds = %entry
  %1 = load i64, i64* %__sleep_us, align 8, !dbg !10722
  %cmp = icmp ne i64 %1, 0, !dbg !10722
  br i1 %cmp, label %if.then, label %if.end, !dbg !10725

if.then:                                          ; preds = %do.body
  br label %do.body2, !dbg !10722

do.body2:                                         ; preds = %if.then
  br label %do.body3, !dbg !10726

do.body3:                                         ; preds = %do.body2
  br label %do.end, !dbg !10728

do.end:                                           ; preds = %do.body3
  br label %do.end4, !dbg !10726

do.end4:                                          ; preds = %do.end
  br label %if.end, !dbg !10726

if.end:                                           ; preds = %do.end4, %do.body
  br label %do.end5, !dbg !10725

do.end5:                                          ; preds = %if.end
  br label %for.cond, !dbg !10719

for.cond:                                         ; preds = %if.end20, %do.end5
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10730
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 4, !dbg !10730
  %3 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !10730
  %call6 = call i32 @do_get_act_status(%struct.drm_dp_aux* %3) #8, !dbg !10730
  store i32 %call6, i32* %status, align 4, !dbg !10730
  %4 = load i32, i32* %status, align 4, !dbg !10734
  %and = and i32 %4, 2, !dbg !10734
  %tobool = icmp ne i32 %and, 0, !dbg !10734
  br i1 %tobool, label %if.then8, label %lor.lhs.false, !dbg !10734

lor.lhs.false:                                    ; preds = %for.cond
  %5 = load i32, i32* %status, align 4, !dbg !10734
  %cmp7 = icmp slt i32 %5, 0, !dbg !10734
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !10730

if.then8:                                         ; preds = %lor.lhs.false, %for.cond
  br label %for.end, !dbg !10734

if.end9:                                          ; preds = %lor.lhs.false
  %6 = load i64, i64* %__timeout_us, align 8, !dbg !10736
  %tobool10 = icmp ne i64 %6, 0, !dbg !10736
  br i1 %tobool10, label %land.lhs.true, label %if.end17, !dbg !10736

land.lhs.true:                                    ; preds = %if.end9
  %call11 = call i64 @ktime_get() #8, !dbg !10736
  %7 = load i64, i64* %__timeout, align 8, !dbg !10736
  %call12 = call i32 @ktime_compare(i64 %call11, i64 %7) #8, !dbg !10736
  %cmp13 = icmp sgt i32 %call12, 0, !dbg !10736
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !10730

if.then14:                                        ; preds = %land.lhs.true
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10738
  %aux15 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 4, !dbg !10738
  %9 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux15, align 8, !dbg !10738
  %call16 = call i32 @do_get_act_status(%struct.drm_dp_aux* %9) #8, !dbg !10738
  store i32 %call16, i32* %status, align 4, !dbg !10738
  br label %for.end, !dbg !10738

if.end17:                                         ; preds = %land.lhs.true, %if.end9
  %10 = load i64, i64* %__sleep_us, align 8, !dbg !10740
  %tobool18 = icmp ne i64 %10, 0, !dbg !10740
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !10730

if.then19:                                        ; preds = %if.end17
  %11 = load i64, i64* %__sleep_us, align 8, !dbg !10740
  %shr = lshr i64 %11, 2, !dbg !10740
  %add = add i64 %shr, 1, !dbg !10740
  %12 = load i64, i64* %__sleep_us, align 8, !dbg !10740
  call void @usleep_range(i64 %add, i64 %12) #8, !dbg !10740
  br label %if.end20, !dbg !10740

if.end20:                                         ; preds = %if.then19, %if.end17
  br label %for.cond, !dbg !10742, !llvm.loop !10743

for.end:                                          ; preds = %if.then14, %if.then8
  %13 = load i32, i32* %status, align 4, !dbg !10719
  %and21 = and i32 %13, 2, !dbg !10719
  %tobool22 = icmp ne i32 %and21, 0, !dbg !10719
  br i1 %tobool22, label %lor.end, label %lor.rhs, !dbg !10719

lor.rhs:                                          ; preds = %for.end
  %14 = load i32, i32* %status, align 4, !dbg !10719
  %cmp23 = icmp slt i32 %14, 0, !dbg !10719
  br label %lor.end, !dbg !10719

lor.end:                                          ; preds = %lor.rhs, %for.end
  %15 = phi i1 [ true, %for.end ], [ %cmp23, %lor.rhs ]
  %16 = zext i1 %15 to i64, !dbg !10719
  %cond = select i1 %15, i32 0, i32 -110, !dbg !10719
  store i32 %cond, i32* %tmp, align 4, !dbg !10744
  %17 = load i32, i32* %tmp, align 4, !dbg !10719
  store i32 %17, i32* %ret, align 4, !dbg !10745
  %18 = load i32, i32* %ret, align 4, !dbg !10746
  %cmp24 = icmp slt i32 %18, 0, !dbg !10748
  br i1 %cmp24, label %land.lhs.true25, label %if.else, !dbg !10749

land.lhs.true25:                                  ; preds = %lor.end
  %19 = load i32, i32* %status, align 4, !dbg !10750
  %cmp26 = icmp sge i32 %19, 0, !dbg !10751
  br i1 %cmp26, label %if.then27, label %if.else, !dbg !10752

if.then27:                                        ; preds = %land.lhs.true25
  %20 = load i32, i32* %status, align 4, !dbg !10753
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.33, i64 0, i64 0), i32 3000, i32 %20) #8, !dbg !10753
  store i32 -22, i32* %retval, align 4, !dbg !10755
  br label %return, !dbg !10755

if.else:                                          ; preds = %land.lhs.true25, %lor.end
  %21 = load i32, i32* %status, align 4, !dbg !10756
  %cmp28 = icmp slt i32 %21, 0, !dbg !10758
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !10759

if.then29:                                        ; preds = %if.else
  %22 = load i32, i32* %status, align 4, !dbg !10760
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34, i64 0, i64 0), i32 %22) #8, !dbg !10760
  %23 = load i32, i32* %status, align 4, !dbg !10762
  store i32 %23, i32* %retval, align 4, !dbg !10763
  br label %return, !dbg !10763

if.end30:                                         ; preds = %if.else
  br label %if.end31

if.end31:                                         ; preds = %if.end30
  store i32 0, i32* %retval, align 4, !dbg !10764
  br label %return, !dbg !10764

return:                                           ; preds = %if.end31, %if.then29, %if.then27
  %24 = load i32, i32* %retval, align 4, !dbg !10765
  ret i32 %24, !dbg !10765
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @ktime_add_us(i64 %kt, i64 %usec) #0 !dbg !10766 {
entry:
  %kt.addr = alloca i64, align 8
  %usec.addr = alloca i64, align 8
  store i64 %kt, i64* %kt.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %kt.addr, metadata !10771, metadata !DIExpression()), !dbg !10772
  store i64 %usec, i64* %usec.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %usec.addr, metadata !10773, metadata !DIExpression()), !dbg !10774
  %0 = load i64, i64* %kt.addr, align 8, !dbg !10775
  %1 = load i64, i64* %usec.addr, align 8, !dbg !10775
  %mul = mul i64 %1, 1000, !dbg !10775
  %add = add i64 %0, %mul, !dbg !10775
  ret i64 %add, !dbg !10776
}

; Function Attrs: noredzone
declare dso_local i64 @ktime_get() #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @do_get_act_status(%struct.drm_dp_aux* %aux) #0 !dbg !10777 {
entry:
  %retval = alloca i32, align 4
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  %ret = alloca i32, align 4
  %status = alloca i8, align 1
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !10778, metadata !DIExpression()), !dbg !10779
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10780, metadata !DIExpression()), !dbg !10781
  call void @llvm.dbg.declare(metadata i8* %status, metadata !10782, metadata !DIExpression()), !dbg !10783
  %0 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux.addr, align 8, !dbg !10784
  %call = call i64 @drm_dp_dpcd_readb(%struct.drm_dp_aux* %0, i32 704, i8* %status) #8, !dbg !10785
  %conv = trunc i64 %call to i32, !dbg !10785
  store i32 %conv, i32* %ret, align 4, !dbg !10786
  %1 = load i32, i32* %ret, align 4, !dbg !10787
  %cmp = icmp slt i32 %1, 0, !dbg !10789
  br i1 %cmp, label %if.then, label %if.end, !dbg !10790

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %ret, align 4, !dbg !10791
  store i32 %2, i32* %retval, align 4, !dbg !10792
  br label %return, !dbg !10792

if.end:                                           ; preds = %entry
  %3 = load i8, i8* %status, align 1, !dbg !10793
  %conv2 = zext i8 %3 to i32, !dbg !10793
  store i32 %conv2, i32* %retval, align 4, !dbg !10794
  br label %return, !dbg !10794

return:                                           ; preds = %if.end, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !10795
  ret i32 %4, !dbg !10795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @ktime_compare(i64 %cmp1, i64 %cmp2) #0 !dbg !10796 {
entry:
  %retval = alloca i32, align 4
  %cmp1.addr = alloca i64, align 8
  %cmp2.addr = alloca i64, align 8
  store i64 %cmp1, i64* %cmp1.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp1.addr, metadata !10799, metadata !DIExpression()), !dbg !10800
  store i64 %cmp2, i64* %cmp2.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %cmp2.addr, metadata !10801, metadata !DIExpression()), !dbg !10802
  %0 = load i64, i64* %cmp1.addr, align 8, !dbg !10803
  %1 = load i64, i64* %cmp2.addr, align 8, !dbg !10805
  %cmp = icmp slt i64 %0, %1, !dbg !10806
  br i1 %cmp, label %if.then, label %if.end, !dbg !10807

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !10808
  br label %return, !dbg !10808

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %cmp1.addr, align 8, !dbg !10809
  %3 = load i64, i64* %cmp2.addr, align 8, !dbg !10811
  %cmp3 = icmp sgt i64 %2, %3, !dbg !10812
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !10813

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !10814
  br label %return, !dbg !10814

if.end5:                                          ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !10815
  br label %return, !dbg !10815

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %4 = load i32, i32* %retval, align 4, !dbg !10816
  ret i32 %4, !dbg !10816
}

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_calc_pbn_mode(i32 %clock, i32 %bpp, i1 zeroext %dsc) #0 !dbg !10817 {
entry:
  %retval = alloca i32, align 4
  %clock.addr = alloca i32, align 4
  %bpp.addr = alloca i32, align 4
  %dsc.addr = alloca i8, align 1
  %_tmp = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %tmp4 = alloca i64, align 8
  %_tmp6 = alloca i64, align 8
  %__base11 = alloca i32, align 4
  %__rem12 = alloca i32, align 4
  %tmp18 = alloca i32, align 4
  %tmp19 = alloca i64, align 8
  store i32 %clock, i32* %clock.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %clock.addr, metadata !10820, metadata !DIExpression()), !dbg !10821
  store i32 %bpp, i32* %bpp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bpp.addr, metadata !10822, metadata !DIExpression()), !dbg !10823
  %frombool = zext i1 %dsc to i8
  store i8 %frombool, i8* %dsc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dsc.addr, metadata !10824, metadata !DIExpression()), !dbg !10825
  %0 = load i8, i8* %dsc.addr, align 1, !dbg !10826
  %tobool = trunc i8 %0 to i1, !dbg !10826
  br i1 %tobool, label %if.then, label %if.end, !dbg !10828

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %_tmp, metadata !10829, metadata !DIExpression()), !dbg !10831
  %1 = load i32, i32* %clock.addr, align 4, !dbg !10831
  %2 = load i32, i32* %bpp.addr, align 4, !dbg !10831
  %div = sdiv i32 %2, 16, !dbg !10831
  %mul = mul i32 %1, %div, !dbg !10831
  %call = call i64 @mul_u32_u32(i32 %mul, i32 64384) #8, !dbg !10831
  %add = add i64 %call, 432000000, !dbg !10831
  %sub = sub i64 %add, 1, !dbg !10831
  store i64 %sub, i64* %_tmp, align 8, !dbg !10831
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !10832, metadata !DIExpression()), !dbg !10834
  store i32 432000000, i32* %__base, align 4, !dbg !10834
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !10835, metadata !DIExpression()), !dbg !10834
  %3 = load i64, i64* %_tmp, align 8, !dbg !10834
  %4 = load i32, i32* %__base, align 4, !dbg !10834
  %conv = zext i32 %4 to i64, !dbg !10834
  %rem = urem i64 %3, %conv, !dbg !10834
  %conv1 = trunc i64 %rem to i32, !dbg !10834
  store i32 %conv1, i32* %__rem, align 4, !dbg !10834
  %5 = load i64, i64* %_tmp, align 8, !dbg !10834
  %6 = load i32, i32* %__base, align 4, !dbg !10834
  %conv2 = zext i32 %6 to i64, !dbg !10834
  %div3 = udiv i64 %5, %conv2, !dbg !10834
  store i64 %div3, i64* %_tmp, align 8, !dbg !10834
  %7 = load i32, i32* %__rem, align 4, !dbg !10834
  store i32 %7, i32* %tmp, align 4, !dbg !10834
  %8 = load i32, i32* %tmp, align 4, !dbg !10834
  %9 = load i64, i64* %_tmp, align 8, !dbg !10831
  store i64 %9, i64* %tmp4, align 8, !dbg !10831
  %10 = load i64, i64* %tmp4, align 8, !dbg !10831
  %conv5 = trunc i64 %10 to i32, !dbg !10836
  store i32 %conv5, i32* %retval, align 4, !dbg !10837
  br label %return, !dbg !10837

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %_tmp6, metadata !10838, metadata !DIExpression()), !dbg !10840
  %11 = load i32, i32* %clock.addr, align 4, !dbg !10840
  %12 = load i32, i32* %bpp.addr, align 4, !dbg !10840
  %mul7 = mul i32 %11, %12, !dbg !10840
  %call8 = call i64 @mul_u32_u32(i32 %mul7, i32 64384) #8, !dbg !10840
  %add9 = add i64 %call8, 432000000, !dbg !10840
  %sub10 = sub i64 %add9, 1, !dbg !10840
  store i64 %sub10, i64* %_tmp6, align 8, !dbg !10840
  call void @llvm.dbg.declare(metadata i32* %__base11, metadata !10841, metadata !DIExpression()), !dbg !10843
  store i32 432000000, i32* %__base11, align 4, !dbg !10843
  call void @llvm.dbg.declare(metadata i32* %__rem12, metadata !10844, metadata !DIExpression()), !dbg !10843
  %13 = load i64, i64* %_tmp6, align 8, !dbg !10843
  %14 = load i32, i32* %__base11, align 4, !dbg !10843
  %conv13 = zext i32 %14 to i64, !dbg !10843
  %rem14 = urem i64 %13, %conv13, !dbg !10843
  %conv15 = trunc i64 %rem14 to i32, !dbg !10843
  store i32 %conv15, i32* %__rem12, align 4, !dbg !10843
  %15 = load i64, i64* %_tmp6, align 8, !dbg !10843
  %16 = load i32, i32* %__base11, align 4, !dbg !10843
  %conv16 = zext i32 %16 to i64, !dbg !10843
  %div17 = udiv i64 %15, %conv16, !dbg !10843
  store i64 %div17, i64* %_tmp6, align 8, !dbg !10843
  %17 = load i32, i32* %__rem12, align 4, !dbg !10843
  store i32 %17, i32* %tmp18, align 4, !dbg !10843
  %18 = load i32, i32* %tmp18, align 4, !dbg !10843
  %19 = load i64, i64* %_tmp6, align 8, !dbg !10840
  store i64 %19, i64* %tmp19, align 8, !dbg !10840
  %20 = load i64, i64* %tmp19, align 8, !dbg !10840
  %conv20 = trunc i64 %20 to i32, !dbg !10845
  store i32 %conv20, i32* %retval, align 4, !dbg !10846
  br label %return, !dbg !10846

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !10847
  ret i32 %21, !dbg !10847
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @mul_u32_u32(i32 %a, i32 %b) #0 !dbg !10848 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !10852, metadata !DIExpression()), !dbg !10853
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !10854, metadata !DIExpression()), !dbg !10855
  %0 = load i32, i32* %a.addr, align 4, !dbg !10856
  %conv = zext i32 %0 to i64, !dbg !10857
  %1 = load i32, i32* %b.addr, align 4, !dbg !10858
  %conv1 = zext i32 %1 to i64, !dbg !10858
  %mul = mul i64 %conv, %conv1, !dbg !10859
  ret i64 %mul, !dbg !10860
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_dump_topology(%struct.seq_file* %m, %struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !10861 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %i = alloca i32, align 4
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %name = alloca [14 x i8], align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %buf = alloca [64 x i8], align 16
  %ret = alloca i32, align 4
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !10864, metadata !DIExpression()), !dbg !10865
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !10866, metadata !DIExpression()), !dbg !10867
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10868, metadata !DIExpression()), !dbg !10869
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !10870, metadata !DIExpression()), !dbg !10871
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10872
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !10873
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !10874
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10875
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 12, !dbg !10877
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !10877
  %tobool = icmp ne %struct.drm_dp_mst_branch* %2, null, !dbg !10875
  br i1 %tobool, label %if.then, label %if.end, !dbg !10878

if.then:                                          ; preds = %entry
  %3 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10879
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10880
  %mst_primary1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 12, !dbg !10881
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary1, align 8, !dbg !10881
  call void @drm_dp_mst_dump_mstb(%struct.seq_file* %3, %struct.drm_dp_mst_branch* %5) #8, !dbg !10882
  br label %if.end, !dbg !10882

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10883
  %lock2 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 9, !dbg !10884
  call void @mutex_unlock(%struct.mutex* %lock2) #8, !dbg !10885
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10886
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 19, !dbg !10887
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !10888
  %8 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10889
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10890
  %payload_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 22, !dbg !10891
  %10 = load i64, i64* %payload_mask, align 8, !dbg !10891
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10892
  %vcpi_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %11, i32 0, i32 23, !dbg !10893
  %12 = load i64, i64* %vcpi_mask, align 8, !dbg !10893
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10894
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 5, !dbg !10895
  %14 = load i32, i32* %max_payloads, align 8, !dbg !10895
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.35, i64 0, i64 0), i64 %10, i64 %12, i32 %14) #8, !dbg !10896
  store i32 0, i32* %i, align 4, !dbg !10897
  br label %for.cond, !dbg !10899

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load i32, i32* %i, align 4, !dbg !10900
  %16 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10902
  %max_payloads3 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %16, i32 0, i32 5, !dbg !10903
  %17 = load i32, i32* %max_payloads3, align 8, !dbg !10903
  %cmp = icmp slt i32 %15, %17, !dbg !10904
  br i1 %cmp, label %for.body, label %for.end, !dbg !10905

for.body:                                         ; preds = %for.cond
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10906
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 20, !dbg !10909
  %19 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !10909
  %20 = load i32, i32* %i, align 4, !dbg !10910
  %idxprom = sext i32 %20 to i64, !dbg !10906
  %arrayidx = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %19, i64 %idxprom, !dbg !10906
  %21 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx, align 8, !dbg !10906
  %tobool4 = icmp ne %struct.drm_dp_vcpi* %21, null, !dbg !10906
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !10911

if.then5:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata [14 x i8]* %name, metadata !10912, metadata !DIExpression()), !dbg !10917
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10918, metadata !DIExpression()), !dbg !10920
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10920
  %proposed_vcpis6 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %22, i32 0, i32 20, !dbg !10920
  %23 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis6, align 8, !dbg !10920
  %24 = load i32, i32* %i, align 4, !dbg !10920
  %idxprom7 = sext i32 %24 to i64, !dbg !10920
  %arrayidx8 = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %23, i64 %idxprom7, !dbg !10920
  %25 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx8, align 8, !dbg !10920
  %26 = bitcast %struct.drm_dp_vcpi* %25 to i8*, !dbg !10920
  store i8* %26, i8** %__mptr, align 8, !dbg !10920
  br label %do.body, !dbg !10920

do.body:                                          ; preds = %if.then5
  br label %do.end, !dbg !10921

do.end:                                           ; preds = %do.body
  %27 = load i8*, i8** %__mptr, align 8, !dbg !10920
  %add.ptr = getelementptr i8, i8* %27, i64 -1240, !dbg !10920
  %28 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !10920
  store %struct.drm_dp_mst_port* %28, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !10921
  %29 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !10920
  store %struct.drm_dp_mst_port* %29, %struct.drm_dp_mst_port** %port, align 8, !dbg !10923
  %30 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10924
  %31 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !10925
  %arraydecay = getelementptr inbounds [14 x i8], [14 x i8]* %name, i64 0, i64 0, !dbg !10926
  call void @fetch_monitor_name(%struct.drm_dp_mst_topology_mgr* %30, %struct.drm_dp_mst_port* %31, i8* %arraydecay, i32 14) #8, !dbg !10927
  %32 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10928
  %33 = load i32, i32* %i, align 4, !dbg !10929
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !10930
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %34, i32 0, i32 2, !dbg !10931
  %35 = load i8, i8* %port_num, align 8, !dbg !10931
  %conv = zext i8 %35 to i32, !dbg !10930
  %36 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !10932
  %vcpi = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %36, i32 0, i32 16, !dbg !10933
  %vcpi9 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi, i32 0, i32 0, !dbg !10934
  %37 = load i32, i32* %vcpi9, align 8, !dbg !10934
  %38 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !10935
  %vcpi10 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %38, i32 0, i32 16, !dbg !10936
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %vcpi10, i32 0, i32 3, !dbg !10937
  %39 = load i32, i32* %num_slots, align 4, !dbg !10937
  %arraydecay11 = getelementptr inbounds [14 x i8], [14 x i8]* %name, i64 0, i64 0, !dbg !10938
  %40 = load i8, i8* %arraydecay11, align 1, !dbg !10938
  %conv12 = sext i8 %40 to i32, !dbg !10938
  %cmp13 = icmp ne i32 %conv12, 0, !dbg !10939
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !10940

cond.true:                                        ; preds = %do.end
  %arraydecay15 = getelementptr inbounds [14 x i8], [14 x i8]* %name, i64 0, i64 0, !dbg !10941
  br label %cond.end, !dbg !10940

cond.false:                                       ; preds = %do.end
  br label %cond.end, !dbg !10940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %arraydecay15, %cond.true ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.37, i64 0, i64 0), %cond.false ], !dbg !10940
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %32, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.36, i64 0, i64 0), i32 %33, i32 %conv, i32 %37, i32 %39, i8* %cond) #8, !dbg !10942
  br label %if.end16, !dbg !10943

if.else:                                          ; preds = %for.body
  %41 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10944
  %42 = load i32, i32* %i, align 4, !dbg !10945
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %41, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.38, i64 0, i64 0), i32 %42) #8, !dbg !10946
  br label %if.end16

if.end16:                                         ; preds = %if.else, %cond.end
  br label %for.inc, !dbg !10947

for.inc:                                          ; preds = %if.end16
  %43 = load i32, i32* %i, align 4, !dbg !10948
  %inc = add i32 %43, 1, !dbg !10948
  store i32 %inc, i32* %i, align 4, !dbg !10948
  br label %for.cond, !dbg !10949, !llvm.loop !10950

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !10952
  br label %for.cond17, !dbg !10954

for.cond17:                                       ; preds = %for.inc31, %for.end
  %44 = load i32, i32* %i, align 4, !dbg !10955
  %45 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10957
  %max_payloads18 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %45, i32 0, i32 5, !dbg !10958
  %46 = load i32, i32* %max_payloads18, align 8, !dbg !10958
  %cmp19 = icmp slt i32 %44, %46, !dbg !10959
  br i1 %cmp19, label %for.body21, label %for.end33, !dbg !10960

for.body21:                                       ; preds = %for.cond17
  %47 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !10961
  %48 = load i32, i32* %i, align 4, !dbg !10963
  %49 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10964
  %payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %49, i32 0, i32 21, !dbg !10965
  %50 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads, align 8, !dbg !10965
  %51 = load i32, i32* %i, align 4, !dbg !10966
  %idxprom22 = sext i32 %51 to i64, !dbg !10964
  %arrayidx23 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %50, i64 %idxprom22, !dbg !10964
  %payload_state = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %arrayidx23, i32 0, i32 0, !dbg !10967
  %52 = load i32, i32* %payload_state, align 4, !dbg !10967
  %53 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10968
  %payloads24 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %53, i32 0, i32 21, !dbg !10969
  %54 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads24, align 8, !dbg !10969
  %55 = load i32, i32* %i, align 4, !dbg !10970
  %idxprom25 = sext i32 %55 to i64, !dbg !10968
  %arrayidx26 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %54, i64 %idxprom25, !dbg !10968
  %start_slot = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %arrayidx26, i32 0, i32 1, !dbg !10971
  %56 = load i32, i32* %start_slot, align 4, !dbg !10971
  %57 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10972
  %payloads27 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %57, i32 0, i32 21, !dbg !10973
  %58 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads27, align 8, !dbg !10973
  %59 = load i32, i32* %i, align 4, !dbg !10974
  %idxprom28 = sext i32 %59 to i64, !dbg !10972
  %arrayidx29 = getelementptr %struct.drm_dp_payload, %struct.drm_dp_payload* %58, i64 %idxprom28, !dbg !10972
  %num_slots30 = getelementptr inbounds %struct.drm_dp_payload, %struct.drm_dp_payload* %arrayidx29, i32 0, i32 2, !dbg !10975
  %60 = load i32, i32* %num_slots30, align 4, !dbg !10975
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %47, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.39, i64 0, i64 0), i32 %48, i32 %52, i32 %56, i32 %60) #8, !dbg !10976
  br label %for.inc31, !dbg !10977

for.inc31:                                        ; preds = %for.body21
  %61 = load i32, i32* %i, align 4, !dbg !10978
  %inc32 = add i32 %61, 1, !dbg !10978
  store i32 %inc32, i32* %i, align 4, !dbg !10978
  br label %for.cond17, !dbg !10979, !llvm.loop !10980

for.end33:                                        ; preds = %for.cond17
  %62 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10982
  %payload_lock34 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %62, i32 0, i32 19, !dbg !10983
  call void @mutex_unlock(%struct.mutex* %payload_lock34) #8, !dbg !10984
  %63 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10985
  %lock35 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %63, i32 0, i32 9, !dbg !10986
  call void @mutex_lock(%struct.mutex* %lock35) #8, !dbg !10987
  %64 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10988
  %mst_primary36 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %64, i32 0, i32 12, !dbg !10990
  %65 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary36, align 8, !dbg !10990
  %tobool37 = icmp ne %struct.drm_dp_mst_branch* %65, null, !dbg !10988
  br i1 %tobool37, label %if.then38, label %if.end96, !dbg !10991

if.then38:                                        ; preds = %for.end33
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !10992, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10996, metadata !DIExpression()), !dbg !10997
  %66 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !10998
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %66, i32 0, i32 4, !dbg !10999
  %67 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !10999
  %arraydecay39 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11000
  %call = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %67, i32 0, i8* %arraydecay39, i64 15) #8, !dbg !11001
  %conv40 = trunc i64 %call to i32, !dbg !11001
  store i32 %conv40, i32* %ret, align 4, !dbg !11002
  %68 = load i32, i32* %ret, align 4, !dbg !11003
  %tobool41 = icmp ne i32 %68, 0, !dbg !11003
  br i1 %tobool41, label %if.then42, label %if.end43, !dbg !11005

if.then42:                                        ; preds = %if.then38
  %69 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11006
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %69, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.40, i64 0, i64 0)) #8, !dbg !11008
  br label %out, !dbg !11009

if.end43:                                         ; preds = %if.then38
  %70 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11010
  %arraydecay44 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11011
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %70, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i32 15, i8* %arraydecay44) #8, !dbg !11012
  %71 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11013
  %aux45 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %71, i32 0, i32 4, !dbg !11014
  %72 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux45, align 8, !dbg !11014
  %arraydecay46 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11015
  %call47 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %72, i32 32, i8* %arraydecay46, i64 2) #8, !dbg !11016
  %conv48 = trunc i64 %call47 to i32, !dbg !11016
  store i32 %conv48, i32* %ret, align 4, !dbg !11017
  %73 = load i32, i32* %ret, align 4, !dbg !11018
  %tobool49 = icmp ne i32 %73, 0, !dbg !11018
  br i1 %tobool49, label %if.then50, label %if.end51, !dbg !11020

if.then50:                                        ; preds = %if.end43
  %74 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11021
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %74, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.42, i64 0, i64 0)) #8, !dbg !11023
  br label %out, !dbg !11024

if.end51:                                         ; preds = %if.end43
  %75 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11025
  %arraydecay52 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11026
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %75, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.43, i64 0, i64 0), i32 2, i8* %arraydecay52) #8, !dbg !11027
  %76 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11028
  %aux53 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %76, i32 0, i32 4, !dbg !11029
  %77 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux53, align 8, !dbg !11029
  %arraydecay54 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11030
  %call55 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %77, i32 273, i8* %arraydecay54, i64 1) #8, !dbg !11031
  %conv56 = trunc i64 %call55 to i32, !dbg !11031
  store i32 %conv56, i32* %ret, align 4, !dbg !11032
  %78 = load i32, i32* %ret, align 4, !dbg !11033
  %tobool57 = icmp ne i32 %78, 0, !dbg !11033
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !11035

if.then58:                                        ; preds = %if.end51
  %79 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11036
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %79, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.44, i64 0, i64 0)) #8, !dbg !11038
  br label %out, !dbg !11039

if.end59:                                         ; preds = %if.end51
  %80 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11040
  %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11041
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %80, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.45, i64 0, i64 0), i32 1, i8* %arraydecay60) #8, !dbg !11042
  %81 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11043
  %aux61 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %81, i32 0, i32 4, !dbg !11044
  %82 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux61, align 8, !dbg !11044
  %arraydecay62 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11045
  %call63 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %82, i32 1280, i8* %arraydecay62, i64 12) #8, !dbg !11046
  %conv64 = trunc i64 %call63 to i32, !dbg !11046
  store i32 %conv64, i32* %ret, align 4, !dbg !11047
  %83 = load i32, i32* %ret, align 4, !dbg !11048
  %tobool65 = icmp ne i32 %83, 0, !dbg !11048
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !11050

if.then66:                                        ; preds = %if.end59
  %84 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11051
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %84, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.46, i64 0, i64 0)) #8, !dbg !11053
  br label %out, !dbg !11054

if.end67:                                         ; preds = %if.end59
  %85 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11055
  %arraydecay68 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11056
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %85, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.47, i64 0, i64 0), i32 3, i8* %arraydecay68) #8, !dbg !11057
  store i32 3, i32* %i, align 4, !dbg !11058
  br label %for.cond69, !dbg !11060

for.cond69:                                       ; preds = %for.inc80, %if.end67
  %86 = load i32, i32* %i, align 4, !dbg !11061
  %cmp70 = icmp slt i32 %86, 8, !dbg !11063
  br i1 %cmp70, label %land.rhs, label %land.end, !dbg !11064

land.rhs:                                         ; preds = %for.cond69
  %87 = load i32, i32* %i, align 4, !dbg !11065
  %idxprom72 = sext i32 %87 to i64, !dbg !11066
  %arrayidx73 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 %idxprom72, !dbg !11066
  %88 = load i8, i8* %arrayidx73, align 1, !dbg !11066
  %conv74 = zext i8 %88 to i32, !dbg !11066
  %tobool75 = icmp ne i32 %conv74, 0, !dbg !11064
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond69
  %89 = phi i1 [ false, %for.cond69 ], [ %tobool75, %land.rhs ], !dbg !11067
  br i1 %89, label %for.body76, label %for.end82, !dbg !11068

for.body76:                                       ; preds = %land.end
  %90 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11069
  %91 = load i32, i32* %i, align 4, !dbg !11070
  %idxprom77 = sext i32 %91 to i64, !dbg !11071
  %arrayidx78 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 %idxprom77, !dbg !11071
  %92 = load i8, i8* %arrayidx78, align 1, !dbg !11071
  %conv79 = zext i8 %92 to i32, !dbg !11071
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %90, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i64 0, i64 0), i32 %conv79) #8, !dbg !11072
  br label %for.inc80, !dbg !11072

for.inc80:                                        ; preds = %for.body76
  %93 = load i32, i32* %i, align 4, !dbg !11073
  %inc81 = add i32 %93, 1, !dbg !11073
  store i32 %inc81, i32* %i, align 4, !dbg !11073
  br label %for.cond69, !dbg !11074, !llvm.loop !11075

for.end82:                                        ; preds = %land.end
  %94 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11077
  %arrayidx83 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 9, !dbg !11078
  %95 = load i8, i8* %arrayidx83, align 1, !dbg !11078
  %conv84 = zext i8 %95 to i32, !dbg !11078
  %shr = ashr i32 %conv84, 4, !dbg !11079
  %arrayidx85 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 9, !dbg !11080
  %96 = load i8, i8* %arrayidx85, align 1, !dbg !11080
  %conv86 = zext i8 %96 to i32, !dbg !11080
  %and = and i32 %conv86, 15, !dbg !11081
  %arrayidx87 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 10, !dbg !11082
  %97 = load i8, i8* %arrayidx87, align 2, !dbg !11082
  %conv88 = zext i8 %97 to i32, !dbg !11082
  %arrayidx89 = getelementptr [64 x i8], [64 x i8]* %buf, i64 0, i64 11, !dbg !11083
  %98 = load i8, i8* %arrayidx89, align 1, !dbg !11083
  %conv90 = zext i8 %98 to i32, !dbg !11083
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %94, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.49, i64 0, i64 0), i32 %shr, i32 %and, i32 %conv88, i32 %conv90) #8, !dbg !11084
  %99 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11085
  %arraydecay91 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11087
  %call92 = call zeroext i1 @dump_dp_payload_table(%struct.drm_dp_mst_topology_mgr* %99, i8* %arraydecay91) #8, !dbg !11088
  br i1 %call92, label %if.then93, label %if.end95, !dbg !11089

if.then93:                                        ; preds = %for.end82
  %100 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11090
  %arraydecay94 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !11091
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %100, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.50, i64 0, i64 0), i32 64, i8* %arraydecay94) #8, !dbg !11092
  br label %if.end95, !dbg !11092

if.end95:                                         ; preds = %if.then93, %for.end82
  br label %if.end96, !dbg !11093

if.end96:                                         ; preds = %if.end95, %for.end33
  br label %out, !dbg !10990

out:                                              ; preds = %if.end96, %if.then66, %if.then58, %if.then50, %if.then42
  call void @llvm.dbg.label(metadata !11094), !dbg !11095
  %101 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11096
  %lock97 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %101, i32 0, i32 9, !dbg !11097
  call void @mutex_unlock(%struct.mutex* %lock97) #8, !dbg !11098
  ret void, !dbg !11099
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_dump_mstb(%struct.seq_file* %m, %struct.drm_dp_mst_branch* %mstb) #0 !dbg !11100 {
entry:
  %m.addr = alloca %struct.seq_file*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %tabs = alloca i32, align 4
  %prefix = alloca [10 x i8], align 1
  %i = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr24 = alloca i8*, align 8
  %tmp29 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.seq_file* %m, %struct.seq_file** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.seq_file** %m.addr, metadata !11103, metadata !DIExpression()), !dbg !11104
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !11105, metadata !DIExpression()), !dbg !11106
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !11107, metadata !DIExpression()), !dbg !11108
  call void @llvm.dbg.declare(metadata i32* %tabs, metadata !11109, metadata !DIExpression()), !dbg !11110
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11111
  %lct = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 4, !dbg !11112
  %1 = load i8, i8* %lct, align 8, !dbg !11112
  %conv = zext i8 %1 to i32, !dbg !11111
  store i32 %conv, i32* %tabs, align 4, !dbg !11110
  call void @llvm.dbg.declare(metadata [10 x i8]* %prefix, metadata !11113, metadata !DIExpression()), !dbg !11115
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11116, metadata !DIExpression()), !dbg !11117
  store i32 0, i32* %i, align 4, !dbg !11118
  br label %for.cond, !dbg !11120

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load i32, i32* %i, align 4, !dbg !11121
  %3 = load i32, i32* %tabs, align 4, !dbg !11123
  %cmp = icmp slt i32 %2, %3, !dbg !11124
  br i1 %cmp, label %for.body, label %for.end, !dbg !11125

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %i, align 4, !dbg !11126
  %idxprom = sext i32 %4 to i64, !dbg !11127
  %arrayidx = getelementptr [10 x i8], [10 x i8]* %prefix, i64 0, i64 %idxprom, !dbg !11127
  store i8 9, i8* %arrayidx, align 1, !dbg !11128
  br label %for.inc, !dbg !11127

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !11129
  %inc = add i32 %5, 1, !dbg !11129
  store i32 %inc, i32* %i, align 4, !dbg !11129
  br label %for.cond, !dbg !11130, !llvm.loop !11131

for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* %i, align 4, !dbg !11133
  %idxprom2 = sext i32 %6 to i64, !dbg !11134
  %arrayidx3 = getelementptr [10 x i8], [10 x i8]* %prefix, i64 0, i64 %idxprom2, !dbg !11134
  store i8 0, i8* %arrayidx3, align 1, !dbg !11135
  %7 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11136
  %arraydecay = getelementptr inbounds [10 x i8], [10 x i8]* %prefix, i64 0, i64 0, !dbg !11137
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11138
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11139
  %num_ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %9, i32 0, i32 5, !dbg !11140
  %10 = load i32, i32* %num_ports, align 4, !dbg !11140
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %7, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.149, i64 0, i64 0), i8* %arraydecay, %struct.drm_dp_mst_branch* %8, i32 %10) #8, !dbg !11141
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11142, metadata !DIExpression()), !dbg !11145
  %11 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11145
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %11, i32 0, i32 6, !dbg !11145
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !11145
  %12 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11145
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !11145
  store i8* %13, i8** %__mptr, align 8, !dbg !11145
  br label %do.body, !dbg !11145

do.body:                                          ; preds = %for.end
  br label %do.end, !dbg !11146

do.end:                                           ; preds = %do.body
  %14 = load i8*, i8** %__mptr, align 8, !dbg !11145
  %add.ptr = getelementptr i8, i8* %14, i64 -24, !dbg !11145
  %15 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !11145
  store %struct.drm_dp_mst_port* %15, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !11146
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !11145
  store %struct.drm_dp_mst_port* %16, %struct.drm_dp_mst_port** %port, align 8, !dbg !11148
  br label %for.cond4, !dbg !11148

for.cond4:                                        ; preds = %do.end28, %do.end
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11149
  %next5 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %17, i32 0, i32 12, !dbg !11149
  %18 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11149
  %ports6 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %18, i32 0, i32 6, !dbg !11149
  %cmp7 = icmp eq %struct.list_head* %next5, %ports6, !dbg !11149
  %lnot = xor i1 %cmp7, true, !dbg !11149
  br i1 %lnot, label %for.body9, label %for.end31, !dbg !11148

for.body9:                                        ; preds = %for.cond4
  %19 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11151
  %arraydecay10 = getelementptr inbounds [10 x i8], [10 x i8]* %prefix, i64 0, i64 0, !dbg !11153
  %20 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11154
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %20, i32 0, i32 2, !dbg !11155
  %21 = load i8, i8* %port_num, align 8, !dbg !11155
  %conv11 = zext i8 %21 to i32, !dbg !11154
  %22 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11156
  %input = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %22, i32 0, i32 3, !dbg !11157
  %23 = load i8, i8* %input, align 1, !dbg !11157
  %tobool = trunc i8 %23 to i1, !dbg !11157
  %conv12 = zext i1 %tobool to i32, !dbg !11156
  %24 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11158
  %pdt = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %24, i32 0, i32 6, !dbg !11159
  %25 = load i8, i8* %pdt, align 4, !dbg !11159
  %conv13 = zext i8 %25 to i32, !dbg !11158
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11160
  %ddps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %26, i32 0, i32 5, !dbg !11161
  %27 = load i8, i8* %ddps, align 1, !dbg !11161
  %tobool14 = trunc i8 %27 to i1, !dbg !11161
  %conv15 = zext i1 %tobool14 to i32, !dbg !11160
  %28 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11162
  %ldps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %28, i32 0, i32 7, !dbg !11163
  %29 = load i8, i8* %ldps, align 1, !dbg !11163
  %tobool16 = trunc i8 %29 to i1, !dbg !11163
  %conv17 = zext i1 %tobool16 to i32, !dbg !11162
  %30 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11164
  %num_sdp_streams = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %30, i32 0, i32 9, !dbg !11165
  %31 = load i8, i8* %num_sdp_streams, align 1, !dbg !11165
  %conv18 = zext i8 %31 to i32, !dbg !11164
  %32 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11166
  %num_sdp_stream_sinks = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %32, i32 0, i32 10, !dbg !11167
  %33 = load i8, i8* %num_sdp_stream_sinks, align 8, !dbg !11167
  %conv19 = zext i8 %33 to i32, !dbg !11166
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11168
  %35 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11169
  %connector = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %35, i32 0, i32 17, !dbg !11170
  %36 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !11170
  call void (%struct.seq_file*, i8*, ...) @seq_printf(%struct.seq_file* %19, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.150, i64 0, i64 0), i8* %arraydecay10, i32 %conv11, i32 %conv12, i32 %conv13, i32 %conv15, i32 %conv17, i32 %conv18, i32 %conv19, %struct.drm_dp_mst_port* %34, %struct.drm_connector* %36) #8, !dbg !11171
  %37 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11172
  %mstb20 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %37, i32 0, i32 13, !dbg !11174
  %38 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb20, align 8, !dbg !11174
  %tobool21 = icmp ne %struct.drm_dp_mst_branch* %38, null, !dbg !11172
  br i1 %tobool21, label %if.then, label %if.end, !dbg !11175

if.then:                                          ; preds = %for.body9
  %39 = load %struct.seq_file*, %struct.seq_file** %m.addr, align 8, !dbg !11176
  %40 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11177
  %mstb22 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %40, i32 0, i32 13, !dbg !11178
  %41 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb22, align 8, !dbg !11178
  call void @drm_dp_mst_dump_mstb(%struct.seq_file* %39, %struct.drm_dp_mst_branch* %41) #8, !dbg !11179
  br label %if.end, !dbg !11179

if.end:                                           ; preds = %if.then, %for.body9
  br label %for.inc23, !dbg !11180

for.inc23:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr24, metadata !11181, metadata !DIExpression()), !dbg !11183
  %42 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11183
  %next25 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %42, i32 0, i32 12, !dbg !11183
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %next25, i32 0, i32 0, !dbg !11183
  %43 = load %struct.list_head*, %struct.list_head** %next26, align 8, !dbg !11183
  %44 = bitcast %struct.list_head* %43 to i8*, !dbg !11183
  store i8* %44, i8** %__mptr24, align 8, !dbg !11183
  br label %do.body27, !dbg !11183

do.body27:                                        ; preds = %for.inc23
  br label %do.end28, !dbg !11184

do.end28:                                         ; preds = %do.body27
  %45 = load i8*, i8** %__mptr24, align 8, !dbg !11183
  %add.ptr30 = getelementptr i8, i8* %45, i64 -24, !dbg !11183
  %46 = bitcast i8* %add.ptr30 to %struct.drm_dp_mst_port*, !dbg !11183
  store %struct.drm_dp_mst_port* %46, %struct.drm_dp_mst_port** %tmp29, align 8, !dbg !11184
  %47 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp29, align 8, !dbg !11183
  store %struct.drm_dp_mst_port* %47, %struct.drm_dp_mst_port** %port, align 8, !dbg !11149
  br label %for.cond4, !dbg !11149, !llvm.loop !11186

for.end31:                                        ; preds = %for.cond4
  ret void, !dbg !11188
}

; Function Attrs: noredzone
declare dso_local void @seq_printf(%struct.seq_file*, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @fetch_monitor_name(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i8* %name, i32 %namelen) #0 !dbg !11189 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %name.addr = alloca i8*, align 8
  %namelen.addr = alloca i32, align 4
  %mst_edid = alloca %struct.edid*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !11192, metadata !DIExpression()), !dbg !11193
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !11194, metadata !DIExpression()), !dbg !11195
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !11196, metadata !DIExpression()), !dbg !11197
  store i32 %namelen, i32* %namelen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %namelen.addr, metadata !11198, metadata !DIExpression()), !dbg !11199
  call void @llvm.dbg.declare(metadata %struct.edid** %mst_edid, metadata !11200, metadata !DIExpression()), !dbg !11201
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11202
  %connector = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 17, !dbg !11203
  %1 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !11203
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11204
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11205
  %call = call %struct.edid* @drm_dp_mst_get_edid(%struct.drm_connector* %1, %struct.drm_dp_mst_topology_mgr* %2, %struct.drm_dp_mst_port* %3) #8, !dbg !11206
  store %struct.edid* %call, %struct.edid** %mst_edid, align 8, !dbg !11207
  %4 = load %struct.edid*, %struct.edid** %mst_edid, align 8, !dbg !11208
  %5 = load i8*, i8** %name.addr, align 8, !dbg !11209
  %6 = load i32, i32* %namelen.addr, align 4, !dbg !11210
  call void @drm_edid_get_monitor_name(%struct.edid* %4, i8* %5, i32 %6) #8, !dbg !11211
  ret void, !dbg !11212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @dump_dp_payload_table(%struct.drm_dp_mst_topology_mgr* %mgr, i8* %buf) #0 !dbg !11213 {
entry:
  %retval = alloca i1, align 1
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %buf.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !11216, metadata !DIExpression()), !dbg !11217
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !11218, metadata !DIExpression()), !dbg !11219
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11220, metadata !DIExpression()), !dbg !11221
  store i32 0, i32* %i, align 4, !dbg !11222
  br label %for.cond, !dbg !11224

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11225
  %cmp = icmp slt i32 %0, 64, !dbg !11227
  br i1 %cmp, label %for.body, label %for.end, !dbg !11228

for.body:                                         ; preds = %for.cond
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11229
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 4, !dbg !11232
  %2 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !11232
  %3 = load i32, i32* %i, align 4, !dbg !11233
  %add = add i32 704, %3, !dbg !11234
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !11235
  %5 = load i32, i32* %i, align 4, !dbg !11236
  %idxprom = sext i32 %5 to i64, !dbg !11235
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !11235
  %call = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %2, i32 %add, i8* %arrayidx, i64 16) #8, !dbg !11237
  %cmp1 = icmp ne i64 %call, 16, !dbg !11238
  br i1 %cmp1, label %if.then, label %if.end, !dbg !11239

if.then:                                          ; preds = %for.body
  store i1 false, i1* %retval, align 1, !dbg !11240
  br label %return, !dbg !11240

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !11241

for.inc:                                          ; preds = %if.end
  %6 = load i32, i32* %i, align 4, !dbg !11242
  %add2 = add i32 %6, 16, !dbg !11242
  store i32 %add2, i32* %i, align 4, !dbg !11242
  br label %for.cond, !dbg !11243, !llvm.loop !11244

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !11246
  br label %return, !dbg !11246

return:                                           ; preds = %for.end, %if.then
  %7 = load i1, i1* %retval, align 1, !dbg !11247
  ret i1 %7, !dbg !11247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_add_affected_dsc_crtcs(%struct.drm_atomic_state* %state, %struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !11248 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mst_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %pos = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %connector = alloca %struct.drm_connector*, align 8
  %conn_state = alloca %struct.drm_connector_state*, align 8
  %crtc = alloca %struct.drm_crtc*, align 8
  %crtc_state = alloca %struct.drm_crtc_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp33 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !11251, metadata !DIExpression()), !dbg !11252
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !11253, metadata !DIExpression()), !dbg !11254
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %mst_state, metadata !11255, metadata !DIExpression()), !dbg !11256
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %pos, metadata !11257, metadata !DIExpression()), !dbg !11258
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector, metadata !11259, metadata !DIExpression()), !dbg !11260
  call void @llvm.dbg.declare(metadata %struct.drm_connector_state** %conn_state, metadata !11261, metadata !DIExpression()), !dbg !11262
  call void @llvm.dbg.declare(metadata %struct.drm_crtc** %crtc, metadata !11263, metadata !DIExpression()), !dbg !11264
  call void @llvm.dbg.declare(metadata %struct.drm_crtc_state** %crtc_state, metadata !11265, metadata !DIExpression()), !dbg !11266
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11267
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11268
  %call = call %struct.drm_dp_mst_topology_state* @drm_atomic_get_mst_topology_state(%struct.drm_atomic_state* %0, %struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !11269
  store %struct.drm_dp_mst_topology_state* %call, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11270
  %2 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11271
  %3 = bitcast %struct.drm_dp_mst_topology_state* %2 to i8*, !dbg !11271
  %call1 = call zeroext i1 @IS_ERR(i8* %3) #8, !dbg !11273
  br i1 %call1, label %if.then, label %if.end, !dbg !11274

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !11275
  br label %return, !dbg !11275

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11276, metadata !DIExpression()), !dbg !11279
  %4 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11279
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %4, i32 0, i32 1, !dbg !11279
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !11279
  %5 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11279
  %6 = bitcast %struct.list_head* %5 to i8*, !dbg !11279
  store i8* %6, i8** %__mptr, align 8, !dbg !11279
  br label %do.body, !dbg !11279

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11280

do.end:                                           ; preds = %do.body
  %7 = load i8*, i8** %__mptr, align 8, !dbg !11279
  %add.ptr = getelementptr i8, i8* %7, i64 -24, !dbg !11279
  %8 = bitcast i8* %add.ptr to %struct.drm_dp_vcpi_allocation*, !dbg !11279
  store %struct.drm_dp_vcpi_allocation* %8, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11280
  %9 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11279
  store %struct.drm_dp_vcpi_allocation* %9, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11282
  br label %for.cond, !dbg !11282

for.cond:                                         ; preds = %do.end32, %do.end
  %10 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11283
  %next2 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %10, i32 0, i32 4, !dbg !11283
  %11 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11283
  %vcpis3 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %11, i32 0, i32 1, !dbg !11283
  %cmp = icmp eq %struct.list_head* %next2, %vcpis3, !dbg !11283
  %lnot = xor i1 %cmp, true, !dbg !11283
  br i1 %lnot, label %for.body, label %for.end, !dbg !11282

for.body:                                         ; preds = %for.cond
  %12 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11285
  %port = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %12, i32 0, i32 0, !dbg !11287
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11287
  %connector4 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 17, !dbg !11288
  %14 = load %struct.drm_connector*, %struct.drm_connector** %connector4, align 8, !dbg !11288
  store %struct.drm_connector* %14, %struct.drm_connector** %connector, align 8, !dbg !11289
  %15 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !11290
  %tobool = icmp ne %struct.drm_connector* %15, null, !dbg !11290
  br i1 %tobool, label %if.end6, label %if.then5, !dbg !11292

if.then5:                                         ; preds = %for.body
  store i32 -22, i32* %retval, align 4, !dbg !11293
  br label %return, !dbg !11293

if.end6:                                          ; preds = %for.body
  %16 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11294
  %17 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !11295
  %call7 = call %struct.drm_connector_state* @drm_atomic_get_connector_state(%struct.drm_atomic_state* %16, %struct.drm_connector* %17) #8, !dbg !11296
  store %struct.drm_connector_state* %call7, %struct.drm_connector_state** %conn_state, align 8, !dbg !11297
  %18 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !11298
  %19 = bitcast %struct.drm_connector_state* %18 to i8*, !dbg !11298
  %call8 = call zeroext i1 @IS_ERR(i8* %19) #8, !dbg !11300
  br i1 %call8, label %if.then9, label %if.end11, !dbg !11301

if.then9:                                         ; preds = %if.end6
  %20 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !11302
  %21 = bitcast %struct.drm_connector_state* %20 to i8*, !dbg !11302
  %call10 = call i64 @PTR_ERR(i8* %21) #8, !dbg !11303
  %conv = trunc i64 %call10 to i32, !dbg !11303
  store i32 %conv, i32* %retval, align 4, !dbg !11304
  br label %return, !dbg !11304

if.end11:                                         ; preds = %if.end6
  %22 = load %struct.drm_connector_state*, %struct.drm_connector_state** %conn_state, align 8, !dbg !11305
  %crtc12 = getelementptr inbounds %struct.drm_connector_state, %struct.drm_connector_state* %22, i32 0, i32 1, !dbg !11306
  %23 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc12, align 8, !dbg !11306
  store %struct.drm_crtc* %23, %struct.drm_crtc** %crtc, align 8, !dbg !11307
  %24 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11308
  %tobool13 = icmp ne %struct.drm_crtc* %24, null, !dbg !11308
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !11310

if.then14:                                        ; preds = %if.end11
  br label %for.inc, !dbg !11311

if.end15:                                         ; preds = %if.end11
  %25 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11312
  %port16 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %25, i32 0, i32 0, !dbg !11314
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port16, align 8, !dbg !11314
  %call17 = call %struct.drm_dp_aux* @drm_dp_mst_dsc_aux_for_port(%struct.drm_dp_mst_port* %26) #8, !dbg !11315
  %tobool18 = icmp ne %struct.drm_dp_aux* %call17, null, !dbg !11315
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !11316

if.then19:                                        ; preds = %if.end15
  br label %for.inc, !dbg !11317

if.end20:                                         ; preds = %if.end15
  %27 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11318
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %27, i32 0, i32 0, !dbg !11319
  %state21 = getelementptr inbounds %struct.drm_private_state, %struct.drm_private_state* %base, i32 0, i32 0, !dbg !11320
  %28 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state21, align 8, !dbg !11320
  %29 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11321
  %call22 = call %struct.drm_crtc_state* @drm_atomic_get_crtc_state(%struct.drm_atomic_state* %28, %struct.drm_crtc* %29) #8, !dbg !11322
  store %struct.drm_crtc_state* %call22, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11323
  %30 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11324
  %31 = bitcast %struct.drm_crtc_state* %30 to i8*, !dbg !11324
  %call23 = call zeroext i1 @IS_ERR(i8* %31) #8, !dbg !11326
  br i1 %call23, label %if.then24, label %if.end27, !dbg !11327

if.then24:                                        ; preds = %if.end20
  %32 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11328
  %33 = bitcast %struct.drm_crtc_state* %32 to i8*, !dbg !11328
  %call25 = call i64 @PTR_ERR(i8* %33) #8, !dbg !11329
  %conv26 = trunc i64 %call25 to i32, !dbg !11329
  store i32 %conv26, i32* %retval, align 4, !dbg !11330
  br label %return, !dbg !11330

if.end27:                                         ; preds = %if.end20
  %34 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11331
  %35 = load %struct.drm_crtc*, %struct.drm_crtc** %crtc, align 8, !dbg !11331
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.51, i64 0, i64 0), %struct.drm_dp_mst_topology_mgr* %34, %struct.drm_crtc* %35) #8, !dbg !11331
  %36 = load %struct.drm_crtc_state*, %struct.drm_crtc_state** %crtc_state, align 8, !dbg !11332
  %mode_changed = getelementptr inbounds %struct.drm_crtc_state, %struct.drm_crtc_state* %36, i32 0, i32 3, !dbg !11333
  %bf.load = load i8, i8* %mode_changed, align 2, !dbg !11334
  %bf.clear = and i8 %bf.load, -3, !dbg !11334
  %bf.set = or i8 %bf.clear, 2, !dbg !11334
  store i8 %bf.set, i8* %mode_changed, align 2, !dbg !11334
  br label %for.inc, !dbg !11335

for.inc:                                          ; preds = %if.end27, %if.then19, %if.then14
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !11336, metadata !DIExpression()), !dbg !11338
  %37 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11338
  %next29 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %37, i32 0, i32 4, !dbg !11338
  %next30 = getelementptr inbounds %struct.list_head, %struct.list_head* %next29, i32 0, i32 0, !dbg !11338
  %38 = load %struct.list_head*, %struct.list_head** %next30, align 8, !dbg !11338
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !11338
  store i8* %39, i8** %__mptr28, align 8, !dbg !11338
  br label %do.body31, !dbg !11338

do.body31:                                        ; preds = %for.inc
  br label %do.end32, !dbg !11339

do.end32:                                         ; preds = %do.body31
  %40 = load i8*, i8** %__mptr28, align 8, !dbg !11338
  %add.ptr34 = getelementptr i8, i8* %40, i64 -24, !dbg !11338
  %41 = bitcast i8* %add.ptr34 to %struct.drm_dp_vcpi_allocation*, !dbg !11338
  store %struct.drm_dp_vcpi_allocation* %41, %struct.drm_dp_vcpi_allocation** %tmp33, align 8, !dbg !11339
  %42 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp33, align 8, !dbg !11338
  store %struct.drm_dp_vcpi_allocation* %42, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11283
  br label %for.cond, !dbg !11283, !llvm.loop !11341

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !11343
  br label %return, !dbg !11343

return:                                           ; preds = %for.end, %if.then24, %if.then9, %if.then5, %if.then
  %43 = load i32, i32* %retval, align 4, !dbg !11344
  ret i32 %43, !dbg !11344
}

; Function Attrs: noredzone
declare dso_local %struct.drm_connector_state* @drm_atomic_get_connector_state(%struct.drm_atomic_state*, %struct.drm_connector*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.drm_dp_aux* @drm_dp_mst_dsc_aux_for_port(%struct.drm_dp_mst_port* %port) #0 !dbg !11345 {
entry:
  %retval = alloca %struct.drm_dp_aux*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %immediate_upstream_port = alloca %struct.drm_dp_mst_port*, align 8
  %fec_port = alloca %struct.drm_dp_mst_port*, align 8
  %desc = alloca %struct.drm_dp_desc, align 4
  %endpoint_fec = alloca i8, align 1
  %endpoint_dsc = alloca i8, align 1
  %upstream_dsc = alloca i8, align 1
  %downstreamport = alloca i8, align 1
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !11348, metadata !DIExpression()), !dbg !11349
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %immediate_upstream_port, metadata !11350, metadata !DIExpression()), !dbg !11351
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %fec_port, metadata !11352, metadata !DIExpression()), !dbg !11353
  call void @llvm.dbg.declare(metadata %struct.drm_dp_desc* %desc, metadata !11354, metadata !DIExpression()), !dbg !11367
  %0 = bitcast %struct.drm_dp_desc* %desc to i8*, !dbg !11367
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 16, i1 false), !dbg !11367
  call void @llvm.dbg.declare(metadata i8* %endpoint_fec, metadata !11368, metadata !DIExpression()), !dbg !11369
  call void @llvm.dbg.declare(metadata i8* %endpoint_dsc, metadata !11370, metadata !DIExpression()), !dbg !11371
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11372
  %tobool = icmp ne %struct.drm_dp_mst_port* %1, null, !dbg !11372
  br i1 %tobool, label %if.end, label %if.then, !dbg !11374

if.then:                                          ; preds = %entry
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11375
  br label %return, !dbg !11375

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11376
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 15, !dbg !11378
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !11378
  %port_parent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %3, i32 0, i32 7, !dbg !11379
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent, align 8, !dbg !11379
  %tobool1 = icmp ne %struct.drm_dp_mst_port* %4, null, !dbg !11376
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !11380

if.then2:                                         ; preds = %if.end
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11381
  %parent3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 15, !dbg !11382
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent3, align 8, !dbg !11382
  %port_parent4 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %6, i32 0, i32 7, !dbg !11383
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent4, align 8, !dbg !11383
  store %struct.drm_dp_mst_port* %7, %struct.drm_dp_mst_port** %immediate_upstream_port, align 8, !dbg !11384
  br label %if.end5, !dbg !11385

if.else:                                          ; preds = %if.end
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %immediate_upstream_port, align 8, !dbg !11386
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %immediate_upstream_port, align 8, !dbg !11387
  store %struct.drm_dp_mst_port* %8, %struct.drm_dp_mst_port** %fec_port, align 8, !dbg !11388
  br label %while.cond, !dbg !11389

while.cond:                                       ; preds = %if.end9, %if.end5
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %fec_port, align 8, !dbg !11390
  %tobool6 = icmp ne %struct.drm_dp_mst_port* %9, null, !dbg !11389
  br i1 %tobool6, label %while.body, label %while.end, !dbg !11389

while.body:                                       ; preds = %while.cond
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %fec_port, align 8, !dbg !11391
  %call = call zeroext i1 @drm_dp_mst_is_virtual_dpcd(%struct.drm_dp_mst_port* %10) #8, !dbg !11394
  br i1 %call, label %if.end9, label %land.lhs.true, !dbg !11395

land.lhs.true:                                    ; preds = %while.body
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %fec_port, align 8, !dbg !11396
  %fec_capable = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 21, !dbg !11397
  %12 = load i8, i8* %fec_capable, align 1, !dbg !11397
  %tobool7 = trunc i8 %12 to i1, !dbg !11397
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !11398

if.then8:                                         ; preds = %land.lhs.true
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11399
  br label %return, !dbg !11399

if.end9:                                          ; preds = %land.lhs.true, %while.body
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %fec_port, align 8, !dbg !11400
  %parent10 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 15, !dbg !11401
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent10, align 8, !dbg !11401
  %port_parent11 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %14, i32 0, i32 7, !dbg !11402
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent11, align 8, !dbg !11402
  store %struct.drm_dp_mst_port* %15, %struct.drm_dp_mst_port** %fec_port, align 8, !dbg !11403
  br label %while.cond, !dbg !11389, !llvm.loop !11404

while.end:                                        ; preds = %while.cond
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %immediate_upstream_port, align 8, !dbg !11406
  %call12 = call zeroext i1 @drm_dp_mst_is_virtual_dpcd(%struct.drm_dp_mst_port* %16) #8, !dbg !11408
  br i1 %call12, label %if.then13, label %if.end40, !dbg !11409

if.then13:                                        ; preds = %while.end
  call void @llvm.dbg.declare(metadata i8* %upstream_dsc, metadata !11410, metadata !DIExpression()), !dbg !11412
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11413
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %17, i32 0, i32 14, !dbg !11415
  %call14 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %aux, i32 96, i8* %endpoint_dsc, i64 1) #8, !dbg !11416
  %cmp = icmp ne i64 %call14, 1, !dbg !11417
  br i1 %cmp, label %if.then15, label %if.end16, !dbg !11418

if.then15:                                        ; preds = %if.then13
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11419
  br label %return, !dbg !11419

if.end16:                                         ; preds = %if.then13
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11420
  %aux17 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %18, i32 0, i32 14, !dbg !11422
  %call18 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %aux17, i32 144, i8* %endpoint_fec, i64 1) #8, !dbg !11423
  %cmp19 = icmp ne i64 %call18, 1, !dbg !11424
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !11425

if.then20:                                        ; preds = %if.end16
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11426
  br label %return, !dbg !11426

if.end21:                                         ; preds = %if.end16
  %19 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %immediate_upstream_port, align 8, !dbg !11427
  %aux22 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %19, i32 0, i32 14, !dbg !11429
  %call23 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %aux22, i32 96, i8* %upstream_dsc, i64 1) #8, !dbg !11430
  %cmp24 = icmp ne i64 %call23, 1, !dbg !11431
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !11432

if.then25:                                        ; preds = %if.end21
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11433
  br label %return, !dbg !11433

if.end26:                                         ; preds = %if.end21
  %20 = load i8, i8* %endpoint_dsc, align 1, !dbg !11434
  %conv = zext i8 %20 to i32, !dbg !11434
  %and = and i32 %conv, 1, !dbg !11436
  %tobool27 = icmp ne i32 %and, 0, !dbg !11436
  br i1 %tobool27, label %land.lhs.true28, label %if.end38, !dbg !11437

land.lhs.true28:                                  ; preds = %if.end26
  %21 = load i8, i8* %endpoint_fec, align 1, !dbg !11438
  %conv29 = zext i8 %21 to i32, !dbg !11438
  %and30 = and i32 %conv29, 1, !dbg !11439
  %tobool31 = icmp ne i32 %and30, 0, !dbg !11439
  br i1 %tobool31, label %land.lhs.true32, label %if.end38, !dbg !11440

land.lhs.true32:                                  ; preds = %land.lhs.true28
  %22 = load i8, i8* %upstream_dsc, align 1, !dbg !11441
  %conv33 = zext i8 %22 to i32, !dbg !11441
  %and34 = and i32 %conv33, 2, !dbg !11442
  %tobool35 = icmp ne i32 %and34, 0, !dbg !11442
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !11443

if.then36:                                        ; preds = %land.lhs.true32
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11444
  %aux37 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %23, i32 0, i32 14, !dbg !11445
  store %struct.drm_dp_aux* %aux37, %struct.drm_dp_aux** %retval, align 8, !dbg !11446
  br label %return, !dbg !11446

if.end38:                                         ; preds = %land.lhs.true32, %land.lhs.true28, %if.end26
  %24 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %immediate_upstream_port, align 8, !dbg !11447
  %aux39 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %24, i32 0, i32 14, !dbg !11448
  store %struct.drm_dp_aux* %aux39, %struct.drm_dp_aux** %retval, align 8, !dbg !11449
  br label %return, !dbg !11449

if.end40:                                         ; preds = %while.end
  %25 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11450
  %call41 = call zeroext i1 @drm_dp_mst_is_virtual_dpcd(%struct.drm_dp_mst_port* %25) #8, !dbg !11452
  br i1 %call41, label %if.then42, label %if.end44, !dbg !11453

if.then42:                                        ; preds = %if.end40
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11454
  %aux43 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %26, i32 0, i32 14, !dbg !11455
  store %struct.drm_dp_aux* %aux43, %struct.drm_dp_aux** %retval, align 8, !dbg !11456
  br label %return, !dbg !11456

if.end44:                                         ; preds = %if.end40
  %27 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11457
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %27, i32 0, i32 18, !dbg !11459
  %28 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !11459
  %aux45 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %28, i32 0, i32 4, !dbg !11460
  %29 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux45, align 8, !dbg !11460
  %call46 = call i32 @drm_dp_read_desc(%struct.drm_dp_aux* %29, %struct.drm_dp_desc* %desc, i1 zeroext true) #8, !dbg !11461
  %tobool47 = icmp ne i32 %call46, 0, !dbg !11461
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !11462

if.then48:                                        ; preds = %if.end44
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11463
  br label %return, !dbg !11463

if.end49:                                         ; preds = %if.end44
  %call50 = call zeroext i1 @drm_dp_has_quirk(%struct.drm_dp_desc* %desc, i32 0, i32 3) #8, !dbg !11464
  br i1 %call50, label %land.lhs.true52, label %if.end81, !dbg !11466

land.lhs.true52:                                  ; preds = %if.end49
  %30 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11467
  %mgr53 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %30, i32 0, i32 18, !dbg !11468
  %31 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr53, align 8, !dbg !11468
  %dpcd = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %31, i32 0, i32 13, !dbg !11469
  %arrayidx = getelementptr [15 x i8], [15 x i8]* %dpcd, i64 0, i64 0, !dbg !11467
  %32 = load i8, i8* %arrayidx, align 8, !dbg !11467
  %conv54 = zext i8 %32 to i32, !dbg !11467
  %cmp55 = icmp sge i32 %conv54, 20, !dbg !11470
  br i1 %cmp55, label %land.lhs.true57, label %if.end81, !dbg !11471

land.lhs.true57:                                  ; preds = %land.lhs.true52
  %33 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11472
  %parent58 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %33, i32 0, i32 15, !dbg !11473
  %34 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent58, align 8, !dbg !11473
  %35 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11474
  %mgr59 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %35, i32 0, i32 18, !dbg !11475
  %36 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr59, align 8, !dbg !11475
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %36, i32 0, i32 12, !dbg !11476
  %37 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !11476
  %cmp60 = icmp eq %struct.drm_dp_mst_branch* %34, %37, !dbg !11477
  br i1 %cmp60, label %if.then62, label %if.end81, !dbg !11478

if.then62:                                        ; preds = %land.lhs.true57
  call void @llvm.dbg.declare(metadata i8* %downstreamport, metadata !11479, metadata !DIExpression()), !dbg !11481
  %38 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11482
  %aux63 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %38, i32 0, i32 14, !dbg !11484
  %call64 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %aux63, i32 5, i8* %downstreamport, i64 1) #8, !dbg !11485
  %cmp65 = icmp slt i64 %call64, 0, !dbg !11486
  br i1 %cmp65, label %if.then67, label %if.end68, !dbg !11487

if.then67:                                        ; preds = %if.then62
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11488
  br label %return, !dbg !11488

if.end68:                                         ; preds = %if.then62
  %39 = load i8, i8* %downstreamport, align 1, !dbg !11489
  %conv69 = zext i8 %39 to i32, !dbg !11489
  %and70 = and i32 %conv69, 1, !dbg !11491
  %tobool71 = icmp ne i32 %and70, 0, !dbg !11491
  br i1 %tobool71, label %land.lhs.true72, label %if.end80, !dbg !11492

land.lhs.true72:                                  ; preds = %if.end68
  %40 = load i8, i8* %downstreamport, align 1, !dbg !11493
  %conv73 = zext i8 %40 to i32, !dbg !11493
  %and74 = and i32 %conv73, 6, !dbg !11494
  %cmp75 = icmp ne i32 %and74, 2, !dbg !11495
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !11496

if.then77:                                        ; preds = %land.lhs.true72
  %41 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11497
  %mgr78 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %41, i32 0, i32 18, !dbg !11498
  %42 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr78, align 8, !dbg !11498
  %aux79 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %42, i32 0, i32 4, !dbg !11499
  %43 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux79, align 8, !dbg !11499
  store %struct.drm_dp_aux* %43, %struct.drm_dp_aux** %retval, align 8, !dbg !11500
  br label %return, !dbg !11500

if.end80:                                         ; preds = %land.lhs.true72, %if.end68
  br label %if.end81, !dbg !11501

if.end81:                                         ; preds = %if.end80, %land.lhs.true57, %land.lhs.true52, %if.end49
  %44 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11502
  %aux82 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %44, i32 0, i32 14, !dbg !11504
  %call83 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %aux82, i32 96, i8* %endpoint_dsc, i64 1) #8, !dbg !11505
  %cmp84 = icmp ne i64 %call83, 1, !dbg !11506
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !11507

if.then86:                                        ; preds = %if.end81
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11508
  br label %return, !dbg !11508

if.end87:                                         ; preds = %if.end81
  %45 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11509
  %aux88 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %45, i32 0, i32 14, !dbg !11511
  %call89 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %aux88, i32 144, i8* %endpoint_fec, i64 1) #8, !dbg !11512
  %cmp90 = icmp ne i64 %call89, 1, !dbg !11513
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !11514

if.then92:                                        ; preds = %if.end87
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11515
  br label %return, !dbg !11515

if.end93:                                         ; preds = %if.end87
  %46 = load i8, i8* %endpoint_dsc, align 1, !dbg !11516
  %conv94 = zext i8 %46 to i32, !dbg !11516
  %and95 = and i32 %conv94, 1, !dbg !11518
  %tobool96 = icmp ne i32 %and95, 0, !dbg !11518
  br i1 %tobool96, label %land.lhs.true97, label %if.end103, !dbg !11519

land.lhs.true97:                                  ; preds = %if.end93
  %47 = load i8, i8* %endpoint_fec, align 1, !dbg !11520
  %conv98 = zext i8 %47 to i32, !dbg !11520
  %and99 = and i32 %conv98, 1, !dbg !11521
  %tobool100 = icmp ne i32 %and99, 0, !dbg !11521
  br i1 %tobool100, label %if.then101, label %if.end103, !dbg !11522

if.then101:                                       ; preds = %land.lhs.true97
  %48 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11523
  %aux102 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %48, i32 0, i32 14, !dbg !11524
  store %struct.drm_dp_aux* %aux102, %struct.drm_dp_aux** %retval, align 8, !dbg !11525
  br label %return, !dbg !11525

if.end103:                                        ; preds = %land.lhs.true97, %if.end93
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %retval, align 8, !dbg !11526
  br label %return, !dbg !11526

return:                                           ; preds = %if.end103, %if.then101, %if.then92, %if.then86, %if.then77, %if.then67, %if.then48, %if.then42, %if.end38, %if.then36, %if.then25, %if.then20, %if.then15, %if.then8, %if.then
  %49 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %retval, align 8, !dbg !11527
  ret %struct.drm_dp_aux* %49, !dbg !11527
}

; Function Attrs: noredzone
declare dso_local %struct.drm_crtc_state* @drm_atomic_get_crtc_state(%struct.drm_atomic_state*, %struct.drm_crtc*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_atomic_enable_dsc(%struct.drm_atomic_state* %state, %struct.drm_dp_mst_port* %port, i32 %pbn, i32 %pbn_div, i1 zeroext %enable) #0 !dbg !11528 {
entry:
  %retval = alloca i32, align 4
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %pbn.addr = alloca i32, align 4
  %pbn_div.addr = alloca i32, align 4
  %enable.addr = alloca i8, align 1
  %mst_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %pos = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %found = alloca i8, align 1
  %vcpi = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !11531, metadata !DIExpression()), !dbg !11532
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !11533, metadata !DIExpression()), !dbg !11534
  store i32 %pbn, i32* %pbn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn.addr, metadata !11535, metadata !DIExpression()), !dbg !11536
  store i32 %pbn_div, i32* %pbn_div.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn_div.addr, metadata !11537, metadata !DIExpression()), !dbg !11538
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %mst_state, metadata !11541, metadata !DIExpression()), !dbg !11542
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %pos, metadata !11543, metadata !DIExpression()), !dbg !11544
  call void @llvm.dbg.declare(metadata i8* %found, metadata !11545, metadata !DIExpression()), !dbg !11546
  store i8 0, i8* %found, align 1, !dbg !11546
  call void @llvm.dbg.declare(metadata i32* %vcpi, metadata !11547, metadata !DIExpression()), !dbg !11548
  store i32 0, i32* %vcpi, align 4, !dbg !11548
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11549
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11550
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 18, !dbg !11551
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !11551
  %call = call %struct.drm_dp_mst_topology_state* @drm_atomic_get_mst_topology_state(%struct.drm_atomic_state* %0, %struct.drm_dp_mst_topology_mgr* %2) #8, !dbg !11552
  store %struct.drm_dp_mst_topology_state* %call, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11553
  %3 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11554
  %4 = bitcast %struct.drm_dp_mst_topology_state* %3 to i8*, !dbg !11554
  %call1 = call zeroext i1 @IS_ERR(i8* %4) #8, !dbg !11556
  br i1 %call1, label %if.then, label %if.end, !dbg !11557

if.then:                                          ; preds = %entry
  %5 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11558
  %6 = bitcast %struct.drm_dp_mst_topology_state* %5 to i8*, !dbg !11558
  %call2 = call i64 @PTR_ERR(i8* %6) #8, !dbg !11559
  %conv = trunc i64 %call2 to i32, !dbg !11559
  store i32 %conv, i32* %retval, align 4, !dbg !11560
  br label %return, !dbg !11560

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11561, metadata !DIExpression()), !dbg !11564
  %7 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11564
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %7, i32 0, i32 1, !dbg !11564
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !11564
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11564
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !11564
  store i8* %9, i8** %__mptr, align 8, !dbg !11564
  br label %do.body, !dbg !11564

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11565

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !11564
  %add.ptr = getelementptr i8, i8* %10, i64 -24, !dbg !11564
  %11 = bitcast i8* %add.ptr to %struct.drm_dp_vcpi_allocation*, !dbg !11564
  store %struct.drm_dp_vcpi_allocation* %11, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11565
  %12 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11564
  store %struct.drm_dp_vcpi_allocation* %12, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11567
  br label %for.cond, !dbg !11567

for.cond:                                         ; preds = %do.end15, %do.end
  %13 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11568
  %next3 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %13, i32 0, i32 4, !dbg !11568
  %14 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11568
  %vcpis4 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %14, i32 0, i32 1, !dbg !11568
  %cmp = icmp eq %struct.list_head* %next3, %vcpis4, !dbg !11568
  %lnot = xor i1 %cmp, true, !dbg !11568
  br i1 %lnot, label %for.body, label %for.end, !dbg !11567

for.body:                                         ; preds = %for.cond
  %15 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11570
  %port6 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %15, i32 0, i32 0, !dbg !11573
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port6, align 8, !dbg !11573
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11574
  %cmp7 = icmp eq %struct.drm_dp_mst_port* %16, %17, !dbg !11575
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !11576

if.then9:                                         ; preds = %for.body
  store i8 1, i8* %found, align 1, !dbg !11577
  br label %for.end, !dbg !11579

if.end10:                                         ; preds = %for.body
  br label %for.inc, !dbg !11580

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !11581, metadata !DIExpression()), !dbg !11583
  %18 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11583
  %next12 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %18, i32 0, i32 4, !dbg !11583
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %next12, i32 0, i32 0, !dbg !11583
  %19 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !11583
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !11583
  store i8* %20, i8** %__mptr11, align 8, !dbg !11583
  br label %do.body14, !dbg !11583

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !11584

do.end15:                                         ; preds = %do.body14
  %21 = load i8*, i8** %__mptr11, align 8, !dbg !11583
  %add.ptr17 = getelementptr i8, i8* %21, i64 -24, !dbg !11583
  %22 = bitcast i8* %add.ptr17 to %struct.drm_dp_vcpi_allocation*, !dbg !11583
  store %struct.drm_dp_vcpi_allocation* %22, %struct.drm_dp_vcpi_allocation** %tmp16, align 8, !dbg !11584
  %23 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp16, align 8, !dbg !11583
  store %struct.drm_dp_vcpi_allocation* %23, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11568
  br label %for.cond, !dbg !11568, !llvm.loop !11586

for.end:                                          ; preds = %if.then9, %for.cond
  %24 = load i8, i8* %found, align 1, !dbg !11588
  %tobool = trunc i8 %24 to i1, !dbg !11588
  br i1 %tobool, label %if.end19, label %if.then18, !dbg !11590

if.then18:                                        ; preds = %for.end
  %25 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11591
  %26 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11591
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.52, i64 0, i64 0), %struct.drm_dp_mst_port* %25, %struct.drm_dp_mst_topology_state* %26) #8, !dbg !11591
  store i32 -22, i32* %retval, align 4, !dbg !11593
  br label %return, !dbg !11593

if.end19:                                         ; preds = %for.end
  %27 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11594
  %dsc_enabled = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %27, i32 0, i32 3, !dbg !11596
  %28 = load i8, i8* %dsc_enabled, align 8, !dbg !11596
  %tobool20 = trunc i8 %28 to i1, !dbg !11596
  %conv21 = zext i1 %tobool20 to i32, !dbg !11594
  %29 = load i8, i8* %enable.addr, align 1, !dbg !11597
  %tobool22 = trunc i8 %29 to i1, !dbg !11597
  %conv23 = zext i1 %tobool22 to i32, !dbg !11597
  %cmp24 = icmp eq i32 %conv21, %conv23, !dbg !11598
  br i1 %cmp24, label %if.then26, label %if.end31, !dbg !11599

if.then26:                                        ; preds = %if.end19
  %30 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11600
  %31 = load i8, i8* %enable.addr, align 1, !dbg !11600
  %tobool27 = trunc i8 %31 to i1, !dbg !11600
  %conv28 = zext i1 %tobool27 to i32, !dbg !11600
  %32 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11600
  %vcpi29 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %32, i32 0, i32 1, !dbg !11600
  %33 = load i32, i32* %vcpi29, align 8, !dbg !11600
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.53, i64 0, i64 0), %struct.drm_dp_mst_port* %30, i32 %conv28, i32 %33) #8, !dbg !11600
  %34 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11602
  %vcpi30 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %34, i32 0, i32 1, !dbg !11603
  %35 = load i32, i32* %vcpi30, align 8, !dbg !11603
  store i32 %35, i32* %vcpi, align 4, !dbg !11604
  br label %if.end31, !dbg !11605

if.end31:                                         ; preds = %if.then26, %if.end19
  %36 = load i8, i8* %enable.addr, align 1, !dbg !11606
  %tobool32 = trunc i8 %36 to i1, !dbg !11606
  br i1 %tobool32, label %if.then33, label %if.end40, !dbg !11608

if.then33:                                        ; preds = %if.end31
  %37 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11609
  %38 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11611
  %mgr34 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %38, i32 0, i32 18, !dbg !11612
  %39 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr34, align 8, !dbg !11612
  %40 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11613
  %41 = load i32, i32* %pbn.addr, align 4, !dbg !11614
  %42 = load i32, i32* %pbn_div.addr, align 4, !dbg !11615
  %call35 = call i32 @drm_dp_atomic_find_vcpi_slots(%struct.drm_atomic_state* %37, %struct.drm_dp_mst_topology_mgr* %39, %struct.drm_dp_mst_port* %40, i32 %41, i32 %42) #8, !dbg !11616
  store i32 %call35, i32* %vcpi, align 4, !dbg !11617
  %43 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !11618
  %44 = load i32, i32* %vcpi, align 4, !dbg !11618
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.54, i64 0, i64 0), %struct.drm_dp_mst_port* %43, i32 %44) #8, !dbg !11618
  %45 = load i32, i32* %vcpi, align 4, !dbg !11619
  %cmp36 = icmp slt i32 %45, 0, !dbg !11621
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !11622

if.then38:                                        ; preds = %if.then33
  store i32 -22, i32* %retval, align 4, !dbg !11623
  br label %return, !dbg !11623

if.end39:                                         ; preds = %if.then33
  br label %if.end40, !dbg !11624

if.end40:                                         ; preds = %if.end39, %if.end31
  %46 = load i8, i8* %enable.addr, align 1, !dbg !11625
  %tobool41 = trunc i8 %46 to i1, !dbg !11625
  %47 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11626
  %dsc_enabled42 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %47, i32 0, i32 3, !dbg !11627
  %frombool43 = zext i1 %tobool41 to i8, !dbg !11628
  store i8 %frombool43, i8* %dsc_enabled42, align 8, !dbg !11628
  %48 = load i32, i32* %vcpi, align 4, !dbg !11629
  store i32 %48, i32* %retval, align 4, !dbg !11630
  br label %return, !dbg !11630

return:                                           ; preds = %if.end40, %if.then38, %if.then18, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !11631
  ret i32 %49, !dbg !11631
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_atomic_check(%struct.drm_atomic_state* %state) #0 !dbg !11632 {
entry:
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mst_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !11635, metadata !DIExpression()), !dbg !11636
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !11637, metadata !DIExpression()), !dbg !11638
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %mst_state, metadata !11639, metadata !DIExpression()), !dbg !11640
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11641, metadata !DIExpression()), !dbg !11642
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11643, metadata !DIExpression()), !dbg !11644
  store i32 0, i32* %ret, align 4, !dbg !11644
  store i32 0, i32* %i, align 4, !dbg !11645
  br label %for.cond, !dbg !11645

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !11647
  %1 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11647
  %num_private_objs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %1, i32 0, i32 7, !dbg !11647
  %2 = load i32, i32* %num_private_objs, align 8, !dbg !11647
  %cmp = icmp slt i32 %0, %2, !dbg !11647
  br i1 %cmp, label %for.body, label %for.end, !dbg !11645

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11649
  %4 = load i32, i32* %i, align 4, !dbg !11649
  %call = call zeroext i1 @__drm_dp_mst_state_iter_get(%struct.drm_atomic_state* %3, %struct.drm_dp_mst_topology_mgr** %mgr, %struct.drm_dp_mst_topology_state** null, %struct.drm_dp_mst_topology_state** %mst_state, i32 %4) #8, !dbg !11649
  br i1 %call, label %if.else, label %if.then, !dbg !11647

if.then:                                          ; preds = %for.body
  br label %if.end12, !dbg !11651

if.else:                                          ; preds = %for.body
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !11653
  %mst_state1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 11, !dbg !11656
  %bf.load = load i8, i8* %mst_state1, align 8, !dbg !11656
  %bf.clear = and i8 %bf.load, 1, !dbg !11656
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !11656
  br i1 %bf.cast, label %if.end, label %if.then2, !dbg !11657

if.then2:                                         ; preds = %if.else
  br label %for.inc, !dbg !11658

if.end:                                           ; preds = %if.else
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !11659
  %7 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11660
  %call3 = call i32 @drm_dp_mst_atomic_check_vcpi_alloc_limit(%struct.drm_dp_mst_topology_mgr* %6, %struct.drm_dp_mst_topology_state* %7) #8, !dbg !11661
  store i32 %call3, i32* %ret, align 4, !dbg !11662
  %8 = load i32, i32* %ret, align 4, !dbg !11663
  %tobool = icmp ne i32 %8, 0, !dbg !11663
  br i1 %tobool, label %if.then4, label %if.end5, !dbg !11665

if.then4:                                         ; preds = %if.end
  br label %for.end, !dbg !11666

if.end5:                                          ; preds = %if.end
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !11667
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 9, !dbg !11668
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !11669
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !11670
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %10, i32 0, i32 12, !dbg !11671
  %11 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !11671
  %12 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !11672
  %call6 = call i32 @drm_dp_mst_atomic_check_mstb_bw_limit(%struct.drm_dp_mst_branch* %11, %struct.drm_dp_mst_topology_state* %12) #8, !dbg !11673
  store i32 %call6, i32* %ret, align 4, !dbg !11674
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !11675
  %lock7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 9, !dbg !11676
  call void @mutex_unlock(%struct.mutex* %lock7) #8, !dbg !11677
  %14 = load i32, i32* %ret, align 4, !dbg !11678
  %cmp8 = icmp slt i32 %14, 0, !dbg !11680
  br i1 %cmp8, label %if.then9, label %if.else10, !dbg !11681

if.then9:                                         ; preds = %if.end5
  br label %for.end, !dbg !11682

if.else10:                                        ; preds = %if.end5
  store i32 0, i32* %ret, align 4, !dbg !11683
  br label %if.end11

if.end11:                                         ; preds = %if.else10
  br label %if.end12

if.end12:                                         ; preds = %if.end11, %if.then
  br label %for.inc, !dbg !11649

for.inc:                                          ; preds = %if.end12, %if.then2
  %15 = load i32, i32* %i, align 4, !dbg !11647
  %inc = add i32 %15, 1, !dbg !11647
  store i32 %inc, i32* %i, align 4, !dbg !11647
  br label %for.cond, !dbg !11647, !llvm.loop !11684

for.end:                                          ; preds = %if.then9, %if.then4, %for.cond
  %16 = load i32, i32* %ret, align 4, !dbg !11686
  ret i32 %16, !dbg !11687
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__drm_dp_mst_state_iter_get(%struct.drm_atomic_state* %state, %struct.drm_dp_mst_topology_mgr** %mgr, %struct.drm_dp_mst_topology_state** %old_state, %struct.drm_dp_mst_topology_state** %new_state, i32 %i) #0 !dbg !11688 {
entry:
  %retval = alloca i1, align 1
  %state.addr = alloca %struct.drm_atomic_state*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr**, align 8
  %old_state.addr = alloca %struct.drm_dp_mst_topology_state**, align 8
  %new_state.addr = alloca %struct.drm_dp_mst_topology_state**, align 8
  %i.addr = alloca i32, align 4
  %objs_state = alloca %struct.__drm_private_objs_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %__mptr3 = alloca i8*, align 8
  %tmp7 = alloca %struct.drm_dp_mst_topology_state*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp16 = alloca %struct.drm_dp_mst_topology_state*, align 8
  store %struct.drm_atomic_state* %state, %struct.drm_atomic_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_atomic_state** %state.addr, metadata !11693, metadata !DIExpression()), !dbg !11694
  store %struct.drm_dp_mst_topology_mgr** %mgr, %struct.drm_dp_mst_topology_mgr*** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr*** %mgr.addr, metadata !11695, metadata !DIExpression()), !dbg !11696
  store %struct.drm_dp_mst_topology_state** %old_state, %struct.drm_dp_mst_topology_state*** %old_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state*** %old_state.addr, metadata !11697, metadata !DIExpression()), !dbg !11698
  store %struct.drm_dp_mst_topology_state** %new_state, %struct.drm_dp_mst_topology_state*** %new_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state*** %new_state.addr, metadata !11699, metadata !DIExpression()), !dbg !11700
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !11701, metadata !DIExpression()), !dbg !11702
  call void @llvm.dbg.declare(metadata %struct.__drm_private_objs_state** %objs_state, metadata !11703, metadata !DIExpression()), !dbg !11704
  %0 = load %struct.drm_atomic_state*, %struct.drm_atomic_state** %state.addr, align 8, !dbg !11705
  %private_objs = getelementptr inbounds %struct.drm_atomic_state, %struct.drm_atomic_state* %0, i32 0, i32 8, !dbg !11706
  %1 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %private_objs, align 8, !dbg !11706
  %2 = load i32, i32* %i.addr, align 4, !dbg !11707
  %idxprom = sext i32 %2 to i64, !dbg !11705
  %arrayidx = getelementptr %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %1, i64 %idxprom, !dbg !11705
  store %struct.__drm_private_objs_state* %arrayidx, %struct.__drm_private_objs_state** %objs_state, align 8, !dbg !11704
  %3 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %objs_state, align 8, !dbg !11708
  %ptr = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %3, i32 0, i32 0, !dbg !11710
  %4 = load %struct.drm_private_obj*, %struct.drm_private_obj** %ptr, align 8, !dbg !11710
  %funcs = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %4, i32 0, i32 3, !dbg !11711
  %5 = load %struct.drm_private_state_funcs*, %struct.drm_private_state_funcs** %funcs, align 8, !dbg !11711
  %cmp = icmp ne %struct.drm_private_state_funcs* %5, @drm_dp_mst_topology_state_funcs, !dbg !11712
  br i1 %cmp, label %if.then, label %if.end, !dbg !11713

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !11714
  br label %return, !dbg !11714

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11715, metadata !DIExpression()), !dbg !11717
  %6 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %objs_state, align 8, !dbg !11717
  %ptr1 = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %6, i32 0, i32 0, !dbg !11717
  %7 = load %struct.drm_private_obj*, %struct.drm_private_obj** %ptr1, align 8, !dbg !11717
  %8 = bitcast %struct.drm_private_obj* %7 to i8*, !dbg !11717
  store i8* %8, i8** %__mptr, align 8, !dbg !11717
  br label %do.body, !dbg !11717

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !11718

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !11717
  %add.ptr = getelementptr i8, i8* %9, i64 0, !dbg !11717
  %10 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_mgr*, !dbg !11717
  store %struct.drm_dp_mst_topology_mgr* %10, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !11718
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !11717
  %12 = load %struct.drm_dp_mst_topology_mgr**, %struct.drm_dp_mst_topology_mgr*** %mgr.addr, align 8, !dbg !11720
  store %struct.drm_dp_mst_topology_mgr* %11, %struct.drm_dp_mst_topology_mgr** %12, align 8, !dbg !11721
  %13 = load %struct.drm_dp_mst_topology_state**, %struct.drm_dp_mst_topology_state*** %old_state.addr, align 8, !dbg !11722
  %tobool = icmp ne %struct.drm_dp_mst_topology_state** %13, null, !dbg !11722
  br i1 %tobool, label %if.then2, label %if.end9, !dbg !11724

if.then2:                                         ; preds = %do.end
  call void @llvm.dbg.declare(metadata i8** %__mptr3, metadata !11725, metadata !DIExpression()), !dbg !11727
  %14 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %objs_state, align 8, !dbg !11727
  %old_state4 = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %14, i32 0, i32 2, !dbg !11727
  %15 = load %struct.drm_private_state*, %struct.drm_private_state** %old_state4, align 8, !dbg !11727
  %16 = bitcast %struct.drm_private_state* %15 to i8*, !dbg !11727
  store i8* %16, i8** %__mptr3, align 8, !dbg !11727
  br label %do.body5, !dbg !11727

do.body5:                                         ; preds = %if.then2
  br label %do.end6, !dbg !11728

do.end6:                                          ; preds = %do.body5
  %17 = load i8*, i8** %__mptr3, align 8, !dbg !11727
  %add.ptr8 = getelementptr i8, i8* %17, i64 0, !dbg !11727
  %18 = bitcast i8* %add.ptr8 to %struct.drm_dp_mst_topology_state*, !dbg !11727
  store %struct.drm_dp_mst_topology_state* %18, %struct.drm_dp_mst_topology_state** %tmp7, align 8, !dbg !11728
  %19 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %tmp7, align 8, !dbg !11727
  %20 = load %struct.drm_dp_mst_topology_state**, %struct.drm_dp_mst_topology_state*** %old_state.addr, align 8, !dbg !11730
  store %struct.drm_dp_mst_topology_state* %19, %struct.drm_dp_mst_topology_state** %20, align 8, !dbg !11731
  br label %if.end9, !dbg !11732

if.end9:                                          ; preds = %do.end6, %do.end
  %21 = load %struct.drm_dp_mst_topology_state**, %struct.drm_dp_mst_topology_state*** %new_state.addr, align 8, !dbg !11733
  %tobool10 = icmp ne %struct.drm_dp_mst_topology_state** %21, null, !dbg !11733
  br i1 %tobool10, label %if.then11, label %if.end18, !dbg !11735

if.then11:                                        ; preds = %if.end9
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !11736, metadata !DIExpression()), !dbg !11738
  %22 = load %struct.__drm_private_objs_state*, %struct.__drm_private_objs_state** %objs_state, align 8, !dbg !11738
  %new_state13 = getelementptr inbounds %struct.__drm_private_objs_state, %struct.__drm_private_objs_state* %22, i32 0, i32 3, !dbg !11738
  %23 = load %struct.drm_private_state*, %struct.drm_private_state** %new_state13, align 8, !dbg !11738
  %24 = bitcast %struct.drm_private_state* %23 to i8*, !dbg !11738
  store i8* %24, i8** %__mptr12, align 8, !dbg !11738
  br label %do.body14, !dbg !11738

do.body14:                                        ; preds = %if.then11
  br label %do.end15, !dbg !11739

do.end15:                                         ; preds = %do.body14
  %25 = load i8*, i8** %__mptr12, align 8, !dbg !11738
  %add.ptr17 = getelementptr i8, i8* %25, i64 0, !dbg !11738
  %26 = bitcast i8* %add.ptr17 to %struct.drm_dp_mst_topology_state*, !dbg !11738
  store %struct.drm_dp_mst_topology_state* %26, %struct.drm_dp_mst_topology_state** %tmp16, align 8, !dbg !11739
  %27 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %tmp16, align 8, !dbg !11738
  %28 = load %struct.drm_dp_mst_topology_state**, %struct.drm_dp_mst_topology_state*** %new_state.addr, align 8, !dbg !11741
  store %struct.drm_dp_mst_topology_state* %27, %struct.drm_dp_mst_topology_state** %28, align 8, !dbg !11742
  br label %if.end18, !dbg !11743

if.end18:                                         ; preds = %do.end15, %if.end9
  store i1 true, i1* %retval, align 1, !dbg !11744
  br label %return, !dbg !11744

return:                                           ; preds = %if.end18, %if.then
  %29 = load i1, i1* %retval, align 1, !dbg !11745
  ret i1 %29, !dbg !11745
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_atomic_check_vcpi_alloc_limit(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_state* %mst_state) #0 !dbg !11746 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mst_state.addr = alloca %struct.drm_dp_mst_topology_state*, align 8
  %vcpi = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %avail_slots = alloca i32, align 4
  %payload_count = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !11749, metadata !DIExpression()), !dbg !11750
  store %struct.drm_dp_mst_topology_state* %mst_state, %struct.drm_dp_mst_topology_state** %mst_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %mst_state.addr, metadata !11751, metadata !DIExpression()), !dbg !11752
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %vcpi, metadata !11753, metadata !DIExpression()), !dbg !11754
  call void @llvm.dbg.declare(metadata i32* %avail_slots, metadata !11755, metadata !DIExpression()), !dbg !11756
  store i32 63, i32* %avail_slots, align 4, !dbg !11756
  call void @llvm.dbg.declare(metadata i32* %payload_count, metadata !11757, metadata !DIExpression()), !dbg !11758
  store i32 0, i32* %payload_count, align 4, !dbg !11758
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11759, metadata !DIExpression()), !dbg !11762
  %0 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state.addr, align 8, !dbg !11762
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %0, i32 0, i32 1, !dbg !11762
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !11762
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11762
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !11762
  store i8* %2, i8** %__mptr, align 8, !dbg !11762
  br label %do.body, !dbg !11762

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11763

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11762
  %add.ptr = getelementptr i8, i8* %3, i64 -24, !dbg !11762
  %4 = bitcast i8* %add.ptr to %struct.drm_dp_vcpi_allocation*, !dbg !11762
  store %struct.drm_dp_vcpi_allocation* %4, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11763
  %5 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11762
  store %struct.drm_dp_vcpi_allocation* %5, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11765
  br label %for.cond, !dbg !11765

for.cond:                                         ; preds = %do.end20, %do.end
  %6 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11766
  %next1 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %6, i32 0, i32 4, !dbg !11766
  %7 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state.addr, align 8, !dbg !11766
  %vcpis2 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %7, i32 0, i32 1, !dbg !11766
  %cmp = icmp eq %struct.list_head* %next1, %vcpis2, !dbg !11766
  %lnot = xor i1 %cmp, true, !dbg !11766
  br i1 %lnot, label %for.body, label %for.end, !dbg !11765

for.body:                                         ; preds = %for.cond
  %8 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11768
  %vcpi3 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %8, i32 0, i32 1, !dbg !11771
  %9 = load i32, i32* %vcpi3, align 8, !dbg !11771
  %tobool = icmp ne i32 %9, 0, !dbg !11768
  br i1 %tobool, label %if.end, label %if.then, !dbg !11772

if.then:                                          ; preds = %for.body
  %10 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11773
  %port = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %10, i32 0, i32 0, !dbg !11773
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11773
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.151, i64 0, i64 0), %struct.drm_dp_mst_port* %11) #8, !dbg !11773
  br label %for.inc, !dbg !11775

if.end:                                           ; preds = %for.body
  %12 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11776
  %port4 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %12, i32 0, i32 0, !dbg !11776
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port4, align 8, !dbg !11776
  %14 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11776
  %vcpi5 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %14, i32 0, i32 1, !dbg !11776
  %15 = load i32, i32* %vcpi5, align 8, !dbg !11776
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.152, i64 0, i64 0), %struct.drm_dp_mst_port* %13, i32 %15) #8, !dbg !11776
  %16 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11777
  %vcpi6 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %16, i32 0, i32 1, !dbg !11778
  %17 = load i32, i32* %vcpi6, align 8, !dbg !11778
  %18 = load i32, i32* %avail_slots, align 4, !dbg !11779
  %sub = sub i32 %18, %17, !dbg !11779
  store i32 %sub, i32* %avail_slots, align 4, !dbg !11779
  %19 = load i32, i32* %avail_slots, align 4, !dbg !11780
  %cmp7 = icmp slt i32 %19, 0, !dbg !11782
  br i1 %cmp7, label %if.then8, label %if.end11, !dbg !11783

if.then8:                                         ; preds = %if.end
  %20 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11784
  %port9 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %20, i32 0, i32 0, !dbg !11784
  %21 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port9, align 8, !dbg !11784
  %22 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state.addr, align 8, !dbg !11784
  %23 = load i32, i32* %avail_slots, align 4, !dbg !11784
  %24 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11784
  %vcpi10 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %24, i32 0, i32 1, !dbg !11784
  %25 = load i32, i32* %vcpi10, align 8, !dbg !11784
  %add = add i32 %23, %25, !dbg !11784
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.153, i64 0, i64 0), %struct.drm_dp_mst_port* %21, %struct.drm_dp_mst_topology_state* %22, i32 %add) #8, !dbg !11784
  store i32 -28, i32* %retval, align 4, !dbg !11786
  br label %return, !dbg !11786

if.end11:                                         ; preds = %if.end
  %26 = load i32, i32* %payload_count, align 4, !dbg !11787
  %inc = add i32 %26, 1, !dbg !11787
  store i32 %inc, i32* %payload_count, align 4, !dbg !11787
  %27 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11789
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %27, i32 0, i32 5, !dbg !11790
  %28 = load i32, i32* %max_payloads, align 8, !dbg !11790
  %cmp12 = icmp sgt i32 %inc, %28, !dbg !11791
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !11792

if.then13:                                        ; preds = %if.end11
  %29 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11793
  %30 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state.addr, align 8, !dbg !11793
  %31 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11793
  %max_payloads14 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %31, i32 0, i32 5, !dbg !11793
  %32 = load i32, i32* %max_payloads14, align 8, !dbg !11793
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.154, i64 0, i64 0), %struct.drm_dp_mst_topology_mgr* %29, %struct.drm_dp_mst_topology_state* %30, i32 %32) #8, !dbg !11793
  store i32 -22, i32* %retval, align 4, !dbg !11795
  br label %return, !dbg !11795

if.end15:                                         ; preds = %if.end11
  br label %for.inc, !dbg !11796

for.inc:                                          ; preds = %if.end15, %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !11797, metadata !DIExpression()), !dbg !11799
  %33 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11799
  %next17 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %33, i32 0, i32 4, !dbg !11799
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %next17, i32 0, i32 0, !dbg !11799
  %34 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !11799
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !11799
  store i8* %35, i8** %__mptr16, align 8, !dbg !11799
  br label %do.body19, !dbg !11799

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !11800

do.end20:                                         ; preds = %do.body19
  %36 = load i8*, i8** %__mptr16, align 8, !dbg !11799
  %add.ptr22 = getelementptr i8, i8* %36, i64 -24, !dbg !11799
  %37 = bitcast i8* %add.ptr22 to %struct.drm_dp_vcpi_allocation*, !dbg !11799
  store %struct.drm_dp_vcpi_allocation* %37, %struct.drm_dp_vcpi_allocation** %tmp21, align 8, !dbg !11800
  %38 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp21, align 8, !dbg !11799
  store %struct.drm_dp_vcpi_allocation* %38, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11766
  br label %for.cond, !dbg !11766, !llvm.loop !11802

for.end:                                          ; preds = %for.cond
  %39 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !11804
  %40 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state.addr, align 8, !dbg !11804
  %41 = load i32, i32* %avail_slots, align 4, !dbg !11804
  %42 = load i32, i32* %avail_slots, align 4, !dbg !11804
  %sub23 = sub i32 63, %42, !dbg !11804
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.155, i64 0, i64 0), %struct.drm_dp_mst_topology_mgr* %39, %struct.drm_dp_mst_topology_state* %40, i32 %41, i32 %sub23) #8, !dbg !11804
  store i32 0, i32* %retval, align 4, !dbg !11805
  br label %return, !dbg !11805

return:                                           ; preds = %for.end, %if.then13, %if.then8
  %43 = load i32, i32* %retval, align 4, !dbg !11806
  ret i32 %43, !dbg !11806
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_atomic_check_mstb_bw_limit(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_topology_state* %state) #0 !dbg !11807 {
entry:
  %retval = alloca i32, align 4
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %state.addr = alloca %struct.drm_dp_mst_topology_state*, align 8
  %vcpi = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %pbn_used = alloca i32, align 4
  %ret = alloca i32, align 4
  %found = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr4 = alloca i8*, align 8
  %tmp9 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr19 = alloca i8*, align 8
  %tmp23 = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr36 = alloca i8*, align 8
  %tmp41 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !11810, metadata !DIExpression()), !dbg !11811
  store %struct.drm_dp_mst_topology_state* %state, %struct.drm_dp_mst_topology_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %state.addr, metadata !11812, metadata !DIExpression()), !dbg !11813
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %vcpi, metadata !11814, metadata !DIExpression()), !dbg !11815
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !11816, metadata !DIExpression()), !dbg !11817
  call void @llvm.dbg.declare(metadata i32* %pbn_used, metadata !11818, metadata !DIExpression()), !dbg !11819
  store i32 0, i32* %pbn_used, align 4, !dbg !11819
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11820, metadata !DIExpression()), !dbg !11821
  call void @llvm.dbg.declare(metadata i8* %found, metadata !11822, metadata !DIExpression()), !dbg !11823
  store i8 0, i8* %found, align 1, !dbg !11823
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11824, metadata !DIExpression()), !dbg !11827
  %0 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state.addr, align 8, !dbg !11827
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %0, i32 0, i32 1, !dbg !11827
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !11827
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11827
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !11827
  store i8* %2, i8** %__mptr, align 8, !dbg !11827
  br label %do.body, !dbg !11827

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11828

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11827
  %add.ptr = getelementptr i8, i8* %3, i64 -24, !dbg !11827
  %4 = bitcast i8* %add.ptr to %struct.drm_dp_vcpi_allocation*, !dbg !11827
  store %struct.drm_dp_vcpi_allocation* %4, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11828
  %5 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !11827
  store %struct.drm_dp_vcpi_allocation* %5, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11830
  br label %for.cond, !dbg !11830

for.cond:                                         ; preds = %do.end8, %do.end
  %6 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11831
  %next1 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %6, i32 0, i32 4, !dbg !11831
  %7 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state.addr, align 8, !dbg !11831
  %vcpis2 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %7, i32 0, i32 1, !dbg !11831
  %cmp = icmp eq %struct.list_head* %next1, %vcpis2, !dbg !11831
  %lnot = xor i1 %cmp, true, !dbg !11831
  br i1 %lnot, label %for.body, label %for.end, !dbg !11830

for.body:                                         ; preds = %for.cond
  %8 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11833
  %pbn = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %8, i32 0, i32 2, !dbg !11836
  %9 = load i32, i32* %pbn, align 4, !dbg !11836
  %tobool = icmp ne i32 %9, 0, !dbg !11833
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11837

lor.lhs.false:                                    ; preds = %for.body
  %10 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11838
  %port3 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %10, i32 0, i32 0, !dbg !11839
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port3, align 8, !dbg !11839
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11840
  %call = call zeroext i1 @drm_dp_mst_port_downstream_of_branch(%struct.drm_dp_mst_port* %11, %struct.drm_dp_mst_branch* %12) #8, !dbg !11841
  br i1 %call, label %if.end, label %if.then, !dbg !11842

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !11843

if.end:                                           ; preds = %lor.lhs.false
  store i8 1, i8* %found, align 1, !dbg !11844
  br label %for.end, !dbg !11845

for.inc:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %__mptr4, metadata !11846, metadata !DIExpression()), !dbg !11848
  %13 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11848
  %next5 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %13, i32 0, i32 4, !dbg !11848
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %next5, i32 0, i32 0, !dbg !11848
  %14 = load %struct.list_head*, %struct.list_head** %next6, align 8, !dbg !11848
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !11848
  store i8* %15, i8** %__mptr4, align 8, !dbg !11848
  br label %do.body7, !dbg !11848

do.body7:                                         ; preds = %for.inc
  br label %do.end8, !dbg !11849

do.end8:                                          ; preds = %do.body7
  %16 = load i8*, i8** %__mptr4, align 8, !dbg !11848
  %add.ptr10 = getelementptr i8, i8* %16, i64 -24, !dbg !11848
  %17 = bitcast i8* %add.ptr10 to %struct.drm_dp_vcpi_allocation*, !dbg !11848
  store %struct.drm_dp_vcpi_allocation* %17, %struct.drm_dp_vcpi_allocation** %tmp9, align 8, !dbg !11849
  %18 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp9, align 8, !dbg !11848
  store %struct.drm_dp_vcpi_allocation* %18, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11831
  br label %for.cond, !dbg !11831, !llvm.loop !11851

for.end:                                          ; preds = %if.end, %for.cond
  %19 = load i8, i8* %found, align 1, !dbg !11853
  %tobool11 = trunc i8 %19 to i1, !dbg !11853
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !11855

if.then12:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !11856
  br label %return, !dbg !11856

if.end13:                                         ; preds = %for.end
  %20 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11857
  %port_parent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %20, i32 0, i32 7, !dbg !11859
  %21 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent, align 8, !dbg !11859
  %tobool14 = icmp ne %struct.drm_dp_mst_port* %21, null, !dbg !11857
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !11860

if.then15:                                        ; preds = %if.end13
  %22 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11861
  %port_parent16 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %22, i32 0, i32 7, !dbg !11861
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent16, align 8, !dbg !11861
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %23, i32 0, i32 15, !dbg !11861
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !11861
  %25 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11861
  %port_parent17 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %25, i32 0, i32 7, !dbg !11861
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent17, align 8, !dbg !11861
  %27 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11861
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.156, i64 0, i64 0), %struct.drm_dp_mst_branch* %24, %struct.drm_dp_mst_port* %26, %struct.drm_dp_mst_branch* %27) #8, !dbg !11861
  br label %if.end18, !dbg !11861

if.else:                                          ; preds = %if.end13
  %28 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11862
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.157, i64 0, i64 0), %struct.drm_dp_mst_branch* %28) #8, !dbg !11862
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then15
  call void @llvm.dbg.declare(metadata i8** %__mptr19, metadata !11863, metadata !DIExpression()), !dbg !11866
  %29 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11866
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %29, i32 0, i32 6, !dbg !11866
  %next20 = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !11866
  %30 = load %struct.list_head*, %struct.list_head** %next20, align 8, !dbg !11866
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !11866
  store i8* %31, i8** %__mptr19, align 8, !dbg !11866
  br label %do.body21, !dbg !11866

do.body21:                                        ; preds = %if.end18
  br label %do.end22, !dbg !11867

do.end22:                                         ; preds = %do.body21
  %32 = load i8*, i8** %__mptr19, align 8, !dbg !11866
  %add.ptr24 = getelementptr i8, i8* %32, i64 -24, !dbg !11866
  %33 = bitcast i8* %add.ptr24 to %struct.drm_dp_mst_port*, !dbg !11866
  store %struct.drm_dp_mst_port* %33, %struct.drm_dp_mst_port** %tmp23, align 8, !dbg !11867
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp23, align 8, !dbg !11866
  store %struct.drm_dp_mst_port* %34, %struct.drm_dp_mst_port** %port, align 8, !dbg !11869
  br label %for.cond25, !dbg !11869

for.cond25:                                       ; preds = %do.end40, %do.end22
  %35 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11870
  %next26 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %35, i32 0, i32 12, !dbg !11870
  %36 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !11870
  %ports27 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %36, i32 0, i32 6, !dbg !11870
  %cmp28 = icmp eq %struct.list_head* %next26, %ports27, !dbg !11870
  %lnot29 = xor i1 %cmp28, true, !dbg !11870
  br i1 %lnot29, label %for.body30, label %for.end43, !dbg !11869

for.body30:                                       ; preds = %for.cond25
  %37 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11872
  %38 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state.addr, align 8, !dbg !11874
  %call31 = call i32 @drm_dp_mst_atomic_check_port_bw_limit(%struct.drm_dp_mst_port* %37, %struct.drm_dp_mst_topology_state* %38) #8, !dbg !11875
  store i32 %call31, i32* %ret, align 4, !dbg !11876
  %39 = load i32, i32* %ret, align 4, !dbg !11877
  %cmp32 = icmp slt i32 %39, 0, !dbg !11879
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !11880

if.then33:                                        ; preds = %for.body30
  %40 = load i32, i32* %ret, align 4, !dbg !11881
  store i32 %40, i32* %retval, align 4, !dbg !11882
  br label %return, !dbg !11882

if.end34:                                         ; preds = %for.body30
  %41 = load i32, i32* %ret, align 4, !dbg !11883
  %42 = load i32, i32* %pbn_used, align 4, !dbg !11884
  %add = add i32 %42, %41, !dbg !11884
  store i32 %add, i32* %pbn_used, align 4, !dbg !11884
  br label %for.inc35, !dbg !11885

for.inc35:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata i8** %__mptr36, metadata !11886, metadata !DIExpression()), !dbg !11888
  %43 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11888
  %next37 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %43, i32 0, i32 12, !dbg !11888
  %next38 = getelementptr inbounds %struct.list_head, %struct.list_head* %next37, i32 0, i32 0, !dbg !11888
  %44 = load %struct.list_head*, %struct.list_head** %next38, align 8, !dbg !11888
  %45 = bitcast %struct.list_head* %44 to i8*, !dbg !11888
  store i8* %45, i8** %__mptr36, align 8, !dbg !11888
  br label %do.body39, !dbg !11888

do.body39:                                        ; preds = %for.inc35
  br label %do.end40, !dbg !11889

do.end40:                                         ; preds = %do.body39
  %46 = load i8*, i8** %__mptr36, align 8, !dbg !11888
  %add.ptr42 = getelementptr i8, i8* %46, i64 -24, !dbg !11888
  %47 = bitcast i8* %add.ptr42 to %struct.drm_dp_mst_port*, !dbg !11888
  store %struct.drm_dp_mst_port* %47, %struct.drm_dp_mst_port** %tmp41, align 8, !dbg !11889
  %48 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp41, align 8, !dbg !11888
  store %struct.drm_dp_mst_port* %48, %struct.drm_dp_mst_port** %port, align 8, !dbg !11870
  br label %for.cond25, !dbg !11870, !llvm.loop !11891

for.end43:                                        ; preds = %for.cond25
  %49 = load i32, i32* %pbn_used, align 4, !dbg !11893
  store i32 %49, i32* %retval, align 4, !dbg !11894
  br label %return, !dbg !11894

return:                                           ; preds = %for.end43, %if.then33, %if.then12
  %50 = load i32, i32* %retval, align 4, !dbg !11895
  ret i32 %50, !dbg !11895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_private_state* @drm_dp_mst_duplicate_state(%struct.drm_private_obj* %obj) #0 !dbg !11896 {
entry:
  %retval = alloca %struct.drm_private_state*, align 8
  %obj.addr = alloca %struct.drm_private_obj*, align 8
  %state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %old_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_state*, align 8
  %pos = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %vcpi = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp6 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp25 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr28 = alloca i8*, align 8
  %tmp33 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr35 = alloca i8*, align 8
  %tmp40 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr50 = alloca i8*, align 8
  %tmp55 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  store %struct.drm_private_obj* %obj, %struct.drm_private_obj** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_private_obj** %obj.addr, metadata !11897, metadata !DIExpression()), !dbg !11898
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %state, metadata !11899, metadata !DIExpression()), !dbg !11900
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %old_state, metadata !11901, metadata !DIExpression()), !dbg !11902
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11903, metadata !DIExpression()), !dbg !11905
  %0 = load %struct.drm_private_obj*, %struct.drm_private_obj** %obj.addr, align 8, !dbg !11905
  %state1 = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %0, i32 0, i32 2, !dbg !11905
  %1 = load %struct.drm_private_state*, %struct.drm_private_state** %state1, align 8, !dbg !11905
  %2 = bitcast %struct.drm_private_state* %1 to i8*, !dbg !11905
  store i8* %2, i8** %__mptr, align 8, !dbg !11905
  br label %do.body, !dbg !11905

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !11906

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !11905
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !11905
  %4 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_state*, !dbg !11905
  store %struct.drm_dp_mst_topology_state* %4, %struct.drm_dp_mst_topology_state** %tmp, align 8, !dbg !11906
  %5 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %tmp, align 8, !dbg !11905
  store %struct.drm_dp_mst_topology_state* %5, %struct.drm_dp_mst_topology_state** %old_state, align 8, !dbg !11902
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %pos, metadata !11908, metadata !DIExpression()), !dbg !11909
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %vcpi, metadata !11910, metadata !DIExpression()), !dbg !11911
  %6 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %old_state, align 8, !dbg !11912
  %7 = bitcast %struct.drm_dp_mst_topology_state* %6 to i8*, !dbg !11912
  %call = call i8* @kmemdup(i8* %7, i64 32, i32 3264) #8, !dbg !11913
  %8 = bitcast i8* %call to %struct.drm_dp_mst_topology_state*, !dbg !11913
  store %struct.drm_dp_mst_topology_state* %8, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11914
  %9 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11915
  %tobool = icmp ne %struct.drm_dp_mst_topology_state* %9, null, !dbg !11915
  br i1 %tobool, label %if.end, label %if.then, !dbg !11917

if.then:                                          ; preds = %do.end
  store %struct.drm_private_state* null, %struct.drm_private_state** %retval, align 8, !dbg !11918
  br label %return, !dbg !11918

if.end:                                           ; preds = %do.end
  %10 = load %struct.drm_private_obj*, %struct.drm_private_obj** %obj.addr, align 8, !dbg !11919
  %11 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11920
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %11, i32 0, i32 0, !dbg !11921
  call void @__drm_atomic_helper_private_obj_duplicate_state(%struct.drm_private_obj* %10, %struct.drm_private_state* %base) #8, !dbg !11922
  %12 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11923
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %12, i32 0, i32 1, !dbg !11924
  call void @INIT_LIST_HEAD(%struct.list_head* %vcpis) #8, !dbg !11925
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !11926, metadata !DIExpression()), !dbg !11929
  %13 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %old_state, align 8, !dbg !11929
  %vcpis3 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %13, i32 0, i32 1, !dbg !11929
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis3, i32 0, i32 0, !dbg !11929
  %14 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11929
  %15 = bitcast %struct.list_head* %14 to i8*, !dbg !11929
  store i8* %15, i8** %__mptr2, align 8, !dbg !11929
  br label %do.body4, !dbg !11929

do.body4:                                         ; preds = %if.end
  br label %do.end5, !dbg !11930

do.end5:                                          ; preds = %do.body4
  %16 = load i8*, i8** %__mptr2, align 8, !dbg !11929
  %add.ptr7 = getelementptr i8, i8* %16, i64 -24, !dbg !11929
  %17 = bitcast i8* %add.ptr7 to %struct.drm_dp_vcpi_allocation*, !dbg !11929
  store %struct.drm_dp_vcpi_allocation* %17, %struct.drm_dp_vcpi_allocation** %tmp6, align 8, !dbg !11930
  %18 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp6, align 8, !dbg !11929
  store %struct.drm_dp_vcpi_allocation* %18, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11932
  br label %for.cond, !dbg !11932

for.cond:                                         ; preds = %do.end24, %do.end5
  %19 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11933
  %next8 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %19, i32 0, i32 4, !dbg !11933
  %20 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %old_state, align 8, !dbg !11933
  %vcpis9 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %20, i32 0, i32 1, !dbg !11933
  %cmp = icmp eq %struct.list_head* %next8, %vcpis9, !dbg !11933
  %lnot = xor i1 %cmp, true, !dbg !11933
  br i1 %lnot, label %for.body, label %for.end, !dbg !11932

for.body:                                         ; preds = %for.cond
  %21 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11935
  %vcpi10 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %21, i32 0, i32 1, !dbg !11938
  %22 = load i32, i32* %vcpi10, align 8, !dbg !11938
  %tobool11 = icmp ne i32 %22, 0, !dbg !11935
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !11939

if.then12:                                        ; preds = %for.body
  br label %for.inc, !dbg !11940

if.end13:                                         ; preds = %for.body
  %23 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11941
  %24 = bitcast %struct.drm_dp_vcpi_allocation* %23 to i8*, !dbg !11941
  %call14 = call i8* @kmemdup(i8* %24, i64 40, i32 3264) #8, !dbg !11942
  %25 = bitcast i8* %call14 to %struct.drm_dp_vcpi_allocation*, !dbg !11942
  store %struct.drm_dp_vcpi_allocation* %25, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11943
  %26 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11944
  %tobool15 = icmp ne %struct.drm_dp_vcpi_allocation* %26, null, !dbg !11944
  br i1 %tobool15, label %if.end17, label %if.then16, !dbg !11946

if.then16:                                        ; preds = %if.end13
  br label %fail, !dbg !11947

if.end17:                                         ; preds = %if.end13
  %27 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11948
  %port = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %27, i32 0, i32 0, !dbg !11949
  %28 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !11949
  call void @drm_dp_mst_get_port_malloc(%struct.drm_dp_mst_port* %28) #8, !dbg !11950
  %29 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11951
  %next18 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %29, i32 0, i32 4, !dbg !11952
  %30 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11953
  %vcpis19 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %30, i32 0, i32 1, !dbg !11954
  call void @list_add(%struct.list_head* %next18, %struct.list_head* %vcpis19) #8, !dbg !11955
  br label %for.inc, !dbg !11956

for.inc:                                          ; preds = %if.end17, %if.then12
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !11957, metadata !DIExpression()), !dbg !11959
  %31 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11959
  %next21 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %31, i32 0, i32 4, !dbg !11959
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %next21, i32 0, i32 0, !dbg !11959
  %32 = load %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !11959
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !11959
  store i8* %33, i8** %__mptr20, align 8, !dbg !11959
  br label %do.body23, !dbg !11959

do.body23:                                        ; preds = %for.inc
  br label %do.end24, !dbg !11960

do.end24:                                         ; preds = %do.body23
  %34 = load i8*, i8** %__mptr20, align 8, !dbg !11959
  %add.ptr26 = getelementptr i8, i8* %34, i64 -24, !dbg !11959
  %35 = bitcast i8* %add.ptr26 to %struct.drm_dp_vcpi_allocation*, !dbg !11959
  store %struct.drm_dp_vcpi_allocation* %35, %struct.drm_dp_vcpi_allocation** %tmp25, align 8, !dbg !11960
  %36 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp25, align 8, !dbg !11959
  store %struct.drm_dp_vcpi_allocation* %36, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11933
  br label %for.cond, !dbg !11933, !llvm.loop !11962

for.end:                                          ; preds = %for.cond
  %37 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11964
  %base27 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %37, i32 0, i32 0, !dbg !11965
  store %struct.drm_private_state* %base27, %struct.drm_private_state** %retval, align 8, !dbg !11966
  br label %return, !dbg !11966

fail:                                             ; preds = %if.then16
  call void @llvm.dbg.label(metadata !11967), !dbg !11968
  call void @llvm.dbg.declare(metadata i8** %__mptr28, metadata !11969, metadata !DIExpression()), !dbg !11972
  %38 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11972
  %vcpis29 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %38, i32 0, i32 1, !dbg !11972
  %next30 = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis29, i32 0, i32 0, !dbg !11972
  %39 = load %struct.list_head*, %struct.list_head** %next30, align 8, !dbg !11972
  %40 = bitcast %struct.list_head* %39 to i8*, !dbg !11972
  store i8* %40, i8** %__mptr28, align 8, !dbg !11972
  br label %do.body31, !dbg !11972

do.body31:                                        ; preds = %fail
  br label %do.end32, !dbg !11973

do.end32:                                         ; preds = %do.body31
  %41 = load i8*, i8** %__mptr28, align 8, !dbg !11972
  %add.ptr34 = getelementptr i8, i8* %41, i64 -24, !dbg !11972
  %42 = bitcast i8* %add.ptr34 to %struct.drm_dp_vcpi_allocation*, !dbg !11972
  store %struct.drm_dp_vcpi_allocation* %42, %struct.drm_dp_vcpi_allocation** %tmp33, align 8, !dbg !11973
  %43 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp33, align 8, !dbg !11972
  store %struct.drm_dp_vcpi_allocation* %43, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11975
  call void @llvm.dbg.declare(metadata i8** %__mptr35, metadata !11976, metadata !DIExpression()), !dbg !11978
  %44 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11978
  %next36 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %44, i32 0, i32 4, !dbg !11978
  %next37 = getelementptr inbounds %struct.list_head, %struct.list_head* %next36, i32 0, i32 0, !dbg !11978
  %45 = load %struct.list_head*, %struct.list_head** %next37, align 8, !dbg !11978
  %46 = bitcast %struct.list_head* %45 to i8*, !dbg !11978
  store i8* %46, i8** %__mptr35, align 8, !dbg !11978
  br label %do.body38, !dbg !11978

do.body38:                                        ; preds = %do.end32
  br label %do.end39, !dbg !11979

do.end39:                                         ; preds = %do.body38
  %47 = load i8*, i8** %__mptr35, align 8, !dbg !11978
  %add.ptr41 = getelementptr i8, i8* %47, i64 -24, !dbg !11978
  %48 = bitcast i8* %add.ptr41 to %struct.drm_dp_vcpi_allocation*, !dbg !11978
  store %struct.drm_dp_vcpi_allocation* %48, %struct.drm_dp_vcpi_allocation** %tmp40, align 8, !dbg !11979
  %49 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp40, align 8, !dbg !11978
  store %struct.drm_dp_vcpi_allocation* %49, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11975
  br label %for.cond42, !dbg !11975

for.cond42:                                       ; preds = %do.end54, %do.end39
  %50 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11981
  %next43 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %50, i32 0, i32 4, !dbg !11981
  %51 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11981
  %vcpis44 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %51, i32 0, i32 1, !dbg !11981
  %cmp45 = icmp eq %struct.list_head* %next43, %vcpis44, !dbg !11981
  %lnot46 = xor i1 %cmp45, true, !dbg !11981
  br i1 %lnot46, label %for.body47, label %for.end57, !dbg !11975

for.body47:                                       ; preds = %for.cond42
  %52 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11983
  %port48 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %52, i32 0, i32 0, !dbg !11985
  %53 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port48, align 8, !dbg !11985
  call void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %53) #8, !dbg !11986
  %54 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11987
  %55 = bitcast %struct.drm_dp_vcpi_allocation* %54 to i8*, !dbg !11987
  call void @kfree(i8* %55) #8, !dbg !11988
  br label %for.inc49, !dbg !11989

for.inc49:                                        ; preds = %for.body47
  %56 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11981
  store %struct.drm_dp_vcpi_allocation* %56, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !11981
  call void @llvm.dbg.declare(metadata i8** %__mptr50, metadata !11990, metadata !DIExpression()), !dbg !11992
  %57 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11992
  %next51 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %57, i32 0, i32 4, !dbg !11992
  %next52 = getelementptr inbounds %struct.list_head, %struct.list_head* %next51, i32 0, i32 0, !dbg !11992
  %58 = load %struct.list_head*, %struct.list_head** %next52, align 8, !dbg !11992
  %59 = bitcast %struct.list_head* %58 to i8*, !dbg !11992
  store i8* %59, i8** %__mptr50, align 8, !dbg !11992
  br label %do.body53, !dbg !11992

do.body53:                                        ; preds = %for.inc49
  br label %do.end54, !dbg !11993

do.end54:                                         ; preds = %do.body53
  %60 = load i8*, i8** %__mptr50, align 8, !dbg !11992
  %add.ptr56 = getelementptr i8, i8* %60, i64 -24, !dbg !11992
  %61 = bitcast i8* %add.ptr56 to %struct.drm_dp_vcpi_allocation*, !dbg !11992
  store %struct.drm_dp_vcpi_allocation* %61, %struct.drm_dp_vcpi_allocation** %tmp55, align 8, !dbg !11993
  %62 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp55, align 8, !dbg !11992
  store %struct.drm_dp_vcpi_allocation* %62, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !11981
  br label %for.cond42, !dbg !11981, !llvm.loop !11995

for.end57:                                        ; preds = %for.cond42
  %63 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state, align 8, !dbg !11997
  %64 = bitcast %struct.drm_dp_mst_topology_state* %63 to i8*, !dbg !11997
  call void @kfree(i8* %64) #8, !dbg !11998
  store %struct.drm_private_state* null, %struct.drm_private_state** %retval, align 8, !dbg !11999
  br label %return, !dbg !11999

return:                                           ; preds = %for.end57, %for.end, %if.then
  %65 = load %struct.drm_private_state*, %struct.drm_private_state** %retval, align 8, !dbg !12000
  ret %struct.drm_private_state* %65, !dbg !12000
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_destroy_state(%struct.drm_private_obj* %obj, %struct.drm_private_state* %state) #0 !dbg !12001 {
entry:
  %obj.addr = alloca %struct.drm_private_obj*, align 8
  %state.addr = alloca %struct.drm_private_state*, align 8
  %mst_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_state*, align 8
  %pos = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %tmp1 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp5 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  store %struct.drm_private_obj* %obj, %struct.drm_private_obj** %obj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_private_obj** %obj.addr, metadata !12002, metadata !DIExpression()), !dbg !12003
  store %struct.drm_private_state* %state, %struct.drm_private_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_private_state** %state.addr, metadata !12004, metadata !DIExpression()), !dbg !12005
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %mst_state, metadata !12006, metadata !DIExpression()), !dbg !12007
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12008, metadata !DIExpression()), !dbg !12010
  %0 = load %struct.drm_private_state*, %struct.drm_private_state** %state.addr, align 8, !dbg !12010
  %1 = bitcast %struct.drm_private_state* %0 to i8*, !dbg !12010
  store i8* %1, i8** %__mptr, align 8, !dbg !12010
  br label %do.body, !dbg !12010

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12011

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12010
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !12010
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_state*, !dbg !12010
  store %struct.drm_dp_mst_topology_state* %3, %struct.drm_dp_mst_topology_state** %tmp, align 8, !dbg !12011
  %4 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %tmp, align 8, !dbg !12010
  store %struct.drm_dp_mst_topology_state* %4, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12007
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %pos, metadata !12013, metadata !DIExpression()), !dbg !12014
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %tmp1, metadata !12015, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !12017, metadata !DIExpression()), !dbg !12020
  %5 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12020
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %5, i32 0, i32 1, !dbg !12020
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !12020
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12020
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !12020
  store i8* %7, i8** %__mptr2, align 8, !dbg !12020
  br label %do.body3, !dbg !12020

do.body3:                                         ; preds = %do.end
  br label %do.end4, !dbg !12021

do.end4:                                          ; preds = %do.body3
  %8 = load i8*, i8** %__mptr2, align 8, !dbg !12020
  %add.ptr6 = getelementptr i8, i8* %8, i64 -24, !dbg !12020
  %9 = bitcast i8* %add.ptr6 to %struct.drm_dp_vcpi_allocation*, !dbg !12020
  store %struct.drm_dp_vcpi_allocation* %9, %struct.drm_dp_vcpi_allocation** %tmp5, align 8, !dbg !12021
  %10 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp5, align 8, !dbg !12020
  store %struct.drm_dp_vcpi_allocation* %10, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !12023
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !12024, metadata !DIExpression()), !dbg !12026
  %11 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !12026
  %next8 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %11, i32 0, i32 4, !dbg !12026
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %next8, i32 0, i32 0, !dbg !12026
  %12 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !12026
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !12026
  store i8* %13, i8** %__mptr7, align 8, !dbg !12026
  br label %do.body10, !dbg !12026

do.body10:                                        ; preds = %do.end4
  br label %do.end11, !dbg !12027

do.end11:                                         ; preds = %do.body10
  %14 = load i8*, i8** %__mptr7, align 8, !dbg !12026
  %add.ptr13 = getelementptr i8, i8* %14, i64 -24, !dbg !12026
  %15 = bitcast i8* %add.ptr13 to %struct.drm_dp_vcpi_allocation*, !dbg !12026
  store %struct.drm_dp_vcpi_allocation* %15, %struct.drm_dp_vcpi_allocation** %tmp12, align 8, !dbg !12027
  %16 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp12, align 8, !dbg !12026
  store %struct.drm_dp_vcpi_allocation* %16, %struct.drm_dp_vcpi_allocation** %tmp1, align 8, !dbg !12023
  br label %for.cond, !dbg !12023

for.cond:                                         ; preds = %do.end20, %do.end11
  %17 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !12029
  %next14 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %17, i32 0, i32 4, !dbg !12029
  %18 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12029
  %vcpis15 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %18, i32 0, i32 1, !dbg !12029
  %cmp = icmp eq %struct.list_head* %next14, %vcpis15, !dbg !12029
  %lnot = xor i1 %cmp, true, !dbg !12029
  br i1 %lnot, label %for.body, label %for.end, !dbg !12023

for.body:                                         ; preds = %for.cond
  %19 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !12031
  %vcpi = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %19, i32 0, i32 1, !dbg !12034
  %20 = load i32, i32* %vcpi, align 8, !dbg !12034
  %tobool = icmp ne i32 %20, 0, !dbg !12031
  br i1 %tobool, label %if.then, label %if.end, !dbg !12035

if.then:                                          ; preds = %for.body
  %21 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !12036
  %port = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %21, i32 0, i32 0, !dbg !12037
  %22 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12037
  call void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %22) #8, !dbg !12038
  br label %if.end, !dbg !12038

if.end:                                           ; preds = %if.then, %for.body
  %23 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !12039
  %24 = bitcast %struct.drm_dp_vcpi_allocation* %23 to i8*, !dbg !12039
  call void @kfree(i8* %24) #8, !dbg !12040
  br label %for.inc, !dbg !12041

for.inc:                                          ; preds = %if.end
  %25 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp1, align 8, !dbg !12029
  store %struct.drm_dp_vcpi_allocation* %25, %struct.drm_dp_vcpi_allocation** %pos, align 8, !dbg !12029
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !12042, metadata !DIExpression()), !dbg !12044
  %26 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp1, align 8, !dbg !12044
  %next17 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %26, i32 0, i32 4, !dbg !12044
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %next17, i32 0, i32 0, !dbg !12044
  %27 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !12044
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !12044
  store i8* %28, i8** %__mptr16, align 8, !dbg !12044
  br label %do.body19, !dbg !12044

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !12045

do.end20:                                         ; preds = %do.body19
  %29 = load i8*, i8** %__mptr16, align 8, !dbg !12044
  %add.ptr22 = getelementptr i8, i8* %29, i64 -24, !dbg !12044
  %30 = bitcast i8* %add.ptr22 to %struct.drm_dp_vcpi_allocation*, !dbg !12044
  store %struct.drm_dp_vcpi_allocation* %30, %struct.drm_dp_vcpi_allocation** %tmp21, align 8, !dbg !12045
  %31 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp21, align 8, !dbg !12044
  store %struct.drm_dp_vcpi_allocation* %31, %struct.drm_dp_vcpi_allocation** %tmp1, align 8, !dbg !12029
  br label %for.cond, !dbg !12029, !llvm.loop !12047

for.end:                                          ; preds = %for.cond
  %32 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12049
  %33 = bitcast %struct.drm_dp_mst_topology_state* %32 to i8*, !dbg !12049
  call void @kfree(i8* %33) #8, !dbg !12050
  ret void, !dbg !12051
}

; Function Attrs: noredzone
declare dso_local %struct.drm_private_state* @drm_atomic_get_private_obj_state(%struct.drm_atomic_state*, %struct.drm_private_obj*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @drm_dp_mst_topology_mgr_init(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_device* %dev, %struct.drm_dp_aux* %aux, i32 %max_dpcd_transaction_bytes, i32 %max_payloads, i32 %conn_base_id) #0 !dbg !6220 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %aux.addr = alloca %struct.drm_dp_aux*, align 8
  %max_dpcd_transaction_bytes.addr = alloca i32, align 4
  %max_payloads.addr = alloca i32, align 4
  %conn_base_id.addr = alloca i32, align 4
  %mst_state = alloca %struct.drm_dp_mst_topology_state*, align 8
  %.compoundliteral = alloca %struct.atomic64_t, align 8
  %.compoundliteral21 = alloca %struct.atomic64_t, align 8
  %.compoundliteral31 = alloca %struct.atomic64_t, align 8
  %.compoundliteral41 = alloca %struct.atomic64_t, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !12052, metadata !DIExpression()), !dbg !12053
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !12054, metadata !DIExpression()), !dbg !12055
  store %struct.drm_dp_aux* %aux, %struct.drm_dp_aux** %aux.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux.addr, metadata !12056, metadata !DIExpression()), !dbg !12057
  store i32 %max_dpcd_transaction_bytes, i32* %max_dpcd_transaction_bytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_dpcd_transaction_bytes.addr, metadata !12058, metadata !DIExpression()), !dbg !12059
  store i32 %max_payloads, i32* %max_payloads.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_payloads.addr, metadata !12060, metadata !DIExpression()), !dbg !12061
  store i32 %conn_base_id, i32* %conn_base_id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %conn_base_id.addr, metadata !12062, metadata !DIExpression()), !dbg !12063
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %mst_state, metadata !12064, metadata !DIExpression()), !dbg !12065
  br label %do.body, !dbg !12066

do.body:                                          ; preds = %entry
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12067
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !12067
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.55, i64 0, i64 0), %struct.lock_class_key* @drm_dp_mst_topology_mgr_init.__key) #8, !dbg !12067
  br label %do.end, !dbg !12067

do.end:                                           ; preds = %do.body
  br label %do.body1, !dbg !12069

do.body1:                                         ; preds = %do.end
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12070
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 17, !dbg !12070
  call void @__mutex_init(%struct.mutex* %qlock, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.57, i64 0, i64 0), %struct.lock_class_key* @drm_dp_mst_topology_mgr_init.__key.56) #8, !dbg !12070
  br label %do.end2, !dbg !12070

do.end2:                                          ; preds = %do.body1
  br label %do.body3, !dbg !12072

do.body3:                                         ; preds = %do.end2
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12073
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 19, !dbg !12073
  call void @__mutex_init(%struct.mutex* %payload_lock, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.59, i64 0, i64 0), %struct.lock_class_key* @drm_dp_mst_topology_mgr_init.__key.58) #8, !dbg !12073
  br label %do.end4, !dbg !12073

do.end4:                                          ; preds = %do.body3
  br label %do.body5, !dbg !12075

do.body5:                                         ; preds = %do.end4
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12076
  %delayed_destroy_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 29, !dbg !12076
  call void @__mutex_init(%struct.mutex* %delayed_destroy_lock, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.61, i64 0, i64 0), %struct.lock_class_key* @drm_dp_mst_topology_mgr_init.__key.60) #8, !dbg !12076
  br label %do.end6, !dbg !12076

do.end6:                                          ; preds = %do.body5
  br label %do.body7, !dbg !12078

do.body7:                                         ; preds = %do.end6
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12079
  %up_req_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 33, !dbg !12079
  call void @__mutex_init(%struct.mutex* %up_req_lock, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), %struct.lock_class_key* @drm_dp_mst_topology_mgr_init.__key.62) #8, !dbg !12079
  br label %do.end8, !dbg !12079

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !12081

do.body9:                                         ; preds = %do.end8
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12082
  %probe_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 10, !dbg !12082
  call void @__mutex_init(%struct.mutex* %probe_lock, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0), %struct.lock_class_key* @drm_dp_mst_topology_mgr_init.__key.64) #8, !dbg !12082
  br label %do.end10, !dbg !12082

do.end10:                                         ; preds = %do.body9
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12084
  %tx_msg_downq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 18, !dbg !12085
  call void @INIT_LIST_HEAD(%struct.list_head* %tx_msg_downq) #8, !dbg !12086
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12087
  %destroy_port_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 27, !dbg !12088
  call void @INIT_LIST_HEAD(%struct.list_head* %destroy_port_list) #8, !dbg !12089
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12090
  %destroy_branch_device_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 28, !dbg !12091
  call void @INIT_LIST_HEAD(%struct.list_head* %destroy_branch_device_list) #8, !dbg !12092
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12093
  %up_req_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 32, !dbg !12094
  call void @INIT_LIST_HEAD(%struct.list_head* %up_req_list) #8, !dbg !12095
  %call = call %struct.workqueue_struct* (i8*, i32, i32, ...) @alloc_workqueue(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.66, i64 0, i64 0), i32 655362, i32 1) #8, !dbg !12096
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12097
  %delayed_destroy_wq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %10, i32 0, i32 30, !dbg !12098
  store %struct.workqueue_struct* %call, %struct.workqueue_struct** %delayed_destroy_wq, align 8, !dbg !12099
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12100
  %delayed_destroy_wq11 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %11, i32 0, i32 30, !dbg !12102
  %12 = load %struct.workqueue_struct*, %struct.workqueue_struct** %delayed_destroy_wq11, align 8, !dbg !12102
  %cmp = icmp eq %struct.workqueue_struct* %12, null, !dbg !12103
  br i1 %cmp, label %if.then, label %if.end, !dbg !12104

if.then:                                          ; preds = %do.end10
  store i32 -12, i32* %retval, align 4, !dbg !12105
  br label %return, !dbg !12105

if.end:                                           ; preds = %do.end10
  br label %do.body12, !dbg !12106

do.body12:                                        ; preds = %if.end
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12107
  %work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 25, !dbg !12107
  call void @__init_work(%struct.work_struct* %work, i32 0) #8, !dbg !12107
  %14 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12107
  %work13 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %14, i32 0, i32 25, !dbg !12107
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work13, i32 0, i32 0, !dbg !12107
  %counter = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral, i32 0, i32 0, !dbg !12107
  store i64 68719476704, i64* %counter, align 8, !dbg !12107
  %15 = bitcast %struct.atomic64_t* %data to i8*, !dbg !12107
  %16 = bitcast %struct.atomic64_t* %.compoundliteral to i8*, !dbg !12107
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 8, i1 false), !dbg !12107
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12107
  %work14 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 25, !dbg !12107
  %entry15 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work14, i32 0, i32 1, !dbg !12107
  call void @INIT_LIST_HEAD(%struct.list_head* %entry15) #8, !dbg !12107
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12107
  %work16 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 25, !dbg !12107
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %work16, i32 0, i32 2, !dbg !12107
  store void (%struct.work_struct*)* @drm_dp_mst_link_probe_work, void (%struct.work_struct*)** %func, align 8, !dbg !12107
  br label %do.end17, !dbg !12107

do.end17:                                         ; preds = %do.body12
  br label %do.body18, !dbg !12109

do.body18:                                        ; preds = %do.end17
  %19 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12110
  %tx_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %19, i32 0, i32 26, !dbg !12110
  call void @__init_work(%struct.work_struct* %tx_work, i32 0) #8, !dbg !12110
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12110
  %tx_work19 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %20, i32 0, i32 26, !dbg !12110
  %data20 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %tx_work19, i32 0, i32 0, !dbg !12110
  %counter22 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral21, i32 0, i32 0, !dbg !12110
  store i64 68719476704, i64* %counter22, align 8, !dbg !12110
  %21 = bitcast %struct.atomic64_t* %data20 to i8*, !dbg !12110
  %22 = bitcast %struct.atomic64_t* %.compoundliteral21 to i8*, !dbg !12110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 8, i1 false), !dbg !12110
  %23 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12110
  %tx_work23 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %23, i32 0, i32 26, !dbg !12110
  %entry24 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %tx_work23, i32 0, i32 1, !dbg !12110
  call void @INIT_LIST_HEAD(%struct.list_head* %entry24) #8, !dbg !12110
  %24 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12110
  %tx_work25 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %24, i32 0, i32 26, !dbg !12110
  %func26 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %tx_work25, i32 0, i32 2, !dbg !12110
  store void (%struct.work_struct*)* @drm_dp_tx_work, void (%struct.work_struct*)** %func26, align 8, !dbg !12110
  br label %do.end27, !dbg !12110

do.end27:                                         ; preds = %do.body18
  br label %do.body28, !dbg !12112

do.body28:                                        ; preds = %do.end27
  %25 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12113
  %delayed_destroy_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %25, i32 0, i32 31, !dbg !12113
  call void @__init_work(%struct.work_struct* %delayed_destroy_work, i32 0) #8, !dbg !12113
  %26 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12113
  %delayed_destroy_work29 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %26, i32 0, i32 31, !dbg !12113
  %data30 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %delayed_destroy_work29, i32 0, i32 0, !dbg !12113
  %counter32 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral31, i32 0, i32 0, !dbg !12113
  store i64 68719476704, i64* %counter32, align 8, !dbg !12113
  %27 = bitcast %struct.atomic64_t* %data30 to i8*, !dbg !12113
  %28 = bitcast %struct.atomic64_t* %.compoundliteral31 to i8*, !dbg !12113
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 8, i1 false), !dbg !12113
  %29 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12113
  %delayed_destroy_work33 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %29, i32 0, i32 31, !dbg !12113
  %entry34 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %delayed_destroy_work33, i32 0, i32 1, !dbg !12113
  call void @INIT_LIST_HEAD(%struct.list_head* %entry34) #8, !dbg !12113
  %30 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12113
  %delayed_destroy_work35 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %30, i32 0, i32 31, !dbg !12113
  %func36 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %delayed_destroy_work35, i32 0, i32 2, !dbg !12113
  store void (%struct.work_struct*)* @drm_dp_delayed_destroy_work, void (%struct.work_struct*)** %func36, align 8, !dbg !12113
  br label %do.end37, !dbg !12113

do.end37:                                         ; preds = %do.body28
  br label %do.body38, !dbg !12115

do.body38:                                        ; preds = %do.end37
  %31 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12116
  %up_req_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %31, i32 0, i32 34, !dbg !12116
  call void @__init_work(%struct.work_struct* %up_req_work, i32 0) #8, !dbg !12116
  %32 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12116
  %up_req_work39 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %32, i32 0, i32 34, !dbg !12116
  %data40 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %up_req_work39, i32 0, i32 0, !dbg !12116
  %counter42 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %.compoundliteral41, i32 0, i32 0, !dbg !12116
  store i64 68719476704, i64* %counter42, align 8, !dbg !12116
  %33 = bitcast %struct.atomic64_t* %data40 to i8*, !dbg !12116
  %34 = bitcast %struct.atomic64_t* %.compoundliteral41 to i8*, !dbg !12116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %33, i8* align 8 %34, i64 8, i1 false), !dbg !12116
  %35 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12116
  %up_req_work43 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %35, i32 0, i32 34, !dbg !12116
  %entry44 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %up_req_work43, i32 0, i32 1, !dbg !12116
  call void @INIT_LIST_HEAD(%struct.list_head* %entry44) #8, !dbg !12116
  %36 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12116
  %up_req_work45 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %36, i32 0, i32 34, !dbg !12116
  %func46 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %up_req_work45, i32 0, i32 2, !dbg !12116
  store void (%struct.work_struct*)* @drm_dp_mst_up_req_work, void (%struct.work_struct*)** %func46, align 8, !dbg !12116
  br label %do.end47, !dbg !12116

do.end47:                                         ; preds = %do.body38
  br label %do.body48, !dbg !12118

do.body48:                                        ; preds = %do.end47
  %37 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12119
  %tx_waitq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %37, i32 0, i32 24, !dbg !12119
  call void @__init_waitqueue_head(%struct.wait_queue_head* %tx_waitq, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.68, i64 0, i64 0), %struct.lock_class_key* @drm_dp_mst_topology_mgr_init.__key.67) #8, !dbg !12119
  br label %do.end49, !dbg !12119

do.end49:                                         ; preds = %do.body48
  %38 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12121
  %39 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12122
  %dev50 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %39, i32 0, i32 1, !dbg !12123
  store %struct.drm_device* %38, %struct.drm_device** %dev50, align 8, !dbg !12124
  %40 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux.addr, align 8, !dbg !12125
  %41 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12126
  %aux51 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %41, i32 0, i32 4, !dbg !12127
  store %struct.drm_dp_aux* %40, %struct.drm_dp_aux** %aux51, align 8, !dbg !12128
  %42 = load i32, i32* %max_dpcd_transaction_bytes.addr, align 4, !dbg !12129
  %43 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12130
  %max_dpcd_transaction_bytes52 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %43, i32 0, i32 3, !dbg !12131
  store i32 %42, i32* %max_dpcd_transaction_bytes52, align 8, !dbg !12132
  %44 = load i32, i32* %max_payloads.addr, align 4, !dbg !12133
  %45 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12134
  %max_payloads53 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %45, i32 0, i32 5, !dbg !12135
  store i32 %44, i32* %max_payloads53, align 8, !dbg !12136
  %46 = load i32, i32* %conn_base_id.addr, align 4, !dbg !12137
  %47 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12138
  %conn_base_id54 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %47, i32 0, i32 6, !dbg !12139
  store i32 %46, i32* %conn_base_id54, align 4, !dbg !12140
  %48 = load i32, i32* %max_payloads.addr, align 4, !dbg !12141
  %add = add i32 %48, 1, !dbg !12143
  %conv = sext i32 %add to i64, !dbg !12141
  %cmp55 = icmp ugt i64 %conv, 64, !dbg !12144
  br i1 %cmp55, label %if.then61, label %lor.lhs.false, !dbg !12145

lor.lhs.false:                                    ; preds = %do.end49
  %49 = load i32, i32* %max_payloads.addr, align 4, !dbg !12146
  %add57 = add i32 %49, 1, !dbg !12147
  %conv58 = sext i32 %add57 to i64, !dbg !12146
  %cmp59 = icmp ugt i64 %conv58, 64, !dbg !12148
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !12149

if.then61:                                        ; preds = %lor.lhs.false, %do.end49
  store i32 -22, i32* %retval, align 4, !dbg !12150
  br label %return, !dbg !12150

if.end62:                                         ; preds = %lor.lhs.false
  %50 = load i32, i32* %max_payloads.addr, align 4, !dbg !12151
  %conv63 = sext i32 %50 to i64, !dbg !12151
  %call64 = call i8* @kcalloc(i64 %conv63, i64 16, i32 3264) #8, !dbg !12152
  %51 = bitcast i8* %call64 to %struct.drm_dp_payload*, !dbg !12152
  %52 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12153
  %payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %52, i32 0, i32 21, !dbg !12154
  store %struct.drm_dp_payload* %51, %struct.drm_dp_payload** %payloads, align 8, !dbg !12155
  %53 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12156
  %payloads65 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %53, i32 0, i32 21, !dbg !12158
  %54 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads65, align 8, !dbg !12158
  %tobool = icmp ne %struct.drm_dp_payload* %54, null, !dbg !12156
  br i1 %tobool, label %if.end67, label %if.then66, !dbg !12159

if.then66:                                        ; preds = %if.end62
  store i32 -12, i32* %retval, align 4, !dbg !12160
  br label %return, !dbg !12160

if.end67:                                         ; preds = %if.end62
  %55 = load i32, i32* %max_payloads.addr, align 4, !dbg !12161
  %conv68 = sext i32 %55 to i64, !dbg !12161
  %call69 = call i8* @kcalloc(i64 %conv68, i64 8, i32 3264) #8, !dbg !12162
  %56 = bitcast i8* %call69 to %struct.drm_dp_vcpi**, !dbg !12162
  %57 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12163
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %57, i32 0, i32 20, !dbg !12164
  store %struct.drm_dp_vcpi** %56, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !12165
  %58 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12166
  %proposed_vcpis70 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %58, i32 0, i32 20, !dbg !12168
  %59 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis70, align 8, !dbg !12168
  %tobool71 = icmp ne %struct.drm_dp_vcpi** %59, null, !dbg !12166
  br i1 %tobool71, label %if.end73, label %if.then72, !dbg !12169

if.then72:                                        ; preds = %if.end67
  store i32 -12, i32* %retval, align 4, !dbg !12170
  br label %return, !dbg !12170

if.end73:                                         ; preds = %if.end67
  %60 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12171
  %payload_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %60, i32 0, i32 22, !dbg !12172
  call void @set_bit(i64 0, i64* %payload_mask) #8, !dbg !12173
  %call74 = call i8* @kzalloc(i64 32, i32 3264) #8, !dbg !12174
  %61 = bitcast i8* %call74 to %struct.drm_dp_mst_topology_state*, !dbg !12174
  store %struct.drm_dp_mst_topology_state* %61, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12175
  %62 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12176
  %cmp75 = icmp eq %struct.drm_dp_mst_topology_state* %62, null, !dbg !12178
  br i1 %cmp75, label %if.then77, label %if.end78, !dbg !12179

if.then77:                                        ; preds = %if.end73
  store i32 -12, i32* %retval, align 4, !dbg !12180
  br label %return, !dbg !12180

if.end78:                                         ; preds = %if.end73
  %63 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12181
  %64 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12182
  %mgr79 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %64, i32 0, i32 2, !dbg !12183
  store %struct.drm_dp_mst_topology_mgr* %63, %struct.drm_dp_mst_topology_mgr** %mgr79, align 8, !dbg !12184
  %65 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12185
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %65, i32 0, i32 1, !dbg !12186
  call void @INIT_LIST_HEAD(%struct.list_head* %vcpis) #8, !dbg !12187
  %66 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !12188
  %67 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12189
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %67, i32 0, i32 0, !dbg !12190
  %68 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %mst_state, align 8, !dbg !12191
  %base80 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %68, i32 0, i32 0, !dbg !12192
  call void @drm_atomic_private_obj_init(%struct.drm_device* %66, %struct.drm_private_obj* %base, %struct.drm_private_state* %base80, %struct.drm_private_state_funcs* @drm_dp_mst_topology_state_funcs) #8, !dbg !12193
  store i32 0, i32* %retval, align 4, !dbg !12194
  br label %return, !dbg !12194

return:                                           ; preds = %if.end78, %if.then77, %if.then72, %if.then66, %if.then61, %if.then
  %69 = load i32, i32* %retval, align 4, !dbg !12195
  ret i32 %69, !dbg !12195
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !12196 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !12199, metadata !DIExpression()), !dbg !12200
  br label %do.body, !dbg !12201

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12202

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !12204

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !12202

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12206
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12206
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !12206
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !12206
  br label %do.end3, !dbg !12206

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !12202

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12208
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !12209
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !12210
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !12211
  ret void, !dbg !12212
}

; Function Attrs: noredzone
declare dso_local %struct.workqueue_struct* @alloc_workqueue(i8*, i32, i32, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_work(%struct.work_struct* %work, i32 %onstack) #0 !dbg !12213 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %onstack.addr = alloca i32, align 4
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12216, metadata !DIExpression()), !dbg !12217
  store i32 %onstack, i32* %onstack.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %onstack.addr, metadata !12218, metadata !DIExpression()), !dbg !12219
  ret void, !dbg !12220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_link_probe_work(%struct.work_struct* %work) #0 !dbg !12221 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %dev = alloca %struct.drm_device*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %ret = alloca i32, align 4
  %clear_payload_id_table = alloca i8, align 1
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12222, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !12224, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12226, metadata !DIExpression()), !dbg !12228
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12228
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !12228
  store i8* %1, i8** %__mptr, align 8, !dbg !12228
  br label %do.body, !dbg !12228

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12229

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12228
  %add.ptr = getelementptr i8, i8* %2, i64 -984, !dbg !12228
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_mgr*, !dbg !12228
  store %struct.drm_dp_mst_topology_mgr* %3, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12229
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12228
  store %struct.drm_dp_mst_topology_mgr* %4, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12225
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev, metadata !12231, metadata !DIExpression()), !dbg !12232
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12233
  %dev1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 1, !dbg !12234
  %6 = load %struct.drm_device*, %struct.drm_device** %dev1, align 8, !dbg !12234
  store %struct.drm_device* %6, %struct.drm_device** %dev, align 8, !dbg !12232
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !12235, metadata !DIExpression()), !dbg !12236
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !12237, metadata !DIExpression()), !dbg !12238
  call void @llvm.dbg.declare(metadata i8* %clear_payload_id_table, metadata !12239, metadata !DIExpression()), !dbg !12240
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12241
  %probe_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 10, !dbg !12242
  call void @mutex_lock(%struct.mutex* %probe_lock) #8, !dbg !12243
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12244
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 9, !dbg !12245
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !12246
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12247
  %payload_id_table_cleared = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 11, !dbg !12248
  %bf.load = load i8, i8* %payload_id_table_cleared, align 8, !dbg !12248
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !12248
  %bf.clear = and i8 %bf.lshr, 1, !dbg !12248
  %bf.cast = trunc i8 %bf.clear to i1, !dbg !12248
  %lnot = xor i1 %bf.cast, true, !dbg !12249
  %frombool = zext i1 %lnot to i8, !dbg !12250
  store i8 %frombool, i8* %clear_payload_id_table, align 1, !dbg !12250
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12251
  %payload_id_table_cleared2 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %10, i32 0, i32 11, !dbg !12252
  %bf.load3 = load i8, i8* %payload_id_table_cleared2, align 8, !dbg !12253
  %bf.clear4 = and i8 %bf.load3, -3, !dbg !12253
  %bf.set = or i8 %bf.clear4, 2, !dbg !12253
  store i8 %bf.set, i8* %payload_id_table_cleared2, align 8, !dbg !12253
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12254
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %11, i32 0, i32 12, !dbg !12255
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !12255
  store %struct.drm_dp_mst_branch* %12, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12256
  %13 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12257
  %tobool = icmp ne %struct.drm_dp_mst_branch* %13, null, !dbg !12257
  br i1 %tobool, label %if.then, label %if.end7, !dbg !12259

if.then:                                          ; preds = %do.end
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12260
  %call = call i32 @drm_dp_mst_topology_try_get_mstb(%struct.drm_dp_mst_branch* %14) #8, !dbg !12262
  store i32 %call, i32* %ret, align 4, !dbg !12263
  %15 = load i32, i32* %ret, align 4, !dbg !12264
  %tobool5 = icmp ne i32 %15, 0, !dbg !12264
  br i1 %tobool5, label %if.end, label %if.then6, !dbg !12266

if.then6:                                         ; preds = %if.then
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12267
  br label %if.end, !dbg !12268

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end7, !dbg !12269

if.end7:                                          ; preds = %if.end, %do.end
  %16 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12270
  %lock8 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %16, i32 0, i32 9, !dbg !12271
  call void @mutex_unlock(%struct.mutex* %lock8) #8, !dbg !12272
  %17 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12273
  %tobool9 = icmp ne %struct.drm_dp_mst_branch* %17, null, !dbg !12273
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !12275

if.then10:                                        ; preds = %if.end7
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12276
  %probe_lock11 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 10, !dbg !12278
  call void @mutex_unlock(%struct.mutex* %probe_lock11) #8, !dbg !12279
  br label %if.end20, !dbg !12280

if.end12:                                         ; preds = %if.end7
  %19 = load i8, i8* %clear_payload_id_table, align 1, !dbg !12281
  %tobool13 = trunc i8 %19 to i1, !dbg !12281
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !12283

if.then14:                                        ; preds = %if.end12
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.160, i64 0, i64 0)) #8, !dbg !12284
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12286
  %21 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12287
  call void @drm_dp_send_clear_payload_id_table(%struct.drm_dp_mst_topology_mgr* %20, %struct.drm_dp_mst_branch* %21) #8, !dbg !12288
  br label %if.end15, !dbg !12289

if.end15:                                         ; preds = %if.then14, %if.end12
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12290
  %23 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12291
  %call16 = call i32 @drm_dp_check_and_send_link_address(%struct.drm_dp_mst_topology_mgr* %22, %struct.drm_dp_mst_branch* %23) #8, !dbg !12292
  store i32 %call16, i32* %ret, align 4, !dbg !12293
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12294
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %24) #8, !dbg !12295
  %25 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12296
  %probe_lock17 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %25, i32 0, i32 10, !dbg !12297
  call void @mutex_unlock(%struct.mutex* %probe_lock17) #8, !dbg !12298
  %26 = load i32, i32* %ret, align 4, !dbg !12299
  %tobool18 = icmp ne i32 %26, 0, !dbg !12299
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !12301

if.then19:                                        ; preds = %if.end15
  %27 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12302
  call void @drm_kms_helper_hotplug_event(%struct.drm_device* %27) #8, !dbg !12303
  br label %if.end20, !dbg !12303

if.end20:                                         ; preds = %if.then10, %if.then19, %if.end15
  ret void, !dbg !12304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_tx_work(%struct.work_struct* %work) #0 !dbg !12305 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12306, metadata !DIExpression()), !dbg !12307
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !12308, metadata !DIExpression()), !dbg !12309
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12310, metadata !DIExpression()), !dbg !12312
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12312
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !12312
  store i8* %1, i8** %__mptr, align 8, !dbg !12312
  br label %do.body, !dbg !12312

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12313

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12312
  %add.ptr = getelementptr i8, i8* %2, i64 -1016, !dbg !12312
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_mgr*, !dbg !12312
  store %struct.drm_dp_mst_topology_mgr* %3, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12313
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12312
  store %struct.drm_dp_mst_topology_mgr* %4, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12309
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12315
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 17, !dbg !12316
  call void @mutex_lock(%struct.mutex* %qlock) #8, !dbg !12317
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12318
  %tx_msg_downq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 18, !dbg !12320
  %call = call i32 @list_empty(%struct.list_head* %tx_msg_downq) #8, !dbg !12321
  %tobool = icmp ne i32 %call, 0, !dbg !12321
  br i1 %tobool, label %if.end, label %if.then, !dbg !12322

if.then:                                          ; preds = %do.end
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12323
  call void @process_single_down_tx_qlock(%struct.drm_dp_mst_topology_mgr* %7) #8, !dbg !12324
  br label %if.end, !dbg !12324

if.end:                                           ; preds = %if.then, %do.end
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12325
  %qlock1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 17, !dbg !12326
  call void @mutex_unlock(%struct.mutex* %qlock1) #8, !dbg !12327
  ret void, !dbg !12328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_delayed_destroy_work(%struct.work_struct* %work) #0 !dbg !12329 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %send_hotplug = alloca i8, align 1
  %go_again = alloca i8, align 1
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp4 = alloca %struct.list_head*, align 8
  %tmp5 = alloca %struct.drm_dp_mst_branch*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp9 = alloca %struct.drm_dp_mst_branch*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %head__17 = alloca %struct.list_head*, align 8
  %pos__18 = alloca %struct.list_head*, align 8
  %tmp21 = alloca %struct.list_head*, align 8
  %tmp23 = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr26 = alloca i8*, align 8
  %tmp29 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12330, metadata !DIExpression()), !dbg !12331
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !12332, metadata !DIExpression()), !dbg !12333
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12334, metadata !DIExpression()), !dbg !12336
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12336
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !12336
  store i8* %1, i8** %__mptr, align 8, !dbg !12336
  br label %do.body, !dbg !12336

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12337

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12336
  %add.ptr = getelementptr i8, i8* %2, i64 -1112, !dbg !12336
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_mgr*, !dbg !12336
  store %struct.drm_dp_mst_topology_mgr* %3, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12337
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12336
  store %struct.drm_dp_mst_topology_mgr* %4, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12333
  call void @llvm.dbg.declare(metadata i8* %send_hotplug, metadata !12339, metadata !DIExpression()), !dbg !12340
  store i8 0, i8* %send_hotplug, align 1, !dbg !12340
  call void @llvm.dbg.declare(metadata i8* %go_again, metadata !12341, metadata !DIExpression()), !dbg !12342
  br label %do.body1, !dbg !12343

do.body1:                                         ; preds = %do.cond, %do.end
  store i8 0, i8* %go_again, align 1, !dbg !12344
  br label %for.cond, !dbg !12346

for.cond:                                         ; preds = %if.end14, %do.body1
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !12347, metadata !DIExpression()), !dbg !12351
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12352
  %delayed_destroy_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 29, !dbg !12353
  call void @mutex_lock(%struct.mutex* %delayed_destroy_lock) #8, !dbg !12354
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !12355, metadata !DIExpression()), !dbg !12357
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12357
  %destroy_branch_device_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 28, !dbg !12357
  store %struct.list_head* %destroy_branch_device_list, %struct.list_head** %head__, align 8, !dbg !12357
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !12358, metadata !DIExpression()), !dbg !12357
  br label %do.body2, !dbg !12359

do.body2:                                         ; preds = %for.cond
  br label %do.end3, !dbg !12361

do.end3:                                          ; preds = %do.body2
  %7 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !12359
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !12359
  %8 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12359
  store %struct.list_head* %8, %struct.list_head** %tmp4, align 8, !dbg !12361
  %9 = load %struct.list_head*, %struct.list_head** %tmp4, align 8, !dbg !12359
  store %struct.list_head* %9, %struct.list_head** %pos__, align 8, !dbg !12357
  %10 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !12357
  %11 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !12357
  %cmp = icmp ne %struct.list_head* %10, %11, !dbg !12357
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12357

cond.true:                                        ; preds = %do.end3
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !12363, metadata !DIExpression()), !dbg !12365
  %12 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !12365
  %13 = bitcast %struct.list_head* %12 to i8*, !dbg !12365
  store i8* %13, i8** %__mptr6, align 8, !dbg !12365
  br label %do.body7, !dbg !12365

do.body7:                                         ; preds = %cond.true
  br label %do.end8, !dbg !12366

do.end8:                                          ; preds = %do.body7
  %14 = load i8*, i8** %__mptr6, align 8, !dbg !12365
  %add.ptr10 = getelementptr i8, i8* %14, i64 -8, !dbg !12365
  %15 = bitcast i8* %add.ptr10 to %struct.drm_dp_mst_branch*, !dbg !12365
  store %struct.drm_dp_mst_branch* %15, %struct.drm_dp_mst_branch** %tmp9, align 8, !dbg !12366
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %tmp9, align 8, !dbg !12365
  br label %cond.end, !dbg !12357

cond.false:                                       ; preds = %do.end3
  br label %cond.end, !dbg !12357

cond.end:                                         ; preds = %cond.false, %do.end8
  %cond = phi %struct.drm_dp_mst_branch* [ %16, %do.end8 ], [ null, %cond.false ], !dbg !12357
  store %struct.drm_dp_mst_branch* %cond, %struct.drm_dp_mst_branch** %tmp5, align 8, !dbg !12357
  %17 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %tmp5, align 8, !dbg !12357
  store %struct.drm_dp_mst_branch* %17, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12368
  %18 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12369
  %tobool = icmp ne %struct.drm_dp_mst_branch* %18, null, !dbg !12369
  br i1 %tobool, label %if.then, label %if.end, !dbg !12371

if.then:                                          ; preds = %cond.end
  %19 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12372
  %destroy_next = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %19, i32 0, i32 2, !dbg !12373
  call void @list_del(%struct.list_head* %destroy_next) #8, !dbg !12374
  br label %if.end, !dbg !12374

if.end:                                           ; preds = %if.then, %cond.end
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12375
  %delayed_destroy_lock11 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %20, i32 0, i32 29, !dbg !12376
  call void @mutex_unlock(%struct.mutex* %delayed_destroy_lock11) #8, !dbg !12377
  %21 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12378
  %tobool12 = icmp ne %struct.drm_dp_mst_branch* %21, null, !dbg !12378
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !12380

if.then13:                                        ; preds = %if.end
  br label %for.end, !dbg !12381

if.end14:                                         ; preds = %if.end
  %22 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12382
  call void @drm_dp_delayed_destroy_mstb(%struct.drm_dp_mst_branch* %22) #8, !dbg !12383
  store i8 1, i8* %go_again, align 1, !dbg !12384
  br label %for.cond, !dbg !12385, !llvm.loop !12386

for.end:                                          ; preds = %if.then13
  br label %for.cond15, !dbg !12389

for.cond15:                                       ; preds = %if.end41, %for.end
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !12390, metadata !DIExpression()), !dbg !12394
  %23 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12395
  %delayed_destroy_lock16 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %23, i32 0, i32 29, !dbg !12396
  call void @mutex_lock(%struct.mutex* %delayed_destroy_lock16) #8, !dbg !12397
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__17, metadata !12398, metadata !DIExpression()), !dbg !12400
  %24 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12400
  %destroy_port_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %24, i32 0, i32 27, !dbg !12400
  store %struct.list_head* %destroy_port_list, %struct.list_head** %head__17, align 8, !dbg !12400
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__18, metadata !12401, metadata !DIExpression()), !dbg !12400
  br label %do.body19, !dbg !12402

do.body19:                                        ; preds = %for.cond15
  br label %do.end20, !dbg !12404

do.end20:                                         ; preds = %do.body19
  %25 = load %struct.list_head*, %struct.list_head** %head__17, align 8, !dbg !12402
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %25, i32 0, i32 0, !dbg !12402
  %26 = load volatile %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !12402
  store %struct.list_head* %26, %struct.list_head** %tmp21, align 8, !dbg !12404
  %27 = load %struct.list_head*, %struct.list_head** %tmp21, align 8, !dbg !12402
  store %struct.list_head* %27, %struct.list_head** %pos__18, align 8, !dbg !12400
  %28 = load %struct.list_head*, %struct.list_head** %pos__18, align 8, !dbg !12400
  %29 = load %struct.list_head*, %struct.list_head** %head__17, align 8, !dbg !12400
  %cmp24 = icmp ne %struct.list_head* %28, %29, !dbg !12400
  br i1 %cmp24, label %cond.true25, label %cond.false31, !dbg !12400

cond.true25:                                      ; preds = %do.end20
  call void @llvm.dbg.declare(metadata i8** %__mptr26, metadata !12406, metadata !DIExpression()), !dbg !12408
  %30 = load %struct.list_head*, %struct.list_head** %pos__18, align 8, !dbg !12408
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !12408
  store i8* %31, i8** %__mptr26, align 8, !dbg !12408
  br label %do.body27, !dbg !12408

do.body27:                                        ; preds = %cond.true25
  br label %do.end28, !dbg !12409

do.end28:                                         ; preds = %do.body27
  %32 = load i8*, i8** %__mptr26, align 8, !dbg !12408
  %add.ptr30 = getelementptr i8, i8* %32, i64 -24, !dbg !12408
  %33 = bitcast i8* %add.ptr30 to %struct.drm_dp_mst_port*, !dbg !12408
  store %struct.drm_dp_mst_port* %33, %struct.drm_dp_mst_port** %tmp29, align 8, !dbg !12409
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp29, align 8, !dbg !12408
  br label %cond.end32, !dbg !12400

cond.false31:                                     ; preds = %do.end20
  br label %cond.end32, !dbg !12400

cond.end32:                                       ; preds = %cond.false31, %do.end28
  %cond33 = phi %struct.drm_dp_mst_port* [ %34, %do.end28 ], [ null, %cond.false31 ], !dbg !12400
  store %struct.drm_dp_mst_port* %cond33, %struct.drm_dp_mst_port** %tmp23, align 8, !dbg !12400
  %35 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp23, align 8, !dbg !12400
  store %struct.drm_dp_mst_port* %35, %struct.drm_dp_mst_port** %port, align 8, !dbg !12411
  %36 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12412
  %tobool34 = icmp ne %struct.drm_dp_mst_port* %36, null, !dbg !12412
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !12414

if.then35:                                        ; preds = %cond.end32
  %37 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12415
  %next36 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %37, i32 0, i32 12, !dbg !12416
  call void @list_del(%struct.list_head* %next36) #8, !dbg !12417
  br label %if.end37, !dbg !12417

if.end37:                                         ; preds = %if.then35, %cond.end32
  %38 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12418
  %delayed_destroy_lock38 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %38, i32 0, i32 29, !dbg !12419
  call void @mutex_unlock(%struct.mutex* %delayed_destroy_lock38) #8, !dbg !12420
  %39 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12421
  %tobool39 = icmp ne %struct.drm_dp_mst_port* %39, null, !dbg !12421
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !12423

if.then40:                                        ; preds = %if.end37
  br label %for.end42, !dbg !12424

if.end41:                                         ; preds = %if.end37
  %40 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12425
  call void @drm_dp_delayed_destroy_port(%struct.drm_dp_mst_port* %40) #8, !dbg !12426
  store i8 1, i8* %send_hotplug, align 1, !dbg !12427
  store i8 1, i8* %go_again, align 1, !dbg !12428
  br label %for.cond15, !dbg !12429, !llvm.loop !12430

for.end42:                                        ; preds = %if.then40
  br label %do.cond, !dbg !12433

do.cond:                                          ; preds = %for.end42
  %41 = load i8, i8* %go_again, align 1, !dbg !12434
  %tobool43 = trunc i8 %41 to i1, !dbg !12434
  br i1 %tobool43, label %do.body1, label %do.end44, !dbg !12433, !llvm.loop !12435

do.end44:                                         ; preds = %do.cond
  %42 = load i8, i8* %send_hotplug, align 1, !dbg !12437
  %tobool45 = trunc i8 %42 to i1, !dbg !12437
  br i1 %tobool45, label %if.then46, label %if.end47, !dbg !12439

if.then46:                                        ; preds = %do.end44
  %43 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12440
  %dev = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %43, i32 0, i32 1, !dbg !12441
  %44 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12441
  call void @drm_kms_helper_hotplug_event(%struct.drm_device* %44) #8, !dbg !12442
  br label %if.end47, !dbg !12442

if.end47:                                         ; preds = %if.then46, %do.end44
  ret void, !dbg !12443
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_up_req_work(%struct.work_struct* %work) #0 !dbg !12444 {
entry:
  %work.addr = alloca %struct.work_struct*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %up_req = alloca %struct.drm_dp_pending_up_req*, align 8
  %send_hotplug = alloca i8, align 1
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp3 = alloca %struct.list_head*, align 8
  %tmp4 = alloca %struct.drm_dp_pending_up_req*, align 8
  %__mptr5 = alloca i8*, align 8
  %tmp8 = alloca %struct.drm_dp_pending_up_req*, align 8
  store %struct.work_struct* %work, %struct.work_struct** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.work_struct** %work.addr, metadata !12445, metadata !DIExpression()), !dbg !12446
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !12447, metadata !DIExpression()), !dbg !12448
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12449, metadata !DIExpression()), !dbg !12451
  %0 = load %struct.work_struct*, %struct.work_struct** %work.addr, align 8, !dbg !12451
  %1 = bitcast %struct.work_struct* %0 to i8*, !dbg !12451
  store i8* %1, i8** %__mptr, align 8, !dbg !12451
  br label %do.body, !dbg !12451

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12452

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12451
  %add.ptr = getelementptr i8, i8* %2, i64 -1184, !dbg !12451
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_topology_mgr*, !dbg !12451
  store %struct.drm_dp_mst_topology_mgr* %3, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12452
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %tmp, align 8, !dbg !12451
  store %struct.drm_dp_mst_topology_mgr* %4, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12448
  call void @llvm.dbg.declare(metadata %struct.drm_dp_pending_up_req** %up_req, metadata !12454, metadata !DIExpression()), !dbg !12455
  call void @llvm.dbg.declare(metadata i8* %send_hotplug, metadata !12456, metadata !DIExpression()), !dbg !12457
  store i8 0, i8* %send_hotplug, align 1, !dbg !12457
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12458
  %probe_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 10, !dbg !12459
  call void @mutex_lock(%struct.mutex* %probe_lock) #8, !dbg !12460
  br label %while.body, !dbg !12461

while.body:                                       ; preds = %do.end, %if.end14
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12462
  %up_req_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 33, !dbg !12464
  call void @mutex_lock(%struct.mutex* %up_req_lock) #8, !dbg !12465
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !12466, metadata !DIExpression()), !dbg !12468
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12468
  %up_req_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 32, !dbg !12468
  store %struct.list_head* %up_req_list, %struct.list_head** %head__, align 8, !dbg !12468
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !12469, metadata !DIExpression()), !dbg !12468
  br label %do.body1, !dbg !12470

do.body1:                                         ; preds = %while.body
  br label %do.end2, !dbg !12472

do.end2:                                          ; preds = %do.body1
  %8 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !12470
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 0, !dbg !12470
  %9 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12470
  store %struct.list_head* %9, %struct.list_head** %tmp3, align 8, !dbg !12472
  %10 = load %struct.list_head*, %struct.list_head** %tmp3, align 8, !dbg !12470
  store %struct.list_head* %10, %struct.list_head** %pos__, align 8, !dbg !12468
  %11 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !12468
  %12 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !12468
  %cmp = icmp ne %struct.list_head* %11, %12, !dbg !12468
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12468

cond.true:                                        ; preds = %do.end2
  call void @llvm.dbg.declare(metadata i8** %__mptr5, metadata !12474, metadata !DIExpression()), !dbg !12476
  %13 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !12476
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !12476
  store i8* %14, i8** %__mptr5, align 8, !dbg !12476
  br label %do.body6, !dbg !12476

do.body6:                                         ; preds = %cond.true
  br label %do.end7, !dbg !12477

do.end7:                                          ; preds = %do.body6
  %15 = load i8*, i8** %__mptr5, align 8, !dbg !12476
  %add.ptr9 = getelementptr i8, i8* %15, i64 -136, !dbg !12476
  %16 = bitcast i8* %add.ptr9 to %struct.drm_dp_pending_up_req*, !dbg !12476
  store %struct.drm_dp_pending_up_req* %16, %struct.drm_dp_pending_up_req** %tmp8, align 8, !dbg !12477
  %17 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %tmp8, align 8, !dbg !12476
  br label %cond.end, !dbg !12468

cond.false:                                       ; preds = %do.end2
  br label %cond.end, !dbg !12468

cond.end:                                         ; preds = %cond.false, %do.end7
  %cond = phi %struct.drm_dp_pending_up_req* [ %17, %do.end7 ], [ null, %cond.false ], !dbg !12468
  store %struct.drm_dp_pending_up_req* %cond, %struct.drm_dp_pending_up_req** %tmp4, align 8, !dbg !12468
  %18 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %tmp4, align 8, !dbg !12468
  store %struct.drm_dp_pending_up_req* %18, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !12479
  %19 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !12480
  %tobool = icmp ne %struct.drm_dp_pending_up_req* %19, null, !dbg !12480
  br i1 %tobool, label %if.then, label %if.end, !dbg !12482

if.then:                                          ; preds = %cond.end
  %20 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !12483
  %next10 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %20, i32 0, i32 2, !dbg !12484
  call void @list_del(%struct.list_head* %next10) #8, !dbg !12485
  br label %if.end, !dbg !12485

if.end:                                           ; preds = %if.then, %cond.end
  %21 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12486
  %up_req_lock11 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %21, i32 0, i32 33, !dbg !12487
  call void @mutex_unlock(%struct.mutex* %up_req_lock11) #8, !dbg !12488
  %22 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !12489
  %tobool12 = icmp ne %struct.drm_dp_pending_up_req* %22, null, !dbg !12489
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !12491

if.then13:                                        ; preds = %if.end
  br label %while.end, !dbg !12492

if.end14:                                         ; preds = %if.end
  %23 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12493
  %24 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !12494
  %call = call zeroext i1 @drm_dp_mst_process_up_req(%struct.drm_dp_mst_topology_mgr* %23, %struct.drm_dp_pending_up_req* %24) #8, !dbg !12495
  %conv = zext i1 %call to i32, !dbg !12495
  %25 = load i8, i8* %send_hotplug, align 1, !dbg !12496
  %tobool15 = trunc i8 %25 to i1, !dbg !12496
  %conv16 = zext i1 %tobool15 to i32, !dbg !12496
  %or = or i32 %conv16, %conv, !dbg !12496
  %tobool17 = icmp ne i32 %or, 0, !dbg !12496
  %frombool = zext i1 %tobool17 to i8, !dbg !12496
  store i8 %frombool, i8* %send_hotplug, align 1, !dbg !12496
  %26 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req, align 8, !dbg !12497
  %27 = bitcast %struct.drm_dp_pending_up_req* %26 to i8*, !dbg !12497
  call void @kfree(i8* %27) #8, !dbg !12498
  br label %while.body, !dbg !12461, !llvm.loop !12499

while.end:                                        ; preds = %if.then13
  %28 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12501
  %probe_lock18 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %28, i32 0, i32 10, !dbg !12502
  call void @mutex_unlock(%struct.mutex* %probe_lock18) #8, !dbg !12503
  %29 = load i8, i8* %send_hotplug, align 1, !dbg !12504
  %tobool19 = trunc i8 %29 to i1, !dbg !12504
  br i1 %tobool19, label %if.then20, label %if.end21, !dbg !12506

if.then20:                                        ; preds = %while.end
  %30 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12507
  %dev = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %30, i32 0, i32 1, !dbg !12508
  %31 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !12508
  call void @drm_kms_helper_hotplug_event(%struct.drm_device* %31) #8, !dbg !12509
  br label %if.end21, !dbg !12509

if.end21:                                         ; preds = %if.then20, %while.end
  ret void, !dbg !12510
}

; Function Attrs: noredzone
declare dso_local void @__init_waitqueue_head(%struct.wait_queue_head*, i8*, %struct.lock_class_key*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !12511 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !12514, metadata !DIExpression()), !dbg !12515
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12516, metadata !DIExpression()), !dbg !12517
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !12518, metadata !DIExpression()), !dbg !12519
  %0 = load i64, i64* %n.addr, align 8, !dbg !12520
  %1 = load i64, i64* %size.addr, align 8, !dbg !12521
  %2 = load i32, i32* %flags.addr, align 4, !dbg !12522
  %or = or i32 %2, 256, !dbg !12523
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #8, !dbg !12524
  ret i8* %call, !dbg !12525
}

; Function Attrs: noredzone
declare dso_local void @drm_atomic_private_obj_init(%struct.drm_device*, %struct.drm_private_obj*, %struct.drm_private_state*, %struct.drm_private_state_funcs*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @drm_dp_mst_topology_mgr_destroy(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !12526 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !12527, metadata !DIExpression()), !dbg !12528
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12529
  %call = call i32 @drm_dp_mst_topology_mgr_set_mst(%struct.drm_dp_mst_topology_mgr* %0, i1 zeroext false) #8, !dbg !12530
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12531
  %work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 25, !dbg !12532
  %call1 = call zeroext i1 @flush_work(%struct.work_struct* %work) #8, !dbg !12533
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12534
  %delayed_destroy_wq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 30, !dbg !12536
  %3 = load %struct.workqueue_struct*, %struct.workqueue_struct** %delayed_destroy_wq, align 8, !dbg !12536
  %tobool = icmp ne %struct.workqueue_struct* %3, null, !dbg !12534
  br i1 %tobool, label %if.then, label %if.end, !dbg !12537

if.then:                                          ; preds = %entry
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12538
  %delayed_destroy_wq2 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 30, !dbg !12540
  %5 = load %struct.workqueue_struct*, %struct.workqueue_struct** %delayed_destroy_wq2, align 8, !dbg !12540
  call void @destroy_workqueue(%struct.workqueue_struct* %5) #8, !dbg !12541
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12542
  %delayed_destroy_wq3 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 30, !dbg !12543
  store %struct.workqueue_struct* null, %struct.workqueue_struct** %delayed_destroy_wq3, align 8, !dbg !12544
  br label %if.end, !dbg !12545

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12546
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 19, !dbg !12547
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !12548
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12549
  %payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 21, !dbg !12550
  %9 = load %struct.drm_dp_payload*, %struct.drm_dp_payload** %payloads, align 8, !dbg !12550
  %10 = bitcast %struct.drm_dp_payload* %9 to i8*, !dbg !12549
  call void @kfree(i8* %10) #8, !dbg !12551
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12552
  %payloads4 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %11, i32 0, i32 21, !dbg !12553
  store %struct.drm_dp_payload* null, %struct.drm_dp_payload** %payloads4, align 8, !dbg !12554
  %12 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12555
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %12, i32 0, i32 20, !dbg !12556
  %13 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !12556
  %14 = bitcast %struct.drm_dp_vcpi** %13 to i8*, !dbg !12555
  call void @kfree(i8* %14) #8, !dbg !12557
  %15 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12558
  %proposed_vcpis5 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %15, i32 0, i32 20, !dbg !12559
  store %struct.drm_dp_vcpi** null, %struct.drm_dp_vcpi*** %proposed_vcpis5, align 8, !dbg !12560
  %16 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12561
  %payload_lock6 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %16, i32 0, i32 19, !dbg !12562
  call void @mutex_unlock(%struct.mutex* %payload_lock6) #8, !dbg !12563
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12564
  %dev = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 1, !dbg !12565
  store %struct.drm_device* null, %struct.drm_device** %dev, align 8, !dbg !12566
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12567
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 4, !dbg !12568
  store %struct.drm_dp_aux* null, %struct.drm_dp_aux** %aux, align 8, !dbg !12569
  %19 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12570
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %19, i32 0, i32 0, !dbg !12571
  call void @drm_atomic_private_obj_fini(%struct.drm_private_obj* %base) #8, !dbg !12572
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12573
  %funcs = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %20, i32 0, i32 16, !dbg !12574
  store %struct.drm_private_state_funcs* null, %struct.drm_private_state_funcs** %funcs, align 8, !dbg !12575
  %21 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12576
  %delayed_destroy_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %21, i32 0, i32 29, !dbg !12577
  call void @mutex_destroy(%struct.mutex* %delayed_destroy_lock) #8, !dbg !12578
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12579
  %payload_lock7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %22, i32 0, i32 19, !dbg !12580
  call void @mutex_destroy(%struct.mutex* %payload_lock7) #8, !dbg !12581
  %23 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12582
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %23, i32 0, i32 17, !dbg !12583
  call void @mutex_destroy(%struct.mutex* %qlock) #8, !dbg !12584
  %24 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12585
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %24, i32 0, i32 9, !dbg !12586
  call void @mutex_destroy(%struct.mutex* %lock) #8, !dbg !12587
  %25 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12588
  %up_req_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %25, i32 0, i32 33, !dbg !12589
  call void @mutex_destroy(%struct.mutex* %up_req_lock) #8, !dbg !12590
  %26 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !12591
  %probe_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %26, i32 0, i32 10, !dbg !12592
  call void @mutex_destroy(%struct.mutex* %probe_lock) #8, !dbg !12593
  ret void, !dbg !12594
}

; Function Attrs: noredzone
declare dso_local void @destroy_workqueue(%struct.workqueue_struct*) #3

; Function Attrs: noredzone
declare dso_local void @drm_atomic_private_obj_fini(%struct.drm_private_obj*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @mutex_destroy(%struct.mutex* %lock) #0 !dbg !12595 {
entry:
  %lock.addr = alloca %struct.mutex*, align 8
  store %struct.mutex* %lock, %struct.mutex** %lock.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.mutex** %lock.addr, metadata !12599, metadata !DIExpression()), !dbg !12600
  ret void, !dbg !12601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_mst_is_virtual_dpcd(%struct.drm_dp_mst_port* %port) #0 !dbg !12602 {
entry:
  %retval = alloca i1, align 1
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %downstream_port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr43 = alloca i8*, align 8
  %tmp48 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !12605, metadata !DIExpression()), !dbg !12606
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %downstream_port, metadata !12607, metadata !DIExpression()), !dbg !12608
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12609
  %tobool = icmp ne %struct.drm_dp_mst_port* %0, null, !dbg !12609
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !12611

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12612
  %dpcd_rev = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 8, !dbg !12613
  %2 = load i8, i8* %dpcd_rev, align 2, !dbg !12613
  %conv = zext i8 %2 to i32, !dbg !12612
  %cmp = icmp slt i32 %conv, 20, !dbg !12614
  br i1 %cmp, label %if.then, label %if.end, !dbg !12615

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i1 false, i1* %retval, align 1, !dbg !12616
  br label %return, !dbg !12616

if.end:                                           ; preds = %lor.lhs.false
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12617
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 2, !dbg !12619
  %4 = load i8, i8* %port_num, align 8, !dbg !12619
  %conv2 = zext i8 %4 to i32, !dbg !12617
  %cmp3 = icmp sge i32 %conv2, 8, !dbg !12620
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !12621

if.then5:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !12622
  br label %return, !dbg !12622

if.end6:                                          ; preds = %if.end
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12623
  %pdt = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 6, !dbg !12625
  %6 = load i8, i8* %pdt, align 4, !dbg !12625
  %conv7 = zext i8 %6 to i32, !dbg !12623
  %cmp8 = icmp eq i32 %conv7, 4, !dbg !12626
  br i1 %cmp8, label %land.lhs.true, label %if.end15, !dbg !12627

land.lhs.true:                                    ; preds = %if.end6
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12628
  %mcs = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 4, !dbg !12629
  %8 = load i8, i8* %mcs, align 2, !dbg !12629
  %tobool10 = trunc i8 %8 to i1, !dbg !12629
  br i1 %tobool10, label %if.end15, label %land.lhs.true11, !dbg !12630

land.lhs.true11:                                  ; preds = %land.lhs.true
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12631
  %ldps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 7, !dbg !12632
  %10 = load i8, i8* %ldps, align 1, !dbg !12632
  %tobool12 = trunc i8 %10 to i1, !dbg !12632
  br i1 %tobool12, label %if.then14, label %if.end15, !dbg !12633

if.then14:                                        ; preds = %land.lhs.true11
  store i1 true, i1* %retval, align 1, !dbg !12634
  br label %return, !dbg !12634

if.end15:                                         ; preds = %land.lhs.true11, %land.lhs.true, %if.end6
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12635
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 18, !dbg !12636
  %12 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !12636
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %12, i32 0, i32 9, !dbg !12637
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !12638
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12639
  %pdt16 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 6, !dbg !12641
  %14 = load i8, i8* %pdt16, align 4, !dbg !12641
  %conv17 = zext i8 %14 to i32, !dbg !12639
  %cmp18 = icmp eq i32 %conv17, 2, !dbg !12642
  br i1 %cmp18, label %land.lhs.true20, label %if.end50, !dbg !12643

land.lhs.true20:                                  ; preds = %if.end15
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12644
  %mstb = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 13, !dbg !12645
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12645
  %tobool21 = icmp ne %struct.drm_dp_mst_branch* %16, null, !dbg !12644
  br i1 %tobool21, label %land.lhs.true22, label %if.end50, !dbg !12646

land.lhs.true22:                                  ; preds = %land.lhs.true20
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12647
  %mstb23 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %17, i32 0, i32 13, !dbg !12648
  %18 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb23, align 8, !dbg !12648
  %num_ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %18, i32 0, i32 5, !dbg !12649
  %19 = load i32, i32* %num_ports, align 4, !dbg !12649
  %cmp24 = icmp eq i32 %19, 2, !dbg !12650
  br i1 %cmp24, label %if.then26, label %if.end50, !dbg !12651

if.then26:                                        ; preds = %land.lhs.true22
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12652, metadata !DIExpression()), !dbg !12656
  %20 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12656
  %mstb27 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %20, i32 0, i32 13, !dbg !12656
  %21 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb27, align 8, !dbg !12656
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %21, i32 0, i32 6, !dbg !12656
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !12656
  %22 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12656
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !12656
  store i8* %23, i8** %__mptr, align 8, !dbg !12656
  br label %do.body, !dbg !12656

do.body:                                          ; preds = %if.then26
  br label %do.end, !dbg !12657

do.end:                                           ; preds = %do.body
  %24 = load i8*, i8** %__mptr, align 8, !dbg !12656
  %add.ptr = getelementptr i8, i8* %24, i64 -24, !dbg !12656
  %25 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !12656
  store %struct.drm_dp_mst_port* %25, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !12657
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !12656
  store %struct.drm_dp_mst_port* %26, %struct.drm_dp_mst_port** %downstream_port, align 8, !dbg !12659
  br label %for.cond, !dbg !12659

for.cond:                                         ; preds = %do.end47, %do.end
  %27 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %downstream_port, align 8, !dbg !12660
  %next28 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %27, i32 0, i32 12, !dbg !12660
  %28 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12660
  %mstb29 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %28, i32 0, i32 13, !dbg !12660
  %29 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb29, align 8, !dbg !12660
  %ports30 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %29, i32 0, i32 6, !dbg !12660
  %cmp31 = icmp eq %struct.list_head* %next28, %ports30, !dbg !12660
  %lnot = xor i1 %cmp31, true, !dbg !12660
  br i1 %lnot, label %for.body, label %for.end, !dbg !12659

for.body:                                         ; preds = %for.cond
  %30 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %downstream_port, align 8, !dbg !12662
  %pdt33 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %30, i32 0, i32 6, !dbg !12665
  %31 = load i8, i8* %pdt33, align 4, !dbg !12665
  %conv34 = zext i8 %31 to i32, !dbg !12662
  %cmp35 = icmp eq i32 %conv34, 3, !dbg !12666
  br i1 %cmp35, label %land.lhs.true37, label %if.end42, !dbg !12667

land.lhs.true37:                                  ; preds = %for.body
  %32 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %downstream_port, align 8, !dbg !12668
  %input = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %32, i32 0, i32 3, !dbg !12669
  %33 = load i8, i8* %input, align 1, !dbg !12669
  %tobool38 = trunc i8 %33 to i1, !dbg !12669
  br i1 %tobool38, label %if.end42, label %if.then39, !dbg !12670

if.then39:                                        ; preds = %land.lhs.true37
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12671
  %mgr40 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %34, i32 0, i32 18, !dbg !12673
  %35 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr40, align 8, !dbg !12673
  %lock41 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %35, i32 0, i32 9, !dbg !12674
  call void @mutex_unlock(%struct.mutex* %lock41) #8, !dbg !12675
  store i1 true, i1* %retval, align 1, !dbg !12676
  br label %return, !dbg !12676

if.end42:                                         ; preds = %land.lhs.true37, %for.body
  br label %for.inc, !dbg !12677

for.inc:                                          ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i8** %__mptr43, metadata !12678, metadata !DIExpression()), !dbg !12680
  %36 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %downstream_port, align 8, !dbg !12680
  %next44 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %36, i32 0, i32 12, !dbg !12680
  %next45 = getelementptr inbounds %struct.list_head, %struct.list_head* %next44, i32 0, i32 0, !dbg !12680
  %37 = load %struct.list_head*, %struct.list_head** %next45, align 8, !dbg !12680
  %38 = bitcast %struct.list_head* %37 to i8*, !dbg !12680
  store i8* %38, i8** %__mptr43, align 8, !dbg !12680
  br label %do.body46, !dbg !12680

do.body46:                                        ; preds = %for.inc
  br label %do.end47, !dbg !12681

do.end47:                                         ; preds = %do.body46
  %39 = load i8*, i8** %__mptr43, align 8, !dbg !12680
  %add.ptr49 = getelementptr i8, i8* %39, i64 -24, !dbg !12680
  %40 = bitcast i8* %add.ptr49 to %struct.drm_dp_mst_port*, !dbg !12680
  store %struct.drm_dp_mst_port* %40, %struct.drm_dp_mst_port** %tmp48, align 8, !dbg !12681
  %41 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp48, align 8, !dbg !12680
  store %struct.drm_dp_mst_port* %41, %struct.drm_dp_mst_port** %downstream_port, align 8, !dbg !12660
  br label %for.cond, !dbg !12660, !llvm.loop !12683

for.end:                                          ; preds = %for.cond
  br label %if.end50, !dbg !12685

if.end50:                                         ; preds = %for.end, %land.lhs.true22, %land.lhs.true20, %if.end15
  %42 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !12686
  %mgr51 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %42, i32 0, i32 18, !dbg !12687
  %43 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr51, align 8, !dbg !12687
  %lock52 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %43, i32 0, i32 9, !dbg !12688
  call void @mutex_unlock(%struct.mutex* %lock52) #8, !dbg !12689
  store i1 false, i1* %retval, align 1, !dbg !12690
  br label %return, !dbg !12690

return:                                           ; preds = %if.end50, %if.then39, %if.then14, %if.then5, %if.then
  %44 = load i1, i1* %retval, align 1, !dbg !12691
  ret i1 %44, !dbg !12691
}

; Function Attrs: noredzone
declare dso_local i32 @drm_dp_read_desc(%struct.drm_dp_aux*, %struct.drm_dp_desc*, i1 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_has_quirk(%struct.drm_dp_desc* %desc, i32 %edid_quirks, i32 %quirk) #0 !dbg !12692 {
entry:
  %desc.addr = alloca %struct.drm_dp_desc*, align 8
  %edid_quirks.addr = alloca i32, align 4
  %quirk.addr = alloca i32, align 4
  store %struct.drm_dp_desc* %desc, %struct.drm_dp_desc** %desc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_desc** %desc.addr, metadata !12697, metadata !DIExpression()), !dbg !12698
  store i32 %edid_quirks, i32* %edid_quirks.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edid_quirks.addr, metadata !12699, metadata !DIExpression()), !dbg !12700
  store i32 %quirk, i32* %quirk.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %quirk.addr, metadata !12701, metadata !DIExpression()), !dbg !12702
  %0 = load %struct.drm_dp_desc*, %struct.drm_dp_desc** %desc.addr, align 8, !dbg !12703
  %quirks = getelementptr inbounds %struct.drm_dp_desc, %struct.drm_dp_desc* %0, i32 0, i32 1, !dbg !12704
  %1 = load i32, i32* %quirks, align 4, !dbg !12704
  %2 = load i32, i32* %edid_quirks.addr, align 4, !dbg !12705
  %or = or i32 %1, %2, !dbg !12706
  %conv = zext i32 %or to i64, !dbg !12707
  %3 = load i32, i32* %quirk.addr, align 4, !dbg !12708
  %sh_prom = zext i32 %3 to i64, !dbg !12708
  %shl = shl i64 1, %sh_prom, !dbg !12708
  %and = and i64 %conv, %shl, !dbg !12709
  %tobool = icmp ne i64 %and, 0, !dbg !12707
  ret i1 %tobool, !dbg !12710
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_inc(%struct.refcount_struct* %r) #0 !dbg !12711 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12715, metadata !DIExpression()), !dbg !12716
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12717
  call void @__refcount_inc(%struct.refcount_struct* %0, i32* null) #8, !dbg !12718
  ret void, !dbg !12719
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_inc(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !12720 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12723, metadata !DIExpression()), !dbg !12724
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !12725, metadata !DIExpression()), !dbg !12726
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12727
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !12728
  call void @__refcount_add(i32 1, %struct.refcount_struct* %0, i32* %1) #8, !dbg !12729
  ret void, !dbg !12730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__refcount_add(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !12731 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !12734, metadata !DIExpression()), !dbg !12740
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !12745, metadata !DIExpression()), !dbg !12746
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !12747, metadata !DIExpression()), !dbg !12749
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12750, metadata !DIExpression()), !dbg !12752
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12754, metadata !DIExpression()), !dbg !12755
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !12756, metadata !DIExpression()), !dbg !12757
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !12758, metadata !DIExpression()), !dbg !12759
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12760, metadata !DIExpression()), !dbg !12761
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12762, metadata !DIExpression()), !dbg !12763
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !12764, metadata !DIExpression()), !dbg !12765
  call void @llvm.dbg.declare(metadata i32* %old, metadata !12766, metadata !DIExpression()), !dbg !12767
  %0 = load i32, i32* %i.addr, align 4, !dbg !12768
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12769
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !12770
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12771
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !12771
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12772
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !12773
  %conv.i.i = trunc i64 %5 to i32, !dbg !12773
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #10, !dbg !12774
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12775
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12775
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #10, !dbg !12775
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !12776
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12777
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !12749
  store i32 %10, i32* %__ret.i.i, align 4, !dbg !12749
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !12749
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12749
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !12749
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #7, !dbg !12749, !srcloc !12778
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !12749
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !12749
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !12749
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !12749
  store i32 %15, i32* %old, align 4, !dbg !12767
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !12779
  %tobool = icmp ne i32* %16, null, !dbg !12779
  br i1 %tobool, label %if.then, label %if.end, !dbg !12781

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !12782
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !12783
  store i32 %17, i32* %18, align 4, !dbg !12784
  br label %if.end, !dbg !12785

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !12786
  %tobool1 = icmp ne i32 %19, 0, !dbg !12786
  %lnot = xor i1 %tobool1, true, !dbg !12786
  %lnot2 = xor i1 %lnot, true, !dbg !12786
  %lnot3 = xor i1 %lnot2, true, !dbg !12786
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !12786
  %conv = sext i32 %lnot.ext to i64, !dbg !12786
  %tobool4 = icmp ne i64 %conv, 0, !dbg !12786
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !12788

if.then5:                                         ; preds = %if.end
  %20 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12789
  call void @refcount_warn_saturate(%struct.refcount_struct* %20, i32 2) #8, !dbg !12790
  br label %if.end17, !dbg !12790

if.else:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !12791
  %cmp = icmp slt i32 %21, 0, !dbg !12791
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !12791

lor.rhs:                                          ; preds = %if.else
  %22 = load i32, i32* %old, align 4, !dbg !12791
  %23 = load i32, i32* %i.addr, align 4, !dbg !12791
  %add = add i32 %22, %23, !dbg !12791
  %cmp7 = icmp slt i32 %add, 0, !dbg !12791
  br label %lor.end, !dbg !12791

lor.end:                                          ; preds = %lor.rhs, %if.else
  %24 = phi i1 [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lnot9 = xor i1 %24, true, !dbg !12791
  %lnot11 = xor i1 %lnot9, true, !dbg !12791
  %lnot.ext12 = zext i1 %lnot11 to i32, !dbg !12791
  %conv13 = sext i32 %lnot.ext12 to i64, !dbg !12791
  %tobool14 = icmp ne i64 %conv13, 0, !dbg !12791
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !12793

if.then15:                                        ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12794
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 1) #8, !dbg !12795
  br label %if.end16, !dbg !12795

if.end16:                                         ; preds = %if.then15, %lor.end
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.then5
  ret void, !dbg !12796
}

; Function Attrs: noredzone
declare dso_local void @refcount_warn_saturate(%struct.refcount_struct*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !12797 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12803, metadata !DIExpression()), !dbg !12804
  ret i1 true, !dbg !12805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !12806 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !12810, metadata !DIExpression()), !dbg !12811
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !12812, metadata !DIExpression()), !dbg !12813
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !12814, metadata !DIExpression()), !dbg !12815
  ret void, !dbg !12816
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @refcount_read(%struct.refcount_struct* %r) #0 !dbg !12817 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !12822, metadata !DIExpression()), !dbg !12828
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12832, metadata !DIExpression()), !dbg !12834
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12836, metadata !DIExpression()), !dbg !12837
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !12838, metadata !DIExpression()), !dbg !12839
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12840, metadata !DIExpression()), !dbg !12841
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12842
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !12843
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12844
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !12844
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12845
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !12846
  %conv.i.i = trunc i64 %4 to i32, !dbg !12846
  %call.i.i = call zeroext i1 @kasan_check_read(i8* %3, i32 %conv.i.i) #10, !dbg !12847
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12848
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !12848
  call void @kcsan_check_access(i8* %5, i64 %6, i32 4) #10, !dbg !12848
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12849
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12850
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %8, i32 0, i32 0, !dbg !12850
  %9 = load volatile i32, i32* %counter.i.i, align 4, !dbg !12850
  ret i32 %9, !dbg !12851
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_read(i8* %p, i32 %size) #0 !dbg !12852 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !12853, metadata !DIExpression()), !dbg !12854
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !12855, metadata !DIExpression()), !dbg !12856
  ret i1 true, !dbg !12857
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_dec_and_test(%struct.refcount_struct* %r) #0 !dbg !12858 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12861, metadata !DIExpression()), !dbg !12862
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12863
  %call = call zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %0, i32* null) #8, !dbg !12864
  ret i1 %call, !dbg !12865
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_dec_and_test(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !12866 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12869, metadata !DIExpression()), !dbg !12870
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !12871, metadata !DIExpression()), !dbg !12872
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12873
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !12874
  %call = call zeroext i1 @__refcount_sub_and_test(i32 1, %struct.refcount_struct* %0, i32* %1) #8, !dbg !12875
  ret i1 %call, !dbg !12876
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_sub_and_test(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !12877 {
entry:
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !12880, metadata !DIExpression()), !dbg !12882
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !12886, metadata !DIExpression()), !dbg !12887
  %__ret.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__ret.i.i, metadata !12888, metadata !DIExpression()), !dbg !12890
  %tmp.i.i = alloca i32, align 4
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12750, metadata !DIExpression()), !dbg !12891
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12754, metadata !DIExpression()), !dbg !12893
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !12894, metadata !DIExpression()), !dbg !12895
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !12896, metadata !DIExpression()), !dbg !12897
  %retval = alloca i1, align 1
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !12898, metadata !DIExpression()), !dbg !12899
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !12900, metadata !DIExpression()), !dbg !12901
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !12902, metadata !DIExpression()), !dbg !12903
  call void @llvm.dbg.declare(metadata i32* %old, metadata !12904, metadata !DIExpression()), !dbg !12905
  %0 = load i32, i32* %i.addr, align 4, !dbg !12906
  %1 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12907
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %1, i32 0, i32 0, !dbg !12908
  store i32 %0, i32* %i.addr.i, align 4
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12909
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !12909
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12910
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !12911
  %conv.i.i = trunc i64 %5 to i32, !dbg !12911
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #10, !dbg !12912
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !12913
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !12913
  call void @kcsan_check_access(i8* %6, i64 %7, i32 7) #10, !dbg !12913
  %8 = load i32, i32* %i.addr.i, align 4, !dbg !12914
  %9 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !12915
  store i32 %8, i32* %i.addr.i.i, align 4
  store %struct.atomic_t* %9, %struct.atomic_t** %v.addr.i1.i, align 8
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !12890
  %sub.i.i = sub i32 0, %10, !dbg !12890
  store i32 %sub.i.i, i32* %__ret.i.i, align 4, !dbg !12890
  %11 = load i32, i32* %__ret.i.i, align 4, !dbg !12890
  %12 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !12890
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %12, i32 0, i32 0, !dbg !12890
  %13 = call i32 asm sideeffect "xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter.i.i, i32 %11, i32* %counter.i.i) #7, !dbg !12890, !srcloc !12916
  store i32 %13, i32* %__ret.i.i, align 4, !dbg !12890
  %14 = load i32, i32* %__ret.i.i, align 4, !dbg !12890
  store i32 %14, i32* %tmp.i.i, align 4, !dbg !12890
  %15 = load i32, i32* %tmp.i.i, align 4, !dbg !12890
  store i32 %15, i32* %old, align 4, !dbg !12905
  %16 = load i32*, i32** %oldp.addr, align 8, !dbg !12917
  %tobool = icmp ne i32* %16, null, !dbg !12917
  br i1 %tobool, label %if.then, label %if.end, !dbg !12919

if.then:                                          ; preds = %entry
  %17 = load i32, i32* %old, align 4, !dbg !12920
  %18 = load i32*, i32** %oldp.addr, align 8, !dbg !12921
  store i32 %17, i32* %18, align 4, !dbg !12922
  br label %if.end, !dbg !12923

if.end:                                           ; preds = %if.then, %entry
  %19 = load i32, i32* %old, align 4, !dbg !12924
  %20 = load i32, i32* %i.addr, align 4, !dbg !12926
  %cmp = icmp eq i32 %19, %20, !dbg !12927
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !12928

if.then1:                                         ; preds = %if.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12929, !srcloc !12931
  store i1 true, i1* %retval, align 1, !dbg !12932
  br label %return, !dbg !12932

if.end2:                                          ; preds = %if.end
  %21 = load i32, i32* %old, align 4, !dbg !12933
  %cmp3 = icmp slt i32 %21, 0, !dbg !12933
  br i1 %cmp3, label %lor.end, label %lor.rhs, !dbg !12933

lor.rhs:                                          ; preds = %if.end2
  %22 = load i32, i32* %old, align 4, !dbg !12933
  %23 = load i32, i32* %i.addr, align 4, !dbg !12933
  %sub = sub i32 %22, %23, !dbg !12933
  %cmp4 = icmp slt i32 %sub, 0, !dbg !12933
  br label %lor.end, !dbg !12933

lor.end:                                          ; preds = %lor.rhs, %if.end2
  %24 = phi i1 [ true, %if.end2 ], [ %cmp4, %lor.rhs ]
  %lnot = xor i1 %24, true, !dbg !12933
  %lnot5 = xor i1 %lnot, true, !dbg !12933
  %lnot.ext = zext i1 %lnot5 to i32, !dbg !12933
  %conv = sext i32 %lnot.ext to i64, !dbg !12933
  %tobool6 = icmp ne i64 %conv, 0, !dbg !12933
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !12935

if.then7:                                         ; preds = %lor.end
  %25 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !12936
  call void @refcount_warn_saturate(%struct.refcount_struct* %25, i32 3) #8, !dbg !12937
  br label %if.end8, !dbg !12937

if.end8:                                          ; preds = %if.then7, %lor.end
  store i1 false, i1* %retval, align 1, !dbg !12938
  br label %return, !dbg !12938

return:                                           ; preds = %if.end8, %if.then1
  %26 = load i1, i1* %retval, align 1, !dbg !12939
  ret i1 %26, !dbg !12939
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_put_mstb_malloc(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !12940 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !12943
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !12943
  %malloc_kref = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %1, i32 0, i32 1, !dbg !12943
  %call = call i32 @kref_read(%struct.kref* %malloc_kref) #8, !dbg !12943
  %sub = sub i32 %call, 1, !dbg !12943
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86, i64 0, i64 0), %struct.drm_dp_mst_branch* %0, i32 %sub) #8, !dbg !12943
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !12944
  %malloc_kref1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 1, !dbg !12945
  %call2 = call i32 @kref_put(%struct.kref* %malloc_kref1, void (%struct.kref*)* @drm_dp_free_mst_branch_device) #8, !dbg !12946
  ret void, !dbg !12947
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_free_mst_branch_device(%struct.kref* %kref) #0 !dbg !12948 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !12949, metadata !DIExpression()), !dbg !12950
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !12951, metadata !DIExpression()), !dbg !12952
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12953, metadata !DIExpression()), !dbg !12955
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !12955
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !12955
  store i8* %1, i8** %__mptr, align 8, !dbg !12955
  br label %do.body, !dbg !12955

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12956

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !12955
  %add.ptr = getelementptr i8, i8* %2, i64 -4, !dbg !12955
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_branch*, !dbg !12955
  store %struct.drm_dp_mst_branch* %3, %struct.drm_dp_mst_branch** %tmp, align 8, !dbg !12956
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %tmp, align 8, !dbg !12955
  store %struct.drm_dp_mst_branch* %4, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12952
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12958
  %port_parent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %5, i32 0, i32 7, !dbg !12960
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent, align 8, !dbg !12960
  %tobool = icmp ne %struct.drm_dp_mst_port* %6, null, !dbg !12958
  br i1 %tobool, label %if.then, label %if.end, !dbg !12961

if.then:                                          ; preds = %do.end
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12962
  %port_parent1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %7, i32 0, i32 7, !dbg !12963
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent1, align 8, !dbg !12963
  call void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %8) #8, !dbg !12964
  br label %if.end, !dbg !12964

if.end:                                           ; preds = %if.then, %do.end
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !12965
  %10 = bitcast %struct.drm_dp_mst_branch* %9 to i8*, !dbg !12965
  call void @kfree(i8* %10) #8, !dbg !12966
  ret void, !dbg !12967
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated_locked(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_port* %to_find) #0 !dbg !12968 {
entry:
  %retval = alloca %struct.drm_dp_mst_port*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %to_find.addr = alloca %struct.drm_dp_mst_port*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %mport = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !12971, metadata !DIExpression()), !dbg !12972
  store %struct.drm_dp_mst_port* %to_find, %struct.drm_dp_mst_port** %to_find.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %to_find.addr, metadata !12973, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !12975, metadata !DIExpression()), !dbg !12976
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %mport, metadata !12977, metadata !DIExpression()), !dbg !12978
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12979, metadata !DIExpression()), !dbg !12982
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !12982
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 6, !dbg !12982
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !12982
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !12982
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !12982
  store i8* %2, i8** %__mptr, align 8, !dbg !12982
  br label %do.body, !dbg !12982

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !12983

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12982
  %add.ptr = getelementptr i8, i8* %3, i64 -24, !dbg !12982
  %4 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !12982
  store %struct.drm_dp_mst_port* %4, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !12983
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !12982
  store %struct.drm_dp_mst_port* %5, %struct.drm_dp_mst_port** %port, align 8, !dbg !12985
  br label %for.cond, !dbg !12985

for.cond:                                         ; preds = %do.end15, %do.end
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12986
  %next1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 12, !dbg !12986
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !12986
  %ports2 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %7, i32 0, i32 6, !dbg !12986
  %cmp = icmp eq %struct.list_head* %next1, %ports2, !dbg !12986
  %lnot = xor i1 %cmp, true, !dbg !12986
  br i1 %lnot, label %for.body, label %for.end, !dbg !12985

for.body:                                         ; preds = %for.cond
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12988
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %to_find.addr, align 8, !dbg !12991
  %cmp3 = icmp eq %struct.drm_dp_mst_port* %8, %9, !dbg !12992
  br i1 %cmp3, label %if.then, label %if.end, !dbg !12993

if.then:                                          ; preds = %for.body
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12994
  store %struct.drm_dp_mst_port* %10, %struct.drm_dp_mst_port** %retval, align 8, !dbg !12995
  br label %return, !dbg !12995

if.end:                                           ; preds = %for.body
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !12996
  %mstb4 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 13, !dbg !12998
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb4, align 8, !dbg !12998
  %tobool = icmp ne %struct.drm_dp_mst_branch* %12, null, !dbg !12996
  br i1 %tobool, label %if.then5, label %if.end10, !dbg !12999

if.then5:                                         ; preds = %if.end
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13000
  %mstb6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 13, !dbg !13002
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb6, align 8, !dbg !13002
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %to_find.addr, align 8, !dbg !13003
  %call = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated_locked(%struct.drm_dp_mst_branch* %14, %struct.drm_dp_mst_port* %15) #8, !dbg !13004
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %mport, align 8, !dbg !13005
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %mport, align 8, !dbg !13006
  %tobool7 = icmp ne %struct.drm_dp_mst_port* %16, null, !dbg !13006
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !13008

if.then8:                                         ; preds = %if.then5
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %mport, align 8, !dbg !13009
  store %struct.drm_dp_mst_port* %17, %struct.drm_dp_mst_port** %retval, align 8, !dbg !13010
  br label %return, !dbg !13010

if.end9:                                          ; preds = %if.then5
  br label %if.end10, !dbg !13011

if.end10:                                         ; preds = %if.end9, %if.end
  br label %for.inc, !dbg !13012

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !13013, metadata !DIExpression()), !dbg !13015
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13015
  %next12 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %18, i32 0, i32 12, !dbg !13015
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %next12, i32 0, i32 0, !dbg !13015
  %19 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !13015
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !13015
  store i8* %20, i8** %__mptr11, align 8, !dbg !13015
  br label %do.body14, !dbg !13015

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !13016

do.end15:                                         ; preds = %do.body14
  %21 = load i8*, i8** %__mptr11, align 8, !dbg !13015
  %add.ptr17 = getelementptr i8, i8* %21, i64 -24, !dbg !13015
  %22 = bitcast i8* %add.ptr17 to %struct.drm_dp_mst_port*, !dbg !13015
  store %struct.drm_dp_mst_port* %22, %struct.drm_dp_mst_port** %tmp16, align 8, !dbg !13016
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp16, align 8, !dbg !13015
  store %struct.drm_dp_mst_port* %23, %struct.drm_dp_mst_port** %port, align 8, !dbg !12986
  br label %for.cond, !dbg !12986, !llvm.loop !13018

for.end:                                          ; preds = %for.cond
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %retval, align 8, !dbg !13020
  br label %return, !dbg !13020

return:                                           ; preds = %for.end, %if.then8, %if.then
  %24 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %retval, align 8, !dbg !13021
  ret %struct.drm_dp_mst_port* %24, !dbg !13021
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_topology_try_get_port(%struct.drm_dp_mst_port* %port) #0 !dbg !13022 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !13025, metadata !DIExpression()), !dbg !13026
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13027, metadata !DIExpression()), !dbg !13028
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !13029
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 18, !dbg !13030
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !13030
  call void @topology_ref_history_lock(%struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !13031
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !13032
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 0, !dbg !13033
  %call = call i32 @kref_get_unless_zero(%struct.kref* %topology_kref) #8, !dbg !13034
  store i32 %call, i32* %ret, align 4, !dbg !13035
  %3 = load i32, i32* %ret, align 4, !dbg !13036
  %tobool = icmp ne i32 %3, 0, !dbg !13036
  br i1 %tobool, label %if.then, label %if.end, !dbg !13038

if.then:                                          ; preds = %entry
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !13039
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !13039
  %topology_kref1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 0, !dbg !13039
  %call2 = call i32 @kref_read(%struct.kref* %topology_kref1) #8, !dbg !13039
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), %struct.drm_dp_mst_port* %4, i32 %call2) #8, !dbg !13039
  br label %if.end, !dbg !13041

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !13042
  %mgr3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 18, !dbg !13043
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr3, align 8, !dbg !13043
  call void @topology_ref_history_unlock(%struct.drm_dp_mst_topology_mgr* %7) #8, !dbg !13044
  %8 = load i32, i32* %ret, align 4, !dbg !13045
  ret i32 %8, !dbg !13046
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @topology_ref_history_lock(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !13047 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !13048, metadata !DIExpression()), !dbg !13049
  ret void, !dbg !13050
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @kref_get_unless_zero(%struct.kref* %kref) #0 !dbg !13051 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !13054, metadata !DIExpression()), !dbg !13055
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !13056
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !13057
  %call = call zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %refcount) #8, !dbg !13058
  %conv = zext i1 %call to i32, !dbg !13058
  ret i32 %conv, !dbg !13059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @topology_ref_history_unlock(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !13060 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !13061, metadata !DIExpression()), !dbg !13062
  ret void, !dbg !13063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @refcount_inc_not_zero(%struct.refcount_struct* %r) #0 !dbg !13064 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13065, metadata !DIExpression()), !dbg !13066
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13067
  %call = call zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %0, i32* null) #8, !dbg !13068
  ret i1 %call, !dbg !13069
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_inc_not_zero(%struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13070 {
entry:
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13071, metadata !DIExpression()), !dbg !13072
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13073, metadata !DIExpression()), !dbg !13074
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13075
  %1 = load i32*, i32** %oldp.addr, align 8, !dbg !13076
  %call = call zeroext i1 @__refcount_add_not_zero(i32 1, %struct.refcount_struct* %0, i32* %1) #8, !dbg !13077
  ret i1 %call, !dbg !13078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__refcount_add_not_zero(i32 %i, %struct.refcount_struct* %r, i32* %oldp) #0 !dbg !13079 {
entry:
  %v.addr.i5.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i, metadata !13080, metadata !DIExpression()), !dbg !13084
  %old.addr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i, metadata !13088, metadata !DIExpression()), !dbg !13089
  %new.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i, metadata !13090, metadata !DIExpression()), !dbg !13091
  %success.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i, metadata !13092, metadata !DIExpression()), !dbg !13094
  %_old.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i, metadata !13095, metadata !DIExpression()), !dbg !13094
  %__old.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i, metadata !13096, metadata !DIExpression()), !dbg !13094
  %__new.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i, metadata !13097, metadata !DIExpression()), !dbg !13094
  %__ptr.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i, metadata !13098, metadata !DIExpression()), !dbg !13094
  %tmp.i.i = alloca i64, align 8
  %v.addr.i1.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i1.i, metadata !12750, metadata !DIExpression()), !dbg !13099
  %size.addr.i2.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i2.i, metadata !12754, metadata !DIExpression()), !dbg !13101
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !12750, metadata !DIExpression()), !dbg !13102
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !12754, metadata !DIExpression()), !dbg !13104
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !13105, metadata !DIExpression()), !dbg !13106
  %old.addr.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i, metadata !13107, metadata !DIExpression()), !dbg !13108
  %new.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i, metadata !13109, metadata !DIExpression()), !dbg !13110
  %i.addr = alloca i32, align 4
  %r.addr = alloca %struct.refcount_struct*, align 8
  %oldp.addr = alloca i32*, align 8
  %old = alloca i32, align 4
  store i32 %i, i32* %i.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr, metadata !13111, metadata !DIExpression()), !dbg !13112
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !13113, metadata !DIExpression()), !dbg !13114
  store i32* %oldp, i32** %oldp.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %oldp.addr, metadata !13115, metadata !DIExpression()), !dbg !13116
  call void @llvm.dbg.declare(metadata i32* %old, metadata !13117, metadata !DIExpression()), !dbg !13118
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13119
  %call = call i32 @refcount_read(%struct.refcount_struct* %0) #8, !dbg !13120
  store i32 %call, i32* %old, align 4, !dbg !13118
  br label %do.body, !dbg !13121

do.body:                                          ; preds = %atomic_try_cmpxchg_relaxed.exit, %entry
  %1 = load i32, i32* %old, align 4, !dbg !13122
  %tobool = icmp ne i32 %1, 0, !dbg !13122
  br i1 %tobool, label %if.end, label %if.then, !dbg !13125

if.then:                                          ; preds = %do.body
  br label %do.end, !dbg !13126

if.end:                                           ; preds = %do.body
  br label %do.cond, !dbg !13127

do.cond:                                          ; preds = %if.end
  %2 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13128
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %2, i32 0, i32 0, !dbg !13129
  %3 = load i32, i32* %old, align 4, !dbg !13130
  %4 = load i32, i32* %i.addr, align 4, !dbg !13131
  %add = add i32 %3, %4, !dbg !13132
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32* %old, i32** %old.addr.i, align 8
  store i32 %add, i32* %new.addr.i, align 4
  %5 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13133
  %6 = bitcast %struct.atomic_t* %5 to i8*, !dbg !13133
  store i8* %6, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %7 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13134
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !13135
  %conv.i.i = trunc i64 %8 to i32, !dbg !13135
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %7, i32 %conv.i.i) #10, !dbg !13136
  %9 = load i8*, i8** %v.addr.i.i, align 8, !dbg !13137
  %10 = load i64, i64* %size.addr.i.i, align 8, !dbg !13137
  call void @kcsan_check_access(i8* %9, i64 %10, i32 7) #10, !dbg !13137
  %11 = load i32*, i32** %old.addr.i, align 8, !dbg !13138
  %12 = bitcast i32* %11 to i8*, !dbg !13138
  store i8* %12, i8** %v.addr.i1.i, align 8
  store i64 4, i64* %size.addr.i2.i, align 8
  %13 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !13139
  %14 = load i64, i64* %size.addr.i2.i, align 8, !dbg !13140
  %conv.i3.i = trunc i64 %14 to i32, !dbg !13140
  %call.i4.i = call zeroext i1 @kasan_check_write(i8* %13, i32 %conv.i3.i) #10, !dbg !13141
  %15 = load i8*, i8** %v.addr.i1.i, align 8, !dbg !13142
  %16 = load i64, i64* %size.addr.i2.i, align 8, !dbg !13142
  call void @kcsan_check_access(i8* %15, i64 %16, i32 7) #10, !dbg !13142
  %17 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !13143
  %18 = load i32*, i32** %old.addr.i, align 8, !dbg !13144
  %19 = load i32, i32* %new.addr.i, align 4, !dbg !13145
  store %struct.atomic_t* %17, %struct.atomic_t** %v.addr.i5.i, align 8
  store i32* %18, i32** %old.addr.i.i, align 8
  store i32 %19, i32* %new.addr.i.i, align 4
  %20 = load i32*, i32** %old.addr.i.i, align 8, !dbg !13094
  store i32* %20, i32** %_old.i.i, align 8, !dbg !13094
  %21 = load i32*, i32** %_old.i.i, align 8, !dbg !13094
  %22 = load i32, i32* %21, align 4, !dbg !13094
  store i32 %22, i32* %__old.i.i, align 4, !dbg !13094
  %23 = load i32, i32* %new.addr.i.i, align 4, !dbg !13094
  store i32 %23, i32* %__new.i.i, align 4, !dbg !13094
  %24 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i, align 8, !dbg !13094
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %24, i32 0, i32 0, !dbg !13094
  store i32* %counter.i.i, i32** %__ptr.i.i, align 8, !dbg !13094
  %25 = load i32*, i32** %__ptr.i.i, align 8, !dbg !13094
  %26 = load i32, i32* %__old.i.i, align 4, !dbg !13094
  %27 = load i32, i32* %__new.i.i, align 4, !dbg !13094
  %28 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %25, i32 %27, i32* %25, i32 %26) #7, !dbg !13094, !srcloc !13146
  %asmresult.i.i = extractvalue { i8, i32 } %28, 0, !dbg !13094
  %asmresult1.i.i = extractvalue { i8, i32 } %28, 1, !dbg !13094
  store i8 %asmresult.i.i, i8* %success.i.i, align 1, !dbg !13094
  store i32 %asmresult1.i.i, i32* %__old.i.i, align 4, !dbg !13094
  %29 = load i8, i8* %success.i.i, align 1, !dbg !13147
  %tobool.i.i = trunc i8 %29 to i1, !dbg !13147
  %lnot.i.i = xor i1 %tobool.i.i, true, !dbg !13147
  %lnot3.i.i = xor i1 %tobool.i.i, true, !dbg !13147
  %lnot.ext.i.i = zext i1 %lnot3.i.i to i32, !dbg !13147
  %conv.i6.i = sext i32 %lnot.ext.i.i to i64, !dbg !13147
  br i1 %lnot3.i.i, label %if.then.i.i, label %atomic_try_cmpxchg_relaxed.exit, !dbg !13094

if.then.i.i:                                      ; preds = %do.cond
  %30 = load i32, i32* %__old.i.i, align 4, !dbg !13147
  %31 = load i32*, i32** %_old.i.i, align 8, !dbg !13147
  store i32 %30, i32* %31, align 4, !dbg !13147
  br label %atomic_try_cmpxchg_relaxed.exit, !dbg !13147

atomic_try_cmpxchg_relaxed.exit:                  ; preds = %do.cond, %if.then.i.i
  %32 = load i8, i8* %success.i.i, align 1, !dbg !13094
  %tobool5.i.i = trunc i8 %32 to i1, !dbg !13094
  %lnot6.i.i = xor i1 %tobool5.i.i, true, !dbg !13094
  %lnot.ext9.i.i = zext i1 %tobool5.i.i to i32, !dbg !13094
  %conv10.i.i = sext i32 %lnot.ext9.i.i to i64, !dbg !13094
  store i64 %conv10.i.i, i64* %tmp.i.i, align 8, !dbg !13147
  %33 = load i64, i64* %tmp.i.i, align 8, !dbg !13094
  %tobool11.i.i = icmp ne i64 %33, 0, !dbg !13149
  %lnot = xor i1 %tobool11.i.i, true, !dbg !13150
  br i1 %lnot, label %do.body, label %do.end, !dbg !13127, !llvm.loop !13151

do.end:                                           ; preds = %atomic_try_cmpxchg_relaxed.exit, %if.then
  %34 = load i32*, i32** %oldp.addr, align 8, !dbg !13153
  %tobool2 = icmp ne i32* %34, null, !dbg !13153
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !13155

if.then3:                                         ; preds = %do.end
  %35 = load i32, i32* %old, align 4, !dbg !13156
  %36 = load i32*, i32** %oldp.addr, align 8, !dbg !13157
  store i32 %35, i32* %36, align 4, !dbg !13158
  br label %if.end4, !dbg !13159

if.end4:                                          ; preds = %if.then3, %do.end
  %37 = load i32, i32* %old, align 4, !dbg !13160
  %cmp = icmp slt i32 %37, 0, !dbg !13160
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !13160

lor.rhs:                                          ; preds = %if.end4
  %38 = load i32, i32* %old, align 4, !dbg !13160
  %39 = load i32, i32* %i.addr, align 4, !dbg !13160
  %add5 = add i32 %38, %39, !dbg !13160
  %cmp6 = icmp slt i32 %add5, 0, !dbg !13160
  br label %lor.end, !dbg !13160

lor.end:                                          ; preds = %lor.rhs, %if.end4
  %40 = phi i1 [ true, %if.end4 ], [ %cmp6, %lor.rhs ]
  %lnot7 = xor i1 %40, true, !dbg !13160
  %lnot8 = xor i1 %lnot7, true, !dbg !13160
  %lnot.ext = zext i1 %lnot8 to i32, !dbg !13160
  %conv = sext i32 %lnot.ext to i64, !dbg !13160
  %tobool9 = icmp ne i64 %conv, 0, !dbg !13160
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !13162

if.then10:                                        ; preds = %lor.end
  %41 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !13163
  call void @refcount_warn_saturate(%struct.refcount_struct* %41, i32 0) #8, !dbg !13164
  br label %if.end11, !dbg !13164

if.end11:                                         ; preds = %if.then10, %lor.end
  %42 = load i32, i32* %old, align 4, !dbg !13165
  %tobool12 = icmp ne i32 %42, 0, !dbg !13165
  ret i1 %tobool12, !dbg !13166
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #4

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #3

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #5

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #6 !dbg !13167 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13171, metadata !DIExpression()), !dbg !13175
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13177, metadata !DIExpression()), !dbg !13178
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13179, metadata !DIExpression()), !dbg !13180
  %0 = load i64, i64* %size.addr, align 8, !dbg !13181
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !13183
  br i1 %1, label %if.then, label %if.end447, !dbg !13184

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !13185
  %tobool = icmp ne i64 %2, 0, !dbg !13185
  br i1 %tobool, label %if.end, label %if.then1, !dbg !13188

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !13189
  br label %return, !dbg !13189

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !13190
  %cmp = icmp ult i64 %3, 4096, !dbg !13192
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !13193

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !13194
  br label %return, !dbg !13194

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub = sub i64 %4, 1, !dbg !13195
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !13195
  br i1 %5, label %cond.true, label %cond.false442, !dbg !13195

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub4 = sub i64 %6, 1, !dbg !13195
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !13195
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !13195

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub6 = sub i64 %8, 1, !dbg !13195
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !13195
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !13195

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !13195

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub9 = sub i64 %9, 1, !dbg !13195
  %and = and i64 %sub9, -9223372036854775808, !dbg !13195
  %tobool10 = icmp ne i64 %and, 0, !dbg !13195
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !13195

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !13195

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub13 = sub i64 %10, 1, !dbg !13195
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !13195
  %tobool15 = icmp ne i64 %and14, 0, !dbg !13195
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !13195

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !13195

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub18 = sub i64 %11, 1, !dbg !13195
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !13195
  %tobool20 = icmp ne i64 %and19, 0, !dbg !13195
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !13195

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !13195

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub23 = sub i64 %12, 1, !dbg !13195
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !13195
  %tobool25 = icmp ne i64 %and24, 0, !dbg !13195
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !13195

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !13195

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub28 = sub i64 %13, 1, !dbg !13195
  %and29 = and i64 %sub28, 576460752303423488, !dbg !13195
  %tobool30 = icmp ne i64 %and29, 0, !dbg !13195
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !13195

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !13195

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub33 = sub i64 %14, 1, !dbg !13195
  %and34 = and i64 %sub33, 288230376151711744, !dbg !13195
  %tobool35 = icmp ne i64 %and34, 0, !dbg !13195
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !13195

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !13195

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub38 = sub i64 %15, 1, !dbg !13195
  %and39 = and i64 %sub38, 144115188075855872, !dbg !13195
  %tobool40 = icmp ne i64 %and39, 0, !dbg !13195
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !13195

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !13195

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub43 = sub i64 %16, 1, !dbg !13195
  %and44 = and i64 %sub43, 72057594037927936, !dbg !13195
  %tobool45 = icmp ne i64 %and44, 0, !dbg !13195
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !13195

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !13195

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub48 = sub i64 %17, 1, !dbg !13195
  %and49 = and i64 %sub48, 36028797018963968, !dbg !13195
  %tobool50 = icmp ne i64 %and49, 0, !dbg !13195
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !13195

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !13195

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub53 = sub i64 %18, 1, !dbg !13195
  %and54 = and i64 %sub53, 18014398509481984, !dbg !13195
  %tobool55 = icmp ne i64 %and54, 0, !dbg !13195
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !13195

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !13195

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub58 = sub i64 %19, 1, !dbg !13195
  %and59 = and i64 %sub58, 9007199254740992, !dbg !13195
  %tobool60 = icmp ne i64 %and59, 0, !dbg !13195
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !13195

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !13195

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub63 = sub i64 %20, 1, !dbg !13195
  %and64 = and i64 %sub63, 4503599627370496, !dbg !13195
  %tobool65 = icmp ne i64 %and64, 0, !dbg !13195
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !13195

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !13195

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub68 = sub i64 %21, 1, !dbg !13195
  %and69 = and i64 %sub68, 2251799813685248, !dbg !13195
  %tobool70 = icmp ne i64 %and69, 0, !dbg !13195
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !13195

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !13195

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub73 = sub i64 %22, 1, !dbg !13195
  %and74 = and i64 %sub73, 1125899906842624, !dbg !13195
  %tobool75 = icmp ne i64 %and74, 0, !dbg !13195
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !13195

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !13195

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub78 = sub i64 %23, 1, !dbg !13195
  %and79 = and i64 %sub78, 562949953421312, !dbg !13195
  %tobool80 = icmp ne i64 %and79, 0, !dbg !13195
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !13195

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !13195

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub83 = sub i64 %24, 1, !dbg !13195
  %and84 = and i64 %sub83, 281474976710656, !dbg !13195
  %tobool85 = icmp ne i64 %and84, 0, !dbg !13195
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !13195

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !13195

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub88 = sub i64 %25, 1, !dbg !13195
  %and89 = and i64 %sub88, 140737488355328, !dbg !13195
  %tobool90 = icmp ne i64 %and89, 0, !dbg !13195
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !13195

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !13195

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub93 = sub i64 %26, 1, !dbg !13195
  %and94 = and i64 %sub93, 70368744177664, !dbg !13195
  %tobool95 = icmp ne i64 %and94, 0, !dbg !13195
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !13195

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !13195

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub98 = sub i64 %27, 1, !dbg !13195
  %and99 = and i64 %sub98, 35184372088832, !dbg !13195
  %tobool100 = icmp ne i64 %and99, 0, !dbg !13195
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !13195

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !13195

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub103 = sub i64 %28, 1, !dbg !13195
  %and104 = and i64 %sub103, 17592186044416, !dbg !13195
  %tobool105 = icmp ne i64 %and104, 0, !dbg !13195
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !13195

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !13195

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub108 = sub i64 %29, 1, !dbg !13195
  %and109 = and i64 %sub108, 8796093022208, !dbg !13195
  %tobool110 = icmp ne i64 %and109, 0, !dbg !13195
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !13195

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !13195

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub113 = sub i64 %30, 1, !dbg !13195
  %and114 = and i64 %sub113, 4398046511104, !dbg !13195
  %tobool115 = icmp ne i64 %and114, 0, !dbg !13195
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !13195

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !13195

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub118 = sub i64 %31, 1, !dbg !13195
  %and119 = and i64 %sub118, 2199023255552, !dbg !13195
  %tobool120 = icmp ne i64 %and119, 0, !dbg !13195
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !13195

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !13195

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub123 = sub i64 %32, 1, !dbg !13195
  %and124 = and i64 %sub123, 1099511627776, !dbg !13195
  %tobool125 = icmp ne i64 %and124, 0, !dbg !13195
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !13195

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !13195

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub128 = sub i64 %33, 1, !dbg !13195
  %and129 = and i64 %sub128, 549755813888, !dbg !13195
  %tobool130 = icmp ne i64 %and129, 0, !dbg !13195
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !13195

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !13195

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub133 = sub i64 %34, 1, !dbg !13195
  %and134 = and i64 %sub133, 274877906944, !dbg !13195
  %tobool135 = icmp ne i64 %and134, 0, !dbg !13195
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !13195

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !13195

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub138 = sub i64 %35, 1, !dbg !13195
  %and139 = and i64 %sub138, 137438953472, !dbg !13195
  %tobool140 = icmp ne i64 %and139, 0, !dbg !13195
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !13195

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !13195

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub143 = sub i64 %36, 1, !dbg !13195
  %and144 = and i64 %sub143, 68719476736, !dbg !13195
  %tobool145 = icmp ne i64 %and144, 0, !dbg !13195
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !13195

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !13195

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub148 = sub i64 %37, 1, !dbg !13195
  %and149 = and i64 %sub148, 34359738368, !dbg !13195
  %tobool150 = icmp ne i64 %and149, 0, !dbg !13195
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !13195

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !13195

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub153 = sub i64 %38, 1, !dbg !13195
  %and154 = and i64 %sub153, 17179869184, !dbg !13195
  %tobool155 = icmp ne i64 %and154, 0, !dbg !13195
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !13195

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !13195

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub158 = sub i64 %39, 1, !dbg !13195
  %and159 = and i64 %sub158, 8589934592, !dbg !13195
  %tobool160 = icmp ne i64 %and159, 0, !dbg !13195
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !13195

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !13195

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub163 = sub i64 %40, 1, !dbg !13195
  %and164 = and i64 %sub163, 4294967296, !dbg !13195
  %tobool165 = icmp ne i64 %and164, 0, !dbg !13195
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !13195

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !13195

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub168 = sub i64 %41, 1, !dbg !13195
  %and169 = and i64 %sub168, 2147483648, !dbg !13195
  %tobool170 = icmp ne i64 %and169, 0, !dbg !13195
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !13195

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !13195

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub173 = sub i64 %42, 1, !dbg !13195
  %and174 = and i64 %sub173, 1073741824, !dbg !13195
  %tobool175 = icmp ne i64 %and174, 0, !dbg !13195
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !13195

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !13195

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub178 = sub i64 %43, 1, !dbg !13195
  %and179 = and i64 %sub178, 536870912, !dbg !13195
  %tobool180 = icmp ne i64 %and179, 0, !dbg !13195
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !13195

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !13195

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub183 = sub i64 %44, 1, !dbg !13195
  %and184 = and i64 %sub183, 268435456, !dbg !13195
  %tobool185 = icmp ne i64 %and184, 0, !dbg !13195
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !13195

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !13195

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub188 = sub i64 %45, 1, !dbg !13195
  %and189 = and i64 %sub188, 134217728, !dbg !13195
  %tobool190 = icmp ne i64 %and189, 0, !dbg !13195
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !13195

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !13195

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub193 = sub i64 %46, 1, !dbg !13195
  %and194 = and i64 %sub193, 67108864, !dbg !13195
  %tobool195 = icmp ne i64 %and194, 0, !dbg !13195
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !13195

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !13195

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub198 = sub i64 %47, 1, !dbg !13195
  %and199 = and i64 %sub198, 33554432, !dbg !13195
  %tobool200 = icmp ne i64 %and199, 0, !dbg !13195
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !13195

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !13195

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub203 = sub i64 %48, 1, !dbg !13195
  %and204 = and i64 %sub203, 16777216, !dbg !13195
  %tobool205 = icmp ne i64 %and204, 0, !dbg !13195
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !13195

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !13195

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub208 = sub i64 %49, 1, !dbg !13195
  %and209 = and i64 %sub208, 8388608, !dbg !13195
  %tobool210 = icmp ne i64 %and209, 0, !dbg !13195
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !13195

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !13195

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub213 = sub i64 %50, 1, !dbg !13195
  %and214 = and i64 %sub213, 4194304, !dbg !13195
  %tobool215 = icmp ne i64 %and214, 0, !dbg !13195
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !13195

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !13195

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub218 = sub i64 %51, 1, !dbg !13195
  %and219 = and i64 %sub218, 2097152, !dbg !13195
  %tobool220 = icmp ne i64 %and219, 0, !dbg !13195
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !13195

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !13195

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub223 = sub i64 %52, 1, !dbg !13195
  %and224 = and i64 %sub223, 1048576, !dbg !13195
  %tobool225 = icmp ne i64 %and224, 0, !dbg !13195
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !13195

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !13195

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub228 = sub i64 %53, 1, !dbg !13195
  %and229 = and i64 %sub228, 524288, !dbg !13195
  %tobool230 = icmp ne i64 %and229, 0, !dbg !13195
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !13195

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !13195

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub233 = sub i64 %54, 1, !dbg !13195
  %and234 = and i64 %sub233, 262144, !dbg !13195
  %tobool235 = icmp ne i64 %and234, 0, !dbg !13195
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !13195

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !13195

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub238 = sub i64 %55, 1, !dbg !13195
  %and239 = and i64 %sub238, 131072, !dbg !13195
  %tobool240 = icmp ne i64 %and239, 0, !dbg !13195
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !13195

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !13195

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub243 = sub i64 %56, 1, !dbg !13195
  %and244 = and i64 %sub243, 65536, !dbg !13195
  %tobool245 = icmp ne i64 %and244, 0, !dbg !13195
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !13195

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !13195

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub248 = sub i64 %57, 1, !dbg !13195
  %and249 = and i64 %sub248, 32768, !dbg !13195
  %tobool250 = icmp ne i64 %and249, 0, !dbg !13195
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !13195

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !13195

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub253 = sub i64 %58, 1, !dbg !13195
  %and254 = and i64 %sub253, 16384, !dbg !13195
  %tobool255 = icmp ne i64 %and254, 0, !dbg !13195
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !13195

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !13195

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub258 = sub i64 %59, 1, !dbg !13195
  %and259 = and i64 %sub258, 8192, !dbg !13195
  %tobool260 = icmp ne i64 %and259, 0, !dbg !13195
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !13195

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !13195

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub263 = sub i64 %60, 1, !dbg !13195
  %and264 = and i64 %sub263, 4096, !dbg !13195
  %tobool265 = icmp ne i64 %and264, 0, !dbg !13195
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !13195

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !13195

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub268 = sub i64 %61, 1, !dbg !13195
  %and269 = and i64 %sub268, 2048, !dbg !13195
  %tobool270 = icmp ne i64 %and269, 0, !dbg !13195
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !13195

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !13195

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub273 = sub i64 %62, 1, !dbg !13195
  %and274 = and i64 %sub273, 1024, !dbg !13195
  %tobool275 = icmp ne i64 %and274, 0, !dbg !13195
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !13195

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !13195

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub278 = sub i64 %63, 1, !dbg !13195
  %and279 = and i64 %sub278, 512, !dbg !13195
  %tobool280 = icmp ne i64 %and279, 0, !dbg !13195
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !13195

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !13195

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub283 = sub i64 %64, 1, !dbg !13195
  %and284 = and i64 %sub283, 256, !dbg !13195
  %tobool285 = icmp ne i64 %and284, 0, !dbg !13195
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !13195

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !13195

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub288 = sub i64 %65, 1, !dbg !13195
  %and289 = and i64 %sub288, 128, !dbg !13195
  %tobool290 = icmp ne i64 %and289, 0, !dbg !13195
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !13195

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !13195

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub293 = sub i64 %66, 1, !dbg !13195
  %and294 = and i64 %sub293, 64, !dbg !13195
  %tobool295 = icmp ne i64 %and294, 0, !dbg !13195
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !13195

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !13195

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub298 = sub i64 %67, 1, !dbg !13195
  %and299 = and i64 %sub298, 32, !dbg !13195
  %tobool300 = icmp ne i64 %and299, 0, !dbg !13195
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !13195

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !13195

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub303 = sub i64 %68, 1, !dbg !13195
  %and304 = and i64 %sub303, 16, !dbg !13195
  %tobool305 = icmp ne i64 %and304, 0, !dbg !13195
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !13195

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !13195

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub308 = sub i64 %69, 1, !dbg !13195
  %and309 = and i64 %sub308, 8, !dbg !13195
  %tobool310 = icmp ne i64 %and309, 0, !dbg !13195
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !13195

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !13195

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub313 = sub i64 %70, 1, !dbg !13195
  %and314 = and i64 %sub313, 4, !dbg !13195
  %tobool315 = icmp ne i64 %and314, 0, !dbg !13195
  %71 = zext i1 %tobool315 to i64, !dbg !13195
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !13195
  br label %cond.end, !dbg !13195

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !13195
  br label %cond.end317, !dbg !13195

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !13195
  br label %cond.end319, !dbg !13195

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !13195
  br label %cond.end321, !dbg !13195

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !13195
  br label %cond.end323, !dbg !13195

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !13195
  br label %cond.end325, !dbg !13195

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !13195
  br label %cond.end327, !dbg !13195

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !13195
  br label %cond.end329, !dbg !13195

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !13195
  br label %cond.end331, !dbg !13195

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !13195
  br label %cond.end333, !dbg !13195

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !13195
  br label %cond.end335, !dbg !13195

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !13195
  br label %cond.end337, !dbg !13195

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !13195
  br label %cond.end339, !dbg !13195

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !13195
  br label %cond.end341, !dbg !13195

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !13195
  br label %cond.end343, !dbg !13195

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !13195
  br label %cond.end345, !dbg !13195

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !13195
  br label %cond.end347, !dbg !13195

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !13195
  br label %cond.end349, !dbg !13195

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !13195
  br label %cond.end351, !dbg !13195

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !13195
  br label %cond.end353, !dbg !13195

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !13195
  br label %cond.end355, !dbg !13195

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !13195
  br label %cond.end357, !dbg !13195

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !13195
  br label %cond.end359, !dbg !13195

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !13195
  br label %cond.end361, !dbg !13195

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !13195
  br label %cond.end363, !dbg !13195

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !13195
  br label %cond.end365, !dbg !13195

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !13195
  br label %cond.end367, !dbg !13195

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !13195
  br label %cond.end369, !dbg !13195

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !13195
  br label %cond.end371, !dbg !13195

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !13195
  br label %cond.end373, !dbg !13195

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !13195
  br label %cond.end375, !dbg !13195

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !13195
  br label %cond.end377, !dbg !13195

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !13195
  br label %cond.end379, !dbg !13195

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !13195
  br label %cond.end381, !dbg !13195

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !13195
  br label %cond.end383, !dbg !13195

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !13195
  br label %cond.end385, !dbg !13195

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !13195
  br label %cond.end387, !dbg !13195

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !13195
  br label %cond.end389, !dbg !13195

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !13195
  br label %cond.end391, !dbg !13195

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !13195
  br label %cond.end393, !dbg !13195

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !13195
  br label %cond.end395, !dbg !13195

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !13195
  br label %cond.end397, !dbg !13195

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !13195
  br label %cond.end399, !dbg !13195

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !13195
  br label %cond.end401, !dbg !13195

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !13195
  br label %cond.end403, !dbg !13195

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !13195
  br label %cond.end405, !dbg !13195

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !13195
  br label %cond.end407, !dbg !13195

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !13195
  br label %cond.end409, !dbg !13195

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !13195
  br label %cond.end411, !dbg !13195

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !13195
  br label %cond.end413, !dbg !13195

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !13195
  br label %cond.end415, !dbg !13195

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !13195
  br label %cond.end417, !dbg !13195

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !13195
  br label %cond.end419, !dbg !13195

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !13195
  br label %cond.end421, !dbg !13195

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !13195
  br label %cond.end423, !dbg !13195

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !13195
  br label %cond.end425, !dbg !13195

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !13195
  br label %cond.end427, !dbg !13195

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !13195
  br label %cond.end429, !dbg !13195

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !13195
  br label %cond.end431, !dbg !13195

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !13195
  br label %cond.end433, !dbg !13195

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !13195
  br label %cond.end435, !dbg !13195

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !13195
  br label %cond.end437, !dbg !13195

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !13195
  br label %cond.end440, !dbg !13195

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !13195

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !13195
  br label %cond.end444, !dbg !13195

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !13195
  %sub443 = sub i64 %72, 1, !dbg !13195
  %call = call i32 @__ilog2_u64(i64 %sub443) #9, !dbg !13195
  br label %cond.end444, !dbg !13195

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !13195
  %sub446 = sub i32 %cond445, 12, !dbg !13196
  %add = add i32 %sub446, 1, !dbg !13197
  store i32 %add, i32* %retval, align 4, !dbg !13198
  br label %return, !dbg !13198

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !13199
  %dec = add i64 %73, -1, !dbg !13199
  store i64 %dec, i64* %size.addr, align 8, !dbg !13199
  %74 = load i64, i64* %size.addr, align 8, !dbg !13200
  %shr = lshr i64 %74, 12, !dbg !13200
  store i64 %shr, i64* %size.addr, align 8, !dbg !13200
  %75 = load i64, i64* %size.addr, align 8, !dbg !13201
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13178
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !13202
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !13203
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #11, !dbg !13202, !srcloc !13204
  store i32 %78, i32* %bitpos.i, align 4, !dbg !13202
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !13205
  %add.i = add i32 %79, 1, !dbg !13206
  store i32 %add.i, i32* %retval, align 4, !dbg !13207
  br label %return, !dbg !13207

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !13208
  ret i32 %80, !dbg !13208
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #6 !dbg !13209 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !13171, metadata !DIExpression()), !dbg !13213
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !13177, metadata !DIExpression()), !dbg !13215
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !13216, metadata !DIExpression()), !dbg !13217
  %0 = load i64, i64* %n.addr, align 8, !dbg !13218
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !13215
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !13219
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !13220
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #11, !dbg !13219, !srcloc !13204
  store i32 %3, i32* %bitpos.i, align 4, !dbg !13219
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !13221
  %add.i = add i32 %4, 1, !dbg !13222
  %sub = sub i32 %add.i, 1, !dbg !13223
  ret i32 %sub, !dbg !13224
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #3

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !13225 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !13229, metadata !DIExpression()), !dbg !13230
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !13231, metadata !DIExpression()), !dbg !13232
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !13233, metadata !DIExpression()), !dbg !13234
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13235, metadata !DIExpression()), !dbg !13236
  %0 = load i8*, i8** %object.addr, align 8, !dbg !13237
  ret i8* %0, !dbg !13238
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_destroy_port(%struct.kref* %kref) #0 !dbg !13239 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !13240, metadata !DIExpression()), !dbg !13241
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !13242, metadata !DIExpression()), !dbg !13243
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13244, metadata !DIExpression()), !dbg !13246
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !13246
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !13246
  store i8* %1, i8** %__mptr, align 8, !dbg !13246
  br label %do.body, !dbg !13246

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13247

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !13246
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !13246
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !13246
  store %struct.drm_dp_mst_port* %3, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !13247
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !13246
  store %struct.drm_dp_mst_port* %4, %struct.drm_dp_mst_port** %port, align 8, !dbg !13243
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !13249, metadata !DIExpression()), !dbg !13250
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13251
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 18, !dbg !13252
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !13252
  store %struct.drm_dp_mst_topology_mgr* %6, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !13250
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13253
  call void @drm_dp_mst_dump_port_topology_history(%struct.drm_dp_mst_port* %7) #8, !dbg !13254
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13255
  %input = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 3, !dbg !13257
  %9 = load i8, i8* %input, align 1, !dbg !13257
  %tobool = trunc i8 %9 to i1, !dbg !13257
  br i1 %tobool, label %if.then, label %if.end, !dbg !13258

if.then:                                          ; preds = %do.end
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13259
  call void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %10) #8, !dbg !13261
  br label %return, !dbg !13262

if.end:                                           ; preds = %do.end
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13263
  %cached_edid = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 19, !dbg !13264
  %12 = load %struct.edid*, %struct.edid** %cached_edid, align 8, !dbg !13264
  %13 = bitcast %struct.edid* %12 to i8*, !dbg !13263
  call void @kfree(i8* %13) #8, !dbg !13265
  %14 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !13266
  %delayed_destroy_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %14, i32 0, i32 29, !dbg !13267
  call void @mutex_lock(%struct.mutex* %delayed_destroy_lock) #8, !dbg !13268
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !13269
  %next = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 12, !dbg !13270
  %16 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !13271
  %destroy_port_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %16, i32 0, i32 27, !dbg !13272
  call void @list_add(%struct.list_head* %next, %struct.list_head* %destroy_port_list) #8, !dbg !13273
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !13274
  %delayed_destroy_lock2 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 29, !dbg !13275
  call void @mutex_unlock(%struct.mutex* %delayed_destroy_lock2) #8, !dbg !13276
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !13277
  %delayed_destroy_wq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 30, !dbg !13278
  %19 = load %struct.workqueue_struct*, %struct.workqueue_struct** %delayed_destroy_wq, align 8, !dbg !13278
  %20 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !13279
  %delayed_destroy_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %20, i32 0, i32 31, !dbg !13280
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %19, %struct.work_struct* %delayed_destroy_work) #8, !dbg !13281
  br label %return, !dbg !13282

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !13282
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_dump_port_topology_history(%struct.drm_dp_mst_port* %port) #0 !dbg !13283 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !13284, metadata !DIExpression()), !dbg !13285
  ret void, !dbg !13286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !13287 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13288, metadata !DIExpression()), !dbg !13289
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13290, metadata !DIExpression()), !dbg !13291
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13292
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13293
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !13294
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13294
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13295
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #8, !dbg !13296
  ret void, !dbg !13297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_debug_enabled(i32 %category) #0 !dbg !13298 {
entry:
  %category.addr = alloca i32, align 4
  store i32 %category, i32* %category.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %category.addr, metadata !13301, metadata !DIExpression()), !dbg !13302
  %0 = load i32, i32* @__drm_debug, align 4, !dbg !13303
  %1 = load i32, i32* %category.addr, align 4, !dbg !13303
  %and = and i32 %0, %1, !dbg !13303
  %tobool = icmp ne i32 %and, 0, !dbg !13303
  %lnot = xor i1 %tobool, true, !dbg !13303
  %lnot1 = xor i1 %lnot, true, !dbg !13303
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !13303
  %conv = sext i32 %lnot.ext to i64, !dbg !13303
  %tobool2 = icmp ne i64 %conv, 0, !dbg !13303
  ret i1 %tobool2, !dbg !13304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_debug_printer(%struct.drm_printer* noalias sret %agg.result, i8* %prefix) #0 !dbg !13305 {
entry:
  %prefix.addr = alloca i8*, align 8
  store i8* %prefix, i8** %prefix.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %prefix.addr, metadata !13308, metadata !DIExpression()), !dbg !13309
  call void @llvm.dbg.declare(metadata %struct.drm_printer* %agg.result, metadata !13310, metadata !DIExpression()), !dbg !13311
  %printfn = getelementptr inbounds %struct.drm_printer, %struct.drm_printer* %agg.result, i32 0, i32 0, !dbg !13312
  store void (%struct.drm_printer*, %struct.va_format*)* @__drm_printfn_debug, void (%struct.drm_printer*, %struct.va_format*)** %printfn, align 8, !dbg !13312
  %puts = getelementptr inbounds %struct.drm_printer, %struct.drm_printer* %agg.result, i32 0, i32 1, !dbg !13312
  store void (%struct.drm_printer*, i8*)* null, void (%struct.drm_printer*, i8*)** %puts, align 8, !dbg !13312
  %arg = getelementptr inbounds %struct.drm_printer, %struct.drm_printer* %agg.result, i32 0, i32 2, !dbg !13312
  store i8* null, i8** %arg, align 8, !dbg !13312
  %prefix1 = getelementptr inbounds %struct.drm_printer, %struct.drm_printer* %agg.result, i32 0, i32 3, !dbg !13312
  %0 = load i8*, i8** %prefix.addr, align 8, !dbg !13313
  store i8* %0, i8** %prefix1, align 8, !dbg !13312
  ret void, !dbg !13314
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_dump_sideband_msg_tx(%struct.drm_printer* %p, %struct.drm_dp_sideband_msg_tx* %txmsg) #0 !dbg !13315 {
entry:
  %p.addr = alloca %struct.drm_printer*, align 8
  %txmsg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  %buf = alloca [64 x i8], align 16
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.drm_printer* %p, %struct.drm_printer** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_printer** %p.addr, metadata !13318, metadata !DIExpression()), !dbg !13319
  store %struct.drm_dp_sideband_msg_tx* %txmsg, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg.addr, metadata !13320, metadata !DIExpression()), !dbg !13321
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !13322, metadata !DIExpression()), !dbg !13323
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !13324, metadata !DIExpression()), !dbg !13326
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13327, metadata !DIExpression()), !dbg !13328
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13329, metadata !DIExpression()), !dbg !13330
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13331
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %0, i32 0, i32 4, !dbg !13332
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !13332
  %rad = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %1, i32 0, i32 3, !dbg !13333
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !13331
  %2 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13334
  %dst1 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %2, i32 0, i32 4, !dbg !13335
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %dst1, align 8, !dbg !13335
  %lct = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %3, i32 0, i32 4, !dbg !13336
  %4 = load i8, i8* %lct, align 8, !dbg !13336
  %arraydecay2 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !13337
  %call = call i32 @drm_dp_mst_rad_to_str(i8* %arraydecay, i8 zeroext %4, i8* %arraydecay2, i64 64) #8, !dbg !13338
  %5 = load %struct.drm_printer*, %struct.drm_printer** %p.addr, align 8, !dbg !13339
  %6 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13340
  %cur_offset = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %6, i32 0, i32 2, !dbg !13341
  %7 = load i8, i8* %cur_offset, align 8, !dbg !13341
  %conv = zext i8 %7 to i32, !dbg !13340
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13342
  %cur_len = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %8, i32 0, i32 3, !dbg !13343
  %9 = load i8, i8* %cur_len, align 1, !dbg !13343
  %conv3 = zext i8 %9 to i32, !dbg !13342
  %10 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13344
  %seqno = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %10, i32 0, i32 6, !dbg !13345
  %11 = load i32, i32* %seqno, align 8, !dbg !13345
  %12 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13346
  %state = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %12, i32 0, i32 7, !dbg !13347
  %13 = load i32, i32* %state, align 4, !dbg !13347
  %call4 = call i8* @drm_dp_mst_sideband_tx_state_str(i32 %13) #8, !dbg !13348
  %14 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13349
  %path_msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %14, i32 0, i32 8, !dbg !13350
  %15 = load i8, i8* %path_msg, align 8, !dbg !13350
  %tobool = trunc i8 %15 to i1, !dbg !13350
  %conv5 = zext i1 %tobool to i32, !dbg !13349
  %arraydecay6 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !13351
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %5, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.89, i64 0, i64 0), i32 %conv, i32 %conv3, i32 %11, i8* %call4, i32 %conv5, i8* %arraydecay6) #8, !dbg !13352
  %16 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13353
  %call7 = call i32 @drm_dp_decode_sideband_req(%struct.drm_dp_sideband_msg_tx* %16, %struct.drm_dp_sideband_msg_req_body* %req) #8, !dbg !13354
  store i32 %call7, i32* %ret, align 4, !dbg !13355
  %17 = load i32, i32* %ret, align 4, !dbg !13356
  %tobool8 = icmp ne i32 %17, 0, !dbg !13356
  br i1 %tobool8, label %if.then, label %if.end, !dbg !13358

if.then:                                          ; preds = %entry
  %18 = load %struct.drm_printer*, %struct.drm_printer** %p.addr, align 8, !dbg !13359
  %19 = load i32, i32* %ret, align 4, !dbg !13361
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %18, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.90, i64 0, i64 0), i32 %19) #8, !dbg !13362
  br label %sw.epilog, !dbg !13363

if.end:                                           ; preds = %entry
  %20 = load %struct.drm_printer*, %struct.drm_printer** %p.addr, align 8, !dbg !13364
  call void @drm_dp_dump_sideband_msg_req_body(%struct.drm_dp_sideband_msg_req_body* %req, i32 1, %struct.drm_printer* %20) #8, !dbg !13365
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !13366
  %21 = load i8, i8* %req_type, align 8, !dbg !13366
  %conv9 = zext i8 %21 to i32, !dbg !13367
  switch i32 %conv9, label %sw.epilog [
    i32 33, label %sw.bb
    i32 34, label %sw.bb10
    i32 35, label %sw.bb17
  ], !dbg !13368

sw.bb:                                            ; preds = %if.end
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !13369
  %dpcd_write = bitcast %union.ack_req* %u to %struct.drm_dp_remote_dpcd_write*, !dbg !13371
  %bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write, i32 0, i32 3, !dbg !13372
  %22 = load i8*, i8** %bytes, align 8, !dbg !13372
  call void @kfree(i8* %22) #8, !dbg !13373
  br label %sw.epilog, !dbg !13374

sw.bb10:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !13375
  br label %for.cond, !dbg !13377

for.cond:                                         ; preds = %for.inc, %sw.bb10
  %23 = load i32, i32* %i, align 4, !dbg !13378
  %u11 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !13380
  %i2c_read = bitcast %union.ack_req* %u11 to %struct.drm_dp_remote_i2c_read*, !dbg !13381
  %num_transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read, i32 0, i32 0, !dbg !13382
  %24 = load i8, i8* %num_transactions, align 8, !dbg !13382
  %conv12 = zext i8 %24 to i32, !dbg !13383
  %cmp = icmp slt i32 %23, %conv12, !dbg !13384
  br i1 %cmp, label %for.body, label %for.end, !dbg !13385

for.body:                                         ; preds = %for.cond
  %u14 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !13386
  %i2c_read15 = bitcast %union.ack_req* %u14 to %struct.drm_dp_remote_i2c_read*, !dbg !13387
  %transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read15, i32 0, i32 2, !dbg !13388
  %25 = load i32, i32* %i, align 4, !dbg !13389
  %idxprom = sext i32 %25 to i64, !dbg !13390
  %arrayidx = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions, i64 0, i64 %idxprom, !dbg !13390
  %bytes16 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx, i32 0, i32 2, !dbg !13391
  %26 = load i8*, i8** %bytes16, align 8, !dbg !13391
  call void @kfree(i8* %26) #8, !dbg !13392
  br label %for.inc, !dbg !13392

for.inc:                                          ; preds = %for.body
  %27 = load i32, i32* %i, align 4, !dbg !13393
  %inc = add i32 %27, 1, !dbg !13393
  store i32 %inc, i32* %i, align 4, !dbg !13393
  br label %for.cond, !dbg !13394, !llvm.loop !13395

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !13397

sw.bb17:                                          ; preds = %if.end
  %u18 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !13398
  %i2c_write = bitcast %union.ack_req* %u18 to %struct.drm_dp_remote_i2c_write*, !dbg !13399
  %bytes19 = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write, i32 0, i32 3, !dbg !13400
  %28 = load i8*, i8** %bytes19, align 8, !dbg !13400
  call void @kfree(i8* %28) #8, !dbg !13401
  br label %sw.epilog, !dbg !13402

sw.epilog:                                        ; preds = %if.then, %if.end, %sw.bb17, %for.end, %sw.bb
  ret void, !dbg !13403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_is_singular(%struct.list_head* %head) #0 !dbg !13404 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13409, metadata !DIExpression()), !dbg !13410
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13411
  %call = call i32 @list_empty(%struct.list_head* %0) #8, !dbg !13412
  %tobool = icmp ne i32 %call, 0, !dbg !13412
  br i1 %tobool, label %land.end, label %land.rhs, !dbg !13413

land.rhs:                                         ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13414
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13415
  %2 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13415
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13416
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !13417
  %4 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !13417
  %cmp = icmp eq %struct.list_head* %2, %4, !dbg !13418
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !13419
  %land.ext = zext i1 %5 to i32, !dbg !13413
  ret i32 %land.ext, !dbg !13420
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @process_single_down_tx_qlock(%struct.drm_dp_mst_topology_mgr* %mgr) #0 !dbg !13421 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %ret = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__mptr = alloca i8*, align 8
  %tmp27 = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !13422, metadata !DIExpression()), !dbg !13423
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !13424, metadata !DIExpression()), !dbg !13425
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13426, metadata !DIExpression()), !dbg !13427
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !13428, metadata !DIExpression()), !dbg !13430
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13430
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 17, !dbg !13430
  %call = call zeroext i1 @mutex_is_locked(%struct.mutex* %qlock) #8, !dbg !13430
  %lnot = xor i1 %call, true, !dbg !13430
  %lnot1 = xor i1 %lnot, true, !dbg !13430
  %lnot2 = xor i1 %lnot1, true, !dbg !13430
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !13430
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !13430
  %1 = load i32, i32* %__ret_warn_on, align 4, !dbg !13431
  %tobool = icmp ne i32 %1, 0, !dbg !13431
  %lnot3 = xor i1 %tobool, true, !dbg !13431
  %lnot5 = xor i1 %lnot3, true, !dbg !13431
  %lnot.ext6 = zext i1 %lnot5 to i32, !dbg !13431
  %conv = sext i32 %lnot.ext6 to i64, !dbg !13431
  %tobool7 = icmp ne i64 %conv, 0, !dbg !13431
  br i1 %tobool7, label %if.then, label %if.end, !dbg !13430

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !13431

do.body:                                          ; preds = %if.then
  br label %do.body8, !dbg !13433

do.body8:                                         ; preds = %do.body
  br label %do.end, !dbg !13435

do.end:                                           ; preds = %do.body8
  br label %do.body9, !dbg !13433

do.body9:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 2905, i32 2305, i64 12) #7, !dbg !13437, !srcloc !13439
  br label %do.end10, !dbg !13437

do.end10:                                         ; preds = %do.body9
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 320) #7, !dbg !13440, !srcloc !13442
  br label %do.body11, !dbg !13433

do.body11:                                        ; preds = %do.end10
  br label %do.end12, !dbg !13443

do.end12:                                         ; preds = %do.body11
  br label %do.end13, !dbg !13433

do.end13:                                         ; preds = %do.end12
  br label %if.end, !dbg !13433

if.end:                                           ; preds = %do.end13, %entry
  %2 = load i32, i32* %__ret_warn_on, align 4, !dbg !13430
  %tobool14 = icmp ne i32 %2, 0, !dbg !13430
  %lnot15 = xor i1 %tobool14, true, !dbg !13430
  %lnot17 = xor i1 %lnot15, true, !dbg !13430
  %lnot.ext18 = zext i1 %lnot17 to i32, !dbg !13430
  %conv19 = sext i32 %lnot.ext18 to i64, !dbg !13430
  store i64 %conv19, i64* %tmp, align 8, !dbg !13431
  %3 = load i64, i64* %tmp, align 8, !dbg !13430
  %4 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13445
  %tx_msg_downq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %4, i32 0, i32 18, !dbg !13447
  %call20 = call i32 @list_empty(%struct.list_head* %tx_msg_downq) #8, !dbg !13448
  %tobool21 = icmp ne i32 %call20, 0, !dbg !13448
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !13449

if.then22:                                        ; preds = %if.end
  br label %if.end32, !dbg !13450

if.end23:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !13451, metadata !DIExpression()), !dbg !13453
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13453
  %tx_msg_downq24 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 18, !dbg !13453
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %tx_msg_downq24, i32 0, i32 0, !dbg !13453
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13453
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !13453
  store i8* %7, i8** %__mptr, align 8, !dbg !13453
  br label %do.body25, !dbg !13453

do.body25:                                        ; preds = %if.end23
  br label %do.end26, !dbg !13454

do.end26:                                         ; preds = %do.body25
  %8 = load i8*, i8** %__mptr, align 8, !dbg !13453
  %add.ptr = getelementptr i8, i8* %8, i64 -320, !dbg !13453
  %9 = bitcast i8* %add.ptr to %struct.drm_dp_sideband_msg_tx*, !dbg !13453
  store %struct.drm_dp_sideband_msg_tx* %9, %struct.drm_dp_sideband_msg_tx** %tmp27, align 8, !dbg !13454
  %10 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %tmp27, align 8, !dbg !13453
  store %struct.drm_dp_sideband_msg_tx* %10, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !13456
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13457
  %12 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !13458
  %call28 = call i32 @process_single_tx_qlock(%struct.drm_dp_mst_topology_mgr* %11, %struct.drm_dp_sideband_msg_tx* %12, i1 zeroext false) #8, !dbg !13459
  store i32 %call28, i32* %ret, align 4, !dbg !13460
  %13 = load i32, i32* %ret, align 4, !dbg !13461
  %cmp = icmp slt i32 %13, 0, !dbg !13463
  br i1 %cmp, label %if.then30, label %if.end32, !dbg !13464

if.then30:                                        ; preds = %do.end26
  %14 = load i32, i32* %ret, align 4, !dbg !13465
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.97, i64 0, i64 0), i32 %14) #8, !dbg !13465
  %15 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !13467
  %next31 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %15, i32 0, i32 5, !dbg !13468
  call void @list_del(%struct.list_head* %next31) #8, !dbg !13469
  %16 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !13470
  %state = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %16, i32 0, i32 7, !dbg !13471
  store i32 4, i32* %state, align 4, !dbg !13472
  %17 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13473
  %tx_waitq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %17, i32 0, i32 24, !dbg !13473
  call void @__wake_up(%struct.wait_queue_head* %tx_waitq, i32 3, i32 0, i8* null) #8, !dbg !13473
  br label %if.end32, !dbg !13474

if.end32:                                         ; preds = %if.then22, %if.then30, %do.end26
  ret void, !dbg !13475
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13476 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13479, metadata !DIExpression()), !dbg !13480
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13481, metadata !DIExpression()), !dbg !13482
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13483, metadata !DIExpression()), !dbg !13484
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13485
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13487
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13488
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #8, !dbg !13489
  br i1 %call, label %if.end, label %if.then, !dbg !13490

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !13491

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13492
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13493
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !13494
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !13495
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !13496
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13497
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !13498
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !13499
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13500
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13501
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !13502
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !13503
  br label %do.body, !dbg !13504

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !13505

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !13507

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !13505

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !13509
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !13509
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !13509
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !13509
  br label %do.end7, !dbg !13509

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !13505

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !13511
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !13512 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !13515, metadata !DIExpression()), !dbg !13516
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !13517, metadata !DIExpression()), !dbg !13518
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !13519, metadata !DIExpression()), !dbg !13520
  ret i1 true, !dbg !13521
}

; Function Attrs: noredzone
declare dso_local void @__drm_printfn_debug(%struct.drm_printer*, %struct.va_format*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_rad_to_str(i8* %rad, i8 zeroext %lct, i8* %out, i64 %len) #0 !dbg !13522 {
entry:
  %rad.addr = alloca i8*, align 8
  %lct.addr = alloca i8, align 1
  %out.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %unpacked_rad = alloca [16 x i8], align 16
  store i8* %rad, i8** %rad.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rad.addr, metadata !13525, metadata !DIExpression()), !dbg !13526
  store i8 %lct, i8* %lct.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lct.addr, metadata !13527, metadata !DIExpression()), !dbg !13528
  store i8* %out, i8** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %out.addr, metadata !13529, metadata !DIExpression()), !dbg !13530
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !13531, metadata !DIExpression()), !dbg !13532
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13533, metadata !DIExpression()), !dbg !13534
  call void @llvm.dbg.declare(metadata [16 x i8]* %unpacked_rad, metadata !13535, metadata !DIExpression()), !dbg !13536
  store i32 0, i32* %i, align 4, !dbg !13537
  br label %for.cond, !dbg !13539

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13540
  %1 = load i8, i8* %lct.addr, align 1, !dbg !13542
  %conv = zext i8 %1 to i32, !dbg !13542
  %cmp = icmp slt i32 %0, %conv, !dbg !13543
  br i1 %cmp, label %for.body, label %for.end, !dbg !13544

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !13545
  %rem = srem i32 %2, 2, !dbg !13548
  %tobool = icmp ne i32 %rem, 0, !dbg !13548
  br i1 %tobool, label %if.then, label %if.else, !dbg !13549

if.then:                                          ; preds = %for.body
  %3 = load i8*, i8** %rad.addr, align 8, !dbg !13550
  %4 = load i32, i32* %i, align 4, !dbg !13551
  %div = sdiv i32 %4, 2, !dbg !13552
  %idxprom = sext i32 %div to i64, !dbg !13550
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !13550
  %5 = load i8, i8* %arrayidx, align 1, !dbg !13550
  %conv2 = zext i8 %5 to i32, !dbg !13550
  %shr = ashr i32 %conv2, 4, !dbg !13553
  %conv3 = trunc i32 %shr to i8, !dbg !13550
  %6 = load i32, i32* %i, align 4, !dbg !13554
  %idxprom4 = sext i32 %6 to i64, !dbg !13555
  %arrayidx5 = getelementptr [16 x i8], [16 x i8]* %unpacked_rad, i64 0, i64 %idxprom4, !dbg !13555
  store i8 %conv3, i8* %arrayidx5, align 1, !dbg !13556
  br label %if.end, !dbg !13555

if.else:                                          ; preds = %for.body
  %7 = load i8*, i8** %rad.addr, align 8, !dbg !13557
  %8 = load i32, i32* %i, align 4, !dbg !13558
  %div6 = sdiv i32 %8, 2, !dbg !13559
  %idxprom7 = sext i32 %div6 to i64, !dbg !13557
  %arrayidx8 = getelementptr i8, i8* %7, i64 %idxprom7, !dbg !13557
  %9 = load i8, i8* %arrayidx8, align 1, !dbg !13557
  %conv9 = zext i8 %9 to i64, !dbg !13557
  %and = and i64 %conv9, 16, !dbg !13560
  %conv10 = trunc i64 %and to i8, !dbg !13557
  %10 = load i32, i32* %i, align 4, !dbg !13561
  %idxprom11 = sext i32 %10 to i64, !dbg !13562
  %arrayidx12 = getelementptr [16 x i8], [16 x i8]* %unpacked_rad, i64 0, i64 %idxprom11, !dbg !13562
  store i8 %conv10, i8* %arrayidx12, align 1, !dbg !13563
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.inc, !dbg !13564

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !13565
  %inc = add i32 %11, 1, !dbg !13565
  store i32 %inc, i32* %i, align 4, !dbg !13565
  br label %for.cond, !dbg !13566, !llvm.loop !13567

for.end:                                          ; preds = %for.cond
  %12 = load i8*, i8** %out.addr, align 8, !dbg !13569
  %13 = load i64, i64* %len.addr, align 8, !dbg !13570
  %14 = load i8, i8* %lct.addr, align 1, !dbg !13571
  %conv13 = zext i8 %14 to i32, !dbg !13571
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %unpacked_rad, i64 0, i64 0, !dbg !13572
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %12, i64 %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.91, i64 0, i64 0), i32 %conv13, i8* %arraydecay) #8, !dbg !13573
  ret i32 %call, !dbg !13574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @drm_dp_mst_sideband_tx_state_str(i32 %state) #0 !dbg !6245 {
entry:
  %retval = alloca i8*, align 8
  %state.addr = alloca i32, align 4
  store i32 %state, i32* %state.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %state.addr, metadata !13575, metadata !DIExpression()), !dbg !13576
  %0 = load i32, i32* %state.addr, align 4, !dbg !13577
  %conv = sext i32 %0 to i64, !dbg !13577
  %cmp = icmp uge i64 %conv, 5, !dbg !13579
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13580

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %state.addr, align 4, !dbg !13581
  %idxprom = sext i32 %1 to i64, !dbg !13582
  %arrayidx = getelementptr [5 x i8*], [5 x i8*]* @drm_dp_mst_sideband_tx_state_str.sideband_reason_str, i64 0, i64 %idxprom, !dbg !13582
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !13582
  %tobool = icmp ne i8* %2, null, !dbg !13582
  br i1 %tobool, label %if.end, label %if.then, !dbg !13583

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i8** %retval, align 8, !dbg !13584
  br label %return, !dbg !13584

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i32, i32* %state.addr, align 4, !dbg !13585
  %idxprom2 = sext i32 %3 to i64, !dbg !13586
  %arrayidx3 = getelementptr [5 x i8*], [5 x i8*]* @drm_dp_mst_sideband_tx_state_str.sideband_reason_str, i64 0, i64 %idxprom2, !dbg !13586
  %4 = load i8*, i8** %arrayidx3, align 8, !dbg !13586
  store i8* %4, i8** %retval, align 8, !dbg !13587
  br label %return, !dbg !13587

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !13588
  ret i8* %5, !dbg !13588
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !13589 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !13590, metadata !DIExpression()), !dbg !13591
  br label %do.body, !dbg !13592

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !13594

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13592
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !13592
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !13592
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !13594
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !13592
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !13596
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !13597
  %conv = zext i1 %cmp to i32, !dbg !13597
  ret i32 %conv, !dbg !13598
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @mutex_is_locked(%struct.mutex*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @process_single_tx_qlock(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_sideband_msg_tx* %txmsg, i1 zeroext %up) #0 !dbg !13599 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %txmsg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %up.addr = alloca i8, align 1
  %chunk = alloca [48 x i8], align 16
  %hdr = alloca %struct.drm_dp_sideband_msg_hdr, align 1
  %len = alloca i32, align 4
  %space = alloca i32, align 4
  %idx = alloca i32, align 4
  %tosend = alloca i32, align 4
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x318 = alloca i32, align 4
  %__UNIQUE_ID___y319 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %p = alloca %struct.drm_printer, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !13602, metadata !DIExpression()), !dbg !13603
  store %struct.drm_dp_sideband_msg_tx* %txmsg, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg.addr, metadata !13604, metadata !DIExpression()), !dbg !13605
  %frombool = zext i1 %up to i8
  store i8 %frombool, i8* %up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up.addr, metadata !13606, metadata !DIExpression()), !dbg !13607
  call void @llvm.dbg.declare(metadata [48 x i8]* %chunk, metadata !13608, metadata !DIExpression()), !dbg !13609
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr* %hdr, metadata !13610, metadata !DIExpression()), !dbg !13611
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13612, metadata !DIExpression()), !dbg !13613
  call void @llvm.dbg.declare(metadata i32* %space, metadata !13614, metadata !DIExpression()), !dbg !13615
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !13616, metadata !DIExpression()), !dbg !13617
  call void @llvm.dbg.declare(metadata i32* %tosend, metadata !13618, metadata !DIExpression()), !dbg !13619
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13620, metadata !DIExpression()), !dbg !13621
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13622
  %state = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %0, i32 0, i32 7, !dbg !13624
  %1 = load i32, i32* %state, align 4, !dbg !13624
  %cmp = icmp eq i32 %1, 2, !dbg !13625
  br i1 %cmp, label %if.then, label %if.end, !dbg !13626

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !13627
  br label %return, !dbg !13627

if.end:                                           ; preds = %entry
  %2 = bitcast %struct.drm_dp_sideband_msg_hdr* %hdr to i8*, !dbg !13628
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 16, i1 false), !dbg !13628
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13629
  %state1 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %3, i32 0, i32 7, !dbg !13631
  %4 = load i32, i32* %state1, align 4, !dbg !13631
  %cmp2 = icmp eq i32 %4, 0, !dbg !13632
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !13633

if.then3:                                         ; preds = %if.end
  %5 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13634
  %state4 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %5, i32 0, i32 7, !dbg !13635
  store i32 1, i32* %state4, align 4, !dbg !13636
  br label %if.end5, !dbg !13634

if.end5:                                          ; preds = %if.then3, %if.end
  %6 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13637
  %call = call i32 @set_hdr_from_dst_qlock(%struct.drm_dp_sideband_msg_hdr* %hdr, %struct.drm_dp_sideband_msg_tx* %6) #8, !dbg !13638
  store i32 %call, i32* %ret, align 4, !dbg !13639
  %7 = load i32, i32* %ret, align 4, !dbg !13640
  %cmp6 = icmp slt i32 %7, 0, !dbg !13642
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !13643

if.then7:                                         ; preds = %if.end5
  %8 = load i32, i32* %ret, align 4, !dbg !13644
  store i32 %8, i32* %retval, align 4, !dbg !13645
  br label %return, !dbg !13645

if.end8:                                          ; preds = %if.end5
  %9 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13646
  %cur_len = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %9, i32 0, i32 3, !dbg !13647
  %10 = load i8, i8* %cur_len, align 1, !dbg !13647
  %conv = zext i8 %10 to i32, !dbg !13646
  %11 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13648
  %cur_offset = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %11, i32 0, i32 2, !dbg !13649
  %12 = load i8, i8* %cur_offset, align 8, !dbg !13649
  %conv9 = zext i8 %12 to i32, !dbg !13648
  %sub = sub i32 %conv, %conv9, !dbg !13650
  store i32 %sub, i32* %len, align 4, !dbg !13651
  %call10 = call zeroext i8 @drm_dp_calc_sb_hdr_size(%struct.drm_dp_sideband_msg_hdr* %hdr) #8, !dbg !13652
  %conv11 = zext i8 %call10 to i32, !dbg !13652
  %sub12 = sub i32 47, %conv11, !dbg !13653
  store i32 %sub12, i32* %space, align 4, !dbg !13654
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x318, metadata !13655, metadata !DIExpression()), !dbg !13657
  %13 = load i32, i32* %len, align 4, !dbg !13657
  store i32 %13, i32* %__UNIQUE_ID___x318, align 4, !dbg !13657
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y319, metadata !13658, metadata !DIExpression()), !dbg !13657
  %14 = load i32, i32* %space, align 4, !dbg !13657
  store i32 %14, i32* %__UNIQUE_ID___y319, align 4, !dbg !13657
  %15 = load i32, i32* %__UNIQUE_ID___x318, align 4, !dbg !13657
  %16 = load i32, i32* %__UNIQUE_ID___y319, align 4, !dbg !13657
  %cmp13 = icmp slt i32 %15, %16, !dbg !13657
  br i1 %cmp13, label %cond.true, label %cond.false, !dbg !13657

cond.true:                                        ; preds = %if.end8
  %17 = load i32, i32* %__UNIQUE_ID___x318, align 4, !dbg !13657
  br label %cond.end, !dbg !13657

cond.false:                                       ; preds = %if.end8
  %18 = load i32, i32* %__UNIQUE_ID___y319, align 4, !dbg !13657
  br label %cond.end, !dbg !13657

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %17, %cond.true ], [ %18, %cond.false ], !dbg !13657
  store i32 %cond, i32* %tmp, align 4, !dbg !13657
  %19 = load i32, i32* %tmp, align 4, !dbg !13657
  store i32 %19, i32* %tosend, align 4, !dbg !13659
  %20 = load i32, i32* %len, align 4, !dbg !13660
  %21 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13662
  %cur_len15 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %21, i32 0, i32 3, !dbg !13663
  %22 = load i8, i8* %cur_len15, align 1, !dbg !13663
  %conv16 = zext i8 %22 to i32, !dbg !13662
  %cmp17 = icmp eq i32 %20, %conv16, !dbg !13664
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !13665

if.then19:                                        ; preds = %cond.end
  %somt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %hdr, i32 0, i32 6, !dbg !13666
  store i8 1, i8* %somt, align 1, !dbg !13667
  br label %if.end20, !dbg !13668

if.end20:                                         ; preds = %if.then19, %cond.end
  %23 = load i32, i32* %space, align 4, !dbg !13669
  %24 = load i32, i32* %len, align 4, !dbg !13671
  %cmp21 = icmp sge i32 %23, %24, !dbg !13672
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !13673

if.then23:                                        ; preds = %if.end20
  %eomt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %hdr, i32 0, i32 7, !dbg !13674
  store i8 1, i8* %eomt, align 1, !dbg !13675
  br label %if.end24, !dbg !13676

if.end24:                                         ; preds = %if.then23, %if.end20
  %25 = load i32, i32* %tosend, align 4, !dbg !13677
  %add = add i32 %25, 1, !dbg !13678
  %conv25 = trunc i32 %add to i8, !dbg !13677
  %msg_len = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %hdr, i32 0, i32 5, !dbg !13679
  store i8 %conv25, i8* %msg_len, align 1, !dbg !13680
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %chunk, i64 0, i64 0, !dbg !13681
  call void @drm_dp_encode_sideband_msg_hdr(%struct.drm_dp_sideband_msg_hdr* %hdr, i8* %arraydecay, i32* %idx) #8, !dbg !13682
  %26 = load i32, i32* %idx, align 4, !dbg !13683
  %idxprom = sext i32 %26 to i64, !dbg !13684
  %arrayidx = getelementptr [48 x i8], [48 x i8]* %chunk, i64 0, i64 %idxprom, !dbg !13684
  %27 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13685
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %27, i32 0, i32 0, !dbg !13686
  %28 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13687
  %cur_offset26 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %28, i32 0, i32 2, !dbg !13688
  %29 = load i8, i8* %cur_offset26, align 8, !dbg !13688
  %idxprom27 = zext i8 %29 to i64, !dbg !13685
  %arrayidx28 = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom27, !dbg !13685
  %30 = load i32, i32* %tosend, align 4, !dbg !13689
  %conv29 = sext i32 %30 to i64, !dbg !13689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %arrayidx28, i64 %conv29, i1 false), !dbg !13690
  %31 = load i32, i32* %idx, align 4, !dbg !13691
  %idxprom30 = sext i32 %31 to i64, !dbg !13692
  %arrayidx31 = getelementptr [48 x i8], [48 x i8]* %chunk, i64 0, i64 %idxprom30, !dbg !13692
  %32 = load i32, i32* %tosend, align 4, !dbg !13693
  %conv32 = trunc i32 %32 to i8, !dbg !13693
  call void @drm_dp_crc_sideband_chunk_req(i8* %arrayidx31, i8 zeroext %conv32) #8, !dbg !13694
  %33 = load i32, i32* %tosend, align 4, !dbg !13695
  %add33 = add i32 %33, 1, !dbg !13696
  %34 = load i32, i32* %idx, align 4, !dbg !13697
  %add34 = add i32 %34, %add33, !dbg !13697
  store i32 %add34, i32* %idx, align 4, !dbg !13697
  %35 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13698
  %36 = load i8, i8* %up.addr, align 1, !dbg !13699
  %tobool = trunc i8 %36 to i1, !dbg !13699
  %arraydecay35 = getelementptr inbounds [48 x i8], [48 x i8]* %chunk, i64 0, i64 0, !dbg !13700
  %37 = load i32, i32* %idx, align 4, !dbg !13701
  %call36 = call i32 @drm_dp_send_sideband_msg(%struct.drm_dp_mst_topology_mgr* %35, i1 zeroext %tobool, i8* %arraydecay35, i32 %37) #8, !dbg !13702
  store i32 %call36, i32* %ret, align 4, !dbg !13703
  %38 = load i32, i32* %ret, align 4, !dbg !13704
  %tobool37 = icmp ne i32 %38, 0, !dbg !13704
  %lnot = xor i1 %tobool37, true, !dbg !13704
  %lnot38 = xor i1 %lnot, true, !dbg !13704
  %lnot.ext = zext i1 %lnot38 to i32, !dbg !13704
  %conv39 = sext i32 %lnot.ext to i64, !dbg !13704
  %tobool40 = icmp ne i64 %conv39, 0, !dbg !13704
  br i1 %tobool40, label %land.lhs.true, label %if.end44, !dbg !13706

land.lhs.true:                                    ; preds = %if.end24
  %call41 = call zeroext i1 @drm_debug_enabled(i32 256) #8, !dbg !13707
  br i1 %call41, label %if.then43, label %if.end44, !dbg !13708

if.then43:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.drm_printer* %p, metadata !13709, metadata !DIExpression()), !dbg !13711
  call void @drm_debug_printer(%struct.drm_printer* sret %p, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0)) #8, !dbg !13712
  call void (%struct.drm_printer*, i8*, ...) @drm_printf(%struct.drm_printer* %p, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.98, i64 0, i64 0)) #8, !dbg !13713
  %39 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13714
  call void @drm_dp_mst_dump_sideband_msg_tx(%struct.drm_printer* %p, %struct.drm_dp_sideband_msg_tx* %39) #8, !dbg !13715
  %40 = load i32, i32* %ret, align 4, !dbg !13716
  store i32 %40, i32* %retval, align 4, !dbg !13717
  br label %return, !dbg !13717

if.end44:                                         ; preds = %land.lhs.true, %if.end24
  %41 = load i32, i32* %tosend, align 4, !dbg !13718
  %42 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13719
  %cur_offset45 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %42, i32 0, i32 2, !dbg !13720
  %43 = load i8, i8* %cur_offset45, align 8, !dbg !13721
  %conv46 = zext i8 %43 to i32, !dbg !13721
  %add47 = add i32 %conv46, %41, !dbg !13721
  %conv48 = trunc i32 %add47 to i8, !dbg !13721
  store i8 %conv48, i8* %cur_offset45, align 8, !dbg !13721
  %44 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13722
  %cur_offset49 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %44, i32 0, i32 2, !dbg !13724
  %45 = load i8, i8* %cur_offset49, align 8, !dbg !13724
  %conv50 = zext i8 %45 to i32, !dbg !13722
  %46 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13725
  %cur_len51 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %46, i32 0, i32 3, !dbg !13726
  %47 = load i8, i8* %cur_len51, align 1, !dbg !13726
  %conv52 = zext i8 %47 to i32, !dbg !13725
  %cmp53 = icmp eq i32 %conv50, %conv52, !dbg !13727
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !13728

if.then55:                                        ; preds = %if.end44
  %48 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13729
  %state56 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %48, i32 0, i32 7, !dbg !13731
  store i32 2, i32* %state56, align 4, !dbg !13732
  store i32 1, i32* %retval, align 4, !dbg !13733
  br label %return, !dbg !13733

if.end57:                                         ; preds = %if.end44
  store i32 0, i32* %retval, align 4, !dbg !13734
  br label %return, !dbg !13734

return:                                           ; preds = %if.end57, %if.then55, %if.then43, %if.then7, %if.then
  %49 = load i32, i32* %retval, align 4, !dbg !13735
  ret i32 %49, !dbg !13735
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !13736 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !13737, metadata !DIExpression()), !dbg !13738
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13739
  call void @__list_del_entry(%struct.list_head* %0) #8, !dbg !13740
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13741
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !13742
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !13743
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !13744
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !13745
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !13746
  ret void, !dbg !13747
}

; Function Attrs: noredzone
declare dso_local void @__wake_up(%struct.wait_queue_head*, i32, i32, i8*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @set_hdr_from_dst_qlock(%struct.drm_dp_sideband_msg_hdr* %hdr, %struct.drm_dp_sideband_msg_tx* %txmsg) #0 !dbg !13748 {
entry:
  %hdr.addr = alloca %struct.drm_dp_sideband_msg_hdr*, align 8
  %txmsg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %req_type = alloca i8, align 1
  store %struct.drm_dp_sideband_msg_hdr* %hdr, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr** %hdr.addr, metadata !13751, metadata !DIExpression()), !dbg !13752
  store %struct.drm_dp_sideband_msg_tx* %txmsg, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg.addr, metadata !13753, metadata !DIExpression()), !dbg !13754
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !13755, metadata !DIExpression()), !dbg !13756
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13757
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %0, i32 0, i32 4, !dbg !13758
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !13758
  store %struct.drm_dp_mst_branch* %1, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !13756
  call void @llvm.dbg.declare(metadata i8* %req_type, metadata !13759, metadata !DIExpression()), !dbg !13760
  %2 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13761
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %2, i32 0, i32 0, !dbg !13762
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 0, !dbg !13761
  %3 = load i8, i8* %arrayidx, align 8, !dbg !13761
  %conv = zext i8 %3 to i32, !dbg !13761
  %and = and i32 %conv, 127, !dbg !13763
  %conv1 = trunc i32 %and to i8, !dbg !13761
  store i8 %conv1, i8* %req_type, align 1, !dbg !13764
  %4 = load i8, i8* %req_type, align 1, !dbg !13765
  %conv2 = zext i8 %4 to i32, !dbg !13765
  %cmp = icmp eq i32 %conv2, 2, !dbg !13767
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13768

lor.lhs.false:                                    ; preds = %entry
  %5 = load i8, i8* %req_type, align 1, !dbg !13769
  %conv4 = zext i8 %5 to i32, !dbg !13769
  %cmp5 = icmp eq i32 %conv4, 19, !dbg !13770
  br i1 %cmp5, label %if.then, label %if.else, !dbg !13771

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13772
  %broadcast = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %6, i32 0, i32 3, !dbg !13773
  store i8 1, i8* %broadcast, align 1, !dbg !13774
  br label %if.end, !dbg !13772

if.else:                                          ; preds = %lor.lhs.false
  %7 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13775
  %broadcast7 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %7, i32 0, i32 3, !dbg !13776
  store i8 0, i8* %broadcast7, align 1, !dbg !13777
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !13778
  %path_msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %8, i32 0, i32 8, !dbg !13779
  %9 = load i8, i8* %path_msg, align 8, !dbg !13779
  %tobool = trunc i8 %9 to i1, !dbg !13779
  %10 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13780
  %path_msg8 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %10, i32 0, i32 4, !dbg !13781
  %frombool = zext i1 %tobool to i8, !dbg !13782
  store i8 %frombool, i8* %path_msg8, align 1, !dbg !13782
  %11 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !13783
  %lct = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %11, i32 0, i32 4, !dbg !13784
  %12 = load i8, i8* %lct, align 8, !dbg !13784
  %13 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13785
  %lct9 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %13, i32 0, i32 0, !dbg !13786
  store i8 %12, i8* %lct9, align 1, !dbg !13787
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !13788
  %lct10 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %14, i32 0, i32 4, !dbg !13789
  %15 = load i8, i8* %lct10, align 8, !dbg !13789
  %conv11 = zext i8 %15 to i32, !dbg !13788
  %sub = sub i32 %conv11, 1, !dbg !13790
  %conv12 = trunc i32 %sub to i8, !dbg !13788
  %16 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13791
  %lcr = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %16, i32 0, i32 1, !dbg !13792
  store i8 %conv12, i8* %lcr, align 1, !dbg !13793
  %17 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !13794
  %lct13 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %17, i32 0, i32 4, !dbg !13796
  %18 = load i8, i8* %lct13, align 8, !dbg !13796
  %conv14 = zext i8 %18 to i32, !dbg !13794
  %cmp15 = icmp sgt i32 %conv14, 1, !dbg !13797
  br i1 %cmp15, label %if.then17, label %if.end23, !dbg !13798

if.then17:                                        ; preds = %if.end
  %19 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13799
  %rad = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %19, i32 0, i32 2, !dbg !13800
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !13801
  %20 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !13802
  %rad18 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %20, i32 0, i32 3, !dbg !13803
  %arraydecay19 = getelementptr inbounds [8 x i8], [8 x i8]* %rad18, i64 0, i64 0, !dbg !13801
  %21 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !13804
  %lct20 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %21, i32 0, i32 4, !dbg !13805
  %22 = load i8, i8* %lct20, align 8, !dbg !13805
  %conv21 = zext i8 %22 to i32, !dbg !13804
  %div = sdiv i32 %conv21, 2, !dbg !13806
  %conv22 = sext i32 %div to i64, !dbg !13804
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 8 %arraydecay19, i64 %conv22, i1 false), !dbg !13801
  br label %if.end23, !dbg !13801

if.end23:                                         ; preds = %if.then17, %if.end
  ret i32 0, !dbg !13807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_dp_calc_sb_hdr_size(%struct.drm_dp_sideband_msg_hdr* %hdr) #0 !dbg !13808 {
entry:
  %hdr.addr = alloca %struct.drm_dp_sideband_msg_hdr*, align 8
  %size = alloca i8, align 1
  store %struct.drm_dp_sideband_msg_hdr* %hdr, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr** %hdr.addr, metadata !13811, metadata !DIExpression()), !dbg !13812
  call void @llvm.dbg.declare(metadata i8* %size, metadata !13813, metadata !DIExpression()), !dbg !13814
  store i8 3, i8* %size, align 1, !dbg !13814
  %0 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13815
  %lct = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %0, i32 0, i32 0, !dbg !13816
  %1 = load i8, i8* %lct, align 1, !dbg !13816
  %conv = zext i8 %1 to i32, !dbg !13815
  %div = sdiv i32 %conv, 2, !dbg !13817
  %2 = load i8, i8* %size, align 1, !dbg !13818
  %conv1 = zext i8 %2 to i32, !dbg !13818
  %add = add i32 %conv1, %div, !dbg !13818
  %conv2 = trunc i32 %add to i8, !dbg !13818
  store i8 %conv2, i8* %size, align 1, !dbg !13818
  %3 = load i8, i8* %size, align 1, !dbg !13819
  ret i8 %3, !dbg !13820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_encode_sideband_msg_hdr(%struct.drm_dp_sideband_msg_hdr* %hdr, i8* %buf, i32* %len) #0 !dbg !13821 {
entry:
  %hdr.addr = alloca %struct.drm_dp_sideband_msg_hdr*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i32*, align 8
  %idx = alloca i32, align 4
  %i = alloca i32, align 4
  %crc4 = alloca i8, align 1
  store %struct.drm_dp_sideband_msg_hdr* %hdr, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr** %hdr.addr, metadata !13824, metadata !DIExpression()), !dbg !13825
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13826, metadata !DIExpression()), !dbg !13827
  store i32* %len, i32** %len.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %len.addr, metadata !13828, metadata !DIExpression()), !dbg !13829
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !13830, metadata !DIExpression()), !dbg !13831
  store i32 0, i32* %idx, align 4, !dbg !13831
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13832, metadata !DIExpression()), !dbg !13833
  call void @llvm.dbg.declare(metadata i8* %crc4, metadata !13834, metadata !DIExpression()), !dbg !13835
  %0 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13836
  %lct = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %0, i32 0, i32 0, !dbg !13837
  %1 = load i8, i8* %lct, align 1, !dbg !13837
  %conv = zext i8 %1 to i32, !dbg !13836
  %and = and i32 %conv, 15, !dbg !13838
  %shl = shl i32 %and, 4, !dbg !13839
  %2 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13840
  %lcr = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %2, i32 0, i32 1, !dbg !13841
  %3 = load i8, i8* %lcr, align 1, !dbg !13841
  %conv1 = zext i8 %3 to i32, !dbg !13840
  %and2 = and i32 %conv1, 15, !dbg !13842
  %or = or i32 %shl, %and2, !dbg !13843
  %conv3 = trunc i32 %or to i8, !dbg !13844
  %4 = load i8*, i8** %buf.addr, align 8, !dbg !13845
  %5 = load i32, i32* %idx, align 4, !dbg !13846
  %inc = add i32 %5, 1, !dbg !13846
  store i32 %inc, i32* %idx, align 4, !dbg !13846
  %idxprom = sext i32 %5 to i64, !dbg !13845
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !13845
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !13847
  store i32 0, i32* %i, align 4, !dbg !13848
  br label %for.cond, !dbg !13850

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !13851
  %7 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13853
  %lct4 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %7, i32 0, i32 0, !dbg !13854
  %8 = load i8, i8* %lct4, align 1, !dbg !13854
  %conv5 = zext i8 %8 to i32, !dbg !13853
  %div = sdiv i32 %conv5, 2, !dbg !13855
  %cmp = icmp slt i32 %6, %div, !dbg !13856
  br i1 %cmp, label %for.body, label %for.end, !dbg !13857

for.body:                                         ; preds = %for.cond
  %9 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13858
  %rad = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %9, i32 0, i32 2, !dbg !13859
  %10 = load i32, i32* %i, align 4, !dbg !13860
  %idxprom7 = sext i32 %10 to i64, !dbg !13858
  %arrayidx8 = getelementptr [8 x i8], [8 x i8]* %rad, i64 0, i64 %idxprom7, !dbg !13858
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !13858
  %12 = load i8*, i8** %buf.addr, align 8, !dbg !13861
  %13 = load i32, i32* %idx, align 4, !dbg !13862
  %inc9 = add i32 %13, 1, !dbg !13862
  store i32 %inc9, i32* %idx, align 4, !dbg !13862
  %idxprom10 = sext i32 %13 to i64, !dbg !13861
  %arrayidx11 = getelementptr i8, i8* %12, i64 %idxprom10, !dbg !13861
  store i8 %11, i8* %arrayidx11, align 1, !dbg !13863
  br label %for.inc, !dbg !13861

for.inc:                                          ; preds = %for.body
  %14 = load i32, i32* %i, align 4, !dbg !13864
  %inc12 = add i32 %14, 1, !dbg !13864
  store i32 %inc12, i32* %i, align 4, !dbg !13864
  br label %for.cond, !dbg !13865, !llvm.loop !13866

for.end:                                          ; preds = %for.cond
  %15 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13868
  %broadcast = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %15, i32 0, i32 3, !dbg !13869
  %16 = load i8, i8* %broadcast, align 1, !dbg !13869
  %tobool = trunc i8 %16 to i1, !dbg !13869
  %conv13 = zext i1 %tobool to i32, !dbg !13868
  %shl14 = shl i32 %conv13, 7, !dbg !13870
  %17 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13871
  %path_msg = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %17, i32 0, i32 4, !dbg !13872
  %18 = load i8, i8* %path_msg, align 1, !dbg !13872
  %tobool15 = trunc i8 %18 to i1, !dbg !13872
  %conv16 = zext i1 %tobool15 to i32, !dbg !13871
  %shl17 = shl i32 %conv16, 6, !dbg !13873
  %or18 = or i32 %shl14, %shl17, !dbg !13874
  %19 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13875
  %msg_len = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %19, i32 0, i32 5, !dbg !13876
  %20 = load i8, i8* %msg_len, align 1, !dbg !13876
  %conv19 = zext i8 %20 to i32, !dbg !13875
  %and20 = and i32 %conv19, 63, !dbg !13877
  %or21 = or i32 %or18, %and20, !dbg !13878
  %conv22 = trunc i32 %or21 to i8, !dbg !13879
  %21 = load i8*, i8** %buf.addr, align 8, !dbg !13880
  %22 = load i32, i32* %idx, align 4, !dbg !13881
  %inc23 = add i32 %22, 1, !dbg !13881
  store i32 %inc23, i32* %idx, align 4, !dbg !13881
  %idxprom24 = sext i32 %22 to i64, !dbg !13880
  %arrayidx25 = getelementptr i8, i8* %21, i64 %idxprom24, !dbg !13880
  store i8 %conv22, i8* %arrayidx25, align 1, !dbg !13882
  %23 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13883
  %somt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %23, i32 0, i32 6, !dbg !13884
  %24 = load i8, i8* %somt, align 1, !dbg !13884
  %tobool26 = trunc i8 %24 to i1, !dbg !13884
  %conv27 = zext i1 %tobool26 to i32, !dbg !13883
  %shl28 = shl i32 %conv27, 7, !dbg !13885
  %25 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13886
  %eomt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %25, i32 0, i32 7, !dbg !13887
  %26 = load i8, i8* %eomt, align 1, !dbg !13887
  %tobool29 = trunc i8 %26 to i1, !dbg !13887
  %conv30 = zext i1 %tobool29 to i32, !dbg !13886
  %shl31 = shl i32 %conv30, 6, !dbg !13888
  %or32 = or i32 %shl28, %shl31, !dbg !13889
  %27 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !13890
  %seqno = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %27, i32 0, i32 8, !dbg !13891
  %28 = load i8, i8* %seqno, align 1, !dbg !13891
  %tobool33 = trunc i8 %28 to i1, !dbg !13891
  %conv34 = zext i1 %tobool33 to i32, !dbg !13890
  %shl35 = shl i32 %conv34, 4, !dbg !13892
  %or36 = or i32 %or32, %shl35, !dbg !13893
  %conv37 = trunc i32 %or36 to i8, !dbg !13894
  %29 = load i8*, i8** %buf.addr, align 8, !dbg !13895
  %30 = load i32, i32* %idx, align 4, !dbg !13896
  %inc38 = add i32 %30, 1, !dbg !13896
  store i32 %inc38, i32* %idx, align 4, !dbg !13896
  %idxprom39 = sext i32 %30 to i64, !dbg !13895
  %arrayidx40 = getelementptr i8, i8* %29, i64 %idxprom39, !dbg !13895
  store i8 %conv37, i8* %arrayidx40, align 1, !dbg !13897
  %31 = load i8*, i8** %buf.addr, align 8, !dbg !13898
  %32 = load i32, i32* %idx, align 4, !dbg !13899
  %mul = mul i32 %32, 2, !dbg !13900
  %sub = sub i32 %mul, 1, !dbg !13901
  %conv41 = sext i32 %sub to i64, !dbg !13902
  %call = call zeroext i8 @drm_dp_msg_header_crc4(i8* %31, i64 %conv41) #8, !dbg !13903
  store i8 %call, i8* %crc4, align 1, !dbg !13904
  %33 = load i8, i8* %crc4, align 1, !dbg !13905
  %conv42 = zext i8 %33 to i32, !dbg !13905
  %and43 = and i32 %conv42, 15, !dbg !13906
  %34 = load i8*, i8** %buf.addr, align 8, !dbg !13907
  %35 = load i32, i32* %idx, align 4, !dbg !13908
  %sub44 = sub i32 %35, 1, !dbg !13909
  %idxprom45 = sext i32 %sub44 to i64, !dbg !13907
  %arrayidx46 = getelementptr i8, i8* %34, i64 %idxprom45, !dbg !13907
  %36 = load i8, i8* %arrayidx46, align 1, !dbg !13910
  %conv47 = zext i8 %36 to i32, !dbg !13910
  %or48 = or i32 %conv47, %and43, !dbg !13910
  %conv49 = trunc i32 %or48 to i8, !dbg !13910
  store i8 %conv49, i8* %arrayidx46, align 1, !dbg !13910
  %37 = load i32, i32* %idx, align 4, !dbg !13911
  %38 = load i32*, i32** %len.addr, align 8, !dbg !13912
  store i32 %37, i32* %38, align 4, !dbg !13913
  ret void, !dbg !13914
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_crc_sideband_chunk_req(i8* %msg, i8 zeroext %len) #0 !dbg !13915 {
entry:
  %msg.addr = alloca i8*, align 8
  %len.addr = alloca i8, align 1
  %crc4 = alloca i8, align 1
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !13918, metadata !DIExpression()), !dbg !13919
  store i8 %len, i8* %len.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %len.addr, metadata !13920, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.declare(metadata i8* %crc4, metadata !13922, metadata !DIExpression()), !dbg !13923
  %0 = load i8*, i8** %msg.addr, align 8, !dbg !13924
  %1 = load i8, i8* %len.addr, align 1, !dbg !13925
  %call = call zeroext i8 @drm_dp_msg_data_crc4(i8* %0, i8 zeroext %1) #8, !dbg !13926
  store i8 %call, i8* %crc4, align 1, !dbg !13927
  %2 = load i8, i8* %crc4, align 1, !dbg !13928
  %3 = load i8*, i8** %msg.addr, align 8, !dbg !13929
  %4 = load i8, i8* %len.addr, align 1, !dbg !13930
  %idxprom = zext i8 %4 to i64, !dbg !13929
  %arrayidx = getelementptr i8, i8* %3, i64 %idxprom, !dbg !13929
  store i8 %2, i8* %arrayidx, align 1, !dbg !13931
  ret void, !dbg !13932
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_send_sideband_msg(%struct.drm_dp_mst_topology_mgr* %mgr, i1 zeroext %up, i8* %msg, i32 %len) #0 !dbg !13933 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %up.addr = alloca i8, align 1
  %msg.addr = alloca i8*, align 8
  %len.addr = alloca i32, align 4
  %ret = alloca i32, align 4
  %regbase = alloca i32, align 4
  %tosend = alloca i32, align 4
  %total = alloca i32, align 4
  %offset = alloca i32, align 4
  %retries = alloca i32, align 4
  %__UNIQUE_ID___x316 = alloca i32, align 4
  %__UNIQUE_ID___x314 = alloca i32, align 4
  %__UNIQUE_ID___y315 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___y317 = alloca i32, align 4
  %tmp2 = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !13936, metadata !DIExpression()), !dbg !13937
  %frombool = zext i1 %up to i8
  store i8 %frombool, i8* %up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up.addr, metadata !13938, metadata !DIExpression()), !dbg !13939
  store i8* %msg, i8** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %msg.addr, metadata !13940, metadata !DIExpression()), !dbg !13941
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !13942, metadata !DIExpression()), !dbg !13943
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !13944, metadata !DIExpression()), !dbg !13945
  call void @llvm.dbg.declare(metadata i32* %regbase, metadata !13946, metadata !DIExpression()), !dbg !13947
  %0 = load i8, i8* %up.addr, align 1, !dbg !13948
  %tobool = trunc i8 %0 to i1, !dbg !13948
  %1 = zext i1 %tobool to i64, !dbg !13948
  %cond = select i1 %tobool, i32 4608, i32 4096, !dbg !13948
  store i32 %cond, i32* %regbase, align 4, !dbg !13947
  call void @llvm.dbg.declare(metadata i32* %tosend, metadata !13949, metadata !DIExpression()), !dbg !13950
  call void @llvm.dbg.declare(metadata i32* %total, metadata !13951, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !13953, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.declare(metadata i32* %retries, metadata !13955, metadata !DIExpression()), !dbg !13956
  store i32 0, i32* %retries, align 4, !dbg !13956
  br label %retry, !dbg !13957

retry:                                            ; preds = %if.then15, %entry
  call void @llvm.dbg.label(metadata !13958), !dbg !13959
  %2 = load i32, i32* %len.addr, align 4, !dbg !13960
  store i32 %2, i32* %total, align 4, !dbg !13961
  store i32 0, i32* %offset, align 4, !dbg !13962
  br label %do.body, !dbg !13963

do.body:                                          ; preds = %do.cond, %retry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x316, metadata !13964, metadata !DIExpression()), !dbg !13967
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x314, metadata !13968, metadata !DIExpression()), !dbg !13970
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13970
  %max_dpcd_transaction_bytes = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 3, !dbg !13970
  %4 = load i32, i32* %max_dpcd_transaction_bytes, align 8, !dbg !13970
  store i32 %4, i32* %__UNIQUE_ID___x314, align 4, !dbg !13970
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y315, metadata !13971, metadata !DIExpression()), !dbg !13970
  store i32 16, i32* %__UNIQUE_ID___y315, align 4, !dbg !13970
  %5 = load i32, i32* %__UNIQUE_ID___x314, align 4, !dbg !13970
  %6 = load i32, i32* %__UNIQUE_ID___y315, align 4, !dbg !13970
  %cmp = icmp slt i32 %5, %6, !dbg !13970
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !13970

cond.true:                                        ; preds = %do.body
  %7 = load i32, i32* %__UNIQUE_ID___x314, align 4, !dbg !13970
  br label %cond.end, !dbg !13970

cond.false:                                       ; preds = %do.body
  %8 = load i32, i32* %__UNIQUE_ID___y315, align 4, !dbg !13970
  br label %cond.end, !dbg !13970

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond1 = phi i32 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !13970
  store i32 %cond1, i32* %tmp, align 4, !dbg !13970
  %9 = load i32, i32* %tmp, align 4, !dbg !13970
  store i32 %9, i32* %__UNIQUE_ID___x316, align 4, !dbg !13967
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y317, metadata !13972, metadata !DIExpression()), !dbg !13967
  %10 = load i32, i32* %total, align 4, !dbg !13967
  store i32 %10, i32* %__UNIQUE_ID___y317, align 4, !dbg !13967
  %11 = load i32, i32* %__UNIQUE_ID___x316, align 4, !dbg !13967
  %12 = load i32, i32* %__UNIQUE_ID___y317, align 4, !dbg !13967
  %cmp3 = icmp slt i32 %11, %12, !dbg !13967
  br i1 %cmp3, label %cond.true4, label %cond.false5, !dbg !13967

cond.true4:                                       ; preds = %cond.end
  %13 = load i32, i32* %__UNIQUE_ID___x316, align 4, !dbg !13967
  br label %cond.end6, !dbg !13967

cond.false5:                                      ; preds = %cond.end
  %14 = load i32, i32* %__UNIQUE_ID___y317, align 4, !dbg !13967
  br label %cond.end6, !dbg !13967

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ %13, %cond.true4 ], [ %14, %cond.false5 ], !dbg !13967
  store i32 %cond7, i32* %tmp2, align 4, !dbg !13967
  %15 = load i32, i32* %tmp2, align 4, !dbg !13967
  store i32 %15, i32* %tosend, align 4, !dbg !13973
  %16 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !13974
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %16, i32 0, i32 4, !dbg !13975
  %17 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !13975
  %18 = load i32, i32* %regbase, align 4, !dbg !13976
  %19 = load i32, i32* %offset, align 4, !dbg !13977
  %add = add i32 %18, %19, !dbg !13978
  %20 = load i8*, i8** %msg.addr, align 8, !dbg !13979
  %21 = load i32, i32* %offset, align 4, !dbg !13980
  %idxprom = sext i32 %21 to i64, !dbg !13979
  %arrayidx = getelementptr i8, i8* %20, i64 %idxprom, !dbg !13979
  %22 = load i32, i32* %tosend, align 4, !dbg !13981
  %conv = sext i32 %22 to i64, !dbg !13981
  %call = call i64 @drm_dp_dpcd_write(%struct.drm_dp_aux* %17, i32 %add, i8* %arrayidx, i64 %conv) #8, !dbg !13982
  %conv8 = trunc i64 %call to i32, !dbg !13982
  store i32 %conv8, i32* %ret, align 4, !dbg !13983
  %23 = load i32, i32* %ret, align 4, !dbg !13984
  %24 = load i32, i32* %tosend, align 4, !dbg !13986
  %cmp9 = icmp ne i32 %23, %24, !dbg !13987
  br i1 %cmp9, label %if.then, label %if.end16, !dbg !13988

if.then:                                          ; preds = %cond.end6
  %25 = load i32, i32* %ret, align 4, !dbg !13989
  %cmp11 = icmp eq i32 %25, -5, !dbg !13992
  br i1 %cmp11, label %land.lhs.true, label %if.end, !dbg !13993

land.lhs.true:                                    ; preds = %if.then
  %26 = load i32, i32* %retries, align 4, !dbg !13994
  %cmp13 = icmp slt i32 %26, 5, !dbg !13995
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !13996

if.then15:                                        ; preds = %land.lhs.true
  %27 = load i32, i32* %retries, align 4, !dbg !13997
  %inc = add i32 %27, 1, !dbg !13997
  store i32 %inc, i32* %retries, align 4, !dbg !13997
  br label %retry, !dbg !13999

if.end:                                           ; preds = %land.lhs.true, %if.then
  %28 = load i32, i32* %tosend, align 4, !dbg !14000
  %29 = load i32, i32* %ret, align 4, !dbg !14000
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.99, i64 0, i64 0), i32 %28, i32 %29) #8, !dbg !14000
  store i32 -5, i32* %retval, align 4, !dbg !14001
  br label %return, !dbg !14001

if.end16:                                         ; preds = %cond.end6
  %30 = load i32, i32* %tosend, align 4, !dbg !14002
  %31 = load i32, i32* %offset, align 4, !dbg !14003
  %add17 = add i32 %31, %30, !dbg !14003
  store i32 %add17, i32* %offset, align 4, !dbg !14003
  %32 = load i32, i32* %tosend, align 4, !dbg !14004
  %33 = load i32, i32* %total, align 4, !dbg !14005
  %sub = sub i32 %33, %32, !dbg !14005
  store i32 %sub, i32* %total, align 4, !dbg !14005
  br label %do.cond, !dbg !14006

do.cond:                                          ; preds = %if.end16
  %34 = load i32, i32* %total, align 4, !dbg !14007
  %cmp18 = icmp sgt i32 %34, 0, !dbg !14008
  br i1 %cmp18, label %do.body, label %do.end, !dbg !14006, !llvm.loop !14009

do.end:                                           ; preds = %do.cond
  store i32 0, i32* %retval, align 4, !dbg !14011
  br label %return, !dbg !14011

return:                                           ; preds = %do.end, %if.end
  %35 = load i32, i32* %retval, align 4, !dbg !14012
  ret i32 %35, !dbg !14012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_dp_msg_header_crc4(i8* %data, i64 %num_nibbles) #0 !dbg !14013 {
entry:
  %data.addr = alloca i8*, align 8
  %num_nibbles.addr = alloca i64, align 8
  %bitmask = alloca i8, align 1
  %bitshift = alloca i8, align 1
  %array_index = alloca i8, align 1
  %number_of_bits = alloca i32, align 4
  %remainder = alloca i8, align 1
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14018, metadata !DIExpression()), !dbg !14019
  store i64 %num_nibbles, i64* %num_nibbles.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %num_nibbles.addr, metadata !14020, metadata !DIExpression()), !dbg !14021
  call void @llvm.dbg.declare(metadata i8* %bitmask, metadata !14022, metadata !DIExpression()), !dbg !14023
  store i8 -128, i8* %bitmask, align 1, !dbg !14023
  call void @llvm.dbg.declare(metadata i8* %bitshift, metadata !14024, metadata !DIExpression()), !dbg !14025
  store i8 7, i8* %bitshift, align 1, !dbg !14025
  call void @llvm.dbg.declare(metadata i8* %array_index, metadata !14026, metadata !DIExpression()), !dbg !14027
  store i8 0, i8* %array_index, align 1, !dbg !14027
  call void @llvm.dbg.declare(metadata i32* %number_of_bits, metadata !14028, metadata !DIExpression()), !dbg !14029
  %0 = load i64, i64* %num_nibbles.addr, align 8, !dbg !14030
  %mul = mul i64 %0, 4, !dbg !14031
  %conv = trunc i64 %mul to i32, !dbg !14030
  store i32 %conv, i32* %number_of_bits, align 4, !dbg !14029
  call void @llvm.dbg.declare(metadata i8* %remainder, metadata !14032, metadata !DIExpression()), !dbg !14033
  store i8 0, i8* %remainder, align 1, !dbg !14033
  br label %while.cond, !dbg !14034

while.cond:                                       ; preds = %if.end23, %entry
  %1 = load i32, i32* %number_of_bits, align 4, !dbg !14035
  %cmp = icmp ne i32 %1, 0, !dbg !14036
  br i1 %cmp, label %while.body, label %while.end, !dbg !14034

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %number_of_bits, align 4, !dbg !14037
  %dec = add i32 %2, -1, !dbg !14037
  store i32 %dec, i32* %number_of_bits, align 4, !dbg !14037
  %3 = load i8, i8* %remainder, align 1, !dbg !14039
  %conv2 = zext i8 %3 to i32, !dbg !14039
  %shl = shl i32 %conv2, 1, !dbg !14039
  %conv3 = trunc i32 %shl to i8, !dbg !14039
  store i8 %conv3, i8* %remainder, align 1, !dbg !14039
  %4 = load i8*, i8** %data.addr, align 8, !dbg !14040
  %5 = load i8, i8* %array_index, align 1, !dbg !14041
  %idxprom = zext i8 %5 to i64, !dbg !14040
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !14040
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14040
  %conv4 = zext i8 %6 to i32, !dbg !14040
  %7 = load i8, i8* %bitmask, align 1, !dbg !14042
  %conv5 = zext i8 %7 to i32, !dbg !14042
  %and = and i32 %conv4, %conv5, !dbg !14043
  %8 = load i8, i8* %bitshift, align 1, !dbg !14044
  %conv6 = zext i8 %8 to i32, !dbg !14044
  %shr = ashr i32 %and, %conv6, !dbg !14045
  %9 = load i8, i8* %remainder, align 1, !dbg !14046
  %conv7 = zext i8 %9 to i32, !dbg !14046
  %or = or i32 %conv7, %shr, !dbg !14046
  %conv8 = trunc i32 %or to i8, !dbg !14046
  store i8 %conv8, i8* %remainder, align 1, !dbg !14046
  %10 = load i8, i8* %bitmask, align 1, !dbg !14047
  %conv9 = zext i8 %10 to i32, !dbg !14047
  %shr10 = ashr i32 %conv9, 1, !dbg !14047
  %conv11 = trunc i32 %shr10 to i8, !dbg !14047
  store i8 %conv11, i8* %bitmask, align 1, !dbg !14047
  %11 = load i8, i8* %bitshift, align 1, !dbg !14048
  %dec12 = add i8 %11, -1, !dbg !14048
  store i8 %dec12, i8* %bitshift, align 1, !dbg !14048
  %12 = load i8, i8* %bitmask, align 1, !dbg !14049
  %conv13 = zext i8 %12 to i32, !dbg !14049
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !14051
  br i1 %cmp14, label %if.then, label %if.end, !dbg !14052

if.then:                                          ; preds = %while.body
  store i8 -128, i8* %bitmask, align 1, !dbg !14053
  store i8 7, i8* %bitshift, align 1, !dbg !14055
  %13 = load i8, i8* %array_index, align 1, !dbg !14056
  %inc = add i8 %13, 1, !dbg !14056
  store i8 %inc, i8* %array_index, align 1, !dbg !14056
  br label %if.end, !dbg !14057

if.end:                                           ; preds = %if.then, %while.body
  %14 = load i8, i8* %remainder, align 1, !dbg !14058
  %conv16 = zext i8 %14 to i32, !dbg !14058
  %and17 = and i32 %conv16, 16, !dbg !14060
  %cmp18 = icmp eq i32 %and17, 16, !dbg !14061
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !14062

if.then20:                                        ; preds = %if.end
  %15 = load i8, i8* %remainder, align 1, !dbg !14063
  %conv21 = zext i8 %15 to i32, !dbg !14063
  %xor = xor i32 %conv21, 19, !dbg !14063
  %conv22 = trunc i32 %xor to i8, !dbg !14063
  store i8 %conv22, i8* %remainder, align 1, !dbg !14063
  br label %if.end23, !dbg !14064

if.end23:                                         ; preds = %if.then20, %if.end
  br label %while.cond, !dbg !14034, !llvm.loop !14065

while.end:                                        ; preds = %while.cond
  store i32 4, i32* %number_of_bits, align 4, !dbg !14067
  br label %while.cond24, !dbg !14068

while.cond24:                                     ; preds = %if.end40, %while.end
  %16 = load i32, i32* %number_of_bits, align 4, !dbg !14069
  %cmp25 = icmp ne i32 %16, 0, !dbg !14070
  br i1 %cmp25, label %while.body27, label %while.end41, !dbg !14068

while.body27:                                     ; preds = %while.cond24
  %17 = load i32, i32* %number_of_bits, align 4, !dbg !14071
  %dec28 = add i32 %17, -1, !dbg !14071
  store i32 %dec28, i32* %number_of_bits, align 4, !dbg !14071
  %18 = load i8, i8* %remainder, align 1, !dbg !14073
  %conv29 = zext i8 %18 to i32, !dbg !14073
  %shl30 = shl i32 %conv29, 1, !dbg !14073
  %conv31 = trunc i32 %shl30 to i8, !dbg !14073
  store i8 %conv31, i8* %remainder, align 1, !dbg !14073
  %19 = load i8, i8* %remainder, align 1, !dbg !14074
  %conv32 = zext i8 %19 to i32, !dbg !14074
  %and33 = and i32 %conv32, 16, !dbg !14076
  %cmp34 = icmp ne i32 %and33, 0, !dbg !14077
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !14078

if.then36:                                        ; preds = %while.body27
  %20 = load i8, i8* %remainder, align 1, !dbg !14079
  %conv37 = zext i8 %20 to i32, !dbg !14079
  %xor38 = xor i32 %conv37, 19, !dbg !14079
  %conv39 = trunc i32 %xor38 to i8, !dbg !14079
  store i8 %conv39, i8* %remainder, align 1, !dbg !14079
  br label %if.end40, !dbg !14080

if.end40:                                         ; preds = %if.then36, %while.body27
  br label %while.cond24, !dbg !14068, !llvm.loop !14081

while.end41:                                      ; preds = %while.cond24
  %21 = load i8, i8* %remainder, align 1, !dbg !14083
  ret i8 %21, !dbg !14084
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_dp_msg_data_crc4(i8* %data, i8 zeroext %number_of_bytes) #0 !dbg !14085 {
entry:
  %data.addr = alloca i8*, align 8
  %number_of_bytes.addr = alloca i8, align 1
  %bitmask = alloca i8, align 1
  %bitshift = alloca i8, align 1
  %array_index = alloca i8, align 1
  %number_of_bits = alloca i32, align 4
  %remainder = alloca i16, align 2
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14088, metadata !DIExpression()), !dbg !14089
  store i8 %number_of_bytes, i8* %number_of_bytes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %number_of_bytes.addr, metadata !14090, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.declare(metadata i8* %bitmask, metadata !14092, metadata !DIExpression()), !dbg !14093
  store i8 -128, i8* %bitmask, align 1, !dbg !14093
  call void @llvm.dbg.declare(metadata i8* %bitshift, metadata !14094, metadata !DIExpression()), !dbg !14095
  store i8 7, i8* %bitshift, align 1, !dbg !14095
  call void @llvm.dbg.declare(metadata i8* %array_index, metadata !14096, metadata !DIExpression()), !dbg !14097
  store i8 0, i8* %array_index, align 1, !dbg !14097
  call void @llvm.dbg.declare(metadata i32* %number_of_bits, metadata !14098, metadata !DIExpression()), !dbg !14099
  %0 = load i8, i8* %number_of_bytes.addr, align 1, !dbg !14100
  %conv = zext i8 %0 to i32, !dbg !14100
  %mul = mul i32 %conv, 8, !dbg !14101
  store i32 %mul, i32* %number_of_bits, align 4, !dbg !14099
  call void @llvm.dbg.declare(metadata i16* %remainder, metadata !14102, metadata !DIExpression()), !dbg !14103
  store i16 0, i16* %remainder, align 2, !dbg !14103
  br label %while.cond, !dbg !14104

while.cond:                                       ; preds = %if.end23, %entry
  %1 = load i32, i32* %number_of_bits, align 4, !dbg !14105
  %cmp = icmp ne i32 %1, 0, !dbg !14106
  br i1 %cmp, label %while.body, label %while.end, !dbg !14104

while.body:                                       ; preds = %while.cond
  %2 = load i32, i32* %number_of_bits, align 4, !dbg !14107
  %dec = add i32 %2, -1, !dbg !14107
  store i32 %dec, i32* %number_of_bits, align 4, !dbg !14107
  %3 = load i16, i16* %remainder, align 2, !dbg !14109
  %conv2 = zext i16 %3 to i32, !dbg !14109
  %shl = shl i32 %conv2, 1, !dbg !14109
  %conv3 = trunc i32 %shl to i16, !dbg !14109
  store i16 %conv3, i16* %remainder, align 2, !dbg !14109
  %4 = load i8*, i8** %data.addr, align 8, !dbg !14110
  %5 = load i8, i8* %array_index, align 1, !dbg !14111
  %idxprom = zext i8 %5 to i64, !dbg !14110
  %arrayidx = getelementptr i8, i8* %4, i64 %idxprom, !dbg !14110
  %6 = load i8, i8* %arrayidx, align 1, !dbg !14110
  %conv4 = zext i8 %6 to i32, !dbg !14110
  %7 = load i8, i8* %bitmask, align 1, !dbg !14112
  %conv5 = zext i8 %7 to i32, !dbg !14112
  %and = and i32 %conv4, %conv5, !dbg !14113
  %8 = load i8, i8* %bitshift, align 1, !dbg !14114
  %conv6 = zext i8 %8 to i32, !dbg !14114
  %shr = ashr i32 %and, %conv6, !dbg !14115
  %9 = load i16, i16* %remainder, align 2, !dbg !14116
  %conv7 = zext i16 %9 to i32, !dbg !14116
  %or = or i32 %conv7, %shr, !dbg !14116
  %conv8 = trunc i32 %or to i16, !dbg !14116
  store i16 %conv8, i16* %remainder, align 2, !dbg !14116
  %10 = load i8, i8* %bitmask, align 1, !dbg !14117
  %conv9 = zext i8 %10 to i32, !dbg !14117
  %shr10 = ashr i32 %conv9, 1, !dbg !14117
  %conv11 = trunc i32 %shr10 to i8, !dbg !14117
  store i8 %conv11, i8* %bitmask, align 1, !dbg !14117
  %11 = load i8, i8* %bitshift, align 1, !dbg !14118
  %dec12 = add i8 %11, -1, !dbg !14118
  store i8 %dec12, i8* %bitshift, align 1, !dbg !14118
  %12 = load i8, i8* %bitmask, align 1, !dbg !14119
  %conv13 = zext i8 %12 to i32, !dbg !14119
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !14121
  br i1 %cmp14, label %if.then, label %if.end, !dbg !14122

if.then:                                          ; preds = %while.body
  store i8 -128, i8* %bitmask, align 1, !dbg !14123
  store i8 7, i8* %bitshift, align 1, !dbg !14125
  %13 = load i8, i8* %array_index, align 1, !dbg !14126
  %inc = add i8 %13, 1, !dbg !14126
  store i8 %inc, i8* %array_index, align 1, !dbg !14126
  br label %if.end, !dbg !14127

if.end:                                           ; preds = %if.then, %while.body
  %14 = load i16, i16* %remainder, align 2, !dbg !14128
  %conv16 = zext i16 %14 to i32, !dbg !14128
  %and17 = and i32 %conv16, 256, !dbg !14130
  %cmp18 = icmp eq i32 %and17, 256, !dbg !14131
  br i1 %cmp18, label %if.then20, label %if.end23, !dbg !14132

if.then20:                                        ; preds = %if.end
  %15 = load i16, i16* %remainder, align 2, !dbg !14133
  %conv21 = zext i16 %15 to i32, !dbg !14133
  %xor = xor i32 %conv21, 213, !dbg !14133
  %conv22 = trunc i32 %xor to i16, !dbg !14133
  store i16 %conv22, i16* %remainder, align 2, !dbg !14133
  br label %if.end23, !dbg !14134

if.end23:                                         ; preds = %if.then20, %if.end
  br label %while.cond, !dbg !14104, !llvm.loop !14135

while.end:                                        ; preds = %while.cond
  store i32 8, i32* %number_of_bits, align 4, !dbg !14137
  br label %while.cond24, !dbg !14138

while.cond24:                                     ; preds = %if.end40, %while.end
  %16 = load i32, i32* %number_of_bits, align 4, !dbg !14139
  %cmp25 = icmp ne i32 %16, 0, !dbg !14140
  br i1 %cmp25, label %while.body27, label %while.end41, !dbg !14138

while.body27:                                     ; preds = %while.cond24
  %17 = load i32, i32* %number_of_bits, align 4, !dbg !14141
  %dec28 = add i32 %17, -1, !dbg !14141
  store i32 %dec28, i32* %number_of_bits, align 4, !dbg !14141
  %18 = load i16, i16* %remainder, align 2, !dbg !14143
  %conv29 = zext i16 %18 to i32, !dbg !14143
  %shl30 = shl i32 %conv29, 1, !dbg !14143
  %conv31 = trunc i32 %shl30 to i16, !dbg !14143
  store i16 %conv31, i16* %remainder, align 2, !dbg !14143
  %19 = load i16, i16* %remainder, align 2, !dbg !14144
  %conv32 = zext i16 %19 to i32, !dbg !14144
  %and33 = and i32 %conv32, 256, !dbg !14146
  %cmp34 = icmp ne i32 %and33, 0, !dbg !14147
  br i1 %cmp34, label %if.then36, label %if.end40, !dbg !14148

if.then36:                                        ; preds = %while.body27
  %20 = load i16, i16* %remainder, align 2, !dbg !14149
  %conv37 = zext i16 %20 to i32, !dbg !14149
  %xor38 = xor i32 %conv37, 213, !dbg !14149
  %conv39 = trunc i32 %xor38 to i16, !dbg !14149
  store i16 %conv39, i16* %remainder, align 2, !dbg !14149
  br label %if.end40, !dbg !14150

if.end40:                                         ; preds = %if.then36, %while.body27
  br label %while.cond24, !dbg !14138, !llvm.loop !14151

while.end41:                                      ; preds = %while.cond24
  %21 = load i16, i16* %remainder, align 2, !dbg !14153
  %conv42 = zext i16 %21 to i32, !dbg !14153
  %and43 = and i32 %conv42, 255, !dbg !14154
  %conv44 = trunc i32 %and43 to i8, !dbg !14153
  ret i8 %conv44, !dbg !14155
}

; Function Attrs: noredzone
declare dso_local i64 @drm_dp_dpcd_write(%struct.drm_dp_aux*, i32, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !14156 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14157, metadata !DIExpression()), !dbg !14158
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14159
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #8, !dbg !14161
  br i1 %call, label %if.end, label %if.then, !dbg !14162

if.then:                                          ; preds = %entry
  br label %return, !dbg !14163

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14164
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14165
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14165
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14166
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14167
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14167
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #8, !dbg !14168
  br label %return, !dbg !14169

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14169
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !14170 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14173, metadata !DIExpression()), !dbg !14174
  ret i1 true, !dbg !14175
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14176 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14177, metadata !DIExpression()), !dbg !14178
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14179, metadata !DIExpression()), !dbg !14180
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14181
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14182
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14183
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !14184
  br label %do.body, !dbg !14185

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !14186

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !14188

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !14186

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14190
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14190
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14190
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !14190
  br label %do.end5, !dbg !14190

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !14186

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !14192
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @check_txmsg_state(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_sideband_msg_tx* %txmsg) #0 !dbg !14193 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %txmsg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %state = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !14196, metadata !DIExpression()), !dbg !14197
  store %struct.drm_dp_sideband_msg_tx* %txmsg, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg.addr, metadata !14198, metadata !DIExpression()), !dbg !14199
  call void @llvm.dbg.declare(metadata i32* %state, metadata !14200, metadata !DIExpression()), !dbg !14201
  br label %do.body, !dbg !14202

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14204

do.end:                                           ; preds = %do.body
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg.addr, align 8, !dbg !14202
  %state1 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %0, i32 0, i32 7, !dbg !14202
  %1 = load volatile i32, i32* %state1, align 4, !dbg !14202
  store i32 %1, i32* %tmp, align 4, !dbg !14204
  %2 = load i32, i32* %tmp, align 4, !dbg !14202
  store i32 %2, i32* %state, align 4, !dbg !14206
  %3 = load i32, i32* %state, align 4, !dbg !14207
  %cmp = icmp eq i32 %3, 3, !dbg !14208
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !14209

lor.rhs:                                          ; preds = %do.end
  %4 = load i32, i32* %state, align 4, !dbg !14210
  %cmp2 = icmp eq i32 %4, 4, !dbg !14211
  br label %lor.end, !dbg !14209

lor.end:                                          ; preds = %lor.rhs, %do.end
  %5 = phi i1 [ true, %do.end ], [ %cmp2, %lor.rhs ]
  ret i1 %5, !dbg !14212
}

; Function Attrs: noredzone
declare dso_local void @init_wait_entry(%struct.wait_queue_entry*, i32) #3

; Function Attrs: noredzone
declare dso_local i64 @prepare_to_wait_event(%struct.wait_queue_head*, %struct.wait_queue_entry*, i32) #3

; Function Attrs: noredzone
declare dso_local i64 @schedule_timeout(i64) #3

; Function Attrs: noredzone
declare dso_local void @finish_wait(%struct.wait_queue_head*, %struct.wait_queue_entry*) #3

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !14213 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !14214, metadata !DIExpression()), !dbg !14215
  %0 = load i32, i32* %m.addr, align 4, !dbg !14216
  %conv = zext i32 %0 to i64, !dbg !14216
  %add = add i64 %conv, 4, !dbg !14217
  %sub = sub i64 %add, 1, !dbg !14218
  %div = sdiv i64 %sub, 4, !dbg !14219
  ret i64 %div, !dbg !14220
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_payload_send_msg(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port, i32 %id, i32 %pbn) #0 !dbg !14221 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %id.addr = alloca i32, align 4
  %pbn.addr = alloca i32, align 4
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %ret = alloca i32, align 4
  %port_num = alloca i32, align 4
  %sinks = alloca [16 x i8], align 16
  %i = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !14224, metadata !DIExpression()), !dbg !14225
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !14226, metadata !DIExpression()), !dbg !14227
  store i32 %id, i32* %id.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %id.addr, metadata !14228, metadata !DIExpression()), !dbg !14229
  store i32 %pbn, i32* %pbn.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pbn.addr, metadata !14230, metadata !DIExpression()), !dbg !14231
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !14232, metadata !DIExpression()), !dbg !14233
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !14234, metadata !DIExpression()), !dbg !14235
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14236, metadata !DIExpression()), !dbg !14237
  call void @llvm.dbg.declare(metadata i32* %port_num, metadata !14238, metadata !DIExpression()), !dbg !14239
  call void @llvm.dbg.declare(metadata [16 x i8]* %sinks, metadata !14240, metadata !DIExpression()), !dbg !14241
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14242, metadata !DIExpression()), !dbg !14243
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !14244
  %port_num1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 2, !dbg !14245
  %1 = load i8, i8* %port_num1, align 8, !dbg !14245
  %conv = zext i8 %1 to i32, !dbg !14244
  store i32 %conv, i32* %port_num, align 4, !dbg !14246
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14247
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !14248
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 15, !dbg !14249
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !14249
  %call = call %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated(%struct.drm_dp_mst_topology_mgr* %2, %struct.drm_dp_mst_branch* %4) #8, !dbg !14250
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14251
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14252
  %tobool = icmp ne %struct.drm_dp_mst_branch* %5, null, !dbg !14252
  br i1 %tobool, label %if.end6, label %if.then, !dbg !14254

if.then:                                          ; preds = %entry
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14255
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !14257
  %parent2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 15, !dbg !14258
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent2, align 8, !dbg !14258
  %call3 = call %struct.drm_dp_mst_branch* @drm_dp_get_last_connected_port_and_mstb(%struct.drm_dp_mst_topology_mgr* %6, %struct.drm_dp_mst_branch* %8, i32* %port_num) #8, !dbg !14259
  store %struct.drm_dp_mst_branch* %call3, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14260
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14261
  %tobool4 = icmp ne %struct.drm_dp_mst_branch* %9, null, !dbg !14261
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !14263

if.then5:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !14264
  br label %return, !dbg !14264

if.end:                                           ; preds = %if.then
  br label %if.end6, !dbg !14265

if.end6:                                          ; preds = %if.end, %entry
  %call7 = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !14266
  %10 = bitcast i8* %call7 to %struct.drm_dp_sideband_msg_tx*, !dbg !14266
  store %struct.drm_dp_sideband_msg_tx* %10, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14267
  %11 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14268
  %tobool8 = icmp ne %struct.drm_dp_sideband_msg_tx* %11, null, !dbg !14268
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !14270

if.then9:                                         ; preds = %if.end6
  store i32 -12, i32* %ret, align 4, !dbg !14271
  br label %fail_put, !dbg !14273

if.end10:                                         ; preds = %if.end6
  store i32 0, i32* %i, align 4, !dbg !14274
  br label %for.cond, !dbg !14276

for.cond:                                         ; preds = %for.inc, %if.end10
  %12 = load i32, i32* %i, align 4, !dbg !14277
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !14279
  %num_sdp_streams = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 9, !dbg !14280
  %14 = load i8, i8* %num_sdp_streams, align 1, !dbg !14280
  %conv11 = zext i8 %14 to i32, !dbg !14279
  %cmp = icmp slt i32 %12, %conv11, !dbg !14281
  br i1 %cmp, label %for.body, label %for.end, !dbg !14282

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !14283
  %conv13 = trunc i32 %15 to i8, !dbg !14283
  %16 = load i32, i32* %i, align 4, !dbg !14284
  %idxprom = sext i32 %16 to i64, !dbg !14285
  %arrayidx = getelementptr [16 x i8], [16 x i8]* %sinks, i64 0, i64 %idxprom, !dbg !14285
  store i8 %conv13, i8* %arrayidx, align 1, !dbg !14286
  br label %for.inc, !dbg !14285

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !14287
  %inc = add i32 %17, 1, !dbg !14287
  store i32 %inc, i32* %i, align 4, !dbg !14287
  br label %for.cond, !dbg !14288, !llvm.loop !14289

for.end:                                          ; preds = %for.cond
  %18 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14291
  %19 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14292
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %19, i32 0, i32 4, !dbg !14293
  store %struct.drm_dp_mst_branch* %18, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !14294
  %20 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14295
  %21 = load i32, i32* %port_num, align 4, !dbg !14296
  %22 = load i32, i32* %id.addr, align 4, !dbg !14297
  %conv14 = trunc i32 %22 to i8, !dbg !14297
  %23 = load i32, i32* %pbn.addr, align 4, !dbg !14298
  %conv15 = trunc i32 %23 to i16, !dbg !14298
  %24 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !14299
  %num_sdp_streams16 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %24, i32 0, i32 9, !dbg !14300
  %25 = load i8, i8* %num_sdp_streams16, align 1, !dbg !14300
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %sinks, i64 0, i64 0, !dbg !14301
  call void @build_allocate_payload(%struct.drm_dp_sideband_msg_tx* %20, i32 %21, i8 zeroext %conv14, i16 zeroext %conv15, i8 zeroext %25, i8* %arraydecay) #8, !dbg !14302
  %26 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14303
  %27 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14304
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %26, %struct.drm_dp_sideband_msg_tx* %27) #8, !dbg !14305
  %28 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14306
  %29 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14307
  %call17 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %28, %struct.drm_dp_sideband_msg_tx* %29) #8, !dbg !14308
  store i32 %call17, i32* %ret, align 4, !dbg !14309
  %30 = load i32, i32* %ret, align 4, !dbg !14310
  %cmp18 = icmp sgt i32 %30, 0, !dbg !14312
  br i1 %cmp18, label %if.then20, label %if.end26, !dbg !14313

if.then20:                                        ; preds = %for.end
  %31 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14314
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %31, i32 0, i32 9, !dbg !14317
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !14318
  %32 = load i8, i8* %reply_type, align 2, !dbg !14318
  %conv21 = zext i8 %32 to i32, !dbg !14314
  %cmp22 = icmp eq i32 %conv21, 1, !dbg !14319
  br i1 %cmp22, label %if.then24, label %if.else, !dbg !14320

if.then24:                                        ; preds = %if.then20
  store i32 -22, i32* %ret, align 4, !dbg !14321
  br label %if.end25, !dbg !14322

if.else:                                          ; preds = %if.then20
  store i32 0, i32* %ret, align 4, !dbg !14323
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then24
  br label %if.end26, !dbg !14324

if.end26:                                         ; preds = %if.end25, %for.end
  %33 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !14325
  %34 = bitcast %struct.drm_dp_sideband_msg_tx* %33 to i8*, !dbg !14325
  call void @kfree(i8* %34) #8, !dbg !14326
  br label %fail_put, !dbg !14326

fail_put:                                         ; preds = %if.end26, %if.then9
  call void @llvm.dbg.label(metadata !14327), !dbg !14328
  %35 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14329
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %35) #8, !dbg !14330
  %36 = load i32, i32* %ret, align 4, !dbg !14331
  store i32 %36, i32* %retval, align 4, !dbg !14332
  br label %return, !dbg !14332

return:                                           ; preds = %fail_put, %if.then5
  %37 = load i32, i32* %retval, align 4, !dbg !14333
  ret i32 %37, !dbg !14333
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb) #0 !dbg !14334 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %rmstb = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !14337, metadata !DIExpression()), !dbg !14338
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !14339, metadata !DIExpression()), !dbg !14340
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %rmstb, metadata !14341, metadata !DIExpression()), !dbg !14342
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14342
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14343
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !14344
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !14345
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14346
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 12, !dbg !14348
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !14348
  %tobool = icmp ne %struct.drm_dp_mst_branch* %2, null, !dbg !14346
  br i1 %tobool, label %if.then, label %if.end6, !dbg !14349

if.then:                                          ; preds = %entry
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14350
  %mst_primary1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 12, !dbg !14352
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary1, align 8, !dbg !14352
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14353
  %call = call %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated_locked(%struct.drm_dp_mst_branch* %4, %struct.drm_dp_mst_branch* %5) #8, !dbg !14354
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14355
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14356
  %tobool2 = icmp ne %struct.drm_dp_mst_branch* %6, null, !dbg !14356
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !14358

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14359
  %call3 = call i32 @drm_dp_mst_topology_try_get_mstb(%struct.drm_dp_mst_branch* %7) #8, !dbg !14360
  %tobool4 = icmp ne i32 %call3, 0, !dbg !14360
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !14361

if.then5:                                         ; preds = %land.lhs.true
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14362
  br label %if.end, !dbg !14363

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  br label %if.end6, !dbg !14364

if.end6:                                          ; preds = %if.end, %entry
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14365
  %lock7 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 9, !dbg !14366
  call void @mutex_unlock(%struct.mutex* %lock7) #8, !dbg !14367
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14368
  ret %struct.drm_dp_mst_branch* %9, !dbg !14369
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_branch* @drm_dp_get_last_connected_port_and_mstb(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb, i32* %port_num) #0 !dbg !14370 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port_num.addr = alloca i32*, align 8
  %rmstb = alloca %struct.drm_dp_mst_branch*, align 8
  %found_port = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !14373, metadata !DIExpression()), !dbg !14374
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !14375, metadata !DIExpression()), !dbg !14376
  store i32* %port_num, i32** %port_num.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %port_num.addr, metadata !14377, metadata !DIExpression()), !dbg !14378
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %rmstb, metadata !14379, metadata !DIExpression()), !dbg !14380
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14380
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %found_port, metadata !14381, metadata !DIExpression()), !dbg !14382
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14383
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !14384
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !14385
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14386
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 12, !dbg !14388
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !14388
  %tobool = icmp ne %struct.drm_dp_mst_branch* %2, null, !dbg !14386
  br i1 %tobool, label %if.end, label %if.then, !dbg !14389

if.then:                                          ; preds = %entry
  br label %out, !dbg !14390

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !14391

do.body:                                          ; preds = %do.cond, %if.end
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14392
  %call = call %struct.drm_dp_mst_port* @drm_dp_get_last_connected_port_to_mstb(%struct.drm_dp_mst_branch* %3) #8, !dbg !14394
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %found_port, align 8, !dbg !14395
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %found_port, align 8, !dbg !14396
  %tobool1 = icmp ne %struct.drm_dp_mst_port* %4, null, !dbg !14396
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !14398

if.then2:                                         ; preds = %do.body
  br label %do.end, !dbg !14399

if.end3:                                          ; preds = %do.body
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %found_port, align 8, !dbg !14400
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 15, !dbg !14402
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !14402
  %call4 = call i32 @drm_dp_mst_topology_try_get_mstb(%struct.drm_dp_mst_branch* %6) #8, !dbg !14403
  %tobool5 = icmp ne i32 %call4, 0, !dbg !14403
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !14404

if.then6:                                         ; preds = %if.end3
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %found_port, align 8, !dbg !14405
  %parent7 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 15, !dbg !14407
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent7, align 8, !dbg !14407
  store %struct.drm_dp_mst_branch* %8, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14408
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %found_port, align 8, !dbg !14409
  %port_num8 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 2, !dbg !14410
  %10 = load i8, i8* %port_num8, align 8, !dbg !14410
  %conv = zext i8 %10 to i32, !dbg !14409
  %11 = load i32*, i32** %port_num.addr, align 8, !dbg !14411
  store i32 %conv, i32* %11, align 4, !dbg !14412
  br label %if.end10, !dbg !14413

if.else:                                          ; preds = %if.end3
  %12 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %found_port, align 8, !dbg !14414
  %parent9 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %12, i32 0, i32 15, !dbg !14416
  %13 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent9, align 8, !dbg !14416
  store %struct.drm_dp_mst_branch* %13, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14417
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then6
  br label %do.cond, !dbg !14418

do.cond:                                          ; preds = %if.end10
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14419
  %tobool11 = icmp ne %struct.drm_dp_mst_branch* %14, null, !dbg !14420
  %lnot = xor i1 %tobool11, true, !dbg !14420
  br i1 %lnot, label %do.body, label %do.end, !dbg !14418, !llvm.loop !14421

do.end:                                           ; preds = %do.cond, %if.then2
  br label %out, !dbg !14418

out:                                              ; preds = %do.end, %if.then
  call void @llvm.dbg.label(metadata !14423), !dbg !14424
  %15 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14425
  %lock12 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %15, i32 0, i32 9, !dbg !14426
  call void @mutex_unlock(%struct.mutex* %lock12) #8, !dbg !14427
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14428
  ret %struct.drm_dp_mst_branch* %16, !dbg !14429
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_allocate_payload(%struct.drm_dp_sideband_msg_tx* %msg, i32 %port_num, i8 zeroext %vcpi, i16 zeroext %pbn, i8 zeroext %number_sdp_streams, i8* %sdp_stream_sink) #0 !dbg !14430 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %port_num.addr = alloca i32, align 4
  %vcpi.addr = alloca i8, align 1
  %pbn.addr = alloca i16, align 2
  %number_sdp_streams.addr = alloca i8, align 1
  %sdp_stream_sink.addr = alloca i8*, align 8
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !14433, metadata !DIExpression()), !dbg !14434
  store i32 %port_num, i32* %port_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_num.addr, metadata !14435, metadata !DIExpression()), !dbg !14436
  store i8 %vcpi, i8* %vcpi.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %vcpi.addr, metadata !14437, metadata !DIExpression()), !dbg !14438
  store i16 %pbn, i16* %pbn.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pbn.addr, metadata !14439, metadata !DIExpression()), !dbg !14440
  store i8 %number_sdp_streams, i8* %number_sdp_streams.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %number_sdp_streams.addr, metadata !14441, metadata !DIExpression()), !dbg !14442
  store i8* %sdp_stream_sink, i8** %sdp_stream_sink.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %sdp_stream_sink.addr, metadata !14443, metadata !DIExpression()), !dbg !14444
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !14445, metadata !DIExpression()), !dbg !14446
  %0 = bitcast %struct.drm_dp_sideband_msg_req_body* %req to i8*, !dbg !14447
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 120, i1 false), !dbg !14447
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !14448
  store i8 17, i8* %req_type, align 8, !dbg !14449
  %1 = load i32, i32* %port_num.addr, align 4, !dbg !14450
  %conv = trunc i32 %1 to i8, !dbg !14450
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14451
  %allocate_payload = bitcast %union.ack_req* %u to %struct.drm_dp_allocate_payload*, !dbg !14452
  %port_number = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload, i32 0, i32 0, !dbg !14453
  store i8 %conv, i8* %port_number, align 8, !dbg !14454
  %2 = load i8, i8* %vcpi.addr, align 1, !dbg !14455
  %u1 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14456
  %allocate_payload2 = bitcast %union.ack_req* %u1 to %struct.drm_dp_allocate_payload*, !dbg !14457
  %vcpi3 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload2, i32 0, i32 2, !dbg !14458
  store i8 %2, i8* %vcpi3, align 2, !dbg !14459
  %3 = load i16, i16* %pbn.addr, align 2, !dbg !14460
  %u4 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14461
  %allocate_payload5 = bitcast %union.ack_req* %u4 to %struct.drm_dp_allocate_payload*, !dbg !14462
  %pbn6 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload5, i32 0, i32 3, !dbg !14463
  store i16 %3, i16* %pbn6, align 4, !dbg !14464
  %4 = load i8, i8* %number_sdp_streams.addr, align 1, !dbg !14465
  %u7 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14466
  %allocate_payload8 = bitcast %union.ack_req* %u7 to %struct.drm_dp_allocate_payload*, !dbg !14467
  %number_sdp_streams9 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload8, i32 0, i32 1, !dbg !14468
  store i8 %4, i8* %number_sdp_streams9, align 1, !dbg !14469
  %u10 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14470
  %allocate_payload11 = bitcast %union.ack_req* %u10 to %struct.drm_dp_allocate_payload*, !dbg !14471
  %sdp_stream_sink12 = getelementptr inbounds %struct.drm_dp_allocate_payload, %struct.drm_dp_allocate_payload* %allocate_payload11, i32 0, i32 4, !dbg !14472
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %sdp_stream_sink12, i64 0, i64 0, !dbg !14473
  %5 = load i8*, i8** %sdp_stream_sink.addr, align 8, !dbg !14474
  %6 = load i8, i8* %number_sdp_streams.addr, align 1, !dbg !14475
  %conv13 = zext i8 %6 to i64, !dbg !14475
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 1 %5, i64 %conv13, i1 false), !dbg !14473
  %7 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !14476
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %7) #8, !dbg !14477
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !14478
  %path_msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %8, i32 0, i32 8, !dbg !14479
  store i8 1, i8* %path_msg, align 8, !dbg !14480
  ret void, !dbg !14481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated_locked(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch* %to_find) #0 !dbg !14482 {
entry:
  %retval = alloca %struct.drm_dp_mst_branch*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %to_find.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %rmstb = alloca %struct.drm_dp_mst_branch*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr11 = alloca i8*, align 8
  %tmp16 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !14485, metadata !DIExpression()), !dbg !14486
  store %struct.drm_dp_mst_branch* %to_find, %struct.drm_dp_mst_branch** %to_find.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %to_find.addr, metadata !14487, metadata !DIExpression()), !dbg !14488
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !14489, metadata !DIExpression()), !dbg !14490
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %rmstb, metadata !14491, metadata !DIExpression()), !dbg !14492
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %to_find.addr, align 8, !dbg !14493
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14495
  %cmp = icmp eq %struct.drm_dp_mst_branch* %0, %1, !dbg !14496
  br i1 %cmp, label %if.then, label %if.end, !dbg !14497

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14498
  store %struct.drm_dp_mst_branch* %2, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !14499
  br label %return, !dbg !14499

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14500, metadata !DIExpression()), !dbg !14503
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14503
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %3, i32 0, i32 6, !dbg !14503
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !14503
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14503
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !14503
  store i8* %5, i8** %__mptr, align 8, !dbg !14503
  br label %do.body, !dbg !14503

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !14504

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !14503
  %add.ptr = getelementptr i8, i8* %6, i64 -24, !dbg !14503
  %7 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !14503
  store %struct.drm_dp_mst_port* %7, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !14504
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !14503
  store %struct.drm_dp_mst_port* %8, %struct.drm_dp_mst_port** %port, align 8, !dbg !14506
  br label %for.cond, !dbg !14506

for.cond:                                         ; preds = %do.end15, %do.end
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !14507
  %next1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 12, !dbg !14507
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14507
  %ports2 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %10, i32 0, i32 6, !dbg !14507
  %cmp3 = icmp eq %struct.list_head* %next1, %ports2, !dbg !14507
  %lnot = xor i1 %cmp3, true, !dbg !14507
  br i1 %lnot, label %for.body, label %for.end, !dbg !14506

for.body:                                         ; preds = %for.cond
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !14509
  %mstb4 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 13, !dbg !14512
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb4, align 8, !dbg !14512
  %tobool = icmp ne %struct.drm_dp_mst_branch* %12, null, !dbg !14509
  br i1 %tobool, label %if.then5, label %if.end10, !dbg !14513

if.then5:                                         ; preds = %for.body
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !14514
  %mstb6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 13, !dbg !14516
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb6, align 8, !dbg !14516
  %15 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %to_find.addr, align 8, !dbg !14517
  %call = call %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated_locked(%struct.drm_dp_mst_branch* %14, %struct.drm_dp_mst_branch* %15) #8, !dbg !14518
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14519
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14520
  %tobool7 = icmp ne %struct.drm_dp_mst_branch* %16, null, !dbg !14520
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !14522

if.then8:                                         ; preds = %if.then5
  %17 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %rmstb, align 8, !dbg !14523
  store %struct.drm_dp_mst_branch* %17, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !14524
  br label %return, !dbg !14524

if.end9:                                          ; preds = %if.then5
  br label %if.end10, !dbg !14525

if.end10:                                         ; preds = %if.end9, %for.body
  br label %for.inc, !dbg !14526

for.inc:                                          ; preds = %if.end10
  call void @llvm.dbg.declare(metadata i8** %__mptr11, metadata !14527, metadata !DIExpression()), !dbg !14529
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !14529
  %next12 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %18, i32 0, i32 12, !dbg !14529
  %next13 = getelementptr inbounds %struct.list_head, %struct.list_head* %next12, i32 0, i32 0, !dbg !14529
  %19 = load %struct.list_head*, %struct.list_head** %next13, align 8, !dbg !14529
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !14529
  store i8* %20, i8** %__mptr11, align 8, !dbg !14529
  br label %do.body14, !dbg !14529

do.body14:                                        ; preds = %for.inc
  br label %do.end15, !dbg !14530

do.end15:                                         ; preds = %do.body14
  %21 = load i8*, i8** %__mptr11, align 8, !dbg !14529
  %add.ptr17 = getelementptr i8, i8* %21, i64 -24, !dbg !14529
  %22 = bitcast i8* %add.ptr17 to %struct.drm_dp_mst_port*, !dbg !14529
  store %struct.drm_dp_mst_port* %22, %struct.drm_dp_mst_port** %tmp16, align 8, !dbg !14530
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp16, align 8, !dbg !14529
  store %struct.drm_dp_mst_port* %23, %struct.drm_dp_mst_port** %port, align 8, !dbg !14507
  br label %for.cond, !dbg !14507, !llvm.loop !14532

for.end:                                          ; preds = %for.cond
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !14534
  br label %return, !dbg !14534

return:                                           ; preds = %for.end, %if.then8, %if.then
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !14535
  ret %struct.drm_dp_mst_branch* %24, !dbg !14535
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_topology_try_get_mstb(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !14536 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !14539, metadata !DIExpression()), !dbg !14540
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14541, metadata !DIExpression()), !dbg !14542
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14543
  %mgr = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 8, !dbg !14544
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !14544
  call void @topology_ref_history_lock(%struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !14545
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14546
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 0, !dbg !14547
  %call = call i32 @kref_get_unless_zero(%struct.kref* %topology_kref) #8, !dbg !14548
  store i32 %call, i32* %ret, align 4, !dbg !14549
  %3 = load i32, i32* %ret, align 4, !dbg !14550
  %tobool = icmp ne i32 %3, 0, !dbg !14550
  br i1 %tobool, label %if.then, label %if.end, !dbg !14552

if.then:                                          ; preds = %entry
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14553
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14553
  %topology_kref1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %5, i32 0, i32 0, !dbg !14553
  %call2 = call i32 @kref_read(%struct.kref* %topology_kref1) #8, !dbg !14553
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86, i64 0, i64 0), %struct.drm_dp_mst_branch* %4, i32 %call2) #8, !dbg !14553
  br label %if.end, !dbg !14555

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14556
  %mgr3 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %6, i32 0, i32 8, !dbg !14557
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr3, align 8, !dbg !14557
  call void @topology_ref_history_unlock(%struct.drm_dp_mst_topology_mgr* %7) #8, !dbg !14558
  %8 = load i32, i32* %ret, align 4, !dbg !14559
  ret i32 %8, !dbg !14560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_port* @drm_dp_get_last_connected_port_to_mstb(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !14561 {
entry:
  %retval = alloca %struct.drm_dp_mst_port*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !14564, metadata !DIExpression()), !dbg !14565
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14566
  %port_parent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 7, !dbg !14568
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent, align 8, !dbg !14568
  %tobool = icmp ne %struct.drm_dp_mst_port* %1, null, !dbg !14566
  br i1 %tobool, label %if.end, label %if.then, !dbg !14569

if.then:                                          ; preds = %entry
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %retval, align 8, !dbg !14570
  br label %return, !dbg !14570

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14571
  %port_parent1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 7, !dbg !14573
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent1, align 8, !dbg !14573
  %mstb2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 13, !dbg !14574
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb2, align 8, !dbg !14574
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14575
  %cmp = icmp ne %struct.drm_dp_mst_branch* %4, %5, !dbg !14576
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !14577

if.then3:                                         ; preds = %if.end
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14578
  %port_parent4 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %6, i32 0, i32 7, !dbg !14579
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent4, align 8, !dbg !14579
  store %struct.drm_dp_mst_port* %7, %struct.drm_dp_mst_port** %retval, align 8, !dbg !14580
  br label %return, !dbg !14580

if.end5:                                          ; preds = %if.end
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !14581
  %port_parent6 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %8, i32 0, i32 7, !dbg !14582
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent6, align 8, !dbg !14582
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 15, !dbg !14583
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !14583
  %call = call %struct.drm_dp_mst_port* @drm_dp_get_last_connected_port_to_mstb(%struct.drm_dp_mst_branch* %10) #8, !dbg !14584
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %retval, align 8, !dbg !14585
  br label %return, !dbg !14585

return:                                           ; preds = %if.end5, %if.then3, %if.then
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %retval, align 8, !dbg !14586
  ret %struct.drm_dp_mst_port* %11, !dbg !14586
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_dpcd_read(%struct.drm_dp_sideband_msg_tx* %msg, i8 zeroext %port_num, i32 %offset, i8 zeroext %num_bytes) #0 !dbg !14587 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %port_num.addr = alloca i8, align 1
  %offset.addr = alloca i32, align 4
  %num_bytes.addr = alloca i8, align 1
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !14590, metadata !DIExpression()), !dbg !14591
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !14592, metadata !DIExpression()), !dbg !14593
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14594, metadata !DIExpression()), !dbg !14595
  store i8 %num_bytes, i8* %num_bytes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %num_bytes.addr, metadata !14596, metadata !DIExpression()), !dbg !14597
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !14598, metadata !DIExpression()), !dbg !14599
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !14600
  store i8 32, i8* %req_type, align 8, !dbg !14601
  %0 = load i8, i8* %port_num.addr, align 1, !dbg !14602
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14603
  %dpcd_read = bitcast %union.ack_req* %u to %struct.drm_dp_remote_dpcd_read*, !dbg !14604
  %port_number = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read, i32 0, i32 0, !dbg !14605
  store i8 %0, i8* %port_number, align 8, !dbg !14606
  %1 = load i32, i32* %offset.addr, align 4, !dbg !14607
  %u1 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14608
  %dpcd_read2 = bitcast %union.ack_req* %u1 to %struct.drm_dp_remote_dpcd_read*, !dbg !14609
  %dpcd_address = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read2, i32 0, i32 1, !dbg !14610
  store i32 %1, i32* %dpcd_address, align 4, !dbg !14611
  %2 = load i8, i8* %num_bytes.addr, align 1, !dbg !14612
  %u3 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14613
  %dpcd_read4 = bitcast %union.ack_req* %u3 to %struct.drm_dp_remote_dpcd_read*, !dbg !14614
  %num_bytes5 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read, %struct.drm_dp_remote_dpcd_read* %dpcd_read4, i32 0, i32 2, !dbg !14615
  store i8 %2, i8* %num_bytes5, align 8, !dbg !14616
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !14617
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %3) #8, !dbg !14618
  ret void, !dbg !14619
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_dpcd_write(%struct.drm_dp_sideband_msg_tx* %msg, i8 zeroext %port_num, i32 %offset, i8 zeroext %num_bytes, i8* %bytes) #0 !dbg !14620 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %port_num.addr = alloca i8, align 1
  %offset.addr = alloca i32, align 4
  %num_bytes.addr = alloca i8, align 1
  %bytes.addr = alloca i8*, align 8
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !14623, metadata !DIExpression()), !dbg !14624
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !14625, metadata !DIExpression()), !dbg !14626
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14627, metadata !DIExpression()), !dbg !14628
  store i8 %num_bytes, i8* %num_bytes.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %num_bytes.addr, metadata !14629, metadata !DIExpression()), !dbg !14630
  store i8* %bytes, i8** %bytes.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %bytes.addr, metadata !14631, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !14633, metadata !DIExpression()), !dbg !14634
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !14635
  store i8 33, i8* %req_type, align 8, !dbg !14636
  %0 = load i8, i8* %port_num.addr, align 1, !dbg !14637
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14638
  %dpcd_write = bitcast %union.ack_req* %u to %struct.drm_dp_remote_dpcd_write*, !dbg !14639
  %port_number = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write, i32 0, i32 0, !dbg !14640
  store i8 %0, i8* %port_number, align 8, !dbg !14641
  %1 = load i32, i32* %offset.addr, align 4, !dbg !14642
  %u1 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14643
  %dpcd_write2 = bitcast %union.ack_req* %u1 to %struct.drm_dp_remote_dpcd_write*, !dbg !14644
  %dpcd_address = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write2, i32 0, i32 1, !dbg !14645
  store i32 %1, i32* %dpcd_address, align 4, !dbg !14646
  %2 = load i8, i8* %num_bytes.addr, align 1, !dbg !14647
  %u3 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14648
  %dpcd_write4 = bitcast %union.ack_req* %u3 to %struct.drm_dp_remote_dpcd_write*, !dbg !14649
  %num_bytes5 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write4, i32 0, i32 2, !dbg !14650
  store i8 %2, i8* %num_bytes5, align 8, !dbg !14651
  %3 = load i8*, i8** %bytes.addr, align 8, !dbg !14652
  %u6 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !14653
  %dpcd_write7 = bitcast %union.ack_req* %u6 to %struct.drm_dp_remote_dpcd_write*, !dbg !14654
  %bytes8 = getelementptr inbounds %struct.drm_dp_remote_dpcd_write, %struct.drm_dp_remote_dpcd_write* %dpcd_write7, i32 0, i32 3, !dbg !14655
  store i8* %3, i8** %bytes8, align 8, !dbg !14656
  %4 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !14657
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %4) #8, !dbg !14658
  ret void, !dbg !14659
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kref_init(%struct.kref* %kref) #0 !dbg !14660 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !14661, metadata !DIExpression()), !dbg !14662
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !14663
  %refcount = getelementptr inbounds %struct.kref, %struct.kref* %0, i32 0, i32 0, !dbg !14664
  call void @refcount_set(%struct.refcount_struct* %refcount, i32 1) #8, !dbg !14665
  ret void, !dbg !14666
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @refcount_set(%struct.refcount_struct* %r, i32 %n) #0 !dbg !14667 {
entry:
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !14670, metadata !DIExpression()), !dbg !14674
  %i.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i.i, metadata !14678, metadata !DIExpression()), !dbg !14679
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !8889, metadata !DIExpression()), !dbg !14680
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !8899, metadata !DIExpression()), !dbg !14682
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !14683, metadata !DIExpression()), !dbg !14684
  %i.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %i.addr.i, metadata !14685, metadata !DIExpression()), !dbg !14686
  %r.addr = alloca %struct.refcount_struct*, align 8
  %n.addr = alloca i32, align 4
  store %struct.refcount_struct* %r, %struct.refcount_struct** %r.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.refcount_struct** %r.addr, metadata !14687, metadata !DIExpression()), !dbg !14688
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !14689, metadata !DIExpression()), !dbg !14690
  %0 = load %struct.refcount_struct*, %struct.refcount_struct** %r.addr, align 8, !dbg !14691
  %refs = getelementptr inbounds %struct.refcount_struct, %struct.refcount_struct* %0, i32 0, i32 0, !dbg !14692
  %1 = load i32, i32* %n.addr, align 4, !dbg !14693
  store %struct.atomic_t* %refs, %struct.atomic_t** %v.addr.i, align 8
  store i32 %1, i32* %i.addr.i, align 4
  %2 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14694
  %3 = bitcast %struct.atomic_t* %2 to i8*, !dbg !14694
  store i8* %3, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %4 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14695
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !14696
  %conv.i.i = trunc i64 %5 to i32, !dbg !14696
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %4, i32 %conv.i.i) #10, !dbg !14697
  %6 = load i8*, i8** %v.addr.i.i, align 8, !dbg !14698
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !14698
  call void @kcsan_check_access(i8* %6, i64 %7, i32 5) #10, !dbg !14698
  %8 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !14699
  %9 = load i32, i32* %i.addr.i, align 4, !dbg !14700
  store %struct.atomic_t* %8, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %9, i32* %i.addr.i.i, align 4
  %10 = load i32, i32* %i.addr.i.i, align 4, !dbg !14701
  %11 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !14701
  %counter.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %11, i32 0, i32 0, !dbg !14701
  store volatile i32 %10, i32* %counter.i.i, align 4, !dbg !14701
  ret void, !dbg !14703
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_destroy_mst_branch_device(%struct.kref* %kref) #0 !dbg !14704 {
entry:
  %kref.addr = alloca %struct.kref*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_branch*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  store %struct.kref* %kref, %struct.kref** %kref.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kref** %kref.addr, metadata !14705, metadata !DIExpression()), !dbg !14706
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !14707, metadata !DIExpression()), !dbg !14708
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14709, metadata !DIExpression()), !dbg !14711
  %0 = load %struct.kref*, %struct.kref** %kref.addr, align 8, !dbg !14711
  %1 = bitcast %struct.kref* %0 to i8*, !dbg !14711
  store i8* %1, i8** %__mptr, align 8, !dbg !14711
  br label %do.body, !dbg !14711

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14712

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14711
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14711
  %3 = bitcast i8* %add.ptr to %struct.drm_dp_mst_branch*, !dbg !14711
  store %struct.drm_dp_mst_branch* %3, %struct.drm_dp_mst_branch** %tmp, align 8, !dbg !14712
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %tmp, align 8, !dbg !14711
  store %struct.drm_dp_mst_branch* %4, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14708
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !14714, metadata !DIExpression()), !dbg !14715
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14716
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %5, i32 0, i32 8, !dbg !14717
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !14717
  store %struct.drm_dp_mst_topology_mgr* %6, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !14715
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14718
  call void @drm_dp_mst_dump_mstb_topology_history(%struct.drm_dp_mst_branch* %7) #8, !dbg !14719
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14720
  %destroy_next = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %8, i32 0, i32 2, !dbg !14721
  call void @INIT_LIST_HEAD(%struct.list_head* %destroy_next) #8, !dbg !14722
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !14723
  %delayed_destroy_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 29, !dbg !14724
  call void @mutex_lock(%struct.mutex* %delayed_destroy_lock) #8, !dbg !14725
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !14726
  %destroy_next2 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %10, i32 0, i32 2, !dbg !14727
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !14728
  %destroy_branch_device_list = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %11, i32 0, i32 28, !dbg !14729
  call void @list_add(%struct.list_head* %destroy_next2, %struct.list_head* %destroy_branch_device_list) #8, !dbg !14730
  %12 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !14731
  %delayed_destroy_lock3 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %12, i32 0, i32 29, !dbg !14732
  call void @mutex_unlock(%struct.mutex* %delayed_destroy_lock3) #8, !dbg !14733
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !14734
  %delayed_destroy_wq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %13, i32 0, i32 30, !dbg !14735
  %14 = load %struct.workqueue_struct*, %struct.workqueue_struct** %delayed_destroy_wq, align 8, !dbg !14735
  %15 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !14736
  %delayed_destroy_work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %15, i32 0, i32 31, !dbg !14737
  %call = call zeroext i1 @queue_work(%struct.workqueue_struct* %14, %struct.work_struct* %delayed_destroy_work) #8, !dbg !14738
  ret void, !dbg !14739
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_dump_mstb_topology_history(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !14740 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !14741, metadata !DIExpression()), !dbg !14742
  ret void, !dbg !14743
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_validate_guid(%struct.drm_dp_mst_topology_mgr* %mgr, i8* %guid) #0 !dbg !14744 {
entry:
  %retval = alloca i1, align 1
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %guid.addr = alloca i8*, align 8
  %salt = alloca i64, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !14747, metadata !DIExpression()), !dbg !14748
  store i8* %guid, i8** %guid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %guid.addr, metadata !14749, metadata !DIExpression()), !dbg !14750
  call void @llvm.dbg.declare(metadata i64* %salt, metadata !14751, metadata !DIExpression()), !dbg !14752
  %0 = load i8*, i8** %guid.addr, align 8, !dbg !14753
  %call = call i8* @memchr_inv(i8* %0, i32 0, i64 16) #8, !dbg !14755
  %tobool = icmp ne i8* %call, null, !dbg !14755
  br i1 %tobool, label %if.then, label %if.end, !dbg !14756

if.then:                                          ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !14757
  br label %return, !dbg !14757

if.end:                                           ; preds = %entry
  %call1 = call i64 @get_jiffies_64() #8, !dbg !14758
  store i64 %call1, i64* %salt, align 8, !dbg !14759
  %1 = load i8*, i8** %guid.addr, align 8, !dbg !14760
  %arrayidx = getelementptr i8, i8* %1, i64 0, !dbg !14760
  %2 = bitcast i64* %salt to i8*, !dbg !14761
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 8 %2, i64 8, i1 false), !dbg !14761
  %3 = load i8*, i8** %guid.addr, align 8, !dbg !14762
  %arrayidx2 = getelementptr i8, i8* %3, i64 8, !dbg !14762
  %4 = bitcast i64* %salt to i8*, !dbg !14763
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx2, i8* align 8 %4, i64 8, i1 false), !dbg !14763
  store i1 false, i1* %retval, align 1, !dbg !14764
  br label %return, !dbg !14764

return:                                           ; preds = %if.end, %if.then
  %5 = load i1, i1* %retval, align 1, !dbg !14765
  ret i1 %5, !dbg !14765
}

; Function Attrs: noredzone
declare dso_local i8* @memchr_inv(i8*, i32, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @get_jiffies_64() #0 !dbg !14766 {
entry:
  %0 = load volatile i64, i64* @jiffies, align 8, !dbg !14769
  ret i64 %0, !dbg !14770
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_get_one_sb_msg(%struct.drm_dp_mst_topology_mgr* %mgr, i1 zeroext %up, %struct.drm_dp_mst_branch** %mstb) #0 !dbg !14771 {
entry:
  %retval = alloca i1, align 1
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %up.addr = alloca i8, align 1
  %mstb.addr = alloca %struct.drm_dp_mst_branch**, align 8
  %len = alloca i32, align 4
  %replyblock = alloca [32 x i8], align 16
  %replylen = alloca i32, align 4
  %curreply = alloca i32, align 4
  %ret = alloca i32, align 4
  %hdrlen = alloca i8, align 1
  %hdr = alloca %struct.drm_dp_sideband_msg_hdr, align 1
  %msg = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %basereg = alloca i32, align 4
  %__UNIQUE_ID___x332 = alloca i32, align 4
  %__UNIQUE_ID___y333 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x334 = alloca i8, align 1
  %__UNIQUE_ID___y335 = alloca i8, align 1
  %tmp39 = alloca i32, align 4
  %__UNIQUE_ID___x338 = alloca i32, align 4
  %__UNIQUE_ID___x336 = alloca i32, align 4
  %__UNIQUE_ID___y337 = alloca i32, align 4
  %tmp67 = alloca i32, align 4
  %__UNIQUE_ID___y339 = alloca i32, align 4
  %tmp74 = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !14775, metadata !DIExpression()), !dbg !14776
  %frombool = zext i1 %up to i8
  store i8 %frombool, i8* %up.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %up.addr, metadata !14777, metadata !DIExpression()), !dbg !14778
  store %struct.drm_dp_mst_branch** %mstb, %struct.drm_dp_mst_branch*** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch*** %mstb.addr, metadata !14779, metadata !DIExpression()), !dbg !14780
  call void @llvm.dbg.declare(metadata i32* %len, metadata !14781, metadata !DIExpression()), !dbg !14782
  call void @llvm.dbg.declare(metadata [32 x i8]* %replyblock, metadata !14783, metadata !DIExpression()), !dbg !14785
  call void @llvm.dbg.declare(metadata i32* %replylen, metadata !14786, metadata !DIExpression()), !dbg !14787
  call void @llvm.dbg.declare(metadata i32* %curreply, metadata !14788, metadata !DIExpression()), !dbg !14789
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14790, metadata !DIExpression()), !dbg !14791
  call void @llvm.dbg.declare(metadata i8* %hdrlen, metadata !14792, metadata !DIExpression()), !dbg !14793
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr* %hdr, metadata !14794, metadata !DIExpression()), !dbg !14795
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %msg, metadata !14796, metadata !DIExpression()), !dbg !14797
  %0 = load i8, i8* %up.addr, align 1, !dbg !14798
  %tobool = trunc i8 %0 to i1, !dbg !14798
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !14798

cond.true:                                        ; preds = %entry
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14799
  %up_req_recv = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 7, !dbg !14800
  br label %cond.end, !dbg !14798

cond.false:                                       ; preds = %entry
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14801
  %down_rep_recv = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 8, !dbg !14802
  br label %cond.end, !dbg !14798

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.drm_dp_sideband_msg_rx* [ %up_req_recv, %cond.true ], [ %down_rep_recv, %cond.false ], !dbg !14798
  store %struct.drm_dp_sideband_msg_rx* %cond, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !14797
  call void @llvm.dbg.declare(metadata i32* %basereg, metadata !14803, metadata !DIExpression()), !dbg !14804
  %3 = load i8, i8* %up.addr, align 1, !dbg !14805
  %tobool1 = trunc i8 %3 to i1, !dbg !14805
  %4 = zext i1 %tobool1 to i64, !dbg !14805
  %cond2 = select i1 %tobool1, i32 5632, i32 5120, !dbg !14805
  store i32 %cond2, i32* %basereg, align 4, !dbg !14804
  %5 = load i8, i8* %up.addr, align 1, !dbg !14806
  %tobool3 = trunc i8 %5 to i1, !dbg !14806
  br i1 %tobool3, label %if.end, label %if.then, !dbg !14808

if.then:                                          ; preds = %cond.end
  %6 = load %struct.drm_dp_mst_branch**, %struct.drm_dp_mst_branch*** %mstb.addr, align 8, !dbg !14809
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %6, align 8, !dbg !14810
  br label %if.end, !dbg !14811

if.end:                                           ; preds = %if.then, %cond.end
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x332, metadata !14812, metadata !DIExpression()), !dbg !14814
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14814
  %max_dpcd_transaction_bytes = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 3, !dbg !14814
  %8 = load i32, i32* %max_dpcd_transaction_bytes, align 8, !dbg !14814
  store i32 %8, i32* %__UNIQUE_ID___x332, align 4, !dbg !14814
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y333, metadata !14815, metadata !DIExpression()), !dbg !14814
  store i32 16, i32* %__UNIQUE_ID___y333, align 4, !dbg !14814
  %9 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !14814
  %10 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !14814
  %cmp = icmp slt i32 %9, %10, !dbg !14814
  br i1 %cmp, label %cond.true4, label %cond.false5, !dbg !14814

cond.true4:                                       ; preds = %if.end
  %11 = load i32, i32* %__UNIQUE_ID___x332, align 4, !dbg !14814
  br label %cond.end6, !dbg !14814

cond.false5:                                      ; preds = %if.end
  %12 = load i32, i32* %__UNIQUE_ID___y333, align 4, !dbg !14814
  br label %cond.end6, !dbg !14814

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ %11, %cond.true4 ], [ %12, %cond.false5 ], !dbg !14814
  store i32 %cond7, i32* %tmp, align 4, !dbg !14814
  %13 = load i32, i32* %tmp, align 4, !dbg !14814
  store i32 %13, i32* %len, align 4, !dbg !14816
  %14 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14817
  %aux = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %14, i32 0, i32 4, !dbg !14818
  %15 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !14818
  %16 = load i32, i32* %basereg, align 4, !dbg !14819
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14820
  %17 = load i32, i32* %len, align 4, !dbg !14821
  %conv = sext i32 %17 to i64, !dbg !14821
  %call = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %15, i32 %16, i8* %arraydecay, i64 %conv) #8, !dbg !14822
  %conv8 = trunc i64 %call to i32, !dbg !14822
  store i32 %conv8, i32* %ret, align 4, !dbg !14823
  %18 = load i32, i32* %ret, align 4, !dbg !14824
  %19 = load i32, i32* %len, align 4, !dbg !14826
  %cmp9 = icmp ne i32 %18, %19, !dbg !14827
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !14828

if.then11:                                        ; preds = %cond.end6
  %20 = load i32, i32* %len, align 4, !dbg !14829
  %21 = load i32, i32* %ret, align 4, !dbg !14829
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.106, i64 0, i64 0), i32 %20, i32 %21) #8, !dbg !14829
  store i1 false, i1* %retval, align 1, !dbg !14831
  br label %return, !dbg !14831

if.end12:                                         ; preds = %cond.end6
  %arraydecay13 = getelementptr inbounds [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14832
  %22 = load i32, i32* %len, align 4, !dbg !14833
  %call14 = call zeroext i1 @drm_dp_decode_sideband_msg_hdr(%struct.drm_dp_sideband_msg_hdr* %hdr, i8* %arraydecay13, i32 %22, i8* %hdrlen) #8, !dbg !14834
  %conv15 = zext i1 %call14 to i32, !dbg !14834
  store i32 %conv15, i32* %ret, align 4, !dbg !14835
  %23 = load i32, i32* %ret, align 4, !dbg !14836
  %cmp16 = icmp eq i32 %23, 0, !dbg !14838
  br i1 %cmp16, label %if.then18, label %if.end21, !dbg !14839

if.then18:                                        ; preds = %if.end12
  %arraydecay19 = getelementptr inbounds [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14840
  %24 = load i32, i32* %len, align 4, !dbg !14842
  %conv20 = sext i32 %24 to i64, !dbg !14842
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.108, i64 0, i64 0), i32 0, i32 16, i32 1, i8* %arraydecay19, i64 %conv20, i1 zeroext false) #8, !dbg !14843
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.109, i64 0, i64 0)) #8, !dbg !14844
  store i1 false, i1* %retval, align 1, !dbg !14845
  br label %return, !dbg !14845

if.end21:                                         ; preds = %if.end12
  %25 = load i8, i8* %up.addr, align 1, !dbg !14846
  %tobool22 = trunc i8 %25 to i1, !dbg !14846
  br i1 %tobool22, label %if.end31, label %if.then23, !dbg !14848

if.then23:                                        ; preds = %if.end21
  %26 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14849
  %lct = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %hdr, i32 0, i32 0, !dbg !14851
  %27 = load i8, i8* %lct, align 1, !dbg !14851
  %rad = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %hdr, i32 0, i32 2, !dbg !14852
  %arraydecay24 = getelementptr inbounds [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !14853
  %call25 = call %struct.drm_dp_mst_branch* @drm_dp_get_mst_branch_device(%struct.drm_dp_mst_topology_mgr* %26, i8 zeroext %27, i8* %arraydecay24) #8, !dbg !14854
  %28 = load %struct.drm_dp_mst_branch**, %struct.drm_dp_mst_branch*** %mstb.addr, align 8, !dbg !14855
  store %struct.drm_dp_mst_branch* %call25, %struct.drm_dp_mst_branch** %28, align 8, !dbg !14856
  %29 = load %struct.drm_dp_mst_branch**, %struct.drm_dp_mst_branch*** %mstb.addr, align 8, !dbg !14857
  %30 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %29, align 8, !dbg !14859
  %tobool26 = icmp ne %struct.drm_dp_mst_branch* %30, null, !dbg !14859
  br i1 %tobool26, label %if.end30, label %if.then27, !dbg !14860

if.then27:                                        ; preds = %if.then23
  %lct28 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %hdr, i32 0, i32 0, !dbg !14861
  %31 = load i8, i8* %lct28, align 1, !dbg !14861
  %conv29 = zext i8 %31 to i32, !dbg !14861
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.110, i64 0, i64 0), i32 %conv29) #8, !dbg !14861
  store i1 false, i1* %retval, align 1, !dbg !14863
  br label %return, !dbg !14863

if.end30:                                         ; preds = %if.then23
  br label %if.end31, !dbg !14864

if.end31:                                         ; preds = %if.end30, %if.end21
  %32 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !14865
  %33 = load i8, i8* %hdrlen, align 1, !dbg !14867
  %call32 = call i32 @drm_dp_sideband_msg_set_header(%struct.drm_dp_sideband_msg_rx* %32, %struct.drm_dp_sideband_msg_hdr* %hdr, i8 zeroext %33) #8, !dbg !14868
  %tobool33 = icmp ne i32 %call32, 0, !dbg !14868
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !14869

if.then34:                                        ; preds = %if.end31
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14870
  %34 = load i8, i8* %arrayidx, align 16, !dbg !14870
  %conv35 = zext i8 %34 to i32, !dbg !14870
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.111, i64 0, i64 0), i32 %conv35) #8, !dbg !14870
  store i1 false, i1* %retval, align 1, !dbg !14872
  br label %return, !dbg !14872

if.end36:                                         ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___x334, metadata !14873, metadata !DIExpression()), !dbg !14875
  %35 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !14875
  %curchunk_len = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %35, i32 0, i32 2, !dbg !14875
  %36 = load i8, i8* %curchunk_len, align 1, !dbg !14875
  store i8 %36, i8* %__UNIQUE_ID___x334, align 1, !dbg !14875
  call void @llvm.dbg.declare(metadata i8* %__UNIQUE_ID___y335, metadata !14876, metadata !DIExpression()), !dbg !14875
  %37 = load i32, i32* %len, align 4, !dbg !14875
  %38 = load i8, i8* %hdrlen, align 1, !dbg !14875
  %conv37 = zext i8 %38 to i32, !dbg !14875
  %sub = sub i32 %37, %conv37, !dbg !14875
  %conv38 = trunc i32 %sub to i8, !dbg !14875
  store i8 %conv38, i8* %__UNIQUE_ID___y335, align 1, !dbg !14875
  %39 = load i8, i8* %__UNIQUE_ID___x334, align 1, !dbg !14875
  %conv40 = zext i8 %39 to i32, !dbg !14875
  %40 = load i8, i8* %__UNIQUE_ID___y335, align 1, !dbg !14875
  %conv41 = zext i8 %40 to i32, !dbg !14875
  %cmp42 = icmp slt i32 %conv40, %conv41, !dbg !14875
  br i1 %cmp42, label %cond.true44, label %cond.false46, !dbg !14875

cond.true44:                                      ; preds = %if.end36
  %41 = load i8, i8* %__UNIQUE_ID___x334, align 1, !dbg !14875
  %conv45 = zext i8 %41 to i32, !dbg !14875
  br label %cond.end48, !dbg !14875

cond.false46:                                     ; preds = %if.end36
  %42 = load i8, i8* %__UNIQUE_ID___y335, align 1, !dbg !14875
  %conv47 = zext i8 %42 to i32, !dbg !14875
  br label %cond.end48, !dbg !14875

cond.end48:                                       ; preds = %cond.false46, %cond.true44
  %cond49 = phi i32 [ %conv45, %cond.true44 ], [ %conv47, %cond.false46 ], !dbg !14875
  store i32 %cond49, i32* %tmp39, align 4, !dbg !14875
  %43 = load i32, i32* %tmp39, align 4, !dbg !14875
  store i32 %43, i32* %replylen, align 4, !dbg !14877
  %44 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !14878
  %arraydecay50 = getelementptr inbounds [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14879
  %45 = load i8, i8* %hdrlen, align 1, !dbg !14880
  %conv51 = zext i8 %45 to i32, !dbg !14880
  %idx.ext = sext i32 %conv51 to i64, !dbg !14881
  %add.ptr = getelementptr i8, i8* %arraydecay50, i64 %idx.ext, !dbg !14881
  %46 = load i32, i32* %replylen, align 4, !dbg !14882
  %conv52 = trunc i32 %46 to i8, !dbg !14882
  %call53 = call zeroext i1 @drm_dp_sideband_append_payload(%struct.drm_dp_sideband_msg_rx* %44, i8* %add.ptr, i8 zeroext %conv52) #8, !dbg !14883
  %conv54 = zext i1 %call53 to i32, !dbg !14883
  store i32 %conv54, i32* %ret, align 4, !dbg !14884
  %47 = load i32, i32* %ret, align 4, !dbg !14885
  %tobool55 = icmp ne i32 %47, 0, !dbg !14885
  br i1 %tobool55, label %if.end59, label %if.then56, !dbg !14887

if.then56:                                        ; preds = %cond.end48
  %arrayidx57 = getelementptr [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14888
  %48 = load i8, i8* %arrayidx57, align 16, !dbg !14888
  %conv58 = zext i8 %48 to i32, !dbg !14888
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.112, i64 0, i64 0), i32 %conv58) #8, !dbg !14888
  store i1 false, i1* %retval, align 1, !dbg !14890
  br label %return, !dbg !14890

if.end59:                                         ; preds = %cond.end48
  %49 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !14891
  %curchunk_len60 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %49, i32 0, i32 2, !dbg !14892
  %50 = load i8, i8* %curchunk_len60, align 1, !dbg !14892
  %conv61 = zext i8 %50 to i32, !dbg !14891
  %51 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !14893
  %curchunk_hdrlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %51, i32 0, i32 4, !dbg !14894
  %52 = load i8, i8* %curchunk_hdrlen, align 1, !dbg !14894
  %conv62 = zext i8 %52 to i32, !dbg !14893
  %add = add i32 %conv61, %conv62, !dbg !14895
  %53 = load i32, i32* %len, align 4, !dbg !14896
  %sub63 = sub i32 %add, %53, !dbg !14897
  store i32 %sub63, i32* %replylen, align 4, !dbg !14898
  %54 = load i32, i32* %len, align 4, !dbg !14899
  store i32 %54, i32* %curreply, align 4, !dbg !14900
  br label %while.cond, !dbg !14901

while.cond:                                       ; preds = %if.end97, %if.end59
  %55 = load i32, i32* %replylen, align 4, !dbg !14902
  %cmp64 = icmp sgt i32 %55, 0, !dbg !14903
  br i1 %cmp64, label %while.body, label %while.end, !dbg !14901

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x338, metadata !14904, metadata !DIExpression()), !dbg !14907
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x336, metadata !14908, metadata !DIExpression()), !dbg !14910
  %56 = load i32, i32* %replylen, align 4, !dbg !14910
  store i32 %56, i32* %__UNIQUE_ID___x336, align 4, !dbg !14910
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y337, metadata !14911, metadata !DIExpression()), !dbg !14910
  %57 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14910
  %max_dpcd_transaction_bytes66 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %57, i32 0, i32 3, !dbg !14910
  %58 = load i32, i32* %max_dpcd_transaction_bytes66, align 8, !dbg !14910
  store i32 %58, i32* %__UNIQUE_ID___y337, align 4, !dbg !14910
  %59 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !14910
  %60 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !14910
  %cmp68 = icmp slt i32 %59, %60, !dbg !14910
  br i1 %cmp68, label %cond.true70, label %cond.false71, !dbg !14910

cond.true70:                                      ; preds = %while.body
  %61 = load i32, i32* %__UNIQUE_ID___x336, align 4, !dbg !14910
  br label %cond.end72, !dbg !14910

cond.false71:                                     ; preds = %while.body
  %62 = load i32, i32* %__UNIQUE_ID___y337, align 4, !dbg !14910
  br label %cond.end72, !dbg !14910

cond.end72:                                       ; preds = %cond.false71, %cond.true70
  %cond73 = phi i32 [ %61, %cond.true70 ], [ %62, %cond.false71 ], !dbg !14910
  store i32 %cond73, i32* %tmp67, align 4, !dbg !14910
  %63 = load i32, i32* %tmp67, align 4, !dbg !14910
  store i32 %63, i32* %__UNIQUE_ID___x338, align 4, !dbg !14907
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y339, metadata !14912, metadata !DIExpression()), !dbg !14907
  store i32 16, i32* %__UNIQUE_ID___y339, align 4, !dbg !14907
  %64 = load i32, i32* %__UNIQUE_ID___x338, align 4, !dbg !14907
  %65 = load i32, i32* %__UNIQUE_ID___y339, align 4, !dbg !14907
  %cmp75 = icmp slt i32 %64, %65, !dbg !14907
  br i1 %cmp75, label %cond.true77, label %cond.false78, !dbg !14907

cond.true77:                                      ; preds = %cond.end72
  %66 = load i32, i32* %__UNIQUE_ID___x338, align 4, !dbg !14907
  br label %cond.end79, !dbg !14907

cond.false78:                                     ; preds = %cond.end72
  %67 = load i32, i32* %__UNIQUE_ID___y339, align 4, !dbg !14907
  br label %cond.end79, !dbg !14907

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i32 [ %66, %cond.true77 ], [ %67, %cond.false78 ], !dbg !14907
  store i32 %cond80, i32* %tmp74, align 4, !dbg !14907
  %68 = load i32, i32* %tmp74, align 4, !dbg !14907
  store i32 %68, i32* %len, align 4, !dbg !14913
  %69 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !14914
  %aux81 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %69, i32 0, i32 4, !dbg !14915
  %70 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux81, align 8, !dbg !14915
  %71 = load i32, i32* %basereg, align 4, !dbg !14916
  %72 = load i32, i32* %curreply, align 4, !dbg !14917
  %add82 = add i32 %71, %72, !dbg !14918
  %arraydecay83 = getelementptr inbounds [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14919
  %73 = load i32, i32* %len, align 4, !dbg !14920
  %conv84 = sext i32 %73 to i64, !dbg !14920
  %call85 = call i64 @drm_dp_dpcd_read(%struct.drm_dp_aux* %70, i32 %add82, i8* %arraydecay83, i64 %conv84) #8, !dbg !14921
  %conv86 = trunc i64 %call85 to i32, !dbg !14921
  store i32 %conv86, i32* %ret, align 4, !dbg !14922
  %74 = load i32, i32* %ret, align 4, !dbg !14923
  %75 = load i32, i32* %len, align 4, !dbg !14925
  %cmp87 = icmp ne i32 %74, %75, !dbg !14926
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !14927

if.then89:                                        ; preds = %cond.end79
  %76 = load i32, i32* %len, align 4, !dbg !14928
  %77 = load i32, i32* %ret, align 4, !dbg !14928
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.113, i64 0, i64 0), i32 %76, i32 %77) #8, !dbg !14928
  store i1 false, i1* %retval, align 1, !dbg !14930
  br label %return, !dbg !14930

if.end90:                                         ; preds = %cond.end79
  %78 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg, align 8, !dbg !14931
  %arraydecay91 = getelementptr inbounds [32 x i8], [32 x i8]* %replyblock, i64 0, i64 0, !dbg !14932
  %79 = load i32, i32* %len, align 4, !dbg !14933
  %conv92 = trunc i32 %79 to i8, !dbg !14933
  %call93 = call zeroext i1 @drm_dp_sideband_append_payload(%struct.drm_dp_sideband_msg_rx* %78, i8* %arraydecay91, i8 zeroext %conv92) #8, !dbg !14934
  %conv94 = zext i1 %call93 to i32, !dbg !14934
  store i32 %conv94, i32* %ret, align 4, !dbg !14935
  %80 = load i32, i32* %ret, align 4, !dbg !14936
  %tobool95 = icmp ne i32 %80, 0, !dbg !14936
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !14938

if.then96:                                        ; preds = %if.end90
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.114, i64 0, i64 0)) #8, !dbg !14939
  store i1 false, i1* %retval, align 1, !dbg !14941
  br label %return, !dbg !14941

if.end97:                                         ; preds = %if.end90
  %81 = load i32, i32* %len, align 4, !dbg !14942
  %82 = load i32, i32* %curreply, align 4, !dbg !14943
  %add98 = add i32 %82, %81, !dbg !14943
  store i32 %add98, i32* %curreply, align 4, !dbg !14943
  %83 = load i32, i32* %len, align 4, !dbg !14944
  %84 = load i32, i32* %replylen, align 4, !dbg !14945
  %sub99 = sub i32 %84, %83, !dbg !14945
  store i32 %sub99, i32* %replylen, align 4, !dbg !14945
  br label %while.cond, !dbg !14901, !llvm.loop !14946

while.end:                                        ; preds = %while.cond
  store i1 true, i1* %retval, align 1, !dbg !14948
  br label %return, !dbg !14948

return:                                           ; preds = %while.end, %if.then96, %if.then89, %if.then56, %if.then34, %if.then27, %if.then18, %if.then11
  %85 = load i1, i1* %retval, align 1, !dbg !14949
  ret i1 %85, !dbg !14949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_reply(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %msg) #0 !dbg !14950 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %msg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !14954, metadata !DIExpression()), !dbg !14955
  store %struct.drm_dp_sideband_msg_reply_body* %msg, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %msg.addr, metadata !14956, metadata !DIExpression()), !dbg !14957
  %0 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !14958
  %1 = bitcast %struct.drm_dp_sideband_msg_reply_body* %0 to i8*, !dbg !14959
  call void @llvm.memset.p0i8.i64(i8* align 2 %1, i8 0, i64 420, i1 false), !dbg !14959
  %2 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !14960
  %msg1 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %2, i32 0, i32 1, !dbg !14961
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg1, i64 0, i64 0, !dbg !14960
  %3 = load i8, i8* %arrayidx, align 1, !dbg !14960
  %conv = zext i8 %3 to i32, !dbg !14960
  %and = and i32 %conv, 128, !dbg !14962
  %shr = ashr i32 %and, 7, !dbg !14963
  %conv2 = trunc i32 %shr to i8, !dbg !14964
  %4 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !14965
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %4, i32 0, i32 0, !dbg !14966
  store i8 %conv2, i8* %reply_type, align 2, !dbg !14967
  %5 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !14968
  %msg3 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %5, i32 0, i32 1, !dbg !14969
  %arrayidx4 = getelementptr [256 x i8], [256 x i8]* %msg3, i64 0, i64 0, !dbg !14968
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !14968
  %conv5 = zext i8 %6 to i32, !dbg !14968
  %and6 = and i32 %conv5, 127, !dbg !14970
  %conv7 = trunc i32 %and6 to i8, !dbg !14971
  %7 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !14972
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %7, i32 0, i32 1, !dbg !14973
  store i8 %conv7, i8* %req_type, align 1, !dbg !14974
  %8 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !14975
  %reply_type8 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %8, i32 0, i32 0, !dbg !14977
  %9 = load i8, i8* %reply_type8, align 2, !dbg !14977
  %conv9 = zext i8 %9 to i32, !dbg !14975
  %cmp = icmp eq i32 %conv9, 1, !dbg !14978
  br i1 %cmp, label %if.then, label %if.end, !dbg !14979

if.then:                                          ; preds = %entry
  %10 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !14980
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %10, i32 0, i32 2, !dbg !14982
  %nak = bitcast %union.ack_replies* %u to %struct.drm_dp_nak_reply*, !dbg !14983
  %guid = getelementptr inbounds %struct.drm_dp_nak_reply, %struct.drm_dp_nak_reply* %nak, i32 0, i32 0, !dbg !14984
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid, i64 0, i64 0, !dbg !14985
  %11 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !14986
  %msg11 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %11, i32 0, i32 1, !dbg !14987
  %arrayidx12 = getelementptr [256 x i8], [256 x i8]* %msg11, i64 0, i64 1, !dbg !14986
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 1 %arrayidx12, i64 16, i1 false), !dbg !14985
  %12 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !14988
  %msg13 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %12, i32 0, i32 1, !dbg !14989
  %arrayidx14 = getelementptr [256 x i8], [256 x i8]* %msg13, i64 0, i64 17, !dbg !14988
  %13 = load i8, i8* %arrayidx14, align 1, !dbg !14988
  %14 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !14990
  %u15 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %14, i32 0, i32 2, !dbg !14991
  %nak16 = bitcast %union.ack_replies* %u15 to %struct.drm_dp_nak_reply*, !dbg !14992
  %reason = getelementptr inbounds %struct.drm_dp_nak_reply, %struct.drm_dp_nak_reply* %nak16, i32 0, i32 1, !dbg !14993
  store i8 %13, i8* %reason, align 2, !dbg !14994
  %15 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !14995
  %msg17 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %15, i32 0, i32 1, !dbg !14996
  %arrayidx18 = getelementptr [256 x i8], [256 x i8]* %msg17, i64 0, i64 18, !dbg !14995
  %16 = load i8, i8* %arrayidx18, align 1, !dbg !14995
  %17 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !14997
  %u19 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %17, i32 0, i32 2, !dbg !14998
  %nak20 = bitcast %union.ack_replies* %u19 to %struct.drm_dp_nak_reply*, !dbg !14999
  %nak_data = getelementptr inbounds %struct.drm_dp_nak_reply, %struct.drm_dp_nak_reply* %nak20, i32 0, i32 2, !dbg !15000
  store i8 %16, i8* %nak_data, align 1, !dbg !15001
  store i1 false, i1* %retval, align 1, !dbg !15002
  br label %return, !dbg !15002

if.end:                                           ; preds = %entry
  %18 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15003
  %req_type21 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %18, i32 0, i32 1, !dbg !15004
  %19 = load i8, i8* %req_type21, align 1, !dbg !15004
  %conv22 = zext i8 %19 to i32, !dbg !15003
  switch i32 %conv22, label %sw.default [
    i32 1, label %sw.bb
    i32 18, label %sw.bb23
    i32 32, label %sw.bb25
    i32 33, label %sw.bb27
    i32 34, label %sw.bb29
    i32 35, label %sw.bb31
    i32 16, label %sw.bb32
    i32 17, label %sw.bb34
    i32 37, label %sw.bb36
    i32 36, label %sw.bb36
    i32 20, label %sw.bb38
    i32 56, label %sw.bb39
  ], !dbg !15005

sw.bb:                                            ; preds = %if.end
  %20 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15006
  %21 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15008
  %call = call zeroext i1 @drm_dp_sideband_parse_link_address(%struct.drm_dp_sideband_msg_rx* %20, %struct.drm_dp_sideband_msg_reply_body* %21) #8, !dbg !15009
  store i1 %call, i1* %retval, align 1, !dbg !15010
  br label %return, !dbg !15010

sw.bb23:                                          ; preds = %if.end
  %22 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15011
  %23 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15012
  %call24 = call zeroext i1 @drm_dp_sideband_parse_query_payload_ack(%struct.drm_dp_sideband_msg_rx* %22, %struct.drm_dp_sideband_msg_reply_body* %23) #8, !dbg !15013
  store i1 %call24, i1* %retval, align 1, !dbg !15014
  br label %return, !dbg !15014

sw.bb25:                                          ; preds = %if.end
  %24 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15015
  %25 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15016
  %call26 = call zeroext i1 @drm_dp_sideband_parse_remote_dpcd_read(%struct.drm_dp_sideband_msg_rx* %24, %struct.drm_dp_sideband_msg_reply_body* %25) #8, !dbg !15017
  store i1 %call26, i1* %retval, align 1, !dbg !15018
  br label %return, !dbg !15018

sw.bb27:                                          ; preds = %if.end
  %26 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15019
  %27 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15020
  %call28 = call zeroext i1 @drm_dp_sideband_parse_remote_dpcd_write(%struct.drm_dp_sideband_msg_rx* %26, %struct.drm_dp_sideband_msg_reply_body* %27) #8, !dbg !15021
  store i1 %call28, i1* %retval, align 1, !dbg !15022
  br label %return, !dbg !15022

sw.bb29:                                          ; preds = %if.end
  %28 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15023
  %29 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15024
  %call30 = call zeroext i1 @drm_dp_sideband_parse_remote_i2c_read_ack(%struct.drm_dp_sideband_msg_rx* %28, %struct.drm_dp_sideband_msg_reply_body* %29) #8, !dbg !15025
  store i1 %call30, i1* %retval, align 1, !dbg !15026
  br label %return, !dbg !15026

sw.bb31:                                          ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !15027
  br label %return, !dbg !15027

sw.bb32:                                          ; preds = %if.end
  %30 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15028
  %31 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15029
  %call33 = call zeroext i1 @drm_dp_sideband_parse_enum_path_resources_ack(%struct.drm_dp_sideband_msg_rx* %30, %struct.drm_dp_sideband_msg_reply_body* %31) #8, !dbg !15030
  store i1 %call33, i1* %retval, align 1, !dbg !15031
  br label %return, !dbg !15031

sw.bb34:                                          ; preds = %if.end
  %32 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15032
  %33 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15033
  %call35 = call zeroext i1 @drm_dp_sideband_parse_allocate_payload_ack(%struct.drm_dp_sideband_msg_rx* %32, %struct.drm_dp_sideband_msg_reply_body* %33) #8, !dbg !15034
  store i1 %call35, i1* %retval, align 1, !dbg !15035
  br label %return, !dbg !15035

sw.bb36:                                          ; preds = %if.end, %if.end
  %34 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15036
  %35 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15037
  %call37 = call zeroext i1 @drm_dp_sideband_parse_power_updown_phy_ack(%struct.drm_dp_sideband_msg_rx* %34, %struct.drm_dp_sideband_msg_reply_body* %35) #8, !dbg !15038
  store i1 %call37, i1* %retval, align 1, !dbg !15039
  br label %return, !dbg !15039

sw.bb38:                                          ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !15040
  br label %return, !dbg !15040

sw.bb39:                                          ; preds = %if.end
  %36 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15041
  %37 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15042
  %call40 = call zeroext i1 @drm_dp_sideband_parse_query_stream_enc_status(%struct.drm_dp_sideband_msg_rx* %36, %struct.drm_dp_sideband_msg_reply_body* %37) #8, !dbg !15043
  store i1 %call40, i1* %retval, align 1, !dbg !15044
  br label %return, !dbg !15044

sw.default:                                       ; preds = %if.end
  %38 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15045
  %req_type41 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %38, i32 0, i32 1, !dbg !15045
  %39 = load i8, i8* %req_type41, align 1, !dbg !15045
  %conv42 = zext i8 %39 to i32, !dbg !15045
  %40 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %msg.addr, align 8, !dbg !15045
  %req_type43 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %40, i32 0, i32 1, !dbg !15045
  %41 = load i8, i8* %req_type43, align 1, !dbg !15045
  %call44 = call i8* @drm_dp_mst_req_type_str(i8 zeroext %41) #8, !dbg !15045
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.118, i64 0, i64 0), i32 %conv42, i8* %call44) #8, !dbg !15045
  store i1 false, i1* %retval, align 1, !dbg !15046
  br label %return, !dbg !15046

return:                                           ; preds = %sw.default, %sw.bb39, %sw.bb38, %sw.bb36, %sw.bb34, %sw.bb32, %sw.bb31, %sw.bb29, %sw.bb27, %sw.bb25, %sw.bb23, %sw.bb, %if.then
  %42 = load i1, i1* %retval, align 1, !dbg !15047
  ret i1 %42, !dbg !15047
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @drm_dp_mst_nak_reason_str(i8 zeroext %nak_reason) #0 !dbg !6253 {
entry:
  %retval = alloca i8*, align 8
  %nak_reason.addr = alloca i8, align 1
  store i8 %nak_reason, i8* %nak_reason.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %nak_reason.addr, metadata !15048, metadata !DIExpression()), !dbg !15049
  %0 = load i8, i8* %nak_reason.addr, align 1, !dbg !15050
  %conv = zext i8 %0 to i64, !dbg !15050
  %cmp = icmp uge i64 %conv, 11, !dbg !15052
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !15053

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* %nak_reason.addr, align 1, !dbg !15054
  %idxprom = zext i8 %1 to i64, !dbg !15055
  %arrayidx = getelementptr [11 x i8*], [11 x i8*]* @drm_dp_mst_nak_reason_str.nak_reason_str, i64 0, i64 %idxprom, !dbg !15055
  %2 = load i8*, i8** %arrayidx, align 8, !dbg !15055
  %tobool = icmp ne i8* %2, null, !dbg !15055
  br i1 %tobool, label %if.end, label %if.then, !dbg !15056

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.85, i64 0, i64 0), i8** %retval, align 8, !dbg !15057
  br label %return, !dbg !15057

if.end:                                           ; preds = %lor.lhs.false
  %3 = load i8, i8* %nak_reason.addr, align 1, !dbg !15058
  %idxprom2 = zext i8 %3 to i64, !dbg !15059
  %arrayidx3 = getelementptr [11 x i8*], [11 x i8*]* @drm_dp_mst_nak_reason_str.nak_reason_str, i64 0, i64 %idxprom2, !dbg !15059
  %4 = load i8*, i8** %arrayidx3, align 8, !dbg !15059
  store i8* %4, i8** %retval, align 8, !dbg !15060
  br label %return, !dbg !15060

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !15061
  ret i8* %5, !dbg !15061
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_decode_sideband_msg_hdr(%struct.drm_dp_sideband_msg_hdr* %hdr, i8* %buf, i32 %buflen, i8* %hdrlen) #0 !dbg !15062 {
entry:
  %retval = alloca i1, align 1
  %hdr.addr = alloca %struct.drm_dp_sideband_msg_hdr*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  %hdrlen.addr = alloca i8*, align 8
  %crc4 = alloca i8, align 1
  %len = alloca i8, align 1
  %i = alloca i32, align 4
  %idx = alloca i8, align 1
  store %struct.drm_dp_sideband_msg_hdr* %hdr, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr** %hdr.addr, metadata !15065, metadata !DIExpression()), !dbg !15066
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15067, metadata !DIExpression()), !dbg !15068
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !15069, metadata !DIExpression()), !dbg !15070
  store i8* %hdrlen, i8** %hdrlen.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %hdrlen.addr, metadata !15071, metadata !DIExpression()), !dbg !15072
  call void @llvm.dbg.declare(metadata i8* %crc4, metadata !15073, metadata !DIExpression()), !dbg !15074
  call void @llvm.dbg.declare(metadata i8* %len, metadata !15075, metadata !DIExpression()), !dbg !15076
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15077, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.declare(metadata i8* %idx, metadata !15079, metadata !DIExpression()), !dbg !15080
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !15081
  %arrayidx = getelementptr i8, i8* %0, i64 0, !dbg !15081
  %1 = load i8, i8* %arrayidx, align 1, !dbg !15081
  %conv = zext i8 %1 to i32, !dbg !15081
  %cmp = icmp eq i32 %conv, 0, !dbg !15083
  br i1 %cmp, label %if.then, label %if.end, !dbg !15084

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !15085
  br label %return, !dbg !15085

if.end:                                           ; preds = %entry
  store i8 3, i8* %len, align 1, !dbg !15086
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !15087
  %arrayidx2 = getelementptr i8, i8* %2, i64 0, !dbg !15087
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !15087
  %conv3 = zext i8 %3 to i32, !dbg !15087
  %and = and i32 %conv3, 240, !dbg !15088
  %shr = ashr i32 %and, 4, !dbg !15089
  %div = sdiv i32 %shr, 2, !dbg !15090
  %4 = load i8, i8* %len, align 1, !dbg !15091
  %conv4 = zext i8 %4 to i32, !dbg !15091
  %add = add i32 %conv4, %div, !dbg !15091
  %conv5 = trunc i32 %add to i8, !dbg !15091
  store i8 %conv5, i8* %len, align 1, !dbg !15091
  %5 = load i8, i8* %len, align 1, !dbg !15092
  %conv6 = zext i8 %5 to i32, !dbg !15092
  %6 = load i32, i32* %buflen.addr, align 4, !dbg !15094
  %cmp7 = icmp sgt i32 %conv6, %6, !dbg !15095
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !15096

if.then9:                                         ; preds = %if.end
  store i1 false, i1* %retval, align 1, !dbg !15097
  br label %return, !dbg !15097

if.end10:                                         ; preds = %if.end
  %7 = load i8*, i8** %buf.addr, align 8, !dbg !15098
  %8 = load i8, i8* %len, align 1, !dbg !15099
  %conv11 = zext i8 %8 to i32, !dbg !15099
  %mul = mul i32 %conv11, 2, !dbg !15100
  %sub = sub i32 %mul, 1, !dbg !15101
  %conv12 = sext i32 %sub to i64, !dbg !15102
  %call = call zeroext i8 @drm_dp_msg_header_crc4(i8* %7, i64 %conv12) #8, !dbg !15103
  store i8 %call, i8* %crc4, align 1, !dbg !15104
  %9 = load i8, i8* %crc4, align 1, !dbg !15105
  %conv13 = zext i8 %9 to i32, !dbg !15105
  %and14 = and i32 %conv13, 15, !dbg !15107
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !15108
  %11 = load i8, i8* %len, align 1, !dbg !15109
  %conv15 = zext i8 %11 to i32, !dbg !15109
  %sub16 = sub i32 %conv15, 1, !dbg !15110
  %idxprom = sext i32 %sub16 to i64, !dbg !15108
  %arrayidx17 = getelementptr i8, i8* %10, i64 %idxprom, !dbg !15108
  %12 = load i8, i8* %arrayidx17, align 1, !dbg !15108
  %conv18 = zext i8 %12 to i32, !dbg !15108
  %and19 = and i32 %conv18, 15, !dbg !15111
  %cmp20 = icmp ne i32 %and14, %and19, !dbg !15112
  br i1 %cmp20, label %if.then22, label %if.end29, !dbg !15113

if.then22:                                        ; preds = %if.end10
  %13 = load i8, i8* %crc4, align 1, !dbg !15114
  %conv23 = zext i8 %13 to i32, !dbg !15114
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !15114
  %15 = load i8, i8* %len, align 1, !dbg !15114
  %conv24 = zext i8 %15 to i32, !dbg !15114
  %sub25 = sub i32 %conv24, 1, !dbg !15114
  %idxprom26 = sext i32 %sub25 to i64, !dbg !15114
  %arrayidx27 = getelementptr i8, i8* %14, i64 %idxprom26, !dbg !15114
  %16 = load i8, i8* %arrayidx27, align 1, !dbg !15114
  %conv28 = zext i8 %16 to i32, !dbg !15114
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.115, i64 0, i64 0), i32 %conv23, i32 %conv28) #8, !dbg !15114
  store i1 false, i1* %retval, align 1, !dbg !15116
  br label %return, !dbg !15116

if.end29:                                         ; preds = %if.end10
  %17 = load i8*, i8** %buf.addr, align 8, !dbg !15117
  %arrayidx30 = getelementptr i8, i8* %17, i64 0, !dbg !15117
  %18 = load i8, i8* %arrayidx30, align 1, !dbg !15117
  %conv31 = zext i8 %18 to i32, !dbg !15117
  %and32 = and i32 %conv31, 240, !dbg !15118
  %shr33 = ashr i32 %and32, 4, !dbg !15119
  %conv34 = trunc i32 %shr33 to i8, !dbg !15120
  %19 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15121
  %lct = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %19, i32 0, i32 0, !dbg !15122
  store i8 %conv34, i8* %lct, align 1, !dbg !15123
  %20 = load i8*, i8** %buf.addr, align 8, !dbg !15124
  %arrayidx35 = getelementptr i8, i8* %20, i64 0, !dbg !15124
  %21 = load i8, i8* %arrayidx35, align 1, !dbg !15124
  %conv36 = zext i8 %21 to i32, !dbg !15124
  %and37 = and i32 %conv36, 15, !dbg !15125
  %conv38 = trunc i32 %and37 to i8, !dbg !15126
  %22 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15127
  %lcr = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %22, i32 0, i32 1, !dbg !15128
  store i8 %conv38, i8* %lcr, align 1, !dbg !15129
  store i8 1, i8* %idx, align 1, !dbg !15130
  store i32 0, i32* %i, align 4, !dbg !15131
  br label %for.cond, !dbg !15133

for.cond:                                         ; preds = %for.inc, %if.end29
  %23 = load i32, i32* %i, align 4, !dbg !15134
  %24 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15136
  %lct39 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %24, i32 0, i32 0, !dbg !15137
  %25 = load i8, i8* %lct39, align 1, !dbg !15137
  %conv40 = zext i8 %25 to i32, !dbg !15136
  %div41 = sdiv i32 %conv40, 2, !dbg !15138
  %cmp42 = icmp slt i32 %23, %div41, !dbg !15139
  br i1 %cmp42, label %for.body, label %for.end, !dbg !15140

for.body:                                         ; preds = %for.cond
  %26 = load i8*, i8** %buf.addr, align 8, !dbg !15141
  %27 = load i8, i8* %idx, align 1, !dbg !15142
  %inc = add i8 %27, 1, !dbg !15142
  store i8 %inc, i8* %idx, align 1, !dbg !15142
  %idxprom44 = zext i8 %27 to i64, !dbg !15141
  %arrayidx45 = getelementptr i8, i8* %26, i64 %idxprom44, !dbg !15141
  %28 = load i8, i8* %arrayidx45, align 1, !dbg !15141
  %29 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15143
  %rad = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %29, i32 0, i32 2, !dbg !15144
  %30 = load i32, i32* %i, align 4, !dbg !15145
  %idxprom46 = sext i32 %30 to i64, !dbg !15143
  %arrayidx47 = getelementptr [8 x i8], [8 x i8]* %rad, i64 0, i64 %idxprom46, !dbg !15143
  store i8 %28, i8* %arrayidx47, align 1, !dbg !15146
  br label %for.inc, !dbg !15143

for.inc:                                          ; preds = %for.body
  %31 = load i32, i32* %i, align 4, !dbg !15147
  %inc48 = add i32 %31, 1, !dbg !15147
  store i32 %inc48, i32* %i, align 4, !dbg !15147
  br label %for.cond, !dbg !15148, !llvm.loop !15149

for.end:                                          ; preds = %for.cond
  %32 = load i8*, i8** %buf.addr, align 8, !dbg !15151
  %33 = load i8, i8* %idx, align 1, !dbg !15152
  %idxprom49 = zext i8 %33 to i64, !dbg !15151
  %arrayidx50 = getelementptr i8, i8* %32, i64 %idxprom49, !dbg !15151
  %34 = load i8, i8* %arrayidx50, align 1, !dbg !15151
  %conv51 = zext i8 %34 to i32, !dbg !15151
  %shr52 = ashr i32 %conv51, 7, !dbg !15153
  %and53 = and i32 %shr52, 1, !dbg !15154
  %tobool = icmp ne i32 %and53, 0, !dbg !15155
  %35 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15156
  %broadcast = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %35, i32 0, i32 3, !dbg !15157
  %frombool = zext i1 %tobool to i8, !dbg !15158
  store i8 %frombool, i8* %broadcast, align 1, !dbg !15158
  %36 = load i8*, i8** %buf.addr, align 8, !dbg !15159
  %37 = load i8, i8* %idx, align 1, !dbg !15160
  %idxprom54 = zext i8 %37 to i64, !dbg !15159
  %arrayidx55 = getelementptr i8, i8* %36, i64 %idxprom54, !dbg !15159
  %38 = load i8, i8* %arrayidx55, align 1, !dbg !15159
  %conv56 = zext i8 %38 to i32, !dbg !15159
  %shr57 = ashr i32 %conv56, 6, !dbg !15161
  %and58 = and i32 %shr57, 1, !dbg !15162
  %tobool59 = icmp ne i32 %and58, 0, !dbg !15163
  %39 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15164
  %path_msg = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %39, i32 0, i32 4, !dbg !15165
  %frombool60 = zext i1 %tobool59 to i8, !dbg !15166
  store i8 %frombool60, i8* %path_msg, align 1, !dbg !15166
  %40 = load i8*, i8** %buf.addr, align 8, !dbg !15167
  %41 = load i8, i8* %idx, align 1, !dbg !15168
  %idxprom61 = zext i8 %41 to i64, !dbg !15167
  %arrayidx62 = getelementptr i8, i8* %40, i64 %idxprom61, !dbg !15167
  %42 = load i8, i8* %arrayidx62, align 1, !dbg !15167
  %conv63 = zext i8 %42 to i32, !dbg !15167
  %and64 = and i32 %conv63, 63, !dbg !15169
  %conv65 = trunc i32 %and64 to i8, !dbg !15167
  %43 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15170
  %msg_len = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %43, i32 0, i32 5, !dbg !15171
  store i8 %conv65, i8* %msg_len, align 1, !dbg !15172
  %44 = load i8, i8* %idx, align 1, !dbg !15173
  %inc66 = add i8 %44, 1, !dbg !15173
  store i8 %inc66, i8* %idx, align 1, !dbg !15173
  %45 = load i8*, i8** %buf.addr, align 8, !dbg !15174
  %46 = load i8, i8* %idx, align 1, !dbg !15175
  %idxprom67 = zext i8 %46 to i64, !dbg !15174
  %arrayidx68 = getelementptr i8, i8* %45, i64 %idxprom67, !dbg !15174
  %47 = load i8, i8* %arrayidx68, align 1, !dbg !15174
  %conv69 = zext i8 %47 to i32, !dbg !15174
  %shr70 = ashr i32 %conv69, 7, !dbg !15176
  %and71 = and i32 %shr70, 1, !dbg !15177
  %tobool72 = icmp ne i32 %and71, 0, !dbg !15178
  %48 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15179
  %somt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %48, i32 0, i32 6, !dbg !15180
  %frombool73 = zext i1 %tobool72 to i8, !dbg !15181
  store i8 %frombool73, i8* %somt, align 1, !dbg !15181
  %49 = load i8*, i8** %buf.addr, align 8, !dbg !15182
  %50 = load i8, i8* %idx, align 1, !dbg !15183
  %idxprom74 = zext i8 %50 to i64, !dbg !15182
  %arrayidx75 = getelementptr i8, i8* %49, i64 %idxprom74, !dbg !15182
  %51 = load i8, i8* %arrayidx75, align 1, !dbg !15182
  %conv76 = zext i8 %51 to i32, !dbg !15182
  %shr77 = ashr i32 %conv76, 6, !dbg !15184
  %and78 = and i32 %shr77, 1, !dbg !15185
  %tobool79 = icmp ne i32 %and78, 0, !dbg !15186
  %52 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15187
  %eomt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %52, i32 0, i32 7, !dbg !15188
  %frombool80 = zext i1 %tobool79 to i8, !dbg !15189
  store i8 %frombool80, i8* %eomt, align 1, !dbg !15189
  %53 = load i8*, i8** %buf.addr, align 8, !dbg !15190
  %54 = load i8, i8* %idx, align 1, !dbg !15191
  %idxprom81 = zext i8 %54 to i64, !dbg !15190
  %arrayidx82 = getelementptr i8, i8* %53, i64 %idxprom81, !dbg !15190
  %55 = load i8, i8* %arrayidx82, align 1, !dbg !15190
  %conv83 = zext i8 %55 to i32, !dbg !15190
  %shr84 = ashr i32 %conv83, 4, !dbg !15192
  %and85 = and i32 %shr84, 1, !dbg !15193
  %tobool86 = icmp ne i32 %and85, 0, !dbg !15194
  %56 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15195
  %seqno = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %56, i32 0, i32 8, !dbg !15196
  %frombool87 = zext i1 %tobool86 to i8, !dbg !15197
  store i8 %frombool87, i8* %seqno, align 1, !dbg !15197
  %57 = load i8, i8* %idx, align 1, !dbg !15198
  %inc88 = add i8 %57, 1, !dbg !15198
  store i8 %inc88, i8* %idx, align 1, !dbg !15198
  %58 = load i8, i8* %idx, align 1, !dbg !15199
  %59 = load i8*, i8** %hdrlen.addr, align 8, !dbg !15200
  store i8 %58, i8* %59, align 1, !dbg !15201
  store i1 true, i1* %retval, align 1, !dbg !15202
  br label %return, !dbg !15202

return:                                           ; preds = %for.end, %if.then22, %if.then9, %if.then
  %60 = load i1, i1* %retval, align 1, !dbg !15203
  ret i1 %60, !dbg !15203
}

; Function Attrs: noredzone
declare dso_local void @print_hex_dump(i8*, i8*, i32, i32, i32, i8*, i64, i1 zeroext) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_branch* @drm_dp_get_mst_branch_device(%struct.drm_dp_mst_topology_mgr* %mgr, i8 zeroext %lct, i8* %rad) #0 !dbg !15204 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %lct.addr = alloca i8, align 1
  %rad.addr = alloca i8*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %shift = alloca i32, align 4
  %port_num = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !15207, metadata !DIExpression()), !dbg !15208
  store i8 %lct, i8* %lct.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lct.addr, metadata !15209, metadata !DIExpression()), !dbg !15210
  store i8* %rad, i8** %rad.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rad.addr, metadata !15211, metadata !DIExpression()), !dbg !15212
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !15213, metadata !DIExpression()), !dbg !15214
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !15215, metadata !DIExpression()), !dbg !15216
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15217, metadata !DIExpression()), !dbg !15218
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15219, metadata !DIExpression()), !dbg !15220
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !15221
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !15222
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !15223
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !15224
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 12, !dbg !15225
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !15225
  store %struct.drm_dp_mst_branch* %2, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15226
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15227
  %tobool = icmp ne %struct.drm_dp_mst_branch* %3, null, !dbg !15227
  br i1 %tobool, label %if.end, label %if.then, !dbg !15229

if.then:                                          ; preds = %entry
  br label %out, !dbg !15230

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15231
  br label %for.cond, !dbg !15233

for.cond:                                         ; preds = %for.inc30, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !15234
  %5 = load i8, i8* %lct.addr, align 1, !dbg !15236
  %conv = zext i8 %5 to i32, !dbg !15236
  %sub = sub i32 %conv, 1, !dbg !15237
  %cmp = icmp slt i32 %4, %sub, !dbg !15238
  br i1 %cmp, label %for.body, label %for.end31, !dbg !15239

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !15240, metadata !DIExpression()), !dbg !15242
  %6 = load i32, i32* %i, align 4, !dbg !15243
  %rem = srem i32 %6, 2, !dbg !15244
  %tobool2 = icmp ne i32 %rem, 0, !dbg !15245
  %7 = zext i1 %tobool2 to i64, !dbg !15245
  %cond = select i1 %tobool2, i32 0, i32 4, !dbg !15245
  store i32 %cond, i32* %shift, align 4, !dbg !15242
  call void @llvm.dbg.declare(metadata i32* %port_num, metadata !15246, metadata !DIExpression()), !dbg !15247
  %8 = load i8*, i8** %rad.addr, align 8, !dbg !15248
  %9 = load i32, i32* %i, align 4, !dbg !15249
  %div = sdiv i32 %9, 2, !dbg !15250
  %idxprom = sext i32 %div to i64, !dbg !15248
  %arrayidx = getelementptr i8, i8* %8, i64 %idxprom, !dbg !15248
  %10 = load i8, i8* %arrayidx, align 1, !dbg !15248
  %conv3 = zext i8 %10 to i32, !dbg !15248
  %11 = load i32, i32* %shift, align 4, !dbg !15251
  %shr = ashr i32 %conv3, %11, !dbg !15252
  %and = and i32 %shr, 15, !dbg !15253
  store i32 %and, i32* %port_num, align 4, !dbg !15247
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15254, metadata !DIExpression()), !dbg !15257
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15257
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %12, i32 0, i32 6, !dbg !15257
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !15257
  %13 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15257
  %14 = bitcast %struct.list_head* %13 to i8*, !dbg !15257
  store i8* %14, i8** %__mptr, align 8, !dbg !15257
  br label %do.body, !dbg !15257

do.body:                                          ; preds = %for.body
  br label %do.end, !dbg !15258

do.end:                                           ; preds = %do.body
  %15 = load i8*, i8** %__mptr, align 8, !dbg !15257
  %add.ptr = getelementptr i8, i8* %15, i64 -24, !dbg !15257
  %16 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !15257
  store %struct.drm_dp_mst_port* %16, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !15258
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !15257
  store %struct.drm_dp_mst_port* %17, %struct.drm_dp_mst_port** %port, align 8, !dbg !15260
  br label %for.cond4, !dbg !15260

for.cond4:                                        ; preds = %do.end27, %do.end
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !15261
  %next5 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %18, i32 0, i32 12, !dbg !15261
  %19 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15261
  %ports6 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %19, i32 0, i32 6, !dbg !15261
  %cmp7 = icmp eq %struct.list_head* %next5, %ports6, !dbg !15261
  %lnot = xor i1 %cmp7, true, !dbg !15261
  br i1 %lnot, label %for.body9, label %for.end, !dbg !15260

for.body9:                                        ; preds = %for.cond4
  %20 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !15263
  %port_num10 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %20, i32 0, i32 2, !dbg !15266
  %21 = load i8, i8* %port_num10, align 8, !dbg !15266
  %conv11 = zext i8 %21 to i32, !dbg !15263
  %22 = load i32, i32* %port_num, align 4, !dbg !15267
  %cmp12 = icmp eq i32 %conv11, %22, !dbg !15268
  br i1 %cmp12, label %if.then14, label %if.end22, !dbg !15269

if.then14:                                        ; preds = %for.body9
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !15270
  %mstb15 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %23, i32 0, i32 13, !dbg !15272
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb15, align 8, !dbg !15272
  store %struct.drm_dp_mst_branch* %24, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15273
  %25 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15274
  %tobool16 = icmp ne %struct.drm_dp_mst_branch* %25, null, !dbg !15274
  br i1 %tobool16, label %if.end21, label %if.then17, !dbg !15276

if.then17:                                        ; preds = %if.then14
  %26 = load i8, i8* %lct.addr, align 1, !dbg !15277
  %conv18 = zext i8 %26 to i32, !dbg !15277
  %27 = load i8*, i8** %rad.addr, align 8, !dbg !15277
  %arrayidx19 = getelementptr i8, i8* %27, i64 0, !dbg !15277
  %28 = load i8, i8* %arrayidx19, align 1, !dbg !15277
  %conv20 = zext i8 %28 to i32, !dbg !15277
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.116, i64 0, i64 0), i32 %conv18, i32 %conv20) #8, !dbg !15277
  br label %out, !dbg !15279

if.end21:                                         ; preds = %if.then14
  br label %for.end, !dbg !15280

if.end22:                                         ; preds = %for.body9
  br label %for.inc, !dbg !15281

for.inc:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !15282, metadata !DIExpression()), !dbg !15284
  %29 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !15284
  %next24 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %29, i32 0, i32 12, !dbg !15284
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %next24, i32 0, i32 0, !dbg !15284
  %30 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !15284
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !15284
  store i8* %31, i8** %__mptr23, align 8, !dbg !15284
  br label %do.body26, !dbg !15284

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !15285

do.end27:                                         ; preds = %do.body26
  %32 = load i8*, i8** %__mptr23, align 8, !dbg !15284
  %add.ptr29 = getelementptr i8, i8* %32, i64 -24, !dbg !15284
  %33 = bitcast i8* %add.ptr29 to %struct.drm_dp_mst_port*, !dbg !15284
  store %struct.drm_dp_mst_port* %33, %struct.drm_dp_mst_port** %tmp28, align 8, !dbg !15285
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp28, align 8, !dbg !15284
  store %struct.drm_dp_mst_port* %34, %struct.drm_dp_mst_port** %port, align 8, !dbg !15261
  br label %for.cond4, !dbg !15261, !llvm.loop !15287

for.end:                                          ; preds = %if.end21, %for.cond4
  br label %for.inc30, !dbg !15289

for.inc30:                                        ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !15290
  %inc = add i32 %35, 1, !dbg !15290
  store i32 %inc, i32* %i, align 4, !dbg !15290
  br label %for.cond, !dbg !15291, !llvm.loop !15292

for.end31:                                        ; preds = %for.cond
  %36 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15294
  %call = call i32 @drm_dp_mst_topology_try_get_mstb(%struct.drm_dp_mst_branch* %36) #8, !dbg !15295
  store i32 %call, i32* %ret, align 4, !dbg !15296
  %37 = load i32, i32* %ret, align 4, !dbg !15297
  %tobool32 = icmp ne i32 %37, 0, !dbg !15297
  br i1 %tobool32, label %if.end34, label %if.then33, !dbg !15299

if.then33:                                        ; preds = %for.end31
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15300
  br label %if.end34, !dbg !15301

if.end34:                                         ; preds = %if.then33, %for.end31
  br label %out, !dbg !15297

out:                                              ; preds = %if.end34, %if.then17, %if.then
  call void @llvm.dbg.label(metadata !15302), !dbg !15303
  %38 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !15304
  %lock35 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %38, i32 0, i32 9, !dbg !15305
  call void @mutex_unlock(%struct.mutex* %lock35) #8, !dbg !15306
  %39 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !15307
  ret %struct.drm_dp_mst_branch* %39, !dbg !15308
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_sideband_msg_set_header(%struct.drm_dp_sideband_msg_rx* %msg, %struct.drm_dp_sideband_msg_hdr* %hdr, i8 zeroext %hdrlen) #0 !dbg !15309 {
entry:
  %retval = alloca i32, align 4
  %msg.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %hdr.addr = alloca %struct.drm_dp_sideband_msg_hdr*, align 8
  %hdrlen.addr = alloca i8, align 1
  store %struct.drm_dp_sideband_msg_rx* %msg, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %msg.addr, metadata !15312, metadata !DIExpression()), !dbg !15313
  store %struct.drm_dp_sideband_msg_hdr* %hdr, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr** %hdr.addr, metadata !15314, metadata !DIExpression()), !dbg !15315
  store i8 %hdrlen, i8* %hdrlen.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hdrlen.addr, metadata !15316, metadata !DIExpression()), !dbg !15317
  %0 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15318
  %somt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %0, i32 0, i32 6, !dbg !15320
  %1 = load i8, i8* %somt, align 1, !dbg !15320
  %tobool = trunc i8 %1 to i1, !dbg !15320
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !15321

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15322
  %have_somt = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %2, i32 0, i32 6, !dbg !15323
  %3 = load i8, i8* %have_somt, align 1, !dbg !15323
  %tobool1 = trunc i8 %3 to i1, !dbg !15323
  br i1 %tobool1, label %if.end, label %if.then, !dbg !15324

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !15325
  br label %return, !dbg !15325

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15326
  %curchunk_idx = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %4, i32 0, i32 3, !dbg !15327
  store i8 0, i8* %curchunk_idx, align 1, !dbg !15328
  %5 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15329
  %msg_len = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %5, i32 0, i32 5, !dbg !15330
  %6 = load i8, i8* %msg_len, align 1, !dbg !15330
  %7 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15331
  %curchunk_len = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %7, i32 0, i32 2, !dbg !15332
  store i8 %6, i8* %curchunk_len, align 1, !dbg !15333
  %8 = load i8, i8* %hdrlen.addr, align 1, !dbg !15334
  %9 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15335
  %curchunk_hdrlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %9, i32 0, i32 4, !dbg !15336
  store i8 %8, i8* %curchunk_hdrlen, align 1, !dbg !15337
  %10 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15338
  %somt2 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %10, i32 0, i32 6, !dbg !15340
  %11 = load i8, i8* %somt2, align 1, !dbg !15340
  %tobool3 = trunc i8 %11 to i1, !dbg !15340
  br i1 %tobool3, label %land.lhs.true4, label %if.end8, !dbg !15341

land.lhs.true4:                                   ; preds = %if.end
  %12 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15342
  %have_somt5 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %12, i32 0, i32 6, !dbg !15343
  %13 = load i8, i8* %have_somt5, align 1, !dbg !15343
  %tobool6 = trunc i8 %13 to i1, !dbg !15343
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !15344

if.then7:                                         ; preds = %land.lhs.true4
  store i32 0, i32* %retval, align 4, !dbg !15345
  br label %return, !dbg !15345

if.end8:                                          ; preds = %land.lhs.true4, %if.end
  %14 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15346
  %somt9 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %14, i32 0, i32 6, !dbg !15348
  %15 = load i8, i8* %somt9, align 1, !dbg !15348
  %tobool10 = trunc i8 %15 to i1, !dbg !15348
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !15349

if.then11:                                        ; preds = %if.end8
  %16 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15350
  %initial_hdr = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %16, i32 0, i32 8, !dbg !15352
  %17 = bitcast %struct.drm_dp_sideband_msg_hdr* %initial_hdr to i8*, !dbg !15353
  %18 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15354
  %19 = bitcast %struct.drm_dp_sideband_msg_hdr* %18 to i8*, !dbg !15353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %17, i8* align 1 %19, i64 16, i1 false), !dbg !15353
  %20 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15355
  %have_somt12 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %20, i32 0, i32 6, !dbg !15356
  store i8 1, i8* %have_somt12, align 1, !dbg !15357
  br label %if.end13, !dbg !15358

if.end13:                                         ; preds = %if.then11, %if.end8
  %21 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr.addr, align 8, !dbg !15359
  %eomt = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %21, i32 0, i32 7, !dbg !15361
  %22 = load i8, i8* %eomt, align 1, !dbg !15361
  %tobool14 = trunc i8 %22 to i1, !dbg !15361
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !15362

if.then15:                                        ; preds = %if.end13
  %23 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15363
  %have_eomt = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %23, i32 0, i32 7, !dbg !15364
  store i8 1, i8* %have_eomt, align 1, !dbg !15365
  br label %if.end16, !dbg !15363

if.end16:                                         ; preds = %if.then15, %if.end13
  store i32 1, i32* %retval, align 4, !dbg !15366
  br label %return, !dbg !15366

return:                                           ; preds = %if.end16, %if.then7, %if.then
  %24 = load i32, i32* %retval, align 4, !dbg !15367
  ret i32 %24, !dbg !15367
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_append_payload(%struct.drm_dp_sideband_msg_rx* %msg, i8* %replybuf, i8 zeroext %replybuflen) #0 !dbg !15368 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %replybuf.addr = alloca i8*, align 8
  %replybuflen.addr = alloca i8, align 1
  %crc4 = alloca i8, align 1
  store %struct.drm_dp_sideband_msg_rx* %msg, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %msg.addr, metadata !15371, metadata !DIExpression()), !dbg !15372
  store i8* %replybuf, i8** %replybuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %replybuf.addr, metadata !15373, metadata !DIExpression()), !dbg !15374
  store i8 %replybuflen, i8* %replybuflen.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %replybuflen.addr, metadata !15375, metadata !DIExpression()), !dbg !15376
  call void @llvm.dbg.declare(metadata i8* %crc4, metadata !15377, metadata !DIExpression()), !dbg !15378
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15379
  %chunk = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 0, !dbg !15380
  %1 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15381
  %curchunk_idx = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %1, i32 0, i32 3, !dbg !15382
  %2 = load i8, i8* %curchunk_idx, align 1, !dbg !15382
  %idxprom = zext i8 %2 to i64, !dbg !15379
  %arrayidx = getelementptr [48 x i8], [48 x i8]* %chunk, i64 0, i64 %idxprom, !dbg !15379
  %3 = load i8*, i8** %replybuf.addr, align 8, !dbg !15383
  %4 = load i8, i8* %replybuflen.addr, align 1, !dbg !15384
  %conv = zext i8 %4 to i64, !dbg !15384
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx, i8* align 1 %3, i64 %conv, i1 false), !dbg !15385
  %5 = load i8, i8* %replybuflen.addr, align 1, !dbg !15386
  %conv1 = zext i8 %5 to i32, !dbg !15386
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15387
  %curchunk_idx2 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 3, !dbg !15388
  %7 = load i8, i8* %curchunk_idx2, align 1, !dbg !15389
  %conv3 = zext i8 %7 to i32, !dbg !15389
  %add = add i32 %conv3, %conv1, !dbg !15389
  %conv4 = trunc i32 %add to i8, !dbg !15389
  store i8 %conv4, i8* %curchunk_idx2, align 1, !dbg !15389
  %8 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15390
  %curchunk_idx5 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %8, i32 0, i32 3, !dbg !15392
  %9 = load i8, i8* %curchunk_idx5, align 1, !dbg !15392
  %conv6 = zext i8 %9 to i32, !dbg !15390
  %10 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15393
  %curchunk_len = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %10, i32 0, i32 2, !dbg !15394
  %11 = load i8, i8* %curchunk_len, align 1, !dbg !15394
  %conv7 = zext i8 %11 to i32, !dbg !15393
  %cmp = icmp sge i32 %conv6, %conv7, !dbg !15395
  br i1 %cmp, label %if.then, label %if.end44, !dbg !15396

if.then:                                          ; preds = %entry
  %12 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15397
  %chunk9 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %12, i32 0, i32 0, !dbg !15399
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %chunk9, i64 0, i64 0, !dbg !15397
  %13 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15400
  %curchunk_len10 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %13, i32 0, i32 2, !dbg !15401
  %14 = load i8, i8* %curchunk_len10, align 1, !dbg !15401
  %conv11 = zext i8 %14 to i32, !dbg !15400
  %sub = sub i32 %conv11, 1, !dbg !15402
  %conv12 = trunc i32 %sub to i8, !dbg !15400
  %call = call zeroext i8 @drm_dp_msg_data_crc4(i8* %arraydecay, i8 zeroext %conv12) #8, !dbg !15403
  store i8 %call, i8* %crc4, align 1, !dbg !15404
  %15 = load i8, i8* %crc4, align 1, !dbg !15405
  %conv13 = zext i8 %15 to i32, !dbg !15405
  %16 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15407
  %chunk14 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %16, i32 0, i32 0, !dbg !15408
  %17 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15409
  %curchunk_len15 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %17, i32 0, i32 2, !dbg !15410
  %18 = load i8, i8* %curchunk_len15, align 1, !dbg !15410
  %conv16 = zext i8 %18 to i32, !dbg !15409
  %sub17 = sub i32 %conv16, 1, !dbg !15411
  %idxprom18 = sext i32 %sub17 to i64, !dbg !15407
  %arrayidx19 = getelementptr [48 x i8], [48 x i8]* %chunk14, i64 0, i64 %idxprom18, !dbg !15407
  %19 = load i8, i8* %arrayidx19, align 1, !dbg !15407
  %conv20 = zext i8 %19 to i32, !dbg !15407
  %cmp21 = icmp ne i32 %conv13, %conv20, !dbg !15412
  br i1 %cmp21, label %if.then23, label %if.end, !dbg !15413

if.then23:                                        ; preds = %if.then
  %20 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15414
  %chunk24 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %20, i32 0, i32 0, !dbg !15415
  %arraydecay25 = getelementptr inbounds [48 x i8], [48 x i8]* %chunk24, i64 0, i64 0, !dbg !15414
  %21 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15416
  %curchunk_len26 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %21, i32 0, i32 2, !dbg !15417
  %22 = load i8, i8* %curchunk_len26, align 1, !dbg !15417
  %conv27 = zext i8 %22 to i64, !dbg !15416
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.107, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.117, i64 0, i64 0), i32 0, i32 16, i32 1, i8* %arraydecay25, i64 %conv27, i1 zeroext false) #8, !dbg !15418
  br label %if.end, !dbg !15418

if.end:                                           ; preds = %if.then23, %if.then
  %23 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15419
  %msg28 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %23, i32 0, i32 1, !dbg !15420
  %24 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15421
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %24, i32 0, i32 5, !dbg !15422
  %25 = load i8, i8* %curlen, align 1, !dbg !15422
  %idxprom29 = zext i8 %25 to i64, !dbg !15419
  %arrayidx30 = getelementptr [256 x i8], [256 x i8]* %msg28, i64 0, i64 %idxprom29, !dbg !15419
  %26 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15423
  %chunk31 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %26, i32 0, i32 0, !dbg !15424
  %arraydecay32 = getelementptr inbounds [48 x i8], [48 x i8]* %chunk31, i64 0, i64 0, !dbg !15425
  %27 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15426
  %curchunk_len33 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %27, i32 0, i32 2, !dbg !15427
  %28 = load i8, i8* %curchunk_len33, align 1, !dbg !15427
  %conv34 = zext i8 %28 to i32, !dbg !15426
  %sub35 = sub i32 %conv34, 1, !dbg !15428
  %conv36 = sext i32 %sub35 to i64, !dbg !15426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arrayidx30, i8* align 1 %arraydecay32, i64 %conv36, i1 false), !dbg !15425
  %29 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15429
  %curchunk_len37 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %29, i32 0, i32 2, !dbg !15430
  %30 = load i8, i8* %curchunk_len37, align 1, !dbg !15430
  %conv38 = zext i8 %30 to i32, !dbg !15429
  %sub39 = sub i32 %conv38, 1, !dbg !15431
  %31 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %msg.addr, align 8, !dbg !15432
  %curlen40 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %31, i32 0, i32 5, !dbg !15433
  %32 = load i8, i8* %curlen40, align 1, !dbg !15434
  %conv41 = zext i8 %32 to i32, !dbg !15434
  %add42 = add i32 %conv41, %sub39, !dbg !15434
  %conv43 = trunc i32 %add42 to i8, !dbg !15434
  store i8 %conv43, i8* %curlen40, align 1, !dbg !15434
  br label %if.end44, !dbg !15435

if.end44:                                         ; preds = %if.end, %entry
  ret i1 true, !dbg !15436
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_link_address(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !15437 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !15438, metadata !DIExpression()), !dbg !15439
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !15440, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15442, metadata !DIExpression()), !dbg !15443
  store i32 1, i32* %idx, align 4, !dbg !15443
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15444, metadata !DIExpression()), !dbg !15445
  %0 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15446
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %0, i32 0, i32 2, !dbg !15447
  %link_addr = bitcast %union.ack_replies* %u to %struct.drm_dp_link_address_ack_reply*, !dbg !15448
  %guid = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr, i32 0, i32 0, !dbg !15449
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid, i64 0, i64 0, !dbg !15450
  %1 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15451
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %1, i32 0, i32 1, !dbg !15452
  %2 = load i32, i32* %idx, align 4, !dbg !15453
  %idxprom = sext i32 %2 to i64, !dbg !15451
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !15451
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 1 %arrayidx, i64 16, i1 false), !dbg !15450
  %3 = load i32, i32* %idx, align 4, !dbg !15454
  %add = add i32 %3, 16, !dbg !15454
  store i32 %add, i32* %idx, align 4, !dbg !15454
  %4 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15455
  %msg1 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %4, i32 0, i32 1, !dbg !15456
  %5 = load i32, i32* %idx, align 4, !dbg !15457
  %idxprom2 = sext i32 %5 to i64, !dbg !15455
  %arrayidx3 = getelementptr [256 x i8], [256 x i8]* %msg1, i64 0, i64 %idxprom2, !dbg !15455
  %6 = load i8, i8* %arrayidx3, align 1, !dbg !15455
  %conv = zext i8 %6 to i32, !dbg !15455
  %and = and i32 %conv, 15, !dbg !15458
  %conv4 = trunc i32 %and to i8, !dbg !15455
  %7 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15459
  %u5 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %7, i32 0, i32 2, !dbg !15460
  %link_addr6 = bitcast %union.ack_replies* %u5 to %struct.drm_dp_link_address_ack_reply*, !dbg !15461
  %nports = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr6, i32 0, i32 1, !dbg !15462
  store i8 %conv4, i8* %nports, align 2, !dbg !15463
  %8 = load i32, i32* %idx, align 4, !dbg !15464
  %inc = add i32 %8, 1, !dbg !15464
  store i32 %inc, i32* %idx, align 4, !dbg !15464
  %9 = load i32, i32* %idx, align 4, !dbg !15465
  %10 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15467
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %10, i32 0, i32 5, !dbg !15468
  %11 = load i8, i8* %curlen, align 1, !dbg !15468
  %conv7 = zext i8 %11 to i32, !dbg !15467
  %cmp = icmp sgt i32 %9, %conv7, !dbg !15469
  br i1 %cmp, label %if.then, label %if.end, !dbg !15470

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !15471

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !15472
  br label %for.cond, !dbg !15474

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load i32, i32* %i, align 4, !dbg !15475
  %13 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15477
  %u9 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %13, i32 0, i32 2, !dbg !15478
  %link_addr10 = bitcast %union.ack_replies* %u9 to %struct.drm_dp_link_address_ack_reply*, !dbg !15479
  %nports11 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr10, i32 0, i32 1, !dbg !15480
  %14 = load i8, i8* %nports11, align 2, !dbg !15480
  %conv12 = zext i8 %14 to i32, !dbg !15477
  %cmp13 = icmp slt i32 %12, %conv12, !dbg !15481
  br i1 %cmp13, label %for.body, label %for.end, !dbg !15482

for.body:                                         ; preds = %for.cond
  %15 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15483
  %msg15 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %15, i32 0, i32 1, !dbg !15486
  %16 = load i32, i32* %idx, align 4, !dbg !15487
  %idxprom16 = sext i32 %16 to i64, !dbg !15483
  %arrayidx17 = getelementptr [256 x i8], [256 x i8]* %msg15, i64 0, i64 %idxprom16, !dbg !15483
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !15483
  %conv18 = zext i8 %17 to i32, !dbg !15483
  %and19 = and i32 %conv18, 128, !dbg !15488
  %tobool = icmp ne i32 %and19, 0, !dbg !15488
  br i1 %tobool, label %if.then20, label %if.end25, !dbg !15489

if.then20:                                        ; preds = %for.body
  %18 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15490
  %u21 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %18, i32 0, i32 2, !dbg !15491
  %link_addr22 = bitcast %union.ack_replies* %u21 to %struct.drm_dp_link_address_ack_reply*, !dbg !15492
  %ports = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr22, i32 0, i32 2, !dbg !15493
  %19 = load i32, i32* %i, align 4, !dbg !15494
  %idxprom23 = sext i32 %19 to i64, !dbg !15490
  %arrayidx24 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports, i64 0, i64 %idxprom23, !dbg !15490
  %input_port = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx24, i32 0, i32 0, !dbg !15495
  store i8 1, i8* %input_port, align 1, !dbg !15496
  br label %if.end25, !dbg !15490

if.end25:                                         ; preds = %if.then20, %for.body
  %20 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15497
  %msg26 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %20, i32 0, i32 1, !dbg !15498
  %21 = load i32, i32* %idx, align 4, !dbg !15499
  %idxprom27 = sext i32 %21 to i64, !dbg !15497
  %arrayidx28 = getelementptr [256 x i8], [256 x i8]* %msg26, i64 0, i64 %idxprom27, !dbg !15497
  %22 = load i8, i8* %arrayidx28, align 1, !dbg !15497
  %conv29 = zext i8 %22 to i32, !dbg !15497
  %shr = ashr i32 %conv29, 4, !dbg !15500
  %and30 = and i32 %shr, 7, !dbg !15501
  %conv31 = trunc i32 %and30 to i8, !dbg !15502
  %23 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15503
  %u32 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %23, i32 0, i32 2, !dbg !15504
  %link_addr33 = bitcast %union.ack_replies* %u32 to %struct.drm_dp_link_address_ack_reply*, !dbg !15505
  %ports34 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr33, i32 0, i32 2, !dbg !15506
  %24 = load i32, i32* %i, align 4, !dbg !15507
  %idxprom35 = sext i32 %24 to i64, !dbg !15503
  %arrayidx36 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports34, i64 0, i64 %idxprom35, !dbg !15503
  %peer_device_type = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx36, i32 0, i32 1, !dbg !15508
  store i8 %conv31, i8* %peer_device_type, align 1, !dbg !15509
  %25 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15510
  %msg37 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %25, i32 0, i32 1, !dbg !15511
  %26 = load i32, i32* %idx, align 4, !dbg !15512
  %idxprom38 = sext i32 %26 to i64, !dbg !15510
  %arrayidx39 = getelementptr [256 x i8], [256 x i8]* %msg37, i64 0, i64 %idxprom38, !dbg !15510
  %27 = load i8, i8* %arrayidx39, align 1, !dbg !15510
  %conv40 = zext i8 %27 to i32, !dbg !15510
  %and41 = and i32 %conv40, 15, !dbg !15513
  %conv42 = trunc i32 %and41 to i8, !dbg !15514
  %28 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15515
  %u43 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %28, i32 0, i32 2, !dbg !15516
  %link_addr44 = bitcast %union.ack_replies* %u43 to %struct.drm_dp_link_address_ack_reply*, !dbg !15517
  %ports45 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr44, i32 0, i32 2, !dbg !15518
  %29 = load i32, i32* %i, align 4, !dbg !15519
  %idxprom46 = sext i32 %29 to i64, !dbg !15515
  %arrayidx47 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports45, i64 0, i64 %idxprom46, !dbg !15515
  %port_number = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx47, i32 0, i32 2, !dbg !15520
  store i8 %conv42, i8* %port_number, align 1, !dbg !15521
  %30 = load i32, i32* %idx, align 4, !dbg !15522
  %inc48 = add i32 %30, 1, !dbg !15522
  store i32 %inc48, i32* %idx, align 4, !dbg !15522
  %31 = load i32, i32* %idx, align 4, !dbg !15523
  %32 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15525
  %curlen49 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %32, i32 0, i32 5, !dbg !15526
  %33 = load i8, i8* %curlen49, align 1, !dbg !15526
  %conv50 = zext i8 %33 to i32, !dbg !15525
  %cmp51 = icmp sgt i32 %31, %conv50, !dbg !15527
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !15528

if.then53:                                        ; preds = %if.end25
  br label %fail_len, !dbg !15529

if.end54:                                         ; preds = %if.end25
  %34 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15530
  %msg55 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %34, i32 0, i32 1, !dbg !15531
  %35 = load i32, i32* %idx, align 4, !dbg !15532
  %idxprom56 = sext i32 %35 to i64, !dbg !15530
  %arrayidx57 = getelementptr [256 x i8], [256 x i8]* %msg55, i64 0, i64 %idxprom56, !dbg !15530
  %36 = load i8, i8* %arrayidx57, align 1, !dbg !15530
  %conv58 = zext i8 %36 to i32, !dbg !15530
  %shr59 = ashr i32 %conv58, 7, !dbg !15533
  %and60 = and i32 %shr59, 1, !dbg !15534
  %tobool61 = icmp ne i32 %and60, 0, !dbg !15535
  %37 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15536
  %u62 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %37, i32 0, i32 2, !dbg !15537
  %link_addr63 = bitcast %union.ack_replies* %u62 to %struct.drm_dp_link_address_ack_reply*, !dbg !15538
  %ports64 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr63, i32 0, i32 2, !dbg !15539
  %38 = load i32, i32* %i, align 4, !dbg !15540
  %idxprom65 = sext i32 %38 to i64, !dbg !15536
  %arrayidx66 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports64, i64 0, i64 %idxprom65, !dbg !15536
  %mcs = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx66, i32 0, i32 3, !dbg !15541
  %frombool = zext i1 %tobool61 to i8, !dbg !15542
  store i8 %frombool, i8* %mcs, align 1, !dbg !15542
  %39 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15543
  %msg67 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %39, i32 0, i32 1, !dbg !15544
  %40 = load i32, i32* %idx, align 4, !dbg !15545
  %idxprom68 = sext i32 %40 to i64, !dbg !15543
  %arrayidx69 = getelementptr [256 x i8], [256 x i8]* %msg67, i64 0, i64 %idxprom68, !dbg !15543
  %41 = load i8, i8* %arrayidx69, align 1, !dbg !15543
  %conv70 = zext i8 %41 to i32, !dbg !15543
  %shr71 = ashr i32 %conv70, 6, !dbg !15546
  %and72 = and i32 %shr71, 1, !dbg !15547
  %tobool73 = icmp ne i32 %and72, 0, !dbg !15548
  %42 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15549
  %u74 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %42, i32 0, i32 2, !dbg !15550
  %link_addr75 = bitcast %union.ack_replies* %u74 to %struct.drm_dp_link_address_ack_reply*, !dbg !15551
  %ports76 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr75, i32 0, i32 2, !dbg !15552
  %43 = load i32, i32* %i, align 4, !dbg !15553
  %idxprom77 = sext i32 %43 to i64, !dbg !15549
  %arrayidx78 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports76, i64 0, i64 %idxprom77, !dbg !15549
  %ddps = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx78, i32 0, i32 4, !dbg !15554
  %frombool79 = zext i1 %tobool73 to i8, !dbg !15555
  store i8 %frombool79, i8* %ddps, align 1, !dbg !15555
  %44 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15556
  %u80 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %44, i32 0, i32 2, !dbg !15558
  %link_addr81 = bitcast %union.ack_replies* %u80 to %struct.drm_dp_link_address_ack_reply*, !dbg !15559
  %ports82 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr81, i32 0, i32 2, !dbg !15560
  %45 = load i32, i32* %i, align 4, !dbg !15561
  %idxprom83 = sext i32 %45 to i64, !dbg !15556
  %arrayidx84 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports82, i64 0, i64 %idxprom83, !dbg !15556
  %input_port85 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx84, i32 0, i32 0, !dbg !15562
  %46 = load i8, i8* %input_port85, align 1, !dbg !15562
  %tobool86 = trunc i8 %46 to i1, !dbg !15562
  %conv87 = zext i1 %tobool86 to i32, !dbg !15556
  %cmp88 = icmp eq i32 %conv87, 0, !dbg !15563
  br i1 %cmp88, label %if.then90, label %if.end104, !dbg !15564

if.then90:                                        ; preds = %if.end54
  %47 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15565
  %msg91 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %47, i32 0, i32 1, !dbg !15566
  %48 = load i32, i32* %idx, align 4, !dbg !15567
  %idxprom92 = sext i32 %48 to i64, !dbg !15565
  %arrayidx93 = getelementptr [256 x i8], [256 x i8]* %msg91, i64 0, i64 %idxprom92, !dbg !15565
  %49 = load i8, i8* %arrayidx93, align 1, !dbg !15565
  %conv94 = zext i8 %49 to i32, !dbg !15565
  %shr95 = ashr i32 %conv94, 5, !dbg !15568
  %and96 = and i32 %shr95, 1, !dbg !15569
  %tobool97 = icmp ne i32 %and96, 0, !dbg !15570
  %50 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15571
  %u98 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %50, i32 0, i32 2, !dbg !15572
  %link_addr99 = bitcast %union.ack_replies* %u98 to %struct.drm_dp_link_address_ack_reply*, !dbg !15573
  %ports100 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr99, i32 0, i32 2, !dbg !15574
  %51 = load i32, i32* %i, align 4, !dbg !15575
  %idxprom101 = sext i32 %51 to i64, !dbg !15571
  %arrayidx102 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports100, i64 0, i64 %idxprom101, !dbg !15571
  %legacy_device_plug_status = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx102, i32 0, i32 5, !dbg !15576
  %frombool103 = zext i1 %tobool97 to i8, !dbg !15577
  store i8 %frombool103, i8* %legacy_device_plug_status, align 1, !dbg !15577
  br label %if.end104, !dbg !15571

if.end104:                                        ; preds = %if.then90, %if.end54
  %52 = load i32, i32* %idx, align 4, !dbg !15578
  %inc105 = add i32 %52, 1, !dbg !15578
  store i32 %inc105, i32* %idx, align 4, !dbg !15578
  %53 = load i32, i32* %idx, align 4, !dbg !15579
  %54 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15581
  %curlen106 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %54, i32 0, i32 5, !dbg !15582
  %55 = load i8, i8* %curlen106, align 1, !dbg !15582
  %conv107 = zext i8 %55 to i32, !dbg !15581
  %cmp108 = icmp sgt i32 %53, %conv107, !dbg !15583
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !15584

if.then110:                                       ; preds = %if.end104
  br label %fail_len, !dbg !15585

if.end111:                                        ; preds = %if.end104
  %56 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15586
  %u112 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %56, i32 0, i32 2, !dbg !15588
  %link_addr113 = bitcast %union.ack_replies* %u112 to %struct.drm_dp_link_address_ack_reply*, !dbg !15589
  %ports114 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr113, i32 0, i32 2, !dbg !15590
  %57 = load i32, i32* %i, align 4, !dbg !15591
  %idxprom115 = sext i32 %57 to i64, !dbg !15586
  %arrayidx116 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports114, i64 0, i64 %idxprom115, !dbg !15586
  %input_port117 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx116, i32 0, i32 0, !dbg !15592
  %58 = load i8, i8* %input_port117, align 1, !dbg !15592
  %tobool118 = trunc i8 %58 to i1, !dbg !15592
  %conv119 = zext i1 %tobool118 to i32, !dbg !15586
  %cmp120 = icmp eq i32 %conv119, 0, !dbg !15593
  br i1 %cmp120, label %if.then122, label %if.end178, !dbg !15594

if.then122:                                       ; preds = %if.end111
  %59 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15595
  %msg123 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %59, i32 0, i32 1, !dbg !15597
  %60 = load i32, i32* %idx, align 4, !dbg !15598
  %idxprom124 = sext i32 %60 to i64, !dbg !15595
  %arrayidx125 = getelementptr [256 x i8], [256 x i8]* %msg123, i64 0, i64 %idxprom124, !dbg !15595
  %61 = load i8, i8* %arrayidx125, align 1, !dbg !15595
  %62 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15599
  %u126 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %62, i32 0, i32 2, !dbg !15600
  %link_addr127 = bitcast %union.ack_replies* %u126 to %struct.drm_dp_link_address_ack_reply*, !dbg !15601
  %ports128 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr127, i32 0, i32 2, !dbg !15602
  %63 = load i32, i32* %i, align 4, !dbg !15603
  %idxprom129 = sext i32 %63 to i64, !dbg !15599
  %arrayidx130 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports128, i64 0, i64 %idxprom129, !dbg !15599
  %dpcd_revision = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx130, i32 0, i32 6, !dbg !15604
  store i8 %61, i8* %dpcd_revision, align 1, !dbg !15605
  %64 = load i32, i32* %idx, align 4, !dbg !15606
  %inc131 = add i32 %64, 1, !dbg !15606
  store i32 %inc131, i32* %idx, align 4, !dbg !15606
  %65 = load i32, i32* %idx, align 4, !dbg !15607
  %66 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15609
  %curlen132 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %66, i32 0, i32 5, !dbg !15610
  %67 = load i8, i8* %curlen132, align 1, !dbg !15610
  %conv133 = zext i8 %67 to i32, !dbg !15609
  %cmp134 = icmp sgt i32 %65, %conv133, !dbg !15611
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !15612

if.then136:                                       ; preds = %if.then122
  br label %fail_len, !dbg !15613

if.end137:                                        ; preds = %if.then122
  %68 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15614
  %u138 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %68, i32 0, i32 2, !dbg !15615
  %link_addr139 = bitcast %union.ack_replies* %u138 to %struct.drm_dp_link_address_ack_reply*, !dbg !15616
  %ports140 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr139, i32 0, i32 2, !dbg !15617
  %69 = load i32, i32* %i, align 4, !dbg !15618
  %idxprom141 = sext i32 %69 to i64, !dbg !15614
  %arrayidx142 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports140, i64 0, i64 %idxprom141, !dbg !15614
  %peer_guid = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx142, i32 0, i32 7, !dbg !15619
  %arraydecay143 = getelementptr inbounds [16 x i8], [16 x i8]* %peer_guid, i64 0, i64 0, !dbg !15620
  %70 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15621
  %msg144 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %70, i32 0, i32 1, !dbg !15622
  %71 = load i32, i32* %idx, align 4, !dbg !15623
  %idxprom145 = sext i32 %71 to i64, !dbg !15621
  %arrayidx146 = getelementptr [256 x i8], [256 x i8]* %msg144, i64 0, i64 %idxprom145, !dbg !15621
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay143, i8* align 1 %arrayidx146, i64 16, i1 false), !dbg !15620
  %72 = load i32, i32* %idx, align 4, !dbg !15624
  %add147 = add i32 %72, 16, !dbg !15624
  store i32 %add147, i32* %idx, align 4, !dbg !15624
  %73 = load i32, i32* %idx, align 4, !dbg !15625
  %74 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15627
  %curlen148 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %74, i32 0, i32 5, !dbg !15628
  %75 = load i8, i8* %curlen148, align 1, !dbg !15628
  %conv149 = zext i8 %75 to i32, !dbg !15627
  %cmp150 = icmp sgt i32 %73, %conv149, !dbg !15629
  br i1 %cmp150, label %if.then152, label %if.end153, !dbg !15630

if.then152:                                       ; preds = %if.end137
  br label %fail_len, !dbg !15631

if.end153:                                        ; preds = %if.end137
  %76 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15632
  %msg154 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %76, i32 0, i32 1, !dbg !15633
  %77 = load i32, i32* %idx, align 4, !dbg !15634
  %idxprom155 = sext i32 %77 to i64, !dbg !15632
  %arrayidx156 = getelementptr [256 x i8], [256 x i8]* %msg154, i64 0, i64 %idxprom155, !dbg !15632
  %78 = load i8, i8* %arrayidx156, align 1, !dbg !15632
  %conv157 = zext i8 %78 to i32, !dbg !15632
  %shr158 = ashr i32 %conv157, 4, !dbg !15635
  %and159 = and i32 %shr158, 15, !dbg !15636
  %conv160 = trunc i32 %and159 to i8, !dbg !15637
  %79 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15638
  %u161 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %79, i32 0, i32 2, !dbg !15639
  %link_addr162 = bitcast %union.ack_replies* %u161 to %struct.drm_dp_link_address_ack_reply*, !dbg !15640
  %ports163 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr162, i32 0, i32 2, !dbg !15641
  %80 = load i32, i32* %i, align 4, !dbg !15642
  %idxprom164 = sext i32 %80 to i64, !dbg !15638
  %arrayidx165 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports163, i64 0, i64 %idxprom164, !dbg !15638
  %num_sdp_streams = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx165, i32 0, i32 8, !dbg !15643
  store i8 %conv160, i8* %num_sdp_streams, align 1, !dbg !15644
  %81 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15645
  %msg166 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %81, i32 0, i32 1, !dbg !15646
  %82 = load i32, i32* %idx, align 4, !dbg !15647
  %idxprom167 = sext i32 %82 to i64, !dbg !15645
  %arrayidx168 = getelementptr [256 x i8], [256 x i8]* %msg166, i64 0, i64 %idxprom167, !dbg !15645
  %83 = load i8, i8* %arrayidx168, align 1, !dbg !15645
  %conv169 = zext i8 %83 to i32, !dbg !15645
  %and170 = and i32 %conv169, 15, !dbg !15648
  %conv171 = trunc i32 %and170 to i8, !dbg !15649
  %84 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15650
  %u172 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %84, i32 0, i32 2, !dbg !15651
  %link_addr173 = bitcast %union.ack_replies* %u172 to %struct.drm_dp_link_address_ack_reply*, !dbg !15652
  %ports174 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %link_addr173, i32 0, i32 2, !dbg !15653
  %85 = load i32, i32* %i, align 4, !dbg !15654
  %idxprom175 = sext i32 %85 to i64, !dbg !15650
  %arrayidx176 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports174, i64 0, i64 %idxprom175, !dbg !15650
  %num_sdp_stream_sinks = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx176, i32 0, i32 9, !dbg !15655
  store i8 %conv171, i8* %num_sdp_stream_sinks, align 1, !dbg !15656
  %86 = load i32, i32* %idx, align 4, !dbg !15657
  %inc177 = add i32 %86, 1, !dbg !15657
  store i32 %inc177, i32* %idx, align 4, !dbg !15657
  br label %if.end178, !dbg !15658

if.end178:                                        ; preds = %if.end153, %if.end111
  %87 = load i32, i32* %idx, align 4, !dbg !15659
  %88 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15661
  %curlen179 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %88, i32 0, i32 5, !dbg !15662
  %89 = load i8, i8* %curlen179, align 1, !dbg !15662
  %conv180 = zext i8 %89 to i32, !dbg !15661
  %cmp181 = icmp sgt i32 %87, %conv180, !dbg !15663
  br i1 %cmp181, label %if.then183, label %if.end184, !dbg !15664

if.then183:                                       ; preds = %if.end178
  br label %fail_len, !dbg !15665

if.end184:                                        ; preds = %if.end178
  br label %for.inc, !dbg !15666

for.inc:                                          ; preds = %if.end184
  %90 = load i32, i32* %i, align 4, !dbg !15667
  %inc185 = add i32 %90, 1, !dbg !15667
  store i32 %inc185, i32* %i, align 4, !dbg !15667
  br label %for.cond, !dbg !15668, !llvm.loop !15669

for.end:                                          ; preds = %for.cond
  store i1 true, i1* %retval, align 1, !dbg !15671
  br label %return, !dbg !15671

fail_len:                                         ; preds = %if.then183, %if.then152, %if.then136, %if.then110, %if.then53, %if.then
  call void @llvm.dbg.label(metadata !15672), !dbg !15673
  %91 = load i32, i32* %idx, align 4, !dbg !15674
  %92 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15674
  %curlen186 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %92, i32 0, i32 5, !dbg !15674
  %93 = load i8, i8* %curlen186, align 1, !dbg !15674
  %conv187 = zext i8 %93 to i32, !dbg !15674
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0), i32 %91, i32 %conv187) #8, !dbg !15674
  store i1 false, i1* %retval, align 1, !dbg !15675
  br label %return, !dbg !15675

return:                                           ; preds = %fail_len, %for.end
  %94 = load i1, i1* %retval, align 1, !dbg !15676
  ret i1 %94, !dbg !15676
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_query_payload_ack(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !15677 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !15678, metadata !DIExpression()), !dbg !15679
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !15680, metadata !DIExpression()), !dbg !15681
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15682, metadata !DIExpression()), !dbg !15683
  store i32 1, i32* %idx, align 4, !dbg !15683
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15684
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !15685
  %1 = load i32, i32* %idx, align 4, !dbg !15686
  %idxprom = sext i32 %1 to i64, !dbg !15684
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !15684
  %2 = load i8, i8* %arrayidx, align 1, !dbg !15684
  %conv = zext i8 %2 to i32, !dbg !15684
  %shr = ashr i32 %conv, 4, !dbg !15687
  %and = and i32 %shr, 15, !dbg !15688
  %conv1 = trunc i32 %and to i8, !dbg !15689
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15690
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 2, !dbg !15691
  %query_payload = bitcast %union.ack_replies* %u to %struct.drm_dp_query_payload_ack_reply*, !dbg !15692
  %port_number = getelementptr inbounds %struct.drm_dp_query_payload_ack_reply, %struct.drm_dp_query_payload_ack_reply* %query_payload, i32 0, i32 0, !dbg !15693
  store i8 %conv1, i8* %port_number, align 2, !dbg !15694
  %4 = load i32, i32* %idx, align 4, !dbg !15695
  %inc = add i32 %4, 1, !dbg !15695
  store i32 %inc, i32* %idx, align 4, !dbg !15695
  %5 = load i32, i32* %idx, align 4, !dbg !15696
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15698
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !15699
  %7 = load i8, i8* %curlen, align 1, !dbg !15699
  %conv2 = zext i8 %7 to i32, !dbg !15698
  %cmp = icmp sgt i32 %5, %conv2, !dbg !15700
  br i1 %cmp, label %if.then, label %if.end, !dbg !15701

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !15702

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15703
  %msg4 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %8, i32 0, i32 1, !dbg !15704
  %9 = load i32, i32* %idx, align 4, !dbg !15705
  %idxprom5 = sext i32 %9 to i64, !dbg !15703
  %arrayidx6 = getelementptr [256 x i8], [256 x i8]* %msg4, i64 0, i64 %idxprom5, !dbg !15703
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !15703
  %conv7 = zext i8 %10 to i32, !dbg !15703
  %shl = shl i32 %conv7, 8, !dbg !15706
  %11 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15707
  %msg8 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %11, i32 0, i32 1, !dbg !15708
  %12 = load i32, i32* %idx, align 4, !dbg !15709
  %add = add i32 %12, 1, !dbg !15710
  %idxprom9 = sext i32 %add to i64, !dbg !15707
  %arrayidx10 = getelementptr [256 x i8], [256 x i8]* %msg8, i64 0, i64 %idxprom9, !dbg !15707
  %13 = load i8, i8* %arrayidx10, align 1, !dbg !15707
  %conv11 = zext i8 %13 to i32, !dbg !15711
  %or = or i32 %shl, %conv11, !dbg !15712
  %conv12 = trunc i32 %or to i16, !dbg !15713
  %14 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15714
  %u13 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %14, i32 0, i32 2, !dbg !15715
  %query_payload14 = bitcast %union.ack_replies* %u13 to %struct.drm_dp_query_payload_ack_reply*, !dbg !15716
  %allocated_pbn = getelementptr inbounds %struct.drm_dp_query_payload_ack_reply, %struct.drm_dp_query_payload_ack_reply* %query_payload14, i32 0, i32 1, !dbg !15717
  store i16 %conv12, i16* %allocated_pbn, align 2, !dbg !15718
  %15 = load i32, i32* %idx, align 4, !dbg !15719
  %add15 = add i32 %15, 2, !dbg !15719
  store i32 %add15, i32* %idx, align 4, !dbg !15719
  %16 = load i32, i32* %idx, align 4, !dbg !15720
  %17 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15722
  %curlen16 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %17, i32 0, i32 5, !dbg !15723
  %18 = load i8, i8* %curlen16, align 1, !dbg !15723
  %conv17 = zext i8 %18 to i32, !dbg !15722
  %cmp18 = icmp sgt i32 %16, %conv17, !dbg !15724
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !15725

if.then20:                                        ; preds = %if.end
  br label %fail_len, !dbg !15726

if.end21:                                         ; preds = %if.end
  store i1 true, i1* %retval, align 1, !dbg !15727
  br label %return, !dbg !15727

fail_len:                                         ; preds = %if.then20, %if.then
  call void @llvm.dbg.label(metadata !15728), !dbg !15729
  %19 = load i32, i32* %idx, align 4, !dbg !15730
  %20 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15730
  %curlen22 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %20, i32 0, i32 5, !dbg !15730
  %21 = load i8, i8* %curlen22, align 1, !dbg !15730
  %conv23 = zext i8 %21 to i32, !dbg !15730
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.120, i64 0, i64 0), i32 %19, i32 %conv23) #8, !dbg !15730
  store i1 false, i1* %retval, align 1, !dbg !15731
  br label %return, !dbg !15731

return:                                           ; preds = %fail_len, %if.end21
  %22 = load i1, i1* %retval, align 1, !dbg !15732
  ret i1 %22, !dbg !15732
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_remote_dpcd_read(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !15733 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !15734, metadata !DIExpression()), !dbg !15735
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !15736, metadata !DIExpression()), !dbg !15737
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15738, metadata !DIExpression()), !dbg !15739
  store i32 1, i32* %idx, align 4, !dbg !15739
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15740
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !15741
  %1 = load i32, i32* %idx, align 4, !dbg !15742
  %idxprom = sext i32 %1 to i64, !dbg !15740
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !15740
  %2 = load i8, i8* %arrayidx, align 1, !dbg !15740
  %conv = zext i8 %2 to i32, !dbg !15740
  %and = and i32 %conv, 15, !dbg !15743
  %conv1 = trunc i32 %and to i8, !dbg !15740
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15744
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 2, !dbg !15745
  %remote_dpcd_read_ack = bitcast %union.ack_replies* %u to %struct.drm_dp_remote_dpcd_read_ack_reply*, !dbg !15746
  %port_number = getelementptr inbounds %struct.drm_dp_remote_dpcd_read_ack_reply, %struct.drm_dp_remote_dpcd_read_ack_reply* %remote_dpcd_read_ack, i32 0, i32 0, !dbg !15747
  store i8 %conv1, i8* %port_number, align 2, !dbg !15748
  %4 = load i32, i32* %idx, align 4, !dbg !15749
  %inc = add i32 %4, 1, !dbg !15749
  store i32 %inc, i32* %idx, align 4, !dbg !15749
  %5 = load i32, i32* %idx, align 4, !dbg !15750
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15752
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !15753
  %7 = load i8, i8* %curlen, align 1, !dbg !15753
  %conv2 = zext i8 %7 to i32, !dbg !15752
  %cmp = icmp sgt i32 %5, %conv2, !dbg !15754
  br i1 %cmp, label %if.then, label %if.end, !dbg !15755

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !15756

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15757
  %msg4 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %8, i32 0, i32 1, !dbg !15758
  %9 = load i32, i32* %idx, align 4, !dbg !15759
  %idxprom5 = sext i32 %9 to i64, !dbg !15757
  %arrayidx6 = getelementptr [256 x i8], [256 x i8]* %msg4, i64 0, i64 %idxprom5, !dbg !15757
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !15757
  %11 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15760
  %u7 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %11, i32 0, i32 2, !dbg !15761
  %remote_dpcd_read_ack8 = bitcast %union.ack_replies* %u7 to %struct.drm_dp_remote_dpcd_read_ack_reply*, !dbg !15762
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_read_ack_reply, %struct.drm_dp_remote_dpcd_read_ack_reply* %remote_dpcd_read_ack8, i32 0, i32 1, !dbg !15763
  store i8 %10, i8* %num_bytes, align 1, !dbg !15764
  %12 = load i32, i32* %idx, align 4, !dbg !15765
  %inc9 = add i32 %12, 1, !dbg !15765
  store i32 %inc9, i32* %idx, align 4, !dbg !15765
  %13 = load i32, i32* %idx, align 4, !dbg !15766
  %14 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15768
  %curlen10 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %14, i32 0, i32 5, !dbg !15769
  %15 = load i8, i8* %curlen10, align 1, !dbg !15769
  %conv11 = zext i8 %15 to i32, !dbg !15768
  %cmp12 = icmp sgt i32 %13, %conv11, !dbg !15770
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !15771

if.then14:                                        ; preds = %if.end
  br label %fail_len, !dbg !15772

if.end15:                                         ; preds = %if.end
  %16 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15773
  %u16 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %16, i32 0, i32 2, !dbg !15774
  %remote_dpcd_read_ack17 = bitcast %union.ack_replies* %u16 to %struct.drm_dp_remote_dpcd_read_ack_reply*, !dbg !15775
  %bytes = getelementptr inbounds %struct.drm_dp_remote_dpcd_read_ack_reply, %struct.drm_dp_remote_dpcd_read_ack_reply* %remote_dpcd_read_ack17, i32 0, i32 2, !dbg !15776
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %bytes, i64 0, i64 0, !dbg !15777
  %17 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15778
  %msg18 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %17, i32 0, i32 1, !dbg !15779
  %18 = load i32, i32* %idx, align 4, !dbg !15780
  %idxprom19 = sext i32 %18 to i64, !dbg !15778
  %arrayidx20 = getelementptr [256 x i8], [256 x i8]* %msg18, i64 0, i64 %idxprom19, !dbg !15778
  %19 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15781
  %u21 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %19, i32 0, i32 2, !dbg !15782
  %remote_dpcd_read_ack22 = bitcast %union.ack_replies* %u21 to %struct.drm_dp_remote_dpcd_read_ack_reply*, !dbg !15783
  %num_bytes23 = getelementptr inbounds %struct.drm_dp_remote_dpcd_read_ack_reply, %struct.drm_dp_remote_dpcd_read_ack_reply* %remote_dpcd_read_ack22, i32 0, i32 1, !dbg !15784
  %20 = load i8, i8* %num_bytes23, align 1, !dbg !15784
  %conv24 = zext i8 %20 to i64, !dbg !15781
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 1 %arrayidx20, i64 %conv24, i1 false), !dbg !15777
  store i1 true, i1* %retval, align 1, !dbg !15785
  br label %return, !dbg !15785

fail_len:                                         ; preds = %if.then14, %if.then
  call void @llvm.dbg.label(metadata !15786), !dbg !15787
  %21 = load i32, i32* %idx, align 4, !dbg !15788
  %22 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15788
  %curlen25 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %22, i32 0, i32 5, !dbg !15788
  %23 = load i8, i8* %curlen25, align 1, !dbg !15788
  %conv26 = zext i8 %23 to i32, !dbg !15788
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.119, i64 0, i64 0), i32 %21, i32 %conv26) #8, !dbg !15788
  store i1 false, i1* %retval, align 1, !dbg !15789
  br label %return, !dbg !15789

return:                                           ; preds = %fail_len, %if.end15
  %24 = load i1, i1* %retval, align 1, !dbg !15790
  ret i1 %24, !dbg !15790
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_remote_dpcd_write(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !15791 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !15792, metadata !DIExpression()), !dbg !15793
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !15794, metadata !DIExpression()), !dbg !15795
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15796, metadata !DIExpression()), !dbg !15797
  store i32 1, i32* %idx, align 4, !dbg !15797
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15798
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !15799
  %1 = load i32, i32* %idx, align 4, !dbg !15800
  %idxprom = sext i32 %1 to i64, !dbg !15798
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !15798
  %2 = load i8, i8* %arrayidx, align 1, !dbg !15798
  %conv = zext i8 %2 to i32, !dbg !15798
  %and = and i32 %conv, 15, !dbg !15801
  %conv1 = trunc i32 %and to i8, !dbg !15798
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15802
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 2, !dbg !15803
  %remote_dpcd_write_ack = bitcast %union.ack_replies* %u to %struct.drm_dp_remote_dpcd_write_ack_reply*, !dbg !15804
  %port_number = getelementptr inbounds %struct.drm_dp_remote_dpcd_write_ack_reply, %struct.drm_dp_remote_dpcd_write_ack_reply* %remote_dpcd_write_ack, i32 0, i32 0, !dbg !15805
  store i8 %conv1, i8* %port_number, align 2, !dbg !15806
  %4 = load i32, i32* %idx, align 4, !dbg !15807
  %inc = add i32 %4, 1, !dbg !15807
  store i32 %inc, i32* %idx, align 4, !dbg !15807
  %5 = load i32, i32* %idx, align 4, !dbg !15808
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15810
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !15811
  %7 = load i8, i8* %curlen, align 1, !dbg !15811
  %conv2 = zext i8 %7 to i32, !dbg !15810
  %cmp = icmp sgt i32 %5, %conv2, !dbg !15812
  br i1 %cmp, label %if.then, label %if.end, !dbg !15813

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !15814

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !15815
  br label %return, !dbg !15815

fail_len:                                         ; preds = %if.then
  call void @llvm.dbg.label(metadata !15816), !dbg !15817
  %8 = load i32, i32* %idx, align 4, !dbg !15818
  %9 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15818
  %curlen4 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %9, i32 0, i32 5, !dbg !15818
  %10 = load i8, i8* %curlen4, align 1, !dbg !15818
  %conv5 = zext i8 %10 to i32, !dbg !15818
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.121, i64 0, i64 0), i32 %8, i32 %conv5) #8, !dbg !15818
  store i1 false, i1* %retval, align 1, !dbg !15819
  br label %return, !dbg !15819

return:                                           ; preds = %fail_len, %if.end
  %11 = load i1, i1* %retval, align 1, !dbg !15820
  ret i1 %11, !dbg !15820
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_remote_i2c_read_ack(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !15821 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !15822, metadata !DIExpression()), !dbg !15823
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !15824, metadata !DIExpression()), !dbg !15825
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15826, metadata !DIExpression()), !dbg !15827
  store i32 1, i32* %idx, align 4, !dbg !15827
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15828
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !15829
  %1 = load i32, i32* %idx, align 4, !dbg !15830
  %idxprom = sext i32 %1 to i64, !dbg !15828
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !15828
  %2 = load i8, i8* %arrayidx, align 1, !dbg !15828
  %conv = zext i8 %2 to i32, !dbg !15828
  %and = and i32 %conv, 15, !dbg !15831
  %conv1 = trunc i32 %and to i8, !dbg !15832
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15833
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 2, !dbg !15834
  %remote_i2c_read_ack = bitcast %union.ack_replies* %u to %struct.drm_dp_remote_i2c_read_ack_reply*, !dbg !15835
  %port_number = getelementptr inbounds %struct.drm_dp_remote_i2c_read_ack_reply, %struct.drm_dp_remote_i2c_read_ack_reply* %remote_i2c_read_ack, i32 0, i32 0, !dbg !15836
  store i8 %conv1, i8* %port_number, align 2, !dbg !15837
  %4 = load i32, i32* %idx, align 4, !dbg !15838
  %inc = add i32 %4, 1, !dbg !15838
  store i32 %inc, i32* %idx, align 4, !dbg !15838
  %5 = load i32, i32* %idx, align 4, !dbg !15839
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15841
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !15842
  %7 = load i8, i8* %curlen, align 1, !dbg !15842
  %conv2 = zext i8 %7 to i32, !dbg !15841
  %cmp = icmp sgt i32 %5, %conv2, !dbg !15843
  br i1 %cmp, label %if.then, label %if.end, !dbg !15844

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !15845

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15846
  %msg4 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %8, i32 0, i32 1, !dbg !15847
  %9 = load i32, i32* %idx, align 4, !dbg !15848
  %idxprom5 = sext i32 %9 to i64, !dbg !15846
  %arrayidx6 = getelementptr [256 x i8], [256 x i8]* %msg4, i64 0, i64 %idxprom5, !dbg !15846
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !15846
  %11 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15849
  %u7 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %11, i32 0, i32 2, !dbg !15850
  %remote_i2c_read_ack8 = bitcast %union.ack_replies* %u7 to %struct.drm_dp_remote_i2c_read_ack_reply*, !dbg !15851
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_i2c_read_ack_reply, %struct.drm_dp_remote_i2c_read_ack_reply* %remote_i2c_read_ack8, i32 0, i32 1, !dbg !15852
  store i8 %10, i8* %num_bytes, align 1, !dbg !15853
  %12 = load i32, i32* %idx, align 4, !dbg !15854
  %inc9 = add i32 %12, 1, !dbg !15854
  store i32 %inc9, i32* %idx, align 4, !dbg !15854
  %13 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15855
  %u10 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %13, i32 0, i32 2, !dbg !15856
  %remote_i2c_read_ack11 = bitcast %union.ack_replies* %u10 to %struct.drm_dp_remote_i2c_read_ack_reply*, !dbg !15857
  %bytes = getelementptr inbounds %struct.drm_dp_remote_i2c_read_ack_reply, %struct.drm_dp_remote_i2c_read_ack_reply* %remote_i2c_read_ack11, i32 0, i32 2, !dbg !15858
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %bytes, i64 0, i64 0, !dbg !15859
  %14 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15860
  %msg12 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %14, i32 0, i32 1, !dbg !15861
  %15 = load i32, i32* %idx, align 4, !dbg !15862
  %idxprom13 = sext i32 %15 to i64, !dbg !15860
  %arrayidx14 = getelementptr [256 x i8], [256 x i8]* %msg12, i64 0, i64 %idxprom13, !dbg !15860
  %16 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15863
  %u15 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %16, i32 0, i32 2, !dbg !15864
  %remote_i2c_read_ack16 = bitcast %union.ack_replies* %u15 to %struct.drm_dp_remote_i2c_read_ack_reply*, !dbg !15865
  %num_bytes17 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_ack_reply, %struct.drm_dp_remote_i2c_read_ack_reply* %remote_i2c_read_ack16, i32 0, i32 1, !dbg !15866
  %17 = load i8, i8* %num_bytes17, align 1, !dbg !15866
  %conv18 = zext i8 %17 to i64, !dbg !15863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %arraydecay, i8* align 1 %arrayidx14, i64 %conv18, i1 false), !dbg !15859
  store i1 true, i1* %retval, align 1, !dbg !15867
  br label %return, !dbg !15867

fail_len:                                         ; preds = %if.then
  call void @llvm.dbg.label(metadata !15868), !dbg !15869
  %18 = load i32, i32* %idx, align 4, !dbg !15870
  %19 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15870
  %curlen19 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %19, i32 0, i32 5, !dbg !15870
  %20 = load i8, i8* %curlen19, align 1, !dbg !15870
  %conv20 = zext i8 %20 to i32, !dbg !15870
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.122, i64 0, i64 0), i32 %18, i32 %conv20) #8, !dbg !15870
  store i1 false, i1* %retval, align 1, !dbg !15871
  br label %return, !dbg !15871

return:                                           ; preds = %fail_len, %if.end
  %21 = load i1, i1* %retval, align 1, !dbg !15872
  ret i1 %21, !dbg !15872
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_enum_path_resources_ack(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !15873 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !15874, metadata !DIExpression()), !dbg !15875
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !15876, metadata !DIExpression()), !dbg !15877
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15878, metadata !DIExpression()), !dbg !15879
  store i32 1, i32* %idx, align 4, !dbg !15879
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15880
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !15881
  %1 = load i32, i32* %idx, align 4, !dbg !15882
  %idxprom = sext i32 %1 to i64, !dbg !15880
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !15880
  %2 = load i8, i8* %arrayidx, align 1, !dbg !15880
  %conv = zext i8 %2 to i32, !dbg !15880
  %shr = ashr i32 %conv, 4, !dbg !15883
  %and = and i32 %shr, 15, !dbg !15884
  %conv1 = trunc i32 %and to i8, !dbg !15885
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15886
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 2, !dbg !15887
  %path_resources = bitcast %union.ack_replies* %u to %struct.drm_dp_enum_path_resources_ack_reply*, !dbg !15888
  %port_number = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %path_resources, i32 0, i32 0, !dbg !15889
  store i8 %conv1, i8* %port_number, align 2, !dbg !15890
  %4 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15891
  %msg2 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %4, i32 0, i32 1, !dbg !15892
  %5 = load i32, i32* %idx, align 4, !dbg !15893
  %idxprom3 = sext i32 %5 to i64, !dbg !15891
  %arrayidx4 = getelementptr [256 x i8], [256 x i8]* %msg2, i64 0, i64 %idxprom3, !dbg !15891
  %6 = load i8, i8* %arrayidx4, align 1, !dbg !15891
  %conv5 = zext i8 %6 to i32, !dbg !15891
  %and6 = and i32 %conv5, 1, !dbg !15894
  %tobool = icmp ne i32 %and6, 0, !dbg !15891
  %7 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15895
  %u7 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %7, i32 0, i32 2, !dbg !15896
  %path_resources8 = bitcast %union.ack_replies* %u7 to %struct.drm_dp_enum_path_resources_ack_reply*, !dbg !15897
  %fec_capable = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %path_resources8, i32 0, i32 1, !dbg !15898
  %frombool = zext i1 %tobool to i8, !dbg !15899
  store i8 %frombool, i8* %fec_capable, align 1, !dbg !15899
  %8 = load i32, i32* %idx, align 4, !dbg !15900
  %inc = add i32 %8, 1, !dbg !15900
  store i32 %inc, i32* %idx, align 4, !dbg !15900
  %9 = load i32, i32* %idx, align 4, !dbg !15901
  %10 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15903
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %10, i32 0, i32 5, !dbg !15904
  %11 = load i8, i8* %curlen, align 1, !dbg !15904
  %conv9 = zext i8 %11 to i32, !dbg !15903
  %cmp = icmp sgt i32 %9, %conv9, !dbg !15905
  br i1 %cmp, label %if.then, label %if.end, !dbg !15906

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !15907

if.end:                                           ; preds = %entry
  %12 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15908
  %msg11 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %12, i32 0, i32 1, !dbg !15909
  %13 = load i32, i32* %idx, align 4, !dbg !15910
  %idxprom12 = sext i32 %13 to i64, !dbg !15908
  %arrayidx13 = getelementptr [256 x i8], [256 x i8]* %msg11, i64 0, i64 %idxprom12, !dbg !15908
  %14 = load i8, i8* %arrayidx13, align 1, !dbg !15908
  %conv14 = zext i8 %14 to i32, !dbg !15908
  %shl = shl i32 %conv14, 8, !dbg !15911
  %15 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15912
  %msg15 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %15, i32 0, i32 1, !dbg !15913
  %16 = load i32, i32* %idx, align 4, !dbg !15914
  %add = add i32 %16, 1, !dbg !15915
  %idxprom16 = sext i32 %add to i64, !dbg !15912
  %arrayidx17 = getelementptr [256 x i8], [256 x i8]* %msg15, i64 0, i64 %idxprom16, !dbg !15912
  %17 = load i8, i8* %arrayidx17, align 1, !dbg !15912
  %conv18 = zext i8 %17 to i32, !dbg !15916
  %or = or i32 %shl, %conv18, !dbg !15917
  %conv19 = trunc i32 %or to i16, !dbg !15918
  %18 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15919
  %u20 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %18, i32 0, i32 2, !dbg !15920
  %path_resources21 = bitcast %union.ack_replies* %u20 to %struct.drm_dp_enum_path_resources_ack_reply*, !dbg !15921
  %full_payload_bw_number = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %path_resources21, i32 0, i32 2, !dbg !15922
  store i16 %conv19, i16* %full_payload_bw_number, align 2, !dbg !15923
  %19 = load i32, i32* %idx, align 4, !dbg !15924
  %add22 = add i32 %19, 2, !dbg !15924
  store i32 %add22, i32* %idx, align 4, !dbg !15924
  %20 = load i32, i32* %idx, align 4, !dbg !15925
  %21 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15927
  %curlen23 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %21, i32 0, i32 5, !dbg !15928
  %22 = load i8, i8* %curlen23, align 1, !dbg !15928
  %conv24 = zext i8 %22 to i32, !dbg !15927
  %cmp25 = icmp sgt i32 %20, %conv24, !dbg !15929
  br i1 %cmp25, label %if.then27, label %if.end28, !dbg !15930

if.then27:                                        ; preds = %if.end
  br label %fail_len, !dbg !15931

if.end28:                                         ; preds = %if.end
  %23 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15932
  %msg29 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %23, i32 0, i32 1, !dbg !15933
  %24 = load i32, i32* %idx, align 4, !dbg !15934
  %idxprom30 = sext i32 %24 to i64, !dbg !15932
  %arrayidx31 = getelementptr [256 x i8], [256 x i8]* %msg29, i64 0, i64 %idxprom30, !dbg !15932
  %25 = load i8, i8* %arrayidx31, align 1, !dbg !15932
  %conv32 = zext i8 %25 to i32, !dbg !15932
  %shl33 = shl i32 %conv32, 8, !dbg !15935
  %26 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15936
  %msg34 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %26, i32 0, i32 1, !dbg !15937
  %27 = load i32, i32* %idx, align 4, !dbg !15938
  %add35 = add i32 %27, 1, !dbg !15939
  %idxprom36 = sext i32 %add35 to i64, !dbg !15936
  %arrayidx37 = getelementptr [256 x i8], [256 x i8]* %msg34, i64 0, i64 %idxprom36, !dbg !15936
  %28 = load i8, i8* %arrayidx37, align 1, !dbg !15936
  %conv38 = zext i8 %28 to i32, !dbg !15940
  %or39 = or i32 %shl33, %conv38, !dbg !15941
  %conv40 = trunc i32 %or39 to i16, !dbg !15942
  %29 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15943
  %u41 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %29, i32 0, i32 2, !dbg !15944
  %path_resources42 = bitcast %union.ack_replies* %u41 to %struct.drm_dp_enum_path_resources_ack_reply*, !dbg !15945
  %avail_payload_bw_number = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %path_resources42, i32 0, i32 3, !dbg !15946
  store i16 %conv40, i16* %avail_payload_bw_number, align 2, !dbg !15947
  %30 = load i32, i32* %idx, align 4, !dbg !15948
  %add43 = add i32 %30, 2, !dbg !15948
  store i32 %add43, i32* %idx, align 4, !dbg !15948
  %31 = load i32, i32* %idx, align 4, !dbg !15949
  %32 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15951
  %curlen44 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %32, i32 0, i32 5, !dbg !15952
  %33 = load i8, i8* %curlen44, align 1, !dbg !15952
  %conv45 = zext i8 %33 to i32, !dbg !15951
  %cmp46 = icmp sgt i32 %31, %conv45, !dbg !15953
  br i1 %cmp46, label %if.then48, label %if.end49, !dbg !15954

if.then48:                                        ; preds = %if.end28
  br label %fail_len, !dbg !15955

if.end49:                                         ; preds = %if.end28
  store i1 true, i1* %retval, align 1, !dbg !15956
  br label %return, !dbg !15956

fail_len:                                         ; preds = %if.then48, %if.then27, %if.then
  call void @llvm.dbg.label(metadata !15957), !dbg !15958
  %34 = load i32, i32* %idx, align 4, !dbg !15959
  %35 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15959
  %curlen50 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %35, i32 0, i32 5, !dbg !15959
  %36 = load i8, i8* %curlen50, align 1, !dbg !15959
  %conv51 = zext i8 %36 to i32, !dbg !15959
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.123, i64 0, i64 0), i32 %34, i32 %conv51) #8, !dbg !15959
  store i1 false, i1* %retval, align 1, !dbg !15960
  br label %return, !dbg !15960

return:                                           ; preds = %fail_len, %if.end49
  %37 = load i1, i1* %retval, align 1, !dbg !15961
  ret i1 %37, !dbg !15961
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_allocate_payload_ack(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !15962 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !15963, metadata !DIExpression()), !dbg !15964
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !15965, metadata !DIExpression()), !dbg !15966
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !15967, metadata !DIExpression()), !dbg !15968
  store i32 1, i32* %idx, align 4, !dbg !15968
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15969
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !15970
  %1 = load i32, i32* %idx, align 4, !dbg !15971
  %idxprom = sext i32 %1 to i64, !dbg !15969
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !15969
  %2 = load i8, i8* %arrayidx, align 1, !dbg !15969
  %conv = zext i8 %2 to i32, !dbg !15969
  %shr = ashr i32 %conv, 4, !dbg !15972
  %and = and i32 %shr, 15, !dbg !15973
  %conv1 = trunc i32 %and to i8, !dbg !15974
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15975
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 2, !dbg !15976
  %allocate_payload = bitcast %union.ack_replies* %u to %struct.drm_dp_allocate_payload_ack_reply*, !dbg !15977
  %port_number = getelementptr inbounds %struct.drm_dp_allocate_payload_ack_reply, %struct.drm_dp_allocate_payload_ack_reply* %allocate_payload, i32 0, i32 0, !dbg !15978
  store i8 %conv1, i8* %port_number, align 2, !dbg !15979
  %4 = load i32, i32* %idx, align 4, !dbg !15980
  %inc = add i32 %4, 1, !dbg !15980
  store i32 %inc, i32* %idx, align 4, !dbg !15980
  %5 = load i32, i32* %idx, align 4, !dbg !15981
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15983
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !15984
  %7 = load i8, i8* %curlen, align 1, !dbg !15984
  %conv2 = zext i8 %7 to i32, !dbg !15983
  %cmp = icmp sgt i32 %5, %conv2, !dbg !15985
  br i1 %cmp, label %if.then, label %if.end, !dbg !15986

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !15987

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15988
  %msg4 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %8, i32 0, i32 1, !dbg !15989
  %9 = load i32, i32* %idx, align 4, !dbg !15990
  %idxprom5 = sext i32 %9 to i64, !dbg !15988
  %arrayidx6 = getelementptr [256 x i8], [256 x i8]* %msg4, i64 0, i64 %idxprom5, !dbg !15988
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !15988
  %11 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !15991
  %u7 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %11, i32 0, i32 2, !dbg !15992
  %allocate_payload8 = bitcast %union.ack_replies* %u7 to %struct.drm_dp_allocate_payload_ack_reply*, !dbg !15993
  %vcpi = getelementptr inbounds %struct.drm_dp_allocate_payload_ack_reply, %struct.drm_dp_allocate_payload_ack_reply* %allocate_payload8, i32 0, i32 1, !dbg !15994
  store i8 %10, i8* %vcpi, align 1, !dbg !15995
  %12 = load i32, i32* %idx, align 4, !dbg !15996
  %inc9 = add i32 %12, 1, !dbg !15996
  store i32 %inc9, i32* %idx, align 4, !dbg !15996
  %13 = load i32, i32* %idx, align 4, !dbg !15997
  %14 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !15999
  %curlen10 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %14, i32 0, i32 5, !dbg !16000
  %15 = load i8, i8* %curlen10, align 1, !dbg !16000
  %conv11 = zext i8 %15 to i32, !dbg !15999
  %cmp12 = icmp sgt i32 %13, %conv11, !dbg !16001
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16002

if.then14:                                        ; preds = %if.end
  br label %fail_len, !dbg !16003

if.end15:                                         ; preds = %if.end
  %16 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16004
  %msg16 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %16, i32 0, i32 1, !dbg !16005
  %17 = load i32, i32* %idx, align 4, !dbg !16006
  %idxprom17 = sext i32 %17 to i64, !dbg !16004
  %arrayidx18 = getelementptr [256 x i8], [256 x i8]* %msg16, i64 0, i64 %idxprom17, !dbg !16004
  %18 = load i8, i8* %arrayidx18, align 1, !dbg !16004
  %conv19 = zext i8 %18 to i32, !dbg !16004
  %shl = shl i32 %conv19, 8, !dbg !16007
  %19 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16008
  %msg20 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %19, i32 0, i32 1, !dbg !16009
  %20 = load i32, i32* %idx, align 4, !dbg !16010
  %add = add i32 %20, 1, !dbg !16011
  %idxprom21 = sext i32 %add to i64, !dbg !16008
  %arrayidx22 = getelementptr [256 x i8], [256 x i8]* %msg20, i64 0, i64 %idxprom21, !dbg !16008
  %21 = load i8, i8* %arrayidx22, align 1, !dbg !16008
  %conv23 = zext i8 %21 to i32, !dbg !16012
  %or = or i32 %shl, %conv23, !dbg !16013
  %conv24 = trunc i32 %or to i16, !dbg !16014
  %22 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !16015
  %u25 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %22, i32 0, i32 2, !dbg !16016
  %allocate_payload26 = bitcast %union.ack_replies* %u25 to %struct.drm_dp_allocate_payload_ack_reply*, !dbg !16017
  %allocated_pbn = getelementptr inbounds %struct.drm_dp_allocate_payload_ack_reply, %struct.drm_dp_allocate_payload_ack_reply* %allocate_payload26, i32 0, i32 2, !dbg !16018
  store i16 %conv24, i16* %allocated_pbn, align 2, !dbg !16019
  %23 = load i32, i32* %idx, align 4, !dbg !16020
  %add27 = add i32 %23, 2, !dbg !16020
  store i32 %add27, i32* %idx, align 4, !dbg !16020
  %24 = load i32, i32* %idx, align 4, !dbg !16021
  %25 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16023
  %curlen28 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %25, i32 0, i32 5, !dbg !16024
  %26 = load i8, i8* %curlen28, align 1, !dbg !16024
  %conv29 = zext i8 %26 to i32, !dbg !16023
  %cmp30 = icmp sgt i32 %24, %conv29, !dbg !16025
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !16026

if.then32:                                        ; preds = %if.end15
  br label %fail_len, !dbg !16027

if.end33:                                         ; preds = %if.end15
  store i1 true, i1* %retval, align 1, !dbg !16028
  br label %return, !dbg !16028

fail_len:                                         ; preds = %if.then32, %if.then14, %if.then
  call void @llvm.dbg.label(metadata !16029), !dbg !16030
  %27 = load i32, i32* %idx, align 4, !dbg !16031
  %28 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16031
  %curlen34 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %28, i32 0, i32 5, !dbg !16031
  %29 = load i8, i8* %curlen34, align 1, !dbg !16031
  %conv35 = zext i8 %29 to i32, !dbg !16031
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.124, i64 0, i64 0), i32 %27, i32 %conv35) #8, !dbg !16031
  store i1 false, i1* %retval, align 1, !dbg !16032
  br label %return, !dbg !16032

return:                                           ; preds = %fail_len, %if.end33
  %30 = load i1, i1* %retval, align 1, !dbg !16033
  ret i1 %30, !dbg !16033
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_power_updown_phy_ack(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !16034 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !16035, metadata !DIExpression()), !dbg !16036
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !16037, metadata !DIExpression()), !dbg !16038
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !16039, metadata !DIExpression()), !dbg !16040
  store i32 1, i32* %idx, align 4, !dbg !16040
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16041
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !16042
  %1 = load i32, i32* %idx, align 4, !dbg !16043
  %idxprom = sext i32 %1 to i64, !dbg !16041
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 %idxprom, !dbg !16041
  %2 = load i8, i8* %arrayidx, align 1, !dbg !16041
  %conv = zext i8 %2 to i32, !dbg !16041
  %shr = ashr i32 %conv, 4, !dbg !16044
  %and = and i32 %shr, 15, !dbg !16045
  %conv1 = trunc i32 %and to i8, !dbg !16046
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !16047
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 2, !dbg !16048
  %port_number = bitcast %union.ack_replies* %u to %struct.drm_dp_port_number_rep*, !dbg !16049
  %port_number2 = getelementptr inbounds %struct.drm_dp_port_number_rep, %struct.drm_dp_port_number_rep* %port_number, i32 0, i32 0, !dbg !16050
  store i8 %conv1, i8* %port_number2, align 2, !dbg !16051
  %4 = load i32, i32* %idx, align 4, !dbg !16052
  %inc = add i32 %4, 1, !dbg !16052
  store i32 %inc, i32* %idx, align 4, !dbg !16052
  %5 = load i32, i32* %idx, align 4, !dbg !16053
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16055
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !16056
  %7 = load i8, i8* %curlen, align 1, !dbg !16056
  %conv3 = zext i8 %7 to i32, !dbg !16055
  %cmp = icmp sgt i32 %5, %conv3, !dbg !16057
  br i1 %cmp, label %if.then, label %if.end, !dbg !16058

if.then:                                          ; preds = %entry
  %8 = load i32, i32* %idx, align 4, !dbg !16059
  %9 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16059
  %curlen5 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %9, i32 0, i32 5, !dbg !16059
  %10 = load i8, i8* %curlen5, align 1, !dbg !16059
  %conv6 = zext i8 %10 to i32, !dbg !16059
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.125, i64 0, i64 0), i32 %8, i32 %conv6) #8, !dbg !16059
  store i1 false, i1* %retval, align 1, !dbg !16061
  br label %return, !dbg !16061

if.end:                                           ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !16062
  br label %return, !dbg !16062

return:                                           ; preds = %if.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !16063
  ret i1 %11, !dbg !16063
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_query_stream_enc_status(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_reply_body* %repmsg) #0 !dbg !16064 {
entry:
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %repmsg.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %reply = alloca %struct.drm_dp_query_stream_enc_status_ack_reply*, align 8
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !16065, metadata !DIExpression()), !dbg !16066
  store %struct.drm_dp_sideband_msg_reply_body* %repmsg, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, metadata !16067, metadata !DIExpression()), !dbg !16068
  call void @llvm.dbg.declare(metadata %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, metadata !16069, metadata !DIExpression()), !dbg !16070
  %0 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %repmsg.addr, align 8, !dbg !16071
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %0, i32 0, i32 2, !dbg !16072
  %enc_status = bitcast %union.ack_replies* %u to %struct.drm_dp_query_stream_enc_status_ack_reply*, !dbg !16073
  store %struct.drm_dp_query_stream_enc_status_ack_reply* %enc_status, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16074
  %1 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16075
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %1, i32 0, i32 1, !dbg !16076
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg, i64 0, i64 3, !dbg !16075
  %2 = load i8, i8* %arrayidx, align 1, !dbg !16075
  %3 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16077
  %stream_id = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %3, i32 0, i32 0, !dbg !16078
  store i8 %2, i8* %stream_id, align 1, !dbg !16079
  %4 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16080
  %msg1 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %4, i32 0, i32 1, !dbg !16081
  %arrayidx2 = getelementptr [256 x i8], [256 x i8]* %msg1, i64 0, i64 2, !dbg !16080
  %5 = load i8, i8* %arrayidx2, align 1, !dbg !16080
  %conv = zext i8 %5 to i64, !dbg !16080
  %and = and i64 %conv, 1, !dbg !16082
  %tobool = icmp ne i64 %and, 0, !dbg !16080
  %6 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16083
  %reply_signed = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %6, i32 0, i32 1, !dbg !16084
  %frombool = zext i1 %tobool to i8, !dbg !16085
  store i8 %frombool, i8* %reply_signed, align 1, !dbg !16085
  %7 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16086
  %msg3 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %7, i32 0, i32 1, !dbg !16087
  %arrayidx4 = getelementptr [256 x i8], [256 x i8]* %msg3, i64 0, i64 2, !dbg !16086
  %8 = load i8, i8* %arrayidx4, align 1, !dbg !16086
  %conv5 = zext i8 %8 to i64, !dbg !16086
  %and6 = and i64 %conv5, 16, !dbg !16088
  %tobool7 = icmp ne i64 %and6, 0, !dbg !16086
  %9 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16089
  %hdcp_1x_device_present = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %9, i32 0, i32 5, !dbg !16090
  %frombool8 = zext i1 %tobool7 to i8, !dbg !16091
  store i8 %frombool8, i8* %hdcp_1x_device_present, align 1, !dbg !16091
  %10 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16092
  %msg9 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %10, i32 0, i32 1, !dbg !16093
  %arrayidx10 = getelementptr [256 x i8], [256 x i8]* %msg9, i64 0, i64 2, !dbg !16092
  %11 = load i8, i8* %arrayidx10, align 1, !dbg !16092
  %conv11 = zext i8 %11 to i64, !dbg !16092
  %and12 = and i64 %conv11, 8, !dbg !16094
  %tobool13 = icmp ne i64 %and12, 0, !dbg !16092
  %12 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16095
  %hdcp_2x_device_present = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %12, i32 0, i32 6, !dbg !16096
  %frombool14 = zext i1 %tobool13 to i8, !dbg !16097
  store i8 %frombool14, i8* %hdcp_2x_device_present, align 1, !dbg !16097
  %13 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16098
  %msg15 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %13, i32 0, i32 1, !dbg !16099
  %arrayidx16 = getelementptr [256 x i8], [256 x i8]* %msg15, i64 0, i64 2, !dbg !16098
  %14 = load i8, i8* %arrayidx16, align 1, !dbg !16098
  %conv17 = zext i8 %14 to i64, !dbg !16098
  %and18 = and i64 %conv17, 32, !dbg !16100
  %tobool19 = icmp ne i64 %and18, 0, !dbg !16098
  %15 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16101
  %query_capable_device_present = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %15, i32 0, i32 4, !dbg !16102
  %frombool20 = zext i1 %tobool19 to i8, !dbg !16103
  store i8 %frombool20, i8* %query_capable_device_present, align 1, !dbg !16103
  %16 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16104
  %msg21 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %16, i32 0, i32 1, !dbg !16105
  %arrayidx22 = getelementptr [256 x i8], [256 x i8]* %msg21, i64 0, i64 2, !dbg !16104
  %17 = load i8, i8* %arrayidx22, align 1, !dbg !16104
  %conv23 = zext i8 %17 to i64, !dbg !16104
  %and24 = and i64 %conv23, 64, !dbg !16106
  %tobool25 = icmp ne i64 %and24, 0, !dbg !16104
  %18 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16107
  %legacy_device_present = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %18, i32 0, i32 3, !dbg !16108
  %frombool26 = zext i1 %tobool25 to i8, !dbg !16109
  store i8 %frombool26, i8* %legacy_device_present, align 1, !dbg !16109
  %19 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16110
  %msg27 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %19, i32 0, i32 1, !dbg !16111
  %arrayidx28 = getelementptr [256 x i8], [256 x i8]* %msg27, i64 0, i64 2, !dbg !16110
  %20 = load i8, i8* %arrayidx28, align 1, !dbg !16110
  %conv29 = zext i8 %20 to i64, !dbg !16110
  %and30 = and i64 %conv29, 128, !dbg !16112
  %tobool31 = icmp ne i64 %and30, 0, !dbg !16110
  %21 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16113
  %unauthorizable_device_present = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %21, i32 0, i32 2, !dbg !16114
  %frombool32 = zext i1 %tobool31 to i8, !dbg !16115
  store i8 %frombool32, i8* %unauthorizable_device_present, align 1, !dbg !16115
  %22 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16116
  %msg33 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %22, i32 0, i32 1, !dbg !16117
  %arrayidx34 = getelementptr [256 x i8], [256 x i8]* %msg33, i64 0, i64 1, !dbg !16116
  %23 = load i8, i8* %arrayidx34, align 1, !dbg !16116
  %conv35 = zext i8 %23 to i64, !dbg !16116
  %and36 = and i64 %conv35, 8, !dbg !16118
  %tobool37 = icmp ne i64 %and36, 0, !dbg !16119
  %lnot = xor i1 %tobool37, true, !dbg !16119
  %lnot38 = xor i1 %lnot, true, !dbg !16120
  %24 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16121
  %auth_completed = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %24, i32 0, i32 7, !dbg !16122
  %frombool39 = zext i1 %lnot38 to i8, !dbg !16123
  store i8 %frombool39, i8* %auth_completed, align 1, !dbg !16123
  %25 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16124
  %msg40 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %25, i32 0, i32 1, !dbg !16125
  %arrayidx41 = getelementptr [256 x i8], [256 x i8]* %msg40, i64 0, i64 1, !dbg !16124
  %26 = load i8, i8* %arrayidx41, align 1, !dbg !16124
  %conv42 = zext i8 %26 to i64, !dbg !16124
  %and43 = and i64 %conv42, 16, !dbg !16126
  %tobool44 = icmp ne i64 %and43, 0, !dbg !16127
  %lnot45 = xor i1 %tobool44, true, !dbg !16127
  %lnot46 = xor i1 %lnot45, true, !dbg !16128
  %27 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16129
  %encryption_enabled = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %27, i32 0, i32 8, !dbg !16130
  %frombool47 = zext i1 %lnot46 to i8, !dbg !16131
  store i8 %frombool47, i8* %encryption_enabled, align 1, !dbg !16131
  %28 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16132
  %msg48 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %28, i32 0, i32 1, !dbg !16133
  %arrayidx49 = getelementptr [256 x i8], [256 x i8]* %msg48, i64 0, i64 1, !dbg !16132
  %29 = load i8, i8* %arrayidx49, align 1, !dbg !16132
  %conv50 = zext i8 %29 to i64, !dbg !16132
  %and51 = and i64 %conv50, 32, !dbg !16134
  %tobool52 = icmp ne i64 %and51, 0, !dbg !16135
  %lnot53 = xor i1 %tobool52, true, !dbg !16135
  %lnot54 = xor i1 %lnot53, true, !dbg !16136
  %30 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16137
  %repeater_present = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %30, i32 0, i32 9, !dbg !16138
  %frombool55 = zext i1 %lnot54 to i8, !dbg !16139
  store i8 %frombool55, i8* %repeater_present, align 1, !dbg !16139
  %31 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16140
  %msg56 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %31, i32 0, i32 1, !dbg !16141
  %arrayidx57 = getelementptr [256 x i8], [256 x i8]* %msg56, i64 0, i64 1, !dbg !16140
  %32 = load i8, i8* %arrayidx57, align 1, !dbg !16140
  %conv58 = zext i8 %32 to i64, !dbg !16140
  %and59 = and i64 %conv58, 192, !dbg !16142
  %shr = lshr i64 %and59, 6, !dbg !16143
  %conv60 = trunc i64 %shr to i8, !dbg !16144
  %33 = load %struct.drm_dp_query_stream_enc_status_ack_reply*, %struct.drm_dp_query_stream_enc_status_ack_reply** %reply, align 8, !dbg !16145
  %state = getelementptr inbounds %struct.drm_dp_query_stream_enc_status_ack_reply, %struct.drm_dp_query_stream_enc_status_ack_reply* %33, i32 0, i32 10, !dbg !16146
  store i8 %conv60, i8* %state, align 1, !dbg !16147
  ret i1 true, !dbg !16148
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_req(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_req_body* %msg) #0 !dbg !16149 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %msg.addr = alloca %struct.drm_dp_sideband_msg_req_body*, align 8
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !16152, metadata !DIExpression()), !dbg !16153
  store %struct.drm_dp_sideband_msg_req_body* %msg, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body** %msg.addr, metadata !16154, metadata !DIExpression()), !dbg !16155
  %0 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16156
  %1 = bitcast %struct.drm_dp_sideband_msg_req_body* %0 to i8*, !dbg !16157
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 120, i1 false), !dbg !16157
  %2 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16158
  %msg1 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %2, i32 0, i32 1, !dbg !16159
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg1, i64 0, i64 0, !dbg !16158
  %3 = load i8, i8* %arrayidx, align 1, !dbg !16158
  %conv = zext i8 %3 to i32, !dbg !16158
  %and = and i32 %conv, 127, !dbg !16160
  %conv2 = trunc i32 %and to i8, !dbg !16161
  %4 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16162
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %4, i32 0, i32 0, !dbg !16163
  store i8 %conv2, i8* %req_type, align 8, !dbg !16164
  %5 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16165
  %req_type3 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %5, i32 0, i32 0, !dbg !16166
  %6 = load i8, i8* %req_type3, align 8, !dbg !16166
  %conv4 = zext i8 %6 to i32, !dbg !16165
  switch i32 %conv4, label %sw.default [
    i32 2, label %sw.bb
    i32 19, label %sw.bb5
  ], !dbg !16167

sw.bb:                                            ; preds = %entry
  %7 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16168
  %8 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16170
  %call = call zeroext i1 @drm_dp_sideband_parse_connection_status_notify(%struct.drm_dp_sideband_msg_rx* %7, %struct.drm_dp_sideband_msg_req_body* %8) #8, !dbg !16171
  store i1 %call, i1* %retval, align 1, !dbg !16172
  br label %return, !dbg !16172

sw.bb5:                                           ; preds = %entry
  %9 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16173
  %10 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16174
  %call6 = call zeroext i1 @drm_dp_sideband_parse_resource_status_notify(%struct.drm_dp_sideband_msg_rx* %9, %struct.drm_dp_sideband_msg_req_body* %10) #8, !dbg !16175
  store i1 %call6, i1* %retval, align 1, !dbg !16176
  br label %return, !dbg !16176

sw.default:                                       ; preds = %entry
  %11 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16177
  %req_type7 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %11, i32 0, i32 0, !dbg !16177
  %12 = load i8, i8* %req_type7, align 8, !dbg !16177
  %conv8 = zext i8 %12 to i32, !dbg !16177
  %13 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16177
  %req_type9 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %13, i32 0, i32 0, !dbg !16177
  %14 = load i8, i8* %req_type9, align 8, !dbg !16177
  %call10 = call i8* @drm_dp_mst_req_type_str(i8 zeroext %14) #8, !dbg !16177
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.140, i64 0, i64 0), i32 %conv8, i8* %call10) #8, !dbg !16177
  store i1 false, i1* %retval, align 1, !dbg !16178
  br label %return, !dbg !16178

return:                                           ; preds = %sw.default, %sw.bb5, %sw.bb
  %15 = load i1, i1* %retval, align 1, !dbg !16179
  ret i1 %15, !dbg !16179
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_send_up_ack_reply(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb, i32 %req_type, i1 zeroext %broadcast) #0 !dbg !16180 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %req_type.addr = alloca i32, align 4
  %broadcast.addr = alloca i8, align 1
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !16183, metadata !DIExpression()), !dbg !16184
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !16185, metadata !DIExpression()), !dbg !16186
  store i32 %req_type, i32* %req_type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %req_type.addr, metadata !16187, metadata !DIExpression()), !dbg !16188
  %frombool = zext i1 %broadcast to i8
  store i8 %frombool, i8* %broadcast.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %broadcast.addr, metadata !16189, metadata !DIExpression()), !dbg !16190
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !16191, metadata !DIExpression()), !dbg !16192
  %call = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !16193
  %0 = bitcast i8* %call to %struct.drm_dp_sideband_msg_tx*, !dbg !16193
  store %struct.drm_dp_sideband_msg_tx* %0, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16194
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16195
  %tobool = icmp ne %struct.drm_dp_sideband_msg_tx* %1, null, !dbg !16195
  br i1 %tobool, label %if.end, label %if.then, !dbg !16197

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !16198
  br label %return, !dbg !16198

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16199
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16200
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %3, i32 0, i32 4, !dbg !16201
  store %struct.drm_dp_mst_branch* %2, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !16202
  %4 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16203
  %5 = load i32, i32* %req_type.addr, align 4, !dbg !16204
  %conv = trunc i32 %5 to i8, !dbg !16204
  %call1 = call i32 @drm_dp_encode_up_ack_reply(%struct.drm_dp_sideband_msg_tx* %4, i8 zeroext %conv) #8, !dbg !16205
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16206
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %6, i32 0, i32 17, !dbg !16207
  call void @mutex_lock(%struct.mutex* %qlock) #8, !dbg !16208
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16209
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16210
  %call2 = call i32 @process_single_tx_qlock(%struct.drm_dp_mst_topology_mgr* %7, %struct.drm_dp_sideband_msg_tx* %8, i1 zeroext true) #8, !dbg !16211
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16212
  %qlock3 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 17, !dbg !16213
  call void @mutex_unlock(%struct.mutex* %qlock3) #8, !dbg !16214
  %10 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16215
  %11 = bitcast %struct.drm_dp_sideband_msg_tx* %10 to i8*, !dbg !16215
  call void @kfree(i8* %11) #8, !dbg !16216
  store i32 0, i32* %retval, align 4, !dbg !16217
  br label %return, !dbg !16217

return:                                           ; preds = %if.end, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !16218
  ret i32 %12, !dbg !16218
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_connection_status_notify(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_req_body* %msg) #0 !dbg !16219 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %msg.addr = alloca %struct.drm_dp_sideband_msg_req_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !16220, metadata !DIExpression()), !dbg !16221
  store %struct.drm_dp_sideband_msg_req_body* %msg, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body** %msg.addr, metadata !16222, metadata !DIExpression()), !dbg !16223
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !16224, metadata !DIExpression()), !dbg !16225
  store i32 1, i32* %idx, align 4, !dbg !16225
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16226
  %msg1 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !16227
  %1 = load i32, i32* %idx, align 4, !dbg !16228
  %idxprom = sext i32 %1 to i64, !dbg !16226
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg1, i64 0, i64 %idxprom, !dbg !16226
  %2 = load i8, i8* %arrayidx, align 1, !dbg !16226
  %conv = zext i8 %2 to i32, !dbg !16226
  %and = and i32 %conv, 240, !dbg !16229
  %shr = ashr i32 %and, 4, !dbg !16230
  %conv2 = trunc i32 %shr to i8, !dbg !16231
  %3 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16232
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %3, i32 0, i32 1, !dbg !16233
  %conn_stat = bitcast %union.ack_req* %u to %struct.drm_dp_connection_status_notify*, !dbg !16234
  %port_number = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat, i32 0, i32 1, !dbg !16235
  store i8 %conv2, i8* %port_number, align 8, !dbg !16236
  %4 = load i32, i32* %idx, align 4, !dbg !16237
  %inc = add i32 %4, 1, !dbg !16237
  store i32 %inc, i32* %idx, align 4, !dbg !16237
  %5 = load i32, i32* %idx, align 4, !dbg !16238
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16240
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !16241
  %7 = load i8, i8* %curlen, align 1, !dbg !16241
  %conv3 = zext i8 %7 to i32, !dbg !16240
  %cmp = icmp sgt i32 %5, %conv3, !dbg !16242
  br i1 %cmp, label %if.then, label %if.end, !dbg !16243

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !16244

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16245
  %u5 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %8, i32 0, i32 1, !dbg !16246
  %conn_stat6 = bitcast %union.ack_req* %u5 to %struct.drm_dp_connection_status_notify*, !dbg !16247
  %guid = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat6, i32 0, i32 0, !dbg !16248
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid, i64 0, i64 0, !dbg !16249
  %9 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16250
  %msg7 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %9, i32 0, i32 1, !dbg !16251
  %10 = load i32, i32* %idx, align 4, !dbg !16252
  %idxprom8 = sext i32 %10 to i64, !dbg !16250
  %arrayidx9 = getelementptr [256 x i8], [256 x i8]* %msg7, i64 0, i64 %idxprom8, !dbg !16250
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %arraydecay, i8* align 1 %arrayidx9, i64 16, i1 false), !dbg !16249
  %11 = load i32, i32* %idx, align 4, !dbg !16253
  %add = add i32 %11, 16, !dbg !16253
  store i32 %add, i32* %idx, align 4, !dbg !16253
  %12 = load i32, i32* %idx, align 4, !dbg !16254
  %13 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16256
  %curlen10 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %13, i32 0, i32 5, !dbg !16257
  %14 = load i8, i8* %curlen10, align 1, !dbg !16257
  %conv11 = zext i8 %14 to i32, !dbg !16256
  %cmp12 = icmp sgt i32 %12, %conv11, !dbg !16258
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16259

if.then14:                                        ; preds = %if.end
  br label %fail_len, !dbg !16260

if.end15:                                         ; preds = %if.end
  %15 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16261
  %msg16 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %15, i32 0, i32 1, !dbg !16262
  %16 = load i32, i32* %idx, align 4, !dbg !16263
  %idxprom17 = sext i32 %16 to i64, !dbg !16261
  %arrayidx18 = getelementptr [256 x i8], [256 x i8]* %msg16, i64 0, i64 %idxprom17, !dbg !16261
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !16261
  %conv19 = zext i8 %17 to i32, !dbg !16261
  %shr20 = ashr i32 %conv19, 6, !dbg !16264
  %and21 = and i32 %shr20, 1, !dbg !16265
  %tobool = icmp ne i32 %and21, 0, !dbg !16266
  %18 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16267
  %u22 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %18, i32 0, i32 1, !dbg !16268
  %conn_stat23 = bitcast %union.ack_req* %u22 to %struct.drm_dp_connection_status_notify*, !dbg !16269
  %legacy_device_plug_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat23, i32 0, i32 2, !dbg !16270
  %frombool = zext i1 %tobool to i8, !dbg !16271
  store i8 %frombool, i8* %legacy_device_plug_status, align 1, !dbg !16271
  %19 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16272
  %msg24 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %19, i32 0, i32 1, !dbg !16273
  %20 = load i32, i32* %idx, align 4, !dbg !16274
  %idxprom25 = sext i32 %20 to i64, !dbg !16272
  %arrayidx26 = getelementptr [256 x i8], [256 x i8]* %msg24, i64 0, i64 %idxprom25, !dbg !16272
  %21 = load i8, i8* %arrayidx26, align 1, !dbg !16272
  %conv27 = zext i8 %21 to i32, !dbg !16272
  %shr28 = ashr i32 %conv27, 5, !dbg !16275
  %and29 = and i32 %shr28, 1, !dbg !16276
  %tobool30 = icmp ne i32 %and29, 0, !dbg !16277
  %22 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16278
  %u31 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %22, i32 0, i32 1, !dbg !16279
  %conn_stat32 = bitcast %union.ack_req* %u31 to %struct.drm_dp_connection_status_notify*, !dbg !16280
  %displayport_device_plug_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat32, i32 0, i32 3, !dbg !16281
  %frombool33 = zext i1 %tobool30 to i8, !dbg !16282
  store i8 %frombool33, i8* %displayport_device_plug_status, align 2, !dbg !16282
  %23 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16283
  %msg34 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %23, i32 0, i32 1, !dbg !16284
  %24 = load i32, i32* %idx, align 4, !dbg !16285
  %idxprom35 = sext i32 %24 to i64, !dbg !16283
  %arrayidx36 = getelementptr [256 x i8], [256 x i8]* %msg34, i64 0, i64 %idxprom35, !dbg !16283
  %25 = load i8, i8* %arrayidx36, align 1, !dbg !16283
  %conv37 = zext i8 %25 to i32, !dbg !16283
  %shr38 = ashr i32 %conv37, 4, !dbg !16286
  %and39 = and i32 %shr38, 1, !dbg !16287
  %tobool40 = icmp ne i32 %and39, 0, !dbg !16288
  %26 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16289
  %u41 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %26, i32 0, i32 1, !dbg !16290
  %conn_stat42 = bitcast %union.ack_req* %u41 to %struct.drm_dp_connection_status_notify*, !dbg !16291
  %message_capability_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat42, i32 0, i32 4, !dbg !16292
  %frombool43 = zext i1 %tobool40 to i8, !dbg !16293
  store i8 %frombool43, i8* %message_capability_status, align 1, !dbg !16293
  %27 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16294
  %msg44 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %27, i32 0, i32 1, !dbg !16295
  %28 = load i32, i32* %idx, align 4, !dbg !16296
  %idxprom45 = sext i32 %28 to i64, !dbg !16294
  %arrayidx46 = getelementptr [256 x i8], [256 x i8]* %msg44, i64 0, i64 %idxprom45, !dbg !16294
  %29 = load i8, i8* %arrayidx46, align 1, !dbg !16294
  %conv47 = zext i8 %29 to i32, !dbg !16294
  %shr48 = ashr i32 %conv47, 3, !dbg !16297
  %and49 = and i32 %shr48, 1, !dbg !16298
  %tobool50 = icmp ne i32 %and49, 0, !dbg !16299
  %30 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16300
  %u51 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %30, i32 0, i32 1, !dbg !16301
  %conn_stat52 = bitcast %union.ack_req* %u51 to %struct.drm_dp_connection_status_notify*, !dbg !16302
  %input_port = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat52, i32 0, i32 5, !dbg !16303
  %frombool53 = zext i1 %tobool50 to i8, !dbg !16304
  store i8 %frombool53, i8* %input_port, align 4, !dbg !16304
  %31 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16305
  %msg54 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %31, i32 0, i32 1, !dbg !16306
  %32 = load i32, i32* %idx, align 4, !dbg !16307
  %idxprom55 = sext i32 %32 to i64, !dbg !16305
  %arrayidx56 = getelementptr [256 x i8], [256 x i8]* %msg54, i64 0, i64 %idxprom55, !dbg !16305
  %33 = load i8, i8* %arrayidx56, align 1, !dbg !16305
  %conv57 = zext i8 %33 to i32, !dbg !16305
  %and58 = and i32 %conv57, 7, !dbg !16308
  %conv59 = trunc i32 %and58 to i8, !dbg !16309
  %34 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16310
  %u60 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %34, i32 0, i32 1, !dbg !16311
  %conn_stat61 = bitcast %union.ack_req* %u60 to %struct.drm_dp_connection_status_notify*, !dbg !16312
  %peer_device_type = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat61, i32 0, i32 6, !dbg !16313
  store i8 %conv59, i8* %peer_device_type, align 1, !dbg !16314
  %35 = load i32, i32* %idx, align 4, !dbg !16315
  %inc62 = add i32 %35, 1, !dbg !16315
  store i32 %inc62, i32* %idx, align 4, !dbg !16315
  store i1 true, i1* %retval, align 1, !dbg !16316
  br label %return, !dbg !16316

fail_len:                                         ; preds = %if.then14, %if.then
  call void @llvm.dbg.label(metadata !16317), !dbg !16318
  %36 = load i32, i32* %idx, align 4, !dbg !16319
  %37 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16319
  %curlen63 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %37, i32 0, i32 5, !dbg !16319
  %38 = load i8, i8* %curlen63, align 1, !dbg !16319
  %conv64 = zext i8 %38 to i32, !dbg !16319
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.141, i64 0, i64 0), i32 %36, i32 %conv64) #8, !dbg !16319
  store i1 false, i1* %retval, align 1, !dbg !16320
  br label %return, !dbg !16320

return:                                           ; preds = %fail_len, %if.end15
  %39 = load i1, i1* %retval, align 1, !dbg !16321
  ret i1 %39, !dbg !16321
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_sideband_parse_resource_status_notify(%struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_req_body* %msg) #0 !dbg !16322 {
entry:
  %retval = alloca i1, align 1
  %raw.addr = alloca %struct.drm_dp_sideband_msg_rx*, align 8
  %msg.addr = alloca %struct.drm_dp_sideband_msg_req_body*, align 8
  %idx = alloca i32, align 4
  store %struct.drm_dp_sideband_msg_rx* %raw, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_rx** %raw.addr, metadata !16323, metadata !DIExpression()), !dbg !16324
  store %struct.drm_dp_sideband_msg_req_body* %msg, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body** %msg.addr, metadata !16325, metadata !DIExpression()), !dbg !16326
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !16327, metadata !DIExpression()), !dbg !16328
  store i32 1, i32* %idx, align 4, !dbg !16328
  %0 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16329
  %msg1 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %0, i32 0, i32 1, !dbg !16330
  %1 = load i32, i32* %idx, align 4, !dbg !16331
  %idxprom = sext i32 %1 to i64, !dbg !16329
  %arrayidx = getelementptr [256 x i8], [256 x i8]* %msg1, i64 0, i64 %idxprom, !dbg !16329
  %2 = load i8, i8* %arrayidx, align 1, !dbg !16329
  %conv = zext i8 %2 to i32, !dbg !16329
  %and = and i32 %conv, 240, !dbg !16332
  %shr = ashr i32 %and, 4, !dbg !16333
  %conv2 = trunc i32 %shr to i8, !dbg !16334
  %3 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16335
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %3, i32 0, i32 1, !dbg !16336
  %resource_stat = bitcast %union.ack_req* %u to %struct.drm_dp_resource_status_notify*, !dbg !16337
  %port_number = getelementptr inbounds %struct.drm_dp_resource_status_notify, %struct.drm_dp_resource_status_notify* %resource_stat, i32 0, i32 0, !dbg !16338
  store i8 %conv2, i8* %port_number, align 8, !dbg !16339
  %4 = load i32, i32* %idx, align 4, !dbg !16340
  %inc = add i32 %4, 1, !dbg !16340
  store i32 %inc, i32* %idx, align 4, !dbg !16340
  %5 = load i32, i32* %idx, align 4, !dbg !16341
  %6 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16343
  %curlen = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %6, i32 0, i32 5, !dbg !16344
  %7 = load i8, i8* %curlen, align 1, !dbg !16344
  %conv3 = zext i8 %7 to i32, !dbg !16343
  %cmp = icmp sgt i32 %5, %conv3, !dbg !16345
  br i1 %cmp, label %if.then, label %if.end, !dbg !16346

if.then:                                          ; preds = %entry
  br label %fail_len, !dbg !16347

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16348
  %u5 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %8, i32 0, i32 1, !dbg !16349
  %resource_stat6 = bitcast %union.ack_req* %u5 to %struct.drm_dp_resource_status_notify*, !dbg !16350
  %guid = getelementptr inbounds %struct.drm_dp_resource_status_notify, %struct.drm_dp_resource_status_notify* %resource_stat6, i32 0, i32 1, !dbg !16351
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid, i64 0, i64 0, !dbg !16352
  %9 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16353
  %msg7 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %9, i32 0, i32 1, !dbg !16354
  %10 = load i32, i32* %idx, align 4, !dbg !16355
  %idxprom8 = sext i32 %10 to i64, !dbg !16353
  %arrayidx9 = getelementptr [256 x i8], [256 x i8]* %msg7, i64 0, i64 %idxprom8, !dbg !16353
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %arraydecay, i8* align 1 %arrayidx9, i64 16, i1 false), !dbg !16352
  %11 = load i32, i32* %idx, align 4, !dbg !16356
  %add = add i32 %11, 16, !dbg !16356
  store i32 %add, i32* %idx, align 4, !dbg !16356
  %12 = load i32, i32* %idx, align 4, !dbg !16357
  %13 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16359
  %curlen10 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %13, i32 0, i32 5, !dbg !16360
  %14 = load i8, i8* %curlen10, align 1, !dbg !16360
  %conv11 = zext i8 %14 to i32, !dbg !16359
  %cmp12 = icmp sgt i32 %12, %conv11, !dbg !16361
  br i1 %cmp12, label %if.then14, label %if.end15, !dbg !16362

if.then14:                                        ; preds = %if.end
  br label %fail_len, !dbg !16363

if.end15:                                         ; preds = %if.end
  %15 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16364
  %msg16 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %15, i32 0, i32 1, !dbg !16365
  %16 = load i32, i32* %idx, align 4, !dbg !16366
  %idxprom17 = sext i32 %16 to i64, !dbg !16364
  %arrayidx18 = getelementptr [256 x i8], [256 x i8]* %msg16, i64 0, i64 %idxprom17, !dbg !16364
  %17 = load i8, i8* %arrayidx18, align 1, !dbg !16364
  %conv19 = zext i8 %17 to i32, !dbg !16364
  %shl = shl i32 %conv19, 8, !dbg !16367
  %18 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16368
  %msg20 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %18, i32 0, i32 1, !dbg !16369
  %19 = load i32, i32* %idx, align 4, !dbg !16370
  %add21 = add i32 %19, 1, !dbg !16371
  %idxprom22 = sext i32 %add21 to i64, !dbg !16368
  %arrayidx23 = getelementptr [256 x i8], [256 x i8]* %msg20, i64 0, i64 %idxprom22, !dbg !16368
  %20 = load i8, i8* %arrayidx23, align 1, !dbg !16368
  %conv24 = zext i8 %20 to i32, !dbg !16372
  %or = or i32 %shl, %conv24, !dbg !16373
  %conv25 = trunc i32 %or to i16, !dbg !16374
  %21 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg.addr, align 8, !dbg !16375
  %u26 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %21, i32 0, i32 1, !dbg !16376
  %resource_stat27 = bitcast %union.ack_req* %u26 to %struct.drm_dp_resource_status_notify*, !dbg !16377
  %available_pbn = getelementptr inbounds %struct.drm_dp_resource_status_notify, %struct.drm_dp_resource_status_notify* %resource_stat27, i32 0, i32 2, !dbg !16378
  store i16 %conv25, i16* %available_pbn, align 2, !dbg !16379
  %22 = load i32, i32* %idx, align 4, !dbg !16380
  %inc28 = add i32 %22, 1, !dbg !16380
  store i32 %inc28, i32* %idx, align 4, !dbg !16380
  store i1 true, i1* %retval, align 1, !dbg !16381
  br label %return, !dbg !16381

fail_len:                                         ; preds = %if.then14, %if.then
  call void @llvm.dbg.label(metadata !16382), !dbg !16383
  %23 = load i32, i32* %idx, align 4, !dbg !16384
  %24 = load %struct.drm_dp_sideband_msg_rx*, %struct.drm_dp_sideband_msg_rx** %raw.addr, align 8, !dbg !16384
  %curlen29 = getelementptr inbounds %struct.drm_dp_sideband_msg_rx, %struct.drm_dp_sideband_msg_rx* %24, i32 0, i32 5, !dbg !16384
  %25 = load i8, i8* %curlen29, align 1, !dbg !16384
  %conv30 = zext i8 %25 to i32, !dbg !16384
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.142, i64 0, i64 0), i32 %23, i32 %conv30) #8, !dbg !16384
  store i1 false, i1* %retval, align 1, !dbg !16385
  br label %return, !dbg !16385

return:                                           ; preds = %fail_len, %if.end15
  %26 = load i1, i1* %retval, align 1, !dbg !16386
  ret i1 %26, !dbg !16386
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_encode_up_ack_reply(%struct.drm_dp_sideband_msg_tx* %msg, i8 zeroext %req_type) #0 !dbg !16387 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %req_type.addr = alloca i8, align 1
  %reply = alloca %struct.drm_dp_sideband_msg_reply_body, align 2
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !16390, metadata !DIExpression()), !dbg !16391
  store i8 %req_type, i8* %req_type.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %req_type.addr, metadata !16392, metadata !DIExpression()), !dbg !16393
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body* %reply, metadata !16394, metadata !DIExpression()), !dbg !16395
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !16396
  store i8 0, i8* %reply_type, align 2, !dbg !16397
  %0 = load i8, i8* %req_type.addr, align 1, !dbg !16398
  %req_type1 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 1, !dbg !16399
  store i8 %0, i8* %req_type1, align 1, !dbg !16400
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !16401
  call void @drm_dp_encode_sideband_reply(%struct.drm_dp_sideband_msg_reply_body* %reply, %struct.drm_dp_sideband_msg_tx* %1) #8, !dbg !16402
  ret i32 0, !dbg !16403
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_encode_sideband_reply(%struct.drm_dp_sideband_msg_reply_body* %rep, %struct.drm_dp_sideband_msg_tx* %raw) #0 !dbg !16404 {
entry:
  %rep.addr = alloca %struct.drm_dp_sideband_msg_reply_body*, align 8
  %raw.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %idx = alloca i32, align 4
  %buf = alloca i8*, align 8
  store %struct.drm_dp_sideband_msg_reply_body* %rep, %struct.drm_dp_sideband_msg_reply_body** %rep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_reply_body** %rep.addr, metadata !16407, metadata !DIExpression()), !dbg !16408
  store %struct.drm_dp_sideband_msg_tx* %raw, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %raw.addr, metadata !16409, metadata !DIExpression()), !dbg !16410
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !16411, metadata !DIExpression()), !dbg !16412
  store i32 0, i32* %idx, align 4, !dbg !16412
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !16413, metadata !DIExpression()), !dbg !16414
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8, !dbg !16415
  %msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %0, i32 0, i32 0, !dbg !16416
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %msg, i64 0, i64 0, !dbg !16415
  store i8* %arraydecay, i8** %buf, align 8, !dbg !16414
  %1 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %rep.addr, align 8, !dbg !16417
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %1, i32 0, i32 0, !dbg !16418
  %2 = load i8, i8* %reply_type, align 2, !dbg !16418
  %conv = zext i8 %2 to i32, !dbg !16417
  %and = and i32 %conv, 1, !dbg !16419
  %shl = shl i32 %and, 7, !dbg !16420
  %3 = load %struct.drm_dp_sideband_msg_reply_body*, %struct.drm_dp_sideband_msg_reply_body** %rep.addr, align 8, !dbg !16421
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %3, i32 0, i32 1, !dbg !16422
  %4 = load i8, i8* %req_type, align 1, !dbg !16422
  %conv1 = zext i8 %4 to i32, !dbg !16421
  %and2 = and i32 %conv1, 127, !dbg !16423
  %or = or i32 %shl, %and2, !dbg !16424
  %conv3 = trunc i32 %or to i8, !dbg !16425
  %5 = load i8*, i8** %buf, align 8, !dbg !16426
  %6 = load i32, i32* %idx, align 4, !dbg !16427
  %inc = add i32 %6, 1, !dbg !16427
  store i32 %inc, i32* %idx, align 4, !dbg !16427
  %idxprom = sext i32 %6 to i64, !dbg !16426
  %arrayidx = getelementptr i8, i8* %5, i64 %idxprom, !dbg !16426
  store i8 %conv3, i8* %arrayidx, align 1, !dbg !16428
  %7 = load i32, i32* %idx, align 4, !dbg !16429
  %conv4 = trunc i32 %7 to i8, !dbg !16429
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %raw.addr, align 8, !dbg !16430
  %cur_len = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %8, i32 0, i32 3, !dbg !16431
  store i8 %conv4, i8* %cur_len, align 1, !dbg !16432
  ret void, !dbg !16433
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_assign_payload_id(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_vcpi* %vcpi) #0 !dbg !16434 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %vcpi.addr = alloca %struct.drm_dp_vcpi*, align 8
  %ret = alloca i32, align 4
  %vcpi_ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !16437, metadata !DIExpression()), !dbg !16438
  store %struct.drm_dp_vcpi* %vcpi, %struct.drm_dp_vcpi** %vcpi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi** %vcpi.addr, metadata !16439, metadata !DIExpression()), !dbg !16440
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16441, metadata !DIExpression()), !dbg !16442
  call void @llvm.dbg.declare(metadata i32* %vcpi_ret, metadata !16443, metadata !DIExpression()), !dbg !16444
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16445
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 19, !dbg !16446
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !16447
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16448
  %payload_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 22, !dbg !16449
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16450
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 5, !dbg !16451
  %3 = load i32, i32* %max_payloads, align 8, !dbg !16451
  %add = add i32 %3, 1, !dbg !16452
  %conv = sext i32 %add to i64, !dbg !16450
  %call = call i64 @find_first_zero_bit(i64* %payload_mask, i64 %conv) #8, !dbg !16453
  %conv1 = trunc i64 %call to i32, !dbg !16453
  store i32 %conv1, i32* %ret, align 4, !dbg !16454
  %4 = load i32, i32* %ret, align 4, !dbg !16455
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16457
  %max_payloads2 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 5, !dbg !16458
  %6 = load i32, i32* %max_payloads2, align 8, !dbg !16458
  %cmp = icmp sgt i32 %4, %6, !dbg !16459
  br i1 %cmp, label %if.then, label %if.end, !dbg !16460

if.then:                                          ; preds = %entry
  store i32 -22, i32* %ret, align 4, !dbg !16461
  %7 = load i32, i32* %ret, align 4, !dbg !16463
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.143, i64 0, i64 0), i32 %7) #8, !dbg !16463
  br label %out_unlock, !dbg !16464

if.end:                                           ; preds = %entry
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16465
  %vcpi_mask = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %8, i32 0, i32 23, !dbg !16466
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16467
  %max_payloads4 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %9, i32 0, i32 5, !dbg !16468
  %10 = load i32, i32* %max_payloads4, align 8, !dbg !16468
  %add5 = add i32 %10, 1, !dbg !16469
  %conv6 = sext i32 %add5 to i64, !dbg !16467
  %call7 = call i64 @find_first_zero_bit(i64* %vcpi_mask, i64 %conv6) #8, !dbg !16470
  %conv8 = trunc i64 %call7 to i32, !dbg !16470
  store i32 %conv8, i32* %vcpi_ret, align 4, !dbg !16471
  %11 = load i32, i32* %vcpi_ret, align 4, !dbg !16472
  %12 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16474
  %max_payloads9 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %12, i32 0, i32 5, !dbg !16475
  %13 = load i32, i32* %max_payloads9, align 8, !dbg !16475
  %cmp10 = icmp sgt i32 %11, %13, !dbg !16476
  br i1 %cmp10, label %if.then12, label %if.end13, !dbg !16477

if.then12:                                        ; preds = %if.end
  store i32 -22, i32* %ret, align 4, !dbg !16478
  %14 = load i32, i32* %ret, align 4, !dbg !16480
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.144, i64 0, i64 0), i32 %14) #8, !dbg !16480
  br label %out_unlock, !dbg !16481

if.end13:                                         ; preds = %if.end
  %15 = load i32, i32* %ret, align 4, !dbg !16482
  %conv14 = sext i32 %15 to i64, !dbg !16482
  %16 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16483
  %payload_mask15 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %16, i32 0, i32 22, !dbg !16484
  call void @set_bit(i64 %conv14, i64* %payload_mask15) #8, !dbg !16485
  %17 = load i32, i32* %vcpi_ret, align 4, !dbg !16486
  %conv16 = sext i32 %17 to i64, !dbg !16486
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16487
  %vcpi_mask17 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %18, i32 0, i32 23, !dbg !16488
  call void @set_bit(i64 %conv16, i64* %vcpi_mask17) #8, !dbg !16489
  %19 = load i32, i32* %vcpi_ret, align 4, !dbg !16490
  %add18 = add i32 %19, 1, !dbg !16491
  %20 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi.addr, align 8, !dbg !16492
  %vcpi19 = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %20, i32 0, i32 0, !dbg !16493
  store i32 %add18, i32* %vcpi19, align 4, !dbg !16494
  %21 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi.addr, align 8, !dbg !16495
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16496
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %22, i32 0, i32 20, !dbg !16497
  %23 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !16497
  %24 = load i32, i32* %ret, align 4, !dbg !16498
  %sub = sub i32 %24, 1, !dbg !16499
  %idxprom = sext i32 %sub to i64, !dbg !16496
  %arrayidx = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %23, i64 %idxprom, !dbg !16496
  store %struct.drm_dp_vcpi* %21, %struct.drm_dp_vcpi** %arrayidx, align 8, !dbg !16500
  br label %out_unlock, !dbg !16496

out_unlock:                                       ; preds = %if.end13, %if.then12, %if.then
  call void @llvm.dbg.label(metadata !16501), !dbg !16502
  %25 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16503
  %payload_lock20 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %25, i32 0, i32 19, !dbg !16504
  call void @mutex_unlock(%struct.mutex* %payload_lock20) #8, !dbg !16505
  %26 = load i32, i32* %ret, align 4, !dbg !16506
  ret i32 %26, !dbg !16507
}

; Function Attrs: noredzone
declare dso_local i64 @find_first_zero_bit(i64*, i64) #3

; Function Attrs: noredzone
declare dso_local void @drm_edid_get_monitor_name(%struct.edid*, i8*, i32) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_mst_port_downstream_of_branch(%struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_branch* %branch) #0 !dbg !16508 {
entry:
  %retval = alloca i1, align 1
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %branch.addr = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !16511, metadata !DIExpression()), !dbg !16512
  store %struct.drm_dp_mst_branch* %branch, %struct.drm_dp_mst_branch** %branch.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %branch.addr, metadata !16513, metadata !DIExpression()), !dbg !16514
  br label %while.cond, !dbg !16515

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16516
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 15, !dbg !16517
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !16517
  %tobool = icmp ne %struct.drm_dp_mst_branch* %1, null, !dbg !16515
  br i1 %tobool, label %while.body, label %while.end, !dbg !16515

while.body:                                       ; preds = %while.cond
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16518
  %parent1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 15, !dbg !16521
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent1, align 8, !dbg !16521
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %branch.addr, align 8, !dbg !16522
  %cmp = icmp eq %struct.drm_dp_mst_branch* %3, %4, !dbg !16523
  br i1 %cmp, label %if.then, label %if.end, !dbg !16524

if.then:                                          ; preds = %while.body
  store i1 true, i1* %retval, align 1, !dbg !16525
  br label %return, !dbg !16525

if.end:                                           ; preds = %while.body
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16526
  %parent2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 15, !dbg !16528
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent2, align 8, !dbg !16528
  %port_parent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %6, i32 0, i32 7, !dbg !16529
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent, align 8, !dbg !16529
  %tobool3 = icmp ne %struct.drm_dp_mst_port* %7, null, !dbg !16526
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !16530

if.then4:                                         ; preds = %if.end
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16531
  %parent5 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 15, !dbg !16532
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent5, align 8, !dbg !16532
  %port_parent6 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %9, i32 0, i32 7, !dbg !16533
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_parent6, align 8, !dbg !16533
  store %struct.drm_dp_mst_port* %10, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16534
  br label %if.end7, !dbg !16535

if.else:                                          ; preds = %if.end
  br label %while.end, !dbg !16536

if.end7:                                          ; preds = %if.then4
  br label %while.cond, !dbg !16515, !llvm.loop !16537

while.end:                                        ; preds = %if.else, %while.cond
  store i1 false, i1* %retval, align 1, !dbg !16539
  br label %return, !dbg !16539

return:                                           ; preds = %while.end, %if.then
  %11 = load i1, i1* %retval, align 1, !dbg !16540
  ret i1 %11, !dbg !16540
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_atomic_check_port_bw_limit(%struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_topology_state* %state) #0 !dbg !16541 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %state.addr = alloca %struct.drm_dp_mst_topology_state*, align 8
  %vcpi = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %pbn_used = alloca i32, align 4
  %found = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__mptr16 = alloca i8*, align 8
  %tmp21 = alloca %struct.drm_dp_vcpi_allocation*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp47 = alloca i64, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !16544, metadata !DIExpression()), !dbg !16545
  store %struct.drm_dp_mst_topology_state* %state, %struct.drm_dp_mst_topology_state** %state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_state** %state.addr, metadata !16546, metadata !DIExpression()), !dbg !16547
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi_allocation** %vcpi, metadata !16548, metadata !DIExpression()), !dbg !16549
  call void @llvm.dbg.declare(metadata i32* %pbn_used, metadata !16550, metadata !DIExpression()), !dbg !16551
  store i32 0, i32* %pbn_used, align 4, !dbg !16551
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16552
  %pdt = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 6, !dbg !16554
  %1 = load i8, i8* %pdt, align 4, !dbg !16554
  %conv = zext i8 %1 to i32, !dbg !16552
  %cmp = icmp eq i32 %conv, 0, !dbg !16555
  br i1 %cmp, label %if.then, label %if.end, !dbg !16556

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16557
  br label %return, !dbg !16557

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16558
  %pdt2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 6, !dbg !16560
  %3 = load i8, i8* %pdt2, align 4, !dbg !16560
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16561
  %mcs = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %4, i32 0, i32 4, !dbg !16562
  %5 = load i8, i8* %mcs, align 2, !dbg !16562
  %tobool = trunc i8 %5 to i1, !dbg !16562
  %call = call zeroext i1 @drm_dp_mst_is_end_device(i8 zeroext %3, i1 zeroext %tobool) #8, !dbg !16563
  br i1 %call, label %if.then3, label %if.else, !dbg !16564

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8* %found, metadata !16565, metadata !DIExpression()), !dbg !16567
  store i8 0, i8* %found, align 1, !dbg !16567
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16568, metadata !DIExpression()), !dbg !16571
  %6 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state.addr, align 8, !dbg !16571
  %vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %6, i32 0, i32 1, !dbg !16571
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %vcpis, i32 0, i32 0, !dbg !16571
  %7 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16571
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !16571
  store i8* %8, i8** %__mptr, align 8, !dbg !16571
  br label %do.body, !dbg !16571

do.body:                                          ; preds = %if.then3
  br label %do.end, !dbg !16572

do.end:                                           ; preds = %do.body
  %9 = load i8*, i8** %__mptr, align 8, !dbg !16571
  %add.ptr = getelementptr i8, i8* %9, i64 -24, !dbg !16571
  %10 = bitcast i8* %add.ptr to %struct.drm_dp_vcpi_allocation*, !dbg !16571
  store %struct.drm_dp_vcpi_allocation* %10, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !16572
  %11 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp, align 8, !dbg !16571
  store %struct.drm_dp_vcpi_allocation* %11, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !16574
  br label %for.cond, !dbg !16574

for.cond:                                         ; preds = %do.end20, %do.end
  %12 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !16575
  %next4 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %12, i32 0, i32 4, !dbg !16575
  %13 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state.addr, align 8, !dbg !16575
  %vcpis5 = getelementptr inbounds %struct.drm_dp_mst_topology_state, %struct.drm_dp_mst_topology_state* %13, i32 0, i32 1, !dbg !16575
  %cmp6 = icmp eq %struct.list_head* %next4, %vcpis5, !dbg !16575
  %lnot = xor i1 %cmp6, true, !dbg !16575
  br i1 %lnot, label %for.body, label %for.end, !dbg !16574

for.body:                                         ; preds = %for.cond
  %14 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !16577
  %port8 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %14, i32 0, i32 0, !dbg !16580
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port8, align 8, !dbg !16580
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16581
  %cmp9 = icmp ne %struct.drm_dp_mst_port* %15, %16, !dbg !16582
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !16583

if.then11:                                        ; preds = %for.body
  br label %for.inc, !dbg !16584

if.end12:                                         ; preds = %for.body
  %17 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !16585
  %pbn = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %17, i32 0, i32 2, !dbg !16587
  %18 = load i32, i32* %pbn, align 4, !dbg !16587
  %tobool13 = icmp ne i32 %18, 0, !dbg !16585
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !16588

if.then14:                                        ; preds = %if.end12
  store i32 0, i32* %retval, align 4, !dbg !16589
  br label %return, !dbg !16589

if.end15:                                         ; preds = %if.end12
  store i8 1, i8* %found, align 1, !dbg !16590
  br label %for.end, !dbg !16591

for.inc:                                          ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i8** %__mptr16, metadata !16592, metadata !DIExpression()), !dbg !16594
  %19 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !16594
  %next17 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %19, i32 0, i32 4, !dbg !16594
  %next18 = getelementptr inbounds %struct.list_head, %struct.list_head* %next17, i32 0, i32 0, !dbg !16594
  %20 = load %struct.list_head*, %struct.list_head** %next18, align 8, !dbg !16594
  %21 = bitcast %struct.list_head* %20 to i8*, !dbg !16594
  store i8* %21, i8** %__mptr16, align 8, !dbg !16594
  br label %do.body19, !dbg !16594

do.body19:                                        ; preds = %for.inc
  br label %do.end20, !dbg !16595

do.end20:                                         ; preds = %do.body19
  %22 = load i8*, i8** %__mptr16, align 8, !dbg !16594
  %add.ptr22 = getelementptr i8, i8* %22, i64 -24, !dbg !16594
  %23 = bitcast i8* %add.ptr22 to %struct.drm_dp_vcpi_allocation*, !dbg !16594
  store %struct.drm_dp_vcpi_allocation* %23, %struct.drm_dp_vcpi_allocation** %tmp21, align 8, !dbg !16595
  %24 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %tmp21, align 8, !dbg !16594
  store %struct.drm_dp_vcpi_allocation* %24, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !16575
  br label %for.cond, !dbg !16575, !llvm.loop !16597

for.end:                                          ; preds = %if.end15, %for.cond
  %25 = load i8, i8* %found, align 1, !dbg !16599
  %tobool23 = trunc i8 %25 to i1, !dbg !16599
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !16601

if.then24:                                        ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !16602
  br label %return, !dbg !16602

if.end25:                                         ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !16603, metadata !DIExpression()), !dbg !16606
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16606
  %full_pbn = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %26, i32 0, i32 11, !dbg !16606
  %27 = load i16, i16* %full_pbn, align 2, !dbg !16606
  %tobool26 = icmp ne i16 %27, 0, !dbg !16606
  %lnot27 = xor i1 %tobool26, true, !dbg !16606
  %lnot28 = xor i1 %lnot27, true, !dbg !16606
  %lnot29 = xor i1 %lnot28, true, !dbg !16606
  %lnot.ext = zext i1 %lnot29 to i32, !dbg !16606
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !16606
  %28 = load i32, i32* %__ret_warn_on, align 4, !dbg !16607
  %tobool30 = icmp ne i32 %28, 0, !dbg !16607
  %lnot31 = xor i1 %tobool30, true, !dbg !16607
  %lnot33 = xor i1 %lnot31, true, !dbg !16607
  %lnot.ext34 = zext i1 %lnot33 to i32, !dbg !16607
  %conv35 = sext i32 %lnot.ext34 to i64, !dbg !16607
  %tobool36 = icmp ne i64 %conv35, 0, !dbg !16607
  br i1 %tobool36, label %if.then37, label %if.end46, !dbg !16606

if.then37:                                        ; preds = %if.end25
  br label %do.body38, !dbg !16607

do.body38:                                        ; preds = %if.then37
  br label %do.body39, !dbg !16609

do.body39:                                        ; preds = %do.body38
  br label %do.end40, !dbg !16611

do.end40:                                         ; preds = %do.body39
  br label %do.body41, !dbg !16609

do.body41:                                        ; preds = %do.end40
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 5113, i32 2305, i64 12) #7, !dbg !16613, !srcloc !16615
  br label %do.end42, !dbg !16613

do.end42:                                         ; preds = %do.body41
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 382) #7, !dbg !16616, !srcloc !16618
  br label %do.body43, !dbg !16609

do.body43:                                        ; preds = %do.end42
  br label %do.end44, !dbg !16619

do.end44:                                         ; preds = %do.body43
  br label %do.end45, !dbg !16609

do.end45:                                         ; preds = %do.end44
  br label %if.end46, !dbg !16609

if.end46:                                         ; preds = %do.end45, %if.end25
  %29 = load i32, i32* %__ret_warn_on, align 4, !dbg !16606
  %tobool48 = icmp ne i32 %29, 0, !dbg !16606
  %lnot49 = xor i1 %tobool48, true, !dbg !16606
  %lnot51 = xor i1 %lnot49, true, !dbg !16606
  %lnot.ext52 = zext i1 %lnot51 to i32, !dbg !16606
  %conv53 = sext i32 %lnot.ext52 to i64, !dbg !16606
  store i64 %conv53, i64* %tmp47, align 8, !dbg !16607
  %30 = load i64, i64* %tmp47, align 8, !dbg !16606
  %tobool54 = icmp ne i64 %30, 0, !dbg !16621
  br i1 %tobool54, label %if.then55, label %if.end56, !dbg !16622

if.then55:                                        ; preds = %if.end46
  store i32 -22, i32* %retval, align 4, !dbg !16623
  br label %return, !dbg !16623

if.end56:                                         ; preds = %if.end46
  %31 = load %struct.drm_dp_vcpi_allocation*, %struct.drm_dp_vcpi_allocation** %vcpi, align 8, !dbg !16624
  %pbn57 = getelementptr inbounds %struct.drm_dp_vcpi_allocation, %struct.drm_dp_vcpi_allocation* %31, i32 0, i32 2, !dbg !16625
  %32 = load i32, i32* %pbn57, align 4, !dbg !16625
  store i32 %32, i32* %pbn_used, align 4, !dbg !16626
  br label %if.end63, !dbg !16627

if.else:                                          ; preds = %if.end
  %33 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16628
  %mstb = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %33, i32 0, i32 13, !dbg !16630
  %34 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !16630
  %35 = load %struct.drm_dp_mst_topology_state*, %struct.drm_dp_mst_topology_state** %state.addr, align 8, !dbg !16631
  %call58 = call i32 @drm_dp_mst_atomic_check_mstb_bw_limit(%struct.drm_dp_mst_branch* %34, %struct.drm_dp_mst_topology_state* %35) #8, !dbg !16632
  store i32 %call58, i32* %pbn_used, align 4, !dbg !16633
  %36 = load i32, i32* %pbn_used, align 4, !dbg !16634
  %cmp59 = icmp sle i32 %36, 0, !dbg !16636
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !16637

if.then61:                                        ; preds = %if.else
  %37 = load i32, i32* %pbn_used, align 4, !dbg !16638
  store i32 %37, i32* %retval, align 4, !dbg !16639
  br label %return, !dbg !16639

if.end62:                                         ; preds = %if.else
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.end56
  %38 = load i32, i32* %pbn_used, align 4, !dbg !16640
  %39 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16642
  %full_pbn64 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %39, i32 0, i32 11, !dbg !16643
  %40 = load i16, i16* %full_pbn64, align 2, !dbg !16643
  %conv65 = zext i16 %40 to i32, !dbg !16642
  %cmp66 = icmp sgt i32 %38, %conv65, !dbg !16644
  br i1 %cmp66, label %if.then68, label %if.end71, !dbg !16645

if.then68:                                        ; preds = %if.end63
  %41 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16646
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %41, i32 0, i32 15, !dbg !16646
  %42 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !16646
  %43 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16646
  %44 = load i32, i32* %pbn_used, align 4, !dbg !16646
  %45 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16646
  %full_pbn69 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %45, i32 0, i32 11, !dbg !16646
  %46 = load i16, i16* %full_pbn69, align 2, !dbg !16646
  %conv70 = zext i16 %46 to i32, !dbg !16646
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.158, i64 0, i64 0), %struct.drm_dp_mst_branch* %42, %struct.drm_dp_mst_port* %43, i32 %44, i32 %conv70) #8, !dbg !16646
  store i32 -28, i32* %retval, align 4, !dbg !16648
  br label %return, !dbg !16648

if.end71:                                         ; preds = %if.end63
  %47 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16649
  %parent72 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %47, i32 0, i32 15, !dbg !16649
  %48 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent72, align 8, !dbg !16649
  %49 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16649
  %50 = load i32, i32* %pbn_used, align 4, !dbg !16649
  %51 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !16649
  %full_pbn73 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %51, i32 0, i32 11, !dbg !16649
  %52 = load i16, i16* %full_pbn73, align 2, !dbg !16649
  %conv74 = zext i16 %52 to i32, !dbg !16649
  call void (i32, i8*, ...) @__drm_dbg(i32 16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.159, i64 0, i64 0), %struct.drm_dp_mst_branch* %48, %struct.drm_dp_mst_port* %49, i32 %50, i32 %conv74) #8, !dbg !16649
  %53 = load i32, i32* %pbn_used, align 4, !dbg !16650
  store i32 %53, i32* %retval, align 4, !dbg !16651
  br label %return, !dbg !16651

return:                                           ; preds = %if.end71, %if.then68, %if.then61, %if.then55, %if.then24, %if.then14, %if.then
  %54 = load i32, i32* %retval, align 4, !dbg !16652
  ret i32 %54, !dbg !16652
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_mst_is_end_device(i8 zeroext %pdt, i1 zeroext %mcs) #0 !dbg !16653 {
entry:
  %retval = alloca i1, align 1
  %pdt.addr = alloca i8, align 1
  %mcs.addr = alloca i8, align 1
  store i8 %pdt, i8* %pdt.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %pdt.addr, metadata !16656, metadata !DIExpression()), !dbg !16657
  %frombool = zext i1 %mcs to i8
  store i8 %frombool, i8* %mcs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %mcs.addr, metadata !16658, metadata !DIExpression()), !dbg !16659
  %0 = load i8, i8* %pdt.addr, align 1, !dbg !16660
  %conv = zext i8 %0 to i32, !dbg !16660
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 3, label %sw.bb
    i32 2, label %sw.bb1
  ], !dbg !16661

sw.bb:                                            ; preds = %entry, %entry
  store i1 true, i1* %retval, align 1, !dbg !16662
  br label %return, !dbg !16662

sw.bb1:                                           ; preds = %entry
  %1 = load i8, i8* %mcs.addr, align 1, !dbg !16664
  %tobool = trunc i8 %1 to i1, !dbg !16664
  br i1 %tobool, label %if.end, label %if.then, !dbg !16666

if.then:                                          ; preds = %sw.bb1
  store i1 true, i1* %retval, align 1, !dbg !16667
  br label %return, !dbg !16667

if.end:                                           ; preds = %sw.bb1
  store i1 false, i1* %retval, align 1, !dbg !16668
  br label %return, !dbg !16668

sw.epilog:                                        ; preds = %entry
  store i1 true, i1* %retval, align 1, !dbg !16669
  br label %return, !dbg !16669

return:                                           ; preds = %sw.epilog, %if.end, %if.then, %sw.bb
  %2 = load i1, i1* %retval, align 1, !dbg !16670
  ret i1 %2, !dbg !16670
}

; Function Attrs: noredzone
declare dso_local void @__drm_atomic_helper_private_obj_duplicate_state(%struct.drm_private_obj*, %struct.drm_private_state*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_send_clear_payload_id_table(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb) #0 !dbg !16671 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !16674, metadata !DIExpression()), !dbg !16675
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !16676, metadata !DIExpression()), !dbg !16677
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !16678, metadata !DIExpression()), !dbg !16679
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16680, metadata !DIExpression()), !dbg !16681
  %call = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !16682
  %0 = bitcast i8* %call to %struct.drm_dp_sideband_msg_tx*, !dbg !16682
  store %struct.drm_dp_sideband_msg_tx* %0, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16683
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16684
  %tobool = icmp ne %struct.drm_dp_sideband_msg_tx* %1, null, !dbg !16684
  br i1 %tobool, label %if.end, label %if.then, !dbg !16686

if.then:                                          ; preds = %entry
  br label %return, !dbg !16687

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16688
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16689
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %3, i32 0, i32 4, !dbg !16690
  store %struct.drm_dp_mst_branch* %2, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !16691
  %4 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16692
  call void @build_clear_payload_id_table(%struct.drm_dp_sideband_msg_tx* %4) #8, !dbg !16693
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16694
  %6 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16695
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %5, %struct.drm_dp_sideband_msg_tx* %6) #8, !dbg !16696
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16697
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16698
  %call1 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %7, %struct.drm_dp_sideband_msg_tx* %8) #8, !dbg !16699
  store i32 %call1, i32* %ret, align 4, !dbg !16700
  %9 = load i32, i32* %ret, align 4, !dbg !16701
  %cmp = icmp sgt i32 %9, 0, !dbg !16703
  br i1 %cmp, label %land.lhs.true, label %if.end5, !dbg !16704

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16705
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %10, i32 0, i32 9, !dbg !16706
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !16707
  %11 = load i8, i8* %reply_type, align 2, !dbg !16707
  %conv = zext i8 %11 to i32, !dbg !16705
  %cmp2 = icmp eq i32 %conv, 1, !dbg !16708
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !16709

if.then4:                                         ; preds = %land.lhs.true
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.161, i64 0, i64 0)) #8, !dbg !16710
  br label %if.end5, !dbg !16710

if.end5:                                          ; preds = %if.then4, %land.lhs.true, %if.end
  %12 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16711
  %13 = bitcast %struct.drm_dp_sideband_msg_tx* %12 to i8*, !dbg !16711
  call void @kfree(i8* %13) #8, !dbg !16712
  br label %return, !dbg !16713

return:                                           ; preds = %if.end5, %if.then
  ret void, !dbg !16713
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_check_and_send_link_address(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb) #0 !dbg !16714 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %ret = alloca i32, align 4
  %changed = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %mstb_child = alloca %struct.drm_dp_mst_branch*, align 8
  %__mptr30 = alloca i8*, align 8
  %tmp35 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !16717, metadata !DIExpression()), !dbg !16718
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !16719, metadata !DIExpression()), !dbg !16720
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !16721, metadata !DIExpression()), !dbg !16722
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16723, metadata !DIExpression()), !dbg !16724
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !16725, metadata !DIExpression()), !dbg !16726
  store i8 0, i8* %changed, align 1, !dbg !16726
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16727
  %link_address_sent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 9, !dbg !16729
  %1 = load i8, i8* %link_address_sent, align 8, !dbg !16729
  %tobool = trunc i8 %1 to i1, !dbg !16729
  br i1 %tobool, label %if.end5, label %if.then, !dbg !16730

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16731
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16733
  %call = call i32 @drm_dp_send_link_address(%struct.drm_dp_mst_topology_mgr* %2, %struct.drm_dp_mst_branch* %3) #8, !dbg !16734
  store i32 %call, i32* %ret, align 4, !dbg !16735
  %4 = load i32, i32* %ret, align 4, !dbg !16736
  %cmp = icmp eq i32 %4, 1, !dbg !16738
  br i1 %cmp, label %if.then1, label %if.else, !dbg !16739

if.then1:                                         ; preds = %if.then
  store i8 1, i8* %changed, align 1, !dbg !16740
  br label %if.end4, !dbg !16741

if.else:                                          ; preds = %if.then
  %5 = load i32, i32* %ret, align 4, !dbg !16742
  %cmp2 = icmp slt i32 %5, 0, !dbg !16744
  br i1 %cmp2, label %if.then3, label %if.end, !dbg !16745

if.then3:                                         ; preds = %if.else
  %6 = load i32, i32* %ret, align 4, !dbg !16746
  store i32 %6, i32* %retval, align 4, !dbg !16747
  br label %return, !dbg !16747

if.end:                                           ; preds = %if.else
  br label %if.end4

if.end4:                                          ; preds = %if.end, %if.then1
  br label %if.end5, !dbg !16748

if.end5:                                          ; preds = %if.end4, %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16749, metadata !DIExpression()), !dbg !16752
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16752
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %7, i32 0, i32 6, !dbg !16752
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !16752
  %8 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16752
  %9 = bitcast %struct.list_head* %8 to i8*, !dbg !16752
  store i8* %9, i8** %__mptr, align 8, !dbg !16752
  br label %do.body, !dbg !16752

do.body:                                          ; preds = %if.end5
  br label %do.end, !dbg !16753

do.end:                                           ; preds = %do.body
  %10 = load i8*, i8** %__mptr, align 8, !dbg !16752
  %add.ptr = getelementptr i8, i8* %10, i64 -24, !dbg !16752
  %11 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !16752
  store %struct.drm_dp_mst_port* %11, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !16753
  %12 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !16752
  store %struct.drm_dp_mst_port* %12, %struct.drm_dp_mst_port** %port, align 8, !dbg !16755
  br label %for.cond, !dbg !16755

for.cond:                                         ; preds = %do.end34, %do.end
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16756
  %next6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 12, !dbg !16756
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16756
  %ports7 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %14, i32 0, i32 6, !dbg !16756
  %cmp8 = icmp eq %struct.list_head* %next6, %ports7, !dbg !16756
  %lnot = xor i1 %cmp8, true, !dbg !16756
  br i1 %lnot, label %for.body, label %for.end, !dbg !16755

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb_child, metadata !16758, metadata !DIExpression()), !dbg !16760
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb_child, align 8, !dbg !16760
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16761
  %input = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 3, !dbg !16763
  %16 = load i8, i8* %input, align 1, !dbg !16763
  %tobool9 = trunc i8 %16 to i1, !dbg !16763
  br i1 %tobool9, label %if.then11, label %lor.lhs.false, !dbg !16764

lor.lhs.false:                                    ; preds = %for.body
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16765
  %ddps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %17, i32 0, i32 5, !dbg !16766
  %18 = load i8, i8* %ddps, align 1, !dbg !16766
  %tobool10 = trunc i8 %18 to i1, !dbg !16766
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !16767

if.then11:                                        ; preds = %lor.lhs.false, %for.body
  br label %for.inc, !dbg !16768

if.end12:                                         ; preds = %lor.lhs.false
  %19 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16769
  %mstb13 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %19, i32 0, i32 13, !dbg !16771
  %20 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb13, align 8, !dbg !16771
  %tobool14 = icmp ne %struct.drm_dp_mst_branch* %20, null, !dbg !16769
  br i1 %tobool14, label %if.then15, label %if.end18, !dbg !16772

if.then15:                                        ; preds = %if.end12
  %21 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16773
  %22 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16774
  %mstb16 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %22, i32 0, i32 13, !dbg !16775
  %23 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb16, align 8, !dbg !16775
  %call17 = call %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated(%struct.drm_dp_mst_topology_mgr* %21, %struct.drm_dp_mst_branch* %23) #8, !dbg !16776
  store %struct.drm_dp_mst_branch* %call17, %struct.drm_dp_mst_branch** %mstb_child, align 8, !dbg !16777
  br label %if.end18, !dbg !16778

if.end18:                                         ; preds = %if.then15, %if.end12
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb_child, align 8, !dbg !16779
  %tobool19 = icmp ne %struct.drm_dp_mst_branch* %24, null, !dbg !16779
  br i1 %tobool19, label %if.then20, label %if.end29, !dbg !16781

if.then20:                                        ; preds = %if.end18
  %25 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16782
  %26 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb_child, align 8, !dbg !16784
  %call21 = call i32 @drm_dp_check_and_send_link_address(%struct.drm_dp_mst_topology_mgr* %25, %struct.drm_dp_mst_branch* %26) #8, !dbg !16785
  store i32 %call21, i32* %ret, align 4, !dbg !16786
  %27 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb_child, align 8, !dbg !16787
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %27) #8, !dbg !16788
  %28 = load i32, i32* %ret, align 4, !dbg !16789
  %cmp22 = icmp eq i32 %28, 1, !dbg !16791
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !16792

if.then23:                                        ; preds = %if.then20
  store i8 1, i8* %changed, align 1, !dbg !16793
  br label %if.end28, !dbg !16794

if.else24:                                        ; preds = %if.then20
  %29 = load i32, i32* %ret, align 4, !dbg !16795
  %cmp25 = icmp slt i32 %29, 0, !dbg !16797
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !16798

if.then26:                                        ; preds = %if.else24
  %30 = load i32, i32* %ret, align 4, !dbg !16799
  store i32 %30, i32* %retval, align 4, !dbg !16800
  br label %return, !dbg !16800

if.end27:                                         ; preds = %if.else24
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then23
  br label %if.end29, !dbg !16801

if.end29:                                         ; preds = %if.end28, %if.end18
  br label %for.inc, !dbg !16802

for.inc:                                          ; preds = %if.end29, %if.then11
  call void @llvm.dbg.declare(metadata i8** %__mptr30, metadata !16803, metadata !DIExpression()), !dbg !16805
  %31 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16805
  %next31 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %31, i32 0, i32 12, !dbg !16805
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %next31, i32 0, i32 0, !dbg !16805
  %32 = load %struct.list_head*, %struct.list_head** %next32, align 8, !dbg !16805
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !16805
  store i8* %33, i8** %__mptr30, align 8, !dbg !16805
  br label %do.body33, !dbg !16805

do.body33:                                        ; preds = %for.inc
  br label %do.end34, !dbg !16806

do.end34:                                         ; preds = %do.body33
  %34 = load i8*, i8** %__mptr30, align 8, !dbg !16805
  %add.ptr36 = getelementptr i8, i8* %34, i64 -24, !dbg !16805
  %35 = bitcast i8* %add.ptr36 to %struct.drm_dp_mst_port*, !dbg !16805
  store %struct.drm_dp_mst_port* %35, %struct.drm_dp_mst_port** %tmp35, align 8, !dbg !16806
  %36 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp35, align 8, !dbg !16805
  store %struct.drm_dp_mst_port* %36, %struct.drm_dp_mst_port** %port, align 8, !dbg !16756
  br label %for.cond, !dbg !16756, !llvm.loop !16808

for.end:                                          ; preds = %for.cond
  %37 = load i8, i8* %changed, align 1, !dbg !16810
  %tobool37 = trunc i8 %37 to i1, !dbg !16810
  %conv = zext i1 %tobool37 to i32, !dbg !16810
  store i32 %conv, i32* %retval, align 4, !dbg !16811
  br label %return, !dbg !16811

return:                                           ; preds = %for.end, %if.then26, %if.then3
  %38 = load i32, i32* %retval, align 4, !dbg !16812
  ret i32 %38, !dbg !16812
}

; Function Attrs: noredzone
declare dso_local void @drm_kms_helper_hotplug_event(%struct.drm_device*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_clear_payload_id_table(%struct.drm_dp_sideband_msg_tx* %msg) #0 !dbg !16813 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !16816, metadata !DIExpression()), !dbg !16817
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !16818, metadata !DIExpression()), !dbg !16819
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !16820
  store i8 20, i8* %req_type, align 8, !dbg !16821
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !16822
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %0) #8, !dbg !16823
  ret void, !dbg !16824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_send_link_address(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb) #0 !dbg !16825 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %reply = alloca %struct.drm_dp_link_address_ack_reply*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %port_mask = alloca i32, align 4
  %changed = alloca i8, align 1
  %buf = alloca [64 x i8], align 16
  %__mptr = alloca i8*, align 8
  %tmp39 = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr40 = alloca i8*, align 8
  %tmp45 = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr64 = alloca i8*, align 8
  %tmp69 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !16826, metadata !DIExpression()), !dbg !16827
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !16828, metadata !DIExpression()), !dbg !16829
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !16830, metadata !DIExpression()), !dbg !16831
  call void @llvm.dbg.declare(metadata %struct.drm_dp_link_address_ack_reply** %reply, metadata !16832, metadata !DIExpression()), !dbg !16834
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !16835, metadata !DIExpression()), !dbg !16836
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %tmp, metadata !16837, metadata !DIExpression()), !dbg !16838
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16839, metadata !DIExpression()), !dbg !16840
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16841, metadata !DIExpression()), !dbg !16842
  call void @llvm.dbg.declare(metadata i32* %port_mask, metadata !16843, metadata !DIExpression()), !dbg !16844
  store i32 0, i32* %port_mask, align 4, !dbg !16844
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !16845, metadata !DIExpression()), !dbg !16846
  store i8 0, i8* %changed, align 1, !dbg !16846
  %call = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !16847
  %0 = bitcast i8* %call to %struct.drm_dp_sideband_msg_tx*, !dbg !16847
  store %struct.drm_dp_sideband_msg_tx* %0, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16848
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16849
  %tobool = icmp ne %struct.drm_dp_sideband_msg_tx* %1, null, !dbg !16849
  br i1 %tobool, label %if.end, label %if.then, !dbg !16851

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !16852
  br label %return, !dbg !16852

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16853
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16854
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %3, i32 0, i32 4, !dbg !16855
  store %struct.drm_dp_mst_branch* %2, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !16856
  %4 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16857
  call void @build_link_address(%struct.drm_dp_sideband_msg_tx* %4) #8, !dbg !16858
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16859
  %link_address_sent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %5, i32 0, i32 9, !dbg !16860
  store i8 1, i8* %link_address_sent, align 8, !dbg !16861
  %6 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16862
  %7 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16863
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %6, %struct.drm_dp_sideband_msg_tx* %7) #8, !dbg !16864
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16865
  %9 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16866
  %call1 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %8, %struct.drm_dp_sideband_msg_tx* %9) #8, !dbg !16867
  store i32 %call1, i32* %ret, align 4, !dbg !16868
  %10 = load i32, i32* %ret, align 4, !dbg !16869
  %cmp = icmp sle i32 %10, 0, !dbg !16871
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !16872

if.then2:                                         ; preds = %if.end
  %11 = load i32, i32* %ret, align 4, !dbg !16873
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.162, i64 0, i64 0), i32 %11) #8, !dbg !16873
  br label %out, !dbg !16875

if.end3:                                          ; preds = %if.end
  %12 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16876
  %reply4 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %12, i32 0, i32 9, !dbg !16878
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply4, i32 0, i32 0, !dbg !16879
  %13 = load i8, i8* %reply_type, align 2, !dbg !16879
  %conv = zext i8 %13 to i32, !dbg !16876
  %cmp5 = icmp eq i32 %conv, 1, !dbg !16880
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !16881

if.then7:                                         ; preds = %if.end3
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.163, i64 0, i64 0)) #8, !dbg !16882
  store i32 -5, i32* %ret, align 4, !dbg !16884
  br label %out, !dbg !16885

if.end8:                                          ; preds = %if.end3
  %14 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !16886
  %reply9 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %14, i32 0, i32 9, !dbg !16887
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply9, i32 0, i32 2, !dbg !16888
  %link_addr = bitcast %union.ack_replies* %u to %struct.drm_dp_link_address_ack_reply*, !dbg !16889
  store %struct.drm_dp_link_address_ack_reply* %link_addr, %struct.drm_dp_link_address_ack_reply** %reply, align 8, !dbg !16890
  %15 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply, align 8, !dbg !16891
  %nports = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %15, i32 0, i32 1, !dbg !16891
  %16 = load i8, i8* %nports, align 1, !dbg !16891
  %conv10 = zext i8 %16 to i32, !dbg !16891
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.164, i64 0, i64 0), i32 %conv10) #8, !dbg !16891
  %17 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply, align 8, !dbg !16892
  call void @drm_dp_dump_link_address(%struct.drm_dp_link_address_ack_reply* %17) #8, !dbg !16893
  %18 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16894
  %19 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply, align 8, !dbg !16895
  %guid = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %19, i32 0, i32 0, !dbg !16896
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid, i64 0, i64 0, !dbg !16895
  %call11 = call i32 @drm_dp_check_mstb_guid(%struct.drm_dp_mst_branch* %18, i8* %arraydecay) #8, !dbg !16897
  store i32 %call11, i32* %ret, align 4, !dbg !16898
  %20 = load i32, i32* %ret, align 4, !dbg !16899
  %tobool12 = icmp ne i32 %20, 0, !dbg !16899
  br i1 %tobool12, label %if.then13, label %if.end18, !dbg !16901

if.then13:                                        ; preds = %if.end8
  call void @llvm.dbg.declare(metadata [64 x i8]* %buf, metadata !16902, metadata !DIExpression()), !dbg !16904
  %21 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16905
  %rad = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %21, i32 0, i32 3, !dbg !16906
  %arraydecay14 = getelementptr inbounds [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !16905
  %22 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16907
  %lct = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %22, i32 0, i32 4, !dbg !16908
  %23 = load i8, i8* %lct, align 8, !dbg !16908
  %arraydecay15 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !16909
  %call16 = call i32 @drm_dp_mst_rad_to_str(i8* %arraydecay14, i8 zeroext %23, i8* %arraydecay15, i64 64) #8, !dbg !16910
  %arraydecay17 = getelementptr inbounds [64 x i8], [64 x i8]* %buf, i64 0, i64 0, !dbg !16911
  %24 = load i32, i32* %ret, align 4, !dbg !16911
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.165, i64 0, i64 0), i8* %arraydecay17, i32 %24) #8, !dbg !16911
  br label %out, !dbg !16912

if.end18:                                         ; preds = %if.end8
  store i32 0, i32* %i, align 4, !dbg !16913
  br label %for.cond, !dbg !16915

for.cond:                                         ; preds = %for.inc, %if.end18
  %25 = load i32, i32* %i, align 4, !dbg !16916
  %26 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply, align 8, !dbg !16918
  %nports19 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %26, i32 0, i32 1, !dbg !16919
  %27 = load i8, i8* %nports19, align 1, !dbg !16919
  %conv20 = zext i8 %27 to i32, !dbg !16918
  %cmp21 = icmp slt i32 %25, %conv20, !dbg !16920
  br i1 %cmp21, label %for.body, label %for.end, !dbg !16921

for.body:                                         ; preds = %for.cond
  %28 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply, align 8, !dbg !16922
  %ports = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %28, i32 0, i32 2, !dbg !16922
  %29 = load i32, i32* %i, align 4, !dbg !16922
  %idxprom = sext i32 %29 to i64, !dbg !16922
  %arrayidx = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports, i64 0, i64 %idxprom, !dbg !16922
  %port_number = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %arrayidx, i32 0, i32 2, !dbg !16922
  %30 = load i8, i8* %port_number, align 1, !dbg !16922
  %conv23 = zext i8 %30 to i32, !dbg !16922
  %sh_prom = zext i32 %conv23 to i64, !dbg !16922
  %shl = shl i64 1, %sh_prom, !dbg !16922
  %31 = load i32, i32* %port_mask, align 4, !dbg !16924
  %conv24 = sext i32 %31 to i64, !dbg !16924
  %or = or i64 %conv24, %shl, !dbg !16924
  %conv25 = trunc i64 %or to i32, !dbg !16924
  store i32 %conv25, i32* %port_mask, align 4, !dbg !16924
  %32 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16925
  %33 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16926
  %dev = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %33, i32 0, i32 1, !dbg !16927
  %34 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !16927
  %35 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply, align 8, !dbg !16928
  %ports26 = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %35, i32 0, i32 2, !dbg !16929
  %36 = load i32, i32* %i, align 4, !dbg !16930
  %idxprom27 = sext i32 %36 to i64, !dbg !16928
  %arrayidx28 = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports26, i64 0, i64 %idxprom27, !dbg !16928
  %call29 = call i32 @drm_dp_mst_handle_link_address_port(%struct.drm_dp_mst_branch* %32, %struct.drm_device* %34, %struct.drm_dp_link_addr_reply_port* %arrayidx28) #8, !dbg !16931
  store i32 %call29, i32* %ret, align 4, !dbg !16932
  %37 = load i32, i32* %ret, align 4, !dbg !16933
  %cmp30 = icmp eq i32 %37, 1, !dbg !16935
  br i1 %cmp30, label %if.then32, label %if.else, !dbg !16936

if.then32:                                        ; preds = %for.body
  store i8 1, i8* %changed, align 1, !dbg !16937
  br label %if.end37, !dbg !16938

if.else:                                          ; preds = %for.body
  %38 = load i32, i32* %ret, align 4, !dbg !16939
  %cmp33 = icmp slt i32 %38, 0, !dbg !16941
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !16942

if.then35:                                        ; preds = %if.else
  br label %out, !dbg !16943

if.end36:                                         ; preds = %if.else
  br label %if.end37

if.end37:                                         ; preds = %if.end36, %if.then32
  br label %for.inc, !dbg !16944

for.inc:                                          ; preds = %if.end37
  %39 = load i32, i32* %i, align 4, !dbg !16945
  %inc = add i32 %39, 1, !dbg !16945
  store i32 %inc, i32* %i, align 4, !dbg !16945
  br label %for.cond, !dbg !16946, !llvm.loop !16947

for.end:                                          ; preds = %for.cond
  %40 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16949
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %40, i32 0, i32 9, !dbg !16950
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !16951
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16952, metadata !DIExpression()), !dbg !16955
  %41 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16955
  %ports38 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %41, i32 0, i32 6, !dbg !16955
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports38, i32 0, i32 0, !dbg !16955
  %42 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !16955
  %43 = bitcast %struct.list_head* %42 to i8*, !dbg !16955
  store i8* %43, i8** %__mptr, align 8, !dbg !16955
  br label %do.body, !dbg !16955

do.body:                                          ; preds = %for.end
  br label %do.end, !dbg !16956

do.end:                                           ; preds = %do.body
  %44 = load i8*, i8** %__mptr, align 8, !dbg !16955
  %add.ptr = getelementptr i8, i8* %44, i64 -24, !dbg !16955
  %45 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !16955
  store %struct.drm_dp_mst_port* %45, %struct.drm_dp_mst_port** %tmp39, align 8, !dbg !16956
  %46 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp39, align 8, !dbg !16955
  store %struct.drm_dp_mst_port* %46, %struct.drm_dp_mst_port** %port, align 8, !dbg !16958
  call void @llvm.dbg.declare(metadata i8** %__mptr40, metadata !16959, metadata !DIExpression()), !dbg !16961
  %47 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16961
  %next41 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %47, i32 0, i32 12, !dbg !16961
  %next42 = getelementptr inbounds %struct.list_head, %struct.list_head* %next41, i32 0, i32 0, !dbg !16961
  %48 = load %struct.list_head*, %struct.list_head** %next42, align 8, !dbg !16961
  %49 = bitcast %struct.list_head* %48 to i8*, !dbg !16961
  store i8* %49, i8** %__mptr40, align 8, !dbg !16961
  br label %do.body43, !dbg !16961

do.body43:                                        ; preds = %do.end
  br label %do.end44, !dbg !16962

do.end44:                                         ; preds = %do.body43
  %50 = load i8*, i8** %__mptr40, align 8, !dbg !16961
  %add.ptr46 = getelementptr i8, i8* %50, i64 -24, !dbg !16961
  %51 = bitcast i8* %add.ptr46 to %struct.drm_dp_mst_port*, !dbg !16961
  store %struct.drm_dp_mst_port* %51, %struct.drm_dp_mst_port** %tmp45, align 8, !dbg !16962
  %52 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp45, align 8, !dbg !16961
  store %struct.drm_dp_mst_port* %52, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !16958
  br label %for.cond47, !dbg !16958

for.cond47:                                       ; preds = %do.end68, %do.end44
  %53 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16964
  %next48 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %53, i32 0, i32 12, !dbg !16964
  %54 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16964
  %ports49 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %54, i32 0, i32 6, !dbg !16964
  %cmp50 = icmp eq %struct.list_head* %next48, %ports49, !dbg !16964
  %lnot = xor i1 %cmp50, true, !dbg !16964
  br i1 %lnot, label %for.body52, label %for.end71, !dbg !16958

for.body52:                                       ; preds = %for.cond47
  %55 = load i32, i32* %port_mask, align 4, !dbg !16966
  %conv53 = sext i32 %55 to i64, !dbg !16966
  %56 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16969
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %56, i32 0, i32 2, !dbg !16969
  %57 = load i8, i8* %port_num, align 8, !dbg !16969
  %conv54 = zext i8 %57 to i32, !dbg !16969
  %sh_prom55 = zext i32 %conv54 to i64, !dbg !16969
  %shl56 = shl i64 1, %sh_prom55, !dbg !16969
  %and = and i64 %conv53, %shl56, !dbg !16970
  %tobool57 = icmp ne i64 %and, 0, !dbg !16970
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !16971

if.then58:                                        ; preds = %for.body52
  br label %for.inc63, !dbg !16972

if.end59:                                         ; preds = %for.body52
  %58 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16973
  %port_num60 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %58, i32 0, i32 2, !dbg !16973
  %59 = load i8, i8* %port_num60, align 8, !dbg !16973
  %conv61 = zext i8 %59 to i32, !dbg !16973
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.166, i64 0, i64 0), i32 %conv61) #8, !dbg !16973
  %60 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16974
  %next62 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %60, i32 0, i32 12, !dbg !16975
  call void @list_del(%struct.list_head* %next62) #8, !dbg !16976
  %61 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !16977
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %61) #8, !dbg !16978
  store i8 1, i8* %changed, align 1, !dbg !16979
  br label %for.inc63, !dbg !16980

for.inc63:                                        ; preds = %if.end59, %if.then58
  %62 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !16964
  store %struct.drm_dp_mst_port* %62, %struct.drm_dp_mst_port** %port, align 8, !dbg !16964
  call void @llvm.dbg.declare(metadata i8** %__mptr64, metadata !16981, metadata !DIExpression()), !dbg !16983
  %63 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !16983
  %next65 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %63, i32 0, i32 12, !dbg !16983
  %next66 = getelementptr inbounds %struct.list_head, %struct.list_head* %next65, i32 0, i32 0, !dbg !16983
  %64 = load %struct.list_head*, %struct.list_head** %next66, align 8, !dbg !16983
  %65 = bitcast %struct.list_head* %64 to i8*, !dbg !16983
  store i8* %65, i8** %__mptr64, align 8, !dbg !16983
  br label %do.body67, !dbg !16983

do.body67:                                        ; preds = %for.inc63
  br label %do.end68, !dbg !16984

do.end68:                                         ; preds = %do.body67
  %66 = load i8*, i8** %__mptr64, align 8, !dbg !16983
  %add.ptr70 = getelementptr i8, i8* %66, i64 -24, !dbg !16983
  %67 = bitcast i8* %add.ptr70 to %struct.drm_dp_mst_port*, !dbg !16983
  store %struct.drm_dp_mst_port* %67, %struct.drm_dp_mst_port** %tmp69, align 8, !dbg !16984
  %68 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp69, align 8, !dbg !16983
  store %struct.drm_dp_mst_port* %68, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !16964
  br label %for.cond47, !dbg !16964, !llvm.loop !16986

for.end71:                                        ; preds = %for.cond47
  %69 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !16988
  %lock72 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %69, i32 0, i32 9, !dbg !16989
  call void @mutex_unlock(%struct.mutex* %lock72) #8, !dbg !16990
  br label %out, !dbg !16990

out:                                              ; preds = %for.end71, %if.then35, %if.then13, %if.then7, %if.then2
  call void @llvm.dbg.label(metadata !16991), !dbg !16992
  %70 = load i32, i32* %ret, align 4, !dbg !16993
  %cmp73 = icmp sle i32 %70, 0, !dbg !16995
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !16996

if.then75:                                        ; preds = %out
  %71 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !16997
  %link_address_sent76 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %71, i32 0, i32 9, !dbg !16998
  store i8 0, i8* %link_address_sent76, align 8, !dbg !16999
  br label %if.end77, !dbg !16997

if.end77:                                         ; preds = %if.then75, %out
  %72 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17000
  %73 = bitcast %struct.drm_dp_sideband_msg_tx* %72 to i8*, !dbg !17000
  call void @kfree(i8* %73) #8, !dbg !17001
  %74 = load i32, i32* %ret, align 4, !dbg !17002
  %cmp78 = icmp slt i32 %74, 0, !dbg !17003
  br i1 %cmp78, label %cond.true, label %cond.false, !dbg !17002

cond.true:                                        ; preds = %if.end77
  %75 = load i32, i32* %ret, align 4, !dbg !17004
  br label %cond.end, !dbg !17002

cond.false:                                       ; preds = %if.end77
  %76 = load i8, i8* %changed, align 1, !dbg !17005
  %tobool80 = trunc i8 %76 to i1, !dbg !17005
  %conv81 = zext i1 %tobool80 to i32, !dbg !17005
  br label %cond.end, !dbg !17002

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %75, %cond.true ], [ %conv81, %cond.false ], !dbg !17002
  store i32 %cond, i32* %retval, align 4, !dbg !17006
  br label %return, !dbg !17006

return:                                           ; preds = %cond.end, %if.then
  %77 = load i32, i32* %retval, align 4, !dbg !17007
  ret i32 %77, !dbg !17007
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_link_address(%struct.drm_dp_sideband_msg_tx* %msg) #0 !dbg !17008 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !17009, metadata !DIExpression()), !dbg !17010
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !17011, metadata !DIExpression()), !dbg !17012
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !17013
  store i8 1, i8* %req_type, align 8, !dbg !17014
  %0 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !17015
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %0) #8, !dbg !17016
  ret void, !dbg !17017
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_dump_link_address(%struct.drm_dp_link_address_ack_reply* %reply) #0 !dbg !17018 {
entry:
  %reply.addr = alloca %struct.drm_dp_link_address_ack_reply*, align 8
  %port_reply = alloca %struct.drm_dp_link_addr_reply_port*, align 8
  %i = alloca i32, align 4
  store %struct.drm_dp_link_address_ack_reply* %reply, %struct.drm_dp_link_address_ack_reply** %reply.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_link_address_ack_reply** %reply.addr, metadata !17021, metadata !DIExpression()), !dbg !17022
  call void @llvm.dbg.declare(metadata %struct.drm_dp_link_addr_reply_port** %port_reply, metadata !17023, metadata !DIExpression()), !dbg !17025
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17026, metadata !DIExpression()), !dbg !17027
  store i32 0, i32* %i, align 4, !dbg !17028
  br label %for.cond, !dbg !17030

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !17031
  %1 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply.addr, align 8, !dbg !17033
  %nports = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %1, i32 0, i32 1, !dbg !17034
  %2 = load i8, i8* %nports, align 1, !dbg !17034
  %conv = zext i8 %2 to i32, !dbg !17033
  %cmp = icmp slt i32 %0, %conv, !dbg !17035
  br i1 %cmp, label %for.body, label %for.end, !dbg !17036

for.body:                                         ; preds = %for.cond
  %3 = load %struct.drm_dp_link_address_ack_reply*, %struct.drm_dp_link_address_ack_reply** %reply.addr, align 8, !dbg !17037
  %ports = getelementptr inbounds %struct.drm_dp_link_address_ack_reply, %struct.drm_dp_link_address_ack_reply* %3, i32 0, i32 2, !dbg !17039
  %4 = load i32, i32* %i, align 4, !dbg !17040
  %idxprom = sext i32 %4 to i64, !dbg !17037
  %arrayidx = getelementptr [16 x %struct.drm_dp_link_addr_reply_port], [16 x %struct.drm_dp_link_addr_reply_port]* %ports, i64 0, i64 %idxprom, !dbg !17037
  store %struct.drm_dp_link_addr_reply_port* %arrayidx, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17041
  %5 = load i32, i32* %i, align 4, !dbg !17042
  %6 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %input_port = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %6, i32 0, i32 0, !dbg !17042
  %7 = load i8, i8* %input_port, align 1, !dbg !17042
  %tobool = trunc i8 %7 to i1, !dbg !17042
  %conv2 = zext i1 %tobool to i32, !dbg !17042
  %8 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %peer_device_type = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %8, i32 0, i32 1, !dbg !17042
  %9 = load i8, i8* %peer_device_type, align 1, !dbg !17042
  %conv3 = zext i8 %9 to i32, !dbg !17042
  %10 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %port_number = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %10, i32 0, i32 2, !dbg !17042
  %11 = load i8, i8* %port_number, align 1, !dbg !17042
  %conv4 = zext i8 %11 to i32, !dbg !17042
  %12 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %dpcd_revision = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %12, i32 0, i32 6, !dbg !17042
  %13 = load i8, i8* %dpcd_revision, align 1, !dbg !17042
  %conv5 = zext i8 %13 to i32, !dbg !17042
  %14 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %mcs = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %14, i32 0, i32 3, !dbg !17042
  %15 = load i8, i8* %mcs, align 1, !dbg !17042
  %tobool6 = trunc i8 %15 to i1, !dbg !17042
  %conv7 = zext i1 %tobool6 to i32, !dbg !17042
  %16 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %ddps = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %16, i32 0, i32 4, !dbg !17042
  %17 = load i8, i8* %ddps, align 1, !dbg !17042
  %tobool8 = trunc i8 %17 to i1, !dbg !17042
  %conv9 = zext i1 %tobool8 to i32, !dbg !17042
  %18 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %legacy_device_plug_status = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %18, i32 0, i32 5, !dbg !17042
  %19 = load i8, i8* %legacy_device_plug_status, align 1, !dbg !17042
  %tobool10 = trunc i8 %19 to i1, !dbg !17042
  %conv11 = zext i1 %tobool10 to i32, !dbg !17042
  %20 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %num_sdp_streams = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %20, i32 0, i32 8, !dbg !17042
  %21 = load i8, i8* %num_sdp_streams, align 1, !dbg !17042
  %conv12 = zext i8 %21 to i32, !dbg !17042
  %22 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_reply, align 8, !dbg !17042
  %num_sdp_stream_sinks = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %22, i32 0, i32 9, !dbg !17042
  %23 = load i8, i8* %num_sdp_stream_sinks, align 1, !dbg !17042
  %conv13 = zext i8 %23 to i32, !dbg !17042
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @.str.167, i64 0, i64 0), i32 %5, i32 %conv2, i32 %conv3, i32 %conv4, i32 %conv5, i32 %conv7, i32 %conv9, i32 %conv11, i32 %conv12, i32 %conv13) #8, !dbg !17042
  br label %for.inc, !dbg !17043

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !17044
  %inc = add i32 %24, 1, !dbg !17044
  store i32 %inc, i32* %i, align 4, !dbg !17044
  br label %for.cond, !dbg !17045, !llvm.loop !17046

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17048
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_handle_link_address_port(%struct.drm_dp_mst_branch* %mstb, %struct.drm_device* %dev, %struct.drm_dp_link_addr_reply_port* %port_msg) #0 !dbg !17049 {
entry:
  %retval = alloca i32, align 4
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %port_msg.addr = alloca %struct.drm_dp_link_addr_reply_port*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %old_ddps = alloca i32, align 4
  %ret = alloca i32, align 4
  %new_pdt = alloca i8, align 1
  %new_mcs = alloca i8, align 1
  %created = alloca i8, align 1
  %send_link_addr = alloca i8, align 1
  %changed = alloca i8, align 1
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !17052, metadata !DIExpression()), !dbg !17053
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !17054, metadata !DIExpression()), !dbg !17055
  store %struct.drm_dp_link_addr_reply_port* %port_msg, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_link_addr_reply_port** %port_msg.addr, metadata !17056, metadata !DIExpression()), !dbg !17057
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !17058, metadata !DIExpression()), !dbg !17059
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17060
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 8, !dbg !17061
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !17061
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17059
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !17062, metadata !DIExpression()), !dbg !17063
  call void @llvm.dbg.declare(metadata i32* %old_ddps, metadata !17064, metadata !DIExpression()), !dbg !17065
  store i32 0, i32* %old_ddps, align 4, !dbg !17065
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17066, metadata !DIExpression()), !dbg !17067
  call void @llvm.dbg.declare(metadata i8* %new_pdt, metadata !17068, metadata !DIExpression()), !dbg !17069
  store i8 0, i8* %new_pdt, align 1, !dbg !17069
  call void @llvm.dbg.declare(metadata i8* %new_mcs, metadata !17070, metadata !DIExpression()), !dbg !17071
  store i8 0, i8* %new_mcs, align 1, !dbg !17071
  call void @llvm.dbg.declare(metadata i8* %created, metadata !17072, metadata !DIExpression()), !dbg !17073
  store i8 0, i8* %created, align 1, !dbg !17073
  call void @llvm.dbg.declare(metadata i8* %send_link_addr, metadata !17074, metadata !DIExpression()), !dbg !17075
  store i8 0, i8* %send_link_addr, align 1, !dbg !17075
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !17076, metadata !DIExpression()), !dbg !17077
  store i8 0, i8* %changed, align 1, !dbg !17077
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17078
  %3 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17079
  %port_number = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %3, i32 0, i32 2, !dbg !17080
  %4 = load i8, i8* %port_number, align 1, !dbg !17080
  %call = call %struct.drm_dp_mst_port* @drm_dp_get_port(%struct.drm_dp_mst_branch* %2, i8 zeroext %4) #8, !dbg !17081
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port, align 8, !dbg !17082
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17083
  %tobool = icmp ne %struct.drm_dp_mst_port* %5, null, !dbg !17083
  br i1 %tobool, label %if.else, label %if.then, !dbg !17085

if.then:                                          ; preds = %entry
  %6 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !17086
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17088
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17089
  %9 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17090
  %port_number2 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %9, i32 0, i32 2, !dbg !17091
  %10 = load i8, i8* %port_number2, align 1, !dbg !17091
  %call3 = call %struct.drm_dp_mst_port* @drm_dp_mst_add_port(%struct.drm_device* %6, %struct.drm_dp_mst_topology_mgr* %7, %struct.drm_dp_mst_branch* %8, i8 zeroext %10) #8, !dbg !17092
  store %struct.drm_dp_mst_port* %call3, %struct.drm_dp_mst_port** %port, align 8, !dbg !17093
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17094
  %tobool4 = icmp ne %struct.drm_dp_mst_port* %11, null, !dbg !17094
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !17096

if.then5:                                         ; preds = %if.then
  store i32 -12, i32* %retval, align 4, !dbg !17097
  br label %return, !dbg !17097

if.end:                                           ; preds = %if.then
  store i8 1, i8* %created, align 1, !dbg !17098
  store i8 1, i8* %changed, align 1, !dbg !17099
  br label %if.end72, !dbg !17100

if.else:                                          ; preds = %entry
  %12 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17101
  %input = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %12, i32 0, i32 3, !dbg !17103
  %13 = load i8, i8* %input, align 1, !dbg !17103
  %tobool6 = trunc i8 %13 to i1, !dbg !17103
  br i1 %tobool6, label %if.else16, label %land.lhs.true, !dbg !17104

land.lhs.true:                                    ; preds = %if.else
  %14 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17105
  %input_port = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %14, i32 0, i32 0, !dbg !17106
  %15 = load i8, i8* %input_port, align 1, !dbg !17106
  %tobool7 = trunc i8 %15 to i1, !dbg !17106
  br i1 %tobool7, label %land.lhs.true8, label %if.else16, !dbg !17107

land.lhs.true8:                                   ; preds = %land.lhs.true
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17108
  %connector = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %16, i32 0, i32 17, !dbg !17109
  %17 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !17109
  %tobool9 = icmp ne %struct.drm_connector* %17, null, !dbg !17108
  br i1 %tobool9, label %if.then10, label %if.else16, !dbg !17110

if.then10:                                        ; preds = %land.lhs.true8
  %18 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17111
  %19 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17113
  call void @drm_dp_mst_topology_unlink_port(%struct.drm_dp_mst_topology_mgr* %18, %struct.drm_dp_mst_port* %19) #8, !dbg !17114
  %20 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17115
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %20) #8, !dbg !17116
  %21 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !17117
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17118
  %23 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17119
  %24 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17120
  %port_number11 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %24, i32 0, i32 2, !dbg !17121
  %25 = load i8, i8* %port_number11, align 1, !dbg !17121
  %call12 = call %struct.drm_dp_mst_port* @drm_dp_mst_add_port(%struct.drm_device* %21, %struct.drm_dp_mst_topology_mgr* %22, %struct.drm_dp_mst_branch* %23, i8 zeroext %25) #8, !dbg !17122
  store %struct.drm_dp_mst_port* %call12, %struct.drm_dp_mst_port** %port, align 8, !dbg !17123
  %26 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17124
  %tobool13 = icmp ne %struct.drm_dp_mst_port* %26, null, !dbg !17124
  br i1 %tobool13, label %if.end15, label %if.then14, !dbg !17126

if.then14:                                        ; preds = %if.then10
  store i32 -12, i32* %retval, align 4, !dbg !17127
  br label %return, !dbg !17127

if.end15:                                         ; preds = %if.then10
  store i8 1, i8* %changed, align 1, !dbg !17128
  store i8 1, i8* %created, align 1, !dbg !17129
  br label %if.end71, !dbg !17130

if.else16:                                        ; preds = %land.lhs.true8, %land.lhs.true, %if.else
  %27 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17131
  %input17 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %27, i32 0, i32 3, !dbg !17133
  %28 = load i8, i8* %input17, align 1, !dbg !17133
  %tobool18 = trunc i8 %28 to i1, !dbg !17133
  br i1 %tobool18, label %land.lhs.true19, label %if.else23, !dbg !17134

land.lhs.true19:                                  ; preds = %if.else16
  %29 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17135
  %input_port20 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %29, i32 0, i32 0, !dbg !17136
  %30 = load i8, i8* %input_port20, align 1, !dbg !17136
  %tobool21 = trunc i8 %30 to i1, !dbg !17136
  br i1 %tobool21, label %if.else23, label %if.then22, !dbg !17137

if.then22:                                        ; preds = %land.lhs.true19
  store i8 1, i8* %changed, align 1, !dbg !17138
  br label %if.end70, !dbg !17140

if.else23:                                        ; preds = %land.lhs.true19, %if.else16
  %31 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17141
  %connector24 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %31, i32 0, i32 17, !dbg !17143
  %32 = load %struct.drm_connector*, %struct.drm_connector** %connector24, align 8, !dbg !17143
  %tobool25 = icmp ne %struct.drm_connector* %32, null, !dbg !17141
  br i1 %tobool25, label %if.then26, label %if.end69, !dbg !17144

if.then26:                                        ; preds = %if.else23
  %33 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17145
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %33, i32 0, i32 0, !dbg !17147
  %lock = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %base, i32 0, i32 1, !dbg !17148
  %call27 = call i32 @drm_modeset_lock(%struct.drm_modeset_lock* %lock, %struct.drm_modeset_acquire_ctx* null) #8, !dbg !17149
  %34 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17150
  %ddps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %34, i32 0, i32 5, !dbg !17151
  %35 = load i8, i8* %ddps, align 1, !dbg !17151
  %tobool28 = trunc i8 %35 to i1, !dbg !17151
  %conv = zext i1 %tobool28 to i32, !dbg !17150
  store i32 %conv, i32* %old_ddps, align 4, !dbg !17152
  %36 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17153
  %ddps29 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %36, i32 0, i32 5, !dbg !17154
  %37 = load i8, i8* %ddps29, align 1, !dbg !17154
  %tobool30 = trunc i8 %37 to i1, !dbg !17154
  %conv31 = zext i1 %tobool30 to i32, !dbg !17153
  %38 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17155
  %ddps32 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %38, i32 0, i32 4, !dbg !17156
  %39 = load i8, i8* %ddps32, align 1, !dbg !17156
  %tobool33 = trunc i8 %39 to i1, !dbg !17156
  %conv34 = zext i1 %tobool33 to i32, !dbg !17155
  %cmp = icmp ne i32 %conv31, %conv34, !dbg !17157
  br i1 %cmp, label %lor.end68, label %lor.rhs, !dbg !17158

lor.rhs:                                          ; preds = %if.then26
  %40 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17159
  %ddps36 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %40, i32 0, i32 5, !dbg !17160
  %41 = load i8, i8* %ddps36, align 1, !dbg !17160
  %tobool37 = trunc i8 %41 to i1, !dbg !17160
  br i1 %tobool37, label %land.rhs, label %land.end, !dbg !17161

land.rhs:                                         ; preds = %lor.rhs
  %42 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17162
  %ldps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %42, i32 0, i32 7, !dbg !17163
  %43 = load i8, i8* %ldps, align 1, !dbg !17163
  %tobool39 = trunc i8 %43 to i1, !dbg !17163
  %conv40 = zext i1 %tobool39 to i32, !dbg !17162
  %44 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17164
  %legacy_device_plug_status = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %44, i32 0, i32 5, !dbg !17165
  %45 = load i8, i8* %legacy_device_plug_status, align 1, !dbg !17165
  %tobool41 = trunc i8 %45 to i1, !dbg !17165
  %conv42 = zext i1 %tobool41 to i32, !dbg !17164
  %cmp43 = icmp ne i32 %conv40, %conv42, !dbg !17166
  br i1 %cmp43, label %lor.end, label %lor.lhs.false, !dbg !17167

lor.lhs.false:                                    ; preds = %land.rhs
  %46 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17168
  %dpcd_rev = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %46, i32 0, i32 8, !dbg !17169
  %47 = load i8, i8* %dpcd_rev, align 2, !dbg !17169
  %conv45 = zext i8 %47 to i32, !dbg !17168
  %48 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17170
  %dpcd_revision = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %48, i32 0, i32 6, !dbg !17171
  %49 = load i8, i8* %dpcd_revision, align 1, !dbg !17171
  %conv46 = zext i8 %49 to i32, !dbg !17170
  %cmp47 = icmp ne i32 %conv45, %conv46, !dbg !17172
  br i1 %cmp47, label %lor.end, label %lor.lhs.false49, !dbg !17173

lor.lhs.false49:                                  ; preds = %lor.lhs.false
  %50 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17174
  %mcs = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %50, i32 0, i32 4, !dbg !17175
  %51 = load i8, i8* %mcs, align 2, !dbg !17175
  %tobool50 = trunc i8 %51 to i1, !dbg !17175
  %conv51 = zext i1 %tobool50 to i32, !dbg !17174
  %52 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17176
  %mcs52 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %52, i32 0, i32 3, !dbg !17177
  %53 = load i8, i8* %mcs52, align 1, !dbg !17177
  %tobool53 = trunc i8 %53 to i1, !dbg !17177
  %conv54 = zext i1 %tobool53 to i32, !dbg !17176
  %cmp55 = icmp ne i32 %conv51, %conv54, !dbg !17178
  br i1 %cmp55, label %lor.end, label %lor.lhs.false57, !dbg !17179

lor.lhs.false57:                                  ; preds = %lor.lhs.false49
  %54 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17180
  %pdt = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %54, i32 0, i32 6, !dbg !17181
  %55 = load i8, i8* %pdt, align 4, !dbg !17181
  %conv58 = zext i8 %55 to i32, !dbg !17180
  %56 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17182
  %peer_device_type = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %56, i32 0, i32 1, !dbg !17183
  %57 = load i8, i8* %peer_device_type, align 1, !dbg !17183
  %conv59 = zext i8 %57 to i32, !dbg !17182
  %cmp60 = icmp ne i32 %conv58, %conv59, !dbg !17184
  br i1 %cmp60, label %lor.end, label %lor.rhs62, !dbg !17185

lor.rhs62:                                        ; preds = %lor.lhs.false57
  %58 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17186
  %num_sdp_stream_sinks = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %58, i32 0, i32 10, !dbg !17187
  %59 = load i8, i8* %num_sdp_stream_sinks, align 8, !dbg !17187
  %conv63 = zext i8 %59 to i32, !dbg !17186
  %60 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17188
  %num_sdp_stream_sinks64 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %60, i32 0, i32 9, !dbg !17189
  %61 = load i8, i8* %num_sdp_stream_sinks64, align 1, !dbg !17189
  %conv65 = zext i8 %61 to i32, !dbg !17188
  %cmp66 = icmp ne i32 %conv63, %conv65, !dbg !17190
  br label %lor.end, !dbg !17185

lor.end:                                          ; preds = %lor.rhs62, %lor.lhs.false57, %lor.lhs.false49, %lor.lhs.false, %land.rhs
  %62 = phi i1 [ true, %lor.lhs.false57 ], [ true, %lor.lhs.false49 ], [ true, %lor.lhs.false ], [ true, %land.rhs ], [ %cmp66, %lor.rhs62 ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.rhs
  %63 = phi i1 [ false, %lor.rhs ], [ %62, %lor.end ], !dbg !17191
  br label %lor.end68, !dbg !17158

lor.end68:                                        ; preds = %land.end, %if.then26
  %64 = phi i1 [ true, %if.then26 ], [ %63, %land.end ]
  %frombool = zext i1 %64 to i8, !dbg !17192
  store i8 %frombool, i8* %changed, align 1, !dbg !17192
  br label %if.end69, !dbg !17193

if.end69:                                         ; preds = %lor.end68, %if.else23
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.then22
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end15
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.end
  %65 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17194
  %input_port73 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %65, i32 0, i32 0, !dbg !17195
  %66 = load i8, i8* %input_port73, align 1, !dbg !17195
  %tobool74 = trunc i8 %66 to i1, !dbg !17195
  %67 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17196
  %input75 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %67, i32 0, i32 3, !dbg !17197
  %frombool76 = zext i1 %tobool74 to i8, !dbg !17198
  store i8 %frombool76, i8* %input75, align 1, !dbg !17198
  %68 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17199
  %input77 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %68, i32 0, i32 3, !dbg !17201
  %69 = load i8, i8* %input77, align 1, !dbg !17201
  %tobool78 = trunc i8 %69 to i1, !dbg !17201
  br i1 %tobool78, label %if.end81, label %if.then79, !dbg !17202

if.then79:                                        ; preds = %if.end72
  %70 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17203
  %peer_device_type80 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %70, i32 0, i32 1, !dbg !17204
  %71 = load i8, i8* %peer_device_type80, align 1, !dbg !17204
  store i8 %71, i8* %new_pdt, align 1, !dbg !17205
  br label %if.end81, !dbg !17206

if.end81:                                         ; preds = %if.then79, %if.end72
  %72 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17207
  %mcs82 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %72, i32 0, i32 3, !dbg !17208
  %73 = load i8, i8* %mcs82, align 1, !dbg !17208
  %tobool83 = trunc i8 %73 to i1, !dbg !17208
  %frombool84 = zext i1 %tobool83 to i8, !dbg !17209
  store i8 %frombool84, i8* %new_mcs, align 1, !dbg !17209
  %74 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17210
  %ddps85 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %74, i32 0, i32 4, !dbg !17211
  %75 = load i8, i8* %ddps85, align 1, !dbg !17211
  %tobool86 = trunc i8 %75 to i1, !dbg !17211
  %76 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17212
  %ddps87 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %76, i32 0, i32 5, !dbg !17213
  %frombool88 = zext i1 %tobool86 to i8, !dbg !17214
  store i8 %frombool88, i8* %ddps87, align 1, !dbg !17214
  %77 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17215
  %legacy_device_plug_status89 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %77, i32 0, i32 5, !dbg !17216
  %78 = load i8, i8* %legacy_device_plug_status89, align 1, !dbg !17216
  %tobool90 = trunc i8 %78 to i1, !dbg !17216
  %79 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17217
  %ldps91 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %79, i32 0, i32 7, !dbg !17218
  %frombool92 = zext i1 %tobool90 to i8, !dbg !17219
  store i8 %frombool92, i8* %ldps91, align 1, !dbg !17219
  %80 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17220
  %dpcd_revision93 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %80, i32 0, i32 6, !dbg !17221
  %81 = load i8, i8* %dpcd_revision93, align 1, !dbg !17221
  %82 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17222
  %dpcd_rev94 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %82, i32 0, i32 8, !dbg !17223
  store i8 %81, i8* %dpcd_rev94, align 2, !dbg !17224
  %83 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17225
  %num_sdp_streams = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %83, i32 0, i32 8, !dbg !17226
  %84 = load i8, i8* %num_sdp_streams, align 1, !dbg !17226
  %85 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17227
  %num_sdp_streams95 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %85, i32 0, i32 9, !dbg !17228
  store i8 %84, i8* %num_sdp_streams95, align 1, !dbg !17229
  %86 = load %struct.drm_dp_link_addr_reply_port*, %struct.drm_dp_link_addr_reply_port** %port_msg.addr, align 8, !dbg !17230
  %num_sdp_stream_sinks96 = getelementptr inbounds %struct.drm_dp_link_addr_reply_port, %struct.drm_dp_link_addr_reply_port* %86, i32 0, i32 9, !dbg !17231
  %87 = load i8, i8* %num_sdp_stream_sinks96, align 1, !dbg !17231
  %88 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17232
  %num_sdp_stream_sinks97 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %88, i32 0, i32 10, !dbg !17233
  store i8 %87, i8* %num_sdp_stream_sinks97, align 8, !dbg !17234
  %89 = load i8, i8* %created, align 1, !dbg !17235
  %tobool98 = trunc i8 %89 to i1, !dbg !17235
  br i1 %tobool98, label %if.then99, label %if.end102, !dbg !17237

if.then99:                                        ; preds = %if.end81
  %90 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17238
  %lock100 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %90, i32 0, i32 9, !dbg !17240
  call void @mutex_lock(%struct.mutex* %lock100) #8, !dbg !17241
  %91 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17242
  call void @drm_dp_mst_topology_get_port(%struct.drm_dp_mst_port* %91) #8, !dbg !17243
  %92 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17244
  %next = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %92, i32 0, i32 12, !dbg !17245
  %93 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17246
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %93, i32 0, i32 6, !dbg !17247
  call void @list_add(%struct.list_head* %next, %struct.list_head* %ports) #8, !dbg !17248
  %94 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17249
  %num_ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %94, i32 0, i32 5, !dbg !17250
  %95 = load i32, i32* %num_ports, align 4, !dbg !17251
  %inc = add i32 %95, 1, !dbg !17251
  store i32 %inc, i32* %num_ports, align 4, !dbg !17251
  %96 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17252
  %lock101 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %96, i32 0, i32 9, !dbg !17253
  call void @mutex_unlock(%struct.mutex* %lock101) #8, !dbg !17254
  br label %if.end102, !dbg !17255

if.end102:                                        ; preds = %if.then99, %if.end81
  %97 = load i32, i32* %old_ddps, align 4, !dbg !17256
  %98 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17258
  %ddps103 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %98, i32 0, i32 5, !dbg !17259
  %99 = load i8, i8* %ddps103, align 1, !dbg !17259
  %tobool104 = trunc i8 %99 to i1, !dbg !17259
  %conv105 = zext i1 %tobool104 to i32, !dbg !17258
  %cmp106 = icmp ne i32 %97, %conv105, !dbg !17260
  br i1 %cmp106, label %if.then110, label %lor.lhs.false108, !dbg !17261

lor.lhs.false108:                                 ; preds = %if.end102
  %100 = load i8, i8* %created, align 1, !dbg !17262
  %tobool109 = trunc i8 %100 to i1, !dbg !17262
  br i1 %tobool109, label %if.end125, label %if.then110, !dbg !17263

if.then110:                                       ; preds = %lor.lhs.false108, %if.end102
  %101 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17264
  %ddps111 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %101, i32 0, i32 5, !dbg !17267
  %102 = load i8, i8* %ddps111, align 1, !dbg !17267
  %tobool112 = trunc i8 %102 to i1, !dbg !17267
  br i1 %tobool112, label %land.lhs.true114, label %if.else123, !dbg !17268

land.lhs.true114:                                 ; preds = %if.then110
  %103 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17269
  %input115 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %103, i32 0, i32 3, !dbg !17270
  %104 = load i8, i8* %input115, align 1, !dbg !17270
  %tobool116 = trunc i8 %104 to i1, !dbg !17270
  br i1 %tobool116, label %if.else123, label %if.then117, !dbg !17271

if.then117:                                       ; preds = %land.lhs.true114
  %105 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17272
  %106 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17274
  %107 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17275
  %call118 = call i32 @drm_dp_send_enum_path_resources(%struct.drm_dp_mst_topology_mgr* %105, %struct.drm_dp_mst_branch* %106, %struct.drm_dp_mst_port* %107) #8, !dbg !17276
  store i32 %call118, i32* %ret, align 4, !dbg !17277
  %108 = load i32, i32* %ret, align 4, !dbg !17278
  %cmp119 = icmp eq i32 %108, 1, !dbg !17280
  br i1 %cmp119, label %if.then121, label %if.end122, !dbg !17281

if.then121:                                       ; preds = %if.then117
  store i8 1, i8* %changed, align 1, !dbg !17282
  br label %if.end122, !dbg !17283

if.end122:                                        ; preds = %if.then121, %if.then117
  br label %if.end124, !dbg !17284

if.else123:                                       ; preds = %land.lhs.true114, %if.then110
  %109 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17285
  %full_pbn = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %109, i32 0, i32 11, !dbg !17287
  store i16 0, i16* %full_pbn, align 2, !dbg !17288
  br label %if.end124

if.end124:                                        ; preds = %if.else123, %if.end122
  br label %if.end125, !dbg !17289

if.end125:                                        ; preds = %if.end124, %lor.lhs.false108
  %110 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17290
  %111 = load i8, i8* %new_pdt, align 1, !dbg !17291
  %112 = load i8, i8* %new_mcs, align 1, !dbg !17292
  %tobool126 = trunc i8 %112 to i1, !dbg !17292
  %call127 = call i32 @drm_dp_port_set_pdt(%struct.drm_dp_mst_port* %110, i8 zeroext %111, i1 zeroext %tobool126) #8, !dbg !17293
  store i32 %call127, i32* %ret, align 4, !dbg !17294
  %113 = load i32, i32* %ret, align 4, !dbg !17295
  %cmp128 = icmp eq i32 %113, 1, !dbg !17297
  br i1 %cmp128, label %if.then130, label %if.else131, !dbg !17298

if.then130:                                       ; preds = %if.end125
  store i8 1, i8* %send_link_addr, align 1, !dbg !17299
  br label %if.end136, !dbg !17301

if.else131:                                       ; preds = %if.end125
  %114 = load i32, i32* %ret, align 4, !dbg !17302
  %cmp132 = icmp slt i32 %114, 0, !dbg !17304
  br i1 %cmp132, label %if.then134, label %if.end135, !dbg !17305

if.then134:                                       ; preds = %if.else131
  %115 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17306
  %116 = load i32, i32* %ret, align 4, !dbg !17306
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.168, i64 0, i64 0), %struct.drm_dp_mst_port* %115, i32 %116) #8, !dbg !17306
  br label %fail, !dbg !17308

if.end135:                                        ; preds = %if.else131
  br label %if.end136

if.end136:                                        ; preds = %if.end135, %if.then130
  %117 = load i8, i8* %created, align 1, !dbg !17309
  %tobool137 = trunc i8 %117 to i1, !dbg !17309
  br i1 %tobool137, label %if.end148, label %land.lhs.true138, !dbg !17311

land.lhs.true138:                                 ; preds = %if.end136
  %118 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17312
  %pdt139 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %118, i32 0, i32 6, !dbg !17313
  %119 = load i8, i8* %pdt139, align 4, !dbg !17313
  %conv140 = zext i8 %119 to i32, !dbg !17312
  %cmp141 = icmp eq i32 %conv140, 2, !dbg !17314
  br i1 %cmp141, label %land.lhs.true143, label %if.end148, !dbg !17315

land.lhs.true143:                                 ; preds = %land.lhs.true138
  %120 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17316
  %mcs144 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %120, i32 0, i32 4, !dbg !17317
  %121 = load i8, i8* %mcs144, align 2, !dbg !17317
  %tobool145 = trunc i8 %121 to i1, !dbg !17317
  br i1 %tobool145, label %if.then147, label %if.end148, !dbg !17318

if.then147:                                       ; preds = %land.lhs.true143
  store i8 1, i8* %send_link_addr, align 1, !dbg !17319
  br label %if.end148, !dbg !17320

if.end148:                                        ; preds = %if.then147, %land.lhs.true143, %land.lhs.true138, %if.end136
  %122 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17321
  %connector149 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %122, i32 0, i32 17, !dbg !17323
  %123 = load %struct.drm_connector*, %struct.drm_connector** %connector149, align 8, !dbg !17323
  %tobool150 = icmp ne %struct.drm_connector* %123, null, !dbg !17321
  br i1 %tobool150, label %if.then151, label %if.else154, !dbg !17324

if.then151:                                       ; preds = %if.end148
  %124 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17325
  %base152 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %124, i32 0, i32 0, !dbg !17326
  %lock153 = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %base152, i32 0, i32 1, !dbg !17327
  call void @drm_modeset_unlock(%struct.drm_modeset_lock* %lock153) #8, !dbg !17328
  br label %if.end159, !dbg !17328

if.else154:                                       ; preds = %if.end148
  %125 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17329
  %input155 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %125, i32 0, i32 3, !dbg !17331
  %126 = load i8, i8* %input155, align 1, !dbg !17331
  %tobool156 = trunc i8 %126 to i1, !dbg !17331
  br i1 %tobool156, label %if.end158, label %if.then157, !dbg !17332

if.then157:                                       ; preds = %if.else154
  %127 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17333
  %128 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17334
  call void @drm_dp_mst_port_add_connector(%struct.drm_dp_mst_branch* %127, %struct.drm_dp_mst_port* %128) #8, !dbg !17335
  br label %if.end158, !dbg !17335

if.end158:                                        ; preds = %if.then157, %if.else154
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then151
  %129 = load i8, i8* %send_link_addr, align 1, !dbg !17336
  %tobool160 = trunc i8 %129 to i1, !dbg !17336
  br i1 %tobool160, label %land.lhs.true162, label %if.end177, !dbg !17338

land.lhs.true162:                                 ; preds = %if.end159
  %130 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17339
  %mstb163 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %130, i32 0, i32 13, !dbg !17340
  %131 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb163, align 8, !dbg !17340
  %tobool164 = icmp ne %struct.drm_dp_mst_branch* %131, null, !dbg !17339
  br i1 %tobool164, label %if.then165, label %if.end177, !dbg !17341

if.then165:                                       ; preds = %land.lhs.true162
  %132 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17342
  %133 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17344
  %mstb166 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %133, i32 0, i32 13, !dbg !17345
  %134 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb166, align 8, !dbg !17345
  %call167 = call i32 @drm_dp_send_link_address(%struct.drm_dp_mst_topology_mgr* %132, %struct.drm_dp_mst_branch* %134) #8, !dbg !17346
  store i32 %call167, i32* %ret, align 4, !dbg !17347
  %135 = load i32, i32* %ret, align 4, !dbg !17348
  %cmp168 = icmp eq i32 %135, 1, !dbg !17350
  br i1 %cmp168, label %if.then170, label %if.else171, !dbg !17351

if.then170:                                       ; preds = %if.then165
  store i8 1, i8* %changed, align 1, !dbg !17352
  br label %if.end176, !dbg !17353

if.else171:                                       ; preds = %if.then165
  %136 = load i32, i32* %ret, align 4, !dbg !17354
  %cmp172 = icmp slt i32 %136, 0, !dbg !17356
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !17357

if.then174:                                       ; preds = %if.else171
  br label %fail_put, !dbg !17358

if.end175:                                        ; preds = %if.else171
  br label %if.end176

if.end176:                                        ; preds = %if.end175, %if.then170
  br label %if.end177, !dbg !17359

if.end177:                                        ; preds = %if.end176, %land.lhs.true162, %if.end159
  %137 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17360
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %137) #8, !dbg !17361
  %138 = load i8, i8* %changed, align 1, !dbg !17362
  %tobool178 = trunc i8 %138 to i1, !dbg !17362
  %conv179 = zext i1 %tobool178 to i32, !dbg !17362
  store i32 %conv179, i32* %retval, align 4, !dbg !17363
  br label %return, !dbg !17363

fail:                                             ; preds = %if.then134
  call void @llvm.dbg.label(metadata !17364), !dbg !17365
  %139 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17366
  %140 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17367
  call void @drm_dp_mst_topology_unlink_port(%struct.drm_dp_mst_topology_mgr* %139, %struct.drm_dp_mst_port* %140) #8, !dbg !17368
  %141 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17369
  %connector180 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %141, i32 0, i32 17, !dbg !17371
  %142 = load %struct.drm_connector*, %struct.drm_connector** %connector180, align 8, !dbg !17371
  %tobool181 = icmp ne %struct.drm_connector* %142, null, !dbg !17369
  br i1 %tobool181, label %if.then182, label %if.end185, !dbg !17372

if.then182:                                       ; preds = %fail
  %143 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17373
  %base183 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %143, i32 0, i32 0, !dbg !17374
  %lock184 = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %base183, i32 0, i32 1, !dbg !17375
  call void @drm_modeset_unlock(%struct.drm_modeset_lock* %lock184) #8, !dbg !17376
  br label %if.end185, !dbg !17376

if.end185:                                        ; preds = %if.then182, %fail
  br label %fail_put, !dbg !17371

fail_put:                                         ; preds = %if.end185, %if.then174
  call void @llvm.dbg.label(metadata !17377), !dbg !17378
  %144 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17379
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %144) #8, !dbg !17380
  %145 = load i32, i32* %ret, align 4, !dbg !17381
  store i32 %145, i32* %retval, align 4, !dbg !17382
  br label %return, !dbg !17382

return:                                           ; preds = %fail_put, %if.end177, %if.then14, %if.then5
  %146 = load i32, i32* %retval, align 4, !dbg !17383
  ret i32 %146, !dbg !17383
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_port* @drm_dp_get_port(%struct.drm_dp_mst_branch* %mstb, i8 zeroext %port_num) #0 !dbg !17384 {
entry:
  %retval = alloca %struct.drm_dp_mst_port*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port_num.addr = alloca i8, align 1
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr7 = alloca i8*, align 8
  %tmp12 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !17387, metadata !DIExpression()), !dbg !17388
  store i8 %port_num, i8* %port_num.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_num.addr, metadata !17389, metadata !DIExpression()), !dbg !17390
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !17391, metadata !DIExpression()), !dbg !17392
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17393, metadata !DIExpression()), !dbg !17394
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17395, metadata !DIExpression()), !dbg !17398
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17398
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 6, !dbg !17398
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !17398
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !17398
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !17398
  store i8* %2, i8** %__mptr, align 8, !dbg !17398
  br label %do.body, !dbg !17398

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !17399

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !17398
  %add.ptr = getelementptr i8, i8* %3, i64 -24, !dbg !17398
  %4 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !17398
  store %struct.drm_dp_mst_port* %4, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !17399
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !17398
  store %struct.drm_dp_mst_port* %5, %struct.drm_dp_mst_port** %port, align 8, !dbg !17401
  br label %for.cond, !dbg !17401

for.cond:                                         ; preds = %do.end11, %do.end
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17402
  %next1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 12, !dbg !17402
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17402
  %ports2 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %7, i32 0, i32 6, !dbg !17402
  %cmp = icmp eq %struct.list_head* %next1, %ports2, !dbg !17402
  %lnot = xor i1 %cmp, true, !dbg !17402
  br i1 %lnot, label %for.body, label %for.end, !dbg !17401

for.body:                                         ; preds = %for.cond
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17404
  %port_num3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 2, !dbg !17407
  %9 = load i8, i8* %port_num3, align 8, !dbg !17407
  %conv = zext i8 %9 to i32, !dbg !17404
  %10 = load i8, i8* %port_num.addr, align 1, !dbg !17408
  %conv4 = zext i8 %10 to i32, !dbg !17408
  %cmp5 = icmp eq i32 %conv, %conv4, !dbg !17409
  br i1 %cmp5, label %if.then, label %if.end, !dbg !17410

if.then:                                          ; preds = %for.body
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17411
  %call = call i32 @drm_dp_mst_topology_try_get_port(%struct.drm_dp_mst_port* %11) #8, !dbg !17413
  store i32 %call, i32* %ret, align 4, !dbg !17414
  %12 = load i32, i32* %ret, align 4, !dbg !17415
  %tobool = icmp ne i32 %12, 0, !dbg !17415
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17415

cond.true:                                        ; preds = %if.then
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17416
  br label %cond.end, !dbg !17415

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !17415

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.drm_dp_mst_port* [ %13, %cond.true ], [ null, %cond.false ], !dbg !17415
  store %struct.drm_dp_mst_port* %cond, %struct.drm_dp_mst_port** %retval, align 8, !dbg !17417
  br label %return, !dbg !17417

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !17418

for.inc:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr7, metadata !17419, metadata !DIExpression()), !dbg !17421
  %14 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17421
  %next8 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %14, i32 0, i32 12, !dbg !17421
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %next8, i32 0, i32 0, !dbg !17421
  %15 = load %struct.list_head*, %struct.list_head** %next9, align 8, !dbg !17421
  %16 = bitcast %struct.list_head* %15 to i8*, !dbg !17421
  store i8* %16, i8** %__mptr7, align 8, !dbg !17421
  br label %do.body10, !dbg !17421

do.body10:                                        ; preds = %for.inc
  br label %do.end11, !dbg !17422

do.end11:                                         ; preds = %do.body10
  %17 = load i8*, i8** %__mptr7, align 8, !dbg !17421
  %add.ptr13 = getelementptr i8, i8* %17, i64 -24, !dbg !17421
  %18 = bitcast i8* %add.ptr13 to %struct.drm_dp_mst_port*, !dbg !17421
  store %struct.drm_dp_mst_port* %18, %struct.drm_dp_mst_port** %tmp12, align 8, !dbg !17422
  %19 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp12, align 8, !dbg !17421
  store %struct.drm_dp_mst_port* %19, %struct.drm_dp_mst_port** %port, align 8, !dbg !17402
  br label %for.cond, !dbg !17402, !llvm.loop !17424

for.end:                                          ; preds = %for.cond
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %retval, align 8, !dbg !17426
  br label %return, !dbg !17426

return:                                           ; preds = %for.end, %cond.end
  %20 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %retval, align 8, !dbg !17427
  ret %struct.drm_dp_mst_port* %20, !dbg !17427
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_port* @drm_dp_mst_add_port(%struct.drm_device* %dev, %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb, i8 zeroext %port_number) #0 !dbg !17428 {
entry:
  %retval = alloca %struct.drm_dp_mst_port*, align 8
  %dev.addr = alloca %struct.drm_device*, align 8
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port_number.addr = alloca i8, align 1
  %port = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_device* %dev, %struct.drm_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_device** %dev.addr, metadata !17431, metadata !DIExpression()), !dbg !17432
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !17433, metadata !DIExpression()), !dbg !17434
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !17435, metadata !DIExpression()), !dbg !17436
  store i8 %port_number, i8* %port_number.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %port_number.addr, metadata !17437, metadata !DIExpression()), !dbg !17438
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !17439, metadata !DIExpression()), !dbg !17440
  %call = call i8* @kzalloc(i64 1288, i32 3264) #8, !dbg !17441
  %0 = bitcast i8* %call to %struct.drm_dp_mst_port*, !dbg !17441
  store %struct.drm_dp_mst_port* %0, %struct.drm_dp_mst_port** %port, align 8, !dbg !17440
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17442
  %tobool = icmp ne %struct.drm_dp_mst_port* %1, null, !dbg !17442
  br i1 %tobool, label %if.end, label %if.then, !dbg !17444

if.then:                                          ; preds = %entry
  store %struct.drm_dp_mst_port* null, %struct.drm_dp_mst_port** %retval, align 8, !dbg !17445
  br label %return, !dbg !17445

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17446
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 0, !dbg !17447
  call void @kref_init(%struct.kref* %topology_kref) #8, !dbg !17448
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17449
  %malloc_kref = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 1, !dbg !17450
  call void @kref_init(%struct.kref* %malloc_kref) #8, !dbg !17451
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17452
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17453
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 15, !dbg !17454
  store %struct.drm_dp_mst_branch* %4, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !17455
  %6 = load i8, i8* %port_number.addr, align 1, !dbg !17456
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17457
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 2, !dbg !17458
  store i8 %6, i8* %port_num, align 8, !dbg !17459
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !17460
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17461
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 18, !dbg !17462
  store %struct.drm_dp_mst_topology_mgr* %8, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !17463
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17464
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %10, i32 0, i32 14, !dbg !17465
  %name = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux, i32 0, i32 0, !dbg !17466
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.169, i64 0, i64 0), i8** %name, align 8, !dbg !17467
  %11 = load %struct.drm_device*, %struct.drm_device** %dev.addr, align 8, !dbg !17468
  %dev2 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %11, i32 0, i32 3, !dbg !17469
  %12 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !17469
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17470
  %aux3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 14, !dbg !17471
  %dev4 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux3, i32 0, i32 2, !dbg !17472
  store %struct.device* %12, %struct.device** %dev4, align 8, !dbg !17473
  %14 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17474
  %aux5 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %14, i32 0, i32 14, !dbg !17475
  %is_remote = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux5, i32 0, i32 11, !dbg !17476
  store i8 1, i8* %is_remote, align 8, !dbg !17477
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17478
  %aux6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 14, !dbg !17479
  call void @drm_dp_remote_aux_init(%struct.drm_dp_aux* %aux6) #8, !dbg !17480
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17481
  call void @drm_dp_mst_get_mstb_malloc(%struct.drm_dp_mst_branch* %16) #8, !dbg !17482
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !17483
  store %struct.drm_dp_mst_port* %17, %struct.drm_dp_mst_port** %retval, align 8, !dbg !17484
  br label %return, !dbg !17484

return:                                           ; preds = %if.end, %if.then
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %retval, align 8, !dbg !17485
  ret %struct.drm_dp_mst_port* %18, !dbg !17485
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_topology_unlink_port(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_port* %port) #0 !dbg !17486 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !17487, metadata !DIExpression()), !dbg !17488
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17489, metadata !DIExpression()), !dbg !17490
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !17491
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !17492
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !17493
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17494
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 15, !dbg !17495
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !17495
  %num_ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 5, !dbg !17496
  %3 = load i32, i32* %num_ports, align 4, !dbg !17497
  %dec = add i32 %3, -1, !dbg !17497
  store i32 %dec, i32* %num_ports, align 4, !dbg !17497
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17498
  %next = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %4, i32 0, i32 12, !dbg !17499
  call void @list_del(%struct.list_head* %next) #8, !dbg !17500
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !17501
  %lock1 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 9, !dbg !17502
  call void @mutex_unlock(%struct.mutex* %lock1) #8, !dbg !17503
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17504
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %6) #8, !dbg !17505
  ret void, !dbg !17506
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_topology_get_port(%struct.drm_dp_mst_port* %port) #0 !dbg !17507 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17508, metadata !DIExpression()), !dbg !17509
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17510
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 18, !dbg !17511
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17511
  call void @topology_ref_history_lock(%struct.drm_dp_mst_topology_mgr* %1) #8, !dbg !17512
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !17513, metadata !DIExpression()), !dbg !17515
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17515
  %topology_kref = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 0, !dbg !17515
  %call = call i32 @kref_read(%struct.kref* %topology_kref) #8, !dbg !17515
  %cmp = icmp eq i32 %call, 0, !dbg !17515
  %lnot = xor i1 %cmp, true, !dbg !17515
  %lnot1 = xor i1 %lnot, true, !dbg !17515
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !17515
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !17515
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !17516
  %tobool = icmp ne i32 %3, 0, !dbg !17516
  %lnot2 = xor i1 %tobool, true, !dbg !17516
  %lnot4 = xor i1 %lnot2, true, !dbg !17516
  %lnot.ext5 = zext i1 %lnot4 to i32, !dbg !17516
  %conv = sext i32 %lnot.ext5 to i64, !dbg !17516
  %tobool6 = icmp ne i64 %conv, 0, !dbg !17516
  br i1 %tobool6, label %if.then, label %if.end, !dbg !17515

if.then:                                          ; preds = %entry
  br label %do.body, !dbg !17516

do.body:                                          ; preds = %if.then
  br label %do.body7, !dbg !17518

do.body7:                                         ; preds = %do.body
  br label %do.end, !dbg !17520

do.end:                                           ; preds = %do.body7
  br label %do.body8, !dbg !17518

do.body8:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str, i64 0, i64 0), i32 1923, i32 2305, i64 12) #7, !dbg !17522, !srcloc !17524
  br label %do.end9, !dbg !17522

do.end9:                                          ; preds = %do.body8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 297) #7, !dbg !17525, !srcloc !17527
  br label %do.body10, !dbg !17518

do.body10:                                        ; preds = %do.end9
  br label %do.end11, !dbg !17528

do.end11:                                         ; preds = %do.body10
  br label %do.end12, !dbg !17518

do.end12:                                         ; preds = %do.end11
  br label %if.end, !dbg !17518

if.end:                                           ; preds = %do.end12, %entry
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !17515
  %tobool13 = icmp ne i32 %4, 0, !dbg !17515
  %lnot14 = xor i1 %tobool13, true, !dbg !17515
  %lnot16 = xor i1 %lnot14, true, !dbg !17515
  %lnot.ext17 = zext i1 %lnot16 to i32, !dbg !17515
  %conv18 = sext i32 %lnot.ext17 to i64, !dbg !17515
  store i64 %conv18, i64* %tmp, align 8, !dbg !17516
  %5 = load i64, i64* %tmp, align 8, !dbg !17515
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17530
  %topology_kref19 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 0, !dbg !17531
  call void @kref_get(%struct.kref* %topology_kref19) #8, !dbg !17532
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17533
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17533
  %topology_kref20 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 0, !dbg !17533
  %call21 = call i32 @kref_read(%struct.kref* %topology_kref20) #8, !dbg !17533
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.14, i64 0, i64 0), %struct.drm_dp_mst_port* %7, i32 %call21) #8, !dbg !17533
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17534
  %mgr22 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 18, !dbg !17535
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr22, align 8, !dbg !17535
  call void @topology_ref_history_unlock(%struct.drm_dp_mst_topology_mgr* %10) #8, !dbg !17536
  ret void, !dbg !17537
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_send_enum_path_resources(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_port* %port) #0 !dbg !17538 {
entry:
  %retval = alloca i32, align 4
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %path_res = alloca %struct.drm_dp_enum_path_resources_ack_reply*, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !17541, metadata !DIExpression()), !dbg !17542
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !17543, metadata !DIExpression()), !dbg !17544
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17545, metadata !DIExpression()), !dbg !17546
  call void @llvm.dbg.declare(metadata %struct.drm_dp_enum_path_resources_ack_reply** %path_res, metadata !17547, metadata !DIExpression()), !dbg !17549
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !17550, metadata !DIExpression()), !dbg !17551
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17552, metadata !DIExpression()), !dbg !17553
  %call = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !17554
  %0 = bitcast i8* %call to %struct.drm_dp_sideband_msg_tx*, !dbg !17554
  store %struct.drm_dp_sideband_msg_tx* %0, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17555
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17556
  %tobool = icmp ne %struct.drm_dp_sideband_msg_tx* %1, null, !dbg !17556
  br i1 %tobool, label %if.end, label %if.then, !dbg !17558

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !17559
  br label %return, !dbg !17559

if.end:                                           ; preds = %entry
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17560
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17561
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %3, i32 0, i32 4, !dbg !17562
  store %struct.drm_dp_mst_branch* %2, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !17563
  %4 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17564
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17565
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 2, !dbg !17566
  %6 = load i8, i8* %port_num, align 8, !dbg !17566
  %conv = zext i8 %6 to i32, !dbg !17565
  %call1 = call i32 @build_enum_path_resources(%struct.drm_dp_sideband_msg_tx* %4, i32 %conv) #8, !dbg !17567
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !17568
  %8 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17569
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %7, %struct.drm_dp_sideband_msg_tx* %8) #8, !dbg !17570
  %9 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17571
  %10 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17572
  %call2 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %9, %struct.drm_dp_sideband_msg_tx* %10) #8, !dbg !17573
  store i32 %call2, i32* %ret, align 4, !dbg !17574
  %11 = load i32, i32* %ret, align 4, !dbg !17575
  %cmp = icmp sgt i32 %11, 0, !dbg !17577
  br i1 %cmp, label %if.then4, label %if.end41, !dbg !17578

if.then4:                                         ; preds = %if.end
  store i32 0, i32* %ret, align 4, !dbg !17579
  %12 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17581
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %12, i32 0, i32 9, !dbg !17582
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 2, !dbg !17583
  %path_resources = bitcast %union.ack_replies* %u to %struct.drm_dp_enum_path_resources_ack_reply*, !dbg !17584
  store %struct.drm_dp_enum_path_resources_ack_reply* %path_resources, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17585
  %13 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17586
  %reply5 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %13, i32 0, i32 9, !dbg !17588
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply5, i32 0, i32 0, !dbg !17589
  %14 = load i8, i8* %reply_type, align 2, !dbg !17589
  %conv6 = zext i8 %14 to i32, !dbg !17586
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !17590
  br i1 %cmp7, label %if.then9, label %if.else, !dbg !17591

if.then9:                                         ; preds = %if.then4
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.170, i64 0, i64 0)) #8, !dbg !17592
  br label %if.end40, !dbg !17594

if.else:                                          ; preds = %if.then4
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17595
  %port_num10 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 2, !dbg !17598
  %16 = load i8, i8* %port_num10, align 8, !dbg !17598
  %conv11 = zext i8 %16 to i32, !dbg !17595
  %17 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17599
  %port_number = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %17, i32 0, i32 0, !dbg !17600
  %18 = load i8, i8* %port_number, align 2, !dbg !17600
  %conv12 = zext i8 %18 to i32, !dbg !17599
  %cmp13 = icmp ne i32 %conv11, %conv12, !dbg !17601
  br i1 %cmp13, label %if.then15, label %if.end16, !dbg !17602

if.then15:                                        ; preds = %if.else
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.171, i64 0, i64 0)) #8, !dbg !17603
  br label %if.end16, !dbg !17603

if.end16:                                         ; preds = %if.then15, %if.else
  %19 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17604
  %port_number17 = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %19, i32 0, i32 0, !dbg !17604
  %20 = load i8, i8* %port_number17, align 2, !dbg !17604
  %conv18 = zext i8 %20 to i32, !dbg !17604
  %21 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17604
  %full_payload_bw_number = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %21, i32 0, i32 2, !dbg !17604
  %22 = load i16, i16* %full_payload_bw_number, align 2, !dbg !17604
  %conv19 = zext i16 %22 to i32, !dbg !17604
  %23 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17604
  %avail_payload_bw_number = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %23, i32 0, i32 3, !dbg !17604
  %24 = load i16, i16* %avail_payload_bw_number, align 2, !dbg !17604
  %conv20 = zext i16 %24 to i32, !dbg !17604
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.172, i64 0, i64 0), i32 %conv18, i32 %conv19, i32 %conv20) #8, !dbg !17604
  %25 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17605
  %full_pbn = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %25, i32 0, i32 11, !dbg !17607
  %26 = load i16, i16* %full_pbn, align 2, !dbg !17607
  %conv21 = zext i16 %26 to i32, !dbg !17605
  %27 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17608
  %full_payload_bw_number22 = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %27, i32 0, i32 2, !dbg !17609
  %28 = load i16, i16* %full_payload_bw_number22, align 2, !dbg !17609
  %conv23 = zext i16 %28 to i32, !dbg !17608
  %cmp24 = icmp ne i32 %conv21, %conv23, !dbg !17610
  br i1 %cmp24, label %if.then33, label %lor.lhs.false, !dbg !17611

lor.lhs.false:                                    ; preds = %if.end16
  %29 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17612
  %fec_capable = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %29, i32 0, i32 21, !dbg !17613
  %30 = load i8, i8* %fec_capable, align 1, !dbg !17613
  %tobool26 = trunc i8 %30 to i1, !dbg !17613
  %conv27 = zext i1 %tobool26 to i32, !dbg !17612
  %31 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17614
  %fec_capable28 = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %31, i32 0, i32 1, !dbg !17615
  %32 = load i8, i8* %fec_capable28, align 1, !dbg !17615
  %tobool29 = trunc i8 %32 to i1, !dbg !17615
  %conv30 = zext i1 %tobool29 to i32, !dbg !17614
  %cmp31 = icmp ne i32 %conv27, %conv30, !dbg !17616
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !17617

if.then33:                                        ; preds = %lor.lhs.false, %if.end16
  store i32 1, i32* %ret, align 4, !dbg !17618
  br label %if.end34, !dbg !17619

if.end34:                                         ; preds = %if.then33, %lor.lhs.false
  %33 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17620
  %full_payload_bw_number35 = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %33, i32 0, i32 2, !dbg !17621
  %34 = load i16, i16* %full_payload_bw_number35, align 2, !dbg !17621
  %35 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17622
  %full_pbn36 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %35, i32 0, i32 11, !dbg !17623
  store i16 %34, i16* %full_pbn36, align 2, !dbg !17624
  %36 = load %struct.drm_dp_enum_path_resources_ack_reply*, %struct.drm_dp_enum_path_resources_ack_reply** %path_res, align 8, !dbg !17625
  %fec_capable37 = getelementptr inbounds %struct.drm_dp_enum_path_resources_ack_reply, %struct.drm_dp_enum_path_resources_ack_reply* %36, i32 0, i32 1, !dbg !17626
  %37 = load i8, i8* %fec_capable37, align 1, !dbg !17626
  %tobool38 = trunc i8 %37 to i1, !dbg !17626
  %38 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17627
  %fec_capable39 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %38, i32 0, i32 21, !dbg !17628
  %frombool = zext i1 %tobool38 to i8, !dbg !17629
  store i8 %frombool, i8* %fec_capable39, align 1, !dbg !17629
  br label %if.end40

if.end40:                                         ; preds = %if.end34, %if.then9
  br label %if.end41, !dbg !17630

if.end41:                                         ; preds = %if.end40, %if.end
  %39 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !17631
  %40 = bitcast %struct.drm_dp_sideband_msg_tx* %39 to i8*, !dbg !17631
  call void @kfree(i8* %40) #8, !dbg !17632
  %41 = load i32, i32* %ret, align 4, !dbg !17633
  store i32 %41, i32* %retval, align 4, !dbg !17634
  br label %return, !dbg !17634

return:                                           ; preds = %if.end41, %if.then
  %42 = load i32, i32* %retval, align 4, !dbg !17635
  ret i32 %42, !dbg !17635
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_port_set_pdt(%struct.drm_dp_mst_port* %port, i8 zeroext %new_pdt, i1 zeroext %new_mcs) #0 !dbg !17636 {
entry:
  %retval = alloca i32, align 4
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %new_pdt.addr = alloca i8, align 1
  %new_mcs.addr = alloca i8, align 1
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %rad = alloca [8 x i8], align 1
  %lct = alloca i8, align 1
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17639, metadata !DIExpression()), !dbg !17640
  store i8 %new_pdt, i8* %new_pdt.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_pdt.addr, metadata !17641, metadata !DIExpression()), !dbg !17642
  %frombool = zext i1 %new_mcs to i8
  store i8 %frombool, i8* %new_mcs.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %new_mcs.addr, metadata !17643, metadata !DIExpression()), !dbg !17644
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !17645, metadata !DIExpression()), !dbg !17646
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17647
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 18, !dbg !17648
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !17648
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17646
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !17649, metadata !DIExpression()), !dbg !17650
  call void @llvm.dbg.declare(metadata [8 x i8]* %rad, metadata !17651, metadata !DIExpression()), !dbg !17652
  call void @llvm.dbg.declare(metadata i8* %lct, metadata !17653, metadata !DIExpression()), !dbg !17654
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17655, metadata !DIExpression()), !dbg !17656
  store i32 0, i32* %ret, align 4, !dbg !17656
  %2 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17657
  %pdt = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %2, i32 0, i32 6, !dbg !17659
  %3 = load i8, i8* %pdt, align 4, !dbg !17659
  %conv = zext i8 %3 to i32, !dbg !17657
  %4 = load i8, i8* %new_pdt.addr, align 1, !dbg !17660
  %conv2 = zext i8 %4 to i32, !dbg !17660
  %cmp = icmp eq i32 %conv, %conv2, !dbg !17661
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !17662

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17663
  %mcs = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 4, !dbg !17664
  %6 = load i8, i8* %mcs, align 2, !dbg !17664
  %tobool = trunc i8 %6 to i1, !dbg !17664
  %conv4 = zext i1 %tobool to i32, !dbg !17663
  %7 = load i8, i8* %new_mcs.addr, align 1, !dbg !17665
  %tobool5 = trunc i8 %7 to i1, !dbg !17665
  %conv6 = zext i1 %tobool5 to i32, !dbg !17665
  %cmp7 = icmp eq i32 %conv4, %conv6, !dbg !17666
  br i1 %cmp7, label %if.then, label %if.end, !dbg !17667

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !17668
  br label %return, !dbg !17668

if.end:                                           ; preds = %land.lhs.true, %entry
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17669
  %pdt9 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 6, !dbg !17671
  %9 = load i8, i8* %pdt9, align 4, !dbg !17671
  %conv10 = zext i8 %9 to i32, !dbg !17669
  %cmp11 = icmp ne i32 %conv10, 0, !dbg !17672
  br i1 %cmp11, label %if.then13, label %if.end35, !dbg !17673

if.then13:                                        ; preds = %if.end
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17674
  %pdt14 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %10, i32 0, i32 6, !dbg !17677
  %11 = load i8, i8* %pdt14, align 4, !dbg !17677
  %12 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17678
  %mcs15 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %12, i32 0, i32 4, !dbg !17679
  %13 = load i8, i8* %mcs15, align 2, !dbg !17679
  %tobool16 = trunc i8 %13 to i1, !dbg !17679
  %call = call zeroext i1 @drm_dp_mst_is_end_device(i8 zeroext %11, i1 zeroext %tobool16) #8, !dbg !17680
  br i1 %call, label %if.then17, label %if.else, !dbg !17681

if.then17:                                        ; preds = %if.then13
  %14 = load i8, i8* %new_pdt.addr, align 1, !dbg !17682
  %conv18 = zext i8 %14 to i32, !dbg !17682
  %cmp19 = icmp ne i32 %conv18, 0, !dbg !17685
  br i1 %cmp19, label %land.lhs.true21, label %if.end30, !dbg !17686

land.lhs.true21:                                  ; preds = %if.then17
  %15 = load i8, i8* %new_pdt.addr, align 1, !dbg !17687
  %16 = load i8, i8* %new_mcs.addr, align 1, !dbg !17688
  %tobool22 = trunc i8 %16 to i1, !dbg !17688
  %call23 = call zeroext i1 @drm_dp_mst_is_end_device(i8 zeroext %15, i1 zeroext %tobool22) #8, !dbg !17689
  br i1 %call23, label %if.then25, label %if.end30, !dbg !17690

if.then25:                                        ; preds = %land.lhs.true21
  %17 = load i8, i8* %new_pdt.addr, align 1, !dbg !17691
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17693
  %pdt26 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %18, i32 0, i32 6, !dbg !17694
  store i8 %17, i8* %pdt26, align 4, !dbg !17695
  %19 = load i8, i8* %new_mcs.addr, align 1, !dbg !17696
  %tobool27 = trunc i8 %19 to i1, !dbg !17696
  %20 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17697
  %mcs28 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %20, i32 0, i32 4, !dbg !17698
  %frombool29 = zext i1 %tobool27 to i8, !dbg !17699
  store i8 %frombool29, i8* %mcs28, align 2, !dbg !17699
  store i32 0, i32* %retval, align 4, !dbg !17700
  br label %return, !dbg !17700

if.end30:                                         ; preds = %land.lhs.true21, %if.then17
  %21 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17701
  call void @drm_dp_mst_unregister_i2c_bus(%struct.drm_dp_mst_port* %21) #8, !dbg !17702
  br label %if.end34, !dbg !17703

if.else:                                          ; preds = %if.then13
  %22 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17704
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %22, i32 0, i32 9, !dbg !17706
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !17707
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17708
  %mstb31 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %23, i32 0, i32 13, !dbg !17709
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb31, align 8, !dbg !17709
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %24) #8, !dbg !17710
  %25 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17711
  %mstb32 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %25, i32 0, i32 13, !dbg !17712
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb32, align 8, !dbg !17713
  %26 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17714
  %lock33 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %26, i32 0, i32 9, !dbg !17715
  call void @mutex_unlock(%struct.mutex* %lock33) #8, !dbg !17716
  br label %if.end34

if.end34:                                         ; preds = %if.else, %if.end30
  br label %if.end35, !dbg !17717

if.end35:                                         ; preds = %if.end34, %if.end
  %27 = load i8, i8* %new_pdt.addr, align 1, !dbg !17718
  %28 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17719
  %pdt36 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %28, i32 0, i32 6, !dbg !17720
  store i8 %27, i8* %pdt36, align 4, !dbg !17721
  %29 = load i8, i8* %new_mcs.addr, align 1, !dbg !17722
  %tobool37 = trunc i8 %29 to i1, !dbg !17722
  %30 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17723
  %mcs38 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %30, i32 0, i32 4, !dbg !17724
  %frombool39 = zext i1 %tobool37 to i8, !dbg !17725
  store i8 %frombool39, i8* %mcs38, align 2, !dbg !17725
  %31 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17726
  %pdt40 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %31, i32 0, i32 6, !dbg !17728
  %32 = load i8, i8* %pdt40, align 4, !dbg !17728
  %conv41 = zext i8 %32 to i32, !dbg !17726
  %cmp42 = icmp ne i32 %conv41, 0, !dbg !17729
  br i1 %cmp42, label %if.then44, label %if.end64, !dbg !17730

if.then44:                                        ; preds = %if.end35
  %33 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17731
  %pdt45 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %33, i32 0, i32 6, !dbg !17734
  %34 = load i8, i8* %pdt45, align 4, !dbg !17734
  %35 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17735
  %mcs46 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %35, i32 0, i32 4, !dbg !17736
  %36 = load i8, i8* %mcs46, align 2, !dbg !17736
  %tobool47 = trunc i8 %36 to i1, !dbg !17736
  %call48 = call zeroext i1 @drm_dp_mst_is_end_device(i8 zeroext %34, i1 zeroext %tobool47) #8, !dbg !17737
  br i1 %call48, label %if.then49, label %if.else51, !dbg !17738

if.then49:                                        ; preds = %if.then44
  %37 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17739
  %call50 = call i32 @drm_dp_mst_register_i2c_bus(%struct.drm_dp_mst_port* %37) #8, !dbg !17741
  store i32 %call50, i32* %ret, align 4, !dbg !17742
  br label %if.end63, !dbg !17743

if.else51:                                        ; preds = %if.then44
  %38 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17744
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !17746
  %call52 = call zeroext i8 @drm_dp_calculate_rad(%struct.drm_dp_mst_port* %38, i8* %arraydecay) #8, !dbg !17747
  store i8 %call52, i8* %lct, align 1, !dbg !17748
  %39 = load i8, i8* %lct, align 1, !dbg !17749
  %arraydecay53 = getelementptr inbounds [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !17750
  %call54 = call %struct.drm_dp_mst_branch* @drm_dp_add_mst_branch_device(i8 zeroext %39, i8* %arraydecay53) #8, !dbg !17751
  store %struct.drm_dp_mst_branch* %call54, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !17752
  %40 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !17753
  %tobool55 = icmp ne %struct.drm_dp_mst_branch* %40, null, !dbg !17753
  br i1 %tobool55, label %if.end57, label %if.then56, !dbg !17755

if.then56:                                        ; preds = %if.else51
  store i32 -12, i32* %ret, align 4, !dbg !17756
  %41 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17758
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.173, i64 0, i64 0), %struct.drm_dp_mst_port* %41) #8, !dbg !17758
  br label %out, !dbg !17759

if.end57:                                         ; preds = %if.else51
  %42 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17760
  %lock58 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %42, i32 0, i32 9, !dbg !17761
  call void @mutex_lock(%struct.mutex* %lock58) #8, !dbg !17762
  %43 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !17763
  %44 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17764
  %mstb59 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %44, i32 0, i32 13, !dbg !17765
  store %struct.drm_dp_mst_branch* %43, %struct.drm_dp_mst_branch** %mstb59, align 8, !dbg !17766
  %45 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17767
  %mgr60 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %45, i32 0, i32 18, !dbg !17768
  %46 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr60, align 8, !dbg !17768
  %47 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !17769
  %mgr61 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %47, i32 0, i32 8, !dbg !17770
  store %struct.drm_dp_mst_topology_mgr* %46, %struct.drm_dp_mst_topology_mgr** %mgr61, align 8, !dbg !17771
  %48 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17772
  %49 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !17773
  %port_parent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %49, i32 0, i32 7, !dbg !17774
  store %struct.drm_dp_mst_port* %48, %struct.drm_dp_mst_port** %port_parent, align 8, !dbg !17775
  %50 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17776
  call void @drm_dp_mst_get_port_malloc(%struct.drm_dp_mst_port* %50) #8, !dbg !17777
  %51 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17778
  %lock62 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %51, i32 0, i32 9, !dbg !17779
  call void @mutex_unlock(%struct.mutex* %lock62) #8, !dbg !17780
  store i32 1, i32* %ret, align 4, !dbg !17781
  br label %if.end63

if.end63:                                         ; preds = %if.end57, %if.then49
  br label %if.end64, !dbg !17782

if.end64:                                         ; preds = %if.end63, %if.end35
  br label %out, !dbg !17783

out:                                              ; preds = %if.end64, %if.then56
  call void @llvm.dbg.label(metadata !17784), !dbg !17785
  %52 = load i32, i32* %ret, align 4, !dbg !17786
  %cmp65 = icmp slt i32 %52, 0, !dbg !17788
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !17789

if.then67:                                        ; preds = %out
  %53 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17790
  %pdt68 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %53, i32 0, i32 6, !dbg !17791
  store i8 0, i8* %pdt68, align 4, !dbg !17792
  br label %if.end69, !dbg !17790

if.end69:                                         ; preds = %if.then67, %out
  %54 = load i32, i32* %ret, align 4, !dbg !17793
  store i32 %54, i32* %retval, align 4, !dbg !17794
  br label %return, !dbg !17794

return:                                           ; preds = %if.end69, %if.then25, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !17795
  ret i32 %55, !dbg !17795
}

; Function Attrs: noredzone
declare dso_local void @drm_modeset_unlock(%struct.drm_modeset_lock*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_port_add_connector(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_port* %port) #0 !dbg !17796 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %proppath = alloca [255 x i8], align 16
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !17799, metadata !DIExpression()), !dbg !17800
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17801, metadata !DIExpression()), !dbg !17802
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !17803, metadata !DIExpression()), !dbg !17804
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17805
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 18, !dbg !17806
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !17806
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17804
  call void @llvm.dbg.declare(metadata [255 x i8]* %proppath, metadata !17807, metadata !DIExpression()), !dbg !17809
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !17810, metadata !DIExpression()), !dbg !17811
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17812
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17813
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 2, !dbg !17814
  %4 = load i8, i8* %port_num, align 8, !dbg !17814
  %conv = zext i8 %4 to i32, !dbg !17813
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %proppath, i64 0, i64 0, !dbg !17815
  call void @build_mst_prop_path(%struct.drm_dp_mst_branch* %2, i32 %conv, i8* %arraydecay, i64 255) #8, !dbg !17816
  %5 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17817
  %cbs = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %5, i32 0, i32 2, !dbg !17818
  %6 = load %struct.drm_dp_mst_topology_cbs*, %struct.drm_dp_mst_topology_cbs** %cbs, align 8, !dbg !17818
  %add_connector = getelementptr inbounds %struct.drm_dp_mst_topology_cbs, %struct.drm_dp_mst_topology_cbs* %6, i32 0, i32 0, !dbg !17819
  %7 = load %struct.drm_connector* (%struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_port*, i8*)*, %struct.drm_connector* (%struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_port*, i8*)** %add_connector, align 8, !dbg !17819
  %8 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17820
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17821
  %arraydecay2 = getelementptr inbounds [255 x i8], [255 x i8]* %proppath, i64 0, i64 0, !dbg !17822
  %call = call %struct.drm_connector* %7(%struct.drm_dp_mst_topology_mgr* %8, %struct.drm_dp_mst_port* %9, i8* %arraydecay2) #8, !dbg !17817
  %10 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17823
  %connector = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %10, i32 0, i32 17, !dbg !17824
  store %struct.drm_connector* %call, %struct.drm_connector** %connector, align 8, !dbg !17825
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17826
  %connector3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 17, !dbg !17828
  %12 = load %struct.drm_connector*, %struct.drm_connector** %connector3, align 8, !dbg !17828
  %tobool = icmp ne %struct.drm_connector* %12, null, !dbg !17826
  br i1 %tobool, label %if.end, label %if.then, !dbg !17829

if.then:                                          ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !17830
  br label %error, !dbg !17832

if.end:                                           ; preds = %entry
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17833
  %pdt = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 6, !dbg !17835
  %14 = load i8, i8* %pdt, align 4, !dbg !17835
  %conv4 = zext i8 %14 to i32, !dbg !17833
  %cmp = icmp ne i32 %conv4, 0, !dbg !17836
  br i1 %cmp, label %land.lhs.true, label %if.end15, !dbg !17837

land.lhs.true:                                    ; preds = %if.end
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17838
  %pdt6 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 6, !dbg !17839
  %16 = load i8, i8* %pdt6, align 4, !dbg !17839
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17840
  %mcs = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %17, i32 0, i32 4, !dbg !17841
  %18 = load i8, i8* %mcs, align 2, !dbg !17841
  %tobool7 = trunc i8 %18 to i1, !dbg !17841
  %call8 = call zeroext i1 @drm_dp_mst_is_end_device(i8 zeroext %16, i1 zeroext %tobool7) #8, !dbg !17842
  br i1 %call8, label %if.then10, label %if.end15, !dbg !17843

if.then10:                                        ; preds = %land.lhs.true
  %19 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17844
  %connector11 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %19, i32 0, i32 17, !dbg !17846
  %20 = load %struct.drm_connector*, %struct.drm_connector** %connector11, align 8, !dbg !17846
  %21 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17847
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %21, i32 0, i32 14, !dbg !17848
  %ddc = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux, i32 0, i32 1, !dbg !17849
  %call12 = call %struct.edid* @drm_get_edid(%struct.drm_connector* %20, %struct.i2c_adapter* %ddc) #8, !dbg !17850
  %22 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17851
  %cached_edid = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %22, i32 0, i32 19, !dbg !17852
  store %struct.edid* %call12, %struct.edid** %cached_edid, align 8, !dbg !17853
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17854
  %connector13 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %23, i32 0, i32 17, !dbg !17855
  %24 = load %struct.drm_connector*, %struct.drm_connector** %connector13, align 8, !dbg !17855
  %call14 = call i32 @drm_connector_set_tile_property(%struct.drm_connector* %24) #8, !dbg !17856
  br label %if.end15, !dbg !17857

if.end15:                                         ; preds = %if.then10, %land.lhs.true, %if.end
  %25 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17858
  %connector16 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %25, i32 0, i32 17, !dbg !17859
  %26 = load %struct.drm_connector*, %struct.drm_connector** %connector16, align 8, !dbg !17859
  %call17 = call i32 @drm_connector_register(%struct.drm_connector* %26) #8, !dbg !17860
  br label %return, !dbg !17861

error:                                            ; preds = %if.then
  call void @llvm.dbg.label(metadata !17862), !dbg !17863
  %27 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17864
  %28 = load i32, i32* %ret, align 4, !dbg !17864
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.175, i64 0, i64 0), %struct.drm_dp_mst_port* %27, i32 %28) #8, !dbg !17864
  br label %return, !dbg !17865

return:                                           ; preds = %error, %if.end15
  ret void, !dbg !17865
}

; Function Attrs: noredzone
declare dso_local void @drm_dp_remote_aux_init(%struct.drm_dp_aux*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_get_mstb_malloc(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !17866 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !17867, metadata !DIExpression()), !dbg !17868
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17869
  %malloc_kref = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 1, !dbg !17870
  call void @kref_get(%struct.kref* %malloc_kref) #8, !dbg !17871
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17872
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !17872
  %malloc_kref1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 1, !dbg !17872
  %call = call i32 @kref_read(%struct.kref* %malloc_kref1) #8, !dbg !17872
  call void (i32, i8*, ...) @__drm_dbg(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86, i64 0, i64 0), %struct.drm_dp_mst_branch* %1, i32 %call) #8, !dbg !17872
  ret void, !dbg !17873
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @build_enum_path_resources(%struct.drm_dp_sideband_msg_tx* %msg, i32 %port_num) #0 !dbg !17874 {
entry:
  %msg.addr = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %port_num.addr = alloca i32, align 4
  %req = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  store %struct.drm_dp_sideband_msg_tx* %msg, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %msg.addr, metadata !17877, metadata !DIExpression()), !dbg !17878
  store i32 %port_num, i32* %port_num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %port_num.addr, metadata !17879, metadata !DIExpression()), !dbg !17880
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %req, metadata !17881, metadata !DIExpression()), !dbg !17882
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 0, !dbg !17883
  store i8 16, i8* %req_type, align 8, !dbg !17884
  %0 = load i32, i32* %port_num.addr, align 4, !dbg !17885
  %conv = trunc i32 %0 to i8, !dbg !17885
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %req, i32 0, i32 1, !dbg !17886
  %port_num1 = bitcast %union.ack_req* %u to %struct.drm_dp_port_number_req*, !dbg !17887
  %port_number = getelementptr inbounds %struct.drm_dp_port_number_req, %struct.drm_dp_port_number_req* %port_num1, i32 0, i32 0, !dbg !17888
  store i8 %conv, i8* %port_number, align 8, !dbg !17889
  %1 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !17890
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %req, %struct.drm_dp_sideband_msg_tx* %1) #8, !dbg !17891
  %2 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %msg.addr, align 8, !dbg !17892
  %path_msg = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %2, i32 0, i32 8, !dbg !17893
  store i8 1, i8* %path_msg, align 8, !dbg !17894
  ret i32 0, !dbg !17895
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_unregister_i2c_bus(%struct.drm_dp_mst_port* %port) #0 !dbg !17896 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17897, metadata !DIExpression()), !dbg !17898
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17899
  %aux = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 14, !dbg !17900
  %ddc = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %aux, i32 0, i32 1, !dbg !17901
  call void @i2c_del_adapter(%struct.i2c_adapter* %ddc) #8, !dbg !17902
  ret void, !dbg !17903
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_register_i2c_bus(%struct.drm_dp_mst_port* %port) #0 !dbg !17904 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %aux = alloca %struct.drm_dp_aux*, align 8
  %parent_dev = alloca %struct.device*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17905, metadata !DIExpression()), !dbg !17906
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux, metadata !17907, metadata !DIExpression()), !dbg !17908
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17909
  %aux1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 14, !dbg !17910
  store %struct.drm_dp_aux* %aux1, %struct.drm_dp_aux** %aux, align 8, !dbg !17908
  call void @llvm.dbg.declare(metadata %struct.device** %parent_dev, metadata !17911, metadata !DIExpression()), !dbg !17912
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17913
  %mgr = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 18, !dbg !17914
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !17914
  %dev = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 1, !dbg !17915
  %3 = load %struct.drm_device*, %struct.drm_device** %dev, align 8, !dbg !17915
  %dev2 = getelementptr inbounds %struct.drm_device, %struct.drm_device* %3, i32 0, i32 3, !dbg !17916
  %4 = load %struct.device*, %struct.device** %dev2, align 8, !dbg !17916
  store %struct.device* %4, %struct.device** %parent_dev, align 8, !dbg !17912
  %5 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17917
  %ddc = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %5, i32 0, i32 1, !dbg !17918
  %algo = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc, i32 0, i32 2, !dbg !17919
  store %struct.i2c_algorithm* @drm_dp_mst_i2c_algo, %struct.i2c_algorithm** %algo, align 8, !dbg !17920
  %6 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17921
  %7 = bitcast %struct.drm_dp_aux* %6 to i8*, !dbg !17921
  %8 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17922
  %ddc3 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %8, i32 0, i32 1, !dbg !17923
  %algo_data = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc3, i32 0, i32 3, !dbg !17924
  store i8* %7, i8** %algo_data, align 8, !dbg !17925
  %9 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17926
  %ddc4 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %9, i32 0, i32 1, !dbg !17927
  %retries = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc4, i32 0, i32 8, !dbg !17928
  store i32 3, i32* %retries, align 4, !dbg !17929
  %10 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17930
  %ddc5 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %10, i32 0, i32 1, !dbg !17931
  %class = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc5, i32 0, i32 1, !dbg !17932
  store i32 8, i32* %class, align 8, !dbg !17933
  %11 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17934
  %ddc6 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %11, i32 0, i32 1, !dbg !17935
  %owner = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc6, i32 0, i32 0, !dbg !17936
  store %struct.module* null, %struct.module** %owner, align 8, !dbg !17937
  %12 = load %struct.device*, %struct.device** %parent_dev, align 8, !dbg !17938
  %13 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17939
  %ddc7 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %13, i32 0, i32 1, !dbg !17940
  %dev8 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc7, i32 0, i32 9, !dbg !17941
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 1, !dbg !17942
  store %struct.device* %12, %struct.device** %parent, align 8, !dbg !17943
  %14 = load %struct.device*, %struct.device** %parent_dev, align 8, !dbg !17944
  %of_node = getelementptr inbounds %struct.device, %struct.device* %14, i32 0, i32 23, !dbg !17945
  %15 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !17945
  %16 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17946
  %ddc9 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %16, i32 0, i32 1, !dbg !17947
  %dev10 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc9, i32 0, i32 9, !dbg !17948
  %of_node11 = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 23, !dbg !17949
  store %struct.device_node* %15, %struct.device_node** %of_node11, align 8, !dbg !17950
  %17 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17951
  %ddc12 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %17, i32 0, i32 1, !dbg !17952
  %name = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %ddc12, i32 0, i32 12, !dbg !17953
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %name, i64 0, i64 0, !dbg !17951
  %18 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17954
  %name13 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %18, i32 0, i32 0, !dbg !17955
  %19 = load i8*, i8** %name13, align 8, !dbg !17955
  %tobool = icmp ne i8* %19, null, !dbg !17954
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17954

cond.true:                                        ; preds = %entry
  %20 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17956
  %name14 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %20, i32 0, i32 0, !dbg !17957
  %21 = load i8*, i8** %name14, align 8, !dbg !17957
  br label %cond.end, !dbg !17954

cond.false:                                       ; preds = %entry
  %22 = load %struct.device*, %struct.device** %parent_dev, align 8, !dbg !17958
  %call = call i8* @dev_name(%struct.device* %22) #8, !dbg !17959
  br label %cond.end, !dbg !17954

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %21, %cond.true ], [ %call, %cond.false ], !dbg !17954
  %call15 = call i64 @strlcpy(i8* %arraydecay, i8* %cond, i64 48) #8, !dbg !17960
  %23 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !17961
  %ddc16 = getelementptr inbounds %struct.drm_dp_aux, %struct.drm_dp_aux* %23, i32 0, i32 1, !dbg !17962
  %call17 = call i32 @i2c_add_adapter(%struct.i2c_adapter* %ddc16) #8, !dbg !17963
  ret i32 %call17, !dbg !17964
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i8 @drm_dp_calculate_rad(%struct.drm_dp_mst_port* %port, i8* %rad) #0 !dbg !17965 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %rad.addr = alloca i8*, align 8
  %parent_lct = alloca i32, align 4
  %shift = alloca i32, align 4
  %idx = alloca i32, align 4
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !17968, metadata !DIExpression()), !dbg !17969
  store i8* %rad, i8** %rad.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rad.addr, metadata !17970, metadata !DIExpression()), !dbg !17971
  call void @llvm.dbg.declare(metadata i32* %parent_lct, metadata !17972, metadata !DIExpression()), !dbg !17973
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17974
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 15, !dbg !17975
  %1 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !17975
  %lct = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %1, i32 0, i32 4, !dbg !17976
  %2 = load i8, i8* %lct, align 8, !dbg !17976
  %conv = zext i8 %2 to i32, !dbg !17974
  store i32 %conv, i32* %parent_lct, align 4, !dbg !17973
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !17977, metadata !DIExpression()), !dbg !17978
  store i32 4, i32* %shift, align 4, !dbg !17978
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !17979, metadata !DIExpression()), !dbg !17980
  %3 = load i32, i32* %parent_lct, align 4, !dbg !17981
  %sub = sub i32 %3, 1, !dbg !17982
  %div = sdiv i32 %sub, 2, !dbg !17983
  store i32 %div, i32* %idx, align 4, !dbg !17980
  %4 = load i32, i32* %parent_lct, align 4, !dbg !17984
  %cmp = icmp sgt i32 %4, 1, !dbg !17986
  br i1 %cmp, label %if.then, label %if.else, !dbg !17987

if.then:                                          ; preds = %entry
  %5 = load i8*, i8** %rad.addr, align 8, !dbg !17988
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !17990
  %parent2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 15, !dbg !17991
  %7 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent2, align 8, !dbg !17991
  %rad3 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %7, i32 0, i32 3, !dbg !17992
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %rad3, i64 0, i64 0, !dbg !17993
  %8 = load i32, i32* %idx, align 4, !dbg !17994
  %add = add i32 %8, 1, !dbg !17995
  %conv4 = sext i32 %add to i64, !dbg !17994
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 8 %arraydecay, i64 %conv4, i1 false), !dbg !17993
  %9 = load i32, i32* %parent_lct, align 4, !dbg !17996
  %rem = srem i32 %9, 2, !dbg !17997
  %tobool = icmp ne i32 %rem, 0, !dbg !17998
  %10 = zext i1 %tobool to i64, !dbg !17998
  %cond = select i1 %tobool, i32 4, i32 0, !dbg !17998
  store i32 %cond, i32* %shift, align 4, !dbg !17999
  br label %if.end, !dbg !18000

if.else:                                          ; preds = %entry
  %11 = load i8*, i8** %rad.addr, align 8, !dbg !18001
  %arrayidx = getelementptr i8, i8* %11, i64 0, !dbg !18001
  store i8 0, i8* %arrayidx, align 1, !dbg !18002
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18003
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %12, i32 0, i32 2, !dbg !18004
  %13 = load i8, i8* %port_num, align 8, !dbg !18004
  %conv5 = zext i8 %13 to i32, !dbg !18003
  %14 = load i32, i32* %shift, align 4, !dbg !18005
  %shl = shl i32 %conv5, %14, !dbg !18006
  %15 = load i8*, i8** %rad.addr, align 8, !dbg !18007
  %16 = load i32, i32* %idx, align 4, !dbg !18008
  %idxprom = sext i32 %16 to i64, !dbg !18007
  %arrayidx6 = getelementptr i8, i8* %15, i64 %idxprom, !dbg !18007
  %17 = load i8, i8* %arrayidx6, align 1, !dbg !18009
  %conv7 = zext i8 %17 to i32, !dbg !18009
  %or = or i32 %conv7, %shl, !dbg !18009
  %conv8 = trunc i32 %or to i8, !dbg !18009
  store i8 %conv8, i8* %arrayidx6, align 1, !dbg !18009
  %18 = load i32, i32* %parent_lct, align 4, !dbg !18010
  %add9 = add i32 %18, 1, !dbg !18011
  %conv10 = trunc i32 %add9 to i8, !dbg !18010
  ret i8 %conv10, !dbg !18012
}

; Function Attrs: noredzone
declare dso_local void @i2c_del_adapter(%struct.i2c_adapter*) #3

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !18013 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !18016, metadata !DIExpression()), !dbg !18017
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18018
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !18020
  %1 = load i8*, i8** %init_name, align 8, !dbg !18020
  %tobool = icmp ne i8* %1, null, !dbg !18018
  br i1 %tobool, label %if.then, label %if.end, !dbg !18021

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18022
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !18023
  %3 = load i8*, i8** %init_name1, align 8, !dbg !18023
  store i8* %3, i8** %retval, align 8, !dbg !18024
  br label %return, !dbg !18024

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !18025
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !18026
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #8, !dbg !18027
  store i8* %call, i8** %retval, align 8, !dbg !18028
  br label %return, !dbg !18028

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !18029
  ret i8* %5, !dbg !18029
}

; Function Attrs: noredzone
declare dso_local i32 @i2c_add_adapter(%struct.i2c_adapter*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_i2c_xfer(%struct.i2c_adapter* %adapter, %struct.i2c_msg* %msgs, i32 %num) #0 !dbg !18030 {
entry:
  %retval = alloca i32, align 4
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  %msgs.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %aux = alloca %struct.drm_dp_aux*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %ret = alloca i32, align 4
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !18031, metadata !DIExpression()), !dbg !18032
  store %struct.i2c_msg* %msgs, %struct.i2c_msg** %msgs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msgs.addr, metadata !18033, metadata !DIExpression()), !dbg !18034
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !18035, metadata !DIExpression()), !dbg !18036
  call void @llvm.dbg.declare(metadata %struct.drm_dp_aux** %aux, metadata !18037, metadata !DIExpression()), !dbg !18038
  %0 = load %struct.i2c_adapter*, %struct.i2c_adapter** %adapter.addr, align 8, !dbg !18039
  %algo_data = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %0, i32 0, i32 3, !dbg !18040
  %1 = load i8*, i8** %algo_data, align 8, !dbg !18040
  %2 = bitcast i8* %1 to %struct.drm_dp_aux*, !dbg !18039
  store %struct.drm_dp_aux* %2, %struct.drm_dp_aux** %aux, align 8, !dbg !18038
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !18041, metadata !DIExpression()), !dbg !18042
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18043, metadata !DIExpression()), !dbg !18045
  %3 = load %struct.drm_dp_aux*, %struct.drm_dp_aux** %aux, align 8, !dbg !18045
  %4 = bitcast %struct.drm_dp_aux* %3 to i8*, !dbg !18045
  store i8* %4, i8** %__mptr, align 8, !dbg !18045
  br label %do.body, !dbg !18045

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18046

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !18045
  %add.ptr = getelementptr i8, i8* %5, i64 -48, !dbg !18045
  %6 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !18045
  store %struct.drm_dp_mst_port* %6, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !18046
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !18045
  store %struct.drm_dp_mst_port* %7, %struct.drm_dp_mst_port** %port, align 8, !dbg !18042
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !18048, metadata !DIExpression()), !dbg !18049
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !18050, metadata !DIExpression()), !dbg !18051
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18052
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 18, !dbg !18053
  %9 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !18053
  store %struct.drm_dp_mst_topology_mgr* %9, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18051
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18054, metadata !DIExpression()), !dbg !18055
  %10 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18056
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18057
  %parent = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 15, !dbg !18058
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %parent, align 8, !dbg !18058
  %call = call %struct.drm_dp_mst_branch* @drm_dp_mst_topology_get_mstb_validated(%struct.drm_dp_mst_topology_mgr* %10, %struct.drm_dp_mst_branch* %12) #8, !dbg !18059
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18060
  %13 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18061
  %tobool = icmp ne %struct.drm_dp_mst_branch* %13, null, !dbg !18061
  br i1 %tobool, label %if.end, label %if.then, !dbg !18063

if.then:                                          ; preds = %do.end
  store i32 -121, i32* %retval, align 4, !dbg !18064
  br label %return, !dbg !18064

if.end:                                           ; preds = %do.end
  %14 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18065
  %15 = load i32, i32* %num.addr, align 4, !dbg !18067
  %call2 = call zeroext i1 @remote_i2c_read_ok(%struct.i2c_msg* %14, i32 %15) #8, !dbg !18068
  br i1 %call2, label %if.then3, label %if.else, !dbg !18069

if.then3:                                         ; preds = %if.end
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18070
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18072
  %18 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18073
  %19 = load i32, i32* %num.addr, align 4, !dbg !18074
  %call4 = call i32 @drm_dp_mst_i2c_read(%struct.drm_dp_mst_branch* %16, %struct.drm_dp_mst_port* %17, %struct.i2c_msg* %18, i32 %19) #8, !dbg !18075
  store i32 %call4, i32* %ret, align 4, !dbg !18076
  br label %if.end10, !dbg !18077

if.else:                                          ; preds = %if.end
  %20 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18078
  %21 = load i32, i32* %num.addr, align 4, !dbg !18080
  %call5 = call zeroext i1 @remote_i2c_write_ok(%struct.i2c_msg* %20, i32 %21) #8, !dbg !18081
  br i1 %call5, label %if.then6, label %if.else8, !dbg !18082

if.then6:                                         ; preds = %if.else
  %22 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18083
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18085
  %24 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18086
  %25 = load i32, i32* %num.addr, align 4, !dbg !18087
  %call7 = call i32 @drm_dp_mst_i2c_write(%struct.drm_dp_mst_branch* %22, %struct.drm_dp_mst_port* %23, %struct.i2c_msg* %24, i32 %25) #8, !dbg !18088
  store i32 %call7, i32* %ret, align 4, !dbg !18089
  br label %if.end9, !dbg !18090

if.else8:                                         ; preds = %if.else
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.174, i64 0, i64 0)) #8, !dbg !18091
  store i32 -5, i32* %ret, align 4, !dbg !18093
  br label %if.end9

if.end9:                                          ; preds = %if.else8, %if.then6
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.then3
  %26 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18094
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %26) #8, !dbg !18095
  %27 = load i32, i32* %ret, align 4, !dbg !18096
  store i32 %27, i32* %retval, align 4, !dbg !18097
  br label %return, !dbg !18097

return:                                           ; preds = %if.end10, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !18098
  ret i32 %28, !dbg !18098
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_i2c_functionality(%struct.i2c_adapter* %adapter) #0 !dbg !18099 {
entry:
  %adapter.addr = alloca %struct.i2c_adapter*, align 8
  store %struct.i2c_adapter* %adapter, %struct.i2c_adapter** %adapter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_adapter** %adapter.addr, metadata !18100, metadata !DIExpression()), !dbg !18101
  ret i32 268402699, !dbg !18102
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @remote_i2c_read_ok(%struct.i2c_msg* %msgs, i32 %num) #0 !dbg !18103 {
entry:
  %retval = alloca i1, align 1
  %msgs.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.i2c_msg* %msgs, %struct.i2c_msg** %msgs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msgs.addr, metadata !18108, metadata !DIExpression()), !dbg !18109
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !18110, metadata !DIExpression()), !dbg !18111
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18112, metadata !DIExpression()), !dbg !18113
  %0 = load i32, i32* %num.addr, align 4, !dbg !18114
  %sub = sub i32 %0, 1, !dbg !18116
  %cmp = icmp sgt i32 %sub, 4, !dbg !18117
  br i1 %cmp, label %if.then, label %if.end, !dbg !18118

if.then:                                          ; preds = %entry
  store i1 false, i1* %retval, align 1, !dbg !18119
  br label %return, !dbg !18119

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !18120
  br label %for.cond, !dbg !18122

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i32, i32* %i, align 4, !dbg !18123
  %2 = load i32, i32* %num.addr, align 4, !dbg !18125
  %sub1 = sub i32 %2, 1, !dbg !18126
  %cmp2 = icmp slt i32 %1, %sub1, !dbg !18127
  br i1 %cmp2, label %for.body, label %for.end, !dbg !18128

for.body:                                         ; preds = %for.cond
  %3 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18129
  %4 = load i32, i32* %i, align 4, !dbg !18132
  %idxprom = sext i32 %4 to i64, !dbg !18129
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %3, i64 %idxprom, !dbg !18129
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 1, !dbg !18133
  %5 = load i16, i16* %flags, align 2, !dbg !18133
  %conv = zext i16 %5 to i32, !dbg !18129
  %and = and i32 %conv, 1, !dbg !18134
  %tobool = icmp ne i32 %and, 0, !dbg !18134
  br i1 %tobool, label %if.then8, label %lor.lhs.false, !dbg !18135

lor.lhs.false:                                    ; preds = %for.body
  %6 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18136
  %7 = load i32, i32* %i, align 4, !dbg !18137
  %idxprom3 = sext i32 %7 to i64, !dbg !18136
  %arrayidx4 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %6, i64 %idxprom3, !dbg !18136
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx4, i32 0, i32 2, !dbg !18138
  %8 = load i16, i16* %len, align 4, !dbg !18138
  %conv5 = zext i16 %8 to i32, !dbg !18136
  %cmp6 = icmp sgt i32 %conv5, 255, !dbg !18139
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !18140

if.then8:                                         ; preds = %lor.lhs.false, %for.body
  store i1 false, i1* %retval, align 1, !dbg !18141
  br label %return, !dbg !18141

if.end9:                                          ; preds = %lor.lhs.false
  br label %for.inc, !dbg !18142

for.inc:                                          ; preds = %if.end9
  %9 = load i32, i32* %i, align 4, !dbg !18143
  %inc = add i32 %9, 1, !dbg !18143
  store i32 %inc, i32* %i, align 4, !dbg !18143
  br label %for.cond, !dbg !18144, !llvm.loop !18145

for.end:                                          ; preds = %for.cond
  %10 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18147
  %11 = load i32, i32* %num.addr, align 4, !dbg !18148
  %sub10 = sub i32 %11, 1, !dbg !18149
  %idxprom11 = sext i32 %sub10 to i64, !dbg !18147
  %arrayidx12 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %10, i64 %idxprom11, !dbg !18147
  %flags13 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx12, i32 0, i32 1, !dbg !18150
  %12 = load i16, i16* %flags13, align 2, !dbg !18150
  %conv14 = zext i16 %12 to i32, !dbg !18147
  %and15 = and i32 %conv14, 1, !dbg !18151
  %tobool16 = icmp ne i32 %and15, 0, !dbg !18151
  br i1 %tobool16, label %land.rhs, label %land.end, !dbg !18152

land.rhs:                                         ; preds = %for.end
  %13 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18153
  %14 = load i32, i32* %num.addr, align 4, !dbg !18154
  %sub17 = sub i32 %14, 1, !dbg !18155
  %idxprom18 = sext i32 %sub17 to i64, !dbg !18153
  %arrayidx19 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %13, i64 %idxprom18, !dbg !18153
  %len20 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx19, i32 0, i32 2, !dbg !18156
  %15 = load i16, i16* %len20, align 4, !dbg !18156
  %conv21 = zext i16 %15 to i32, !dbg !18153
  %cmp22 = icmp sle i32 %conv21, 255, !dbg !18157
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %16 = phi i1 [ false, %for.end ], [ %cmp22, %land.rhs ], !dbg !18158
  store i1 %16, i1* %retval, align 1, !dbg !18159
  br label %return, !dbg !18159

return:                                           ; preds = %land.end, %if.then8, %if.then
  %17 = load i1, i1* %retval, align 1, !dbg !18160
  ret i1 %17, !dbg !18160
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_i2c_read(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_port* %port, %struct.i2c_msg* %msgs, i32 %num) #0 !dbg !18161 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %msgs.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %i = alloca i32, align 4
  %msg = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !18164, metadata !DIExpression()), !dbg !18165
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !18166, metadata !DIExpression()), !dbg !18167
  store %struct.i2c_msg* %msgs, %struct.i2c_msg** %msgs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msgs.addr, metadata !18168, metadata !DIExpression()), !dbg !18169
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !18170, metadata !DIExpression()), !dbg !18171
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !18172, metadata !DIExpression()), !dbg !18173
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18174
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 18, !dbg !18175
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !18175
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18173
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18176, metadata !DIExpression()), !dbg !18177
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %msg, metadata !18178, metadata !DIExpression()), !dbg !18179
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !18180, metadata !DIExpression()), !dbg !18181
  store %struct.drm_dp_sideband_msg_tx* null, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18181
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18182, metadata !DIExpression()), !dbg !18183
  %2 = bitcast %struct.drm_dp_sideband_msg_req_body* %msg to i8*, !dbg !18184
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 120, i1 false), !dbg !18184
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 0, !dbg !18185
  store i8 34, i8* %req_type, align 8, !dbg !18186
  %3 = load i32, i32* %num.addr, align 4, !dbg !18187
  %sub = sub i32 %3, 1, !dbg !18188
  %conv = trunc i32 %sub to i8, !dbg !18187
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18189
  %i2c_read = bitcast %union.ack_req* %u to %struct.drm_dp_remote_i2c_read*, !dbg !18190
  %num_transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read, i32 0, i32 0, !dbg !18191
  store i8 %conv, i8* %num_transactions, align 8, !dbg !18192
  %4 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18193
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %4, i32 0, i32 2, !dbg !18194
  %5 = load i8, i8* %port_num, align 8, !dbg !18194
  %u2 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18195
  %i2c_read3 = bitcast %union.ack_req* %u2 to %struct.drm_dp_remote_i2c_read*, !dbg !18196
  %port_number = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read3, i32 0, i32 1, !dbg !18197
  store i8 %5, i8* %port_number, align 1, !dbg !18198
  store i32 0, i32* %i, align 4, !dbg !18199
  br label %for.cond, !dbg !18201

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load i32, i32* %i, align 4, !dbg !18202
  %7 = load i32, i32* %num.addr, align 4, !dbg !18204
  %sub4 = sub i32 %7, 1, !dbg !18205
  %cmp = icmp ult i32 %6, %sub4, !dbg !18206
  br i1 %cmp, label %for.body, label %for.end, !dbg !18207

for.body:                                         ; preds = %for.cond
  %8 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18208
  %9 = load i32, i32* %i, align 4, !dbg !18210
  %idxprom = zext i32 %9 to i64, !dbg !18208
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %8, i64 %idxprom, !dbg !18208
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 0, !dbg !18211
  %10 = load i16, i16* %addr, align 8, !dbg !18211
  %conv6 = trunc i16 %10 to i8, !dbg !18208
  %u7 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18212
  %i2c_read8 = bitcast %union.ack_req* %u7 to %struct.drm_dp_remote_i2c_read*, !dbg !18213
  %transactions = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read8, i32 0, i32 2, !dbg !18214
  %11 = load i32, i32* %i, align 4, !dbg !18215
  %idxprom9 = zext i32 %11 to i64, !dbg !18216
  %arrayidx10 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions, i64 0, i64 %idxprom9, !dbg !18216
  %i2c_dev_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx10, i32 0, i32 0, !dbg !18217
  store i8 %conv6, i8* %i2c_dev_id, align 8, !dbg !18218
  %12 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18219
  %13 = load i32, i32* %i, align 4, !dbg !18220
  %idxprom11 = zext i32 %13 to i64, !dbg !18219
  %arrayidx12 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %12, i64 %idxprom11, !dbg !18219
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx12, i32 0, i32 2, !dbg !18221
  %14 = load i16, i16* %len, align 4, !dbg !18221
  %conv13 = trunc i16 %14 to i8, !dbg !18219
  %u14 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18222
  %i2c_read15 = bitcast %union.ack_req* %u14 to %struct.drm_dp_remote_i2c_read*, !dbg !18223
  %transactions16 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read15, i32 0, i32 2, !dbg !18224
  %15 = load i32, i32* %i, align 4, !dbg !18225
  %idxprom17 = zext i32 %15 to i64, !dbg !18226
  %arrayidx18 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions16, i64 0, i64 %idxprom17, !dbg !18226
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx18, i32 0, i32 1, !dbg !18227
  store i8 %conv13, i8* %num_bytes, align 1, !dbg !18228
  %16 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18229
  %17 = load i32, i32* %i, align 4, !dbg !18230
  %idxprom19 = zext i32 %17 to i64, !dbg !18229
  %arrayidx20 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %16, i64 %idxprom19, !dbg !18229
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx20, i32 0, i32 3, !dbg !18231
  %18 = load i8*, i8** %buf, align 8, !dbg !18231
  %u21 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18232
  %i2c_read22 = bitcast %union.ack_req* %u21 to %struct.drm_dp_remote_i2c_read*, !dbg !18233
  %transactions23 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read22, i32 0, i32 2, !dbg !18234
  %19 = load i32, i32* %i, align 4, !dbg !18235
  %idxprom24 = zext i32 %19 to i64, !dbg !18236
  %arrayidx25 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions23, i64 0, i64 %idxprom24, !dbg !18236
  %bytes = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx25, i32 0, i32 2, !dbg !18237
  store i8* %18, i8** %bytes, align 8, !dbg !18238
  %20 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18239
  %21 = load i32, i32* %i, align 4, !dbg !18240
  %idxprom26 = zext i32 %21 to i64, !dbg !18239
  %arrayidx27 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %20, i64 %idxprom26, !dbg !18239
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx27, i32 0, i32 1, !dbg !18241
  %22 = load i16, i16* %flags, align 2, !dbg !18241
  %conv28 = zext i16 %22 to i32, !dbg !18239
  %and = and i32 %conv28, 32768, !dbg !18242
  %tobool = icmp ne i32 %and, 0, !dbg !18243
  %lnot = xor i1 %tobool, true, !dbg !18243
  %lnot.ext = zext i1 %lnot to i32, !dbg !18243
  %conv29 = trunc i32 %lnot.ext to i8, !dbg !18243
  %u30 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18244
  %i2c_read31 = bitcast %union.ack_req* %u30 to %struct.drm_dp_remote_i2c_read*, !dbg !18245
  %transactions32 = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read31, i32 0, i32 2, !dbg !18246
  %23 = load i32, i32* %i, align 4, !dbg !18247
  %idxprom33 = zext i32 %23 to i64, !dbg !18248
  %arrayidx34 = getelementptr [4 x %struct.drm_dp_remote_i2c_read_tx], [4 x %struct.drm_dp_remote_i2c_read_tx]* %transactions32, i64 0, i64 %idxprom33, !dbg !18248
  %no_stop_bit = getelementptr inbounds %struct.drm_dp_remote_i2c_read_tx, %struct.drm_dp_remote_i2c_read_tx* %arrayidx34, i32 0, i32 3, !dbg !18249
  store i8 %conv29, i8* %no_stop_bit, align 8, !dbg !18250
  br label %for.inc, !dbg !18251

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %i, align 4, !dbg !18252
  %inc = add i32 %24, 1, !dbg !18252
  store i32 %inc, i32* %i, align 4, !dbg !18252
  br label %for.cond, !dbg !18253, !llvm.loop !18254

for.end:                                          ; preds = %for.cond
  %25 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18256
  %26 = load i32, i32* %num.addr, align 4, !dbg !18257
  %sub35 = sub i32 %26, 1, !dbg !18258
  %idxprom36 = sext i32 %sub35 to i64, !dbg !18256
  %arrayidx37 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %25, i64 %idxprom36, !dbg !18256
  %addr38 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx37, i32 0, i32 0, !dbg !18259
  %27 = load i16, i16* %addr38, align 8, !dbg !18259
  %conv39 = trunc i16 %27 to i8, !dbg !18256
  %u40 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18260
  %i2c_read41 = bitcast %union.ack_req* %u40 to %struct.drm_dp_remote_i2c_read*, !dbg !18261
  %read_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read41, i32 0, i32 3, !dbg !18262
  store i8 %conv39, i8* %read_i2c_device_id, align 8, !dbg !18263
  %28 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18264
  %29 = load i32, i32* %num.addr, align 4, !dbg !18265
  %sub42 = sub i32 %29, 1, !dbg !18266
  %idxprom43 = sext i32 %sub42 to i64, !dbg !18264
  %arrayidx44 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %28, i64 %idxprom43, !dbg !18264
  %len45 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx44, i32 0, i32 2, !dbg !18267
  %30 = load i16, i16* %len45, align 4, !dbg !18267
  %conv46 = trunc i16 %30 to i8, !dbg !18264
  %u47 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18268
  %i2c_read48 = bitcast %union.ack_req* %u47 to %struct.drm_dp_remote_i2c_read*, !dbg !18269
  %num_bytes_read = getelementptr inbounds %struct.drm_dp_remote_i2c_read, %struct.drm_dp_remote_i2c_read* %i2c_read48, i32 0, i32 4, !dbg !18270
  store i8 %conv46, i8* %num_bytes_read, align 1, !dbg !18271
  %call = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !18272
  %31 = bitcast i8* %call to %struct.drm_dp_sideband_msg_tx*, !dbg !18272
  store %struct.drm_dp_sideband_msg_tx* %31, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18273
  %32 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18274
  %tobool49 = icmp ne %struct.drm_dp_sideband_msg_tx* %32, null, !dbg !18274
  br i1 %tobool49, label %if.end, label %if.then, !dbg !18276

if.then:                                          ; preds = %for.end
  store i32 -12, i32* %ret, align 4, !dbg !18277
  br label %out, !dbg !18279

if.end:                                           ; preds = %for.end
  %33 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18280
  %34 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18281
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %34, i32 0, i32 4, !dbg !18282
  store %struct.drm_dp_mst_branch* %33, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !18283
  %35 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18284
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %msg, %struct.drm_dp_sideband_msg_tx* %35) #8, !dbg !18285
  %36 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18286
  %37 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18287
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %36, %struct.drm_dp_sideband_msg_tx* %37) #8, !dbg !18288
  %38 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18289
  %39 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18290
  %call50 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %38, %struct.drm_dp_sideband_msg_tx* %39) #8, !dbg !18291
  store i32 %call50, i32* %ret, align 4, !dbg !18292
  %40 = load i32, i32* %ret, align 4, !dbg !18293
  %cmp51 = icmp sgt i32 %40, 0, !dbg !18295
  br i1 %cmp51, label %if.then53, label %if.end85, !dbg !18296

if.then53:                                        ; preds = %if.end
  %41 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18297
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %41, i32 0, i32 9, !dbg !18300
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !18301
  %42 = load i8, i8* %reply_type, align 2, !dbg !18301
  %conv54 = zext i8 %42 to i32, !dbg !18297
  %cmp55 = icmp eq i32 %conv54, 1, !dbg !18302
  br i1 %cmp55, label %if.then57, label %if.end58, !dbg !18303

if.then57:                                        ; preds = %if.then53
  store i32 -121, i32* %ret, align 4, !dbg !18304
  br label %out, !dbg !18306

if.end58:                                         ; preds = %if.then53
  %43 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18307
  %reply59 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %43, i32 0, i32 9, !dbg !18309
  %u60 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply59, i32 0, i32 2, !dbg !18310
  %remote_i2c_read_ack = bitcast %union.ack_replies* %u60 to %struct.drm_dp_remote_i2c_read_ack_reply*, !dbg !18311
  %num_bytes61 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_ack_reply, %struct.drm_dp_remote_i2c_read_ack_reply* %remote_i2c_read_ack, i32 0, i32 1, !dbg !18312
  %44 = load i8, i8* %num_bytes61, align 1, !dbg !18312
  %conv62 = zext i8 %44 to i32, !dbg !18307
  %45 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18313
  %46 = load i32, i32* %num.addr, align 4, !dbg !18314
  %sub63 = sub i32 %46, 1, !dbg !18315
  %idxprom64 = sext i32 %sub63 to i64, !dbg !18313
  %arrayidx65 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %45, i64 %idxprom64, !dbg !18313
  %len66 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx65, i32 0, i32 2, !dbg !18316
  %47 = load i16, i16* %len66, align 4, !dbg !18316
  %conv67 = zext i16 %47 to i32, !dbg !18313
  %cmp68 = icmp ne i32 %conv62, %conv67, !dbg !18317
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !18318

if.then70:                                        ; preds = %if.end58
  store i32 -5, i32* %ret, align 4, !dbg !18319
  br label %out, !dbg !18321

if.end71:                                         ; preds = %if.end58
  %48 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18322
  %49 = load i32, i32* %num.addr, align 4, !dbg !18323
  %sub72 = sub i32 %49, 1, !dbg !18324
  %idxprom73 = sext i32 %sub72 to i64, !dbg !18322
  %arrayidx74 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %48, i64 %idxprom73, !dbg !18322
  %buf75 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx74, i32 0, i32 3, !dbg !18325
  %50 = load i8*, i8** %buf75, align 8, !dbg !18325
  %51 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18326
  %reply76 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %51, i32 0, i32 9, !dbg !18327
  %u77 = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply76, i32 0, i32 2, !dbg !18328
  %remote_i2c_read_ack78 = bitcast %union.ack_replies* %u77 to %struct.drm_dp_remote_i2c_read_ack_reply*, !dbg !18329
  %bytes79 = getelementptr inbounds %struct.drm_dp_remote_i2c_read_ack_reply, %struct.drm_dp_remote_i2c_read_ack_reply* %remote_i2c_read_ack78, i32 0, i32 2, !dbg !18330
  %arraydecay = getelementptr inbounds [255 x i8], [255 x i8]* %bytes79, i64 0, i64 0, !dbg !18331
  %52 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18332
  %53 = load i32, i32* %num.addr, align 4, !dbg !18333
  %sub80 = sub i32 %53, 1, !dbg !18334
  %idxprom81 = sext i32 %sub80 to i64, !dbg !18332
  %arrayidx82 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %52, i64 %idxprom81, !dbg !18332
  %len83 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx82, i32 0, i32 2, !dbg !18335
  %54 = load i16, i16* %len83, align 4, !dbg !18335
  %conv84 = zext i16 %54 to i64, !dbg !18332
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 2 %arraydecay, i64 %conv84, i1 false), !dbg !18331
  %55 = load i32, i32* %num.addr, align 4, !dbg !18336
  store i32 %55, i32* %ret, align 4, !dbg !18337
  br label %if.end85, !dbg !18338

if.end85:                                         ; preds = %if.end71, %if.end
  br label %out, !dbg !18339

out:                                              ; preds = %if.end85, %if.then70, %if.then57, %if.then
  call void @llvm.dbg.label(metadata !18340), !dbg !18341
  %56 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18342
  %57 = bitcast %struct.drm_dp_sideband_msg_tx* %56 to i8*, !dbg !18342
  call void @kfree(i8* %57) #8, !dbg !18343
  %58 = load i32, i32* %ret, align 4, !dbg !18344
  ret i32 %58, !dbg !18345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @remote_i2c_write_ok(%struct.i2c_msg* %msgs, i32 %num) #0 !dbg !18346 {
entry:
  %retval = alloca i1, align 1
  %msgs.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.i2c_msg* %msgs, %struct.i2c_msg** %msgs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msgs.addr, metadata !18347, metadata !DIExpression()), !dbg !18348
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !18349, metadata !DIExpression()), !dbg !18350
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18351, metadata !DIExpression()), !dbg !18352
  store i32 0, i32* %i, align 4, !dbg !18353
  br label %for.cond, !dbg !18355

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !18356
  %1 = load i32, i32* %num.addr, align 4, !dbg !18358
  %sub = sub i32 %1, 1, !dbg !18359
  %cmp = icmp slt i32 %0, %sub, !dbg !18360
  br i1 %cmp, label %for.body, label %for.end, !dbg !18361

for.body:                                         ; preds = %for.cond
  %2 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18362
  %3 = load i32, i32* %i, align 4, !dbg !18365
  %idxprom = sext i32 %3 to i64, !dbg !18362
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %2, i64 %idxprom, !dbg !18362
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 1, !dbg !18366
  %4 = load i16, i16* %flags, align 2, !dbg !18366
  %conv = zext i16 %4 to i32, !dbg !18362
  %and = and i32 %conv, 1, !dbg !18367
  %tobool = icmp ne i32 %and, 0, !dbg !18367
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !18368

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18369
  %6 = load i32, i32* %i, align 4, !dbg !18370
  %idxprom1 = sext i32 %6 to i64, !dbg !18369
  %arrayidx2 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %5, i64 %idxprom1, !dbg !18369
  %flags3 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx2, i32 0, i32 1, !dbg !18371
  %7 = load i16, i16* %flags3, align 2, !dbg !18371
  %conv4 = zext i16 %7 to i32, !dbg !18369
  %and5 = and i32 %conv4, 32768, !dbg !18372
  %tobool6 = icmp ne i32 %and5, 0, !dbg !18372
  br i1 %tobool6, label %lor.lhs.false7, label %if.then, !dbg !18373

lor.lhs.false7:                                   ; preds = %lor.lhs.false
  %8 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18374
  %9 = load i32, i32* %i, align 4, !dbg !18375
  %idxprom8 = sext i32 %9 to i64, !dbg !18374
  %arrayidx9 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %8, i64 %idxprom8, !dbg !18374
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx9, i32 0, i32 2, !dbg !18376
  %10 = load i16, i16* %len, align 4, !dbg !18376
  %conv10 = zext i16 %10 to i32, !dbg !18374
  %cmp11 = icmp sgt i32 %conv10, 255, !dbg !18377
  br i1 %cmp11, label %if.then, label %if.end, !dbg !18378

if.then:                                          ; preds = %lor.lhs.false7, %lor.lhs.false, %for.body
  store i1 false, i1* %retval, align 1, !dbg !18379
  br label %return, !dbg !18379

if.end:                                           ; preds = %lor.lhs.false7
  br label %for.inc, !dbg !18380

for.inc:                                          ; preds = %if.end
  %11 = load i32, i32* %i, align 4, !dbg !18381
  %inc = add i32 %11, 1, !dbg !18381
  store i32 %inc, i32* %i, align 4, !dbg !18381
  br label %for.cond, !dbg !18382, !llvm.loop !18383

for.end:                                          ; preds = %for.cond
  %12 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18385
  %13 = load i32, i32* %num.addr, align 4, !dbg !18386
  %sub13 = sub i32 %13, 1, !dbg !18387
  %idxprom14 = sext i32 %sub13 to i64, !dbg !18385
  %arrayidx15 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %12, i64 %idxprom14, !dbg !18385
  %flags16 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx15, i32 0, i32 1, !dbg !18388
  %14 = load i16, i16* %flags16, align 2, !dbg !18388
  %conv17 = zext i16 %14 to i32, !dbg !18385
  %and18 = and i32 %conv17, 1, !dbg !18389
  %tobool19 = icmp ne i32 %and18, 0, !dbg !18389
  br i1 %tobool19, label %land.end, label %land.rhs, !dbg !18390

land.rhs:                                         ; preds = %for.end
  %15 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18391
  %16 = load i32, i32* %num.addr, align 4, !dbg !18392
  %sub20 = sub i32 %16, 1, !dbg !18393
  %idxprom21 = sext i32 %sub20 to i64, !dbg !18391
  %arrayidx22 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %15, i64 %idxprom21, !dbg !18391
  %len23 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx22, i32 0, i32 2, !dbg !18394
  %17 = load i16, i16* %len23, align 4, !dbg !18394
  %conv24 = zext i16 %17 to i32, !dbg !18391
  %cmp25 = icmp sle i32 %conv24, 255, !dbg !18395
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end
  %18 = phi i1 [ false, %for.end ], [ %cmp25, %land.rhs ], !dbg !18396
  store i1 %18, i1* %retval, align 1, !dbg !18397
  br label %return, !dbg !18397

return:                                           ; preds = %land.end, %if.then
  %19 = load i1, i1* %retval, align 1, !dbg !18398
  ret i1 %19, !dbg !18398
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @drm_dp_mst_i2c_write(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_port* %port, %struct.i2c_msg* %msgs, i32 %num) #0 !dbg !18399 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  %msgs.addr = alloca %struct.i2c_msg*, align 8
  %num.addr = alloca i32, align 4
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %i = alloca i32, align 4
  %msg = alloca %struct.drm_dp_sideband_msg_req_body, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !18400, metadata !DIExpression()), !dbg !18401
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !18402, metadata !DIExpression()), !dbg !18403
  store %struct.i2c_msg* %msgs, %struct.i2c_msg** %msgs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.i2c_msg** %msgs.addr, metadata !18404, metadata !DIExpression()), !dbg !18405
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !18406, metadata !DIExpression()), !dbg !18407
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !18408, metadata !DIExpression()), !dbg !18409
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18410
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %0, i32 0, i32 18, !dbg !18411
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !18411
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18409
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18412, metadata !DIExpression()), !dbg !18413
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body* %msg, metadata !18414, metadata !DIExpression()), !dbg !18415
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !18416, metadata !DIExpression()), !dbg !18417
  store %struct.drm_dp_sideband_msg_tx* null, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18417
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18418, metadata !DIExpression()), !dbg !18419
  %call = call i8* @kzalloc(i64 768, i32 3264) #8, !dbg !18420
  %2 = bitcast i8* %call to %struct.drm_dp_sideband_msg_tx*, !dbg !18420
  store %struct.drm_dp_sideband_msg_tx* %2, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18421
  %3 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18422
  %tobool = icmp ne %struct.drm_dp_sideband_msg_tx* %3, null, !dbg !18422
  br i1 %tobool, label %if.end, label %if.then, !dbg !18424

if.then:                                          ; preds = %entry
  store i32 -12, i32* %ret, align 4, !dbg !18425
  br label %out, !dbg !18427

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !18428
  br label %for.cond, !dbg !18430

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !18431
  %5 = load i32, i32* %num.addr, align 4, !dbg !18433
  %cmp = icmp ult i32 %4, %5, !dbg !18434
  br i1 %cmp, label %for.body, label %for.end, !dbg !18435

for.body:                                         ; preds = %for.cond
  %6 = bitcast %struct.drm_dp_sideband_msg_req_body* %msg to i8*, !dbg !18436
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 120, i1 false), !dbg !18436
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 0, !dbg !18438
  store i8 35, i8* %req_type, align 8, !dbg !18439
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18440
  %port_num = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 2, !dbg !18441
  %8 = load i8, i8* %port_num, align 8, !dbg !18441
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18442
  %i2c_write = bitcast %union.ack_req* %u to %struct.drm_dp_remote_i2c_write*, !dbg !18443
  %port_number = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write, i32 0, i32 0, !dbg !18444
  store i8 %8, i8* %port_number, align 8, !dbg !18445
  %9 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18446
  %10 = load i32, i32* %i, align 4, !dbg !18447
  %idxprom = zext i32 %10 to i64, !dbg !18446
  %arrayidx = getelementptr %struct.i2c_msg, %struct.i2c_msg* %9, i64 %idxprom, !dbg !18446
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 0, !dbg !18448
  %11 = load i16, i16* %addr, align 8, !dbg !18448
  %conv = trunc i16 %11 to i8, !dbg !18446
  %u2 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18449
  %i2c_write3 = bitcast %union.ack_req* %u2 to %struct.drm_dp_remote_i2c_write*, !dbg !18450
  %write_i2c_device_id = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write3, i32 0, i32 1, !dbg !18451
  store i8 %conv, i8* %write_i2c_device_id, align 1, !dbg !18452
  %12 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18453
  %13 = load i32, i32* %i, align 4, !dbg !18454
  %idxprom4 = zext i32 %13 to i64, !dbg !18453
  %arrayidx5 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %12, i64 %idxprom4, !dbg !18453
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx5, i32 0, i32 2, !dbg !18455
  %14 = load i16, i16* %len, align 4, !dbg !18455
  %conv6 = trunc i16 %14 to i8, !dbg !18453
  %u7 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18456
  %i2c_write8 = bitcast %union.ack_req* %u7 to %struct.drm_dp_remote_i2c_write*, !dbg !18457
  %num_bytes = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write8, i32 0, i32 2, !dbg !18458
  store i8 %conv6, i8* %num_bytes, align 2, !dbg !18459
  %15 = load %struct.i2c_msg*, %struct.i2c_msg** %msgs.addr, align 8, !dbg !18460
  %16 = load i32, i32* %i, align 4, !dbg !18461
  %idxprom9 = zext i32 %16 to i64, !dbg !18460
  %arrayidx10 = getelementptr %struct.i2c_msg, %struct.i2c_msg* %15, i64 %idxprom9, !dbg !18460
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx10, i32 0, i32 3, !dbg !18462
  %17 = load i8*, i8** %buf, align 8, !dbg !18462
  %u11 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %msg, i32 0, i32 1, !dbg !18463
  %i2c_write12 = bitcast %union.ack_req* %u11 to %struct.drm_dp_remote_i2c_write*, !dbg !18464
  %bytes = getelementptr inbounds %struct.drm_dp_remote_i2c_write, %struct.drm_dp_remote_i2c_write* %i2c_write12, i32 0, i32 3, !dbg !18465
  store i8* %17, i8** %bytes, align 8, !dbg !18466
  %18 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18467
  %19 = bitcast %struct.drm_dp_sideband_msg_tx* %18 to i8*, !dbg !18468
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 768, i1 false), !dbg !18468
  %20 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18469
  %21 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18470
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %21, i32 0, i32 4, !dbg !18471
  store %struct.drm_dp_mst_branch* %20, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !18472
  %22 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18473
  call void @drm_dp_encode_sideband_req(%struct.drm_dp_sideband_msg_req_body* %msg, %struct.drm_dp_sideband_msg_tx* %22) #8, !dbg !18474
  %23 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18475
  %24 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18476
  call void @drm_dp_queue_down_tx(%struct.drm_dp_mst_topology_mgr* %23, %struct.drm_dp_sideband_msg_tx* %24) #8, !dbg !18477
  %25 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18478
  %26 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18479
  %call13 = call i32 @drm_dp_mst_wait_tx_reply(%struct.drm_dp_mst_branch* %25, %struct.drm_dp_sideband_msg_tx* %26) #8, !dbg !18480
  store i32 %call13, i32* %ret, align 4, !dbg !18481
  %27 = load i32, i32* %ret, align 4, !dbg !18482
  %cmp14 = icmp sgt i32 %27, 0, !dbg !18484
  br i1 %cmp14, label %if.then16, label %if.else, !dbg !18485

if.then16:                                        ; preds = %for.body
  %28 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18486
  %reply = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %28, i32 0, i32 9, !dbg !18489
  %reply_type = getelementptr inbounds %struct.drm_dp_sideband_msg_reply_body, %struct.drm_dp_sideband_msg_reply_body* %reply, i32 0, i32 0, !dbg !18490
  %29 = load i8, i8* %reply_type, align 2, !dbg !18490
  %conv17 = zext i8 %29 to i32, !dbg !18486
  %cmp18 = icmp eq i32 %conv17, 1, !dbg !18491
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !18492

if.then20:                                        ; preds = %if.then16
  store i32 -121, i32* %ret, align 4, !dbg !18493
  br label %out, !dbg !18495

if.end21:                                         ; preds = %if.then16
  br label %if.end22, !dbg !18496

if.else:                                          ; preds = %for.body
  br label %out, !dbg !18497

if.end22:                                         ; preds = %if.end21
  br label %for.inc, !dbg !18499

for.inc:                                          ; preds = %if.end22
  %30 = load i32, i32* %i, align 4, !dbg !18500
  %inc = add i32 %30, 1, !dbg !18500
  store i32 %inc, i32* %i, align 4, !dbg !18500
  br label %for.cond, !dbg !18501, !llvm.loop !18502

for.end:                                          ; preds = %for.cond
  %31 = load i32, i32* %num.addr, align 4, !dbg !18504
  store i32 %31, i32* %ret, align 4, !dbg !18505
  br label %out, !dbg !18506

out:                                              ; preds = %for.end, %if.else, %if.then20, %if.then
  call void @llvm.dbg.label(metadata !18507), !dbg !18508
  %32 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18509
  %33 = bitcast %struct.drm_dp_sideband_msg_tx* %32 to i8*, !dbg !18509
  call void @kfree(i8* %33) #8, !dbg !18510
  %34 = load i32, i32* %ret, align 4, !dbg !18511
  ret i32 %34, !dbg !18512
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !18513 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !18518, metadata !DIExpression()), !dbg !18519
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !18520
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !18521
  %1 = load i8*, i8** %name, align 8, !dbg !18521
  ret i8* %1, !dbg !18522
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @build_mst_prop_path(%struct.drm_dp_mst_branch* %mstb, i32 %pnum, i8* %proppath, i64 %proppath_size) #0 !dbg !18523 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %pnum.addr = alloca i32, align 4
  %proppath.addr = alloca i8*, align 8
  %proppath_size.addr = alloca i64, align 8
  %i = alloca i32, align 4
  %temp = alloca [8 x i8], align 1
  %shift = alloca i32, align 4
  %port_num = alloca i32, align 4
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !18528, metadata !DIExpression()), !dbg !18529
  store i32 %pnum, i32* %pnum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %pnum.addr, metadata !18530, metadata !DIExpression()), !dbg !18531
  store i8* %proppath, i8** %proppath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %proppath.addr, metadata !18532, metadata !DIExpression()), !dbg !18533
  store i64 %proppath_size, i64* %proppath_size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %proppath_size.addr, metadata !18534, metadata !DIExpression()), !dbg !18535
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18536, metadata !DIExpression()), !dbg !18537
  call void @llvm.dbg.declare(metadata [8 x i8]* %temp, metadata !18538, metadata !DIExpression()), !dbg !18539
  %0 = load i8*, i8** %proppath.addr, align 8, !dbg !18540
  %1 = load i64, i64* %proppath_size.addr, align 8, !dbg !18541
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18542
  %mgr = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %2, i32 0, i32 8, !dbg !18543
  %3 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18543
  %conn_base_id = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %3, i32 0, i32 6, !dbg !18544
  %4 = load i32, i32* %conn_base_id, align 4, !dbg !18544
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %0, i64 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i64 0, i64 0), i32 %4) #8, !dbg !18545
  store i32 0, i32* %i, align 4, !dbg !18546
  br label %for.cond, !dbg !18548

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load i32, i32* %i, align 4, !dbg !18549
  %6 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18551
  %lct = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %6, i32 0, i32 4, !dbg !18552
  %7 = load i8, i8* %lct, align 8, !dbg !18552
  %conv = zext i8 %7 to i32, !dbg !18551
  %sub = sub i32 %conv, 1, !dbg !18553
  %cmp = icmp slt i32 %5, %sub, !dbg !18554
  br i1 %cmp, label %for.body, label %for.end, !dbg !18555

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %shift, metadata !18556, metadata !DIExpression()), !dbg !18558
  %8 = load i32, i32* %i, align 4, !dbg !18559
  %rem = srem i32 %8, 2, !dbg !18560
  %tobool = icmp ne i32 %rem, 0, !dbg !18561
  %9 = zext i1 %tobool to i64, !dbg !18561
  %cond = select i1 %tobool, i32 0, i32 4, !dbg !18561
  store i32 %cond, i32* %shift, align 4, !dbg !18558
  call void @llvm.dbg.declare(metadata i32* %port_num, metadata !18562, metadata !DIExpression()), !dbg !18563
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18564
  %rad = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %10, i32 0, i32 3, !dbg !18565
  %11 = load i32, i32* %i, align 4, !dbg !18566
  %div = sdiv i32 %11, 2, !dbg !18567
  %idxprom = sext i32 %div to i64, !dbg !18564
  %arrayidx = getelementptr [8 x i8], [8 x i8]* %rad, i64 0, i64 %idxprom, !dbg !18564
  %12 = load i8, i8* %arrayidx, align 1, !dbg !18564
  %conv2 = zext i8 %12 to i32, !dbg !18564
  %13 = load i32, i32* %shift, align 4, !dbg !18568
  %shr = ashr i32 %conv2, %13, !dbg !18569
  %and = and i32 %shr, 15, !dbg !18570
  store i32 %and, i32* %port_num, align 4, !dbg !18563
  %arraydecay = getelementptr inbounds [8 x i8], [8 x i8]* %temp, i64 0, i64 0, !dbg !18571
  %14 = load i32, i32* %port_num, align 4, !dbg !18572
  %call3 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay, i64 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.177, i64 0, i64 0), i32 %14) #8, !dbg !18573
  %15 = load i8*, i8** %proppath.addr, align 8, !dbg !18574
  %arraydecay4 = getelementptr inbounds [8 x i8], [8 x i8]* %temp, i64 0, i64 0, !dbg !18575
  %16 = load i64, i64* %proppath_size.addr, align 8, !dbg !18576
  %call5 = call i64 @strlcat(i8* %15, i8* %arraydecay4, i64 %16) #8, !dbg !18577
  br label %for.inc, !dbg !18578

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !18579
  %inc = add i32 %17, 1, !dbg !18579
  store i32 %inc, i32* %i, align 4, !dbg !18579
  br label %for.cond, !dbg !18580, !llvm.loop !18581

for.end:                                          ; preds = %for.cond
  %arraydecay6 = getelementptr inbounds [8 x i8], [8 x i8]* %temp, i64 0, i64 0, !dbg !18583
  %18 = load i32, i32* %pnum.addr, align 4, !dbg !18584
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay6, i64 8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.177, i64 0, i64 0), i32 %18) #8, !dbg !18585
  %19 = load i8*, i8** %proppath.addr, align 8, !dbg !18586
  %arraydecay8 = getelementptr inbounds [8 x i8], [8 x i8]* %temp, i64 0, i64 0, !dbg !18587
  %20 = load i64, i64* %proppath_size.addr, align 8, !dbg !18588
  %call9 = call i64 @strlcat(i8* %19, i8* %arraydecay8, i64 %20) #8, !dbg !18589
  ret void, !dbg !18590
}

; Function Attrs: noredzone
declare dso_local i32 @drm_connector_set_tile_property(%struct.drm_connector*) #3

; Function Attrs: noredzone
declare dso_local i32 @drm_connector_register(%struct.drm_connector*) #3

; Function Attrs: noredzone
declare dso_local i64 @strlcat(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_delayed_destroy_mstb(%struct.drm_dp_mst_branch* %mstb) #0 !dbg !18591 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %port_tmp = alloca %struct.drm_dp_mst_port*, align 8
  %txmsg = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %txmsg_tmp = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %wake_tx = alloca i8, align 1
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr12 = alloca i8*, align 8
  %tmp17 = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr21 = alloca i8*, align 8
  %tmp25 = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %__mptr27 = alloca i8*, align 8
  %tmp32 = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  %__mptr43 = alloca i8*, align 8
  %tmp48 = alloca %struct.drm_dp_sideband_msg_tx*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !18592, metadata !DIExpression()), !dbg !18593
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !18594, metadata !DIExpression()), !dbg !18595
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18596
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 8, !dbg !18597
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !18597
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18595
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !18598, metadata !DIExpression()), !dbg !18599
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port_tmp, metadata !18600, metadata !DIExpression()), !dbg !18601
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg, metadata !18602, metadata !DIExpression()), !dbg !18603
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_tx** %txmsg_tmp, metadata !18604, metadata !DIExpression()), !dbg !18605
  call void @llvm.dbg.declare(metadata i8* %wake_tx, metadata !18606, metadata !DIExpression()), !dbg !18607
  store i8 0, i8* %wake_tx, align 1, !dbg !18607
  %2 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18608
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %2, i32 0, i32 9, !dbg !18609
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !18610
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !18611, metadata !DIExpression()), !dbg !18614
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18614
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %3, i32 0, i32 6, !dbg !18614
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !18614
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !18614
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !18614
  store i8* %5, i8** %__mptr, align 8, !dbg !18614
  br label %do.body, !dbg !18614

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !18615

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !18614
  %add.ptr = getelementptr i8, i8* %6, i64 -24, !dbg !18614
  %7 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !18614
  store %struct.drm_dp_mst_port* %7, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !18615
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !18614
  store %struct.drm_dp_mst_port* %8, %struct.drm_dp_mst_port** %port, align 8, !dbg !18617
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !18618, metadata !DIExpression()), !dbg !18620
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18620
  %next3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 12, !dbg !18620
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %next3, i32 0, i32 0, !dbg !18620
  %10 = load %struct.list_head*, %struct.list_head** %next4, align 8, !dbg !18620
  %11 = bitcast %struct.list_head* %10 to i8*, !dbg !18620
  store i8* %11, i8** %__mptr2, align 8, !dbg !18620
  br label %do.body5, !dbg !18620

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !18621

do.end6:                                          ; preds = %do.body5
  %12 = load i8*, i8** %__mptr2, align 8, !dbg !18620
  %add.ptr8 = getelementptr i8, i8* %12, i64 -24, !dbg !18620
  %13 = bitcast i8* %add.ptr8 to %struct.drm_dp_mst_port*, !dbg !18620
  store %struct.drm_dp_mst_port* %13, %struct.drm_dp_mst_port** %tmp7, align 8, !dbg !18621
  %14 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp7, align 8, !dbg !18620
  store %struct.drm_dp_mst_port* %14, %struct.drm_dp_mst_port** %port_tmp, align 8, !dbg !18617
  br label %for.cond, !dbg !18617

for.cond:                                         ; preds = %do.end16, %do.end6
  %15 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18623
  %next9 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %15, i32 0, i32 12, !dbg !18623
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18623
  %ports10 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %16, i32 0, i32 6, !dbg !18623
  %cmp = icmp eq %struct.list_head* %next9, %ports10, !dbg !18623
  %lnot = xor i1 %cmp, true, !dbg !18623
  br i1 %lnot, label %for.body, label %for.end, !dbg !18617

for.body:                                         ; preds = %for.cond
  %17 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18625
  %next11 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %17, i32 0, i32 12, !dbg !18627
  call void @list_del(%struct.list_head* %next11) #8, !dbg !18628
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18629
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %18) #8, !dbg !18630
  br label %for.inc, !dbg !18631

for.inc:                                          ; preds = %for.body
  %19 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_tmp, align 8, !dbg !18623
  store %struct.drm_dp_mst_port* %19, %struct.drm_dp_mst_port** %port, align 8, !dbg !18623
  call void @llvm.dbg.declare(metadata i8** %__mptr12, metadata !18632, metadata !DIExpression()), !dbg !18634
  %20 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_tmp, align 8, !dbg !18634
  %next13 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %20, i32 0, i32 12, !dbg !18634
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %next13, i32 0, i32 0, !dbg !18634
  %21 = load %struct.list_head*, %struct.list_head** %next14, align 8, !dbg !18634
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !18634
  store i8* %22, i8** %__mptr12, align 8, !dbg !18634
  br label %do.body15, !dbg !18634

do.body15:                                        ; preds = %for.inc
  br label %do.end16, !dbg !18635

do.end16:                                         ; preds = %do.body15
  %23 = load i8*, i8** %__mptr12, align 8, !dbg !18634
  %add.ptr18 = getelementptr i8, i8* %23, i64 -24, !dbg !18634
  %24 = bitcast i8* %add.ptr18 to %struct.drm_dp_mst_port*, !dbg !18634
  store %struct.drm_dp_mst_port* %24, %struct.drm_dp_mst_port** %tmp17, align 8, !dbg !18635
  %25 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp17, align 8, !dbg !18634
  store %struct.drm_dp_mst_port* %25, %struct.drm_dp_mst_port** %port_tmp, align 8, !dbg !18623
  br label %for.cond, !dbg !18623, !llvm.loop !18637

for.end:                                          ; preds = %for.cond
  %26 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18639
  %lock19 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %26, i32 0, i32 9, !dbg !18640
  call void @mutex_unlock(%struct.mutex* %lock19) #8, !dbg !18641
  %27 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18642
  %mgr20 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %27, i32 0, i32 8, !dbg !18643
  %28 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr20, align 8, !dbg !18643
  %qlock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %28, i32 0, i32 17, !dbg !18644
  call void @mutex_lock(%struct.mutex* %qlock) #8, !dbg !18645
  call void @llvm.dbg.declare(metadata i8** %__mptr21, metadata !18646, metadata !DIExpression()), !dbg !18649
  %29 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18649
  %tx_msg_downq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %29, i32 0, i32 18, !dbg !18649
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %tx_msg_downq, i32 0, i32 0, !dbg !18649
  %30 = load %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !18649
  %31 = bitcast %struct.list_head* %30 to i8*, !dbg !18649
  store i8* %31, i8** %__mptr21, align 8, !dbg !18649
  br label %do.body23, !dbg !18649

do.body23:                                        ; preds = %for.end
  br label %do.end24, !dbg !18650

do.end24:                                         ; preds = %do.body23
  %32 = load i8*, i8** %__mptr21, align 8, !dbg !18649
  %add.ptr26 = getelementptr i8, i8* %32, i64 -320, !dbg !18649
  %33 = bitcast i8* %add.ptr26 to %struct.drm_dp_sideband_msg_tx*, !dbg !18649
  store %struct.drm_dp_sideband_msg_tx* %33, %struct.drm_dp_sideband_msg_tx** %tmp25, align 8, !dbg !18650
  %34 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %tmp25, align 8, !dbg !18649
  store %struct.drm_dp_sideband_msg_tx* %34, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18652
  call void @llvm.dbg.declare(metadata i8** %__mptr27, metadata !18653, metadata !DIExpression()), !dbg !18655
  %35 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18655
  %next28 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %35, i32 0, i32 5, !dbg !18655
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %next28, i32 0, i32 0, !dbg !18655
  %36 = load %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !18655
  %37 = bitcast %struct.list_head* %36 to i8*, !dbg !18655
  store i8* %37, i8** %__mptr27, align 8, !dbg !18655
  br label %do.body30, !dbg !18655

do.body30:                                        ; preds = %do.end24
  br label %do.end31, !dbg !18656

do.end31:                                         ; preds = %do.body30
  %38 = load i8*, i8** %__mptr27, align 8, !dbg !18655
  %add.ptr33 = getelementptr i8, i8* %38, i64 -320, !dbg !18655
  %39 = bitcast i8* %add.ptr33 to %struct.drm_dp_sideband_msg_tx*, !dbg !18655
  store %struct.drm_dp_sideband_msg_tx* %39, %struct.drm_dp_sideband_msg_tx** %tmp32, align 8, !dbg !18656
  %40 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %tmp32, align 8, !dbg !18655
  store %struct.drm_dp_sideband_msg_tx* %40, %struct.drm_dp_sideband_msg_tx** %txmsg_tmp, align 8, !dbg !18652
  br label %for.cond34, !dbg !18652

for.cond34:                                       ; preds = %do.end47, %do.end31
  %41 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18658
  %next35 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %41, i32 0, i32 5, !dbg !18658
  %42 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18658
  %tx_msg_downq36 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %42, i32 0, i32 18, !dbg !18658
  %cmp37 = icmp eq %struct.list_head* %next35, %tx_msg_downq36, !dbg !18658
  %lnot38 = xor i1 %cmp37, true, !dbg !18658
  br i1 %lnot38, label %for.body39, label %for.end50, !dbg !18652

for.body39:                                       ; preds = %for.cond34
  %43 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18660
  %dst = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %43, i32 0, i32 4, !dbg !18663
  %44 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %dst, align 8, !dbg !18663
  %45 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18664
  %cmp40 = icmp ne %struct.drm_dp_mst_branch* %44, %45, !dbg !18665
  br i1 %cmp40, label %if.then, label %if.end, !dbg !18666

if.then:                                          ; preds = %for.body39
  br label %for.inc42, !dbg !18667

if.end:                                           ; preds = %for.body39
  %46 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18668
  %state = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %46, i32 0, i32 7, !dbg !18669
  store i32 4, i32* %state, align 4, !dbg !18670
  %47 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18671
  %next41 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %47, i32 0, i32 5, !dbg !18672
  call void @list_del(%struct.list_head* %next41) #8, !dbg !18673
  store i8 1, i8* %wake_tx, align 1, !dbg !18674
  br label %for.inc42, !dbg !18675

for.inc42:                                        ; preds = %if.end, %if.then
  %48 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg_tmp, align 8, !dbg !18658
  store %struct.drm_dp_sideband_msg_tx* %48, %struct.drm_dp_sideband_msg_tx** %txmsg, align 8, !dbg !18658
  call void @llvm.dbg.declare(metadata i8** %__mptr43, metadata !18676, metadata !DIExpression()), !dbg !18678
  %49 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %txmsg_tmp, align 8, !dbg !18678
  %next44 = getelementptr inbounds %struct.drm_dp_sideband_msg_tx, %struct.drm_dp_sideband_msg_tx* %49, i32 0, i32 5, !dbg !18678
  %next45 = getelementptr inbounds %struct.list_head, %struct.list_head* %next44, i32 0, i32 0, !dbg !18678
  %50 = load %struct.list_head*, %struct.list_head** %next45, align 8, !dbg !18678
  %51 = bitcast %struct.list_head* %50 to i8*, !dbg !18678
  store i8* %51, i8** %__mptr43, align 8, !dbg !18678
  br label %do.body46, !dbg !18678

do.body46:                                        ; preds = %for.inc42
  br label %do.end47, !dbg !18679

do.end47:                                         ; preds = %do.body46
  %52 = load i8*, i8** %__mptr43, align 8, !dbg !18678
  %add.ptr49 = getelementptr i8, i8* %52, i64 -320, !dbg !18678
  %53 = bitcast i8* %add.ptr49 to %struct.drm_dp_sideband_msg_tx*, !dbg !18678
  store %struct.drm_dp_sideband_msg_tx* %53, %struct.drm_dp_sideband_msg_tx** %tmp48, align 8, !dbg !18679
  %54 = load %struct.drm_dp_sideband_msg_tx*, %struct.drm_dp_sideband_msg_tx** %tmp48, align 8, !dbg !18678
  store %struct.drm_dp_sideband_msg_tx* %54, %struct.drm_dp_sideband_msg_tx** %txmsg_tmp, align 8, !dbg !18658
  br label %for.cond34, !dbg !18658, !llvm.loop !18681

for.end50:                                        ; preds = %for.cond34
  %55 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18683
  %mgr51 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %55, i32 0, i32 8, !dbg !18684
  %56 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr51, align 8, !dbg !18684
  %qlock52 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %56, i32 0, i32 17, !dbg !18685
  call void @mutex_unlock(%struct.mutex* %qlock52) #8, !dbg !18686
  %57 = load i8, i8* %wake_tx, align 1, !dbg !18687
  %tobool = trunc i8 %57 to i1, !dbg !18687
  br i1 %tobool, label %if.then53, label %if.end55, !dbg !18689

if.then53:                                        ; preds = %for.end50
  %58 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18690
  %mgr54 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %58, i32 0, i32 8, !dbg !18690
  %59 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr54, align 8, !dbg !18690
  %tx_waitq = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %59, i32 0, i32 24, !dbg !18690
  call void @__wake_up(%struct.wait_queue_head* %tx_waitq, i32 3, i32 0, i8* null) #8, !dbg !18690
  br label %if.end55, !dbg !18690

if.end55:                                         ; preds = %if.then53, %for.end50
  %60 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18691
  call void @drm_dp_mst_put_mstb_malloc(%struct.drm_dp_mst_branch* %60) #8, !dbg !18692
  ret void, !dbg !18693
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_delayed_destroy_port(%struct.drm_dp_mst_port* %port) #0 !dbg !18694 {
entry:
  %port.addr = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_port* %port, %struct.drm_dp_mst_port** %port.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port.addr, metadata !18695, metadata !DIExpression()), !dbg !18696
  %0 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18697
  %1 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18698
  %mcs = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %1, i32 0, i32 4, !dbg !18699
  %2 = load i8, i8* %mcs, align 2, !dbg !18699
  %tobool = trunc i8 %2 to i1, !dbg !18699
  %call = call i32 @drm_dp_port_set_pdt(%struct.drm_dp_mst_port* %0, i8 zeroext 0, i1 zeroext %tobool) #8, !dbg !18700
  %3 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18701
  %connector = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %3, i32 0, i32 17, !dbg !18703
  %4 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !18703
  %tobool1 = icmp ne %struct.drm_connector* %4, null, !dbg !18701
  br i1 %tobool1, label %if.then, label %if.end, !dbg !18704

if.then:                                          ; preds = %entry
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18705
  %connector2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %5, i32 0, i32 17, !dbg !18707
  %6 = load %struct.drm_connector*, %struct.drm_connector** %connector2, align 8, !dbg !18707
  call void @drm_connector_unregister(%struct.drm_connector* %6) #8, !dbg !18708
  %7 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18709
  %connector3 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %7, i32 0, i32 17, !dbg !18710
  %8 = load %struct.drm_connector*, %struct.drm_connector** %connector3, align 8, !dbg !18710
  call void @drm_connector_put(%struct.drm_connector* %8) #8, !dbg !18711
  br label %if.end, !dbg !18712

if.end:                                           ; preds = %if.then, %entry
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port.addr, align 8, !dbg !18713
  call void @drm_dp_mst_put_port_malloc(%struct.drm_dp_mst_port* %9) #8, !dbg !18714
  ret void, !dbg !18715
}

; Function Attrs: noredzone
declare dso_local void @drm_connector_unregister(%struct.drm_connector*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_connector_put(%struct.drm_connector* %connector) #0 !dbg !18716 {
entry:
  %connector.addr = alloca %struct.drm_connector*, align 8
  store %struct.drm_connector* %connector, %struct.drm_connector** %connector.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_connector** %connector.addr, metadata !18717, metadata !DIExpression()), !dbg !18718
  %0 = load %struct.drm_connector*, %struct.drm_connector** %connector.addr, align 8, !dbg !18719
  %base = getelementptr inbounds %struct.drm_connector, %struct.drm_connector* %0, i32 0, i32 4, !dbg !18720
  call void @drm_mode_object_put(%struct.drm_mode_object* %base) #8, !dbg !18721
  ret void, !dbg !18722
}

; Function Attrs: noredzone
declare dso_local void @drm_mode_object_put(%struct.drm_mode_object*) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @drm_dp_mst_process_up_req(%struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_pending_up_req* %up_req) #0 !dbg !18723 {
entry:
  %retval = alloca i1, align 1
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %up_req.addr = alloca %struct.drm_dp_pending_up_req*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %msg = alloca %struct.drm_dp_sideband_msg_req_body*, align 8
  %hdr = alloca %struct.drm_dp_sideband_msg_hdr*, align 8
  %hotplug = alloca i8, align 1
  %guid = alloca i8*, align 8
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !18726, metadata !DIExpression()), !dbg !18727
  store %struct.drm_dp_pending_up_req* %up_req, %struct.drm_dp_pending_up_req** %up_req.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_pending_up_req** %up_req.addr, metadata !18728, metadata !DIExpression()), !dbg !18729
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !18730, metadata !DIExpression()), !dbg !18731
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18731
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_req_body** %msg, metadata !18732, metadata !DIExpression()), !dbg !18733
  %0 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req.addr, align 8, !dbg !18734
  %msg1 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %0, i32 0, i32 1, !dbg !18735
  store %struct.drm_dp_sideband_msg_req_body* %msg1, %struct.drm_dp_sideband_msg_req_body** %msg, align 8, !dbg !18733
  call void @llvm.dbg.declare(metadata %struct.drm_dp_sideband_msg_hdr** %hdr, metadata !18736, metadata !DIExpression()), !dbg !18737
  %1 = load %struct.drm_dp_pending_up_req*, %struct.drm_dp_pending_up_req** %up_req.addr, align 8, !dbg !18738
  %hdr2 = getelementptr inbounds %struct.drm_dp_pending_up_req, %struct.drm_dp_pending_up_req* %1, i32 0, i32 0, !dbg !18739
  store %struct.drm_dp_sideband_msg_hdr* %hdr2, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !18737
  call void @llvm.dbg.declare(metadata i8* %hotplug, metadata !18740, metadata !DIExpression()), !dbg !18741
  store i8 0, i8* %hotplug, align 1, !dbg !18741
  %2 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !18742
  %broadcast = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %2, i32 0, i32 3, !dbg !18744
  %3 = load i8, i8* %broadcast, align 1, !dbg !18744
  %tobool = trunc i8 %3 to i1, !dbg !18744
  br i1 %tobool, label %if.then, label %if.else18, !dbg !18745

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %guid, metadata !18746, metadata !DIExpression()), !dbg !18748
  store i8* null, i8** %guid, align 8, !dbg !18748
  %4 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg, align 8, !dbg !18749
  %req_type = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %4, i32 0, i32 0, !dbg !18751
  %5 = load i8, i8* %req_type, align 8, !dbg !18751
  %conv = zext i8 %5 to i32, !dbg !18749
  %cmp = icmp eq i32 %conv, 2, !dbg !18752
  br i1 %cmp, label %if.then4, label %if.else, !dbg !18753

if.then4:                                         ; preds = %if.then
  %6 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg, align 8, !dbg !18754
  %u = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %6, i32 0, i32 1, !dbg !18755
  %conn_stat = bitcast %union.ack_req* %u to %struct.drm_dp_connection_status_notify*, !dbg !18756
  %guid5 = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %conn_stat, i32 0, i32 0, !dbg !18757
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid5, i64 0, i64 0, !dbg !18754
  store i8* %arraydecay, i8** %guid, align 8, !dbg !18758
  br label %if.end14, !dbg !18759

if.else:                                          ; preds = %if.then
  %7 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg, align 8, !dbg !18760
  %req_type6 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %7, i32 0, i32 0, !dbg !18762
  %8 = load i8, i8* %req_type6, align 8, !dbg !18762
  %conv7 = zext i8 %8 to i32, !dbg !18760
  %cmp8 = icmp eq i32 %conv7, 19, !dbg !18763
  br i1 %cmp8, label %if.then10, label %if.end, !dbg !18764

if.then10:                                        ; preds = %if.else
  %9 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg, align 8, !dbg !18765
  %u11 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %9, i32 0, i32 1, !dbg !18766
  %resource_stat = bitcast %union.ack_req* %u11 to %struct.drm_dp_resource_status_notify*, !dbg !18767
  %guid12 = getelementptr inbounds %struct.drm_dp_resource_status_notify, %struct.drm_dp_resource_status_notify* %resource_stat, i32 0, i32 1, !dbg !18768
  %arraydecay13 = getelementptr inbounds [16 x i8], [16 x i8]* %guid12, i64 0, i64 0, !dbg !18765
  store i8* %arraydecay13, i8** %guid, align 8, !dbg !18769
  br label %if.end, !dbg !18770

if.end:                                           ; preds = %if.then10, %if.else
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then4
  %10 = load i8*, i8** %guid, align 8, !dbg !18771
  %tobool15 = icmp ne i8* %10, null, !dbg !18771
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !18773

if.then16:                                        ; preds = %if.end14
  %11 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !18774
  %12 = load i8*, i8** %guid, align 8, !dbg !18775
  %call = call %struct.drm_dp_mst_branch* @drm_dp_get_mst_branch_device_by_guid(%struct.drm_dp_mst_topology_mgr* %11, i8* %12) #8, !dbg !18776
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18777
  br label %if.end17, !dbg !18778

if.end17:                                         ; preds = %if.then16, %if.end14
  br label %if.end21, !dbg !18779

if.else18:                                        ; preds = %entry
  %13 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !18780
  %14 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !18782
  %lct = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %14, i32 0, i32 0, !dbg !18783
  %15 = load i8, i8* %lct, align 1, !dbg !18783
  %16 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !18784
  %rad = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %16, i32 0, i32 2, !dbg !18785
  %arraydecay19 = getelementptr inbounds [8 x i8], [8 x i8]* %rad, i64 0, i64 0, !dbg !18784
  %call20 = call %struct.drm_dp_mst_branch* @drm_dp_get_mst_branch_device(%struct.drm_dp_mst_topology_mgr* %13, i8 zeroext %15, i8* %arraydecay19) #8, !dbg !18786
  store %struct.drm_dp_mst_branch* %call20, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18787
  br label %if.end21

if.end21:                                         ; preds = %if.else18, %if.end17
  %17 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18788
  %tobool22 = icmp ne %struct.drm_dp_mst_branch* %17, null, !dbg !18788
  br i1 %tobool22, label %if.end26, label %if.then23, !dbg !18790

if.then23:                                        ; preds = %if.end21
  %18 = load %struct.drm_dp_sideband_msg_hdr*, %struct.drm_dp_sideband_msg_hdr** %hdr, align 8, !dbg !18791
  %lct24 = getelementptr inbounds %struct.drm_dp_sideband_msg_hdr, %struct.drm_dp_sideband_msg_hdr* %18, i32 0, i32 0, !dbg !18791
  %19 = load i8, i8* %lct24, align 1, !dbg !18791
  %conv25 = zext i8 %19 to i32, !dbg !18791
  call void (i32, i8*, ...) @__drm_dbg(i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.110, i64 0, i64 0), i32 %conv25) #8, !dbg !18791
  store i1 false, i1* %retval, align 1, !dbg !18793
  br label %return, !dbg !18793

if.end26:                                         ; preds = %if.end21
  %20 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg, align 8, !dbg !18794
  %req_type27 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %20, i32 0, i32 0, !dbg !18796
  %21 = load i8, i8* %req_type27, align 8, !dbg !18796
  %conv28 = zext i8 %21 to i32, !dbg !18794
  %cmp29 = icmp eq i32 %conv28, 2, !dbg !18797
  br i1 %cmp29, label %if.then31, label %if.end34, !dbg !18798

if.then31:                                        ; preds = %if.end26
  %22 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18799
  %23 = load %struct.drm_dp_sideband_msg_req_body*, %struct.drm_dp_sideband_msg_req_body** %msg, align 8, !dbg !18801
  %u32 = getelementptr inbounds %struct.drm_dp_sideband_msg_req_body, %struct.drm_dp_sideband_msg_req_body* %23, i32 0, i32 1, !dbg !18802
  %conn_stat33 = bitcast %union.ack_req* %u32 to %struct.drm_dp_connection_status_notify*, !dbg !18803
  call void @drm_dp_mst_handle_conn_stat(%struct.drm_dp_mst_branch* %22, %struct.drm_dp_connection_status_notify* %conn_stat33) #8, !dbg !18804
  store i8 1, i8* %hotplug, align 1, !dbg !18805
  br label %if.end34, !dbg !18806

if.end34:                                         ; preds = %if.then31, %if.end26
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18807
  call void @drm_dp_mst_topology_put_mstb(%struct.drm_dp_mst_branch* %24) #8, !dbg !18808
  %25 = load i8, i8* %hotplug, align 1, !dbg !18809
  %tobool35 = trunc i8 %25 to i1, !dbg !18809
  store i1 %tobool35, i1* %retval, align 1, !dbg !18810
  br label %return, !dbg !18810

return:                                           ; preds = %if.end34, %if.then23
  %26 = load i1, i1* %retval, align 1, !dbg !18811
  ret i1 %26, !dbg !18811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_branch* @drm_dp_get_mst_branch_device_by_guid(%struct.drm_dp_mst_topology_mgr* %mgr, i8* %guid) #0 !dbg !18812 {
entry:
  %mgr.addr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %guid.addr = alloca i8*, align 8
  %mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %ret = alloca i32, align 4
  store %struct.drm_dp_mst_topology_mgr* %mgr, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr.addr, metadata !18815, metadata !DIExpression()), !dbg !18816
  store i8* %guid, i8** %guid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %guid.addr, metadata !18817, metadata !DIExpression()), !dbg !18818
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb, metadata !18819, metadata !DIExpression()), !dbg !18820
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18821, metadata !DIExpression()), !dbg !18822
  %0 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !18823
  %lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %0, i32 0, i32 9, !dbg !18824
  call void @mutex_lock(%struct.mutex* %lock) #8, !dbg !18825
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !18826
  %mst_primary = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %1, i32 0, i32 12, !dbg !18827
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mst_primary, align 8, !dbg !18827
  %3 = load i8*, i8** %guid.addr, align 8, !dbg !18828
  %call = call %struct.drm_dp_mst_branch* @get_mst_branch_device_by_guid_helper(%struct.drm_dp_mst_branch* %2, i8* %3) #8, !dbg !18829
  store %struct.drm_dp_mst_branch* %call, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18830
  %4 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18831
  %tobool = icmp ne %struct.drm_dp_mst_branch* %4, null, !dbg !18831
  br i1 %tobool, label %if.then, label %if.end4, !dbg !18833

if.then:                                          ; preds = %entry
  %5 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18834
  %call1 = call i32 @drm_dp_mst_topology_try_get_mstb(%struct.drm_dp_mst_branch* %5) #8, !dbg !18836
  store i32 %call1, i32* %ret, align 4, !dbg !18837
  %6 = load i32, i32* %ret, align 4, !dbg !18838
  %tobool2 = icmp ne i32 %6, 0, !dbg !18838
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !18840

if.then3:                                         ; preds = %if.then
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18841
  br label %if.end, !dbg !18842

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !18843

if.end4:                                          ; preds = %if.end, %entry
  %7 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr.addr, align 8, !dbg !18844
  %lock5 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %7, i32 0, i32 9, !dbg !18845
  call void @mutex_unlock(%struct.mutex* %lock5) #8, !dbg !18846
  %8 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb, align 8, !dbg !18847
  ret %struct.drm_dp_mst_branch* %8, !dbg !18848
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @drm_dp_mst_handle_conn_stat(%struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_connection_status_notify* %conn_stat) #0 !dbg !18849 {
entry:
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %conn_stat.addr = alloca %struct.drm_dp_connection_status_notify*, align 8
  %mgr = alloca %struct.drm_dp_mst_topology_mgr*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %old_ddps = alloca i32, align 4
  %old_input = alloca i32, align 4
  %ret = alloca i32, align 4
  %i = alloca i32, align 4
  %new_pdt = alloca i8, align 1
  %new_mcs = alloca i8, align 1
  %dowork = alloca i8, align 1
  %create_connector = alloca i8, align 1
  %vcpi = alloca %struct.drm_dp_vcpi*, align 8
  %port_validated = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !18853, metadata !DIExpression()), !dbg !18854
  store %struct.drm_dp_connection_status_notify* %conn_stat, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_connection_status_notify** %conn_stat.addr, metadata !18855, metadata !DIExpression()), !dbg !18856
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_topology_mgr** %mgr, metadata !18857, metadata !DIExpression()), !dbg !18858
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18859
  %mgr1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 8, !dbg !18860
  %1 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr1, align 8, !dbg !18860
  store %struct.drm_dp_mst_topology_mgr* %1, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18858
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !18861, metadata !DIExpression()), !dbg !18862
  call void @llvm.dbg.declare(metadata i32* %old_ddps, metadata !18863, metadata !DIExpression()), !dbg !18864
  call void @llvm.dbg.declare(metadata i32* %old_input, metadata !18865, metadata !DIExpression()), !dbg !18866
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !18867, metadata !DIExpression()), !dbg !18868
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18869, metadata !DIExpression()), !dbg !18870
  call void @llvm.dbg.declare(metadata i8* %new_pdt, metadata !18871, metadata !DIExpression()), !dbg !18872
  call void @llvm.dbg.declare(metadata i8* %new_mcs, metadata !18873, metadata !DIExpression()), !dbg !18874
  call void @llvm.dbg.declare(metadata i8* %dowork, metadata !18875, metadata !DIExpression()), !dbg !18876
  store i8 0, i8* %dowork, align 1, !dbg !18876
  call void @llvm.dbg.declare(metadata i8* %create_connector, metadata !18877, metadata !DIExpression()), !dbg !18878
  store i8 0, i8* %create_connector, align 1, !dbg !18878
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18879
  %3 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18880
  %port_number = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %3, i32 0, i32 1, !dbg !18881
  %4 = load i8, i8* %port_number, align 1, !dbg !18881
  %call = call %struct.drm_dp_mst_port* @drm_dp_get_port(%struct.drm_dp_mst_branch* %2, i8 zeroext %4) #8, !dbg !18882
  store %struct.drm_dp_mst_port* %call, %struct.drm_dp_mst_port** %port, align 8, !dbg !18883
  %5 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18884
  %tobool = icmp ne %struct.drm_dp_mst_port* %5, null, !dbg !18884
  br i1 %tobool, label %if.end, label %if.then, !dbg !18886

if.then:                                          ; preds = %entry
  br label %if.end101, !dbg !18887

if.end:                                           ; preds = %entry
  %6 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18888
  %connector = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %6, i32 0, i32 17, !dbg !18890
  %7 = load %struct.drm_connector*, %struct.drm_connector** %connector, align 8, !dbg !18890
  %tobool2 = icmp ne %struct.drm_connector* %7, null, !dbg !18888
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !18891

if.then3:                                         ; preds = %if.end
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18892
  %input = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %8, i32 0, i32 3, !dbg !18895
  %9 = load i8, i8* %input, align 1, !dbg !18895
  %tobool4 = trunc i8 %9 to i1, !dbg !18895
  br i1 %tobool4, label %if.end7, label %land.lhs.true, !dbg !18896

land.lhs.true:                                    ; preds = %if.then3
  %10 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18897
  %input_port = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %10, i32 0, i32 5, !dbg !18898
  %11 = load i8, i8* %input_port, align 1, !dbg !18898
  %tobool5 = trunc i8 %11 to i1, !dbg !18898
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !18899

if.then6:                                         ; preds = %land.lhs.true
  %12 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18900
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18902
  call void @drm_dp_mst_topology_unlink_port(%struct.drm_dp_mst_topology_mgr* %12, %struct.drm_dp_mst_port* %13) #8, !dbg !18903
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18904
  %link_address_sent = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %14, i32 0, i32 9, !dbg !18905
  store i8 0, i8* %link_address_sent, align 8, !dbg !18906
  store i8 1, i8* %dowork, align 1, !dbg !18907
  br label %out, !dbg !18908

if.end7:                                          ; preds = %land.lhs.true, %if.then3
  %15 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18909
  %base = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %15, i32 0, i32 0, !dbg !18910
  %lock = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %base, i32 0, i32 1, !dbg !18911
  %call8 = call i32 @drm_modeset_lock(%struct.drm_modeset_lock* %lock, %struct.drm_modeset_acquire_ctx* null) #8, !dbg !18912
  br label %if.end17, !dbg !18913

if.else:                                          ; preds = %if.end
  %16 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18914
  %input9 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %16, i32 0, i32 3, !dbg !18916
  %17 = load i8, i8* %input9, align 1, !dbg !18916
  %tobool10 = trunc i8 %17 to i1, !dbg !18916
  br i1 %tobool10, label %land.lhs.true11, label %if.end16, !dbg !18917

land.lhs.true11:                                  ; preds = %if.else
  %18 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18918
  %input_port12 = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %18, i32 0, i32 5, !dbg !18919
  %19 = load i8, i8* %input_port12, align 1, !dbg !18919
  %tobool13 = trunc i8 %19 to i1, !dbg !18919
  br i1 %tobool13, label %if.end16, label %if.then14, !dbg !18920

if.then14:                                        ; preds = %land.lhs.true11
  store i8 1, i8* %create_connector, align 1, !dbg !18921
  %20 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18923
  %link_address_sent15 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %20, i32 0, i32 9, !dbg !18924
  store i8 0, i8* %link_address_sent15, align 8, !dbg !18925
  store i8 1, i8* %dowork, align 1, !dbg !18926
  br label %if.end16, !dbg !18927

if.end16:                                         ; preds = %if.then14, %land.lhs.true11, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end16, %if.end7
  %21 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18928
  %ddps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %21, i32 0, i32 5, !dbg !18929
  %22 = load i8, i8* %ddps, align 1, !dbg !18929
  %tobool18 = trunc i8 %22 to i1, !dbg !18929
  %conv = zext i1 %tobool18 to i32, !dbg !18928
  store i32 %conv, i32* %old_ddps, align 4, !dbg !18930
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18931
  %input19 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %23, i32 0, i32 3, !dbg !18932
  %24 = load i8, i8* %input19, align 1, !dbg !18932
  %tobool20 = trunc i8 %24 to i1, !dbg !18932
  %conv21 = zext i1 %tobool20 to i32, !dbg !18931
  store i32 %conv21, i32* %old_input, align 4, !dbg !18933
  %25 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18934
  %input_port22 = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %25, i32 0, i32 5, !dbg !18935
  %26 = load i8, i8* %input_port22, align 1, !dbg !18935
  %tobool23 = trunc i8 %26 to i1, !dbg !18935
  %27 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18936
  %input24 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %27, i32 0, i32 3, !dbg !18937
  %frombool = zext i1 %tobool23 to i8, !dbg !18938
  store i8 %frombool, i8* %input24, align 1, !dbg !18938
  %28 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18939
  %legacy_device_plug_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %28, i32 0, i32 2, !dbg !18940
  %29 = load i8, i8* %legacy_device_plug_status, align 1, !dbg !18940
  %tobool25 = trunc i8 %29 to i1, !dbg !18940
  %30 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18941
  %ldps = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %30, i32 0, i32 7, !dbg !18942
  %frombool26 = zext i1 %tobool25 to i8, !dbg !18943
  store i8 %frombool26, i8* %ldps, align 1, !dbg !18943
  %31 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18944
  %displayport_device_plug_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %31, i32 0, i32 3, !dbg !18945
  %32 = load i8, i8* %displayport_device_plug_status, align 1, !dbg !18945
  %tobool27 = trunc i8 %32 to i1, !dbg !18945
  %33 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18946
  %ddps28 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %33, i32 0, i32 5, !dbg !18947
  %frombool29 = zext i1 %tobool27 to i8, !dbg !18948
  store i8 %frombool29, i8* %ddps28, align 1, !dbg !18948
  %34 = load i32, i32* %old_ddps, align 4, !dbg !18949
  %35 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18951
  %ddps30 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %35, i32 0, i32 5, !dbg !18952
  %36 = load i8, i8* %ddps30, align 1, !dbg !18952
  %tobool31 = trunc i8 %36 to i1, !dbg !18952
  %conv32 = zext i1 %tobool31 to i32, !dbg !18951
  %cmp = icmp ne i32 %34, %conv32, !dbg !18953
  br i1 %cmp, label %if.then34, label %if.end45, !dbg !18954

if.then34:                                        ; preds = %if.end17
  %37 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18955
  %ddps35 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %37, i32 0, i32 5, !dbg !18958
  %38 = load i8, i8* %ddps35, align 1, !dbg !18958
  %tobool36 = trunc i8 %38 to i1, !dbg !18958
  br i1 %tobool36, label %land.lhs.true38, label %if.else43, !dbg !18959

land.lhs.true38:                                  ; preds = %if.then34
  %39 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18960
  %input39 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %39, i32 0, i32 3, !dbg !18961
  %40 = load i8, i8* %input39, align 1, !dbg !18961
  %tobool40 = trunc i8 %40 to i1, !dbg !18961
  br i1 %tobool40, label %if.else43, label %if.then41, !dbg !18962

if.then41:                                        ; preds = %land.lhs.true38
  %41 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !18963
  %42 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !18964
  %43 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18965
  %call42 = call i32 @drm_dp_send_enum_path_resources(%struct.drm_dp_mst_topology_mgr* %41, %struct.drm_dp_mst_branch* %42, %struct.drm_dp_mst_port* %43) #8, !dbg !18966
  br label %if.end44, !dbg !18966

if.else43:                                        ; preds = %land.lhs.true38, %if.then34
  %44 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18967
  %full_pbn = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %44, i32 0, i32 11, !dbg !18968
  store i16 0, i16* %full_pbn, align 2, !dbg !18969
  br label %if.end44

if.end44:                                         ; preds = %if.else43, %if.then41
  br label %if.end45, !dbg !18970

if.end45:                                         ; preds = %if.end44, %if.end17
  %45 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18971
  %input46 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %45, i32 0, i32 3, !dbg !18972
  %46 = load i8, i8* %input46, align 1, !dbg !18972
  %tobool47 = trunc i8 %46 to i1, !dbg !18972
  br i1 %tobool47, label %cond.true, label %cond.false, !dbg !18971

cond.true:                                        ; preds = %if.end45
  br label %cond.end, !dbg !18971

cond.false:                                       ; preds = %if.end45
  %47 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18973
  %peer_device_type = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %47, i32 0, i32 6, !dbg !18974
  %48 = load i8, i8* %peer_device_type, align 1, !dbg !18974
  %conv49 = zext i8 %48 to i32, !dbg !18973
  br label %cond.end, !dbg !18971

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv49, %cond.false ], !dbg !18971
  %conv50 = trunc i32 %cond to i8, !dbg !18971
  store i8 %conv50, i8* %new_pdt, align 1, !dbg !18975
  %49 = load %struct.drm_dp_connection_status_notify*, %struct.drm_dp_connection_status_notify** %conn_stat.addr, align 8, !dbg !18976
  %message_capability_status = getelementptr inbounds %struct.drm_dp_connection_status_notify, %struct.drm_dp_connection_status_notify* %49, i32 0, i32 4, !dbg !18977
  %50 = load i8, i8* %message_capability_status, align 1, !dbg !18977
  %tobool51 = trunc i8 %50 to i1, !dbg !18977
  %frombool52 = zext i1 %tobool51 to i8, !dbg !18978
  store i8 %frombool52, i8* %new_mcs, align 1, !dbg !18978
  %51 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18979
  %52 = load i8, i8* %new_pdt, align 1, !dbg !18980
  %53 = load i8, i8* %new_mcs, align 1, !dbg !18981
  %tobool53 = trunc i8 %53 to i1, !dbg !18981
  %call54 = call i32 @drm_dp_port_set_pdt(%struct.drm_dp_mst_port* %51, i8 zeroext %52, i1 zeroext %tobool53) #8, !dbg !18982
  store i32 %call54, i32* %ret, align 4, !dbg !18983
  %54 = load i32, i32* %ret, align 4, !dbg !18984
  %cmp55 = icmp eq i32 %54, 1, !dbg !18986
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !18987

if.then57:                                        ; preds = %cond.end
  store i8 1, i8* %dowork, align 1, !dbg !18988
  br label %if.end63, !dbg !18990

if.else58:                                        ; preds = %cond.end
  %55 = load i32, i32* %ret, align 4, !dbg !18991
  %cmp59 = icmp slt i32 %55, 0, !dbg !18993
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !18994

if.then61:                                        ; preds = %if.else58
  %56 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !18995
  %57 = load i32, i32* %ret, align 4, !dbg !18995
  call void (i8*, ...) @__drm_err(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.178, i64 0, i64 0), %struct.drm_dp_mst_port* %56, i32 %57) #8, !dbg !18995
  store i8 0, i8* %dowork, align 1, !dbg !18997
  br label %if.end62, !dbg !18998

if.end62:                                         ; preds = %if.then61, %if.else58
  br label %if.end63

if.end63:                                         ; preds = %if.end62, %if.then57
  %58 = load i32, i32* %old_input, align 4, !dbg !18999
  %tobool64 = icmp ne i32 %58, 0, !dbg !18999
  br i1 %tobool64, label %if.end86, label %land.lhs.true65, !dbg !19001

land.lhs.true65:                                  ; preds = %if.end63
  %59 = load i32, i32* %old_ddps, align 4, !dbg !19002
  %60 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19003
  %ddps66 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %60, i32 0, i32 5, !dbg !19004
  %61 = load i8, i8* %ddps66, align 1, !dbg !19004
  %tobool67 = trunc i8 %61 to i1, !dbg !19004
  %conv68 = zext i1 %tobool67 to i32, !dbg !19003
  %cmp69 = icmp ne i32 %59, %conv68, !dbg !19005
  br i1 %cmp69, label %land.lhs.true71, label %if.end86, !dbg !19006

land.lhs.true71:                                  ; preds = %land.lhs.true65
  %62 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19007
  %ddps72 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %62, i32 0, i32 5, !dbg !19008
  %63 = load i8, i8* %ddps72, align 1, !dbg !19008
  %tobool73 = trunc i8 %63 to i1, !dbg !19008
  br i1 %tobool73, label %if.end86, label %if.then74, !dbg !19009

if.then74:                                        ; preds = %land.lhs.true71
  store i32 0, i32* %i, align 4, !dbg !19010
  br label %for.cond, !dbg !19013

for.cond:                                         ; preds = %for.inc, %if.then74
  %64 = load i32, i32* %i, align 4, !dbg !19014
  %65 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !19016
  %max_payloads = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %65, i32 0, i32 5, !dbg !19017
  %66 = load i32, i32* %max_payloads, align 8, !dbg !19017
  %cmp75 = icmp slt i32 %64, %66, !dbg !19018
  br i1 %cmp75, label %for.body, label %for.end, !dbg !19019

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.drm_dp_vcpi** %vcpi, metadata !19020, metadata !DIExpression()), !dbg !19022
  %67 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !19023
  %proposed_vcpis = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %67, i32 0, i32 20, !dbg !19024
  %68 = load %struct.drm_dp_vcpi**, %struct.drm_dp_vcpi*** %proposed_vcpis, align 8, !dbg !19024
  %69 = load i32, i32* %i, align 4, !dbg !19025
  %idxprom = sext i32 %69 to i64, !dbg !19023
  %arrayidx = getelementptr %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %68, i64 %idxprom, !dbg !19023
  %70 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %arrayidx, align 8, !dbg !19023
  store %struct.drm_dp_vcpi* %70, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !19022
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port_validated, metadata !19026, metadata !DIExpression()), !dbg !19027
  %71 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !19028
  %tobool77 = icmp ne %struct.drm_dp_vcpi* %71, null, !dbg !19028
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !19030

if.then78:                                        ; preds = %for.body
  br label %for.inc, !dbg !19031

if.end79:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19032, metadata !DIExpression()), !dbg !19034
  %72 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !19034
  %73 = bitcast %struct.drm_dp_vcpi* %72 to i8*, !dbg !19034
  store i8* %73, i8** %__mptr, align 8, !dbg !19034
  br label %do.body, !dbg !19034

do.body:                                          ; preds = %if.end79
  br label %do.end, !dbg !19035

do.end:                                           ; preds = %do.body
  %74 = load i8*, i8** %__mptr, align 8, !dbg !19034
  %add.ptr = getelementptr i8, i8* %74, i64 -1240, !dbg !19034
  %75 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !19034
  store %struct.drm_dp_mst_port* %75, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !19035
  %76 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !19034
  store %struct.drm_dp_mst_port* %76, %struct.drm_dp_mst_port** %port_validated, align 8, !dbg !19037
  %77 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !19038
  %78 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_validated, align 8, !dbg !19039
  %call80 = call %struct.drm_dp_mst_port* @drm_dp_mst_topology_get_port_validated(%struct.drm_dp_mst_topology_mgr* %77, %struct.drm_dp_mst_port* %78) #8, !dbg !19040
  store %struct.drm_dp_mst_port* %call80, %struct.drm_dp_mst_port** %port_validated, align 8, !dbg !19041
  %79 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_validated, align 8, !dbg !19042
  %tobool81 = icmp ne %struct.drm_dp_mst_port* %79, null, !dbg !19042
  br i1 %tobool81, label %if.else84, label %if.then82, !dbg !19044

if.then82:                                        ; preds = %do.end
  %80 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !19045
  %payload_lock = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %80, i32 0, i32 19, !dbg !19047
  call void @mutex_lock(%struct.mutex* %payload_lock) #8, !dbg !19048
  %81 = load %struct.drm_dp_vcpi*, %struct.drm_dp_vcpi** %vcpi, align 8, !dbg !19049
  %num_slots = getelementptr inbounds %struct.drm_dp_vcpi, %struct.drm_dp_vcpi* %81, i32 0, i32 3, !dbg !19050
  store i32 0, i32* %num_slots, align 4, !dbg !19051
  %82 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !19052
  %payload_lock83 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %82, i32 0, i32 19, !dbg !19053
  call void @mutex_unlock(%struct.mutex* %payload_lock83) #8, !dbg !19054
  br label %if.end85, !dbg !19055

if.else84:                                        ; preds = %do.end
  %83 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port_validated, align 8, !dbg !19056
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %83) #8, !dbg !19058
  br label %if.end85

if.end85:                                         ; preds = %if.else84, %if.then82
  br label %for.inc, !dbg !19059

for.inc:                                          ; preds = %if.end85, %if.then78
  %84 = load i32, i32* %i, align 4, !dbg !19060
  %inc = add i32 %84, 1, !dbg !19060
  store i32 %inc, i32* %i, align 4, !dbg !19060
  br label %for.cond, !dbg !19061, !llvm.loop !19062

for.end:                                          ; preds = %for.cond
  br label %if.end86, !dbg !19064

if.end86:                                         ; preds = %for.end, %land.lhs.true71, %land.lhs.true65, %if.end63
  %85 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19065
  %connector87 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %85, i32 0, i32 17, !dbg !19067
  %86 = load %struct.drm_connector*, %struct.drm_connector** %connector87, align 8, !dbg !19067
  %tobool88 = icmp ne %struct.drm_connector* %86, null, !dbg !19065
  br i1 %tobool88, label %if.then89, label %if.else92, !dbg !19068

if.then89:                                        ; preds = %if.end86
  %87 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr, align 8, !dbg !19069
  %base90 = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %87, i32 0, i32 0, !dbg !19070
  %lock91 = getelementptr inbounds %struct.drm_private_obj, %struct.drm_private_obj* %base90, i32 0, i32 1, !dbg !19071
  call void @drm_modeset_unlock(%struct.drm_modeset_lock* %lock91) #8, !dbg !19072
  br label %if.end96, !dbg !19072

if.else92:                                        ; preds = %if.end86
  %88 = load i8, i8* %create_connector, align 1, !dbg !19073
  %tobool93 = trunc i8 %88 to i1, !dbg !19073
  br i1 %tobool93, label %if.then94, label %if.end95, !dbg !19075

if.then94:                                        ; preds = %if.else92
  %89 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !19076
  %90 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19077
  call void @drm_dp_mst_port_add_connector(%struct.drm_dp_mst_branch* %89, %struct.drm_dp_mst_port* %90) #8, !dbg !19078
  br label %if.end95, !dbg !19078

if.end95:                                         ; preds = %if.then94, %if.else92
  br label %if.end96

if.end96:                                         ; preds = %if.end95, %if.then89
  br label %out, !dbg !19067

out:                                              ; preds = %if.end96, %if.then6
  call void @llvm.dbg.label(metadata !19079), !dbg !19080
  %91 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19081
  call void @drm_dp_mst_topology_put_port(%struct.drm_dp_mst_port* %91) #8, !dbg !19082
  %92 = load i8, i8* %dowork, align 1, !dbg !19083
  %tobool97 = trunc i8 %92 to i1, !dbg !19083
  br i1 %tobool97, label %if.then98, label %if.end101, !dbg !19085

if.then98:                                        ; preds = %out
  %93 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_long_wq, align 8, !dbg !19086
  %94 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !19087
  %mgr99 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %94, i32 0, i32 8, !dbg !19088
  %95 = load %struct.drm_dp_mst_topology_mgr*, %struct.drm_dp_mst_topology_mgr** %mgr99, align 8, !dbg !19088
  %work = getelementptr inbounds %struct.drm_dp_mst_topology_mgr, %struct.drm_dp_mst_topology_mgr* %95, i32 0, i32 25, !dbg !19089
  %call100 = call zeroext i1 @queue_work(%struct.workqueue_struct* %93, %struct.work_struct* %work) #8, !dbg !19090
  br label %if.end101, !dbg !19090

if.end101:                                        ; preds = %if.then, %if.then98, %out
  ret void, !dbg !19091
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.drm_dp_mst_branch* @get_mst_branch_device_by_guid_helper(%struct.drm_dp_mst_branch* %mstb, i8* %guid) #0 !dbg !19092 {
entry:
  %retval = alloca %struct.drm_dp_mst_branch*, align 8
  %mstb.addr = alloca %struct.drm_dp_mst_branch*, align 8
  %guid.addr = alloca i8*, align 8
  %found_mstb = alloca %struct.drm_dp_mst_branch*, align 8
  %port = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.drm_dp_mst_port*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp18 = alloca %struct.drm_dp_mst_port*, align 8
  store %struct.drm_dp_mst_branch* %mstb, %struct.drm_dp_mst_branch** %mstb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %mstb.addr, metadata !19095, metadata !DIExpression()), !dbg !19096
  store i8* %guid, i8** %guid.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %guid.addr, metadata !19097, metadata !DIExpression()), !dbg !19098
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_branch** %found_mstb, metadata !19099, metadata !DIExpression()), !dbg !19100
  call void @llvm.dbg.declare(metadata %struct.drm_dp_mst_port** %port, metadata !19101, metadata !DIExpression()), !dbg !19102
  %0 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !19103
  %guid1 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %0, i32 0, i32 10, !dbg !19105
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid1, i64 0, i64 0, !dbg !19103
  %1 = load i8*, i8** %guid.addr, align 8, !dbg !19106
  %call = call i32 @memcmp(i8* %arraydecay, i8* %1, i64 16) #8, !dbg !19107
  %cmp = icmp eq i32 %call, 0, !dbg !19108
  br i1 %cmp, label %if.then, label %if.end, !dbg !19109

if.then:                                          ; preds = %entry
  %2 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !19110
  store %struct.drm_dp_mst_branch* %2, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !19111
  br label %return, !dbg !19111

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !19112, metadata !DIExpression()), !dbg !19115
  %3 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !19115
  %ports = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %3, i32 0, i32 6, !dbg !19115
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %ports, i32 0, i32 0, !dbg !19115
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !19115
  %5 = bitcast %struct.list_head* %4 to i8*, !dbg !19115
  store i8* %5, i8** %__mptr, align 8, !dbg !19115
  br label %do.body, !dbg !19115

do.body:                                          ; preds = %if.end
  br label %do.end, !dbg !19116

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !19115
  %add.ptr = getelementptr i8, i8* %6, i64 -24, !dbg !19115
  %7 = bitcast i8* %add.ptr to %struct.drm_dp_mst_port*, !dbg !19115
  store %struct.drm_dp_mst_port* %7, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !19116
  %8 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp, align 8, !dbg !19115
  store %struct.drm_dp_mst_port* %8, %struct.drm_dp_mst_port** %port, align 8, !dbg !19118
  br label %for.cond, !dbg !19118

for.cond:                                         ; preds = %do.end17, %do.end
  %9 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19119
  %next2 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %9, i32 0, i32 12, !dbg !19119
  %10 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb.addr, align 8, !dbg !19119
  %ports3 = getelementptr inbounds %struct.drm_dp_mst_branch, %struct.drm_dp_mst_branch* %10, i32 0, i32 6, !dbg !19119
  %cmp4 = icmp eq %struct.list_head* %next2, %ports3, !dbg !19119
  %lnot = xor i1 %cmp4, true, !dbg !19119
  br i1 %lnot, label %for.body, label %for.end, !dbg !19118

for.body:                                         ; preds = %for.cond
  %11 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19121
  %mstb5 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %11, i32 0, i32 13, !dbg !19124
  %12 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb5, align 8, !dbg !19124
  %tobool = icmp ne %struct.drm_dp_mst_branch* %12, null, !dbg !19121
  br i1 %tobool, label %if.end7, label %if.then6, !dbg !19125

if.then6:                                         ; preds = %for.body
  br label %for.inc, !dbg !19126

if.end7:                                          ; preds = %for.body
  %13 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19127
  %mstb8 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %13, i32 0, i32 13, !dbg !19128
  %14 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %mstb8, align 8, !dbg !19128
  %15 = load i8*, i8** %guid.addr, align 8, !dbg !19129
  %call9 = call %struct.drm_dp_mst_branch* @get_mst_branch_device_by_guid_helper(%struct.drm_dp_mst_branch* %14, i8* %15) #8, !dbg !19130
  store %struct.drm_dp_mst_branch* %call9, %struct.drm_dp_mst_branch** %found_mstb, align 8, !dbg !19131
  %16 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %found_mstb, align 8, !dbg !19132
  %tobool10 = icmp ne %struct.drm_dp_mst_branch* %16, null, !dbg !19132
  br i1 %tobool10, label %if.then11, label %if.end12, !dbg !19134

if.then11:                                        ; preds = %if.end7
  %17 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %found_mstb, align 8, !dbg !19135
  store %struct.drm_dp_mst_branch* %17, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !19136
  br label %return, !dbg !19136

if.end12:                                         ; preds = %if.end7
  br label %for.inc, !dbg !19137

for.inc:                                          ; preds = %if.end12, %if.then6
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !19138, metadata !DIExpression()), !dbg !19140
  %18 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %port, align 8, !dbg !19140
  %next14 = getelementptr inbounds %struct.drm_dp_mst_port, %struct.drm_dp_mst_port* %18, i32 0, i32 12, !dbg !19140
  %next15 = getelementptr inbounds %struct.list_head, %struct.list_head* %next14, i32 0, i32 0, !dbg !19140
  %19 = load %struct.list_head*, %struct.list_head** %next15, align 8, !dbg !19140
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !19140
  store i8* %20, i8** %__mptr13, align 8, !dbg !19140
  br label %do.body16, !dbg !19140

do.body16:                                        ; preds = %for.inc
  br label %do.end17, !dbg !19141

do.end17:                                         ; preds = %do.body16
  %21 = load i8*, i8** %__mptr13, align 8, !dbg !19140
  %add.ptr19 = getelementptr i8, i8* %21, i64 -24, !dbg !19140
  %22 = bitcast i8* %add.ptr19 to %struct.drm_dp_mst_port*, !dbg !19140
  store %struct.drm_dp_mst_port* %22, %struct.drm_dp_mst_port** %tmp18, align 8, !dbg !19141
  %23 = load %struct.drm_dp_mst_port*, %struct.drm_dp_mst_port** %tmp18, align 8, !dbg !19140
  store %struct.drm_dp_mst_port* %23, %struct.drm_dp_mst_port** %port, align 8, !dbg !19119
  br label %for.cond, !dbg !19119, !llvm.loop !19143

for.end:                                          ; preds = %for.cond
  store %struct.drm_dp_mst_branch* null, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !19145
  br label %return, !dbg !19145

return:                                           ; preds = %for.end, %if.then11, %if.then
  %24 = load %struct.drm_dp_mst_branch*, %struct.drm_dp_mst_branch** %retval, align 8, !dbg !19146
  ret %struct.drm_dp_mst_branch* %24, !dbg !19146
}

; Function Attrs: noredzone
declare dso_local i32 @memcmp(i8*, i8*, i64) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !19147 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !7877, metadata !DIExpression()), !dbg !19148
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !7887, metadata !DIExpression()), !dbg !19152
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !7889, metadata !DIExpression()), !dbg !19153
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !7891, metadata !DIExpression()), !dbg !19154
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !7893, metadata !DIExpression()), !dbg !19155
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !7899, metadata !DIExpression()), !dbg !19157
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !7905, metadata !DIExpression()), !dbg !19159
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !7914, metadata !DIExpression()), !dbg !19162
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !7916, metadata !DIExpression()), !dbg !19163
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !7918, metadata !DIExpression()), !dbg !19164
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !7920, metadata !DIExpression()), !dbg !19165
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !7922, metadata !DIExpression()), !dbg !19166
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !7924, metadata !DIExpression()), !dbg !19167
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !7926, metadata !DIExpression()), !dbg !19168
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !7928, metadata !DIExpression()), !dbg !19169
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !19170, metadata !DIExpression()), !dbg !19171
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !19172, metadata !DIExpression()), !dbg !19173
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !19174, metadata !DIExpression()), !dbg !19175
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !19176, metadata !DIExpression()), !dbg !19177
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !19178, metadata !DIExpression()), !dbg !19181
  %0 = load i64, i64* %n.addr, align 8, !dbg !19181
  store i64 %0, i64* %__a, align 8, !dbg !19181
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !19182, metadata !DIExpression()), !dbg !19181
  %1 = load i64, i64* %size.addr, align 8, !dbg !19181
  store i64 %1, i64* %__b, align 8, !dbg !19181
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !19183, metadata !DIExpression()), !dbg !19181
  store i64* %bytes, i64** %__d, align 8, !dbg !19181
  %cmp = icmp eq i64* %__a, %__b, !dbg !19181
  %conv = zext i1 %cmp to i32, !dbg !19181
  %2 = load i64*, i64** %__d, align 8, !dbg !19181
  %cmp1 = icmp eq i64* %__a, %2, !dbg !19181
  %conv2 = zext i1 %cmp1 to i32, !dbg !19181
  %3 = load i64, i64* %__a, align 8, !dbg !19181
  %4 = load i64, i64* %__b, align 8, !dbg !19181
  %5 = load i64*, i64** %__d, align 8, !dbg !19181
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !19181
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !19181
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !19181
  store i64 %8, i64* %5, align 8, !dbg !19181
  %frombool = zext i1 %7 to i8, !dbg !19181
  store i8 %frombool, i8* %tmp, align 1, !dbg !19181
  %9 = load i8, i8* %tmp, align 1, !dbg !19181
  %tobool = trunc i8 %9 to i1, !dbg !19181
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #8, !dbg !19184
  %lnot = xor i1 %call, true, !dbg !19184
  %lnot3 = xor i1 %lnot, true, !dbg !19184
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !19184
  %conv4 = sext i32 %lnot.ext to i64, !dbg !19184
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !19184
  br i1 %tobool5, label %if.then, label %if.end, !dbg !19185

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !19186
  br label %return, !dbg !19186

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !19187
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !19188
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !19189

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !19190
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !19191
  br i1 %13, label %if.then6, label %if.end8, !dbg !19192

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !19193
  %15 = load i32, i32* %flags.addr, align 4, !dbg !19194
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !19195
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !19196
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !19197

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !19198
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !19199
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !19200

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !19201
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !19202
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !19203
  %call.i.i = call i32 @get_order(i64 %21) #9, !dbg !19204
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !19166
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !19205
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !19206
  %24 = load i32, i32* %order.i.i, align 4, !dbg !19207
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !19208
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !19209
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !19210
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #10, !dbg !19211
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !19211
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !19211
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !19211
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !19211
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !19212
  br label %kmalloc.exit, !dbg !19212

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !19213
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19214
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !19214
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !19215

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !19216
  br label %kmalloc_index.exit.i, !dbg !19216

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19217
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !19218
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !19219

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19220
  br label %kmalloc_index.exit.i, !dbg !19220

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19221
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !19222
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !19223

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19224
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !19225
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !19226

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !19227
  br label %kmalloc_index.exit.i, !dbg !19227

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19228
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !19229
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !19230

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19231
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !19232
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !19233

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !19234
  br label %kmalloc_index.exit.i, !dbg !19234

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19235
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !19236
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !19237

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !19238
  br label %kmalloc_index.exit.i, !dbg !19238

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19239
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !19240
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !19241

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !19242
  br label %kmalloc_index.exit.i, !dbg !19242

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19243
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !19244
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !19245

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !19246
  br label %kmalloc_index.exit.i, !dbg !19246

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19247
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !19248
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !19249

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !19250
  br label %kmalloc_index.exit.i, !dbg !19250

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19251
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !19252
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !19253

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !19254
  br label %kmalloc_index.exit.i, !dbg !19254

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19255
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !19256
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !19257

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !19258
  br label %kmalloc_index.exit.i, !dbg !19258

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19259
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !19260
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !19261

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !19262
  br label %kmalloc_index.exit.i, !dbg !19262

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19263
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !19264
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !19265

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !19266
  br label %kmalloc_index.exit.i, !dbg !19266

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19267
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !19268
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !19269

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !19270
  br label %kmalloc_index.exit.i, !dbg !19270

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19271
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !19272
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !19273

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !19274
  br label %kmalloc_index.exit.i, !dbg !19274

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19275
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !19276
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !19277

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !19278
  br label %kmalloc_index.exit.i, !dbg !19278

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19279
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !19280
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !19281

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !19282
  br label %kmalloc_index.exit.i, !dbg !19282

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19283
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !19284
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !19285

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !19286
  br label %kmalloc_index.exit.i, !dbg !19286

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19287
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !19288
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !19289

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !19290
  br label %kmalloc_index.exit.i, !dbg !19290

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19291
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !19292
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !19293

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !19294
  br label %kmalloc_index.exit.i, !dbg !19294

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19295
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !19296
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !19297

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !19298
  br label %kmalloc_index.exit.i, !dbg !19298

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19299
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !19300
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !19301

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !19302
  br label %kmalloc_index.exit.i, !dbg !19302

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19303
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !19304
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !19305

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !19306
  br label %kmalloc_index.exit.i, !dbg !19306

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19307
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !19308
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !19309

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !19310
  br label %kmalloc_index.exit.i, !dbg !19310

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19311
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !19312
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !19313

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !19314
  br label %kmalloc_index.exit.i, !dbg !19314

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19315
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !19316
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !19317

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !19318
  br label %kmalloc_index.exit.i, !dbg !19318

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19319
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !19320
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !19321

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !19322
  br label %kmalloc_index.exit.i, !dbg !19322

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19323
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !19324
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !19325

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !19326
  br label %kmalloc_index.exit.i, !dbg !19326

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !19327
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !19328
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !19329

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !19330
  br label %kmalloc_index.exit.i, !dbg !19330

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.87, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !19331, !srcloc !8104
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 102) #7, !dbg !19332, !srcloc !8108
  unreachable, !dbg !19333

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !19334
  store i32 %59, i32* %index.i, align 4, !dbg !19335
  %60 = load i32, i32* %index.i, align 4, !dbg !19336
  %tobool.i = icmp ne i32 %60, 0, !dbg !19336
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !19337

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !19338
  br label %kmalloc.exit, !dbg !19338

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !19339
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19340
  %and.i.i = and i32 %62, 17, !dbg !19340
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !19340
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !19340
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !19340
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !19340
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !19341

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !19342
  br label %kmalloc_type.exit.i, !dbg !19342

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !19343
  %and2.i.i = and i32 %63, 1, !dbg !19344
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !19343
  %64 = zext i1 %tobool3.i.i to i64, !dbg !19343
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !19343
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !19345
  br label %kmalloc_type.exit.i, !dbg !19345

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !19346
  %idxprom.i = zext i32 %65 to i64, !dbg !19347
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !19347
  %66 = load i32, i32* %index.i, align 4, !dbg !19348
  %idxprom6.i = zext i32 %66 to i64, !dbg !19347
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !19347
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !19347
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !19349
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !19350
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19351
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19352
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #10, !dbg !19353
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !19353
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !19353
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !19353
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !19353
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !19154
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !19354
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !19355
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !19356
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !19357
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #10, !dbg !19358
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !19359
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !19360
  store i8* %76, i8** %retval.i, align 8, !dbg !19361
  br label %kmalloc.exit, !dbg !19361

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !19362
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !19363
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #10, !dbg !19364
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !19364
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !19364
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !19364
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !19364
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !19365
  br label %kmalloc.exit, !dbg !19365

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !19366
  store i8* %79, i8** %retval, align 8, !dbg !19367
  br label %return, !dbg !19367

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !19368
  %81 = load i32, i32* %flags.addr, align 4, !dbg !19369
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #8, !dbg !19370
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !19370
  %maskedptr = and i64 %ptrint, 7, !dbg !19370
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !19370
  call void @llvm.assume(i1 %maskcond), !dbg !19370
  store i8* %call9, i8** %retval, align 8, !dbg !19371
  br label %return, !dbg !19371

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !19372
  ret i8* %82, !dbg !19372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !19373 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !19377, metadata !DIExpression()), !dbg !19378
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !19379
  %tobool = trunc i8 %0 to i1, !dbg !19379
  %lnot = xor i1 %tobool, true, !dbg !19379
  %lnot1 = xor i1 %lnot, true, !dbg !19379
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !19379
  %conv = sext i32 %lnot.ext to i64, !dbg !19379
  %tobool2 = icmp ne i64 %conv, 0, !dbg !19379
  ret i1 %tobool2, !dbg !19380
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone willreturn }
attributes #5 = { nounwind willreturn }
attributes #6 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { noredzone }
attributes #9 = { noredzone nounwind readnone }
attributes #10 = { noredzone nounwind }
attributes #11 = { nounwind readonly }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!6259, !6260, !6261, !6262}
!llvm.ident = !{!6263}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "drm_dp_mst_topology_state_funcs", scope: !2, file: !3, line: 5347, type: !5701, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !340, globals: !6217, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/gpu/drm/drm_dp_mst_topology.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !11, !20, !28, !34, !41, !48, !54, !60, !66, !72, !79, !87, !93, !107, !113, !157, !166, !173, !178, !184, !190, !195, !203, !207, !223, !229, !236, !243, !248, !261, !278, !310, !319, !327, !334}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !6, line: 65, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10}
!9 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!11 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !12, line: 296, baseType: !7, size: 32, elements: !13)
!12 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!13 = !{!14, !15, !16, !17, !18, !19}
!14 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!15 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!16 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!17 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!18 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!19 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!20 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !21, line: 9, baseType: !7, size: 32, elements: !22)
!21 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!22 = !{!23, !24, !25, !26, !27}
!23 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!24 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!25 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!26 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!27 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!28 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !29, line: 54, baseType: !7, size: 32, elements: !30)
!29 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!30 = !{!31, !32, !33}
!31 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!32 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!33 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!34 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !35, line: 15, baseType: !7, size: 32, elements: !36)
!35 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!36 = !{!37, !38, !39, !40}
!37 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!38 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!41 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !42, line: 59, baseType: !7, size: 32, elements: !43)
!42 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!43 = !{!44, !45, !46, !47}
!44 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!47 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !49, line: 546, baseType: !7, size: 32, elements: !50)
!49 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!50 = !{!51, !52, !53}
!51 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!52 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !55, line: 16, baseType: !7, size: 32, elements: !56)
!55 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!56 = !{!57, !58, !59}
!57 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!58 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!59 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqreturn", file: !108, line: 11, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/irqreturn.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112}
!110 = !DIEnumerator(name: "IRQ_NONE", value: 0, isUnsigned: true)
!111 = !DIEnumerator(name: "IRQ_HANDLED", value: 1, isUnsigned: true)
!112 = !DIEnumerator(name: "IRQ_WAKE_THREAD", value: 2, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_mode_status", file: !114, line: 91, baseType: !115, size: 32, elements: !116)
!114 = !DIFile(filename: "./include/drm/drm_modes.h", directory: "/home/lizy2001/genbc/linux")
!115 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!116 = !{!117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156}
!117 = !DIEnumerator(name: "MODE_OK", value: 0)
!118 = !DIEnumerator(name: "MODE_HSYNC", value: 1)
!119 = !DIEnumerator(name: "MODE_VSYNC", value: 2)
!120 = !DIEnumerator(name: "MODE_H_ILLEGAL", value: 3)
!121 = !DIEnumerator(name: "MODE_V_ILLEGAL", value: 4)
!122 = !DIEnumerator(name: "MODE_BAD_WIDTH", value: 5)
!123 = !DIEnumerator(name: "MODE_NOMODE", value: 6)
!124 = !DIEnumerator(name: "MODE_NO_INTERLACE", value: 7)
!125 = !DIEnumerator(name: "MODE_NO_DBLESCAN", value: 8)
!126 = !DIEnumerator(name: "MODE_NO_VSCAN", value: 9)
!127 = !DIEnumerator(name: "MODE_MEM", value: 10)
!128 = !DIEnumerator(name: "MODE_VIRTUAL_X", value: 11)
!129 = !DIEnumerator(name: "MODE_VIRTUAL_Y", value: 12)
!130 = !DIEnumerator(name: "MODE_MEM_VIRT", value: 13)
!131 = !DIEnumerator(name: "MODE_NOCLOCK", value: 14)
!132 = !DIEnumerator(name: "MODE_CLOCK_HIGH", value: 15)
!133 = !DIEnumerator(name: "MODE_CLOCK_LOW", value: 16)
!134 = !DIEnumerator(name: "MODE_CLOCK_RANGE", value: 17)
!135 = !DIEnumerator(name: "MODE_BAD_HVALUE", value: 18)
!136 = !DIEnumerator(name: "MODE_BAD_VVALUE", value: 19)
!137 = !DIEnumerator(name: "MODE_BAD_VSCAN", value: 20)
!138 = !DIEnumerator(name: "MODE_HSYNC_NARROW", value: 21)
!139 = !DIEnumerator(name: "MODE_HSYNC_WIDE", value: 22)
!140 = !DIEnumerator(name: "MODE_HBLANK_NARROW", value: 23)
!141 = !DIEnumerator(name: "MODE_HBLANK_WIDE", value: 24)
!142 = !DIEnumerator(name: "MODE_VSYNC_NARROW", value: 25)
!143 = !DIEnumerator(name: "MODE_VSYNC_WIDE", value: 26)
!144 = !DIEnumerator(name: "MODE_VBLANK_NARROW", value: 27)
!145 = !DIEnumerator(name: "MODE_VBLANK_WIDE", value: 28)
!146 = !DIEnumerator(name: "MODE_PANEL", value: 29)
!147 = !DIEnumerator(name: "MODE_INTERLACE_WIDTH", value: 30)
!148 = !DIEnumerator(name: "MODE_ONE_WIDTH", value: 31)
!149 = !DIEnumerator(name: "MODE_ONE_HEIGHT", value: 32)
!150 = !DIEnumerator(name: "MODE_ONE_SIZE", value: 33)
!151 = !DIEnumerator(name: "MODE_NO_REDUCED", value: 34)
!152 = !DIEnumerator(name: "MODE_NO_STEREO", value: 35)
!153 = !DIEnumerator(name: "MODE_NO_420", value: 36)
!154 = !DIEnumerator(name: "MODE_STALE", value: -3)
!155 = !DIEnumerator(name: "MODE_BAD", value: -2)
!156 = !DIEnumerator(name: "MODE_ERROR", value: -1)
!157 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hdmi_picture_aspect", file: !158, line: 96, baseType: !7, size: 32, elements: !159)
!158 = !DIFile(filename: "./include/linux/hdmi.h", directory: "/home/lizy2001/genbc/linux")
!159 = !{!160, !161, !162, !163, !164, !165}
!160 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_NONE", value: 0, isUnsigned: true)
!161 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_4_3", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_16_9", value: 2, isUnsigned: true)
!163 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_64_27", value: 3, isUnsigned: true)
!164 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_256_135", value: 4, isUnsigned: true)
!165 = !DIEnumerator(name: "HDMI_PICTURE_ASPECT_RESERVED", value: 5, isUnsigned: true)
!166 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_color_encoding", file: !167, line: 77, baseType: !7, size: 32, elements: !168)
!167 = !DIFile(filename: "./include/drm/drm_color_mgmt.h", directory: "/home/lizy2001/genbc/linux")
!168 = !{!169, !170, !171, !172}
!169 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT601", value: 0, isUnsigned: true)
!170 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT709", value: 1, isUnsigned: true)
!171 = !DIEnumerator(name: "DRM_COLOR_YCBCR_BT2020", value: 2, isUnsigned: true)
!172 = !DIEnumerator(name: "DRM_COLOR_ENCODING_MAX", value: 3, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_color_range", file: !167, line: 84, baseType: !7, size: 32, elements: !174)
!174 = !{!175, !176, !177}
!175 = !DIEnumerator(name: "DRM_COLOR_YCBCR_LIMITED_RANGE", value: 0, isUnsigned: true)
!176 = !DIEnumerator(name: "DRM_COLOR_YCBCR_FULL_RANGE", value: 1, isUnsigned: true)
!177 = !DIEnumerator(name: "DRM_COLOR_RANGE_MAX", value: 2, isUnsigned: true)
!178 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_plane_type", file: !179, line: 536, baseType: !7, size: 32, elements: !180)
!179 = !DIFile(filename: "./include/drm/drm_plane.h", directory: "/home/lizy2001/genbc/linux")
!180 = !{!181, !182, !183}
!181 = !DIEnumerator(name: "DRM_PLANE_TYPE_OVERLAY", value: 0, isUnsigned: true)
!182 = !DIEnumerator(name: "DRM_PLANE_TYPE_PRIMARY", value: 1, isUnsigned: true)
!183 = !DIEnumerator(name: "DRM_PLANE_TYPE_CURSOR", value: 2, isUnsigned: true)
!184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_registration_state", file: !185, line: 94, baseType: !7, size: 32, elements: !186)
!185 = !DIFile(filename: "./include/drm/drm_connector.h", directory: "/home/lizy2001/genbc/linux")
!186 = !{!187, !188, !189}
!187 = !DIEnumerator(name: "DRM_CONNECTOR_INITIALIZING", value: 0, isUnsigned: true)
!188 = !DIEnumerator(name: "DRM_CONNECTOR_REGISTERED", value: 1, isUnsigned: true)
!189 = !DIEnumerator(name: "DRM_CONNECTOR_UNREGISTERED", value: 2, isUnsigned: true)
!190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_status", file: !185, line: 59, baseType: !7, size: 32, elements: !191)
!191 = !{!192, !193, !194}
!192 = !DIEnumerator(name: "connector_status_connected", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "connector_status_disconnected", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "connector_status_unknown", value: 3, isUnsigned: true)
!195 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "subpixel_order", file: !185, line: 133, baseType: !7, size: 32, elements: !196)
!196 = !{!197, !198, !199, !200, !201, !202}
!197 = !DIEnumerator(name: "SubPixelUnknown", value: 0, isUnsigned: true)
!198 = !DIEnumerator(name: "SubPixelHorizontalRGB", value: 1, isUnsigned: true)
!199 = !DIEnumerator(name: "SubPixelHorizontalBGR", value: 2, isUnsigned: true)
!200 = !DIEnumerator(name: "SubPixelVerticalRGB", value: 3, isUnsigned: true)
!201 = !DIEnumerator(name: "SubPixelVerticalBGR", value: 4, isUnsigned: true)
!202 = !DIEnumerator(name: "SubPixelNone", value: 5, isUnsigned: true)
!203 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_link_status", file: !185, line: 223, baseType: !7, size: 32, elements: !204)
!204 = !{!205, !206}
!205 = !DIEnumerator(name: "DRM_LINK_STATUS_GOOD", value: 0, isUnsigned: true)
!206 = !DIEnumerator(name: "DRM_LINK_STATUS_BAD", value: 1, isUnsigned: true)
!207 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_mode_subconnector", file: !208, line: 334, baseType: !7, size: 32, elements: !209)
!208 = !DIFile(filename: "./include/uapi/drm/drm_mode.h", directory: "/home/lizy2001/genbc/linux")
!209 = !{!210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222}
!210 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Automatic", value: 0, isUnsigned: true)
!211 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Unknown", value: 0, isUnsigned: true)
!212 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_VGA", value: 1, isUnsigned: true)
!213 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DVID", value: 3, isUnsigned: true)
!214 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DVIA", value: 4, isUnsigned: true)
!215 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Composite", value: 5, isUnsigned: true)
!216 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_SVIDEO", value: 6, isUnsigned: true)
!217 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Component", value: 8, isUnsigned: true)
!218 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_SCART", value: 9, isUnsigned: true)
!219 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_DisplayPort", value: 10, isUnsigned: true)
!220 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_HDMIA", value: 11, isUnsigned: true)
!221 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Native", value: 15, isUnsigned: true)
!222 = !DIEnumerator(name: "DRM_MODE_SUBCONNECTOR_Wireless", value: 18, isUnsigned: true)
!223 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_connector_force", file: !185, line: 46, baseType: !7, size: 32, elements: !224)
!224 = !{!225, !226, !227, !228}
!225 = !DIEnumerator(name: "DRM_FORCE_UNSPECIFIED", value: 0, isUnsigned: true)
!226 = !DIEnumerator(name: "DRM_FORCE_OFF", value: 1, isUnsigned: true)
!227 = !DIEnumerator(name: "DRM_FORCE_ON", value: 2, isUnsigned: true)
!228 = !DIEnumerator(name: "DRM_FORCE_ON_DIGITAL", value: 3, isUnsigned: true)
!229 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_panel_orientation", file: !185, line: 249, baseType: !115, size: 32, elements: !230)
!230 = !{!231, !232, !233, !234, !235}
!231 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_UNKNOWN", value: -1)
!232 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_NORMAL", value: 0)
!233 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_BOTTOM_UP", value: 1)
!234 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_LEFT_UP", value: 2)
!235 = !DIEnumerator(name: "DRM_MODE_PANEL_ORIENTATION_RIGHT_UP", value: 3)
!236 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "switch_power_state", file: !237, line: 33, baseType: !7, size: 32, elements: !238)
!237 = !DIFile(filename: "./include/drm/drm_device.h", directory: "/home/lizy2001/genbc/linux")
!238 = !{!239, !240, !241, !242}
!239 = !DIEnumerator(name: "DRM_SWITCH_POWER_ON", value: 0, isUnsigned: true)
!240 = !DIEnumerator(name: "DRM_SWITCH_POWER_OFF", value: 1, isUnsigned: true)
!241 = !DIEnumerator(name: "DRM_SWITCH_POWER_CHANGING", value: 2, isUnsigned: true)
!242 = !DIEnumerator(name: "DRM_SWITCH_POWER_DYNAMIC_OFF", value: 3, isUnsigned: true)
!243 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !244, line: 10, baseType: !7, size: 32, elements: !245)
!244 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!245 = !{!246, !247}
!246 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!247 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!248 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_debug_category", file: !249, line: 277, baseType: !7, size: 32, elements: !250)
!249 = !DIFile(filename: "./include/drm/drm_print.h", directory: "/home/lizy2001/genbc/linux")
!250 = !{!251, !252, !253, !254, !255, !256, !257, !258, !259, !260}
!251 = !DIEnumerator(name: "DRM_UT_CORE", value: 1, isUnsigned: true)
!252 = !DIEnumerator(name: "DRM_UT_DRIVER", value: 2, isUnsigned: true)
!253 = !DIEnumerator(name: "DRM_UT_KMS", value: 4, isUnsigned: true)
!254 = !DIEnumerator(name: "DRM_UT_PRIME", value: 8, isUnsigned: true)
!255 = !DIEnumerator(name: "DRM_UT_ATOMIC", value: 16, isUnsigned: true)
!256 = !DIEnumerator(name: "DRM_UT_VBL", value: 32, isUnsigned: true)
!257 = !DIEnumerator(name: "DRM_UT_STATE", value: 64, isUnsigned: true)
!258 = !DIEnumerator(name: "DRM_UT_LEASE", value: 128, isUnsigned: true)
!259 = !DIEnumerator(name: "DRM_UT_DP", value: 256, isUnsigned: true)
!260 = !DIEnumerator(name: "DRM_UT_DRMRES", value: 512, isUnsigned: true)
!261 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !262, line: 308, baseType: !7, size: 32, elements: !263)
!262 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!263 = !{!264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277}
!264 = !DIEnumerator(name: "WQ_UNBOUND", value: 2, isUnsigned: true)
!265 = !DIEnumerator(name: "WQ_FREEZABLE", value: 4, isUnsigned: true)
!266 = !DIEnumerator(name: "WQ_MEM_RECLAIM", value: 8, isUnsigned: true)
!267 = !DIEnumerator(name: "WQ_HIGHPRI", value: 16, isUnsigned: true)
!268 = !DIEnumerator(name: "WQ_CPU_INTENSIVE", value: 32, isUnsigned: true)
!269 = !DIEnumerator(name: "WQ_SYSFS", value: 64, isUnsigned: true)
!270 = !DIEnumerator(name: "WQ_POWER_EFFICIENT", value: 128, isUnsigned: true)
!271 = !DIEnumerator(name: "__WQ_DRAINING", value: 65536, isUnsigned: true)
!272 = !DIEnumerator(name: "__WQ_ORDERED", value: 131072, isUnsigned: true)
!273 = !DIEnumerator(name: "__WQ_LEGACY", value: 262144, isUnsigned: true)
!274 = !DIEnumerator(name: "__WQ_ORDERED_EXPLICIT", value: 524288, isUnsigned: true)
!275 = !DIEnumerator(name: "WQ_MAX_ACTIVE", value: 512, isUnsigned: true)
!276 = !DIEnumerator(name: "WQ_MAX_UNBOUND_PER_CPU", value: 4, isUnsigned: true)
!277 = !DIEnumerator(name: "WQ_DFL_ACTIVE", value: 256, isUnsigned: true)
!278 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !262, line: 30, baseType: !279, size: 64, elements: !280)
!279 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!280 = !{!281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309}
!281 = !DIEnumerator(name: "WORK_STRUCT_PENDING_BIT", value: 0)
!282 = !DIEnumerator(name: "WORK_STRUCT_DELAYED_BIT", value: 1)
!283 = !DIEnumerator(name: "WORK_STRUCT_PWQ_BIT", value: 2)
!284 = !DIEnumerator(name: "WORK_STRUCT_LINKED_BIT", value: 3)
!285 = !DIEnumerator(name: "WORK_STRUCT_COLOR_SHIFT", value: 4)
!286 = !DIEnumerator(name: "WORK_STRUCT_COLOR_BITS", value: 4)
!287 = !DIEnumerator(name: "WORK_STRUCT_PENDING", value: 1)
!288 = !DIEnumerator(name: "WORK_STRUCT_DELAYED", value: 2)
!289 = !DIEnumerator(name: "WORK_STRUCT_PWQ", value: 4)
!290 = !DIEnumerator(name: "WORK_STRUCT_LINKED", value: 8)
!291 = !DIEnumerator(name: "WORK_STRUCT_STATIC", value: 0)
!292 = !DIEnumerator(name: "WORK_NR_COLORS", value: 15)
!293 = !DIEnumerator(name: "WORK_NO_COLOR", value: 15)
!294 = !DIEnumerator(name: "WORK_CPU_UNBOUND", value: 1)
!295 = !DIEnumerator(name: "WORK_STRUCT_FLAG_BITS", value: 8)
!296 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BASE", value: 4)
!297 = !DIEnumerator(name: "__WORK_OFFQ_CANCELING", value: 4)
!298 = !DIEnumerator(name: "WORK_OFFQ_CANCELING", value: 16)
!299 = !DIEnumerator(name: "WORK_OFFQ_FLAG_BITS", value: 1)
!300 = !DIEnumerator(name: "WORK_OFFQ_POOL_SHIFT", value: 5)
!301 = !DIEnumerator(name: "WORK_OFFQ_LEFT", value: 59)
!302 = !DIEnumerator(name: "WORK_OFFQ_POOL_BITS", value: 31)
!303 = !DIEnumerator(name: "WORK_OFFQ_POOL_NONE", value: 2147483647)
!304 = !DIEnumerator(name: "WORK_STRUCT_FLAG_MASK", value: 255)
!305 = !DIEnumerator(name: "WORK_STRUCT_WQ_DATA_MASK", value: -256)
!306 = !DIEnumerator(name: "WORK_STRUCT_NO_POOL", value: 68719476704)
!307 = !DIEnumerator(name: "WORK_BUSY_PENDING", value: 1)
!308 = !DIEnumerator(name: "WORK_BUSY_RUNNING", value: 2)
!309 = !DIEnumerator(name: "WORKER_DESC_LEN", value: 24)
!310 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "drm_dp_quirk", file: !311, line: 1737, baseType: !7, size: 32, elements: !312)
!311 = !DIFile(filename: "./include/drm/drm_dp_helper.h", directory: "/home/lizy2001/genbc/linux")
!312 = !{!313, !314, !315, !316, !317, !318}
!313 = !DIEnumerator(name: "DP_DPCD_QUIRK_CONSTANT_N", value: 0, isUnsigned: true)
!314 = !DIEnumerator(name: "DP_DPCD_QUIRK_NO_PSR", value: 1, isUnsigned: true)
!315 = !DIEnumerator(name: "DP_DPCD_QUIRK_NO_SINK_COUNT", value: 2, isUnsigned: true)
!316 = !DIEnumerator(name: "DP_DPCD_QUIRK_DSC_WITHOUT_VIRTUAL_DPCD", value: 3, isUnsigned: true)
!317 = !DIEnumerator(name: "DP_QUIRK_FORCE_DPCD_BACKLIGHT", value: 4, isUnsigned: true)
!318 = !DIEnumerator(name: "DP_DPCD_QUIRK_CAN_DO_MAX_LINK_RATE_3_24_GBPS", value: 5, isUnsigned: true)
!319 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "refcount_saturation_type", file: !320, line: 119, baseType: !7, size: 32, elements: !321)
!320 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!321 = !{!322, !323, !324, !325, !326}
!322 = !DIEnumerator(name: "REFCOUNT_ADD_NOT_ZERO_OVF", value: 0, isUnsigned: true)
!323 = !DIEnumerator(name: "REFCOUNT_ADD_OVF", value: 1, isUnsigned: true)
!324 = !DIEnumerator(name: "REFCOUNT_ADD_UAF", value: 2, isUnsigned: true)
!325 = !DIEnumerator(name: "REFCOUNT_SUB_UAF", value: 3, isUnsigned: true)
!326 = !DIEnumerator(name: "REFCOUNT_DEC_LEAK", value: 4, isUnsigned: true)
!327 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !328, line: 305, baseType: !7, size: 32, elements: !329)
!328 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!329 = !{!330, !331, !332, !333}
!330 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!331 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!332 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!333 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!334 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !335, line: 567, baseType: !7, size: 32, elements: !336)
!335 = !DIFile(filename: "./include/linux/printk.h", directory: "/home/lizy2001/genbc/linux")
!336 = !{!337, !338, !339}
!337 = !DIEnumerator(name: "DUMP_PREFIX_NONE", value: 0, isUnsigned: true)
!338 = !DIEnumerator(name: "DUMP_PREFIX_ADDRESS", value: 1, isUnsigned: true)
!339 = !DIEnumerator(name: "DUMP_PREFIX_OFFSET", value: 2, isUnsigned: true)
!340 = !{!341, !115, !342, !344, !345, !5980, !506, !4343, !5988, !5994, !391, !1011, !5997, !5999, !6001, !6003, !279, !6119, !6121, !1023, !6122, !504, !364, !406, !934, !6123}
!341 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !343, line: 148, baseType: !7)
!343 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !346, size: 64)
!346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_mst_port", file: !347, line: 98, size: 10304, elements: !348)
!347 = !DIFile(filename: "./include/drm/drm_dp_mst_helper.h", directory: "/home/lizy2001/genbc/linux")
!348 = !{!349, !362, !363, !369, !372, !373, !374, !375, !376, !377, !378, !379, !384, !390, !5840, !5841, !5842, !5843, !5844, !5845, !5978, !5979}
!349 = !DIDerivedType(tag: DW_TAG_member, name: "topology_kref", scope: !346, file: !347, line: 103, baseType: !350, size: 32)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !351, line: 19, size: 32, elements: !352)
!351 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!352 = !{!353}
!353 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !350, file: !351, line: 20, baseType: !354, size: 32)
!354 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !320, line: 113, baseType: !355)
!355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !320, line: 111, size: 32, elements: !356)
!356 = !{!357}
!357 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !355, file: !320, line: 112, baseType: !358, size: 32)
!358 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !343, line: 168, baseType: !359)
!359 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 166, size: 32, elements: !360)
!360 = !{!361}
!361 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !359, file: !343, line: 167, baseType: !115, size: 32)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_kref", scope: !346, file: !347, line: 110, baseType: !350, size: 32, offset: 32)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !346, file: !347, line: 120, baseType: !364, size: 8, offset: 64)
!364 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !365, line: 17, baseType: !366)
!365 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!366 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !367, line: 21, baseType: !368)
!367 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!368 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !346, file: !347, line: 121, baseType: !370, size: 8, offset: 72)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !343, line: 30, baseType: !371)
!371 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "mcs", scope: !346, file: !347, line: 122, baseType: !370, size: 8, offset: 80)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "ddps", scope: !346, file: !347, line: 123, baseType: !370, size: 8, offset: 88)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "pdt", scope: !346, file: !347, line: 124, baseType: !364, size: 8, offset: 96)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "ldps", scope: !346, file: !347, line: 125, baseType: !370, size: 8, offset: 104)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "dpcd_rev", scope: !346, file: !347, line: 126, baseType: !364, size: 8, offset: 112)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "num_sdp_streams", scope: !346, file: !347, line: 127, baseType: !364, size: 8, offset: 120)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "num_sdp_stream_sinks", scope: !346, file: !347, line: 128, baseType: !364, size: 8, offset: 128)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "full_pbn", scope: !346, file: !347, line: 129, baseType: !380, size: 16, offset: 144)
!380 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !343, line: 103, baseType: !381)
!381 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !365, line: 19, baseType: !382)
!382 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !367, line: 24, baseType: !383)
!383 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !346, file: !347, line: 130, baseType: !385, size: 128, offset: 192)
!385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !343, line: 178, size: 128, elements: !386)
!386 = !{!387, !389}
!387 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !385, file: !343, line: 179, baseType: !388, size: 64)
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !385, file: !343, line: 179, baseType: !388, size: 64, offset: 64)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "mstb", scope: !346, file: !347, line: 141, baseType: !391, size: 64, offset: 320)
!391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !392, size: 64)
!392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_mst_branch", file: !347, line: 207, size: 768, elements: !393)
!393 = !{!394, !395, !396, !397, !401, !402, !403, !404, !405, !5837, !5838}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "topology_kref", scope: !392, file: !347, line: 212, baseType: !350, size: 32)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_kref", scope: !392, file: !347, line: 219, baseType: !350, size: 32, offset: 32)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_next", scope: !392, file: !347, line: 233, baseType: !385, size: 128, offset: 64)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !392, file: !347, line: 235, baseType: !398, size: 64, offset: 192)
!398 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 64, elements: !399)
!399 = !{!400}
!400 = !DISubrange(count: 8)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "lct", scope: !392, file: !347, line: 236, baseType: !364, size: 8, offset: 256)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "num_ports", scope: !392, file: !347, line: 237, baseType: !115, size: 32, offset: 288)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !392, file: !347, line: 249, baseType: !385, size: 128, offset: 320)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "port_parent", scope: !392, file: !347, line: 251, baseType: !345, size: 64, offset: 448)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "mgr", scope: !392, file: !347, line: 252, baseType: !406, size: 64, offset: 512)
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_mst_topology_mgr", file: !347, line: 568, size: 9728, elements: !408)
!408 = !{!409, !5712, !5713, !5726, !5727, !5762, !5763, !5764, !5791, !5792, !5793, !5794, !5795, !5796, !5797, !5801, !5802, !5803, !5804, !5805, !5806, !5807, !5816, !5824, !5825, !5826, !5827, !5828, !5829, !5830, !5831, !5832, !5833, !5834, !5835, !5836}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !407, file: !347, line: 572, baseType: !410, size: 640)
!410 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_private_obj", file: !411, line: 252, size: 640, elements: !412)
!411 = !DIFile(filename: "./include/drm/drm_atomic.h", directory: "/home/lizy2001/genbc/linux")
!412 = !{!413, !414, !3362, !5699}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !410, file: !411, line: 257, baseType: !385, size: 128)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !410, file: !411, line: 262, baseType: !415, size: 384, offset: 128)
!415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_modeset_lock", file: !416, line: 76, size: 384, elements: !417)
!416 = !DIFile(filename: "./include/drm/drm_modeset_lock.h", directory: "/home/lizy2001/genbc/linux")
!417 = !{!418, !3361}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !415, file: !416, line: 80, baseType: !419, size: 256)
!419 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_mutex", file: !420, line: 71, size: 256, elements: !421)
!420 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!421 = !{!422, !452}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !419, file: !420, line: 72, baseType: !423, size: 192)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !420, line: 53, size: 192, elements: !424)
!424 = !{!425, !435, !451}
!425 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !423, file: !420, line: 54, baseType: !426, size: 64)
!426 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !427, line: 13, baseType: !428)
!427 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!428 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !343, line: 175, baseType: !429)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !343, line: 173, size: 64, elements: !430)
!430 = !{!431}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !429, file: !343, line: 174, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !365, line: 22, baseType: !433)
!433 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !367, line: 30, baseType: !434)
!434 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !423, file: !420, line: 55, baseType: !436, offset: 64)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !437, line: 83, baseType: !438)
!437 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !437, line: 71, elements: !439)
!439 = !{!440}
!440 = !DIDerivedType(tag: DW_TAG_member, scope: !438, file: !437, line: 72, baseType: !441)
!441 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !438, file: !437, line: 72, elements: !442)
!442 = !{!443}
!443 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !441, file: !437, line: 73, baseType: !444)
!444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !437, line: 20, elements: !445)
!445 = !{!446}
!446 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !444, file: !437, line: 21, baseType: !447)
!447 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !448, line: 25, baseType: !449)
!448 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 25, elements: !450)
!450 = !{}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !423, file: !420, line: 59, baseType: !385, size: 128, offset: 64)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ctx", scope: !419, file: !420, line: 73, baseType: !453, size: 64, offset: 192)
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ww_acquire_ctx", file: !455, line: 31, size: 192, elements: !456)
!455 = !DIFile(filename: "./include/linux/ww_mutex.h", directory: "/home/lizy2001/genbc/linux")
!456 = !{!457, !3357, !3358, !3359, !3360}
!457 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !454, file: !455, line: 32, baseType: !458, size: 64)
!458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !459, size: 64)
!459 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !460, line: 640, size: 48640, elements: !461)
!460 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!461 = !{!462, !470, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !485, !513, !524, !619, !620, !621, !632, !633, !635, !636, !2638, !2639, !2645, !2646, !2647, !2648, !2649, !2650, !2651, !2652, !2653, !2654, !2655, !2656, !2657, !2658, !2659, !2660, !2716, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2728, !2729, !2731, !2732, !2733, !2735, !2736, !2737, !2738, !2739, !2740, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2764, !2769, !2770, !2771, !2772, !2773, !2775, !2778, !2781, !2784, !2787, !2813, !2914, !2945, !2946, !2947, !2948, !2949, !2950, !2951, !2952, !2953, !2962, !2963, !2964, !2965, !2966, !2971, !2972, !2973, !2976, !2977, !2980, !2983, !2986, !2987, !3019, !3022, !3023, !3102, !3103, !3106, !3107, !3110, !3111, !3112, !3116, !3117, !3118, !3131, !3132, !3133, !3143, !3148, !3149, !3155, !3156, !3157, !3158, !3159, !3160, !3161, !3162, !3178, !3179, !3180, !3181, !3182, !3183, !3184, !3185, !3186}
!462 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !459, file: !460, line: 646, baseType: !463, size: 128)
!463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !464, line: 56, size: 128, elements: !465)
!464 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!465 = !{!466, !467}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !463, file: !464, line: 57, baseType: !341, size: 64)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !463, file: !464, line: 58, baseType: !468, size: 32, offset: 64)
!468 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !365, line: 21, baseType: !469)
!469 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !367, line: 27, baseType: !7)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !459, file: !460, line: 649, baseType: !471, size: 64, offset: 128)
!471 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !279)
!472 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !459, file: !460, line: 657, baseType: !344, size: 64, offset: 192)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !459, file: !460, line: 658, baseType: !354, size: 32, offset: 256)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !459, file: !460, line: 660, baseType: !7, size: 32, offset: 288)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !459, file: !460, line: 661, baseType: !7, size: 32, offset: 320)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !459, file: !460, line: 684, baseType: !115, size: 32, offset: 352)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !459, file: !460, line: 686, baseType: !115, size: 32, offset: 384)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !459, file: !460, line: 687, baseType: !115, size: 32, offset: 416)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !459, file: !460, line: 688, baseType: !115, size: 32, offset: 448)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !459, file: !460, line: 689, baseType: !7, size: 32, offset: 480)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !459, file: !460, line: 691, baseType: !482, size: 64, offset: 512)
!482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !483, size: 64)
!483 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !484)
!484 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !460, line: 691, flags: DIFlagFwdDecl)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !459, file: !460, line: 692, baseType: !486, size: 832, offset: 576)
!486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !460, line: 451, size: 832, elements: !487)
!487 = !{!488, !493, !501, !502, !503, !507, !508, !509, !510, !511}
!488 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !486, file: !460, line: 453, baseType: !489, size: 128)
!489 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !460, line: 325, size: 128, elements: !490)
!490 = !{!491, !492}
!491 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !489, file: !460, line: 326, baseType: !341, size: 64)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !489, file: !460, line: 327, baseType: !468, size: 32, offset: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !486, file: !460, line: 454, baseType: !494, size: 192, align: 64, offset: 128)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !495, line: 24, size: 192, align: 64, elements: !496)
!495 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!496 = !{!497, !498, !500}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !494, file: !495, line: 25, baseType: !341, size: 64)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !494, file: !495, line: 26, baseType: !499, size: 64, offset: 64)
!499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !494, file: !495, line: 27, baseType: !499, size: 64, offset: 128)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !486, file: !460, line: 455, baseType: !385, size: 128, offset: 320)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !486, file: !460, line: 456, baseType: !7, size: 32, offset: 448)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !486, file: !460, line: 458, baseType: !504, size: 64, offset: 512)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !365, line: 23, baseType: !505)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !367, line: 31, baseType: !506)
!506 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !486, file: !460, line: 459, baseType: !504, size: 64, offset: 576)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !486, file: !460, line: 460, baseType: !504, size: 64, offset: 640)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !486, file: !460, line: 461, baseType: !504, size: 64, offset: 704)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !486, file: !460, line: 463, baseType: !504, size: 64, offset: 768)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !486, file: !460, line: 465, baseType: !512, offset: 832)
!512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !460, line: 415, elements: !450)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !459, file: !460, line: 693, baseType: !514, size: 384, offset: 1408)
!514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !460, line: 489, size: 384, elements: !515)
!515 = !{!516, !517, !518, !519, !520, !521, !522}
!516 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !514, file: !460, line: 490, baseType: !385, size: 128)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !514, file: !460, line: 491, baseType: !341, size: 64, offset: 128)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !514, file: !460, line: 492, baseType: !341, size: 64, offset: 192)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !514, file: !460, line: 493, baseType: !7, size: 32, offset: 256)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !514, file: !460, line: 494, baseType: !383, size: 16, offset: 288)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !514, file: !460, line: 495, baseType: !383, size: 16, offset: 304)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !514, file: !460, line: 497, baseType: !523, size: 64, offset: 320)
!523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !514, size: 64)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !459, file: !460, line: 697, baseType: !525, size: 1792, offset: 1792)
!525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !460, line: 507, size: 1792, elements: !526)
!526 = !{!527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !616, !617}
!527 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !525, file: !460, line: 508, baseType: !494, size: 192, align: 64)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !525, file: !460, line: 515, baseType: !504, size: 64, offset: 192)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !525, file: !460, line: 516, baseType: !504, size: 64, offset: 256)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !525, file: !460, line: 517, baseType: !504, size: 64, offset: 320)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !525, file: !460, line: 518, baseType: !504, size: 64, offset: 384)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !525, file: !460, line: 519, baseType: !504, size: 64, offset: 448)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !525, file: !460, line: 526, baseType: !432, size: 64, offset: 512)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !525, file: !460, line: 527, baseType: !504, size: 64, offset: 576)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !525, file: !460, line: 528, baseType: !7, size: 32, offset: 640)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !525, file: !460, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !525, file: !460, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !525, file: !460, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !525, file: !460, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !525, file: !460, line: 563, baseType: !541, size: 512, offset: 704)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !6, line: 118, size: 512, elements: !542)
!542 = !{!543, !551, !552, !557, !612, !613, !614, !615}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !541, file: !6, line: 119, baseType: !544, size: 256)
!544 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !545, line: 9, size: 256, elements: !546)
!545 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!546 = !{!547, !548}
!547 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !544, file: !545, line: 10, baseType: !494, size: 192, align: 64)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !544, file: !545, line: 11, baseType: !549, size: 64, offset: 192)
!549 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !550, line: 29, baseType: !432)
!550 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!551 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !541, file: !6, line: 120, baseType: !549, size: 64, offset: 256)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !541, file: !6, line: 121, baseType: !553, size: 64, offset: 320)
!553 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !554, size: 64)
!554 = !DISubroutineType(types: !555)
!555 = !{!5, !556}
!556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !541, file: !6, line: 122, baseType: !558, size: 64, offset: 384)
!558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !559, size: 64)
!559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !6, line: 159, size: 512, align: 512, elements: !560)
!560 = !{!561, !580, !581, !585, !595, !596, !607, !611}
!561 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !559, file: !6, line: 160, baseType: !562, size: 64)
!562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !563, size: 64)
!563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !6, line: 214, size: 4608, align: 512, elements: !564)
!564 = !{!565, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578}
!565 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !563, file: !6, line: 215, baseType: !566)
!566 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !437, line: 29, baseType: !444)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !563, file: !6, line: 216, baseType: !7, size: 32)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !563, file: !6, line: 217, baseType: !7, size: 32, offset: 32)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !563, file: !6, line: 218, baseType: !7, size: 32, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !563, file: !6, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !563, file: !6, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !563, file: !6, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !563, file: !6, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !563, file: !6, line: 233, baseType: !549, size: 64, offset: 128)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !563, file: !6, line: 234, baseType: !556, size: 64, offset: 192)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !563, file: !6, line: 235, baseType: !549, size: 64, offset: 256)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !563, file: !6, line: 236, baseType: !556, size: 64, offset: 320)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !563, file: !6, line: 237, baseType: !579, size: 4096, offset: 512)
!579 = !DICompositeType(tag: DW_TAG_array_type, baseType: !559, size: 4096, elements: !399)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !559, file: !6, line: 161, baseType: !7, size: 32, offset: 64)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !559, file: !6, line: 162, baseType: !582, size: 32, offset: 96)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !343, line: 27, baseType: !583)
!583 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !584, line: 96, baseType: !115)
!584 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!585 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !559, file: !6, line: 163, baseType: !586, size: 32, offset: 128)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !587, line: 276, baseType: !588)
!587 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !587, line: 276, size: 32, elements: !589)
!589 = !{!590}
!590 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !588, file: !587, line: 276, baseType: !591, size: 32)
!591 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !587, line: 70, baseType: !592)
!592 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !587, line: 65, size: 32, elements: !593)
!593 = !{!594}
!594 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !592, file: !587, line: 66, baseType: !7, size: 32)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !559, file: !6, line: 164, baseType: !556, size: 64, offset: 192)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !559, file: !6, line: 165, baseType: !597, size: 128, offset: 256)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !545, line: 14, size: 128, elements: !598)
!598 = !{!599}
!599 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !597, file: !545, line: 15, baseType: !600, size: 128)
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !495, line: 125, size: 128, elements: !601)
!601 = !{!602, !606}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !600, file: !495, line: 126, baseType: !603, size: 64)
!603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !495, line: 31, size: 64, elements: !604)
!604 = !{!605}
!605 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !603, file: !495, line: 32, baseType: !499, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !600, file: !495, line: 127, baseType: !499, size: 64, offset: 64)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !559, file: !6, line: 166, baseType: !608, size: 64, offset: 384)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!549}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !559, file: !6, line: 167, baseType: !549, size: 64, offset: 448)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !541, file: !6, line: 123, baseType: !364, size: 8, offset: 448)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !541, file: !6, line: 124, baseType: !364, size: 8, offset: 456)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !541, file: !6, line: 125, baseType: !364, size: 8, offset: 464)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !541, file: !6, line: 126, baseType: !364, size: 8, offset: 472)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !525, file: !460, line: 572, baseType: !541, size: 512, offset: 1216)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !525, file: !460, line: 580, baseType: !618, size: 64, offset: 1728)
!618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !459, file: !460, line: 721, baseType: !7, size: 32, offset: 3584)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !459, file: !460, line: 722, baseType: !115, size: 32, offset: 3616)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !459, file: !460, line: 723, baseType: !622, size: 64, offset: 3648)
!622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !623, size: 64)
!623 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !624)
!624 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !625, line: 17, baseType: !626)
!625 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!626 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !625, line: 17, size: 64, elements: !627)
!627 = !{!628}
!628 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !626, file: !625, line: 17, baseType: !629, size: 64)
!629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 64, elements: !630)
!630 = !{!631}
!631 = !DISubrange(count: 1)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !459, file: !460, line: 724, baseType: !624, size: 64, offset: 3712)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !459, file: !460, line: 749, baseType: !634, offset: 3776)
!634 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !460, line: 290, elements: !450)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !459, file: !460, line: 751, baseType: !385, size: 128, offset: 3776)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !459, file: !460, line: 757, baseType: !637, size: 64, offset: 3904)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !639, line: 388, size: 7296, elements: !640)
!639 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!640 = !{!641, !2634}
!641 = !DIDerivedType(tag: DW_TAG_member, scope: !638, file: !639, line: 389, baseType: !642, size: 7296)
!642 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !638, file: !639, line: 389, size: 7296, elements: !643)
!643 = !{!644, !2509, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2523, !2524, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2544, !2545, !2546, !2547, !2548, !2549, !2550, !2551, !2552, !2553, !2557, !2563, !2566, !2605, !2606, !2618, !2619, !2622, !2623, !2624, !2627, !2628, !2629, !2632, !2633}
!644 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !642, file: !639, line: 390, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !646, size: 64)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !639, line: 305, size: 1472, elements: !647)
!647 = !{!648, !649, !650, !651, !652, !653, !654, !655, !663, !664, !669, !670, !673, !2503, !2504, !2505, !2506, !2507}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !646, file: !639, line: 308, baseType: !341, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !646, file: !639, line: 309, baseType: !341, size: 64, offset: 64)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !646, file: !639, line: 313, baseType: !645, size: 64, offset: 128)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !646, file: !639, line: 313, baseType: !645, size: 64, offset: 192)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !646, file: !639, line: 315, baseType: !494, size: 192, align: 64, offset: 256)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !646, file: !639, line: 323, baseType: !341, size: 64, offset: 448)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !646, file: !639, line: 327, baseType: !637, size: 64, offset: 512)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !646, file: !639, line: 333, baseType: !656, size: 64, offset: 576)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !657, line: 284, baseType: !658)
!657 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !657, line: 284, size: 64, elements: !659)
!659 = !{!660}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !658, file: !657, line: 284, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !662, line: 19, baseType: !341)
!662 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!663 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !646, file: !639, line: 334, baseType: !341, size: 64, offset: 640)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !646, file: !639, line: 343, baseType: !665, size: 256, offset: 704)
!665 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !646, file: !639, line: 340, size: 256, elements: !666)
!666 = !{!667, !668}
!667 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !665, file: !639, line: 341, baseType: !494, size: 192, align: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !665, file: !639, line: 342, baseType: !341, size: 64, offset: 192)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !646, file: !639, line: 351, baseType: !385, size: 128, offset: 960)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !646, file: !639, line: 353, baseType: !671, size: 64, offset: 1088)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !672, size: 64)
!672 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !639, line: 353, flags: DIFlagFwdDecl)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !646, file: !639, line: 356, baseType: !674, size: 64, offset: 1152)
!674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !675, size: 64)
!675 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !676)
!676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !49, line: 557, size: 832, elements: !677)
!677 = !{!678, !682, !683, !687, !691, !2477, !2481, !2485, !2489, !2490, !2491, !2495, !2499}
!678 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !676, file: !49, line: 558, baseType: !679, size: 64)
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DISubroutineType(types: !681)
!681 = !{null, !645}
!682 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !676, file: !49, line: 559, baseType: !679, size: 64, offset: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !676, file: !49, line: 560, baseType: !684, size: 64, offset: 128)
!684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !685, size: 64)
!685 = !DISubroutineType(types: !686)
!686 = !{!115, !645, !341}
!687 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !676, file: !49, line: 561, baseType: !688, size: 64, offset: 192)
!688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !689, size: 64)
!689 = !DISubroutineType(types: !690)
!690 = !{!115, !645}
!691 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !676, file: !49, line: 562, baseType: !692, size: 64, offset: 256)
!692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !693, size: 64)
!693 = !DISubroutineType(types: !694)
!694 = !{!695, !696}
!695 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !639, line: 682, baseType: !7)
!696 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !697, size: 64)
!697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !49, line: 508, size: 768, elements: !698)
!698 = !{!699, !700, !701, !702, !703, !704, !711, !718, !724, !2471, !2472, !2474, !2476}
!699 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !697, file: !49, line: 509, baseType: !645, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !697, file: !49, line: 510, baseType: !7, size: 32, offset: 64)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !697, file: !49, line: 511, baseType: !342, size: 32, offset: 96)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !697, file: !49, line: 512, baseType: !341, size: 64, offset: 128)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !697, file: !49, line: 513, baseType: !341, size: 64, offset: 192)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !697, file: !49, line: 514, baseType: !705, size: 64, offset: 256)
!705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !706, size: 64)
!706 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !657, line: 385, baseType: !707)
!707 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 385, size: 64, elements: !708)
!708 = !{!709}
!709 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !707, file: !657, line: 385, baseType: !710, size: 64)
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !662, line: 15, baseType: !341)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !697, file: !49, line: 516, baseType: !712, size: 64, offset: 320)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !657, line: 359, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 359, size: 64, elements: !715)
!715 = !{!716}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !714, file: !657, line: 359, baseType: !717, size: 64)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !662, line: 16, baseType: !341)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !697, file: !49, line: 519, baseType: !719, size: 64, offset: 384)
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !662, line: 21, baseType: !720)
!720 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !662, line: 21, size: 64, elements: !721)
!721 = !{!722}
!722 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !720, file: !662, line: 21, baseType: !723, size: 64)
!723 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !662, line: 14, baseType: !341)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !697, file: !49, line: 521, baseType: !725, size: 64, offset: 448)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !639, line: 68, size: 512, align: 128, elements: !727)
!727 = !{!728, !729, !2463, !2470}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !726, file: !639, line: 69, baseType: !341, size: 64)
!729 = !DIDerivedType(tag: DW_TAG_member, scope: !726, file: !639, line: 77, baseType: !730, size: 320, offset: 64)
!730 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !726, file: !639, line: 77, size: 320, elements: !731)
!731 = !{!732, !2326, !2331, !2357, !2365, !2371, !2384, !2462}
!732 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !639, line: 78, baseType: !733, size: 320)
!733 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !730, file: !639, line: 78, size: 320, elements: !734)
!734 = !{!735, !736, !2324, !2325}
!735 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !733, file: !639, line: 84, baseType: !385, size: 128)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !733, file: !639, line: 86, baseType: !737, size: 64, offset: 128)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !12, line: 451, size: 1216, align: 64, elements: !739)
!739 = !{!740, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2319, !2320, !2321, !2322, !2323}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !738, file: !12, line: 452, baseType: !741, size: 64)
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !12, line: 610, size: 4224, elements: !743)
!743 = !{!744, !746, !747, !755, !762, !763, !2149, !2150, !2151, !2152, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165, !2166, !2167, !2168, !2169, !2170, !2171, !2172, !2173, !2174, !2175, !2176, !2177, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2193, !2201, !2202, !2203, !2213, !2214, !2215, !2216}
!744 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !742, file: !12, line: 611, baseType: !745, size: 16)
!745 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !343, line: 19, baseType: !383)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !742, file: !12, line: 612, baseType: !383, size: 16, offset: 16)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !742, file: !12, line: 613, baseType: !748, size: 32, offset: 32)
!748 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !749, line: 23, baseType: !750)
!749 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !749, line: 21, size: 32, elements: !751)
!751 = !{!752}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !750, file: !749, line: 22, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !343, line: 32, baseType: !754)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !584, line: 49, baseType: !7)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !742, file: !12, line: 614, baseType: !756, size: 32, offset: 64)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !749, line: 28, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !749, line: 26, size: 32, elements: !758)
!758 = !{!759}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !757, file: !749, line: 27, baseType: !760, size: 32)
!760 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !343, line: 33, baseType: !761)
!761 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !584, line: 50, baseType: !7)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !742, file: !12, line: 615, baseType: !7, size: 32, offset: 96)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !742, file: !12, line: 622, baseType: !764, size: 64, offset: 128)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !12, line: 1864, size: 1536, align: 512, elements: !767)
!767 = !{!768, !2023, !2036, !2040, !2046, !2050, !2054, !2058, !2062, !2066, !2070, !2071, !2075, !2079, !2099, !2125, !2129, !2135, !2140, !2144, !2145}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !766, file: !12, line: 1865, baseType: !769, size: 64)
!769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !770, size: 64)
!770 = !DISubroutineType(types: !771)
!771 = !{!772, !741, !772, !7}
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !774, line: 89, size: 1536, elements: !775)
!774 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!775 = !{!776, !777, !782, !790, !791, !806, !807, !811, !823, !895, !2007, !2008, !2009, !2015, !2016, !2017}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !773, file: !774, line: 91, baseType: !7, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !773, file: !774, line: 92, baseType: !778, size: 32, offset: 32)
!778 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !587, line: 277, baseType: !779)
!779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !587, line: 277, size: 32, elements: !780)
!780 = !{!781}
!781 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !779, file: !587, line: 277, baseType: !591, size: 32)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !773, file: !774, line: 93, baseType: !783, size: 128, offset: 64)
!783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !784, line: 38, size: 128, elements: !785)
!784 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!785 = !{!786, !788}
!786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !783, file: !784, line: 39, baseType: !787, size: 64)
!787 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !783, size: 64)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !783, file: !784, line: 39, baseType: !789, size: 64, offset: 64)
!789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !787, size: 64)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !773, file: !774, line: 94, baseType: !772, size: 64, offset: 192)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !773, file: !774, line: 95, baseType: !792, size: 128, offset: 256)
!792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !774, line: 47, size: 128, elements: !793)
!793 = !{!794, !803}
!794 = !DIDerivedType(tag: DW_TAG_member, scope: !792, file: !774, line: 48, baseType: !795, size: 64)
!795 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !792, file: !774, line: 48, size: 64, elements: !796)
!796 = !{!797, !802}
!797 = !DIDerivedType(tag: DW_TAG_member, scope: !795, file: !774, line: 49, baseType: !798, size: 64)
!798 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !795, file: !774, line: 49, size: 64, elements: !799)
!799 = !{!800, !801}
!800 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !798, file: !774, line: 50, baseType: !468, size: 32)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !798, file: !774, line: 50, baseType: !468, size: 32, offset: 32)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !795, file: !774, line: 52, baseType: !504, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !792, file: !774, line: 54, baseType: !804, size: 64, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !805, size: 64)
!805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !368)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !773, file: !774, line: 96, baseType: !741, size: 64, offset: 384)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !773, file: !774, line: 98, baseType: !808, size: 256, offset: 448)
!808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !368, size: 256, elements: !809)
!809 = !{!810}
!810 = !DISubrange(count: 32)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !773, file: !774, line: 101, baseType: !812, size: 32, offset: 704)
!812 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !813, line: 25, size: 32, elements: !814)
!813 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!814 = !{!815}
!815 = !DIDerivedType(tag: DW_TAG_member, scope: !812, file: !813, line: 26, baseType: !816, size: 32)
!816 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !812, file: !813, line: 26, size: 32, elements: !817)
!817 = !{!818}
!818 = !DIDerivedType(tag: DW_TAG_member, scope: !816, file: !813, line: 30, baseType: !819, size: 32)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !816, file: !813, line: 30, size: 32, elements: !820)
!820 = !{!821, !822}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !819, file: !813, line: 31, baseType: !436)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !819, file: !813, line: 32, baseType: !115, size: 32)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !773, file: !774, line: 102, baseType: !824, size: 64, offset: 768)
!824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !825, size: 64)
!825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !774, line: 135, size: 1024, align: 512, elements: !827)
!827 = !{!828, !832, !833, !840, !849, !853, !857, !861, !862, !866, !871, !883, !889}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !826, file: !774, line: 136, baseType: !829, size: 64)
!829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !830, size: 64)
!830 = !DISubroutineType(types: !831)
!831 = !{!115, !772, !7}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !826, file: !774, line: 137, baseType: !829, size: 64, offset: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !826, file: !774, line: 138, baseType: !834, size: 64, offset: 128)
!834 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!835 = !DISubroutineType(types: !836)
!836 = !{!115, !837, !839}
!837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !838, size: 64)
!838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !773)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !826, file: !774, line: 139, baseType: !841, size: 64, offset: 192)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !842, size: 64)
!842 = !DISubroutineType(types: !843)
!843 = !{!115, !837, !7, !844, !847}
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !846)
!846 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !792)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !826, file: !774, line: 141, baseType: !850, size: 64, offset: 256)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = !DISubroutineType(types: !852)
!852 = !{!115, !837}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !826, file: !774, line: 142, baseType: !854, size: 64, offset: 320)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DISubroutineType(types: !856)
!856 = !{!115, !772}
!857 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !826, file: !774, line: 143, baseType: !858, size: 64, offset: 384)
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DISubroutineType(types: !860)
!860 = !{null, !772}
!861 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !826, file: !774, line: 144, baseType: !858, size: 64, offset: 448)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !826, file: !774, line: 145, baseType: !863, size: 64, offset: 512)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DISubroutineType(types: !865)
!865 = !{null, !772, !741}
!866 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !826, file: !774, line: 146, baseType: !867, size: 64, offset: 576)
!867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !868, size: 64)
!868 = !DISubroutineType(types: !869)
!869 = !{!870, !772, !870, !115}
!870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !846, size: 64)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !826, file: !774, line: 147, baseType: !872, size: 64, offset: 640)
!872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !873, size: 64)
!873 = !DISubroutineType(types: !874)
!874 = !{!875, !877}
!875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !876, size: 64)
!876 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !774, line: 18, flags: DIFlagFwdDecl)
!877 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !878, size: 64)
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !879, line: 8, size: 128, elements: !880)
!879 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!880 = !{!881, !882}
!881 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !878, file: !879, line: 9, baseType: !875, size: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !878, file: !879, line: 10, baseType: !772, size: 64, offset: 64)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !826, file: !774, line: 148, baseType: !884, size: 64, offset: 704)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DISubroutineType(types: !886)
!886 = !{!115, !887, !370}
!887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !888, size: 64)
!888 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !878)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !826, file: !774, line: 149, baseType: !890, size: 64, offset: 768)
!890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !891, size: 64)
!891 = !DISubroutineType(types: !892)
!892 = !{!772, !772, !893}
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !742)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !773, file: !774, line: 103, baseType: !896, size: 64, offset: 832)
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !12, line: 1416, size: 9472, elements: !898)
!898 = !{!899, !900, !903, !904, !905, !908, !960, !1659, !1741, !1824, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1840, !1844, !1845, !1848, !1851, !1854, !1855, !1856, !1897, !1924, !1925, !1926, !1927, !1928, !1929, !1932, !1934, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1964, !1965, !1966, !1967, !1968, !1971, !1972, !1973, !1988, !1989, !1990, !2001, !2002, !2003, !2004, !2005, !2006}
!899 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !897, file: !12, line: 1417, baseType: !385, size: 128)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !897, file: !12, line: 1418, baseType: !901, size: 32, offset: 128)
!901 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !343, line: 16, baseType: !902)
!902 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !343, line: 13, baseType: !468)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !897, file: !12, line: 1419, baseType: !368, size: 8, offset: 160)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !897, file: !12, line: 1420, baseType: !341, size: 64, offset: 192)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !897, file: !12, line: 1421, baseType: !906, size: 64, offset: 256)
!906 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !343, line: 46, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !584, line: 88, baseType: !434)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !897, file: !12, line: 1422, baseType: !909, size: 64, offset: 320)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !12, line: 2228, size: 576, elements: !911)
!911 = !{!912, !913, !914, !921, !925, !929, !933, !937, !938, !948, !951, !952, !953, !957, !958, !959}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !910, file: !12, line: 2229, baseType: !844, size: 64)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !910, file: !12, line: 2230, baseType: !115, size: 32, offset: 64)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !910, file: !12, line: 2238, baseType: !915, size: 64, offset: 128)
!915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !916, size: 64)
!916 = !DISubroutineType(types: !917)
!917 = !{!115, !918}
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !920, line: 28, flags: DIFlagFwdDecl)
!920 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!921 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !910, file: !12, line: 2239, baseType: !922, size: 64, offset: 192)
!922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !923, size: 64)
!923 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !924)
!924 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !12, line: 70, flags: DIFlagFwdDecl)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !910, file: !12, line: 2240, baseType: !926, size: 64, offset: 256)
!926 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!927 = !DISubroutineType(types: !928)
!928 = !{!772, !909, !115, !844, !344}
!929 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !910, file: !12, line: 2242, baseType: !930, size: 64, offset: 320)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DISubroutineType(types: !932)
!932 = !{null, !896}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !910, file: !12, line: 2243, baseType: !934, size: 64, offset: 384)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !936, line: 76, flags: DIFlagFwdDecl)
!936 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!937 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !910, file: !12, line: 2244, baseType: !909, size: 64, offset: 448)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !910, file: !12, line: 2245, baseType: !939, size: 64, offset: 512)
!939 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !343, line: 182, size: 64, elements: !940)
!940 = !{!941}
!941 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !939, file: !343, line: 183, baseType: !942, size: 64)
!942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !943, size: 64)
!943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !343, line: 186, size: 128, elements: !944)
!944 = !{!945, !946}
!945 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !943, file: !343, line: 187, baseType: !942, size: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !943, file: !343, line: 187, baseType: !947, size: 64, offset: 64)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !910, file: !12, line: 2247, baseType: !949, offset: 576)
!949 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !950, line: 187, elements: !450)
!950 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!951 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !910, file: !12, line: 2248, baseType: !949, offset: 576)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !910, file: !12, line: 2249, baseType: !949, offset: 576)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !910, file: !12, line: 2250, baseType: !954, offset: 576)
!954 = !DICompositeType(tag: DW_TAG_array_type, baseType: !949, elements: !955)
!955 = !{!956}
!956 = !DISubrange(count: 3)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !910, file: !12, line: 2252, baseType: !949, offset: 576)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !910, file: !12, line: 2253, baseType: !949, offset: 576)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !910, file: !12, line: 2254, baseType: !949, offset: 576)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !897, file: !12, line: 1423, baseType: !961, size: 64, offset: 384)
!961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !962, size: 64)
!962 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !963)
!963 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !12, line: 1935, size: 1472, elements: !964)
!964 = !{!965, !969, !973, !974, !978, !984, !988, !989, !990, !994, !998, !999, !1000, !1001, !1007, !1012, !1013, !1636, !1637, !1638, !1639, !1643, !1658}
!965 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !963, file: !12, line: 1936, baseType: !966, size: 64)
!966 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !967, size: 64)
!967 = !DISubroutineType(types: !968)
!968 = !{!741, !896}
!969 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !963, file: !12, line: 1937, baseType: !970, size: 64, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !971, size: 64)
!971 = !DISubroutineType(types: !972)
!972 = !{null, !741}
!973 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !963, file: !12, line: 1938, baseType: !970, size: 64, offset: 128)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !963, file: !12, line: 1940, baseType: !975, size: 64, offset: 192)
!975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !976, size: 64)
!976 = !DISubroutineType(types: !977)
!977 = !{null, !741, !115}
!978 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !963, file: !12, line: 1941, baseType: !979, size: 64, offset: 256)
!979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !980, size: 64)
!980 = !DISubroutineType(types: !981)
!981 = !{!115, !741, !982}
!982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !983, size: 64)
!983 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !12, line: 289, flags: DIFlagFwdDecl)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !963, file: !12, line: 1942, baseType: !985, size: 64, offset: 320)
!985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !986, size: 64)
!986 = !DISubroutineType(types: !987)
!987 = !{!115, !741}
!988 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !963, file: !12, line: 1943, baseType: !970, size: 64, offset: 384)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !963, file: !12, line: 1944, baseType: !930, size: 64, offset: 448)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !963, file: !12, line: 1945, baseType: !991, size: 64, offset: 512)
!991 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !992, size: 64)
!992 = !DISubroutineType(types: !993)
!993 = !{!115, !896, !115}
!994 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !963, file: !12, line: 1946, baseType: !995, size: 64, offset: 576)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DISubroutineType(types: !997)
!997 = !{!115, !896}
!998 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !963, file: !12, line: 1947, baseType: !995, size: 64, offset: 640)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !963, file: !12, line: 1948, baseType: !995, size: 64, offset: 704)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !963, file: !12, line: 1949, baseType: !995, size: 64, offset: 768)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !963, file: !12, line: 1950, baseType: !1002, size: 64, offset: 832)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DISubroutineType(types: !1004)
!1004 = !{!115, !772, !1005}
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !12, line: 57, flags: DIFlagFwdDecl)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !963, file: !12, line: 1951, baseType: !1008, size: 64, offset: 896)
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1009, size: 64)
!1009 = !DISubroutineType(types: !1010)
!1010 = !{!115, !896, !1011, !870}
!1011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !115, size: 64)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !963, file: !12, line: 1952, baseType: !930, size: 64, offset: 960)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !963, file: !12, line: 1954, baseType: !1014, size: 64, offset: 1024)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{!115, !1017, !772}
!1017 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1018, size: 64)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !1019, line: 16, size: 896, elements: !1020)
!1019 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!1020 = !{!1021, !1022, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1054, !1055, !1635}
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1018, file: !1019, line: 17, baseType: !870, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1018, file: !1019, line: 18, baseType: !1023, size: 64, offset: 64)
!1023 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !343, line: 55, baseType: !1024)
!1024 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !584, line: 72, baseType: !1025)
!1025 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !584, line: 16, baseType: !341)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1018, file: !1019, line: 19, baseType: !1023, size: 64, offset: 128)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1018, file: !1019, line: 20, baseType: !1023, size: 64, offset: 192)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !1018, file: !1019, line: 21, baseType: !1023, size: 64, offset: 256)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1018, file: !1019, line: 22, baseType: !906, size: 64, offset: 320)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !1018, file: !1019, line: 23, baseType: !906, size: 64, offset: 384)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1018, file: !1019, line: 24, baseType: !423, size: 192, offset: 448)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1018, file: !1019, line: 25, baseType: !1033, size: 64, offset: 640)
!1033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1034 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !1019, line: 31, size: 256, elements: !1036)
!1036 = !{!1037, !1042, !1046, !1050}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1035, file: !1019, line: 32, baseType: !1038, size: 64)
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1039, size: 64)
!1039 = !DISubroutineType(types: !1040)
!1040 = !{!344, !1017, !1041}
!1041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !906, size: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !1035, file: !1019, line: 33, baseType: !1043, size: 64, offset: 64)
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1044, size: 64)
!1044 = !DISubroutineType(types: !1045)
!1045 = !{null, !1017, !344}
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1035, file: !1019, line: 34, baseType: !1047, size: 64, offset: 128)
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DISubroutineType(types: !1049)
!1049 = !{!344, !1017, !344, !1041}
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !1035, file: !1019, line: 35, baseType: !1051, size: 64, offset: 192)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!115, !1017, !344}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !1018, file: !1019, line: 26, baseType: !115, size: 32, offset: 704)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1018, file: !1019, line: 27, baseType: !1056, size: 64, offset: 768)
!1056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1057, size: 64)
!1057 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1058)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !12, line: 916, size: 1856, align: 32, elements: !1059)
!1059 = !{!1060, !1078, !1079, !1080, !1343, !1344, !1345, !1346, !1347, !1349, !1350, !1351, !1422, !1617, !1626, !1627, !1628, !1629, !1630, !1631, !1634}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !1058, file: !12, line: 920, baseType: !1061, size: 128)
!1061 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1058, file: !12, line: 917, size: 128, elements: !1062)
!1062 = !{!1063, !1069}
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !1061, file: !12, line: 918, baseType: !1064, size: 64)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !1065, line: 58, size: 64, elements: !1066)
!1065 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!1066 = !{!1067}
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1064, file: !1065, line: 59, baseType: !1068, size: 64)
!1068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1064, size: 64)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !1061, file: !12, line: 919, baseType: !1070, size: 128, align: 64)
!1070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !343, line: 216, size: 128, align: 64, elements: !1071)
!1071 = !{!1072, !1074}
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1070, file: !343, line: 217, baseType: !1073, size: 64)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1070, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1070, file: !343, line: 218, baseType: !1075, size: 64, offset: 64)
!1075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1076, size: 64)
!1076 = !DISubroutineType(types: !1077)
!1077 = !{null, !1073}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !1058, file: !12, line: 921, baseType: !878, size: 128, offset: 128)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !1058, file: !12, line: 922, baseType: !741, size: 64, offset: 256)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !1058, file: !12, line: 923, baseType: !1081, size: 64, offset: 320)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1083)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !12, line: 1822, size: 2048, elements: !1084)
!1084 = !{!1085, !1086, !1091, !1098, !1102, !1128, !1129, !1133, !1146, !1147, !1155, !1159, !1160, !1164, !1165, !1169, !1174, !1175, !1179, !1183, !1298, !1302, !1306, !1310, !1311, !1317, !1321, !1326, !1330, !1334, !1338, !1342}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1083, file: !12, line: 1823, baseType: !934, size: 64)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !1083, file: !12, line: 1824, baseType: !1087, size: 64, offset: 64)
!1087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1088, size: 64)
!1088 = !DISubroutineType(types: !1089)
!1089 = !{!906, !1090, !906, !115}
!1090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 64)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !1083, file: !12, line: 1825, baseType: !1092, size: 64, offset: 128)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{!1095, !1090, !870, !1023, !1041}
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !343, line: 60, baseType: !1096)
!1096 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !584, line: 73, baseType: !1097)
!1097 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !584, line: 15, baseType: !279)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !1083, file: !12, line: 1826, baseType: !1099, size: 64, offset: 192)
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1100, size: 64)
!1100 = !DISubroutineType(types: !1101)
!1101 = !{!1095, !1090, !844, !1023, !1041}
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !1083, file: !12, line: 1827, baseType: !1103, size: 64, offset: 256)
!1103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1104, size: 64)
!1104 = !DISubroutineType(types: !1105)
!1105 = !{!1095, !1106, !1126}
!1106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1107, size: 64)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !12, line: 320, size: 384, elements: !1108)
!1108 = !{!1109, !1110, !1111, !1115, !1116, !1117, !1118, !1119}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !1107, file: !12, line: 321, baseType: !1090, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !1107, file: !12, line: 326, baseType: !906, size: 64, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !1107, file: !12, line: 327, baseType: !1112, size: 64, offset: 128)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{null, !1106, !279, !279}
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1107, file: !12, line: 328, baseType: !344, size: 64, offset: 192)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !1107, file: !12, line: 329, baseType: !115, size: 32, offset: 256)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !1107, file: !12, line: 330, baseType: !381, size: 16, offset: 288)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !1107, file: !12, line: 331, baseType: !381, size: 16, offset: 304)
!1119 = !DIDerivedType(tag: DW_TAG_member, scope: !1107, file: !12, line: 332, baseType: !1120, size: 64, offset: 320)
!1120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1107, file: !12, line: 332, size: 64, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !1120, file: !12, line: 333, baseType: !7, size: 32)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !1120, file: !12, line: 334, baseType: !1124, size: 64)
!1124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1125, size: 64)
!1125 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !12, line: 334, flags: DIFlagFwdDecl)
!1126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1127, size: 64)
!1127 = !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !12, line: 64, flags: DIFlagFwdDecl)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !1083, file: !12, line: 1828, baseType: !1103, size: 64, offset: 320)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !1083, file: !12, line: 1829, baseType: !1130, size: 64, offset: 384)
!1130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1131, size: 64)
!1131 = !DISubroutineType(types: !1132)
!1132 = !{!115, !1106, !370}
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !1083, file: !12, line: 1830, baseType: !1134, size: 64, offset: 448)
!1134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!1135 = !DISubroutineType(types: !1136)
!1136 = !{!115, !1090, !1137}
!1137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1138, size: 64)
!1138 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !12, line: 1776, size: 128, elements: !1139)
!1139 = !{!1140, !1145}
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !1138, file: !12, line: 1777, baseType: !1141, size: 64)
!1141 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !12, line: 1773, baseType: !1142)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{!115, !1137, !844, !115, !906, !504, !7}
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !1138, file: !12, line: 1778, baseType: !906, size: 64, offset: 64)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !1083, file: !12, line: 1831, baseType: !1134, size: 64, offset: 512)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1083, file: !12, line: 1832, baseType: !1148, size: 64, offset: 576)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DISubroutineType(types: !1150)
!1150 = !{!1151, !1090, !1153}
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !1152, line: 52, baseType: !7)
!1152 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !920, line: 27, flags: DIFlagFwdDecl)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !1083, file: !12, line: 1833, baseType: !1156, size: 64, offset: 640)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DISubroutineType(types: !1158)
!1158 = !{!279, !1090, !7, !341}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !1083, file: !12, line: 1834, baseType: !1156, size: 64, offset: 704)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1083, file: !12, line: 1835, baseType: !1161, size: 64, offset: 768)
!1161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1162, size: 64)
!1162 = !DISubroutineType(types: !1163)
!1163 = !{!115, !1090, !645}
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !1083, file: !12, line: 1836, baseType: !341, size: 64, offset: 832)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1083, file: !12, line: 1837, baseType: !1166, size: 64, offset: 896)
!1166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1167, size: 64)
!1167 = !DISubroutineType(types: !1168)
!1168 = !{!115, !741, !1090}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !1083, file: !12, line: 1838, baseType: !1170, size: 64, offset: 960)
!1170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1171, size: 64)
!1171 = !DISubroutineType(types: !1172)
!1172 = !{!115, !1090, !1173}
!1173 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !12, line: 1007, baseType: !344)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !1083, file: !12, line: 1839, baseType: !1166, size: 64, offset: 1024)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !1083, file: !12, line: 1840, baseType: !1176, size: 64, offset: 1088)
!1176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1177, size: 64)
!1177 = !DISubroutineType(types: !1178)
!1178 = !{!115, !1090, !906, !906, !115}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !1083, file: !12, line: 1841, baseType: !1180, size: 64, offset: 1152)
!1180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1181, size: 64)
!1181 = !DISubroutineType(types: !1182)
!1182 = !{!115, !115, !1090, !115}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1083, file: !12, line: 1842, baseType: !1184, size: 64, offset: 1216)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DISubroutineType(types: !1186)
!1186 = !{!115, !1090, !115, !1187}
!1187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!1188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !12, line: 1062, size: 1664, elements: !1189)
!1189 = !{!1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1207, !1208, !1209, !1210, !1227, !1228, !1229, !1242, !1274}
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !1188, file: !12, line: 1063, baseType: !1187, size: 64)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !1188, file: !12, line: 1064, baseType: !385, size: 128, offset: 64)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !1188, file: !12, line: 1065, baseType: !943, size: 128, offset: 192)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !1188, file: !12, line: 1066, baseType: !385, size: 128, offset: 320)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !1188, file: !12, line: 1069, baseType: !385, size: 128, offset: 448)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !1188, file: !12, line: 1072, baseType: !1173, size: 64, offset: 576)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !1188, file: !12, line: 1073, baseType: !7, size: 32, offset: 640)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !1188, file: !12, line: 1074, baseType: !368, size: 8, offset: 672)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !1188, file: !12, line: 1075, baseType: !7, size: 32, offset: 704)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !1188, file: !12, line: 1076, baseType: !115, size: 32, offset: 736)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !1188, file: !12, line: 1077, baseType: !1201, size: 128, offset: 768)
!1201 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1202, line: 40, baseType: !1203)
!1202 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1202, line: 36, size: 128, elements: !1204)
!1204 = !{!1205, !1206}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1203, file: !1202, line: 37, baseType: !436)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1203, file: !1202, line: 38, baseType: !385, size: 128)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !1188, file: !12, line: 1078, baseType: !1090, size: 64, offset: 896)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !1188, file: !12, line: 1079, baseType: !906, size: 64, offset: 960)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !1188, file: !12, line: 1080, baseType: !906, size: 64, offset: 1024)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !1188, file: !12, line: 1082, baseType: !1211, size: 64, offset: 1088)
!1211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1212, size: 64)
!1212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !12, line: 1314, size: 320, elements: !1213)
!1213 = !{!1214, !1222, !1223, !1224, !1225, !1226}
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !1212, file: !12, line: 1315, baseType: !1215)
!1215 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !1216, line: 20, baseType: !1217)
!1216 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!1217 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1216, line: 11, elements: !1218)
!1218 = !{!1219}
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !1217, file: !1216, line: 12, baseType: !1220)
!1220 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !448, line: 33, baseType: !1221)
!1221 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !448, line: 31, elements: !450)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !1212, file: !12, line: 1316, baseType: !115, size: 32)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !1212, file: !12, line: 1317, baseType: !115, size: 32, offset: 32)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !1212, file: !12, line: 1318, baseType: !1211, size: 64, offset: 64)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !1212, file: !12, line: 1319, baseType: !1090, size: 64, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !1212, file: !12, line: 1320, baseType: !1070, size: 128, align: 64, offset: 192)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !1188, file: !12, line: 1084, baseType: !341, size: 64, offset: 1152)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !1188, file: !12, line: 1085, baseType: !341, size: 64, offset: 1216)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !1188, file: !12, line: 1087, baseType: !1230, size: 64, offset: 1280)
!1230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1231, size: 64)
!1231 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1232)
!1232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !12, line: 1011, size: 128, elements: !1233)
!1233 = !{!1234, !1238}
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !1232, file: !12, line: 1012, baseType: !1235, size: 64)
!1235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1236, size: 64)
!1236 = !DISubroutineType(types: !1237)
!1237 = !{null, !1187, !1187}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !1232, file: !12, line: 1013, baseType: !1239, size: 64, offset: 64)
!1239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1240, size: 64)
!1240 = !DISubroutineType(types: !1241)
!1241 = !{null, !1187}
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !1188, file: !12, line: 1088, baseType: !1243, size: 64, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1245)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !12, line: 1016, size: 512, elements: !1246)
!1246 = !{!1247, !1251, !1255, !1256, !1260, !1264, !1268, !1273}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !1245, file: !12, line: 1017, baseType: !1248, size: 64)
!1248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1249, size: 64)
!1249 = !DISubroutineType(types: !1250)
!1250 = !{!1173, !1173}
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !1245, file: !12, line: 1018, baseType: !1252, size: 64, offset: 64)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = !DISubroutineType(types: !1254)
!1254 = !{null, !1173}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !1245, file: !12, line: 1019, baseType: !1239, size: 64, offset: 128)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !1245, file: !12, line: 1020, baseType: !1257, size: 64, offset: 192)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DISubroutineType(types: !1259)
!1259 = !{!115, !1187, !115}
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !1245, file: !12, line: 1021, baseType: !1261, size: 64, offset: 256)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = !DISubroutineType(types: !1263)
!1263 = !{!370, !1187}
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !1245, file: !12, line: 1022, baseType: !1265, size: 64, offset: 320)
!1265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1266, size: 64)
!1266 = !DISubroutineType(types: !1267)
!1267 = !{!115, !1187, !115, !388}
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !1245, file: !12, line: 1023, baseType: !1269, size: 64, offset: 384)
!1269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1270, size: 64)
!1270 = !DISubroutineType(types: !1271)
!1271 = !{null, !1187, !1272}
!1272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !1245, file: !12, line: 1024, baseType: !1261, size: 64, offset: 448)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !1188, file: !12, line: 1097, baseType: !1275, size: 256, offset: 1408)
!1275 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1188, file: !12, line: 1089, size: 256, elements: !1276)
!1276 = !{!1277, !1286, !1292}
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !1275, file: !12, line: 1090, baseType: !1278, size: 256)
!1278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !1279, line: 10, size: 256, elements: !1280)
!1279 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!1280 = !{!1281, !1282, !1285}
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1278, file: !1279, line: 11, baseType: !468, size: 32)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1278, file: !1279, line: 12, baseType: !1283, size: 64, offset: 64)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !1279, line: 5, flags: DIFlagFwdDecl)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1278, file: !1279, line: 13, baseType: !385, size: 128, offset: 128)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !1275, file: !12, line: 1091, baseType: !1287, size: 64)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !1279, line: 17, size: 64, elements: !1288)
!1288 = !{!1289}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1287, file: !1279, line: 18, baseType: !1290, size: 64)
!1290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1291, size: 64)
!1291 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !1279, line: 16, flags: DIFlagFwdDecl)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !1275, file: !12, line: 1096, baseType: !1293, size: 192)
!1293 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1275, file: !12, line: 1092, size: 192, elements: !1294)
!1294 = !{!1295, !1296, !1297}
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !1293, file: !12, line: 1093, baseType: !385, size: 128)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1293, file: !12, line: 1094, baseType: !115, size: 32, offset: 128)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !1293, file: !12, line: 1095, baseType: !7, size: 32, offset: 160)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !1083, file: !12, line: 1843, baseType: !1299, size: 64, offset: 1280)
!1299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1300, size: 64)
!1300 = !DISubroutineType(types: !1301)
!1301 = !{!1095, !1090, !725, !115, !1023, !1041, !115}
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1083, file: !12, line: 1844, baseType: !1303, size: 64, offset: 1344)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DISubroutineType(types: !1305)
!1305 = !{!341, !1090, !341, !341, !341, !341}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !1083, file: !12, line: 1845, baseType: !1307, size: 64, offset: 1408)
!1307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1308, size: 64)
!1308 = !DISubroutineType(types: !1309)
!1309 = !{!115, !115}
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !1083, file: !12, line: 1846, baseType: !1184, size: 64, offset: 1472)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !1083, file: !12, line: 1847, baseType: !1312, size: 64, offset: 1536)
!1312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1313 = !DISubroutineType(types: !1314)
!1314 = !{!1095, !1315, !1090, !1041, !1023, !7}
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !460, line: 53, flags: DIFlagFwdDecl)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !1083, file: !12, line: 1848, baseType: !1318, size: 64, offset: 1600)
!1318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1319, size: 64)
!1319 = !DISubroutineType(types: !1320)
!1320 = !{!1095, !1090, !1041, !1315, !1023, !7}
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !1083, file: !12, line: 1849, baseType: !1322, size: 64, offset: 1664)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DISubroutineType(types: !1324)
!1324 = !{!115, !1090, !279, !1325, !1272}
!1325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !1083, file: !12, line: 1850, baseType: !1327, size: 64, offset: 1728)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DISubroutineType(types: !1329)
!1329 = !{!279, !1090, !115, !906, !906}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !1083, file: !12, line: 1852, baseType: !1331, size: 64, offset: 1792)
!1331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1332, size: 64)
!1332 = !DISubroutineType(types: !1333)
!1333 = !{null, !1017, !1090}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !1083, file: !12, line: 1856, baseType: !1335, size: 64, offset: 1856)
!1335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 64)
!1336 = !DISubroutineType(types: !1337)
!1337 = !{!1095, !1090, !906, !1090, !906, !1023, !7}
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !1083, file: !12, line: 1858, baseType: !1339, size: 64, offset: 1920)
!1339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!1340 = !DISubroutineType(types: !1341)
!1341 = !{!906, !1090, !906, !1090, !906, !906, !7}
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !1083, file: !12, line: 1861, baseType: !1176, size: 64, offset: 1984)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !1058, file: !12, line: 929, baseType: !436, offset: 384)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !1058, file: !12, line: 930, baseType: !11, size: 32, offset: 384)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !1058, file: !12, line: 931, baseType: !426, size: 64, offset: 448)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !1058, file: !12, line: 932, baseType: !7, size: 32, offset: 512)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !1058, file: !12, line: 933, baseType: !1348, size: 32, offset: 544)
!1348 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !343, line: 150, baseType: !7)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !1058, file: !12, line: 934, baseType: !423, size: 192, offset: 576)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !1058, file: !12, line: 935, baseType: !906, size: 64, offset: 768)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !1058, file: !12, line: 936, baseType: !1352, size: 192, offset: 832)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !12, line: 885, size: 192, elements: !1353)
!1353 = !{!1354, !1355, !1418, !1419, !1420, !1421}
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1352, file: !12, line: 886, baseType: !1215)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1352, file: !12, line: 887, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !21, line: 59, size: 768, elements: !1358)
!1358 = !{!1359, !1360, !1361, !1362, !1366, !1367, !1368, !1369}
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1357, file: !21, line: 61, baseType: !354, size: 32)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1357, file: !21, line: 62, baseType: !7, size: 32, offset: 32)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1357, file: !21, line: 63, baseType: !436, offset: 64)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1357, file: !21, line: 65, baseType: !1363, size: 256, offset: 64)
!1363 = !DICompositeType(tag: DW_TAG_array_type, baseType: !939, size: 256, elements: !1364)
!1364 = !{!1365}
!1365 = !DISubrange(count: 4)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1357, file: !21, line: 66, baseType: !939, size: 64, offset: 320)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1357, file: !21, line: 68, baseType: !1201, size: 128, offset: 384)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1357, file: !21, line: 69, baseType: !1070, size: 128, align: 64, offset: 512)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1357, file: !21, line: 70, baseType: !1370, size: 128, offset: 640)
!1370 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1371, size: 128, elements: !630)
!1371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !21, line: 54, size: 128, elements: !1372)
!1372 = !{!1373, !1374}
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1371, file: !21, line: 55, baseType: !115, size: 32)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1371, file: !21, line: 56, baseType: !1375, size: 64, offset: 64)
!1375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1376, size: 64)
!1376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !1377, line: 20, size: 1088, elements: !1378)
!1377 = !DIFile(filename: "./include/linux/pid_namespace.h", directory: "/home/lizy2001/genbc/linux")
!1378 = !{!1379, !1380, !1393, !1394, !1395, !1396, !1399, !1400, !1401, !1404, !1407, !1408}
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !1376, file: !1377, line: 21, baseType: !350, size: 32)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "idr", scope: !1376, file: !1377, line: 22, baseType: !1381, size: 192, offset: 64)
!1381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !1382, line: 19, size: 192, elements: !1383)
!1382 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!1383 = !{!1384, !1391, !1392}
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !1381, file: !1382, line: 20, baseType: !1385, size: 128)
!1385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !1386, line: 292, size: 128, elements: !1387)
!1386 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!1387 = !{!1388, !1389, !1390}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !1385, file: !1386, line: 293, baseType: !436)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !1385, file: !1386, line: 295, baseType: !342, size: 32)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !1385, file: !1386, line: 296, baseType: !344, size: 64, offset: 64)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !1381, file: !1382, line: 21, baseType: !7, size: 32, offset: 128)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !1381, file: !1382, line: 22, baseType: !7, size: 32, offset: 160)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1376, file: !1377, line: 23, baseType: !1070, size: 128, align: 64, offset: 256)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pid_allocated", scope: !1376, file: !1377, line: 24, baseType: !7, size: 32, offset: 384)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "child_reaper", scope: !1376, file: !1377, line: 25, baseType: !458, size: 64, offset: 448)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "pid_cachep", scope: !1376, file: !1377, line: 26, baseType: !1397, size: 64, offset: 512)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !639, line: 117, flags: DIFlagFwdDecl)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1376, file: !1377, line: 27, baseType: !7, size: 32, offset: 576)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1376, file: !1377, line: 28, baseType: !1375, size: 64, offset: 640)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1376, file: !1377, line: 32, baseType: !1402, size: 64, offset: 704)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !639, line: 516, flags: DIFlagFwdDecl)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "ucounts", scope: !1376, file: !1377, line: 33, baseType: !1405, size: 64, offset: 768)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DICompositeType(tag: DW_TAG_structure_type, name: "ucounts", file: !1377, line: 33, flags: DIFlagFwdDecl)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "reboot", scope: !1376, file: !1377, line: 34, baseType: !115, size: 32, offset: 832)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1376, file: !1377, line: 35, baseType: !1409, size: 192, offset: 896)
!1409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ns_common", file: !1410, line: 7, size: 192, elements: !1411)
!1410 = !DIFile(filename: "./include/linux/ns_common.h", directory: "/home/lizy2001/genbc/linux")
!1411 = !{!1412, !1413, !1417}
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "stashed", scope: !1409, file: !1410, line: 8, baseType: !426, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1409, file: !1410, line: 9, baseType: !1414, size: 64, offset: 64)
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1416)
!1416 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_ns_operations", file: !1410, line: 5, flags: DIFlagFwdDecl)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "inum", scope: !1409, file: !1410, line: 10, baseType: !7, size: 32, offset: 128)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !1352, file: !12, line: 888, baseType: !20, size: 32, offset: 64)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1352, file: !12, line: 889, baseType: !748, size: 32, offset: 96)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1352, file: !12, line: 889, baseType: !748, size: 32, offset: 128)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !1352, file: !12, line: 890, baseType: !115, size: 32, offset: 160)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !1058, file: !12, line: 937, baseType: !1423, size: 64, offset: 1024)
!1423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1424, size: 64)
!1424 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1425)
!1425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1426, line: 111, size: 1280, elements: !1427)
!1426 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1427 = !{!1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437, !1438, !1447, !1448, !1449, !1450, !1451, !1452, !1572, !1573, !1574, !1575, !1601, !1602, !1612}
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1425, file: !1426, line: 112, baseType: !358, size: 32)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1425, file: !1426, line: 120, baseType: !748, size: 32, offset: 32)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1425, file: !1426, line: 121, baseType: !756, size: 32, offset: 64)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1425, file: !1426, line: 122, baseType: !748, size: 32, offset: 96)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1425, file: !1426, line: 123, baseType: !756, size: 32, offset: 128)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1425, file: !1426, line: 124, baseType: !748, size: 32, offset: 160)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1425, file: !1426, line: 125, baseType: !756, size: 32, offset: 192)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1425, file: !1426, line: 126, baseType: !748, size: 32, offset: 224)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1425, file: !1426, line: 127, baseType: !756, size: 32, offset: 256)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1425, file: !1426, line: 128, baseType: !7, size: 32, offset: 288)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1425, file: !1426, line: 129, baseType: !1439, size: 64, offset: 320)
!1439 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1440, line: 26, baseType: !1441)
!1440 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1440, line: 24, size: 64, elements: !1442)
!1442 = !{!1443}
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1441, file: !1440, line: 25, baseType: !1444, size: 64)
!1444 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 64, elements: !1445)
!1445 = !{!1446}
!1446 = !DISubrange(count: 2)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1425, file: !1426, line: 130, baseType: !1439, size: 64, offset: 384)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1425, file: !1426, line: 131, baseType: !1439, size: 64, offset: 448)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1425, file: !1426, line: 132, baseType: !1439, size: 64, offset: 512)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1425, file: !1426, line: 133, baseType: !1439, size: 64, offset: 576)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1425, file: !1426, line: 135, baseType: !368, size: 8, offset: 640)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1425, file: !1426, line: 137, baseType: !1453, size: 64, offset: 704)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1455, line: 189, size: 1664, elements: !1456)
!1455 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1456 = !{!1457, !1458, !1463, !1468, !1476, !1479, !1480, !1487, !1488, !1489, !1490, !1493, !1494, !1495, !1497, !1498, !1536, !1557}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1454, file: !1455, line: 190, baseType: !354, size: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1454, file: !1455, line: 191, baseType: !1459, size: 32, offset: 32)
!1459 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1455, line: 28, baseType: !1460)
!1460 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !343, line: 98, baseType: !1461)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !365, line: 20, baseType: !1462)
!1462 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !367, line: 26, baseType: !115)
!1463 = !DIDerivedType(tag: DW_TAG_member, scope: !1454, file: !1455, line: 192, baseType: !1464, size: 192, offset: 64)
!1464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1454, file: !1455, line: 192, size: 192, elements: !1465)
!1465 = !{!1466, !1467}
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1464, file: !1455, line: 193, baseType: !385, size: 128)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1464, file: !1455, line: 194, baseType: !494, size: 192, align: 64)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1454, file: !1455, line: 199, baseType: !1469, size: 256, offset: 256)
!1469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !1470, line: 35, size: 256, elements: !1471)
!1470 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1471 = !{!1472, !1473, !1474, !1475}
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1469, file: !1470, line: 36, baseType: !426, size: 64)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !1469, file: !1470, line: 42, baseType: !426, size: 64, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !1469, file: !1470, line: 46, baseType: !566, offset: 128)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !1469, file: !1470, line: 47, baseType: !385, size: 128, offset: 128)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1454, file: !1455, line: 200, baseType: !1477, size: 64, offset: 512)
!1477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1478, size: 64)
!1478 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1455, line: 200, flags: DIFlagFwdDecl)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1454, file: !1455, line: 201, baseType: !344, size: 64, offset: 576)
!1480 = !DIDerivedType(tag: DW_TAG_member, scope: !1454, file: !1455, line: 202, baseType: !1481, size: 64, offset: 640)
!1481 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1454, file: !1455, line: 202, size: 64, elements: !1482)
!1482 = !{!1483, !1486}
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1481, file: !1455, line: 203, baseType: !1484, size: 64)
!1484 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !1485, line: 8, baseType: !433)
!1485 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1481, file: !1455, line: 204, baseType: !1484, size: 64)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1454, file: !1455, line: 206, baseType: !1484, size: 64, offset: 704)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1454, file: !1455, line: 207, baseType: !748, size: 32, offset: 768)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1454, file: !1455, line: 208, baseType: !756, size: 32, offset: 800)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1454, file: !1455, line: 209, baseType: !1491, size: 32, offset: 832)
!1491 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1455, line: 31, baseType: !1492)
!1492 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !343, line: 104, baseType: !468)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1454, file: !1455, line: 210, baseType: !383, size: 16, offset: 864)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1454, file: !1455, line: 211, baseType: !383, size: 16, offset: 880)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1454, file: !1455, line: 215, baseType: !1496, size: 16, offset: 896)
!1496 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1454, file: !1455, line: 222, baseType: !341, size: 64, offset: 960)
!1498 = !DIDerivedType(tag: DW_TAG_member, scope: !1454, file: !1455, line: 239, baseType: !1499, size: 320, offset: 1024)
!1499 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1454, file: !1455, line: 239, size: 320, elements: !1500)
!1500 = !{!1501, !1528}
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1499, file: !1455, line: 240, baseType: !1502, size: 320)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1455, line: 108, size: 320, elements: !1503)
!1503 = !{!1504, !1505, !1517, !1520, !1527}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1502, file: !1455, line: 110, baseType: !341, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_member, scope: !1502, file: !1455, line: 111, baseType: !1506, size: 64, offset: 64)
!1506 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1502, file: !1455, line: 111, size: 64, elements: !1507)
!1507 = !{!1508, !1516}
!1508 = !DIDerivedType(tag: DW_TAG_member, scope: !1506, file: !1455, line: 112, baseType: !1509, size: 64)
!1509 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1506, file: !1455, line: 112, size: 64, elements: !1510)
!1510 = !{!1511, !1512}
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1509, file: !1455, line: 114, baseType: !381, size: 16)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1509, file: !1455, line: 115, baseType: !1513, size: 48, offset: 16)
!1513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 48, elements: !1514)
!1514 = !{!1515}
!1515 = !DISubrange(count: 6)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1506, file: !1455, line: 121, baseType: !341, size: 64)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1502, file: !1455, line: 123, baseType: !1518, size: 64, offset: 128)
!1518 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1519, size: 64)
!1519 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1455, line: 96, flags: DIFlagFwdDecl)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1502, file: !1455, line: 124, baseType: !1521, size: 64, offset: 192)
!1521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1522, size: 64)
!1522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1455, line: 102, size: 192, elements: !1523)
!1523 = !{!1524, !1525, !1526}
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1522, file: !1455, line: 103, baseType: !1070, size: 128, align: 64)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1522, file: !1455, line: 104, baseType: !354, size: 32, offset: 128)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1522, file: !1455, line: 105, baseType: !370, size: 8, offset: 160)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1502, file: !1455, line: 125, baseType: !844, size: 64, offset: 256)
!1528 = !DIDerivedType(tag: DW_TAG_member, scope: !1499, file: !1455, line: 241, baseType: !1529, size: 320)
!1529 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1499, file: !1455, line: 241, size: 320, elements: !1530)
!1530 = !{!1531, !1532, !1533, !1534, !1535}
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1529, file: !1455, line: 242, baseType: !341, size: 64)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1529, file: !1455, line: 243, baseType: !341, size: 64, offset: 64)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1529, file: !1455, line: 244, baseType: !1518, size: 64, offset: 128)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1529, file: !1455, line: 245, baseType: !1521, size: 64, offset: 192)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1529, file: !1455, line: 246, baseType: !870, size: 64, offset: 256)
!1536 = !DIDerivedType(tag: DW_TAG_member, scope: !1454, file: !1455, line: 254, baseType: !1537, size: 256, offset: 1344)
!1537 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1454, file: !1455, line: 254, size: 256, elements: !1538)
!1538 = !{!1539, !1545}
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1537, file: !1455, line: 255, baseType: !1540, size: 256)
!1540 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1455, line: 128, size: 256, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1540, file: !1455, line: 129, baseType: !344, size: 64)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1540, file: !1455, line: 130, baseType: !1544, size: 256)
!1544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !344, size: 256, elements: !1364)
!1545 = !DIDerivedType(tag: DW_TAG_member, scope: !1537, file: !1455, line: 256, baseType: !1546, size: 256)
!1546 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1537, file: !1455, line: 256, size: 256, elements: !1547)
!1547 = !{!1548, !1549}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1546, file: !1455, line: 258, baseType: !385, size: 128)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1546, file: !1455, line: 259, baseType: !1550, size: 128, offset: 128)
!1550 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1551, line: 22, size: 128, elements: !1552)
!1551 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1552 = !{!1553, !1556}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1550, file: !1551, line: 23, baseType: !1554, size: 64)
!1554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1555, size: 64)
!1555 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1551, line: 23, flags: DIFlagFwdDecl)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1550, file: !1551, line: 24, baseType: !341, size: 64, offset: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1454, file: !1455, line: 274, baseType: !1558, size: 64, offset: 1600)
!1558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1559, size: 64)
!1559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1455, line: 170, size: 192, elements: !1560)
!1560 = !{!1561, !1570, !1571}
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1559, file: !1455, line: 171, baseType: !1562, size: 64)
!1562 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1455, line: 165, baseType: !1563)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1564, size: 64)
!1564 = !DISubroutineType(types: !1565)
!1565 = !{!115, !1453, !1566, !1568, !1453}
!1566 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1567, size: 64)
!1567 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1519)
!1568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1569, size: 64)
!1569 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1540)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1559, file: !1455, line: 172, baseType: !1453, size: 64, offset: 64)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1559, file: !1455, line: 173, baseType: !1518, size: 64, offset: 128)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1425, file: !1426, line: 138, baseType: !1453, size: 64, offset: 768)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1425, file: !1426, line: 139, baseType: !1453, size: 64, offset: 832)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1425, file: !1426, line: 140, baseType: !1453, size: 64, offset: 896)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1425, file: !1426, line: 145, baseType: !1576, size: 64, offset: 960)
!1576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1577, size: 64)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1578, line: 13, size: 896, elements: !1579)
!1578 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1579 = !{!1580, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590}
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1577, file: !1578, line: 14, baseType: !354, size: 32)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1577, file: !1578, line: 15, baseType: !358, size: 32, offset: 32)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1577, file: !1578, line: 16, baseType: !358, size: 32, offset: 64)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1577, file: !1578, line: 21, baseType: !426, size: 64, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1577, file: !1578, line: 27, baseType: !341, size: 64, offset: 192)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1577, file: !1578, line: 28, baseType: !341, size: 64, offset: 256)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1577, file: !1578, line: 29, baseType: !426, size: 64, offset: 320)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1577, file: !1578, line: 32, baseType: !943, size: 128, offset: 384)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1577, file: !1578, line: 33, baseType: !748, size: 32, offset: 512)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1577, file: !1578, line: 37, baseType: !426, size: 64, offset: 576)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1577, file: !1578, line: 44, baseType: !1591, size: 256, offset: 640)
!1591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1592, line: 15, size: 256, elements: !1593)
!1592 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1593 = !{!1594, !1595, !1596, !1597, !1598, !1599, !1600}
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1591, file: !1592, line: 16, baseType: !566)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1591, file: !1592, line: 18, baseType: !115, size: 32)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1591, file: !1592, line: 19, baseType: !115, size: 32, offset: 32)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1591, file: !1592, line: 20, baseType: !115, size: 32, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1591, file: !1592, line: 21, baseType: !115, size: 32, offset: 96)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1591, file: !1592, line: 22, baseType: !341, size: 64, offset: 128)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1591, file: !1592, line: 23, baseType: !341, size: 64, offset: 192)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1425, file: !1426, line: 146, baseType: !1402, size: 64, offset: 1024)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1425, file: !1426, line: 147, baseType: !1603, size: 64, offset: 1088)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1426, line: 25, size: 64, elements: !1605)
!1605 = !{!1606, !1607, !1608}
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1604, file: !1426, line: 26, baseType: !358, size: 32)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1604, file: !1426, line: 27, baseType: !115, size: 32, offset: 32)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1604, file: !1426, line: 28, baseType: !1609, offset: 64)
!1609 = !DICompositeType(tag: DW_TAG_array_type, baseType: !756, elements: !1610)
!1610 = !{!1611}
!1611 = !DISubrange(count: 0)
!1612 = !DIDerivedType(tag: DW_TAG_member, scope: !1425, file: !1426, line: 149, baseType: !1613, size: 128, offset: 1152)
!1613 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1425, file: !1426, line: 149, size: 128, elements: !1614)
!1614 = !{!1615, !1616}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1613, file: !1426, line: 150, baseType: !115, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1613, file: !1426, line: 151, baseType: !1070, size: 128, align: 64)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !1058, file: !12, line: 938, baseType: !1618, size: 256, offset: 1088)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !12, line: 896, size: 256, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1625}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1618, file: !12, line: 897, baseType: !341, size: 64)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1618, file: !12, line: 898, baseType: !7, size: 32, offset: 64)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !1618, file: !12, line: 899, baseType: !7, size: 32, offset: 96)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !1618, file: !12, line: 902, baseType: !7, size: 32, offset: 128)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !1618, file: !12, line: 903, baseType: !7, size: 32, offset: 160)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !1618, file: !12, line: 904, baseType: !906, size: 64, offset: 192)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !1058, file: !12, line: 940, baseType: !504, size: 64, offset: 1344)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !1058, file: !12, line: 945, baseType: !344, size: 64, offset: 1408)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !1058, file: !12, line: 949, baseType: !385, size: 128, offset: 1472)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !1058, file: !12, line: 950, baseType: !385, size: 128, offset: 1600)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !1058, file: !12, line: 952, baseType: !737, size: 64, offset: 1728)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !1058, file: !12, line: 953, baseType: !1632, size: 32, offset: 1792)
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1633, line: 8, baseType: !468)
!1633 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !1058, file: !12, line: 954, baseType: !1632, size: 32, offset: 1824)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !1018, file: !1019, line: 28, baseType: !344, size: 64, offset: 832)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !963, file: !12, line: 1955, baseType: !1014, size: 64, offset: 1088)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !963, file: !12, line: 1956, baseType: !1014, size: 64, offset: 1152)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !963, file: !12, line: 1957, baseType: !1014, size: 64, offset: 1216)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !963, file: !12, line: 1963, baseType: !1640, size: 64, offset: 1280)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = !DISubroutineType(types: !1642)
!1642 = !{!115, !896, !725, !342}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !963, file: !12, line: 1964, baseType: !1644, size: 64, offset: 1344)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DISubroutineType(types: !1646)
!1646 = !{!279, !896, !1647}
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !1649, line: 12, size: 256, elements: !1650)
!1649 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!1650 = !{!1651, !1652, !1653, !1654, !1655}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1648, file: !1649, line: 13, baseType: !342, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !1648, file: !1649, line: 16, baseType: !115, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !1648, file: !1649, line: 23, baseType: !341, size: 64, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !1648, file: !1649, line: 30, baseType: !341, size: 64, offset: 128)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !1648, file: !1649, line: 33, baseType: !1656, size: 64, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !639, line: 27, flags: DIFlagFwdDecl)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !963, file: !12, line: 1966, baseType: !1644, size: 64, offset: 1408)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !897, file: !12, line: 1424, baseType: !1660, size: 64, offset: 448)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1662)
!1662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !29, line: 322, size: 704, elements: !1663)
!1663 = !{!1664, !1710, !1714, !1718, !1719, !1720, !1721, !1722, !1727, !1732, !1736}
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !1662, file: !29, line: 323, baseType: !1665, size: 64)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{!115, !1668}
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !29, line: 294, size: 1600, elements: !1670)
!1670 = !{!1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1695, !1696, !1697}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !1669, file: !29, line: 295, baseType: !943, size: 128)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !1669, file: !29, line: 296, baseType: !385, size: 128, offset: 128)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !1669, file: !29, line: 297, baseType: !385, size: 128, offset: 256)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !1669, file: !29, line: 298, baseType: !385, size: 128, offset: 384)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !1669, file: !29, line: 299, baseType: !423, size: 192, offset: 512)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !1669, file: !29, line: 300, baseType: !436, offset: 704)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !1669, file: !29, line: 301, baseType: !358, size: 32, offset: 704)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !1669, file: !29, line: 302, baseType: !896, size: 64, offset: 768)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !1669, file: !29, line: 303, baseType: !1680, size: 64, offset: 832)
!1680 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !29, line: 68, size: 64, elements: !1681)
!1681 = !{!1682, !1694}
!1682 = !DIDerivedType(tag: DW_TAG_member, scope: !1680, file: !29, line: 69, baseType: !1683, size: 32)
!1683 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1680, file: !29, line: 69, size: 32, elements: !1684)
!1684 = !{!1685, !1686, !1687}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1683, file: !29, line: 70, baseType: !748, size: 32)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1683, file: !29, line: 71, baseType: !756, size: 32)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !1683, file: !29, line: 72, baseType: !1688, size: 32)
!1688 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !1689, line: 24, baseType: !1690)
!1689 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1689, line: 22, size: 32, elements: !1691)
!1691 = !{!1692}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1690, file: !1689, line: 23, baseType: !1693, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !1689, line: 20, baseType: !754)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1680, file: !29, line: 74, baseType: !28, size: 32, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !1669, file: !29, line: 304, baseType: !906, size: 64, offset: 896)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !1669, file: !29, line: 305, baseType: !341, size: 64, offset: 960)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !1669, file: !29, line: 306, baseType: !1698, size: 576, offset: 1024)
!1698 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !29, line: 205, size: 576, elements: !1699)
!1699 = !{!1700, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709}
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !1698, file: !29, line: 206, baseType: !1701, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !29, line: 66, baseType: !434)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !1698, file: !29, line: 207, baseType: !1701, size: 64, offset: 64)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !1698, file: !29, line: 208, baseType: !1701, size: 64, offset: 128)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !1698, file: !29, line: 209, baseType: !1701, size: 64, offset: 192)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !1698, file: !29, line: 210, baseType: !1701, size: 64, offset: 256)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !1698, file: !29, line: 211, baseType: !1701, size: 64, offset: 320)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !1698, file: !29, line: 212, baseType: !1701, size: 64, offset: 384)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !1698, file: !29, line: 213, baseType: !1484, size: 64, offset: 448)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !1698, file: !29, line: 214, baseType: !1484, size: 64, offset: 512)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !1662, file: !29, line: 324, baseType: !1711, size: 64, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1712, size: 64)
!1712 = !DISubroutineType(types: !1713)
!1713 = !{!1668, !896, !115}
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !1662, file: !29, line: 325, baseType: !1715, size: 64, offset: 128)
!1715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1716, size: 64)
!1716 = !DISubroutineType(types: !1717)
!1717 = !{null, !1668}
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !1662, file: !29, line: 326, baseType: !1665, size: 64, offset: 192)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !1662, file: !29, line: 327, baseType: !1665, size: 64, offset: 256)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !1662, file: !29, line: 328, baseType: !1665, size: 64, offset: 320)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !1662, file: !29, line: 329, baseType: !991, size: 64, offset: 384)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !1662, file: !29, line: 332, baseType: !1723, size: 64, offset: 448)
!1723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1724, size: 64)
!1724 = !DISubroutineType(types: !1725)
!1725 = !{!1726, !741}
!1726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !1662, file: !29, line: 333, baseType: !1728, size: 64, offset: 512)
!1728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1729, size: 64)
!1729 = !DISubroutineType(types: !1730)
!1730 = !{!115, !741, !1731}
!1731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1688, size: 64)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !1662, file: !29, line: 335, baseType: !1733, size: 64, offset: 576)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DISubroutineType(types: !1735)
!1735 = !{!115, !741, !1726}
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1662, file: !29, line: 337, baseType: !1737, size: 64, offset: 640)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DISubroutineType(types: !1739)
!1739 = !{!115, !896, !1740}
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1680, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !897, file: !12, line: 1425, baseType: !1742, size: 64, offset: 512)
!1742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1743, size: 64)
!1743 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1744)
!1744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !29, line: 428, size: 704, elements: !1745)
!1745 = !{!1746, !1750, !1751, !1755, !1756, !1757, !1772, !1795, !1799, !1800, !1823}
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !1744, file: !29, line: 429, baseType: !1747, size: 64)
!1747 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1748, size: 64)
!1748 = !DISubroutineType(types: !1749)
!1749 = !{!115, !896, !115, !115, !887}
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !1744, file: !29, line: 430, baseType: !991, size: 64, offset: 64)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !1744, file: !29, line: 431, baseType: !1752, size: 64, offset: 128)
!1752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1753, size: 64)
!1753 = !DISubroutineType(types: !1754)
!1754 = !{!115, !896, !7}
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !1744, file: !29, line: 432, baseType: !1752, size: 64, offset: 192)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !1744, file: !29, line: 433, baseType: !991, size: 64, offset: 256)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !1744, file: !29, line: 434, baseType: !1758, size: 64, offset: 320)
!1758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1759, size: 64)
!1759 = !DISubroutineType(types: !1760)
!1760 = !{!115, !896, !115, !1761}
!1761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1762, size: 64)
!1762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !29, line: 415, size: 256, elements: !1763)
!1763 = !{!1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771}
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !1762, file: !29, line: 416, baseType: !115, size: 32)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !1762, file: !29, line: 417, baseType: !7, size: 32, offset: 32)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !1762, file: !29, line: 418, baseType: !7, size: 32, offset: 64)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !1762, file: !29, line: 420, baseType: !7, size: 32, offset: 96)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !1762, file: !29, line: 421, baseType: !7, size: 32, offset: 128)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !1762, file: !29, line: 422, baseType: !7, size: 32, offset: 160)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !1762, file: !29, line: 423, baseType: !7, size: 32, offset: 192)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !1762, file: !29, line: 424, baseType: !7, size: 32, offset: 224)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !1744, file: !29, line: 435, baseType: !1773, size: 64, offset: 384)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DISubroutineType(types: !1775)
!1775 = !{!115, !896, !1680, !1776}
!1776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1777, size: 64)
!1777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !29, line: 343, size: 960, elements: !1778)
!1778 = !{!1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794}
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !1777, file: !29, line: 344, baseType: !115, size: 32)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !1777, file: !29, line: 345, baseType: !504, size: 64, offset: 64)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !1777, file: !29, line: 346, baseType: !504, size: 64, offset: 128)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !1777, file: !29, line: 347, baseType: !504, size: 64, offset: 192)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !1777, file: !29, line: 348, baseType: !504, size: 64, offset: 256)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !1777, file: !29, line: 349, baseType: !504, size: 64, offset: 320)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !1777, file: !29, line: 350, baseType: !504, size: 64, offset: 384)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !1777, file: !29, line: 351, baseType: !432, size: 64, offset: 448)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !1777, file: !29, line: 353, baseType: !432, size: 64, offset: 512)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !1777, file: !29, line: 354, baseType: !115, size: 32, offset: 576)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !1777, file: !29, line: 355, baseType: !115, size: 32, offset: 608)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !1777, file: !29, line: 356, baseType: !504, size: 64, offset: 640)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !1777, file: !29, line: 357, baseType: !504, size: 64, offset: 704)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !1777, file: !29, line: 358, baseType: !504, size: 64, offset: 768)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !1777, file: !29, line: 359, baseType: !432, size: 64, offset: 832)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !1777, file: !29, line: 360, baseType: !115, size: 32, offset: 896)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !1744, file: !29, line: 436, baseType: !1796, size: 64, offset: 448)
!1796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1797, size: 64)
!1797 = !DISubroutineType(types: !1798)
!1798 = !{!115, !896, !1740, !1776}
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !1744, file: !29, line: 438, baseType: !1773, size: 64, offset: 512)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !1744, file: !29, line: 439, baseType: !1801, size: 64, offset: 576)
!1801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1802, size: 64)
!1802 = !DISubroutineType(types: !1803)
!1803 = !{!115, !896, !1804}
!1804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1805, size: 64)
!1805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !29, line: 409, size: 1408, elements: !1806)
!1806 = !{!1807, !1808}
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !1805, file: !29, line: 410, baseType: !7, size: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !1805, file: !29, line: 411, baseType: !1809, size: 1344, offset: 64)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1810, size: 1344, elements: !955)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !29, line: 395, size: 448, elements: !1811)
!1811 = !{!1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1822}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1810, file: !29, line: 396, baseType: !7, size: 32)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !1810, file: !29, line: 397, baseType: !7, size: 32, offset: 32)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !1810, file: !29, line: 399, baseType: !7, size: 32, offset: 64)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !1810, file: !29, line: 400, baseType: !7, size: 32, offset: 96)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !1810, file: !29, line: 401, baseType: !7, size: 32, offset: 128)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !1810, file: !29, line: 402, baseType: !7, size: 32, offset: 160)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !1810, file: !29, line: 403, baseType: !7, size: 32, offset: 192)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !1810, file: !29, line: 404, baseType: !506, size: 64, offset: 256)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !1810, file: !29, line: 405, baseType: !1821, size: 64, offset: 320)
!1821 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !343, line: 126, baseType: !504)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !1810, file: !29, line: 406, baseType: !1821, size: 64, offset: 384)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !1744, file: !29, line: 440, baseType: !1752, size: 64, offset: 640)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !897, file: !12, line: 1426, baseType: !1825, size: 64, offset: 576)
!1825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1826, size: 64)
!1826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1827)
!1827 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !12, line: 49, flags: DIFlagFwdDecl)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !897, file: !12, line: 1427, baseType: !341, size: 64, offset: 640)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !897, file: !12, line: 1428, baseType: !341, size: 64, offset: 704)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !897, file: !12, line: 1429, baseType: !341, size: 64, offset: 768)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !897, file: !12, line: 1430, baseType: !772, size: 64, offset: 832)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !897, file: !12, line: 1431, baseType: !1469, size: 256, offset: 896)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !897, file: !12, line: 1432, baseType: !115, size: 32, offset: 1152)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !897, file: !12, line: 1433, baseType: !358, size: 32, offset: 1184)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !897, file: !12, line: 1437, baseType: !1836, size: 64, offset: 1216)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1837, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1839)
!1839 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !12, line: 1437, flags: DIFlagFwdDecl)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !897, file: !12, line: 1449, baseType: !1841, size: 64, offset: 1280)
!1841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !784, line: 34, size: 64, elements: !1842)
!1842 = !{!1843}
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1841, file: !784, line: 35, baseType: !787, size: 64)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !897, file: !12, line: 1450, baseType: !385, size: 128, offset: 1344)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !897, file: !12, line: 1451, baseType: !1846, size: 64, offset: 1472)
!1846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1847, size: 64)
!1847 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !12, line: 699, flags: DIFlagFwdDecl)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !897, file: !12, line: 1452, baseType: !1849, size: 64, offset: 1536)
!1849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1850, size: 64)
!1850 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !460, line: 40, flags: DIFlagFwdDecl)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !897, file: !12, line: 1453, baseType: !1852, size: 64, offset: 1600)
!1852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1853, size: 64)
!1853 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !12, line: 1453, flags: DIFlagFwdDecl)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !897, file: !12, line: 1454, baseType: !943, size: 128, offset: 1664)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !897, file: !12, line: 1455, baseType: !7, size: 32, offset: 1792)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !897, file: !12, line: 1456, baseType: !1857, size: 2432, offset: 1856)
!1857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !29, line: 518, size: 2432, elements: !1858)
!1858 = !{!1859, !1860, !1861, !1863, !1895}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1857, file: !29, line: 519, baseType: !7, size: 32)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !1857, file: !29, line: 520, baseType: !1469, size: 256, offset: 64)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1857, file: !29, line: 521, baseType: !1862, size: 192, offset: 320)
!1862 = !DICompositeType(tag: DW_TAG_array_type, baseType: !741, size: 192, elements: !955)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !1857, file: !29, line: 522, baseType: !1864, size: 1728, offset: 512)
!1864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1865, size: 1728, elements: !955)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !29, line: 222, size: 576, elements: !1866)
!1866 = !{!1867, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !1865, file: !29, line: 223, baseType: !1868, size: 64)
!1868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1869, size: 64)
!1869 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !29, line: 443, size: 256, elements: !1870)
!1870 = !{!1871, !1872, !1885, !1886}
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !1869, file: !29, line: 444, baseType: !115, size: 32)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !1869, file: !29, line: 445, baseType: !1873, size: 64, offset: 64)
!1873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1874, size: 64)
!1874 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1875)
!1875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !29, line: 310, size: 512, elements: !1876)
!1876 = !{!1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884}
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !1875, file: !29, line: 311, baseType: !991, size: 64)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !1875, file: !29, line: 312, baseType: !991, size: 64, offset: 64)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !1875, file: !29, line: 313, baseType: !991, size: 64, offset: 128)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !1875, file: !29, line: 314, baseType: !991, size: 64, offset: 192)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !1875, file: !29, line: 315, baseType: !1665, size: 64, offset: 256)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !1875, file: !29, line: 316, baseType: !1665, size: 64, offset: 320)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !1875, file: !29, line: 317, baseType: !1665, size: 64, offset: 384)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !1875, file: !29, line: 318, baseType: !1737, size: 64, offset: 448)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !1869, file: !29, line: 446, baseType: !934, size: 64, offset: 128)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !1869, file: !29, line: 447, baseType: !1868, size: 64, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !1865, file: !29, line: 224, baseType: !115, size: 32, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !1865, file: !29, line: 226, baseType: !385, size: 128, offset: 128)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !1865, file: !29, line: 227, baseType: !341, size: 64, offset: 256)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !1865, file: !29, line: 228, baseType: !7, size: 32, offset: 320)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !1865, file: !29, line: 229, baseType: !7, size: 32, offset: 352)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !1865, file: !29, line: 230, baseType: !1701, size: 64, offset: 384)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !1865, file: !29, line: 231, baseType: !1701, size: 64, offset: 448)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !1865, file: !29, line: 232, baseType: !344, size: 64, offset: 512)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1857, file: !29, line: 523, baseType: !1896, size: 192, offset: 2240)
!1896 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1873, size: 192, elements: !955)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !897, file: !12, line: 1458, baseType: !1898, size: 2112, offset: 4288)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !12, line: 1410, size: 2112, elements: !1899)
!1899 = !{!1900, !1901, !1902}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1898, file: !12, line: 1411, baseType: !115, size: 32)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !1898, file: !12, line: 1412, baseType: !1201, size: 128, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !1898, file: !12, line: 1413, baseType: !1903, size: 1920, offset: 192)
!1903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1904, size: 1920, elements: !955)
!1904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !1905, line: 12, size: 640, elements: !1906)
!1905 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!1906 = !{!1907, !1915, !1917, !1922, !1923}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !1904, file: !1905, line: 13, baseType: !1908, size: 320)
!1908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !1909, line: 17, size: 320, elements: !1910)
!1909 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!1910 = !{!1911, !1912, !1913, !1914}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !1908, file: !1909, line: 18, baseType: !115, size: 32)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !1908, file: !1909, line: 19, baseType: !115, size: 32, offset: 32)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !1908, file: !1909, line: 20, baseType: !1201, size: 128, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !1908, file: !1909, line: 22, baseType: !1070, size: 128, align: 64, offset: 192)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !1904, file: !1905, line: 14, baseType: !1916, size: 64, offset: 320)
!1916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !1904, file: !1905, line: 15, baseType: !1918, size: 64, offset: 384)
!1918 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !1919, line: 16, size: 64, elements: !1920)
!1919 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!1920 = !{!1921}
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1918, file: !1919, line: 17, baseType: !458, size: 64)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !1904, file: !1905, line: 16, baseType: !1201, size: 128, offset: 448)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1904, file: !1905, line: 17, baseType: !358, size: 32, offset: 576)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !897, file: !12, line: 1465, baseType: !344, size: 64, offset: 6400)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !897, file: !12, line: 1468, baseType: !468, size: 32, offset: 6464)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !897, file: !12, line: 1470, baseType: !1484, size: 64, offset: 6528)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !897, file: !12, line: 1471, baseType: !1484, size: 64, offset: 6592)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !897, file: !12, line: 1473, baseType: !469, size: 32, offset: 6656)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !897, file: !12, line: 1474, baseType: !1930, size: 64, offset: 6720)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !12, line: 603, flags: DIFlagFwdDecl)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !897, file: !12, line: 1477, baseType: !1933, size: 256, offset: 6784)
!1933 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 256, elements: !809)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !897, file: !12, line: 1478, baseType: !1935, size: 128, offset: 7040)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !1936, line: 18, baseType: !1937)
!1936 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1936, line: 16, size: 128, elements: !1938)
!1938 = !{!1939}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1937, file: !1936, line: 17, baseType: !1940, size: 128)
!1940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 128, elements: !1941)
!1941 = !{!1942}
!1942 = !DISubrange(count: 16)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !897, file: !12, line: 1480, baseType: !7, size: 32, offset: 7168)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !897, file: !12, line: 1481, baseType: !1348, size: 32, offset: 7200)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !897, file: !12, line: 1487, baseType: !423, size: 192, offset: 7232)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !897, file: !12, line: 1493, baseType: !844, size: 64, offset: 7424)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !897, file: !12, line: 1495, baseType: !824, size: 64, offset: 7488)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !897, file: !12, line: 1500, baseType: !115, size: 32, offset: 7552)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !897, file: !12, line: 1502, baseType: !1950, size: 448, offset: 7616)
!1950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !1649, line: 60, size: 448, elements: !1951)
!1951 = !{!1952, !1957, !1958, !1959, !1960, !1961, !1962}
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !1950, file: !1649, line: 61, baseType: !1953, size: 64)
!1953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1954, size: 64)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!341, !1956, !1647}
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1950, size: 64)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !1950, file: !1649, line: 63, baseType: !1953, size: 64, offset: 64)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !1950, file: !1649, line: 66, baseType: !279, size: 64, offset: 128)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !1950, file: !1649, line: 67, baseType: !115, size: 32, offset: 192)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1950, file: !1649, line: 68, baseType: !7, size: 32, offset: 224)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1950, file: !1649, line: 71, baseType: !385, size: 128, offset: 256)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !1950, file: !1649, line: 77, baseType: !1963, size: 64, offset: 384)
!1963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !426, size: 64)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !897, file: !12, line: 1505, baseType: !426, size: 64, offset: 8064)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !897, file: !12, line: 1508, baseType: !426, size: 64, offset: 8128)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !897, file: !12, line: 1511, baseType: !115, size: 32, offset: 8192)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !897, file: !12, line: 1514, baseType: !1632, size: 32, offset: 8224)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !897, file: !12, line: 1517, baseType: !1969, size: 64, offset: 8256)
!1969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1970, size: 64)
!1970 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !262, line: 18, flags: DIFlagFwdDecl)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !897, file: !12, line: 1518, baseType: !939, size: 64, offset: 8320)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !897, file: !12, line: 1525, baseType: !1402, size: 64, offset: 8384)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !897, file: !12, line: 1532, baseType: !1974, size: 64, offset: 8448)
!1974 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !1975, line: 52, size: 64, elements: !1976)
!1975 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!1976 = !{!1977}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1974, file: !1975, line: 53, baseType: !1978, size: 64)
!1978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1979, size: 64)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !1975, line: 40, size: 256, elements: !1980)
!1980 = !{!1981, !1982, !1987}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1979, file: !1975, line: 42, baseType: !436)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !1979, file: !1975, line: 44, baseType: !1983, size: 192)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !1975, line: 28, size: 192, elements: !1984)
!1984 = !{!1985, !1986}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1983, file: !1975, line: 29, baseType: !385, size: 128)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1983, file: !1975, line: 31, baseType: !279, size: 64, offset: 128)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !1979, file: !1975, line: 49, baseType: !279, size: 64, offset: 192)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !897, file: !12, line: 1533, baseType: !1974, size: 64, offset: 8512)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !897, file: !12, line: 1534, baseType: !1070, size: 128, align: 64, offset: 8576)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !897, file: !12, line: 1535, baseType: !1991, size: 256, offset: 8704)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !262, line: 102, size: 256, elements: !1992)
!1992 = !{!1993, !1994, !1995}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1991, file: !262, line: 103, baseType: !426, size: 64)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !1991, file: !262, line: 104, baseType: !385, size: 128, offset: 64)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !1991, file: !262, line: 105, baseType: !1996, size: 64, offset: 192)
!1996 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !262, line: 21, baseType: !1997)
!1997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1998, size: 64)
!1998 = !DISubroutineType(types: !1999)
!1999 = !{null, !2000}
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1991, size: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !897, file: !12, line: 1537, baseType: !423, size: 192, offset: 8960)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !897, file: !12, line: 1542, baseType: !115, size: 32, offset: 9152)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !897, file: !12, line: 1545, baseType: !436, offset: 9184)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !897, file: !12, line: 1546, baseType: !385, size: 128, offset: 9216)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !897, file: !12, line: 1548, baseType: !436, offset: 9344)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !897, file: !12, line: 1549, baseType: !385, size: 128, offset: 9344)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !773, file: !774, line: 104, baseType: !341, size: 64, offset: 896)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !773, file: !774, line: 105, baseType: !344, size: 64, offset: 960)
!2009 = !DIDerivedType(tag: DW_TAG_member, scope: !773, file: !774, line: 107, baseType: !2010, size: 128, offset: 1024)
!2010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !773, file: !774, line: 107, size: 128, elements: !2011)
!2011 = !{!2012, !2013}
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !2010, file: !774, line: 108, baseType: !385, size: 128)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !2010, file: !774, line: 109, baseType: !2014, size: 64)
!2014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1201, size: 64)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !773, file: !774, line: 111, baseType: !385, size: 128, offset: 1152)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !773, file: !774, line: 112, baseType: !385, size: 128, offset: 1280)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !773, file: !774, line: 120, baseType: !2018, size: 128, offset: 1408)
!2018 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !773, file: !774, line: 116, size: 128, elements: !2019)
!2019 = !{!2020, !2021, !2022}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !2018, file: !774, line: 117, baseType: !943, size: 128)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !2018, file: !774, line: 118, baseType: !783, size: 128)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !2018, file: !774, line: 119, baseType: !1070, size: 128, align: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !766, file: !12, line: 1866, baseType: !2024, size: 64, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!844, !772, !741, !2027}
!2027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2028, size: 64)
!2028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !2029, line: 10, size: 128, elements: !2030)
!2029 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!2030 = !{!2031, !2035}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2028, file: !2029, line: 11, baseType: !2032, size: 64)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2033, size: 64)
!2033 = !DISubroutineType(types: !2034)
!2034 = !{null, !344}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !2028, file: !2029, line: 12, baseType: !344, size: 64, offset: 64)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !766, file: !12, line: 1867, baseType: !2037, size: 64, offset: 128)
!2037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 64)
!2038 = !DISubroutineType(types: !2039)
!2039 = !{!115, !741, !115}
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !766, file: !12, line: 1868, baseType: !2041, size: 64, offset: 192)
!2041 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2042, size: 64)
!2042 = !DISubroutineType(types: !2043)
!2043 = !{!2044, !741, !115}
!2044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2045 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !12, line: 581, flags: DIFlagFwdDecl)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !766, file: !12, line: 1870, baseType: !2047, size: 64, offset: 256)
!2047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2048, size: 64)
!2048 = !DISubroutineType(types: !2049)
!2049 = !{!115, !772, !870, !115}
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !766, file: !12, line: 1872, baseType: !2051, size: 64, offset: 320)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{!115, !741, !772, !745, !370}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !766, file: !12, line: 1873, baseType: !2055, size: 64, offset: 384)
!2055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2056, size: 64)
!2056 = !DISubroutineType(types: !2057)
!2057 = !{!115, !772, !741, !772}
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !766, file: !12, line: 1874, baseType: !2059, size: 64, offset: 448)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DISubroutineType(types: !2061)
!2061 = !{!115, !741, !772}
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !766, file: !12, line: 1875, baseType: !2063, size: 64, offset: 512)
!2063 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2064, size: 64)
!2064 = !DISubroutineType(types: !2065)
!2065 = !{!115, !741, !772, !844}
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !766, file: !12, line: 1876, baseType: !2067, size: 64, offset: 576)
!2067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2068, size: 64)
!2068 = !DISubroutineType(types: !2069)
!2069 = !{!115, !741, !772, !745}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !766, file: !12, line: 1877, baseType: !2059, size: 64, offset: 640)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !766, file: !12, line: 1878, baseType: !2072, size: 64, offset: 704)
!2072 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2073, size: 64)
!2073 = !DISubroutineType(types: !2074)
!2074 = !{!115, !741, !772, !745, !901}
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !766, file: !12, line: 1879, baseType: !2076, size: 64, offset: 768)
!2076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2077, size: 64)
!2077 = !DISubroutineType(types: !2078)
!2078 = !{!115, !741, !772, !741, !772, !7}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !766, file: !12, line: 1881, baseType: !2080, size: 64, offset: 832)
!2080 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2081, size: 64)
!2081 = !DISubroutineType(types: !2082)
!2082 = !{!115, !772, !2083}
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !12, line: 219, size: 640, elements: !2085)
!2085 = !{!2086, !2087, !2088, !2089, !2090, !2091, !2096, !2097, !2098}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !2084, file: !12, line: 220, baseType: !7, size: 32)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !2084, file: !12, line: 221, baseType: !745, size: 16, offset: 32)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !2084, file: !12, line: 222, baseType: !748, size: 32, offset: 64)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !2084, file: !12, line: 223, baseType: !756, size: 32, offset: 96)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !2084, file: !12, line: 224, baseType: !906, size: 64, offset: 128)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !2084, file: !12, line: 225, baseType: !2092, size: 128, offset: 192)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !1485, line: 13, size: 128, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2092, file: !1485, line: 14, baseType: !1484, size: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2092, file: !1485, line: 15, baseType: !279, size: 64, offset: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !2084, file: !12, line: 226, baseType: !2092, size: 128, offset: 320)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !2084, file: !12, line: 227, baseType: !2092, size: 128, offset: 448)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !2084, file: !12, line: 234, baseType: !1090, size: 64, offset: 576)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !766, file: !12, line: 1882, baseType: !2100, size: 64, offset: 896)
!2100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2101, size: 64)
!2101 = !DISubroutineType(types: !2102)
!2102 = !{!115, !887, !2103, !468, !7}
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !2105, line: 22, size: 1152, elements: !2106)
!2105 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!2106 = !{!2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124}
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !2104, file: !2105, line: 23, baseType: !468, size: 32)
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2104, file: !2105, line: 24, baseType: !745, size: 16, offset: 32)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !2104, file: !2105, line: 25, baseType: !7, size: 32, offset: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !2104, file: !2105, line: 26, baseType: !1492, size: 32, offset: 96)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2104, file: !2105, line: 27, baseType: !504, size: 64, offset: 128)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !2104, file: !2105, line: 28, baseType: !504, size: 64, offset: 192)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2104, file: !2105, line: 37, baseType: !504, size: 64, offset: 256)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !2104, file: !2105, line: 38, baseType: !901, size: 32, offset: 320)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !2104, file: !2105, line: 39, baseType: !901, size: 32, offset: 352)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2104, file: !2105, line: 40, baseType: !748, size: 32, offset: 384)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2104, file: !2105, line: 41, baseType: !756, size: 32, offset: 416)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2104, file: !2105, line: 42, baseType: !906, size: 64, offset: 448)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !2104, file: !2105, line: 43, baseType: !2092, size: 128, offset: 512)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !2104, file: !2105, line: 44, baseType: !2092, size: 128, offset: 640)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !2104, file: !2105, line: 45, baseType: !2092, size: 128, offset: 768)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !2104, file: !2105, line: 46, baseType: !2092, size: 128, offset: 896)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2104, file: !2105, line: 47, baseType: !504, size: 64, offset: 1024)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !2104, file: !2105, line: 48, baseType: !504, size: 64, offset: 1088)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !766, file: !12, line: 1883, baseType: !2126, size: 64, offset: 960)
!2126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2127, size: 64)
!2127 = !DISubroutineType(types: !2128)
!2128 = !{!1095, !772, !870, !1023}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !766, file: !12, line: 1884, baseType: !2130, size: 64, offset: 1024)
!2130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2131, size: 64)
!2131 = !DISubroutineType(types: !2132)
!2132 = !{!115, !741, !2133, !504, !504}
!2133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2134, size: 64)
!2134 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !12, line: 50, flags: DIFlagFwdDecl)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !766, file: !12, line: 1886, baseType: !2136, size: 64, offset: 1088)
!2136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2137, size: 64)
!2137 = !DISubroutineType(types: !2138)
!2138 = !{!115, !741, !2139, !115}
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2092, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !766, file: !12, line: 1887, baseType: !2141, size: 64, offset: 1152)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DISubroutineType(types: !2143)
!2143 = !{!115, !741, !772, !1090, !7, !745}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !766, file: !12, line: 1890, baseType: !2067, size: 64, offset: 1216)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !766, file: !12, line: 1891, baseType: !2146, size: 64, offset: 1280)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{!115, !741, !2044, !115}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !742, file: !12, line: 623, baseType: !896, size: 64, offset: 192)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !742, file: !12, line: 624, baseType: !737, size: 64, offset: 256)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !742, file: !12, line: 631, baseType: !341, size: 64, offset: 320)
!2152 = !DIDerivedType(tag: DW_TAG_member, scope: !742, file: !12, line: 639, baseType: !2153, size: 32, offset: 384)
!2153 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !742, file: !12, line: 639, size: 32, elements: !2154)
!2154 = !{!2155, !2157}
!2155 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2153, file: !12, line: 640, baseType: !2156, size: 32)
!2156 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2153, file: !12, line: 641, baseType: !7, size: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !742, file: !12, line: 643, baseType: !901, size: 32, offset: 416)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !742, file: !12, line: 644, baseType: !906, size: 64, offset: 448)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !742, file: !12, line: 645, baseType: !2092, size: 128, offset: 512)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !742, file: !12, line: 646, baseType: !2092, size: 128, offset: 640)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !742, file: !12, line: 647, baseType: !2092, size: 128, offset: 768)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !742, file: !12, line: 648, baseType: !436, offset: 896)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !742, file: !12, line: 649, baseType: !383, size: 16, offset: 896)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !742, file: !12, line: 650, baseType: !364, size: 8, offset: 912)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !742, file: !12, line: 651, baseType: !364, size: 8, offset: 920)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !742, file: !12, line: 652, baseType: !1821, size: 64, offset: 960)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !742, file: !12, line: 659, baseType: !341, size: 64, offset: 1024)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !742, file: !12, line: 660, baseType: !1469, size: 256, offset: 1088)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !742, file: !12, line: 662, baseType: !341, size: 64, offset: 1344)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !742, file: !12, line: 663, baseType: !341, size: 64, offset: 1408)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !742, file: !12, line: 665, baseType: !943, size: 128, offset: 1472)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !742, file: !12, line: 666, baseType: !385, size: 128, offset: 1600)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !742, file: !12, line: 675, baseType: !385, size: 128, offset: 1728)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !742, file: !12, line: 676, baseType: !385, size: 128, offset: 1856)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !742, file: !12, line: 677, baseType: !385, size: 128, offset: 1984)
!2177 = !DIDerivedType(tag: DW_TAG_member, scope: !742, file: !12, line: 678, baseType: !2178, size: 128, offset: 2112)
!2178 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !742, file: !12, line: 678, size: 128, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2178, file: !12, line: 679, baseType: !939, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2178, file: !12, line: 680, baseType: !1070, size: 128, align: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !742, file: !12, line: 682, baseType: !428, size: 64, offset: 2240)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !742, file: !12, line: 683, baseType: !428, size: 64, offset: 2304)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !742, file: !12, line: 684, baseType: !358, size: 32, offset: 2368)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !742, file: !12, line: 685, baseType: !358, size: 32, offset: 2400)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !742, file: !12, line: 686, baseType: !358, size: 32, offset: 2432)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !742, file: !12, line: 688, baseType: !358, size: 32, offset: 2464)
!2188 = !DIDerivedType(tag: DW_TAG_member, scope: !742, file: !12, line: 690, baseType: !2189, size: 64, offset: 2496)
!2189 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !742, file: !12, line: 690, size: 64, elements: !2190)
!2190 = !{!2191, !2192}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2189, file: !12, line: 691, baseType: !1081, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2189, file: !12, line: 692, baseType: !970, size: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !742, file: !12, line: 694, baseType: !2194, size: 64, offset: 2560)
!2194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!2195 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !12, line: 1100, size: 384, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200}
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !2195, file: !12, line: 1101, baseType: !436)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !2195, file: !12, line: 1102, baseType: !385, size: 128)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !2195, file: !12, line: 1103, baseType: !385, size: 128, offset: 128)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !2195, file: !12, line: 1104, baseType: !385, size: 128, offset: 256)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !742, file: !12, line: 695, baseType: !738, size: 1216, align: 64, offset: 2624)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !742, file: !12, line: 696, baseType: !385, size: 128, offset: 3840)
!2203 = !DIDerivedType(tag: DW_TAG_member, scope: !742, file: !12, line: 697, baseType: !2204, size: 64, offset: 3968)
!2204 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !742, file: !12, line: 697, size: 64, elements: !2205)
!2205 = !{!2206, !2207, !2208, !2211, !2212}
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !2204, file: !12, line: 698, baseType: !1315, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !2204, file: !12, line: 699, baseType: !1846, size: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !2204, file: !12, line: 700, baseType: !2209, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !12, line: 700, flags: DIFlagFwdDecl)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !2204, file: !12, line: 701, baseType: !870, size: 64)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !2204, file: !12, line: 702, baseType: !7, size: 32)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !742, file: !12, line: 705, baseType: !469, size: 32, offset: 4032)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !742, file: !12, line: 708, baseType: !469, size: 32, offset: 4064)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !742, file: !12, line: 709, baseType: !1930, size: 64, offset: 4096)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !742, file: !12, line: 720, baseType: !344, size: 64, offset: 4160)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !738, file: !12, line: 453, baseType: !1385, size: 128, offset: 64)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !738, file: !12, line: 454, baseType: !342, size: 32, offset: 192)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !738, file: !12, line: 455, baseType: !358, size: 32, offset: 224)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !738, file: !12, line: 460, baseType: !600, size: 128, offset: 256)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !738, file: !12, line: 461, baseType: !1469, size: 256, offset: 384)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !738, file: !12, line: 462, baseType: !341, size: 64, offset: 640)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !738, file: !12, line: 463, baseType: !341, size: 64, offset: 704)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !738, file: !12, line: 464, baseType: !341, size: 64, offset: 768)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !738, file: !12, line: 465, baseType: !2226, size: 64, offset: 832)
!2226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2227, size: 64)
!2227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2228)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !12, line: 367, size: 1408, elements: !2229)
!2229 = !{!2230, !2234, !2238, !2242, !2246, !2250, !2256, !2261, !2265, !2270, !2274, !2278, !2282, !2283, !2287, !2293, !2294, !2295, !2299, !2304, !2308, !2315}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !2228, file: !12, line: 368, baseType: !2231, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2232, size: 64)
!2232 = !DISubroutineType(types: !2233)
!2233 = !{!115, !725, !982}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !2228, file: !12, line: 369, baseType: !2235, size: 64, offset: 64)
!2235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2236, size: 64)
!2236 = !DISubroutineType(types: !2237)
!2237 = !{!115, !1090, !725}
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !2228, file: !12, line: 372, baseType: !2239, size: 64, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2240, size: 64)
!2240 = !DISubroutineType(types: !2241)
!2241 = !{!115, !737, !982}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !2228, file: !12, line: 375, baseType: !2243, size: 64, offset: 192)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DISubroutineType(types: !2245)
!2245 = !{!115, !725}
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !2228, file: !12, line: 381, baseType: !2247, size: 64, offset: 256)
!2247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2248, size: 64)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!115, !1090, !737, !388, !7}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !2228, file: !12, line: 383, baseType: !2251, size: 64, offset: 320)
!2251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2252, size: 64)
!2252 = !DISubroutineType(types: !2253)
!2253 = !{null, !2254}
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !12, line: 290, flags: DIFlagFwdDecl)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !2228, file: !12, line: 385, baseType: !2257, size: 64, offset: 384)
!2257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2258, size: 64)
!2258 = !DISubroutineType(types: !2259)
!2259 = !{!115, !1090, !737, !906, !7, !7, !2260, !1272}
!2260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !725, size: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !2228, file: !12, line: 388, baseType: !2262, size: 64, offset: 448)
!2262 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2263, size: 64)
!2263 = !DISubroutineType(types: !2264)
!2264 = !{!115, !1090, !737, !906, !7, !7, !725, !344}
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !2228, file: !12, line: 393, baseType: !2266, size: 64, offset: 512)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DISubroutineType(types: !2268)
!2268 = !{!2269, !737, !2269}
!2269 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !343, line: 125, baseType: !504)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !2228, file: !12, line: 394, baseType: !2271, size: 64, offset: 576)
!2271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2272, size: 64)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{null, !725, !7, !7}
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !2228, file: !12, line: 395, baseType: !2275, size: 64, offset: 640)
!2275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2276, size: 64)
!2276 = !DISubroutineType(types: !2277)
!2277 = !{!115, !725, !342}
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !2228, file: !12, line: 396, baseType: !2279, size: 64, offset: 704)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{null, !725}
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !2228, file: !12, line: 397, baseType: !1103, size: 64, offset: 768)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !2228, file: !12, line: 402, baseType: !2284, size: 64, offset: 832)
!2284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2285, size: 64)
!2285 = !DISubroutineType(types: !2286)
!2286 = !{!115, !737, !725, !725, !34}
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !2228, file: !12, line: 404, baseType: !2288, size: 64, offset: 896)
!2288 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2289, size: 64)
!2289 = !DISubroutineType(types: !2290)
!2290 = !{!370, !725, !2291}
!2291 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !2292, line: 305, baseType: !7)
!2292 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !2228, file: !12, line: 405, baseType: !2279, size: 64, offset: 960)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !2228, file: !12, line: 406, baseType: !2243, size: 64, offset: 1024)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !2228, file: !12, line: 407, baseType: !2296, size: 64, offset: 1088)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{!115, !725, !341, !341}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !2228, file: !12, line: 409, baseType: !2300, size: 64, offset: 1152)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{null, !725, !2303, !2303}
!2303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !370, size: 64)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !2228, file: !12, line: 410, baseType: !2305, size: 64, offset: 1216)
!2305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2306, size: 64)
!2306 = !DISubroutineType(types: !2307)
!2307 = !{!115, !737, !725}
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !2228, file: !12, line: 413, baseType: !2309, size: 64, offset: 1280)
!2309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2310, size: 64)
!2310 = !DISubroutineType(types: !2311)
!2311 = !{!115, !2312, !1090, !2314}
!2312 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2313, size: 64)
!2313 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !12, line: 61, flags: DIFlagFwdDecl)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2269, size: 64)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !2228, file: !12, line: 415, baseType: !2316, size: 64, offset: 1344)
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DISubroutineType(types: !2318)
!2318 = !{null, !1090}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !738, file: !12, line: 466, baseType: !341, size: 64, offset: 896)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !738, file: !12, line: 467, baseType: !1632, size: 32, offset: 960)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !738, file: !12, line: 468, baseType: !436, offset: 992)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !738, file: !12, line: 469, baseType: !385, size: 128, offset: 1024)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !738, file: !12, line: 470, baseType: !344, size: 64, offset: 1152)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !733, file: !639, line: 87, baseType: !341, size: 64, offset: 192)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !733, file: !639, line: 94, baseType: !341, size: 64, offset: 256)
!2326 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !639, line: 96, baseType: !2327, size: 64)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !730, file: !639, line: 96, size: 64, elements: !2328)
!2328 = !{!2329}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !2327, file: !639, line: 101, baseType: !2330, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !343, line: 143, baseType: !504)
!2331 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !639, line: 103, baseType: !2332, size: 320)
!2332 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !730, file: !639, line: 103, size: 320, elements: !2333)
!2333 = !{!2334, !2344, !2345, !2346}
!2334 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !639, line: 104, baseType: !2335, size: 128)
!2335 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !639, line: 104, size: 128, elements: !2336)
!2336 = !{!2337, !2338}
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !2335, file: !639, line: 105, baseType: !385, size: 128)
!2338 = !DIDerivedType(tag: DW_TAG_member, scope: !2335, file: !639, line: 106, baseType: !2339, size: 128)
!2339 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2335, file: !639, line: 106, size: 128, elements: !2340)
!2340 = !{!2341, !2342, !2343}
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2339, file: !639, line: 107, baseType: !725, size: 64)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2339, file: !639, line: 109, baseType: !115, size: 32, offset: 64)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !2339, file: !639, line: 110, baseType: !115, size: 32, offset: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !2332, file: !639, line: 117, baseType: !1397, size: 64, offset: 128)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !2332, file: !639, line: 119, baseType: !344, size: 64, offset: 192)
!2346 = !DIDerivedType(tag: DW_TAG_member, scope: !2332, file: !639, line: 120, baseType: !2347, size: 64, offset: 256)
!2347 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2332, file: !639, line: 120, size: 64, elements: !2348)
!2348 = !{!2349, !2350, !2351}
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !2347, file: !639, line: 121, baseType: !344, size: 64)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !2347, file: !639, line: 122, baseType: !341, size: 64)
!2351 = !DIDerivedType(tag: DW_TAG_member, scope: !2347, file: !639, line: 123, baseType: !2352, size: 32)
!2352 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2347, file: !639, line: 123, size: 32, elements: !2353)
!2353 = !{!2354, !2355, !2356}
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !2352, file: !639, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2352, file: !639, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2352, file: !639, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !639, line: 130, baseType: !2358, size: 192)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !730, file: !639, line: 130, size: 192, elements: !2359)
!2359 = !{!2360, !2361, !2362, !2363, !2364}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !2358, file: !639, line: 131, baseType: !341, size: 64)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !2358, file: !639, line: 134, baseType: !368, size: 8, offset: 64)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !2358, file: !639, line: 135, baseType: !368, size: 8, offset: 72)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !2358, file: !639, line: 136, baseType: !358, size: 32, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !2358, file: !639, line: 137, baseType: !7, size: 32, offset: 128)
!2365 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !639, line: 139, baseType: !2366, size: 256)
!2366 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !730, file: !639, line: 139, size: 256, elements: !2367)
!2367 = !{!2368, !2369, !2370}
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !2366, file: !639, line: 140, baseType: !341, size: 64)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !2366, file: !639, line: 141, baseType: !358, size: 32, offset: 64)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !2366, file: !639, line: 143, baseType: !385, size: 128, offset: 128)
!2371 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !639, line: 145, baseType: !2372, size: 256)
!2372 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !730, file: !639, line: 145, size: 256, elements: !2373)
!2373 = !{!2374, !2375, !2377, !2378, !2383}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !2372, file: !639, line: 146, baseType: !341, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !2372, file: !639, line: 147, baseType: !2376, size: 64, offset: 64)
!2376 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !657, line: 509, baseType: !725)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !2372, file: !639, line: 148, baseType: !341, size: 64, offset: 128)
!2378 = !DIDerivedType(tag: DW_TAG_member, scope: !2372, file: !639, line: 149, baseType: !2379, size: 64, offset: 192)
!2379 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2372, file: !639, line: 149, size: 64, elements: !2380)
!2380 = !{!2381, !2382}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !2379, file: !639, line: 150, baseType: !637, size: 64)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !2379, file: !639, line: 151, baseType: !358, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !2372, file: !639, line: 156, baseType: !436, offset: 256)
!2384 = !DIDerivedType(tag: DW_TAG_member, scope: !730, file: !639, line: 159, baseType: !2385, size: 128)
!2385 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !730, file: !639, line: 159, size: 128, elements: !2386)
!2386 = !{!2387, !2461}
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2385, file: !639, line: 161, baseType: !2388, size: 64)
!2388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2389, size: 64)
!2389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !42, line: 110, size: 1152, elements: !2390)
!2390 = !{!2391, !2401, !2422, !2423, !2434, !2435, !2436, !2448, !2449, !2450}
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2389, file: !42, line: 111, baseType: !2392, size: 384)
!2392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !42, line: 19, size: 384, elements: !2393)
!2393 = !{!2394, !2396, !2397, !2398, !2399, !2400}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2392, file: !42, line: 20, baseType: !2395, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !341)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2392, file: !42, line: 21, baseType: !2395, size: 64, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2392, file: !42, line: 22, baseType: !2395, size: 64, offset: 128)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2392, file: !42, line: 23, baseType: !341, size: 64, offset: 192)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2392, file: !42, line: 24, baseType: !341, size: 64, offset: 256)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2392, file: !42, line: 25, baseType: !341, size: 64, offset: 320)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2389, file: !42, line: 112, baseType: !2402, size: 64, offset: 384)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2404, line: 105, size: 128, elements: !2405)
!2404 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2405 = !{!2406, !2407}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2403, file: !2404, line: 110, baseType: !341, size: 64)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2403, file: !2404, line: 118, baseType: !2408, size: 64, offset: 64)
!2408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2409, size: 64)
!2409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2404, line: 95, size: 448, elements: !2410)
!2410 = !{!2411, !2412, !2417, !2418, !2419, !2420, !2421}
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2409, file: !2404, line: 96, baseType: !426, size: 64)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2409, file: !2404, line: 97, baseType: !2413, size: 64, offset: 64)
!2413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2414, size: 64)
!2414 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2404, line: 60, baseType: !2415)
!2415 = !DISubroutineType(types: !2416)
!2416 = !{null, !2402}
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2409, file: !2404, line: 98, baseType: !2413, size: 64, offset: 128)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2409, file: !2404, line: 99, baseType: !370, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2409, file: !2404, line: 100, baseType: !370, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2409, file: !2404, line: 101, baseType: !1070, size: 128, align: 64, offset: 256)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2409, file: !2404, line: 102, baseType: !2402, size: 64, offset: 384)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2389, file: !42, line: 113, baseType: !2403, size: 128, offset: 448)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2389, file: !42, line: 114, baseType: !2424, size: 192, offset: 576)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !2425, line: 26, size: 192, elements: !2426)
!2425 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!2426 = !{!2427, !2428}
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2424, file: !2425, line: 27, baseType: !7, size: 32)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !2424, file: !2425, line: 28, baseType: !2429, size: 128, offset: 64)
!2429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !2430, line: 43, size: 128, elements: !2431)
!2430 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!2431 = !{!2432, !2433}
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2429, file: !2430, line: 44, baseType: !566)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !2429, file: !2430, line: 45, baseType: !385, size: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2389, file: !42, line: 115, baseType: !41, size: 32, offset: 768)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2389, file: !42, line: 116, baseType: !7, size: 32, offset: 800)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2389, file: !42, line: 117, baseType: !2437, size: 64, offset: 832)
!2437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2438, size: 64)
!2438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2439)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !42, line: 67, size: 256, elements: !2440)
!2440 = !{!2441, !2442, !2446, !2447}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2439, file: !42, line: 73, baseType: !2279, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2439, file: !42, line: 78, baseType: !2443, size: 64, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2444, size: 64)
!2444 = !DISubroutineType(types: !2445)
!2445 = !{null, !2388}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2439, file: !42, line: 83, baseType: !2443, size: 64, offset: 128)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2439, file: !42, line: 89, baseType: !692, size: 64, offset: 192)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2389, file: !42, line: 118, baseType: !344, size: 64, offset: 896)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2389, file: !42, line: 119, baseType: !115, size: 32, offset: 960)
!2450 = !DIDerivedType(tag: DW_TAG_member, scope: !2389, file: !42, line: 120, baseType: !2451, size: 128, offset: 1024)
!2451 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2389, file: !42, line: 120, size: 128, elements: !2452)
!2452 = !{!2453, !2459}
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2451, file: !42, line: 121, baseType: !2454, size: 128)
!2454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2455, line: 6, size: 128, elements: !2456)
!2455 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2456 = !{!2457, !2458}
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2454, file: !2455, line: 7, baseType: !504, size: 64)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2454, file: !2455, line: 8, baseType: !504, size: 64, offset: 64)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2451, file: !42, line: 122, baseType: !2460)
!2460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2454, elements: !1610)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2385, file: !639, line: 162, baseType: !344, size: 64, offset: 64)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !730, file: !639, line: 176, baseType: !1070, size: 128, align: 64)
!2463 = !DIDerivedType(tag: DW_TAG_member, scope: !726, file: !639, line: 179, baseType: !2464, size: 32, offset: 384)
!2464 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !726, file: !639, line: 179, size: 32, elements: !2465)
!2465 = !{!2466, !2467, !2468, !2469}
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2464, file: !639, line: 184, baseType: !358, size: 32)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2464, file: !639, line: 192, baseType: !7, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2464, file: !639, line: 194, baseType: !7, size: 32)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2464, file: !639, line: 195, baseType: !115, size: 32)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !726, file: !639, line: 199, baseType: !358, size: 32, offset: 416)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !697, file: !49, line: 522, baseType: !725, size: 64, offset: 512)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !697, file: !49, line: 528, baseType: !2473, size: 64, offset: 576)
!2473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !719, size: 64)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !697, file: !49, line: 532, baseType: !2475, size: 64, offset: 640)
!2475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !697, file: !49, line: 536, baseType: !2376, size: 64, offset: 704)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !676, file: !49, line: 563, baseType: !2478, size: 64, offset: 320)
!2478 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2479, size: 64)
!2479 = !DISubroutineType(types: !2480)
!2480 = !{!695, !696, !48}
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !676, file: !49, line: 565, baseType: !2482, size: 64, offset: 384)
!2482 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2483, size: 64)
!2483 = !DISubroutineType(types: !2484)
!2484 = !{null, !696, !341, !341}
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !676, file: !49, line: 567, baseType: !2486, size: 64, offset: 448)
!2486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2487, size: 64)
!2487 = !DISubroutineType(types: !2488)
!2488 = !{!341, !645}
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !676, file: !49, line: 571, baseType: !692, size: 64, offset: 512)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !676, file: !49, line: 574, baseType: !692, size: 64, offset: 576)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !676, file: !49, line: 579, baseType: !2492, size: 64, offset: 640)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{!115, !645, !341, !344, !115, !115}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !676, file: !49, line: 585, baseType: !2496, size: 64, offset: 704)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{!844, !645}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !676, file: !49, line: 615, baseType: !2500, size: 64, offset: 768)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{!725, !645, !341}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !646, file: !639, line: 359, baseType: !341, size: 64, offset: 1216)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !646, file: !639, line: 361, baseType: !1090, size: 64, offset: 1280)
!2505 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !646, file: !639, line: 362, baseType: !344, size: 64, offset: 1344)
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !646, file: !639, line: 365, baseType: !426, size: 64, offset: 1408)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !646, file: !639, line: 373, baseType: !2508, offset: 1472)
!2508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !639, line: 296, elements: !450)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !642, file: !639, line: 391, baseType: !603, size: 64, offset: 64)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !642, file: !639, line: 392, baseType: !504, size: 64, offset: 128)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !642, file: !639, line: 394, baseType: !1303, size: 64, offset: 192)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !642, file: !639, line: 398, baseType: !341, size: 64, offset: 256)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !642, file: !639, line: 399, baseType: !341, size: 64, offset: 320)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !642, file: !639, line: 405, baseType: !341, size: 64, offset: 384)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !642, file: !639, line: 406, baseType: !341, size: 64, offset: 448)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !642, file: !639, line: 407, baseType: !2517, size: 64, offset: 512)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2518, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !657, line: 286, baseType: !2519)
!2519 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !657, line: 286, size: 64, elements: !2520)
!2520 = !{!2521}
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !2519, file: !657, line: 286, baseType: !2522, size: 64)
!2522 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !662, line: 18, baseType: !341)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !642, file: !639, line: 416, baseType: !358, size: 32, offset: 576)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !642, file: !639, line: 428, baseType: !358, size: 32, offset: 608)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !642, file: !639, line: 437, baseType: !358, size: 32, offset: 640)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !642, file: !639, line: 447, baseType: !358, size: 32, offset: 672)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !642, file: !639, line: 450, baseType: !426, size: 64, offset: 704)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !642, file: !639, line: 452, baseType: !115, size: 32, offset: 768)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !642, file: !639, line: 454, baseType: !436, offset: 800)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !642, file: !639, line: 457, baseType: !1469, size: 256, offset: 832)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !642, file: !639, line: 459, baseType: !385, size: 128, offset: 1088)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !642, file: !639, line: 466, baseType: !341, size: 64, offset: 1216)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !642, file: !639, line: 467, baseType: !341, size: 64, offset: 1280)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !642, file: !639, line: 469, baseType: !341, size: 64, offset: 1344)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !642, file: !639, line: 470, baseType: !341, size: 64, offset: 1408)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !642, file: !639, line: 471, baseType: !428, size: 64, offset: 1472)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !642, file: !639, line: 472, baseType: !341, size: 64, offset: 1536)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !642, file: !639, line: 473, baseType: !341, size: 64, offset: 1600)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !642, file: !639, line: 474, baseType: !341, size: 64, offset: 1664)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !642, file: !639, line: 475, baseType: !341, size: 64, offset: 1728)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !642, file: !639, line: 477, baseType: !436, offset: 1792)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !642, file: !639, line: 478, baseType: !341, size: 64, offset: 1792)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !642, file: !639, line: 478, baseType: !341, size: 64, offset: 1856)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !642, file: !639, line: 478, baseType: !341, size: 64, offset: 1920)
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !642, file: !639, line: 478, baseType: !341, size: 64, offset: 1984)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !642, file: !639, line: 479, baseType: !341, size: 64, offset: 2048)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !642, file: !639, line: 479, baseType: !341, size: 64, offset: 2112)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !642, file: !639, line: 479, baseType: !341, size: 64, offset: 2176)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !642, file: !639, line: 480, baseType: !341, size: 64, offset: 2240)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !642, file: !639, line: 480, baseType: !341, size: 64, offset: 2304)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !642, file: !639, line: 480, baseType: !341, size: 64, offset: 2368)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !642, file: !639, line: 480, baseType: !341, size: 64, offset: 2432)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !642, file: !639, line: 482, baseType: !2554, size: 2816, offset: 2496)
!2554 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 2816, elements: !2555)
!2555 = !{!2556}
!2556 = !DISubrange(count: 44)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !642, file: !639, line: 488, baseType: !2558, size: 256, offset: 5312)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !2559, line: 60, size: 256, elements: !2560)
!2559 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!2560 = !{!2561}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2558, file: !2559, line: 61, baseType: !2562, size: 256)
!2562 = !DICompositeType(tag: DW_TAG_array_type, baseType: !426, size: 256, elements: !1364)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !642, file: !639, line: 490, baseType: !2564, size: 64, offset: 5568)
!2564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2565, size: 64)
!2565 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !639, line: 490, flags: DIFlagFwdDecl)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !642, file: !639, line: 493, baseType: !2567, size: 896, offset: 5632)
!2567 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !2568, line: 53, baseType: !2569)
!2568 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2568, line: 13, size: 896, elements: !2570)
!2570 = !{!2571, !2572, !2573, !2574, !2577, !2578, !2579, !2580, !2600, !2601, !2602}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !2569, file: !2568, line: 18, baseType: !504, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !2569, file: !2568, line: 28, baseType: !428, size: 64, offset: 64)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !2569, file: !2568, line: 31, baseType: !1469, size: 256, offset: 128)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !2569, file: !2568, line: 32, baseType: !2575, size: 64, offset: 384)
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !2568, line: 32, flags: DIFlagFwdDecl)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !2569, file: !2568, line: 37, baseType: !383, size: 16, offset: 448)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2569, file: !2568, line: 40, baseType: !423, size: 192, offset: 512)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !2569, file: !2568, line: 41, baseType: !344, size: 64, offset: 704)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !2569, file: !2568, line: 42, baseType: !2581, size: 64, offset: 768)
!2581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2582, size: 64)
!2582 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2583)
!2583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !2584, line: 13, size: 896, elements: !2585)
!2584 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!2585 = !{!2586, !2587, !2588, !2589, !2590, !2591, !2592, !2593, !2594, !2595, !2596, !2597, !2598, !2599}
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2583, file: !2584, line: 14, baseType: !344, size: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2583, file: !2584, line: 15, baseType: !341, size: 64, offset: 64)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2583, file: !2584, line: 17, baseType: !341, size: 64, offset: 128)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !2583, file: !2584, line: 17, baseType: !341, size: 64, offset: 192)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !2583, file: !2584, line: 19, baseType: !279, size: 64, offset: 256)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !2583, file: !2584, line: 21, baseType: !279, size: 64, offset: 320)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !2583, file: !2584, line: 22, baseType: !279, size: 64, offset: 384)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !2583, file: !2584, line: 23, baseType: !279, size: 64, offset: 448)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !2583, file: !2584, line: 24, baseType: !279, size: 64, offset: 512)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !2583, file: !2584, line: 25, baseType: !279, size: 64, offset: 576)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !2583, file: !2584, line: 26, baseType: !279, size: 64, offset: 640)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !2583, file: !2584, line: 27, baseType: !279, size: 64, offset: 704)
!2598 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !2583, file: !2584, line: 28, baseType: !279, size: 64, offset: 768)
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !2583, file: !2584, line: 29, baseType: !279, size: 64, offset: 832)
!2600 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !2569, file: !2568, line: 44, baseType: !358, size: 32, offset: 832)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !2569, file: !2568, line: 50, baseType: !381, size: 16, offset: 864)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !2569, file: !2568, line: 51, baseType: !2603, size: 16, offset: 880)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !365, line: 18, baseType: !2604)
!2604 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !367, line: 23, baseType: !1496)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !642, file: !639, line: 495, baseType: !341, size: 64, offset: 6528)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !642, file: !639, line: 497, baseType: !2607, size: 64, offset: 6592)
!2607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !639, line: 381, size: 384, elements: !2609)
!2609 = !{!2610, !2611, !2617}
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2608, file: !639, line: 382, baseType: !358, size: 32)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !2608, file: !639, line: 383, baseType: !2612, size: 128, offset: 64)
!2612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !639, line: 376, size: 128, elements: !2613)
!2613 = !{!2614, !2615}
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2612, file: !639, line: 377, baseType: !458, size: 64)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2612, file: !639, line: 378, baseType: !2616, size: 64, offset: 64)
!2616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2612, size: 64)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !2608, file: !639, line: 384, baseType: !2424, size: 192, offset: 192)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !642, file: !639, line: 500, baseType: !436, offset: 6656)
!2619 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !642, file: !639, line: 501, baseType: !2620, size: 64, offset: 6656)
!2620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2621, size: 64)
!2621 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !639, line: 387, flags: DIFlagFwdDecl)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !642, file: !639, line: 516, baseType: !1402, size: 64, offset: 6720)
!2623 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !642, file: !639, line: 519, baseType: !1090, size: 64, offset: 6784)
!2624 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !642, file: !639, line: 521, baseType: !2625, size: 64, offset: 6848)
!2625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2626, size: 64)
!2626 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !639, line: 521, flags: DIFlagFwdDecl)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !642, file: !639, line: 545, baseType: !358, size: 32, offset: 6912)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !642, file: !639, line: 548, baseType: !370, size: 8, offset: 6944)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !642, file: !639, line: 550, baseType: !2630, offset: 6952)
!2630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2631, line: 142, elements: !450)
!2631 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !642, file: !639, line: 554, baseType: !1991, size: 256, offset: 6976)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !642, file: !639, line: 557, baseType: !468, size: 32, offset: 7232)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !638, file: !639, line: 565, baseType: !2635, offset: 7296)
!2635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, elements: !2636)
!2636 = !{!2637}
!2637 = !DISubrange(count: -1)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !459, file: !460, line: 758, baseType: !637, size: 64, offset: 3968)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !459, file: !460, line: 761, baseType: !2640, size: 320, offset: 4032)
!2640 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !2559, line: 34, size: 320, elements: !2641)
!2641 = !{!2642, !2643}
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !2640, file: !2559, line: 35, baseType: !504, size: 64)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !2640, file: !2559, line: 36, baseType: !2644, size: 256, offset: 64)
!2644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !645, size: 256, elements: !1364)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !459, file: !460, line: 766, baseType: !115, size: 32, offset: 4352)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !459, file: !460, line: 767, baseType: !115, size: 32, offset: 4384)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !459, file: !460, line: 768, baseType: !115, size: 32, offset: 4416)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !459, file: !460, line: 770, baseType: !115, size: 32, offset: 4448)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !459, file: !460, line: 772, baseType: !341, size: 64, offset: 4480)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !459, file: !460, line: 775, baseType: !7, size: 32, offset: 4544)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !459, file: !460, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!2652 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !459, file: !460, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !459, file: !460, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !459, file: !460, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !459, file: !460, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !459, file: !460, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !459, file: !460, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !459, file: !460, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !459, file: !460, line: 831, baseType: !341, size: 64, offset: 4672)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !459, file: !460, line: 833, baseType: !2661, size: 384, offset: 4736)
!2661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !55, line: 25, size: 384, elements: !2662)
!2662 = !{!2663, !2668}
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2661, file: !55, line: 26, baseType: !2664, size: 64)
!2664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2665, size: 64)
!2665 = !DISubroutineType(types: !2666)
!2666 = !{!279, !2667}
!2667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2661, size: 64)
!2668 = !DIDerivedType(tag: DW_TAG_member, scope: !2661, file: !55, line: 27, baseType: !2669, size: 320, offset: 64)
!2669 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2661, file: !55, line: 27, size: 320, elements: !2670)
!2670 = !{!2671, !2681, !2706}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !2669, file: !55, line: 36, baseType: !2672, size: 320)
!2672 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2669, file: !55, line: 29, size: 320, elements: !2673)
!2673 = !{!2674, !2676, !2677, !2678, !2679, !2680}
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !2672, file: !55, line: 30, baseType: !2675, size: 64)
!2675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !468, size: 64)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2672, file: !55, line: 31, baseType: !468, size: 32, offset: 64)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2672, file: !55, line: 32, baseType: !468, size: 32, offset: 96)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !2672, file: !55, line: 33, baseType: !468, size: 32, offset: 128)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !2672, file: !55, line: 34, baseType: !504, size: 64, offset: 192)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !2672, file: !55, line: 35, baseType: !2675, size: 64, offset: 256)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !2669, file: !55, line: 46, baseType: !2682, size: 192)
!2682 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2669, file: !55, line: 38, size: 192, elements: !2683)
!2683 = !{!2684, !2685, !2686, !2705}
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !2682, file: !55, line: 39, baseType: !582, size: 32)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2682, file: !55, line: 40, baseType: !54, size: 32, offset: 32)
!2686 = !DIDerivedType(tag: DW_TAG_member, scope: !2682, file: !55, line: 41, baseType: !2687, size: 64, offset: 64)
!2687 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2682, file: !55, line: 41, size: 64, elements: !2688)
!2688 = !{!2689, !2697}
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !2687, file: !55, line: 42, baseType: !2690, size: 64)
!2690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2691, size: 64)
!2691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !2692, line: 7, size: 128, elements: !2693)
!2692 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!2693 = !{!2694, !2696}
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2691, file: !2692, line: 8, baseType: !2695, size: 64)
!2695 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !584, line: 93, baseType: !434)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2691, file: !2692, line: 9, baseType: !434, size: 64, offset: 64)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !2687, file: !55, line: 43, baseType: !2698, size: 64)
!2698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2699, size: 64)
!2699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !2700, line: 7, size: 64, elements: !2701)
!2700 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!2701 = !{!2702, !2704}
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2699, file: !2700, line: 8, baseType: !2703, size: 32)
!2703 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !2700, line: 5, baseType: !1461)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2699, file: !2700, line: 9, baseType: !1461, size: 32, offset: 32)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2682, file: !55, line: 45, baseType: !504, size: 64, offset: 128)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2669, file: !55, line: 54, baseType: !2707, size: 256)
!2707 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2669, file: !55, line: 48, size: 256, elements: !2708)
!2708 = !{!2709, !2712, !2713, !2714, !2715}
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !2707, file: !55, line: 49, baseType: !2710, size: 64)
!2710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2711, size: 64)
!2711 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !55, line: 14, flags: DIFlagFwdDecl)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !2707, file: !55, line: 50, baseType: !115, size: 32, offset: 64)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !2707, file: !55, line: 51, baseType: !115, size: 32, offset: 96)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !2707, file: !55, line: 52, baseType: !341, size: 64, offset: 128)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !2707, file: !55, line: 53, baseType: !341, size: 64, offset: 192)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !459, file: !460, line: 835, baseType: !2717, size: 32, offset: 5120)
!2717 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !343, line: 22, baseType: !2718)
!2718 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !584, line: 28, baseType: !115)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !459, file: !460, line: 836, baseType: !2717, size: 32, offset: 5152)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !459, file: !460, line: 840, baseType: !341, size: 64, offset: 5184)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !459, file: !460, line: 849, baseType: !458, size: 64, offset: 5248)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !459, file: !460, line: 852, baseType: !458, size: 64, offset: 5312)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !459, file: !460, line: 857, baseType: !385, size: 128, offset: 5376)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !459, file: !460, line: 858, baseType: !385, size: 128, offset: 5504)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !459, file: !460, line: 859, baseType: !458, size: 64, offset: 5632)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !459, file: !460, line: 867, baseType: !385, size: 128, offset: 5696)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !459, file: !460, line: 868, baseType: !385, size: 128, offset: 5824)
!2728 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !459, file: !460, line: 871, baseType: !1356, size: 64, offset: 5952)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !459, file: !460, line: 872, baseType: !2730, size: 512, offset: 6016)
!2730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !943, size: 512, elements: !1364)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !459, file: !460, line: 873, baseType: !385, size: 128, offset: 6528)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !459, file: !460, line: 874, baseType: !385, size: 128, offset: 6656)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !459, file: !460, line: 876, baseType: !2734, size: 64, offset: 6784)
!2734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !459, file: !460, line: 879, baseType: !1011, size: 64, offset: 6848)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !459, file: !460, line: 882, baseType: !1011, size: 64, offset: 6912)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !459, file: !460, line: 884, baseType: !504, size: 64, offset: 6976)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !459, file: !460, line: 885, baseType: !504, size: 64, offset: 7040)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !459, file: !460, line: 890, baseType: !504, size: 64, offset: 7104)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !459, file: !460, line: 891, baseType: !2741, size: 128, offset: 7168)
!2741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !460, line: 242, size: 128, elements: !2742)
!2742 = !{!2743, !2744, !2745}
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2741, file: !460, line: 244, baseType: !504, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2741, file: !460, line: 245, baseType: !504, size: 64, offset: 64)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2741, file: !460, line: 246, baseType: !566, offset: 128)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !459, file: !460, line: 900, baseType: !341, size: 64, offset: 7296)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !459, file: !460, line: 901, baseType: !341, size: 64, offset: 7360)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !459, file: !460, line: 904, baseType: !504, size: 64, offset: 7424)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !459, file: !460, line: 907, baseType: !504, size: 64, offset: 7488)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !459, file: !460, line: 910, baseType: !341, size: 64, offset: 7552)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !459, file: !460, line: 911, baseType: !341, size: 64, offset: 7616)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !459, file: !460, line: 914, baseType: !2753, size: 640, offset: 7680)
!2753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !2754, line: 123, size: 640, elements: !2755)
!2754 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!2755 = !{!2756, !2762, !2763}
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !2753, file: !2754, line: 124, baseType: !2757, size: 576)
!2757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2758, size: 576, elements: !955)
!2758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !2754, line: 108, size: 192, elements: !2759)
!2759 = !{!2760, !2761}
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !2758, file: !2754, line: 109, baseType: !504, size: 64)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !2758, file: !2754, line: 110, baseType: !597, size: 128, offset: 64)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !2753, file: !2754, line: 125, baseType: !7, size: 32, offset: 576)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !2753, file: !2754, line: 126, baseType: !7, size: 32, offset: 608)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !459, file: !460, line: 917, baseType: !2765, size: 192, offset: 8320)
!2765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !2754, line: 134, size: 192, elements: !2766)
!2766 = !{!2767, !2768}
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !2765, file: !2754, line: 135, baseType: !1070, size: 128, align: 64)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !2765, file: !2754, line: 136, baseType: !7, size: 32, offset: 128)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !459, file: !460, line: 923, baseType: !1423, size: 64, offset: 8512)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !459, file: !460, line: 926, baseType: !1423, size: 64, offset: 8576)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !459, file: !460, line: 929, baseType: !1423, size: 64, offset: 8640)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !459, file: !460, line: 933, baseType: !1453, size: 64, offset: 8704)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !459, file: !460, line: 943, baseType: !2774, size: 128, offset: 8768)
!2774 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 128, elements: !1941)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !459, file: !460, line: 945, baseType: !2776, size: 64, offset: 8896)
!2776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2777, size: 64)
!2777 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !460, line: 49, flags: DIFlagFwdDecl)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !459, file: !460, line: 956, baseType: !2779, size: 64, offset: 8960)
!2779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2780, size: 64)
!2780 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !460, line: 45, flags: DIFlagFwdDecl)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !459, file: !460, line: 959, baseType: !2782, size: 64, offset: 9024)
!2782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2783, size: 64)
!2783 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !460, line: 959, flags: DIFlagFwdDecl)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !459, file: !460, line: 962, baseType: !2785, size: 64, offset: 9088)
!2785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2786, size: 64)
!2786 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !460, line: 66, flags: DIFlagFwdDecl)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !459, file: !460, line: 966, baseType: !2788, size: 64, offset: 9152)
!2788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2789, size: 64)
!2789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !2790, line: 31, size: 576, elements: !2791)
!2790 = !DIFile(filename: "./include/linux/nsproxy.h", directory: "/home/lizy2001/genbc/linux")
!2791 = !{!2792, !2793, !2796, !2799, !2802, !2803, !2806, !2809, !2810}
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2789, file: !2790, line: 32, baseType: !358, size: 32)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "uts_ns", scope: !2789, file: !2790, line: 33, baseType: !2794, size: 64, offset: 64)
!2794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2795, size: 64)
!2795 = !DICompositeType(tag: DW_TAG_structure_type, name: "uts_namespace", file: !2790, line: 9, flags: DIFlagFwdDecl)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "ipc_ns", scope: !2789, file: !2790, line: 34, baseType: !2797, size: 64, offset: 128)
!2797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2798, size: 64)
!2798 = !DICompositeType(tag: DW_TAG_structure_type, name: "ipc_namespace", file: !2790, line: 10, flags: DIFlagFwdDecl)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_ns", scope: !2789, file: !2790, line: 35, baseType: !2800, size: 64, offset: 192)
!2800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2801, size: 64)
!2801 = !DICompositeType(tag: DW_TAG_structure_type, name: "mnt_namespace", file: !2790, line: 8, flags: DIFlagFwdDecl)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "pid_ns_for_children", scope: !2789, file: !2790, line: 36, baseType: !1375, size: 64, offset: 256)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "net_ns", scope: !2789, file: !2790, line: 37, baseType: !2804, size: 64, offset: 320)
!2804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2805, size: 64)
!2805 = !DICompositeType(tag: DW_TAG_structure_type, name: "net", file: !1455, line: 34, flags: DIFlagFwdDecl)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns", scope: !2789, file: !2790, line: 38, baseType: !2807, size: 64, offset: 384)
!2807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!2808 = !DICompositeType(tag: DW_TAG_structure_type, name: "time_namespace", file: !2790, line: 38, flags: DIFlagFwdDecl)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "time_ns_for_children", scope: !2789, file: !2790, line: 39, baseType: !2807, size: 64, offset: 448)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "cgroup_ns", scope: !2789, file: !2790, line: 40, baseType: !2811, size: 64, offset: 512)
!2811 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2812, size: 64)
!2812 = !DICompositeType(tag: DW_TAG_structure_type, name: "cgroup_namespace", file: !2790, line: 12, flags: DIFlagFwdDecl)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !459, file: !460, line: 969, baseType: !2814, size: 64, offset: 9216)
!2814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2815, size: 64)
!2815 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !2816, line: 82, size: 7296, elements: !2817)
!2816 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!2817 = !{!2818, !2819, !2820, !2821, !2822, !2823, !2824, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2853, !2862, !2863, !2865, !2866, !2867, !2870, !2876, !2877, !2878, !2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2900, !2901, !2908, !2909, !2910, !2911, !2912, !2913}
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !2815, file: !2816, line: 83, baseType: !354, size: 32)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !2815, file: !2816, line: 84, baseType: !358, size: 32, offset: 32)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !2815, file: !2816, line: 85, baseType: !115, size: 32, offset: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !2815, file: !2816, line: 86, baseType: !385, size: 128, offset: 128)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !2815, file: !2816, line: 88, baseType: !1201, size: 128, offset: 256)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !2815, file: !2816, line: 91, baseType: !458, size: 64, offset: 384)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !2815, file: !2816, line: 94, baseType: !2825, size: 192, offset: 448)
!2825 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !2826, line: 30, size: 192, elements: !2827)
!2826 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!2827 = !{!2828, !2829}
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2825, file: !2826, line: 31, baseType: !385, size: 128)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !2825, file: !2826, line: 32, baseType: !2830, size: 64, offset: 128)
!2830 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !2831, line: 25, baseType: !2832)
!2831 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!2832 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2831, line: 23, size: 64, elements: !2833)
!2833 = !{!2834}
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !2832, file: !2831, line: 24, baseType: !629, size: 64)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !2815, file: !2816, line: 97, baseType: !939, size: 64, offset: 640)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !2815, file: !2816, line: 100, baseType: !115, size: 32, offset: 704)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !2815, file: !2816, line: 106, baseType: !115, size: 32, offset: 736)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !2815, file: !2816, line: 107, baseType: !458, size: 64, offset: 768)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !2815, file: !2816, line: 110, baseType: !115, size: 32, offset: 832)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2815, file: !2816, line: 111, baseType: !7, size: 32, offset: 864)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !2815, file: !2816, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !2815, file: !2816, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !2815, file: !2816, line: 128, baseType: !115, size: 32, offset: 928)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !2815, file: !2816, line: 129, baseType: !385, size: 128, offset: 960)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !2815, file: !2816, line: 132, baseType: !541, size: 512, offset: 1088)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !2815, file: !2816, line: 133, baseType: !549, size: 64, offset: 1600)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !2815, file: !2816, line: 140, baseType: !2848, size: 256, offset: 1664)
!2848 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2849, size: 256, elements: !1445)
!2849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !2816, line: 38, size: 128, elements: !2850)
!2850 = !{!2851, !2852}
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !2849, file: !2816, line: 39, baseType: !504, size: 64)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !2849, file: !2816, line: 40, baseType: !504, size: 64, offset: 64)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !2815, file: !2816, line: 146, baseType: !2854, size: 192, offset: 1920)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !2816, line: 66, size: 192, elements: !2855)
!2855 = !{!2856}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !2854, file: !2816, line: 67, baseType: !2857, size: 192)
!2857 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !2816, line: 47, size: 192, elements: !2858)
!2858 = !{!2859, !2860, !2861}
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2857, file: !2816, line: 48, baseType: !428, size: 64)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2857, file: !2816, line: 49, baseType: !428, size: 64, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !2857, file: !2816, line: 50, baseType: !428, size: 64, offset: 128)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !2815, file: !2816, line: 150, baseType: !2753, size: 640, offset: 2112)
!2863 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !2815, file: !2816, line: 153, baseType: !2864, size: 256, offset: 2752)
!2864 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1356, size: 256, elements: !1364)
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !2815, file: !2816, line: 159, baseType: !1356, size: 64, offset: 3008)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !2815, file: !2816, line: 162, baseType: !115, size: 32, offset: 3072)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !2815, file: !2816, line: 164, baseType: !2868, size: 64, offset: 3136)
!2868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2869, size: 64)
!2869 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !2816, line: 164, flags: DIFlagFwdDecl)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !2815, file: !2816, line: 175, baseType: !2871, size: 32, offset: 3200)
!2871 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !587, line: 805, baseType: !2872)
!2872 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !587, line: 798, size: 32, elements: !2873)
!2873 = !{!2874, !2875}
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !2872, file: !587, line: 803, baseType: !778, size: 32)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2872, file: !587, line: 804, baseType: !436, offset: 32)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !2815, file: !2816, line: 176, baseType: !504, size: 64, offset: 3264)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !2815, file: !2816, line: 176, baseType: !504, size: 64, offset: 3328)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !2815, file: !2816, line: 176, baseType: !504, size: 64, offset: 3392)
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !2815, file: !2816, line: 176, baseType: !504, size: 64, offset: 3456)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !2815, file: !2816, line: 177, baseType: !504, size: 64, offset: 3520)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !2815, file: !2816, line: 178, baseType: !504, size: 64, offset: 3584)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !2815, file: !2816, line: 179, baseType: !2741, size: 128, offset: 3648)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !2815, file: !2816, line: 180, baseType: !341, size: 64, offset: 3776)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !2815, file: !2816, line: 180, baseType: !341, size: 64, offset: 3840)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !2815, file: !2816, line: 180, baseType: !341, size: 64, offset: 3904)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !2815, file: !2816, line: 180, baseType: !341, size: 64, offset: 3968)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !2815, file: !2816, line: 181, baseType: !341, size: 64, offset: 4032)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !2815, file: !2816, line: 181, baseType: !341, size: 64, offset: 4096)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !2815, file: !2816, line: 181, baseType: !341, size: 64, offset: 4160)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !2815, file: !2816, line: 181, baseType: !341, size: 64, offset: 4224)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !2815, file: !2816, line: 182, baseType: !341, size: 64, offset: 4288)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !2815, file: !2816, line: 182, baseType: !341, size: 64, offset: 4352)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !2815, file: !2816, line: 182, baseType: !341, size: 64, offset: 4416)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !2815, file: !2816, line: 182, baseType: !341, size: 64, offset: 4480)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !2815, file: !2816, line: 183, baseType: !341, size: 64, offset: 4544)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !2815, file: !2816, line: 183, baseType: !341, size: 64, offset: 4608)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !2815, file: !2816, line: 184, baseType: !2898, offset: 4672)
!2898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !2899, line: 12, elements: !450)
!2899 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !2815, file: !2816, line: 192, baseType: !506, size: 64, offset: 4672)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !2815, file: !2816, line: 203, baseType: !2902, size: 2048, offset: 4736)
!2902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2903, size: 2048, elements: !1941)
!2903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !2904, line: 43, size: 128, elements: !2905)
!2904 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!2905 = !{!2906, !2907}
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !2903, file: !2904, line: 44, baseType: !1025, size: 64)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !2903, file: !2904, line: 45, baseType: !1025, size: 64, offset: 64)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !2815, file: !2816, line: 220, baseType: !370, size: 8, offset: 6784)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !2815, file: !2816, line: 221, baseType: !1496, size: 16, offset: 6800)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !2815, file: !2816, line: 222, baseType: !1496, size: 16, offset: 6816)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !2815, file: !2816, line: 224, baseType: !637, size: 64, offset: 6848)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !2815, file: !2816, line: 227, baseType: !423, size: 192, offset: 6912)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !2815, file: !2816, line: 233, baseType: !423, size: 192, offset: 7104)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !459, file: !460, line: 970, baseType: !2915, size: 64, offset: 9280)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !2816, line: 20, size: 16576, elements: !2917)
!2917 = !{!2918, !2919, !2920, !2921}
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !2916, file: !2816, line: 21, baseType: !436)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2916, file: !2816, line: 22, baseType: !354, size: 32)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !2916, file: !2816, line: 23, baseType: !1201, size: 128, offset: 64)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2916, file: !2816, line: 24, baseType: !2922, size: 16384, offset: 192)
!2922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2923, size: 16384, elements: !2943)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !2826, line: 49, size: 256, elements: !2924)
!2924 = !{!2925}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2923, file: !2826, line: 50, baseType: !2926, size: 256)
!2926 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !2826, line: 35, size: 256, elements: !2927)
!2927 = !{!2928, !2935, !2936, !2942}
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2926, file: !2826, line: 37, baseType: !2929, size: 64)
!2929 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2930, line: 19, baseType: !2931)
!2930 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2930, line: 18, baseType: !2933)
!2933 = !DISubroutineType(types: !2934)
!2934 = !{null, !115}
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2926, file: !2826, line: 38, baseType: !341, size: 64, offset: 64)
!2936 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2926, file: !2826, line: 44, baseType: !2937, size: 64, offset: 128)
!2937 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2930, line: 22, baseType: !2938)
!2938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2939, size: 64)
!2939 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2930, line: 21, baseType: !2940)
!2940 = !DISubroutineType(types: !2941)
!2941 = !{null}
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2926, file: !2826, line: 46, baseType: !2830, size: 64, offset: 192)
!2943 = !{!2944}
!2944 = !DISubrange(count: 64)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !459, file: !460, line: 971, baseType: !2830, size: 64, offset: 9344)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !459, file: !460, line: 972, baseType: !2830, size: 64, offset: 9408)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !459, file: !460, line: 974, baseType: !2830, size: 64, offset: 9472)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !459, file: !460, line: 975, baseType: !2825, size: 192, offset: 9536)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !459, file: !460, line: 976, baseType: !341, size: 64, offset: 9728)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !459, file: !460, line: 977, baseType: !1023, size: 64, offset: 9792)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !459, file: !460, line: 978, baseType: !7, size: 32, offset: 9856)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !459, file: !460, line: 980, baseType: !1073, size: 64, offset: 9920)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !459, file: !460, line: 989, baseType: !2954, size: 128, offset: 9984)
!2954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2955, line: 35, size: 128, elements: !2956)
!2955 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2956 = !{!2957, !2958, !2959}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2954, file: !2955, line: 36, baseType: !115, size: 32)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2954, file: !2955, line: 37, baseType: !358, size: 32, offset: 32)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2954, file: !2955, line: 38, baseType: !2960, size: 64, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2961, size: 64)
!2961 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2955, line: 23, flags: DIFlagFwdDecl)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !459, file: !460, line: 992, baseType: !504, size: 64, offset: 10112)
!2963 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !459, file: !460, line: 993, baseType: !504, size: 64, offset: 10176)
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !459, file: !460, line: 996, baseType: !436, offset: 10240)
!2965 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !459, file: !460, line: 999, baseType: !566, offset: 10240)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !459, file: !460, line: 1001, baseType: !2967, size: 64, offset: 10240)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !460, line: 636, size: 64, elements: !2968)
!2968 = !{!2969}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2967, file: !460, line: 637, baseType: !2970, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !459, file: !460, line: 1005, baseType: !600, size: 128, offset: 10304)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !459, file: !460, line: 1007, baseType: !458, size: 64, offset: 10432)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !459, file: !460, line: 1009, baseType: !2974, size: 64, offset: 10496)
!2974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2975, size: 64)
!2975 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !460, line: 1009, flags: DIFlagFwdDecl)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !459, file: !460, line: 1043, baseType: !344, size: 64, offset: 10560)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !459, file: !460, line: 1046, baseType: !2978, size: 64, offset: 10624)
!2978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2979, size: 64)
!2979 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !460, line: 41, flags: DIFlagFwdDecl)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !459, file: !460, line: 1050, baseType: !2981, size: 64, offset: 10688)
!2981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2982, size: 64)
!2982 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !460, line: 42, flags: DIFlagFwdDecl)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !459, file: !460, line: 1054, baseType: !2984, size: 64, offset: 10752)
!2984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2985, size: 64)
!2985 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !460, line: 55, flags: DIFlagFwdDecl)
!2986 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !459, file: !460, line: 1056, baseType: !1849, size: 64, offset: 10816)
!2987 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !459, file: !460, line: 1058, baseType: !2988, size: 64, offset: 10880)
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2990, line: 99, size: 704, elements: !2991)
!2990 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2991 = !{!2992, !2993, !2994, !2995, !2996, !2997, !2998, !3017, !3018}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2989, file: !2990, line: 100, baseType: !426, size: 64)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2989, file: !2990, line: 101, baseType: !358, size: 32, offset: 64)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2989, file: !2990, line: 102, baseType: !358, size: 32, offset: 96)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2989, file: !2990, line: 105, baseType: !436, offset: 128)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2989, file: !2990, line: 107, baseType: !383, size: 16, offset: 128)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2989, file: !2990, line: 109, baseType: !1385, size: 128, offset: 192)
!2998 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2989, file: !2990, line: 110, baseType: !2999, size: 64, offset: 320)
!2999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3000, size: 64)
!3000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2990, line: 73, size: 448, elements: !3001)
!3001 = !{!3002, !3005, !3006, !3011, !3016}
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !3000, file: !2990, line: 74, baseType: !3003, size: 64)
!3003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3004, size: 64)
!3004 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2990, line: 74, flags: DIFlagFwdDecl)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !3000, file: !2990, line: 75, baseType: !2988, size: 64, offset: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, scope: !3000, file: !2990, line: 83, baseType: !3007, size: 128, offset: 128)
!3007 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3000, file: !2990, line: 83, size: 128, elements: !3008)
!3008 = !{!3009, !3010}
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !3007, file: !2990, line: 84, baseType: !385, size: 128)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !3007, file: !2990, line: 85, baseType: !1397, size: 64)
!3011 = !DIDerivedType(tag: DW_TAG_member, scope: !3000, file: !2990, line: 87, baseType: !3012, size: 128, offset: 256)
!3012 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3000, file: !2990, line: 87, size: 128, elements: !3013)
!3013 = !{!3014, !3015}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !3012, file: !2990, line: 88, baseType: !943, size: 128)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !3012, file: !2990, line: 89, baseType: !1070, size: 128, align: 64)
!3016 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3000, file: !2990, line: 92, baseType: !7, size: 32, offset: 384)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2989, file: !2990, line: 111, baseType: !939, size: 64, offset: 384)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2989, file: !2990, line: 113, baseType: !1991, size: 256, offset: 448)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !459, file: !460, line: 1061, baseType: !3020, size: 64, offset: 10944)
!3020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3021, size: 64)
!3021 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !460, line: 43, flags: DIFlagFwdDecl)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !459, file: !460, line: 1064, baseType: !341, size: 64, offset: 11008)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !459, file: !460, line: 1065, baseType: !3024, size: 64, offset: 11072)
!3024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3025, size: 64)
!3025 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !2826, line: 14, baseType: !3026)
!3026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !2826, line: 12, size: 384, elements: !3027)
!3027 = !{!3028}
!3028 = !DIDerivedType(tag: DW_TAG_member, scope: !3026, file: !2826, line: 13, baseType: !3029, size: 384)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3026, file: !2826, line: 13, size: 384, elements: !3030)
!3030 = !{!3031, !3032, !3033, !3034}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !3029, file: !2826, line: 13, baseType: !115, size: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !3029, file: !2826, line: 13, baseType: !115, size: 32, offset: 32)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !3029, file: !2826, line: 13, baseType: !115, size: 32, offset: 64)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !3029, file: !2826, line: 13, baseType: !3035, size: 256, offset: 128)
!3035 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !3036, line: 32, size: 256, elements: !3037)
!3036 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!3037 = !{!3038, !3043, !3056, !3062, !3071, !3091, !3096}
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !3035, file: !3036, line: 37, baseType: !3039, size: 64)
!3039 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3035, file: !3036, line: 34, size: 64, elements: !3040)
!3040 = !{!3041, !3042}
!3041 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3039, file: !3036, line: 35, baseType: !2718, size: 32)
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3039, file: !3036, line: 36, baseType: !754, size: 32, offset: 32)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !3035, file: !3036, line: 45, baseType: !3044, size: 192)
!3044 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3035, file: !3036, line: 40, size: 192, elements: !3045)
!3045 = !{!3046, !3048, !3049, !3055}
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !3044, file: !3036, line: 41, baseType: !3047, size: 32)
!3047 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !584, line: 95, baseType: !115)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !3044, file: !3036, line: 42, baseType: !115, size: 32, offset: 32)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3044, file: !3036, line: 43, baseType: !3050, size: 64, offset: 64)
!3050 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !3036, line: 11, baseType: !3051)
!3051 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !3036, line: 8, size: 64, elements: !3052)
!3052 = !{!3053, !3054}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !3051, file: !3036, line: 9, baseType: !115, size: 32)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !3051, file: !3036, line: 10, baseType: !344, size: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !3044, file: !3036, line: 44, baseType: !115, size: 32, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !3035, file: !3036, line: 52, baseType: !3057, size: 128)
!3057 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3035, file: !3036, line: 48, size: 128, elements: !3058)
!3058 = !{!3059, !3060, !3061}
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3057, file: !3036, line: 49, baseType: !2718, size: 32)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3057, file: !3036, line: 50, baseType: !754, size: 32, offset: 32)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !3057, file: !3036, line: 51, baseType: !3050, size: 64, offset: 64)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !3035, file: !3036, line: 61, baseType: !3063, size: 256)
!3063 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3035, file: !3036, line: 55, size: 256, elements: !3064)
!3064 = !{!3065, !3066, !3067, !3068, !3070}
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !3063, file: !3036, line: 56, baseType: !2718, size: 32)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !3063, file: !3036, line: 57, baseType: !754, size: 32, offset: 32)
!3067 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !3063, file: !3036, line: 58, baseType: !115, size: 32, offset: 64)
!3068 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !3063, file: !3036, line: 59, baseType: !3069, size: 64, offset: 128)
!3069 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !584, line: 94, baseType: !1097)
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !3063, file: !3036, line: 60, baseType: !3069, size: 64, offset: 192)
!3071 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !3035, file: !3036, line: 95, baseType: !3072, size: 256)
!3072 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3035, file: !3036, line: 64, size: 256, elements: !3073)
!3073 = !{!3074, !3075}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !3072, file: !3036, line: 65, baseType: !344, size: 64)
!3075 = !DIDerivedType(tag: DW_TAG_member, scope: !3072, file: !3036, line: 77, baseType: !3076, size: 192, offset: 64)
!3076 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3072, file: !3036, line: 77, size: 192, elements: !3077)
!3077 = !{!3078, !3079, !3086}
!3078 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !3076, file: !3036, line: 82, baseType: !1496, size: 16)
!3079 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !3076, file: !3036, line: 88, baseType: !3080, size: 192)
!3080 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3076, file: !3036, line: 84, size: 192, elements: !3081)
!3081 = !{!3082, !3084, !3085}
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !3080, file: !3036, line: 85, baseType: !3083, size: 64)
!3083 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 64, elements: !399)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !3080, file: !3036, line: 86, baseType: !344, size: 64, offset: 64)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !3080, file: !3036, line: 87, baseType: !344, size: 64, offset: 128)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !3076, file: !3036, line: 93, baseType: !3087, size: 96)
!3087 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3076, file: !3036, line: 90, size: 96, elements: !3088)
!3088 = !{!3089, !3090}
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !3087, file: !3036, line: 91, baseType: !3083, size: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !3087, file: !3036, line: 92, baseType: !469, size: 32, offset: 64)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !3035, file: !3036, line: 101, baseType: !3092, size: 128)
!3092 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3035, file: !3036, line: 98, size: 128, elements: !3093)
!3093 = !{!3094, !3095}
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !3092, file: !3036, line: 99, baseType: !279, size: 64)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !3092, file: !3036, line: 100, baseType: !115, size: 32, offset: 64)
!3096 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !3035, file: !3036, line: 108, baseType: !3097, size: 128)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3035, file: !3036, line: 104, size: 128, elements: !3098)
!3098 = !{!3099, !3100, !3101}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !3097, file: !3036, line: 105, baseType: !344, size: 64)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !3097, file: !3036, line: 106, baseType: !115, size: 32, offset: 64)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !3097, file: !3036, line: 107, baseType: !7, size: 32, offset: 96)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !459, file: !460, line: 1067, baseType: !2898, offset: 11136)
!3103 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !459, file: !460, line: 1099, baseType: !3104, size: 64, offset: 11136)
!3104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3105, size: 64)
!3105 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !460, line: 56, flags: DIFlagFwdDecl)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !459, file: !460, line: 1103, baseType: !385, size: 128, offset: 11200)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !459, file: !460, line: 1104, baseType: !3108, size: 64, offset: 11328)
!3108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3109, size: 64)
!3109 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !460, line: 46, flags: DIFlagFwdDecl)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !459, file: !460, line: 1105, baseType: !423, size: 192, offset: 11392)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !459, file: !460, line: 1106, baseType: !7, size: 32, offset: 11584)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !459, file: !460, line: 1109, baseType: !3113, size: 128, offset: 11648)
!3113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3114, size: 128, elements: !1445)
!3114 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3115, size: 64)
!3115 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !460, line: 51, flags: DIFlagFwdDecl)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !459, file: !460, line: 1110, baseType: !423, size: 192, offset: 11776)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !459, file: !460, line: 1111, baseType: !385, size: 128, offset: 11968)
!3118 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !459, file: !460, line: 1173, baseType: !3119, size: 64, offset: 12096)
!3119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3120, size: 64)
!3120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !3121, line: 62, size: 256, align: 256, elements: !3122)
!3121 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!3122 = !{!3123, !3124, !3125, !3130}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !3120, file: !3121, line: 75, baseType: !469, size: 32)
!3124 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !3120, file: !3121, line: 90, baseType: !469, size: 32, offset: 32)
!3125 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !3120, file: !3121, line: 124, baseType: !3126, size: 64, offset: 64)
!3126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3120, file: !3121, line: 109, size: 64, elements: !3127)
!3127 = !{!3128, !3129}
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !3126, file: !3121, line: 110, baseType: !505, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3126, file: !3121, line: 112, baseType: !505, size: 64)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3120, file: !3121, line: 144, baseType: !469, size: 32, offset: 128)
!3131 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !459, file: !460, line: 1174, baseType: !468, size: 32, offset: 12160)
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !459, file: !460, line: 1179, baseType: !341, size: 64, offset: 12224)
!3133 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !459, file: !460, line: 1182, baseType: !3134, size: 128, offset: 12288)
!3134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !2559, line: 76, size: 128, elements: !3135)
!3135 = !{!3136, !3141, !3142}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3134, file: !2559, line: 85, baseType: !3137, size: 64)
!3137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !3138, line: 7, size: 64, elements: !3139)
!3138 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!3139 = !{!3140}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !3137, file: !3138, line: 12, baseType: !626, size: 64)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !3134, file: !2559, line: 88, baseType: !370, size: 8, offset: 64)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !3134, file: !2559, line: 95, baseType: !370, size: 8, offset: 72)
!3143 = !DIDerivedType(tag: DW_TAG_member, scope: !459, file: !460, line: 1184, baseType: !3144, size: 128, offset: 12416)
!3144 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !459, file: !460, line: 1184, size: 128, elements: !3145)
!3145 = !{!3146, !3147}
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !3144, file: !460, line: 1185, baseType: !354, size: 32)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !3144, file: !460, line: 1186, baseType: !1070, size: 128, align: 64)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !459, file: !460, line: 1190, baseType: !1315, size: 64, offset: 12544)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !459, file: !460, line: 1192, baseType: !3150, size: 128, offset: 12608)
!3150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !2559, line: 64, size: 128, elements: !3151)
!3151 = !{!3152, !3153, !3154}
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !3150, file: !2559, line: 65, baseType: !725, size: 64)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !3150, file: !2559, line: 67, baseType: !469, size: 32, offset: 64)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3150, file: !2559, line: 68, baseType: !469, size: 32, offset: 96)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !459, file: !460, line: 1206, baseType: !115, size: 32, offset: 12736)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !459, file: !460, line: 1207, baseType: !115, size: 32, offset: 12768)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !459, file: !460, line: 1209, baseType: !341, size: 64, offset: 12800)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !459, file: !460, line: 1219, baseType: !504, size: 64, offset: 12864)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !459, file: !460, line: 1220, baseType: !504, size: 64, offset: 12928)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !459, file: !460, line: 1317, baseType: !115, size: 32, offset: 12992)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !459, file: !460, line: 1319, baseType: !458, size: 64, offset: 13056)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !459, file: !460, line: 1322, baseType: !3163, size: 64, offset: 13120)
!3163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3164, size: 64)
!3164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !3165, line: 56, size: 512, elements: !3166)
!3165 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!3166 = !{!3167, !3168, !3169, !3170, !3171, !3172, !3173, !3175}
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3164, file: !3165, line: 57, baseType: !3163, size: 64)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !3164, file: !3165, line: 58, baseType: !344, size: 64, offset: 64)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3164, file: !3165, line: 59, baseType: !341, size: 64, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3164, file: !3165, line: 60, baseType: !341, size: 64, offset: 192)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !3164, file: !3165, line: 61, baseType: !2260, size: 64, offset: 256)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !3164, file: !3165, line: 62, baseType: !7, size: 32, offset: 320)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !3164, file: !3165, line: 63, baseType: !3174, size: 64, offset: 384)
!3174 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !343, line: 153, baseType: !504)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !3164, file: !3165, line: 64, baseType: !3176, size: 64, offset: 448)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !459, file: !460, line: 1326, baseType: !354, size: 32, offset: 13184)
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !459, file: !460, line: 1342, baseType: !344, size: 64, offset: 13248)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !459, file: !460, line: 1343, baseType: !505, size: 64, offset: 13312)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !459, file: !460, line: 1344, baseType: !504, size: 64, offset: 13376)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !459, file: !460, line: 1345, baseType: !505, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !459, file: !460, line: 1346, baseType: !505, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !459, file: !460, line: 1347, baseType: !505, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !459, file: !460, line: 1348, baseType: !1070, size: 128, align: 64, offset: 13504)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !459, file: !460, line: 1358, baseType: !3187, size: 34816, offset: 13824)
!3187 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !3188, line: 485, size: 34816, elements: !3189)
!3188 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!3189 = !{!3190, !3208, !3209, !3210, !3211, !3212, !3213, !3214, !3215, !3219, !3220, !3221, !3222, !3223, !3224, !3227, !3228, !3229}
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !3187, file: !3188, line: 487, baseType: !3191, size: 192)
!3191 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3192, size: 192, elements: !955)
!3192 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !3193, line: 16, size: 64, elements: !3194)
!3193 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!3194 = !{!3195, !3196, !3197, !3198, !3199, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207}
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !3192, file: !3193, line: 17, baseType: !381, size: 16)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !3192, file: !3193, line: 18, baseType: !381, size: 16, offset: 16)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !3192, file: !3193, line: 19, baseType: !381, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3192, file: !3193, line: 19, baseType: !381, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !3192, file: !3193, line: 19, baseType: !381, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !3192, file: !3193, line: 19, baseType: !381, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3192, file: !3193, line: 19, baseType: !381, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !3192, file: !3193, line: 20, baseType: !381, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !3192, file: !3193, line: 20, baseType: !381, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !3192, file: !3193, line: 20, baseType: !381, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !3192, file: !3193, line: 20, baseType: !381, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3192, file: !3193, line: 20, baseType: !381, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !3192, file: !3193, line: 20, baseType: !381, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3187, file: !3188, line: 491, baseType: !341, size: 64, offset: 192)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !3187, file: !3188, line: 495, baseType: !383, size: 16, offset: 256)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !3187, file: !3188, line: 496, baseType: !383, size: 16, offset: 272)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !3187, file: !3188, line: 497, baseType: !383, size: 16, offset: 288)
!3212 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !3187, file: !3188, line: 498, baseType: !383, size: 16, offset: 304)
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !3187, file: !3188, line: 502, baseType: !341, size: 64, offset: 320)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !3187, file: !3188, line: 503, baseType: !341, size: 64, offset: 384)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !3187, file: !3188, line: 514, baseType: !3216, size: 256, offset: 448)
!3216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3217, size: 256, elements: !1364)
!3217 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3218, size: 64)
!3218 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !3188, line: 483, flags: DIFlagFwdDecl)
!3219 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !3187, file: !3188, line: 516, baseType: !341, size: 64, offset: 704)
!3220 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !3187, file: !3188, line: 518, baseType: !341, size: 64, offset: 768)
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !3187, file: !3188, line: 520, baseType: !341, size: 64, offset: 832)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !3187, file: !3188, line: 521, baseType: !341, size: 64, offset: 896)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !3187, file: !3188, line: 522, baseType: !341, size: 64, offset: 960)
!3224 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !3187, file: !3188, line: 528, baseType: !3225, size: 64, offset: 1024)
!3225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3226, size: 64)
!3226 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !3188, line: 10, flags: DIFlagFwdDecl)
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !3187, file: !3188, line: 535, baseType: !341, size: 64, offset: 1088)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !3187, file: !3188, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !3187, file: !3188, line: 540, baseType: !3230, size: 33280, offset: 1536)
!3230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !3231, line: 317, size: 33280, elements: !3232)
!3231 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!3232 = !{!3233, !3234, !3235}
!3233 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !3230, file: !3231, line: 330, baseType: !7, size: 32)
!3234 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !3230, file: !3231, line: 337, baseType: !341, size: 64, offset: 64)
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3230, file: !3231, line: 348, baseType: !3236, size: 32768, offset: 512)
!3236 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !3231, line: 304, size: 32768, elements: !3237)
!3237 = !{!3238, !3253, !3290, !3340, !3353}
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !3236, file: !3231, line: 305, baseType: !3239, size: 896)
!3239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !3231, line: 12, size: 896, elements: !3240)
!3240 = !{!3241, !3242, !3243, !3244, !3245, !3246, !3247, !3248, !3252}
!3241 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3239, file: !3231, line: 13, baseType: !468, size: 32)
!3242 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3239, file: !3231, line: 14, baseType: !468, size: 32, offset: 32)
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3239, file: !3231, line: 15, baseType: !468, size: 32, offset: 64)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3239, file: !3231, line: 16, baseType: !468, size: 32, offset: 96)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3239, file: !3231, line: 17, baseType: !468, size: 32, offset: 128)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3239, file: !3231, line: 18, baseType: !468, size: 32, offset: 160)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3239, file: !3231, line: 19, baseType: !468, size: 32, offset: 192)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3239, file: !3231, line: 22, baseType: !3249, size: 640, offset: 224)
!3249 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 640, elements: !3250)
!3250 = !{!3251}
!3251 = !DISubrange(count: 20)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3239, file: !3231, line: 25, baseType: !468, size: 32, offset: 864)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !3236, file: !3231, line: 306, baseType: !3254, size: 4096, align: 128)
!3254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !3231, line: 34, size: 4096, align: 128, elements: !3255)
!3255 = !{!3256, !3257, !3258, !3259, !3260, !3275, !3276, !3277, !3279, !3281, !3285}
!3256 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3254, file: !3231, line: 35, baseType: !381, size: 16)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3254, file: !3231, line: 36, baseType: !381, size: 16, offset: 16)
!3258 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3254, file: !3231, line: 37, baseType: !381, size: 16, offset: 32)
!3259 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !3254, file: !3231, line: 38, baseType: !381, size: 16, offset: 48)
!3260 = !DIDerivedType(tag: DW_TAG_member, scope: !3254, file: !3231, line: 39, baseType: !3261, size: 128, offset: 64)
!3261 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3254, file: !3231, line: 39, size: 128, elements: !3262)
!3262 = !{!3263, !3268}
!3263 = !DIDerivedType(tag: DW_TAG_member, scope: !3261, file: !3231, line: 40, baseType: !3264, size: 128)
!3264 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3261, file: !3231, line: 40, size: 128, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !3264, file: !3231, line: 41, baseType: !504, size: 64)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !3264, file: !3231, line: 42, baseType: !504, size: 64, offset: 64)
!3268 = !DIDerivedType(tag: DW_TAG_member, scope: !3261, file: !3231, line: 44, baseType: !3269, size: 128)
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3261, file: !3231, line: 44, size: 128, elements: !3270)
!3270 = !{!3271, !3272, !3273, !3274}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3269, file: !3231, line: 45, baseType: !468, size: 32)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3269, file: !3231, line: 46, baseType: !468, size: 32, offset: 32)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3269, file: !3231, line: 47, baseType: !468, size: 32, offset: 64)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3269, file: !3231, line: 48, baseType: !468, size: 32, offset: 96)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !3254, file: !3231, line: 51, baseType: !468, size: 32, offset: 192)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !3254, file: !3231, line: 52, baseType: !468, size: 32, offset: 224)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3254, file: !3231, line: 55, baseType: !3278, size: 1024, offset: 256)
!3278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 1024, elements: !809)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !3254, file: !3231, line: 58, baseType: !3280, size: 2048, offset: 1280)
!3280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 2048, elements: !2943)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !3254, file: !3231, line: 60, baseType: !3282, size: 384, offset: 3328)
!3282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 384, elements: !3283)
!3283 = !{!3284}
!3284 = !DISubrange(count: 12)
!3285 = !DIDerivedType(tag: DW_TAG_member, scope: !3254, file: !3231, line: 62, baseType: !3286, size: 384, offset: 3712)
!3286 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3254, file: !3231, line: 62, size: 384, elements: !3287)
!3287 = !{!3288, !3289}
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !3286, file: !3231, line: 63, baseType: !3282, size: 384)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !3286, file: !3231, line: 64, baseType: !3282, size: 384)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !3236, file: !3231, line: 307, baseType: !3291, size: 1088)
!3291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !3231, line: 79, size: 1088, elements: !3292)
!3292 = !{!3293, !3294, !3295, !3296, !3297, !3298, !3299, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3339}
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !3291, file: !3231, line: 80, baseType: !468, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !3291, file: !3231, line: 81, baseType: !468, size: 32, offset: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !3291, file: !3231, line: 82, baseType: !468, size: 32, offset: 64)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !3291, file: !3231, line: 83, baseType: !468, size: 32, offset: 96)
!3297 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !3291, file: !3231, line: 84, baseType: !468, size: 32, offset: 128)
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !3291, file: !3231, line: 85, baseType: !468, size: 32, offset: 160)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !3291, file: !3231, line: 86, baseType: !468, size: 32, offset: 192)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !3291, file: !3231, line: 88, baseType: !3249, size: 640, offset: 224)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !3291, file: !3231, line: 89, baseType: !364, size: 8, offset: 864)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !3291, file: !3231, line: 90, baseType: !364, size: 8, offset: 872)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !3291, file: !3231, line: 91, baseType: !364, size: 8, offset: 880)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !3291, file: !3231, line: 92, baseType: !364, size: 8, offset: 888)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !3291, file: !3231, line: 93, baseType: !364, size: 8, offset: 896)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !3291, file: !3231, line: 94, baseType: !364, size: 8, offset: 904)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !3291, file: !3231, line: 95, baseType: !3308, size: 64, offset: 960)
!3308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3309, size: 64)
!3309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !3310, line: 11, size: 128, elements: !3311)
!3310 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!3311 = !{!3312, !3313}
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !3309, file: !3310, line: 12, baseType: !279, size: 64)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !3309, file: !3310, line: 13, baseType: !3314, size: 64, offset: 64)
!3314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3315, size: 64)
!3315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !3316, line: 56, size: 1344, elements: !3317)
!3316 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!3317 = !{!3318, !3319, !3320, !3321, !3322, !3323, !3324, !3325, !3326, !3327, !3328, !3329, !3330, !3331, !3332, !3333, !3334, !3335, !3336, !3337, !3338}
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !3315, file: !3316, line: 61, baseType: !341, size: 64)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !3315, file: !3316, line: 62, baseType: !341, size: 64, offset: 64)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !3315, file: !3316, line: 63, baseType: !341, size: 64, offset: 128)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !3315, file: !3316, line: 64, baseType: !341, size: 64, offset: 192)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !3315, file: !3316, line: 65, baseType: !341, size: 64, offset: 256)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !3315, file: !3316, line: 66, baseType: !341, size: 64, offset: 320)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !3315, file: !3316, line: 68, baseType: !341, size: 64, offset: 384)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !3315, file: !3316, line: 69, baseType: !341, size: 64, offset: 448)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !3315, file: !3316, line: 70, baseType: !341, size: 64, offset: 512)
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !3315, file: !3316, line: 71, baseType: !341, size: 64, offset: 576)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !3315, file: !3316, line: 72, baseType: !341, size: 64, offset: 640)
!3329 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !3315, file: !3316, line: 73, baseType: !341, size: 64, offset: 704)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !3315, file: !3316, line: 74, baseType: !341, size: 64, offset: 768)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !3315, file: !3316, line: 75, baseType: !341, size: 64, offset: 832)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !3315, file: !3316, line: 76, baseType: !341, size: 64, offset: 896)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !3315, file: !3316, line: 81, baseType: !341, size: 64, offset: 960)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !3315, file: !3316, line: 83, baseType: !341, size: 64, offset: 1024)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !3315, file: !3316, line: 84, baseType: !341, size: 64, offset: 1088)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3315, file: !3316, line: 85, baseType: !341, size: 64, offset: 1152)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !3315, file: !3316, line: 86, baseType: !341, size: 64, offset: 1216)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !3315, file: !3316, line: 87, baseType: !341, size: 64, offset: 1280)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !3291, file: !3231, line: 96, baseType: !468, size: 32, offset: 1024)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !3236, file: !3231, line: 308, baseType: !3341, size: 4608, align: 512)
!3341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !3231, line: 289, size: 4608, align: 512, elements: !3342)
!3342 = !{!3343, !3344, !3351}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !3341, file: !3231, line: 290, baseType: !3254, size: 4096, align: 128)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !3341, file: !3231, line: 291, baseType: !3345, size: 512, offset: 4096)
!3345 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !3231, line: 268, size: 512, elements: !3346)
!3346 = !{!3347, !3348, !3349}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !3345, file: !3231, line: 269, baseType: !504, size: 64)
!3348 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !3345, file: !3231, line: 270, baseType: !504, size: 64, offset: 64)
!3349 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !3345, file: !3231, line: 271, baseType: !3350, size: 384, offset: 128)
!3350 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 384, elements: !1514)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !3341, file: !3231, line: 292, baseType: !3352, offset: 4608)
!3352 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, elements: !1610)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !3236, file: !3231, line: 309, baseType: !3354, size: 32768)
!3354 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 32768, elements: !3355)
!3355 = !{!3356}
!3356 = !DISubrange(count: 4096)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !454, file: !455, line: 33, baseType: !341, size: 64, offset: 64)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "acquired", scope: !454, file: !455, line: 34, baseType: !7, size: 32, offset: 128)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "wounded", scope: !454, file: !455, line: 35, baseType: !383, size: 16, offset: 160)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "is_wait_die", scope: !454, file: !455, line: 36, baseType: !383, size: 16, offset: 176)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !415, file: !416, line: 86, baseType: !385, size: 128, offset: 256)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !410, file: !411, line: 267, baseType: !3363, size: 64, offset: 512)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_private_state", file: !411, line: 298, size: 64, elements: !3365)
!3365 = !{!3366}
!3366 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3364, file: !411, line: 299, baseType: !3367, size: 64)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3368, size: 64)
!3368 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_atomic_state", file: !411, line: 325, size: 960, elements: !3369)
!3369 = !{!3370, !3371, !4743, !4744, !4745, !4746, !4747, !5664, !5676, !5677, !5686, !5687, !5696, !5697, !5698}
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3368, file: !411, line: 326, baseType: !350, size: 32)
!3371 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3368, file: !411, line: 328, baseType: !3372, size: 64, offset: 64)
!3372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3373, size: 64)
!3373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_device", file: !237, line: 53, size: 11840, elements: !3374)
!3374 = !{!3375, !3376, !3377, !3378, !4203, !4209, !4387, !4388, !4389, !4390, !4391, !4394, !4395, !4396, !4397, !4398, !4399, !4400, !4401, !4402, !4403, !4404, !4405, !4406, !4407, !4408, !4409, !4412, !4413, !4414, !4415, !4416, !4417, !4420, !4424, !4425, !4731, !4732, !4733, !4736, !4739, !4740}
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_dev_list", scope: !3373, file: !237, line: 59, baseType: !385, size: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "if_version", scope: !3373, file: !237, line: 62, baseType: !115, size: 32, offset: 128)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !3373, file: !237, line: 65, baseType: !350, size: 32, offset: 160)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3373, file: !237, line: 68, baseType: !3379, size: 64, offset: 192)
!3379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3380, size: 64)
!3380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !3381)
!3381 = !{!3382, !3657, !3658, !3661, !3662, !3713, !3804, !3805, !3806, !3807, !3808, !3817, !3922, !3935, !4130, !4131, !4135, !4137, !4138, !4139, !4143, !4149, !4150, !4153, !4154, !4155, !4156, !4157, !4158, !4159, !4191, !4192, !4193, !4196, !4199, !4200, !4201, !4202}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3380, file: !73, line: 462, baseType: !3383, size: 512)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !3384, line: 64, size: 512, elements: !3385)
!3384 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!3385 = !{!3386, !3387, !3388, !3390, !3430, !3530, !3651, !3652, !3653, !3654, !3655, !3656}
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3383, file: !3384, line: 65, baseType: !844, size: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3383, file: !3384, line: 66, baseType: !385, size: 128, offset: 64)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3383, file: !3384, line: 67, baseType: !3389, size: 64, offset: 192)
!3389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3383, size: 64)
!3390 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !3383, file: !3384, line: 68, baseType: !3391, size: 64, offset: 256)
!3391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3392, size: 64)
!3392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !3384, line: 192, size: 704, elements: !3393)
!3393 = !{!3394, !3395, !3396, !3397}
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3392, file: !3384, line: 193, baseType: !385, size: 128)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !3392, file: !3384, line: 194, baseType: !436, offset: 128)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3392, file: !3384, line: 195, baseType: !3383, size: 512, offset: 128)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !3392, file: !3384, line: 196, baseType: !3398, size: 64, offset: 640)
!3398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3399, size: 64)
!3399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3400)
!3400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !3384, line: 156, size: 192, elements: !3401)
!3401 = !{!3402, !3407, !3412}
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !3400, file: !3384, line: 157, baseType: !3403, size: 64)
!3403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3404)
!3404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3405, size: 64)
!3405 = !DISubroutineType(types: !3406)
!3406 = !{!115, !3391, !3389}
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3400, file: !3384, line: 158, baseType: !3408, size: 64, offset: 64)
!3408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3409)
!3409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3410, size: 64)
!3410 = !DISubroutineType(types: !3411)
!3411 = !{!844, !3391, !3389}
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3400, file: !3384, line: 159, baseType: !3413, size: 64, offset: 128)
!3413 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3414)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = !DISubroutineType(types: !3416)
!3416 = !{!115, !3391, !3389, !3417}
!3417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3418, size: 64)
!3418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !3384, line: 148, size: 20736, elements: !3419)
!3419 = !{!3420, !3422, !3424, !3425, !3429}
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !3418, file: !3384, line: 149, baseType: !3421, size: 192)
!3421 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 192, elements: !955)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !3418, file: !3384, line: 150, baseType: !3423, size: 4096, offset: 192)
!3423 = !DICompositeType(tag: DW_TAG_array_type, baseType: !870, size: 4096, elements: !2943)
!3424 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !3418, file: !3384, line: 151, baseType: !115, size: 32, offset: 4288)
!3425 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !3418, file: !3384, line: 152, baseType: !3426, size: 16384, offset: 4320)
!3426 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 16384, elements: !3427)
!3427 = !{!3428}
!3428 = !DISubrange(count: 2048)
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !3418, file: !3384, line: 153, baseType: !115, size: 32, offset: 20704)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !3383, file: !3384, line: 69, baseType: !3431, size: 64, offset: 320)
!3431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3432, size: 64)
!3432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !3384, line: 138, size: 448, elements: !3433)
!3433 = !{!3434, !3438, !3457, !3459, !3492, !3520, !3524}
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3432, file: !3384, line: 139, baseType: !3435, size: 64)
!3435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3436, size: 64)
!3436 = !DISubroutineType(types: !3437)
!3437 = !{null, !3389}
!3438 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !3432, file: !3384, line: 140, baseType: !3439, size: 64, offset: 64)
!3439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3440, size: 64)
!3440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3441)
!3441 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !3442, line: 230, size: 128, elements: !3443)
!3442 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!3443 = !{!3444, !3453}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !3441, file: !3442, line: 231, baseType: !3445, size: 64)
!3445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3446, size: 64)
!3446 = !DISubroutineType(types: !3447)
!3447 = !{!1095, !3389, !3448, !870}
!3448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3449, size: 64)
!3449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !3442, line: 30, size: 128, elements: !3450)
!3450 = !{!3451, !3452}
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3449, file: !3442, line: 31, baseType: !844, size: 64)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3449, file: !3442, line: 32, baseType: !745, size: 16, offset: 64)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !3441, file: !3442, line: 232, baseType: !3454, size: 64, offset: 64)
!3454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3455, size: 64)
!3455 = !DISubroutineType(types: !3456)
!3456 = !{!1095, !3389, !3448, !844, !1023}
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !3432, file: !3384, line: 141, baseType: !3458, size: 64, offset: 128)
!3458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3448, size: 64)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !3432, file: !3384, line: 142, baseType: !3460, size: 64, offset: 192)
!3460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3461, size: 64)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3463)
!3463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !3442, line: 84, size: 320, elements: !3464)
!3464 = !{!3465, !3466, !3470, !3489, !3490}
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3463, file: !3442, line: 85, baseType: !844, size: 64)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !3463, file: !3442, line: 86, baseType: !3467, size: 64, offset: 64)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!745, !3389, !3448, !115}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !3463, file: !3442, line: 88, baseType: !3471, size: 64, offset: 128)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{!745, !3389, !3474, !115}
!3474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3475, size: 64)
!3475 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !3442, line: 168, size: 448, elements: !3476)
!3476 = !{!3477, !3478, !3479, !3480, !3484, !3485}
!3477 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3475, file: !3442, line: 169, baseType: !3449, size: 128)
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3475, file: !3442, line: 170, baseType: !1023, size: 64, offset: 128)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3475, file: !3442, line: 171, baseType: !344, size: 64, offset: 192)
!3480 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3475, file: !3442, line: 172, baseType: !3481, size: 64, offset: 256)
!3481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3482, size: 64)
!3482 = !DISubroutineType(types: !3483)
!3483 = !{!1095, !1090, !3389, !3474, !870, !906, !1023}
!3484 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3475, file: !3442, line: 174, baseType: !3481, size: 64, offset: 320)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3475, file: !3442, line: 176, baseType: !3486, size: 64, offset: 384)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DISubroutineType(types: !3488)
!3488 = !{!115, !1090, !3389, !3474, !645}
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !3463, file: !3442, line: 90, baseType: !3458, size: 64, offset: 192)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !3463, file: !3442, line: 91, baseType: !3491, size: 64, offset: 256)
!3491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3474, size: 64)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !3432, file: !3384, line: 143, baseType: !3493, size: 64, offset: 256)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{!3496, !3389}
!3496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3497, size: 64)
!3497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3498)
!3498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3499)
!3499 = !{!3500, !3501, !3505, !3509, !3515, !3519}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3498, file: !61, line: 40, baseType: !60, size: 32)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3498, file: !61, line: 41, baseType: !3502, size: 64, offset: 64)
!3502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3503, size: 64)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!370}
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3498, file: !61, line: 42, baseType: !3506, size: 64, offset: 128)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3507, size: 64)
!3507 = !DISubroutineType(types: !3508)
!3508 = !{!344}
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3498, file: !61, line: 43, baseType: !3510, size: 64, offset: 192)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DISubroutineType(types: !3512)
!3512 = !{!3176, !3513}
!3513 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3514, size: 64)
!3514 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3498, file: !61, line: 44, baseType: !3516, size: 64, offset: 256)
!3516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3517, size: 64)
!3517 = !DISubroutineType(types: !3518)
!3518 = !{!3176}
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3498, file: !61, line: 45, baseType: !2032, size: 64, offset: 320)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !3432, file: !3384, line: 144, baseType: !3521, size: 64, offset: 320)
!3521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3522, size: 64)
!3522 = !DISubroutineType(types: !3523)
!3523 = !{!3176, !3389}
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !3432, file: !3384, line: 145, baseType: !3525, size: 64, offset: 384)
!3525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3526, size: 64)
!3526 = !DISubroutineType(types: !3527)
!3527 = !{null, !3389, !3528, !3529}
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !748, size: 64)
!3529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !756, size: 64)
!3530 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !3383, file: !3384, line: 70, baseType: !3531, size: 64, offset: 384)
!3531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3532, size: 64)
!3532 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !920, line: 123, size: 1024, elements: !3533)
!3533 = !{!3534, !3535, !3536, !3537, !3538, !3539, !3540, !3541, !3644, !3645, !3646, !3647, !3648}
!3534 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3532, file: !920, line: 124, baseType: !358, size: 32)
!3535 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3532, file: !920, line: 125, baseType: !358, size: 32, offset: 32)
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3532, file: !920, line: 135, baseType: !3531, size: 64, offset: 64)
!3537 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3532, file: !920, line: 136, baseType: !844, size: 64, offset: 128)
!3538 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3532, file: !920, line: 138, baseType: !494, size: 192, align: 64, offset: 192)
!3539 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3532, file: !920, line: 140, baseType: !3176, size: 64, offset: 384)
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3532, file: !920, line: 141, baseType: !7, size: 32, offset: 448)
!3541 = !DIDerivedType(tag: DW_TAG_member, scope: !3532, file: !920, line: 142, baseType: !3542, size: 256, offset: 512)
!3542 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3532, file: !920, line: 142, size: 256, elements: !3543)
!3543 = !{!3544, !3584, !3588}
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3542, file: !920, line: 143, baseType: !3545, size: 192)
!3545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !920, line: 91, size: 192, elements: !3546)
!3546 = !{!3547, !3548, !3549}
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3545, file: !920, line: 92, baseType: !341, size: 64)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3545, file: !920, line: 94, baseType: !603, size: 64, offset: 64)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3545, file: !920, line: 100, baseType: !3550, size: 64, offset: 128)
!3550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3551, size: 64)
!3551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !920, line: 180, size: 704, elements: !3552)
!3552 = !{!3553, !3554, !3555, !3556, !3557, !3558, !3582, !3583}
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3551, file: !920, line: 182, baseType: !3531, size: 64)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3551, file: !920, line: 183, baseType: !7, size: 32, offset: 64)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3551, file: !920, line: 186, baseType: !1381, size: 192, offset: 128)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3551, file: !920, line: 187, baseType: !468, size: 32, offset: 320)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3551, file: !920, line: 188, baseType: !468, size: 32, offset: 352)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3551, file: !920, line: 189, baseType: !3559, size: 64, offset: 384)
!3559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3560, size: 64)
!3560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !920, line: 168, size: 320, elements: !3561)
!3561 = !{!3562, !3566, !3570, !3574, !3578}
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3560, file: !920, line: 169, baseType: !3563, size: 64)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = !DISubroutineType(types: !3565)
!3565 = !{!115, !1017, !3550}
!3566 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3560, file: !920, line: 171, baseType: !3567, size: 64, offset: 64)
!3567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3568, size: 64)
!3568 = !DISubroutineType(types: !3569)
!3569 = !{!115, !3531, !844, !745}
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3560, file: !920, line: 173, baseType: !3571, size: 64, offset: 128)
!3571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3572, size: 64)
!3572 = !DISubroutineType(types: !3573)
!3573 = !{!115, !3531}
!3574 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3560, file: !920, line: 174, baseType: !3575, size: 64, offset: 192)
!3575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3576, size: 64)
!3576 = !DISubroutineType(types: !3577)
!3577 = !{!115, !3531, !3531, !844}
!3578 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3560, file: !920, line: 176, baseType: !3579, size: 64, offset: 256)
!3579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3580, size: 64)
!3580 = !DISubroutineType(types: !3581)
!3581 = !{!115, !1017, !3531, !3550}
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3551, file: !920, line: 192, baseType: !385, size: 128, offset: 448)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3551, file: !920, line: 194, baseType: !1201, size: 128, offset: 576)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3542, file: !920, line: 144, baseType: !3585, size: 64)
!3585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !920, line: 103, size: 64, elements: !3586)
!3586 = !{!3587}
!3587 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3585, file: !920, line: 104, baseType: !3531, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3542, file: !920, line: 145, baseType: !3589, size: 256)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !920, line: 107, size: 256, elements: !3590)
!3590 = !{!3591, !3639, !3642, !3643}
!3591 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3589, file: !920, line: 108, baseType: !3592, size: 64)
!3592 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3593, size: 64)
!3593 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3594)
!3594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !920, line: 217, size: 768, elements: !3595)
!3595 = !{!3596, !3616, !3620, !3621, !3622, !3623, !3624, !3628, !3629, !3630, !3631, !3635}
!3596 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3594, file: !920, line: 222, baseType: !3597, size: 64)
!3597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3598, size: 64)
!3598 = !DISubroutineType(types: !3599)
!3599 = !{!115, !3600}
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !920, line: 197, size: 1088, elements: !3602)
!3602 = !{!3603, !3604, !3605, !3606, !3607, !3608, !3609, !3610, !3611, !3612, !3613, !3614, !3615}
!3603 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3601, file: !920, line: 199, baseType: !3531, size: 64)
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3601, file: !920, line: 200, baseType: !1090, size: 64, offset: 64)
!3605 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3601, file: !920, line: 201, baseType: !1017, size: 64, offset: 128)
!3606 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3601, file: !920, line: 202, baseType: !344, size: 64, offset: 192)
!3607 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3601, file: !920, line: 205, baseType: !423, size: 192, offset: 256)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3601, file: !920, line: 206, baseType: !423, size: 192, offset: 448)
!3609 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3601, file: !920, line: 207, baseType: !115, size: 32, offset: 640)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3601, file: !920, line: 208, baseType: !385, size: 128, offset: 704)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3601, file: !920, line: 209, baseType: !870, size: 64, offset: 832)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3601, file: !920, line: 211, baseType: !1023, size: 64, offset: 896)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3601, file: !920, line: 212, baseType: !370, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3601, file: !920, line: 213, baseType: !370, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3601, file: !920, line: 214, baseType: !674, size: 64, offset: 1024)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3594, file: !920, line: 223, baseType: !3617, size: 64, offset: 64)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{null, !3600}
!3620 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3594, file: !920, line: 236, baseType: !1051, size: 64, offset: 128)
!3621 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3594, file: !920, line: 238, baseType: !1038, size: 64, offset: 192)
!3622 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3594, file: !920, line: 239, baseType: !1047, size: 64, offset: 256)
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3594, file: !920, line: 240, baseType: !1043, size: 64, offset: 320)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3594, file: !920, line: 242, baseType: !3625, size: 64, offset: 384)
!3625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3626, size: 64)
!3626 = !DISubroutineType(types: !3627)
!3627 = !{!1095, !3600, !870, !1023, !906}
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3594, file: !920, line: 252, baseType: !1023, size: 64, offset: 448)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3594, file: !920, line: 259, baseType: !370, size: 8, offset: 512)
!3630 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3594, file: !920, line: 260, baseType: !3625, size: 64, offset: 576)
!3631 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3594, file: !920, line: 263, baseType: !3632, size: 64, offset: 640)
!3632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3633, size: 64)
!3633 = !DISubroutineType(types: !3634)
!3634 = !{!1151, !3600, !1153}
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3594, file: !920, line: 266, baseType: !3636, size: 64, offset: 704)
!3636 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3637, size: 64)
!3637 = !DISubroutineType(types: !3638)
!3638 = !{!115, !3600, !645}
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3589, file: !920, line: 109, baseType: !3640, size: 64, offset: 64)
!3640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3641, size: 64)
!3641 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !920, line: 31, flags: DIFlagFwdDecl)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3589, file: !920, line: 110, baseType: !906, size: 64, offset: 128)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3589, file: !920, line: 111, baseType: !3531, size: 64, offset: 192)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3532, file: !920, line: 148, baseType: !344, size: 64, offset: 768)
!3645 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3532, file: !920, line: 154, baseType: !504, size: 64, offset: 832)
!3646 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3532, file: !920, line: 156, baseType: !383, size: 16, offset: 896)
!3647 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3532, file: !920, line: 157, baseType: !745, size: 16, offset: 912)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3532, file: !920, line: 158, baseType: !3649, size: 64, offset: 960)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !920, line: 32, flags: DIFlagFwdDecl)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !3383, file: !3384, line: 71, baseType: !350, size: 32, offset: 448)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !3383, file: !3384, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !3383, file: !3384, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !3383, file: !3384, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !3383, file: !3384, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !3383, file: !3384, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3380, file: !73, line: 463, baseType: !3379, size: 64, offset: 512)
!3658 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3380, file: !73, line: 465, baseType: !3659, size: 64, offset: 576)
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !3380, file: !73, line: 467, baseType: !844, size: 64, offset: 640)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3380, file: !73, line: 468, baseType: !3663, size: 64, offset: 704)
!3663 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3664, size: 64)
!3664 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3665)
!3665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3666)
!3666 = !{!3667, !3668, !3669, !3673, !3678, !3682}
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3665, file: !73, line: 88, baseType: !844, size: 64)
!3668 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3665, file: !73, line: 89, baseType: !3460, size: 64, offset: 64)
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3665, file: !73, line: 90, baseType: !3670, size: 64, offset: 128)
!3670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3671, size: 64)
!3671 = !DISubroutineType(types: !3672)
!3672 = !{!115, !3379, !3417}
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3665, file: !73, line: 91, baseType: !3674, size: 64, offset: 192)
!3674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3675, size: 64)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{!870, !3379, !3677, !3528, !3529}
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3665, file: !73, line: 93, baseType: !3679, size: 64, offset: 256)
!3679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3680, size: 64)
!3680 = !DISubroutineType(types: !3681)
!3681 = !{null, !3379}
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3665, file: !73, line: 95, baseType: !3683, size: 64, offset: 320)
!3683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3684, size: 64)
!3684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3685)
!3685 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3686)
!3686 = !{!3687, !3691, !3692, !3693, !3694, !3695, !3696, !3697, !3698, !3699, !3700, !3701, !3702, !3703, !3704, !3705, !3706, !3707, !3708, !3709, !3710, !3711, !3712}
!3687 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3685, file: !80, line: 279, baseType: !3688, size: 64)
!3688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3689, size: 64)
!3689 = !DISubroutineType(types: !3690)
!3690 = !{!115, !3379}
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3685, file: !80, line: 280, baseType: !3679, size: 64, offset: 64)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3685, file: !80, line: 281, baseType: !3688, size: 64, offset: 128)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3685, file: !80, line: 282, baseType: !3688, size: 64, offset: 192)
!3694 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3685, file: !80, line: 283, baseType: !3688, size: 64, offset: 256)
!3695 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3685, file: !80, line: 284, baseType: !3688, size: 64, offset: 320)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3685, file: !80, line: 285, baseType: !3688, size: 64, offset: 384)
!3697 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3685, file: !80, line: 286, baseType: !3688, size: 64, offset: 448)
!3698 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3685, file: !80, line: 287, baseType: !3688, size: 64, offset: 512)
!3699 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3685, file: !80, line: 288, baseType: !3688, size: 64, offset: 576)
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3685, file: !80, line: 289, baseType: !3688, size: 64, offset: 640)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3685, file: !80, line: 290, baseType: !3688, size: 64, offset: 704)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3685, file: !80, line: 291, baseType: !3688, size: 64, offset: 768)
!3703 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3685, file: !80, line: 292, baseType: !3688, size: 64, offset: 832)
!3704 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3685, file: !80, line: 293, baseType: !3688, size: 64, offset: 896)
!3705 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3685, file: !80, line: 294, baseType: !3688, size: 64, offset: 960)
!3706 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3685, file: !80, line: 295, baseType: !3688, size: 64, offset: 1024)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3685, file: !80, line: 296, baseType: !3688, size: 64, offset: 1088)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3685, file: !80, line: 297, baseType: !3688, size: 64, offset: 1152)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3685, file: !80, line: 298, baseType: !3688, size: 64, offset: 1216)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3685, file: !80, line: 299, baseType: !3688, size: 64, offset: 1280)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3685, file: !80, line: 300, baseType: !3688, size: 64, offset: 1344)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3685, file: !80, line: 301, baseType: !3688, size: 64, offset: 1408)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3380, file: !73, line: 470, baseType: !3714, size: 64, offset: 768)
!3714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3715, size: 64)
!3715 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3716, line: 82, size: 1408, elements: !3717)
!3716 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3717 = !{!3718, !3719, !3720, !3721, !3722, !3723, !3724, !3783, !3784, !3785, !3786, !3787, !3788, !3789, !3790, !3791, !3792, !3793, !3794, !3795, !3799, !3802, !3803}
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3715, file: !3716, line: 83, baseType: !844, size: 64)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3715, file: !3716, line: 84, baseType: !844, size: 64, offset: 64)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3715, file: !3716, line: 85, baseType: !3379, size: 64, offset: 128)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3715, file: !3716, line: 86, baseType: !3460, size: 64, offset: 192)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3715, file: !3716, line: 87, baseType: !3460, size: 64, offset: 256)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3715, file: !3716, line: 88, baseType: !3460, size: 64, offset: 320)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3715, file: !3716, line: 90, baseType: !3725, size: 64, offset: 384)
!3725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3726, size: 64)
!3726 = !DISubroutineType(types: !3727)
!3727 = !{!115, !3379, !3728}
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3730)
!3730 = !{!3731, !3732, !3733, !3734, !3735, !3736, !3737, !3750, !3763, !3764, !3765, !3766, !3767, !3775, !3776, !3777, !3778, !3779, !3780}
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3729, file: !67, line: 96, baseType: !844, size: 64)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3729, file: !67, line: 97, baseType: !3714, size: 64, offset: 64)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3729, file: !67, line: 99, baseType: !934, size: 64, offset: 128)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3729, file: !67, line: 100, baseType: !844, size: 64, offset: 192)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3729, file: !67, line: 102, baseType: !370, size: 8, offset: 256)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3729, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3729, file: !67, line: 105, baseType: !3738, size: 64, offset: 320)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3740)
!3740 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3741, line: 262, size: 1600, elements: !3742)
!3741 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3742 = !{!3743, !3744, !3745, !3749}
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3740, file: !3741, line: 263, baseType: !1933, size: 256)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3740, file: !3741, line: 264, baseType: !1933, size: 256, offset: 256)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3740, file: !3741, line: 265, baseType: !3746, size: 1024, offset: 512)
!3746 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 1024, elements: !3747)
!3747 = !{!3748}
!3748 = !DISubrange(count: 128)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3740, file: !3741, line: 266, baseType: !3176, size: 64, offset: 1536)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3729, file: !67, line: 106, baseType: !3751, size: 64, offset: 384)
!3751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3752, size: 64)
!3752 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3753)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3741, line: 210, size: 256, elements: !3754)
!3754 = !{!3755, !3759, !3761, !3762}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3753, file: !3741, line: 211, baseType: !3756, size: 72)
!3756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 72, elements: !3757)
!3757 = !{!3758}
!3758 = !DISubrange(count: 9)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3753, file: !3741, line: 212, baseType: !3760, size: 64, offset: 128)
!3760 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3741, line: 14, baseType: !341)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3753, file: !3741, line: 213, baseType: !469, size: 32, offset: 192)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3753, file: !3741, line: 214, baseType: !469, size: 32, offset: 224)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3729, file: !67, line: 108, baseType: !3688, size: 64, offset: 448)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3729, file: !67, line: 109, baseType: !3679, size: 64, offset: 512)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3729, file: !67, line: 110, baseType: !3688, size: 64, offset: 576)
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3729, file: !67, line: 111, baseType: !3679, size: 64, offset: 640)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3729, file: !67, line: 112, baseType: !3768, size: 64, offset: 704)
!3768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3769, size: 64)
!3769 = !DISubroutineType(types: !3770)
!3770 = !{!115, !3379, !3771}
!3771 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3772)
!3772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3773)
!3773 = !{!3774}
!3774 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3772, file: !80, line: 51, baseType: !115, size: 32)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3729, file: !67, line: 113, baseType: !3688, size: 64, offset: 768)
!3776 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3729, file: !67, line: 114, baseType: !3460, size: 64, offset: 832)
!3777 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3729, file: !67, line: 115, baseType: !3460, size: 64, offset: 896)
!3778 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3729, file: !67, line: 117, baseType: !3683, size: 64, offset: 960)
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3729, file: !67, line: 118, baseType: !3679, size: 64, offset: 1024)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3729, file: !67, line: 120, baseType: !3781, size: 64, offset: 1088)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3783 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3715, file: !3716, line: 91, baseType: !3670, size: 64, offset: 448)
!3784 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3715, file: !3716, line: 92, baseType: !3688, size: 64, offset: 512)
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3715, file: !3716, line: 93, baseType: !3679, size: 64, offset: 576)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3715, file: !3716, line: 94, baseType: !3688, size: 64, offset: 640)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3715, file: !3716, line: 95, baseType: !3679, size: 64, offset: 704)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3715, file: !3716, line: 97, baseType: !3688, size: 64, offset: 768)
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3715, file: !3716, line: 98, baseType: !3688, size: 64, offset: 832)
!3790 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3715, file: !3716, line: 100, baseType: !3768, size: 64, offset: 896)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3715, file: !3716, line: 101, baseType: !3688, size: 64, offset: 960)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3715, file: !3716, line: 103, baseType: !3688, size: 64, offset: 1024)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3715, file: !3716, line: 105, baseType: !3688, size: 64, offset: 1088)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3715, file: !3716, line: 107, baseType: !3683, size: 64, offset: 1152)
!3795 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3715, file: !3716, line: 109, baseType: !3796, size: 64, offset: 1216)
!3796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3797, size: 64)
!3797 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3798)
!3798 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3716, line: 109, flags: DIFlagFwdDecl)
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3715, file: !3716, line: 111, baseType: !3800, size: 64, offset: 1280)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3716, line: 111, flags: DIFlagFwdDecl)
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3715, file: !3716, line: 112, baseType: !949, offset: 1344)
!3803 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3715, file: !3716, line: 114, baseType: !370, size: 8, offset: 1344)
!3804 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3380, file: !73, line: 471, baseType: !3728, size: 64, offset: 832)
!3805 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !3380, file: !73, line: 473, baseType: !344, size: 64, offset: 896)
!3806 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3380, file: !73, line: 475, baseType: !344, size: 64, offset: 960)
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3380, file: !73, line: 480, baseType: !423, size: 192, offset: 1024)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !3380, file: !73, line: 484, baseType: !3809, size: 576, offset: 1216)
!3809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3810)
!3810 = !{!3811, !3812, !3813, !3814, !3815, !3816}
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3809, file: !73, line: 362, baseType: !385, size: 128)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3809, file: !73, line: 363, baseType: !385, size: 128, offset: 128)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3809, file: !73, line: 364, baseType: !385, size: 128, offset: 256)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3809, file: !73, line: 365, baseType: !385, size: 128, offset: 384)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3809, file: !73, line: 366, baseType: !370, size: 8, offset: 512)
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3809, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !3380, file: !73, line: 485, baseType: !3818, size: 2304, offset: 1792)
!3818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3819)
!3819 = !{!3820, !3821, !3822, !3823, !3824, !3825, !3826, !3827, !3828, !3829, !3830, !3831, !3832, !3833, !3834, !3835, !3873, !3874, !3875, !3876, !3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885, !3886, !3887, !3888, !3889, !3890, !3891, !3892, !3893, !3894, !3895, !3896, !3897, !3898, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3915, !3919}
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3818, file: !80, line: 566, baseType: !3771, size: 32)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3818, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3818, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3818, file: !80, line: 569, baseType: !370, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3818, file: !80, line: 570, baseType: !370, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3818, file: !80, line: 571, baseType: !370, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3818, file: !80, line: 572, baseType: !370, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3818, file: !80, line: 573, baseType: !370, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3818, file: !80, line: 574, baseType: !370, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3818, file: !80, line: 575, baseType: !370, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3830 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3818, file: !80, line: 576, baseType: !370, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3831 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3818, file: !80, line: 577, baseType: !468, size: 32, offset: 64)
!3832 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3818, file: !80, line: 578, baseType: !436, offset: 96)
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3818, file: !80, line: 580, baseType: !385, size: 128, offset: 128)
!3834 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3818, file: !80, line: 581, baseType: !2424, size: 192, offset: 256)
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3818, file: !80, line: 582, baseType: !3836, size: 64, offset: 448)
!3836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3837, size: 64)
!3837 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3838, line: 43, size: 1472, elements: !3839)
!3838 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3839 = !{!3840, !3841, !3842, !3843, !3844, !3847, !3859, !3860, !3861, !3862, !3863, !3864, !3865, !3866, !3867, !3868, !3869, !3870, !3871, !3872}
!3840 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3837, file: !3838, line: 44, baseType: !844, size: 64)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3837, file: !3838, line: 45, baseType: !115, size: 32, offset: 64)
!3842 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3837, file: !3838, line: 46, baseType: !385, size: 128, offset: 128)
!3843 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3837, file: !3838, line: 47, baseType: !436, offset: 256)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3837, file: !3838, line: 48, baseType: !3845, size: 64, offset: 256)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3837, file: !3838, line: 49, baseType: !3848, size: 320, offset: 320)
!3848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3849, line: 11, size: 320, elements: !3850)
!3849 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3850 = !{!3851, !3852, !3853, !3858}
!3851 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3848, file: !3849, line: 16, baseType: !943, size: 128)
!3852 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3848, file: !3849, line: 17, baseType: !341, size: 64, offset: 128)
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3848, file: !3849, line: 18, baseType: !3854, size: 64, offset: 192)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3855, size: 64)
!3855 = !DISubroutineType(types: !3856)
!3856 = !{null, !3857}
!3857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3848, size: 64)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3848, file: !3849, line: 19, baseType: !468, size: 32, offset: 256)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3837, file: !3838, line: 50, baseType: !341, size: 64, offset: 640)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3837, file: !3838, line: 51, baseType: !549, size: 64, offset: 704)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3837, file: !3838, line: 52, baseType: !549, size: 64, offset: 768)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3837, file: !3838, line: 53, baseType: !549, size: 64, offset: 832)
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3837, file: !3838, line: 54, baseType: !549, size: 64, offset: 896)
!3864 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3837, file: !3838, line: 55, baseType: !549, size: 64, offset: 960)
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3837, file: !3838, line: 56, baseType: !341, size: 64, offset: 1024)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3837, file: !3838, line: 57, baseType: !341, size: 64, offset: 1088)
!3867 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3837, file: !3838, line: 58, baseType: !341, size: 64, offset: 1152)
!3868 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3837, file: !3838, line: 59, baseType: !341, size: 64, offset: 1216)
!3869 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3837, file: !3838, line: 60, baseType: !341, size: 64, offset: 1280)
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3837, file: !3838, line: 61, baseType: !3379, size: 64, offset: 1344)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3837, file: !3838, line: 62, baseType: !370, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3837, file: !3838, line: 63, baseType: !370, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3818, file: !80, line: 583, baseType: !370, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3818, file: !80, line: 584, baseType: !370, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3875 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3818, file: !80, line: 585, baseType: !370, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3876 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3818, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3818, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3818, file: !80, line: 592, baseType: !541, size: 512, offset: 576)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3818, file: !80, line: 593, baseType: !504, size: 64, offset: 1088)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3818, file: !80, line: 594, baseType: !1991, size: 256, offset: 1152)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3818, file: !80, line: 595, baseType: !1201, size: 128, offset: 1408)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3818, file: !80, line: 596, baseType: !3845, size: 64, offset: 1536)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3818, file: !80, line: 597, baseType: !358, size: 32, offset: 1600)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3818, file: !80, line: 598, baseType: !358, size: 32, offset: 1632)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3818, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3818, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3818, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3818, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3818, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3818, file: !80, line: 604, baseType: !370, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3818, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3892 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3818, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3818, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3818, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3818, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3818, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3897 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3818, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3898 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3818, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3818, file: !80, line: 613, baseType: !115, size: 32, offset: 1792)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3818, file: !80, line: 614, baseType: !115, size: 32, offset: 1824)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3818, file: !80, line: 615, baseType: !504, size: 64, offset: 1856)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3818, file: !80, line: 616, baseType: !504, size: 64, offset: 1920)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3818, file: !80, line: 617, baseType: !504, size: 64, offset: 1984)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3818, file: !80, line: 618, baseType: !504, size: 64, offset: 2048)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3818, file: !80, line: 620, baseType: !3906, size: 64, offset: 2112)
!3906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3907, size: 64)
!3907 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3908)
!3908 = !{!3909, !3910, !3911, !3912}
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3907, file: !80, line: 537, baseType: !436)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3907, file: !80, line: 538, baseType: !7, size: 32)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3907, file: !80, line: 540, baseType: !385, size: 128, offset: 64)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3907, file: !80, line: 543, baseType: !3913, size: 64, offset: 192)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !80, line: 534, flags: DIFlagFwdDecl)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3818, file: !80, line: 621, baseType: !3916, size: 64, offset: 2176)
!3916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3917, size: 64)
!3917 = !DISubroutineType(types: !3918)
!3918 = !{null, !3379, !1461}
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3818, file: !80, line: 622, baseType: !3920, size: 64, offset: 2240)
!3920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3921, size: 64)
!3921 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !3380, file: !73, line: 486, baseType: !3923, size: 64, offset: 4096)
!3923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3924, size: 64)
!3924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3925)
!3925 = !{!3926, !3927, !3928, !3932, !3933, !3934}
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3924, file: !80, line: 643, baseType: !3685, size: 1472)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3924, file: !80, line: 644, baseType: !3688, size: 64, offset: 1472)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3924, file: !80, line: 645, baseType: !3929, size: 64, offset: 1536)
!3929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3930, size: 64)
!3930 = !DISubroutineType(types: !3931)
!3931 = !{null, !3379, !370}
!3932 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3924, file: !80, line: 646, baseType: !3688, size: 64, offset: 1600)
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3924, file: !80, line: 647, baseType: !3679, size: 64, offset: 1664)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3924, file: !80, line: 648, baseType: !3679, size: 64, offset: 1728)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !3380, file: !73, line: 493, baseType: !3936, size: 64, offset: 4160)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3938)
!3938 = !{!3939, !3940, !3941, !4114, !4115, !4116, !4117, !4118, !4119, !4122, !4123, !4124, !4125, !4126, !4127, !4128}
!3939 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3937, file: !94, line: 163, baseType: !385, size: 128)
!3940 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3937, file: !94, line: 164, baseType: !844, size: 64, offset: 128)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3937, file: !94, line: 165, baseType: !3942, size: 64, offset: 192)
!3942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3943, size: 64)
!3943 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3944)
!3944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3945)
!3945 = !{!3946, !4064, !4075, !4080, !4084, !4091, !4095, !4099, !4106, !4110}
!3946 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3944, file: !94, line: 106, baseType: !3947, size: 64)
!3947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3948, size: 64)
!3948 = !DISubroutineType(types: !3949)
!3949 = !{!115, !3936, !3950, !93}
!3950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3951, size: 64)
!3951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3952, line: 51, size: 1344, elements: !3953)
!3952 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3953 = !{!3954, !3955, !3957, !3958, !4048, !4057, !4058, !4059, !4060, !4061, !4062, !4063}
!3954 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3951, file: !3952, line: 52, baseType: !844, size: 64)
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3951, file: !3952, line: 53, baseType: !3956, size: 32, offset: 64)
!3956 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3952, line: 28, baseType: !468)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3951, file: !3952, line: 54, baseType: !844, size: 64, offset: 128)
!3958 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3951, file: !3952, line: 55, baseType: !3959, size: 192, offset: 192)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !3960, line: 17, size: 192, elements: !3961)
!3960 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!3961 = !{!3962, !3964, !4047}
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !3959, file: !3960, line: 18, baseType: !3963, size: 64)
!3963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3959, file: !3960, line: 19, baseType: !3965, size: 64, offset: 64)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3967)
!3967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !3960, line: 110, size: 1152, elements: !3968)
!3968 = !{!3969, !3973, !3977, !3983, !3989, !3993, !3997, !4002, !4006, !4007, !4011, !4015, !4019, !4030, !4031, !4032, !4033, !4043}
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !3967, file: !3960, line: 111, baseType: !3970, size: 64)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{!3963, !3963}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !3967, file: !3960, line: 112, baseType: !3974, size: 64, offset: 64)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{null, !3963}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !3967, file: !3960, line: 113, baseType: !3978, size: 64, offset: 128)
!3978 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3979, size: 64)
!3979 = !DISubroutineType(types: !3980)
!3980 = !{!370, !3981}
!3981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3982, size: 64)
!3982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3959)
!3983 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !3967, file: !3960, line: 114, baseType: !3984, size: 64, offset: 192)
!3984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3985, size: 64)
!3985 = !DISubroutineType(types: !3986)
!3986 = !{!3176, !3981, !3987}
!3987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3988, size: 64)
!3988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3380)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !3967, file: !3960, line: 116, baseType: !3990, size: 64, offset: 256)
!3990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3991, size: 64)
!3991 = !DISubroutineType(types: !3992)
!3992 = !{!370, !3981, !844}
!3993 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !3967, file: !3960, line: 118, baseType: !3994, size: 64, offset: 320)
!3994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3995, size: 64)
!3995 = !DISubroutineType(types: !3996)
!3996 = !{!115, !3981, !844, !7, !344, !1023}
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !3967, file: !3960, line: 123, baseType: !3998, size: 64, offset: 384)
!3998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3999, size: 64)
!3999 = !DISubroutineType(types: !4000)
!4000 = !{!115, !3981, !844, !4001, !1023}
!4001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !844, size: 64)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !3967, file: !3960, line: 126, baseType: !4003, size: 64, offset: 448)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{!844, !3981}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !3967, file: !3960, line: 127, baseType: !4003, size: 64, offset: 512)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !3967, file: !3960, line: 128, baseType: !4008, size: 64, offset: 576)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = !DISubroutineType(types: !4010)
!4010 = !{!3963, !3981}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !3967, file: !3960, line: 130, baseType: !4012, size: 64, offset: 640)
!4012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4013, size: 64)
!4013 = !DISubroutineType(types: !4014)
!4014 = !{!3963, !3981, !3963}
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !3967, file: !3960, line: 133, baseType: !4016, size: 64, offset: 704)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4017, size: 64)
!4017 = !DISubroutineType(types: !4018)
!4018 = !{!3963, !3981, !844}
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !3967, file: !3960, line: 135, baseType: !4020, size: 64, offset: 768)
!4020 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4021, size: 64)
!4021 = !DISubroutineType(types: !4022)
!4022 = !{!115, !3981, !844, !844, !7, !7, !4023}
!4023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4024, size: 64)
!4024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !3960, line: 43, size: 640, elements: !4025)
!4025 = !{!4026, !4027, !4028}
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4024, file: !3960, line: 44, baseType: !3963, size: 64)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4024, file: !3960, line: 45, baseType: !7, size: 32, offset: 64)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4024, file: !3960, line: 46, baseType: !4029, size: 512, offset: 128)
!4029 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 512, elements: !399)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !3967, file: !3960, line: 140, baseType: !4012, size: 64, offset: 832)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !3967, file: !3960, line: 143, baseType: !4008, size: 64, offset: 896)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !3967, file: !3960, line: 145, baseType: !3970, size: 64, offset: 960)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !3967, file: !3960, line: 146, baseType: !4034, size: 64, offset: 1024)
!4034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4035, size: 64)
!4035 = !DISubroutineType(types: !4036)
!4036 = !{!115, !3981, !4037}
!4037 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4038, size: 64)
!4038 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !3960, line: 29, size: 128, elements: !4039)
!4039 = !{!4040, !4041, !4042}
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4038, file: !3960, line: 30, baseType: !7, size: 32)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4038, file: !3960, line: 31, baseType: !7, size: 32, offset: 32)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4038, file: !3960, line: 32, baseType: !3981, size: 64, offset: 64)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !3967, file: !3960, line: 148, baseType: !4044, size: 64, offset: 1088)
!4044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4045, size: 64)
!4045 = !DISubroutineType(types: !4046)
!4046 = !{!115, !3981, !3379}
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3959, file: !3960, line: 20, baseType: !3379, size: 64, offset: 128)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3951, file: !3952, line: 57, baseType: !4049, size: 64, offset: 384)
!4049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4050, size: 64)
!4050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3952, line: 31, size: 704, elements: !4051)
!4051 = !{!4052, !4053, !4054, !4055, !4056}
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4050, file: !3952, line: 32, baseType: !870, size: 64)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4050, file: !3952, line: 33, baseType: !115, size: 32, offset: 64)
!4054 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4050, file: !3952, line: 34, baseType: !344, size: 64, offset: 128)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4050, file: !3952, line: 35, baseType: !4049, size: 64, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4050, file: !3952, line: 43, baseType: !3475, size: 448, offset: 256)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3951, file: !3952, line: 58, baseType: !4049, size: 64, offset: 448)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3951, file: !3952, line: 59, baseType: !3950, size: 64, offset: 512)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3951, file: !3952, line: 60, baseType: !3950, size: 64, offset: 576)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3951, file: !3952, line: 61, baseType: !3950, size: 64, offset: 640)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3951, file: !3952, line: 63, baseType: !3383, size: 512, offset: 704)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3951, file: !3952, line: 65, baseType: !341, size: 64, offset: 1216)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3951, file: !3952, line: 66, baseType: !344, size: 64, offset: 1280)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3944, file: !94, line: 108, baseType: !4065, size: 64, offset: 64)
!4065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4066, size: 64)
!4066 = !DISubroutineType(types: !4067)
!4067 = !{!115, !3936, !4068, !93}
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4069, size: 64)
!4069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !4070)
!4070 = !{!4071, !4072, !4073}
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4069, file: !94, line: 64, baseType: !3963, size: 64)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !4069, file: !94, line: 65, baseType: !115, size: 32, offset: 64)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4069, file: !94, line: 66, baseType: !4074, size: 512, offset: 96)
!4074 = !DICompositeType(tag: DW_TAG_array_type, baseType: !468, size: 512, elements: !1941)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3944, file: !94, line: 110, baseType: !4076, size: 64, offset: 128)
!4076 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4077, size: 64)
!4077 = !DISubroutineType(types: !4078)
!4078 = !{!115, !3936, !7, !4079}
!4079 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !343, line: 164, baseType: !341)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3944, file: !94, line: 111, baseType: !4081, size: 64, offset: 192)
!4081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4082, size: 64)
!4082 = !DISubroutineType(types: !4083)
!4083 = !{null, !3936, !7}
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3944, file: !94, line: 112, baseType: !4085, size: 64, offset: 256)
!4085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4086, size: 64)
!4086 = !DISubroutineType(types: !4087)
!4087 = !{!115, !3936, !3950, !4088, !7, !4090, !1916}
!4088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4089, size: 64)
!4089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !468)
!4090 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3944, file: !94, line: 117, baseType: !4092, size: 64, offset: 320)
!4092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4093, size: 64)
!4093 = !DISubroutineType(types: !4094)
!4094 = !{!115, !3936, !7, !7, !344}
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3944, file: !94, line: 119, baseType: !4096, size: 64, offset: 384)
!4096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4097, size: 64)
!4097 = !DISubroutineType(types: !4098)
!4098 = !{null, !3936, !7, !7}
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3944, file: !94, line: 121, baseType: !4100, size: 64, offset: 448)
!4100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4101, size: 64)
!4101 = !DISubroutineType(types: !4102)
!4102 = !{!115, !3936, !4103, !370}
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4104, size: 64)
!4104 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !4105, line: 11, flags: DIFlagFwdDecl)
!4105 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3944, file: !94, line: 122, baseType: !4107, size: 64, offset: 512)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DISubroutineType(types: !4109)
!4109 = !{null, !3936, !4103}
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3944, file: !94, line: 123, baseType: !4111, size: 64, offset: 576)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = !DISubroutineType(types: !4113)
!4113 = !{!115, !3936, !4068, !4090, !1916}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3937, file: !94, line: 166, baseType: !344, size: 64, offset: 256)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3937, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3937, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3937, file: !94, line: 171, baseType: !3963, size: 64, offset: 384)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3937, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3937, file: !94, line: 173, baseType: !4120, size: 64, offset: 512)
!4120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4121, size: 64)
!4121 = !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !94, line: 134, flags: DIFlagFwdDecl)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3937, file: !94, line: 175, baseType: !3936, size: 64, offset: 576)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3937, file: !94, line: 182, baseType: !4079, size: 64, offset: 640)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3937, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3937, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3937, file: !94, line: 185, baseType: !1385, size: 128, offset: 768)
!4127 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3937, file: !94, line: 186, baseType: !423, size: 192, offset: 896)
!4128 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3937, file: !94, line: 187, baseType: !4129, offset: 1088)
!4129 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2636)
!4130 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !3380, file: !73, line: 499, baseType: !385, size: 128, offset: 4224)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !3380, file: !73, line: 502, baseType: !4132, size: 64, offset: 4352)
!4132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4133, size: 64)
!4133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4134)
!4134 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !3380, file: !73, line: 504, baseType: !4136, size: 64, offset: 4416)
!4136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !3380, file: !73, line: 505, baseType: !504, size: 64, offset: 4480)
!4138 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !3380, file: !73, line: 510, baseType: !504, size: 64, offset: 4544)
!4139 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !3380, file: !73, line: 511, baseType: !4140, size: 64, offset: 4608)
!4140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4141, size: 64)
!4141 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4142)
!4142 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4143 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !3380, file: !73, line: 513, baseType: !4144, size: 64, offset: 4672)
!4144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4145, size: 64)
!4145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4146)
!4146 = !{!4147, !4148}
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4145, file: !73, line: 293, baseType: !7, size: 32)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4145, file: !73, line: 294, baseType: !341, size: 64, offset: 64)
!4149 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !3380, file: !73, line: 515, baseType: !385, size: 128, offset: 4736)
!4150 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !3380, file: !73, line: 526, baseType: !4151, offset: 4864)
!4151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4152, line: 5, elements: !450)
!4152 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4153 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !3380, file: !73, line: 528, baseType: !3950, size: 64, offset: 4864)
!4154 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3380, file: !73, line: 529, baseType: !3963, size: 64, offset: 4928)
!4155 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !3380, file: !73, line: 534, baseType: !901, size: 32, offset: 4992)
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3380, file: !73, line: 535, baseType: !468, size: 32, offset: 5024)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !3380, file: !73, line: 537, baseType: !436, offset: 5056)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !3380, file: !73, line: 538, baseType: !385, size: 128, offset: 5056)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !3380, file: !73, line: 540, baseType: !4160, size: 64, offset: 5184)
!4160 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4161, size: 64)
!4161 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4162, line: 54, size: 960, elements: !4163)
!4162 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4163 = !{!4164, !4165, !4166, !4167, !4168, !4169, !4170, !4174, !4178, !4179, !4180, !4181, !4185, !4189, !4190}
!4164 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4161, file: !4162, line: 55, baseType: !844, size: 64)
!4165 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4161, file: !4162, line: 56, baseType: !934, size: 64, offset: 64)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4161, file: !4162, line: 58, baseType: !3460, size: 64, offset: 128)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4161, file: !4162, line: 59, baseType: !3460, size: 64, offset: 192)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4161, file: !4162, line: 60, baseType: !3389, size: 64, offset: 256)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4161, file: !4162, line: 62, baseType: !3670, size: 64, offset: 320)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4161, file: !4162, line: 63, baseType: !4171, size: 64, offset: 384)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 64)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{!870, !3379, !3677}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4161, file: !4162, line: 65, baseType: !4175, size: 64, offset: 448)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{null, !4160}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4161, file: !4162, line: 66, baseType: !3679, size: 64, offset: 512)
!4179 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4161, file: !4162, line: 68, baseType: !3688, size: 64, offset: 576)
!4180 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4161, file: !4162, line: 70, baseType: !3496, size: 64, offset: 640)
!4181 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4161, file: !4162, line: 71, baseType: !4182, size: 64, offset: 704)
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4183, size: 64)
!4183 = !DISubroutineType(types: !4184)
!4184 = !{!3176, !3379}
!4185 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4161, file: !4162, line: 73, baseType: !4186, size: 64, offset: 768)
!4186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4187, size: 64)
!4187 = !DISubroutineType(types: !4188)
!4188 = !{null, !3379, !3528, !3529}
!4189 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4161, file: !4162, line: 75, baseType: !3683, size: 64, offset: 832)
!4190 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4161, file: !4162, line: 77, baseType: !3800, size: 64, offset: 896)
!4191 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3380, file: !73, line: 541, baseType: !3460, size: 64, offset: 5248)
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3380, file: !73, line: 543, baseType: !3679, size: 64, offset: 5312)
!4193 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !3380, file: !73, line: 544, baseType: !4194, size: 64, offset: 5376)
!4194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4195, size: 64)
!4195 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !3380, file: !73, line: 545, baseType: !4197, size: 64, offset: 5440)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !3380, file: !73, line: 547, baseType: !370, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3380, file: !73, line: 548, baseType: !370, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4201 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !3380, file: !73, line: 549, baseType: !370, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4202 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !3380, file: !73, line: 550, baseType: !370, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "managed", scope: !3373, file: !237, line: 83, baseType: !4204, size: 192, offset: 256)
!4204 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3373, file: !237, line: 76, size: 192, elements: !4205)
!4205 = !{!4206, !4207, !4208}
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4204, file: !237, line: 78, baseType: !385, size: 128)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "final_kfree", scope: !4204, file: !237, line: 80, baseType: !344, size: 64, offset: 128)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4204, file: !237, line: 82, baseType: !436, offset: 192)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !3373, file: !237, line: 86, baseType: !4210, size: 64, offset: 448)
!4210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4211, size: 64)
!4211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_driver", file: !4212, line: 162, size: 3328, elements: !4213)
!4212 = !DIFile(filename: "./include/drm/drm_drv.h", directory: "/home/lizy2001/genbc/linux")
!4213 = !{!4214, !4218, !4225, !4229, !4233, !4234, !4235, !4240, !4241, !4245, !4246, !4250, !4251, !4257, !4264, !4268, !4272, !4276, !4280, !4285, !4291, !4295, !4299, !4300, !4306, !4312, !4316, !4320, !4324, !4338, !4344, !4348, !4349, !4350, !4351, !4352, !4353, !4354, !4355, !4356, !4360, !4361, !4362, !4363, !4364, !4365, !4369, !4370, !4374, !4378, !4382, !4386}
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !4211, file: !4212, line: 179, baseType: !4215, size: 64)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!115, !3372, !341}
!4218 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !4211, file: !4212, line: 199, baseType: !4219, size: 64, offset: 64)
!4219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4220, size: 64)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{!115, !3372, !4222}
!4222 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4223, size: 64)
!4223 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_file", file: !4224, line: 9, flags: DIFlagFwdDecl)
!4224 = !DIFile(filename: "./include/drm/drm_lease.h", directory: "/home/lizy2001/genbc/linux")
!4225 = !DIDerivedType(tag: DW_TAG_member, name: "postclose", scope: !4211, file: !4212, line: 213, baseType: !4226, size: 64, offset: 128)
!4226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4227, size: 64)
!4227 = !DISubroutineType(types: !4228)
!4228 = !{null, !3372, !4222}
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "lastclose", scope: !4211, file: !4212, line: 241, baseType: !4230, size: 64, offset: 192)
!4230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4231, size: 64)
!4231 = !DISubroutineType(types: !4232)
!4232 = !{null, !3372}
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "unload", scope: !4211, file: !4212, line: 258, baseType: !4230, size: 64, offset: 256)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !4211, file: !4212, line: 270, baseType: !4230, size: 64, offset: 320)
!4235 = !DIDerivedType(tag: DW_TAG_member, name: "irq_handler", scope: !4211, file: !4212, line: 278, baseType: !4236, size: 64, offset: 384)
!4236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4237, size: 64)
!4237 = !DISubroutineType(types: !4238)
!4238 = !{!4239, !115, !344}
!4239 = !DIDerivedType(tag: DW_TAG_typedef, name: "irqreturn_t", file: !108, line: 17, baseType: !107)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "irq_preinstall", scope: !4211, file: !4212, line: 288, baseType: !4230, size: 64, offset: 448)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "irq_postinstall", scope: !4211, file: !4212, line: 297, baseType: !4242, size: 64, offset: 512)
!4242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4243, size: 64)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{!115, !3372}
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "irq_uninstall", scope: !4211, file: !4212, line: 306, baseType: !4230, size: 64, offset: 576)
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "master_set", scope: !4211, file: !4212, line: 313, baseType: !4247, size: 64, offset: 640)
!4247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4248, size: 64)
!4248 = !DISubroutineType(types: !4249)
!4249 = !{null, !3372, !4222, !370}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "master_drop", scope: !4211, file: !4212, line: 320, baseType: !4226, size: 64, offset: 704)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_init", scope: !4211, file: !4212, line: 327, baseType: !4252, size: 64, offset: 768)
!4252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4253, size: 64)
!4253 = !DISubroutineType(types: !4254)
!4254 = !{null, !4255}
!4255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4256, size: 64)
!4256 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_minor", file: !237, line: 13, flags: DIFlagFwdDecl)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "gem_free_object_unlocked", scope: !4211, file: !4212, line: 335, baseType: !4258, size: 64, offset: 832)
!4258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4259, size: 64)
!4259 = !DISubroutineType(types: !4260)
!4260 = !{null, !4261}
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_gem_object", file: !4263, line: 37, flags: DIFlagFwdDecl)
!4263 = !DIFile(filename: "./include/drm/drm_framebuffer.h", directory: "/home/lizy2001/genbc/linux")
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "gem_open_object", scope: !4211, file: !4212, line: 344, baseType: !4265, size: 64, offset: 896)
!4265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4266, size: 64)
!4266 = !DISubroutineType(types: !4267)
!4267 = !{!115, !4261, !4222}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "gem_close_object", scope: !4211, file: !4212, line: 353, baseType: !4269, size: 64, offset: 960)
!4269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4270, size: 64)
!4270 = !DISubroutineType(types: !4271)
!4271 = !{null, !4261, !4222}
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "gem_create_object", scope: !4211, file: !4212, line: 361, baseType: !4273, size: 64, offset: 1024)
!4273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4274, size: 64)
!4274 = !DISubroutineType(types: !4275)
!4275 = !{!4261, !3372, !1023}
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "prime_handle_to_fd", scope: !4211, file: !4212, line: 372, baseType: !4277, size: 64, offset: 1088)
!4277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4278, size: 64)
!4278 = !DISubroutineType(types: !4279)
!4279 = !{!115, !3372, !4222, !1492, !1492, !1011}
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "prime_fd_to_handle", scope: !4211, file: !4212, line: 383, baseType: !4281, size: 64, offset: 1152)
!4281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4282, size: 64)
!4282 = !DISubroutineType(types: !4283)
!4283 = !{!115, !3372, !4222, !115, !4284}
!4284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1492, size: 64)
!4285 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_export", scope: !4211, file: !4212, line: 391, baseType: !4286, size: 64, offset: 1216)
!4286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4287, size: 64)
!4287 = !DISubroutineType(types: !4288)
!4288 = !{!4289, !4261, !115}
!4289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4290, size: 64)
!4290 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf", file: !4212, line: 391, flags: DIFlagFwdDecl)
!4291 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_import", scope: !4211, file: !4212, line: 400, baseType: !4292, size: 64, offset: 1280)
!4292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4293, size: 64)
!4293 = !DISubroutineType(types: !4294)
!4294 = !{!4261, !3372, !4289}
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_pin", scope: !4211, file: !4212, line: 408, baseType: !4296, size: 64, offset: 1344)
!4296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4297, size: 64)
!4297 = !DISubroutineType(types: !4298)
!4298 = !{!115, !4261}
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_unpin", scope: !4211, file: !4212, line: 415, baseType: !4258, size: 64, offset: 1408)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_get_sg_table", scope: !4211, file: !4212, line: 423, baseType: !4301, size: 64, offset: 1472)
!4301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4302, size: 64)
!4302 = !DISubroutineType(types: !4303)
!4303 = !{!4304, !4261}
!4304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4305, size: 64)
!4305 = !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !4212, line: 423, flags: DIFlagFwdDecl)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_import_sg_table", scope: !4211, file: !4212, line: 431, baseType: !4307, size: 64, offset: 1536)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4308, size: 64)
!4308 = !DISubroutineType(types: !4309)
!4309 = !{!4261, !3372, !4310, !4304}
!4310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4311, size: 64)
!4311 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_buf_attachment", file: !4212, line: 39, flags: DIFlagFwdDecl)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_vmap", scope: !4211, file: !4212, line: 441, baseType: !4313, size: 64, offset: 1600)
!4313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4314, size: 64)
!4314 = !DISubroutineType(types: !4315)
!4315 = !{!344, !4261}
!4316 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_vunmap", scope: !4211, file: !4212, line: 449, baseType: !4317, size: 64, offset: 1664)
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DISubroutineType(types: !4319)
!4319 = !{null, !4261, !344}
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "gem_prime_mmap", scope: !4211, file: !4212, line: 460, baseType: !4321, size: 64, offset: 1728)
!4321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4322, size: 64)
!4322 = !DISubroutineType(types: !4323)
!4323 = !{!115, !4261, !645}
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_create", scope: !4211, file: !4212, line: 484, baseType: !4325, size: 64, offset: 1792)
!4325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4326, size: 64)
!4326 = !DISubroutineType(types: !4327)
!4327 = !{!115, !4222, !3372, !4328}
!4328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4329, size: 64)
!4329 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_create_dumb", file: !208, line: 805, size: 256, elements: !4330)
!4330 = !{!4331, !4332, !4333, !4334, !4335, !4336, !4337}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4329, file: !208, line: 806, baseType: !469, size: 32)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4329, file: !208, line: 807, baseType: !469, size: 32, offset: 32)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "bpp", scope: !4329, file: !208, line: 808, baseType: !469, size: 32, offset: 64)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4329, file: !208, line: 809, baseType: !469, size: 32, offset: 96)
!4335 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4329, file: !208, line: 811, baseType: !469, size: 32, offset: 128)
!4336 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !4329, file: !208, line: 812, baseType: !469, size: 32, offset: 160)
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4329, file: !208, line: 813, baseType: !505, size: 64, offset: 192)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_map_offset", scope: !4211, file: !4212, line: 502, baseType: !4339, size: 64, offset: 1856)
!4339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4340, size: 64)
!4340 = !DISubroutineType(types: !4341)
!4341 = !{!115, !4222, !3372, !1492, !4342}
!4342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4343, size: 64)
!4343 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !343, line: 107, baseType: !504)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "dumb_destroy", scope: !4211, file: !4212, line: 521, baseType: !4345, size: 64, offset: 1920)
!4345 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4346, size: 64)
!4346 = !DISubroutineType(types: !4347)
!4347 = !{!115, !4222, !3372, !1492}
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "gem_vm_ops", scope: !4211, file: !4212, line: 531, baseType: !674, size: 64, offset: 1984)
!4349 = !DIDerivedType(tag: DW_TAG_member, name: "major", scope: !4211, file: !4212, line: 534, baseType: !115, size: 32, offset: 2048)
!4350 = !DIDerivedType(tag: DW_TAG_member, name: "minor", scope: !4211, file: !4212, line: 536, baseType: !115, size: 32, offset: 2080)
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "patchlevel", scope: !4211, file: !4212, line: 538, baseType: !115, size: 32, offset: 2112)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4211, file: !4212, line: 540, baseType: !870, size: 64, offset: 2176)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !4211, file: !4212, line: 542, baseType: !870, size: 64, offset: 2240)
!4354 = !DIDerivedType(tag: DW_TAG_member, name: "date", scope: !4211, file: !4212, line: 544, baseType: !870, size: 64, offset: 2304)
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "driver_features", scope: !4211, file: !4212, line: 552, baseType: !468, size: 32, offset: 2368)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "ioctls", scope: !4211, file: !4212, line: 562, baseType: !4357, size: 64, offset: 2432)
!4357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4358, size: 64)
!4358 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4359)
!4359 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_ioctl_desc", file: !4212, line: 562, flags: DIFlagFwdDecl)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "num_ioctls", scope: !4211, file: !4212, line: 564, baseType: !115, size: 32, offset: 2496)
!4361 = !DIDerivedType(tag: DW_TAG_member, name: "fops", scope: !4211, file: !4212, line: 573, baseType: !1081, size: 64, offset: 2560)
!4362 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_dev_list", scope: !4211, file: !4212, line: 579, baseType: !385, size: 128, offset: 2624)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "firstopen", scope: !4211, file: !4212, line: 580, baseType: !4242, size: 64, offset: 2752)
!4364 = !DIDerivedType(tag: DW_TAG_member, name: "preclose", scope: !4211, file: !4212, line: 581, baseType: !4226, size: 64, offset: 2816)
!4365 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ioctl", scope: !4211, file: !4212, line: 582, baseType: !4366, size: 64, offset: 2880)
!4366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4367, size: 64)
!4367 = !DISubroutineType(types: !4368)
!4368 = !{!115, !3372, !344, !4222}
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "dma_quiescent", scope: !4211, file: !4212, line: 583, baseType: !4242, size: 64, offset: 2944)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "context_dtor", scope: !4211, file: !4212, line: 584, baseType: !4371, size: 64, offset: 3008)
!4371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4372, size: 64)
!4372 = !DISubroutineType(types: !4373)
!4373 = !{!115, !3372, !115}
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_counter", scope: !4211, file: !4212, line: 585, baseType: !4375, size: 64, offset: 3072)
!4375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4376 = !DISubroutineType(types: !4377)
!4377 = !{!468, !3372, !7}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "enable_vblank", scope: !4211, file: !4212, line: 586, baseType: !4379, size: 64, offset: 3136)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{!115, !3372, !7}
!4382 = !DIDerivedType(tag: DW_TAG_member, name: "disable_vblank", scope: !4211, file: !4212, line: 587, baseType: !4383, size: 64, offset: 3200)
!4383 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4384, size: 64)
!4384 = !DISubroutineType(types: !4385)
!4385 = !{null, !3372, !7}
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "dev_priv_size", scope: !4211, file: !4212, line: 588, baseType: !115, size: 32, offset: 3264)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "dev_private", scope: !3373, file: !237, line: 98, baseType: !344, size: 64, offset: 512)
!4388 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !3373, file: !237, line: 101, baseType: !4255, size: 64, offset: 576)
!4389 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !3373, file: !237, line: 104, baseType: !4255, size: 64, offset: 640)
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "registered", scope: !3373, file: !237, line: 111, baseType: !370, size: 8, offset: 704)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !3373, file: !237, line: 119, baseType: !4392, size: 64, offset: 768)
!4392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4393, size: 64)
!4393 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_master", file: !4224, line: 11, flags: DIFlagFwdDecl)
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "driver_features", scope: !3373, file: !237, line: 129, baseType: !468, size: 32, offset: 832)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "unplugged", scope: !3373, file: !237, line: 137, baseType: !370, size: 8, offset: 864)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "anon_inode", scope: !3373, file: !237, line: 140, baseType: !741, size: 64, offset: 896)
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !3373, file: !237, line: 143, baseType: !870, size: 64, offset: 960)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "struct_mutex", scope: !3373, file: !237, line: 153, baseType: !423, size: 192, offset: 1024)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "master_mutex", scope: !3373, file: !237, line: 160, baseType: !423, size: 192, offset: 1216)
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "open_count", scope: !3373, file: !237, line: 168, baseType: !358, size: 32, offset: 1408)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "filelist_mutex", scope: !3373, file: !237, line: 171, baseType: !423, size: 192, offset: 1472)
!4402 = !DIDerivedType(tag: DW_TAG_member, name: "filelist", scope: !3373, file: !237, line: 177, baseType: !385, size: 128, offset: 1664)
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "filelist_internal", scope: !3373, file: !237, line: 185, baseType: !385, size: 128, offset: 1792)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "clientlist_mutex", scope: !3373, file: !237, line: 192, baseType: !423, size: 192, offset: 1920)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "clientlist", scope: !3373, file: !237, line: 199, baseType: !385, size: 128, offset: 2112)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enabled", scope: !3373, file: !237, line: 208, baseType: !370, size: 8, offset: 2240)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3373, file: !237, line: 213, baseType: !115, size: 32, offset: 2272)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_disable_immediate", scope: !3373, file: !237, line: 228, baseType: !370, size: 8, offset: 2304)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "vblank", scope: !3373, file: !237, line: 238, baseType: !4410, size: 64, offset: 2368)
!4410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4411, size: 64)
!4411 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vblank_crtc", file: !237, line: 16, flags: DIFlagFwdDecl)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_time_lock", scope: !3373, file: !237, line: 245, baseType: !436, offset: 2432)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "vbl_lock", scope: !3373, file: !237, line: 250, baseType: !436, offset: 2432)
!4414 = !DIDerivedType(tag: DW_TAG_member, name: "max_vblank_count", scope: !3373, file: !237, line: 273, baseType: !468, size: 32, offset: 2432)
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_event_list", scope: !3373, file: !237, line: 276, baseType: !385, size: 128, offset: 2496)
!4416 = !DIDerivedType(tag: DW_TAG_member, name: "event_lock", scope: !3373, file: !237, line: 284, baseType: !436, offset: 2624)
!4417 = !DIDerivedType(tag: DW_TAG_member, name: "agp", scope: !3373, file: !237, line: 287, baseType: !4418, size: 64, offset: 2624)
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4419, size: 64)
!4419 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_agp_head", file: !237, line: 287, flags: DIFlagFwdDecl)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "pdev", scope: !3373, file: !237, line: 290, baseType: !4421, size: 64, offset: 2688)
!4421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4422, size: 64)
!4422 = !DICompositeType(tag: DW_TAG_structure_type, name: "pci_dev", file: !4423, line: 79, flags: DIFlagFwdDecl)
!4423 = !DIFile(filename: "./include/acpi/acpi_drivers.h", directory: "/home/lizy2001/genbc/linux")
!4424 = !DIDerivedType(tag: DW_TAG_member, name: "num_crtcs", scope: !3373, file: !237, line: 297, baseType: !7, size: 32, offset: 2752)
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "mode_config", scope: !3373, file: !237, line: 300, baseType: !4426, size: 8384, offset: 2816)
!4426 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config", file: !4427, line: 358, size: 8384, elements: !4428)
!4427 = !DIFile(filename: "./include/drm/drm_mode_config.h", directory: "/home/lizy2001/genbc/linux")
!4428 = !{!4429, !4430, !4431, !4441, !4442, !4443, !4444, !4445, !4446, !4447, !4448, !4449, !4453, !4454, !4458, !4459, !4460, !4461, !4462, !4463, !4464, !4465, !4466, !4467, !4468, !4469, !4470, !4471, !4641, !4643, !4644, !4645, !4646, !4653, !4654, !4655, !4656, !4657, !4658, !4659, !4660, !4661, !4662, !4663, !4664, !4665, !4666, !4667, !4668, !4669, !4670, !4671, !4672, !4673, !4674, !4675, !4676, !4677, !4678, !4679, !4680, !4681, !4682, !4683, !4684, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4702, !4703, !4704, !4705, !4706, !4707, !4708, !4709, !4710, !4711, !4712, !4713, !4714, !4715, !4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724}
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4426, file: !4427, line: 369, baseType: !423, size: 192)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "connection_mutex", scope: !4426, file: !4427, line: 379, baseType: !415, size: 384, offset: 192)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_ctx", scope: !4426, file: !4427, line: 389, baseType: !4432, size: 64, offset: 576)
!4432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4433, size: 64)
!4433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_modeset_acquire_ctx", file: !416, line: 43, size: 448, elements: !4434)
!4434 = !{!4435, !4436, !4438, !4439, !4440}
!4435 = !DIDerivedType(tag: DW_TAG_member, name: "ww_ctx", scope: !4433, file: !416, line: 45, baseType: !454, size: 192)
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "contended", scope: !4433, file: !416, line: 52, baseType: !4437, size: 64, offset: 192)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!4438 = !DIDerivedType(tag: DW_TAG_member, name: "locked", scope: !4433, file: !416, line: 57, baseType: !385, size: 128, offset: 256)
!4439 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_only", scope: !4433, file: !416, line: 62, baseType: !370, size: 8, offset: 384)
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "interruptible", scope: !4433, file: !416, line: 65, baseType: !370, size: 8, offset: 392)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "idr_mutex", scope: !4426, file: !4427, line: 397, baseType: !423, size: 192, offset: 640)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "object_idr", scope: !4426, file: !4427, line: 405, baseType: !1381, size: 192, offset: 832)
!4443 = !DIDerivedType(tag: DW_TAG_member, name: "tile_idr", scope: !4426, file: !4427, line: 413, baseType: !1381, size: 192, offset: 1024)
!4444 = !DIDerivedType(tag: DW_TAG_member, name: "fb_lock", scope: !4426, file: !4427, line: 416, baseType: !423, size: 192, offset: 1216)
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "num_fb", scope: !4426, file: !4427, line: 418, baseType: !115, size: 32, offset: 1408)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "fb_list", scope: !4426, file: !4427, line: 420, baseType: !385, size: 128, offset: 1472)
!4447 = !DIDerivedType(tag: DW_TAG_member, name: "connector_list_lock", scope: !4426, file: !4427, line: 426, baseType: !436, offset: 1600)
!4448 = !DIDerivedType(tag: DW_TAG_member, name: "num_connector", scope: !4426, file: !4427, line: 431, baseType: !115, size: 32, offset: 1600)
!4449 = !DIDerivedType(tag: DW_TAG_member, name: "connector_ida", scope: !4426, file: !4427, line: 435, baseType: !4450, size: 128, offset: 1664)
!4450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !1382, line: 244, size: 128, elements: !4451)
!4451 = !{!4452}
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4450, file: !1382, line: 245, baseType: !1385, size: 128)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "connector_list", scope: !4426, file: !4427, line: 443, baseType: !385, size: 128, offset: 1792)
!4454 = !DIDerivedType(tag: DW_TAG_member, name: "connector_free_list", scope: !4426, file: !4427, line: 453, baseType: !4455, size: 64, offset: 1920)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_head", file: !1065, line: 54, size: 64, elements: !4456)
!4456 = !{!4457}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !4455, file: !1065, line: 55, baseType: !1068, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "connector_free_work", scope: !4426, file: !4427, line: 457, baseType: !1991, size: 256, offset: 1984)
!4459 = !DIDerivedType(tag: DW_TAG_member, name: "num_encoder", scope: !4426, file: !4427, line: 465, baseType: !115, size: 32, offset: 2240)
!4460 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_list", scope: !4426, file: !4427, line: 473, baseType: !385, size: 128, offset: 2304)
!4461 = !DIDerivedType(tag: DW_TAG_member, name: "num_total_plane", scope: !4426, file: !4427, line: 482, baseType: !115, size: 32, offset: 2432)
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "plane_list", scope: !4426, file: !4427, line: 489, baseType: !385, size: 128, offset: 2496)
!4463 = !DIDerivedType(tag: DW_TAG_member, name: "num_crtc", scope: !4426, file: !4427, line: 497, baseType: !115, size: 32, offset: 2624)
!4464 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_list", scope: !4426, file: !4427, line: 504, baseType: !385, size: 128, offset: 2688)
!4465 = !DIDerivedType(tag: DW_TAG_member, name: "property_list", scope: !4426, file: !4427, line: 513, baseType: !385, size: 128, offset: 2816)
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "privobj_list", scope: !4426, file: !4427, line: 522, baseType: !385, size: 128, offset: 2944)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "min_width", scope: !4426, file: !4427, line: 524, baseType: !115, size: 32, offset: 3072)
!4468 = !DIDerivedType(tag: DW_TAG_member, name: "min_height", scope: !4426, file: !4427, line: 524, baseType: !115, size: 32, offset: 3104)
!4469 = !DIDerivedType(tag: DW_TAG_member, name: "max_width", scope: !4426, file: !4427, line: 525, baseType: !115, size: 32, offset: 3136)
!4470 = !DIDerivedType(tag: DW_TAG_member, name: "max_height", scope: !4426, file: !4427, line: 525, baseType: !115, size: 32, offset: 3168)
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4426, file: !4427, line: 526, baseType: !4472, size: 64, offset: 3200)
!4472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4473, size: 64)
!4473 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4474)
!4474 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config_funcs", file: !4427, line: 47, size: 576, elements: !4475)
!4475 = !{!4476, !4577, !4581, !4582, !4624, !4628, !4632, !4636, !4640}
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "fb_create", scope: !4474, file: !4427, line: 77, baseType: !4477, size: 64)
!4477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4478, size: 64)
!4478 = !DISubroutineType(types: !4479)
!4479 = !{!4480, !3372, !4222, !4562}
!4480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4481, size: 64)
!4481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_framebuffer", file: !4263, line: 117, size: 1600, elements: !4482)
!4482 = !{!4483, !4484, !4485, !4520, !4521, !4525, !4550, !4552, !4553, !4554, !4555, !4556, !4557, !4558, !4559, !4560}
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4481, file: !4263, line: 121, baseType: !3372, size: 64)
!4484 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4481, file: !4263, line: 126, baseType: !385, size: 128, offset: 64)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4481, file: !4263, line: 131, baseType: !4486, size: 256, offset: 192)
!4486 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_object", file: !4487, line: 55, size: 256, elements: !4488)
!4487 = !DIFile(filename: "./include/drm/drm_mode_object.h", directory: "/home/lizy2001/genbc/linux")
!4488 = !{!4489, !4490, !4491, !4514, !4515}
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4486, file: !4487, line: 56, baseType: !1492, size: 32)
!4490 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4486, file: !4487, line: 57, baseType: !1492, size: 32, offset: 32)
!4491 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4486, file: !4487, line: 58, baseType: !4492, size: 64, offset: 64)
!4492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4493, size: 64)
!4493 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_object_properties", file: !4487, line: 67, size: 3136, elements: !4494)
!4494 = !{!4495, !4496, !4512}
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4493, file: !4487, line: 73, baseType: !115, size: 32)
!4496 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4493, file: !4487, line: 82, baseType: !4497, size: 1536, offset: 64)
!4497 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4498, size: 1536, elements: !4510)
!4498 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4499, size: 64)
!4499 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_property", file: !4500, line: 73, size: 960, elements: !4501)
!4500 = !DIFile(filename: "./include/drm/drm_property.h", directory: "/home/lizy2001/genbc/linux")
!4501 = !{!4502, !4503, !4504, !4505, !4506, !4507, !4508, !4509}
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4499, file: !4500, line: 77, baseType: !385, size: 128)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4499, file: !4500, line: 82, baseType: !4486, size: 256, offset: 128)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4499, file: !4500, line: 159, baseType: !1492, size: 32, offset: 384)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4499, file: !4500, line: 164, baseType: !1933, size: 256, offset: 416)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "num_values", scope: !4499, file: !4500, line: 169, baseType: !1492, size: 32, offset: 672)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !4499, file: !4500, line: 177, baseType: !4342, size: 64, offset: 704)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4499, file: !4500, line: 182, baseType: !3372, size: 64, offset: 768)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "enum_list", scope: !4499, file: !4500, line: 190, baseType: !385, size: 128, offset: 832)
!4510 = !{!4511}
!4511 = !DISubrange(count: 24)
!4512 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !4493, file: !4487, line: 102, baseType: !4513, size: 1536, offset: 1600)
!4513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4343, size: 1536, elements: !4510)
!4514 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !4486, file: !4487, line: 59, baseType: !350, size: 32, offset: 128)
!4515 = !DIDerivedType(tag: DW_TAG_member, name: "free_cb", scope: !4486, file: !4487, line: 60, baseType: !4516, size: 64, offset: 192)
!4516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4517, size: 64)
!4517 = !DISubroutineType(types: !4518)
!4518 = !{null, !4519}
!4519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !350, size: 64)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !4481, file: !4263, line: 136, baseType: !2774, size: 128, offset: 448)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "format", scope: !4481, file: !4263, line: 141, baseType: !4522, size: 64, offset: 576)
!4522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4523, size: 64)
!4523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4524)
!4524 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_format_info", file: !4263, line: 35, flags: DIFlagFwdDecl)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4481, file: !4263, line: 145, baseType: !4526, size: 64, offset: 640)
!4526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4527, size: 64)
!4527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4528)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_framebuffer_funcs", file: !4263, line: 42, size: 192, elements: !4529)
!4529 = !{!4530, !4534, !4538}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4528, file: !4263, line: 53, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4532, size: 64)
!4532 = !DISubroutineType(types: !4533)
!4533 = !{null, !4480}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "create_handle", scope: !4528, file: !4263, line: 73, baseType: !4535, size: 64, offset: 64)
!4535 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 64)
!4536 = !DISubroutineType(types: !4537)
!4537 = !{!115, !4480, !4222, !1916}
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !4528, file: !4263, line: 97, baseType: !4539, size: 64, offset: 128)
!4539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4540, size: 64)
!4540 = !DISubroutineType(types: !4541)
!4541 = !{!115, !4480, !4222, !7, !7, !4542, !7}
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4543, size: 64)
!4543 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_clip_rect", file: !4544, line: 97, size: 64, elements: !4545)
!4544 = !DIFile(filename: "./include/uapi/drm/drm.h", directory: "/home/lizy2001/genbc/linux")
!4545 = !{!4546, !4547, !4548, !4549}
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !4543, file: !4544, line: 98, baseType: !383, size: 16)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !4543, file: !4544, line: 99, baseType: !383, size: 16, offset: 16)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !4543, file: !4544, line: 100, baseType: !383, size: 16, offset: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !4543, file: !4544, line: 101, baseType: !383, size: 16, offset: 48)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "pitches", scope: !4481, file: !4263, line: 150, baseType: !4551, size: 128, offset: 704)
!4551 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 128, elements: !1364)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !4481, file: !4263, line: 168, baseType: !4551, size: 128, offset: 832)
!4553 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !4481, file: !4263, line: 175, baseType: !4343, size: 64, offset: 960)
!4554 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4481, file: !4263, line: 180, baseType: !7, size: 32, offset: 1024)
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4481, file: !4263, line: 185, baseType: !7, size: 32, offset: 1056)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4481, file: !4263, line: 190, baseType: !115, size: 32, offset: 1088)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "hot_x", scope: !4481, file: !4263, line: 196, baseType: !115, size: 32, offset: 1120)
!4558 = !DIDerivedType(tag: DW_TAG_member, name: "hot_y", scope: !4481, file: !4263, line: 202, baseType: !115, size: 32, offset: 1152)
!4559 = !DIDerivedType(tag: DW_TAG_member, name: "filp_head", scope: !4481, file: !4263, line: 206, baseType: !385, size: 128, offset: 1216)
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "obj", scope: !4481, file: !4263, line: 213, baseType: !4561, size: 256, offset: 1344)
!4561 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4261, size: 256, elements: !1364)
!4562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4563, size: 64)
!4563 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4564)
!4564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_fb_cmd2", file: !208, line: 494, size: 832, elements: !4565)
!4565 = !{!4566, !4567, !4568, !4569, !4570, !4571, !4573, !4574, !4575}
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "fb_id", scope: !4564, file: !208, line: 495, baseType: !469, size: 32)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !4564, file: !208, line: 496, baseType: !469, size: 32, offset: 32)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !4564, file: !208, line: 497, baseType: !469, size: 32, offset: 64)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_format", scope: !4564, file: !208, line: 498, baseType: !469, size: 32, offset: 96)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4564, file: !208, line: 499, baseType: !469, size: 32, offset: 128)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "handles", scope: !4564, file: !208, line: 525, baseType: !4572, size: 128, offset: 160)
!4572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 128, elements: !1364)
!4573 = !DIDerivedType(tag: DW_TAG_member, name: "pitches", scope: !4564, file: !208, line: 526, baseType: !4572, size: 128, offset: 288)
!4574 = !DIDerivedType(tag: DW_TAG_member, name: "offsets", scope: !4564, file: !208, line: 527, baseType: !4572, size: 128, offset: 416)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !4564, file: !208, line: 528, baseType: !4576, size: 256, offset: 576)
!4576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !505, size: 256, elements: !1364)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "get_format_info", scope: !4474, file: !4427, line: 92, baseType: !4578, size: 64, offset: 64)
!4578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4579, size: 64)
!4579 = !DISubroutineType(types: !4580)
!4580 = !{!4522, !4562}
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "output_poll_changed", scope: !4474, file: !4427, line: 109, baseType: !4230, size: 64, offset: 128)
!4582 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !4474, file: !4427, line: 119, baseType: !4583, size: 64, offset: 192)
!4583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4584, size: 64)
!4584 = !DISubroutineType(types: !4585)
!4585 = !{!113, !3372, !4586}
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4588)
!4588 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_display_mode", file: !114, line: 224, size: 960, elements: !4589)
!4589 = !{!4590, !4591, !4592, !4593, !4594, !4595, !4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4609, !4610, !4611, !4612, !4613, !4614, !4615, !4616, !4617, !4618, !4619, !4620, !4621, !4622, !4623}
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "clock", scope: !4588, file: !114, line: 230, baseType: !115, size: 32)
!4591 = !DIDerivedType(tag: DW_TAG_member, name: "hdisplay", scope: !4588, file: !114, line: 231, baseType: !381, size: 16, offset: 32)
!4592 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_start", scope: !4588, file: !114, line: 232, baseType: !381, size: 16, offset: 48)
!4593 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_end", scope: !4588, file: !114, line: 233, baseType: !381, size: 16, offset: 64)
!4594 = !DIDerivedType(tag: DW_TAG_member, name: "htotal", scope: !4588, file: !114, line: 234, baseType: !381, size: 16, offset: 80)
!4595 = !DIDerivedType(tag: DW_TAG_member, name: "hskew", scope: !4588, file: !114, line: 235, baseType: !381, size: 16, offset: 96)
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "vdisplay", scope: !4588, file: !114, line: 236, baseType: !381, size: 16, offset: 112)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_start", scope: !4588, file: !114, line: 237, baseType: !381, size: 16, offset: 128)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_end", scope: !4588, file: !114, line: 238, baseType: !381, size: 16, offset: 144)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "vtotal", scope: !4588, file: !114, line: 239, baseType: !381, size: 16, offset: 160)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "vscan", scope: !4588, file: !114, line: 240, baseType: !381, size: 16, offset: 176)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4588, file: !114, line: 275, baseType: !468, size: 32, offset: 192)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_clock", scope: !4588, file: !114, line: 292, baseType: !115, size: 32, offset: 224)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hdisplay", scope: !4588, file: !114, line: 293, baseType: !381, size: 16, offset: 256)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hblank_start", scope: !4588, file: !114, line: 294, baseType: !381, size: 16, offset: 272)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hblank_end", scope: !4588, file: !114, line: 295, baseType: !381, size: 16, offset: 288)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hsync_start", scope: !4588, file: !114, line: 296, baseType: !381, size: 16, offset: 304)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hsync_end", scope: !4588, file: !114, line: 297, baseType: !381, size: 16, offset: 320)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_htotal", scope: !4588, file: !114, line: 298, baseType: !381, size: 16, offset: 336)
!4609 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_hskew", scope: !4588, file: !114, line: 299, baseType: !381, size: 16, offset: 352)
!4610 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vdisplay", scope: !4588, file: !114, line: 300, baseType: !381, size: 16, offset: 368)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vblank_start", scope: !4588, file: !114, line: 301, baseType: !381, size: 16, offset: 384)
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vblank_end", scope: !4588, file: !114, line: 302, baseType: !381, size: 16, offset: 400)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vsync_start", scope: !4588, file: !114, line: 303, baseType: !381, size: 16, offset: 416)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vsync_end", scope: !4588, file: !114, line: 304, baseType: !381, size: 16, offset: 432)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_vtotal", scope: !4588, file: !114, line: 305, baseType: !381, size: 16, offset: 448)
!4616 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm", scope: !4588, file: !114, line: 313, baseType: !381, size: 16, offset: 464)
!4617 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm", scope: !4588, file: !114, line: 321, baseType: !381, size: 16, offset: 480)
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4588, file: !114, line: 350, baseType: !364, size: 8, offset: 496)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "expose_to_userspace", scope: !4588, file: !114, line: 361, baseType: !370, size: 8, offset: 504)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4588, file: !114, line: 368, baseType: !385, size: 128, offset: 512)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4588, file: !114, line: 375, baseType: !1933, size: 256, offset: 640)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4588, file: !114, line: 383, baseType: !113, size: 32, offset: 896)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "picture_aspect_ratio", scope: !4588, file: !114, line: 390, baseType: !157, size: 32, offset: 928)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !4474, file: !4427, line: 196, baseType: !4625, size: 64, offset: 256)
!4625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4626, size: 64)
!4626 = !DISubroutineType(types: !4627)
!4627 = !{!115, !3372, !3367}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_commit", scope: !4474, file: !4427, line: 278, baseType: !4629, size: 64, offset: 320)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = !DISubroutineType(types: !4631)
!4631 = !{!115, !3372, !3367, !370}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_alloc", scope: !4474, file: !4427, line: 297, baseType: !4633, size: 64, offset: 384)
!4633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4634, size: 64)
!4634 = !DISubroutineType(types: !4635)
!4635 = !{!3367, !3372}
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_clear", scope: !4474, file: !4427, line: 318, baseType: !4637, size: 64, offset: 448)
!4637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4638, size: 64)
!4638 = !DISubroutineType(types: !4639)
!4639 = !{null, !3367}
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_state_free", scope: !4474, file: !4427, line: 333, baseType: !4637, size: 64, offset: 512)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "fb_base", scope: !4426, file: !4427, line: 527, baseType: !4642, size: 64, offset: 3264)
!4642 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !343, line: 158, baseType: !3174)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "poll_enabled", scope: !4426, file: !4427, line: 530, baseType: !370, size: 8, offset: 3328)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "poll_running", scope: !4426, file: !4427, line: 531, baseType: !370, size: 8, offset: 3336)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_event", scope: !4426, file: !4427, line: 532, baseType: !370, size: 8, offset: 3344)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "output_poll_work", scope: !4426, file: !4427, line: 533, baseType: !4647, size: 704, offset: 3392)
!4647 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_work", file: !262, line: 115, size: 704, elements: !4648)
!4648 = !{!4649, !4650, !4651, !4652}
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !4647, file: !262, line: 116, baseType: !1991, size: 256)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !4647, file: !262, line: 117, baseType: !3848, size: 320, offset: 256)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !4647, file: !262, line: 120, baseType: !1969, size: 64, offset: 576)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !4647, file: !262, line: 121, baseType: !115, size: 32, offset: 640)
!4653 = !DIDerivedType(tag: DW_TAG_member, name: "blob_lock", scope: !4426, file: !4427, line: 541, baseType: !423, size: 192, offset: 4096)
!4654 = !DIDerivedType(tag: DW_TAG_member, name: "property_blob_list", scope: !4426, file: !4427, line: 549, baseType: !385, size: 128, offset: 4288)
!4655 = !DIDerivedType(tag: DW_TAG_member, name: "edid_property", scope: !4426, file: !4427, line: 557, baseType: !4498, size: 64, offset: 4416)
!4656 = !DIDerivedType(tag: DW_TAG_member, name: "dpms_property", scope: !4426, file: !4427, line: 562, baseType: !4498, size: 64, offset: 4480)
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "path_property", scope: !4426, file: !4427, line: 567, baseType: !4498, size: 64, offset: 4544)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "tile_property", scope: !4426, file: !4427, line: 573, baseType: !4498, size: 64, offset: 4608)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "link_status_property", scope: !4426, file: !4427, line: 578, baseType: !4498, size: 64, offset: 4672)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "plane_type_property", scope: !4426, file: !4427, line: 583, baseType: !4498, size: 64, offset: 4736)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_x", scope: !4426, file: !4427, line: 588, baseType: !4498, size: 64, offset: 4800)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_y", scope: !4426, file: !4427, line: 593, baseType: !4498, size: 64, offset: 4864)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_w", scope: !4426, file: !4427, line: 598, baseType: !4498, size: 64, offset: 4928)
!4664 = !DIDerivedType(tag: DW_TAG_member, name: "prop_src_h", scope: !4426, file: !4427, line: 603, baseType: !4498, size: 64, offset: 4992)
!4665 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_x", scope: !4426, file: !4427, line: 608, baseType: !4498, size: 64, offset: 5056)
!4666 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_y", scope: !4426, file: !4427, line: 613, baseType: !4498, size: 64, offset: 5120)
!4667 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_w", scope: !4426, file: !4427, line: 618, baseType: !4498, size: 64, offset: 5184)
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_h", scope: !4426, file: !4427, line: 623, baseType: !4498, size: 64, offset: 5248)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "prop_fb_id", scope: !4426, file: !4427, line: 628, baseType: !4498, size: 64, offset: 5312)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "prop_in_fence_fd", scope: !4426, file: !4427, line: 633, baseType: !4498, size: 64, offset: 5376)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "prop_out_fence_ptr", scope: !4426, file: !4427, line: 639, baseType: !4498, size: 64, offset: 5440)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "prop_crtc_id", scope: !4426, file: !4427, line: 644, baseType: !4498, size: 64, offset: 5504)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "prop_fb_damage_clips", scope: !4426, file: !4427, line: 653, baseType: !4498, size: 64, offset: 5568)
!4674 = !DIDerivedType(tag: DW_TAG_member, name: "prop_active", scope: !4426, file: !4427, line: 659, baseType: !4498, size: 64, offset: 5632)
!4675 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode_id", scope: !4426, file: !4427, line: 665, baseType: !4498, size: 64, offset: 5696)
!4676 = !DIDerivedType(tag: DW_TAG_member, name: "prop_vrr_enabled", scope: !4426, file: !4427, line: 670, baseType: !4498, size: 64, offset: 5760)
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_i_subconnector_property", scope: !4426, file: !4427, line: 676, baseType: !4498, size: 64, offset: 5824)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_i_select_subconnector_property", scope: !4426, file: !4427, line: 681, baseType: !4498, size: 64, offset: 5888)
!4679 = !DIDerivedType(tag: DW_TAG_member, name: "dp_subconnector_property", scope: !4426, file: !4427, line: 687, baseType: !4498, size: 64, offset: 5952)
!4680 = !DIDerivedType(tag: DW_TAG_member, name: "tv_subconnector_property", scope: !4426, file: !4427, line: 693, baseType: !4498, size: 64, offset: 6016)
!4681 = !DIDerivedType(tag: DW_TAG_member, name: "tv_select_subconnector_property", scope: !4426, file: !4427, line: 698, baseType: !4498, size: 64, offset: 6080)
!4682 = !DIDerivedType(tag: DW_TAG_member, name: "tv_mode_property", scope: !4426, file: !4427, line: 703, baseType: !4498, size: 64, offset: 6144)
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "tv_left_margin_property", scope: !4426, file: !4427, line: 708, baseType: !4498, size: 64, offset: 6208)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "tv_right_margin_property", scope: !4426, file: !4427, line: 713, baseType: !4498, size: 64, offset: 6272)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "tv_top_margin_property", scope: !4426, file: !4427, line: 718, baseType: !4498, size: 64, offset: 6336)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "tv_bottom_margin_property", scope: !4426, file: !4427, line: 723, baseType: !4498, size: 64, offset: 6400)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "tv_brightness_property", scope: !4426, file: !4427, line: 728, baseType: !4498, size: 64, offset: 6464)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "tv_contrast_property", scope: !4426, file: !4427, line: 733, baseType: !4498, size: 64, offset: 6528)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "tv_flicker_reduction_property", scope: !4426, file: !4427, line: 738, baseType: !4498, size: 64, offset: 6592)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "tv_overscan_property", scope: !4426, file: !4427, line: 743, baseType: !4498, size: 64, offset: 6656)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "tv_saturation_property", scope: !4426, file: !4427, line: 748, baseType: !4498, size: 64, offset: 6720)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "tv_hue_property", scope: !4426, file: !4427, line: 752, baseType: !4498, size: 64, offset: 6784)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode_property", scope: !4426, file: !4427, line: 758, baseType: !4498, size: 64, offset: 6848)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "aspect_ratio_property", scope: !4426, file: !4427, line: 763, baseType: !4498, size: 64, offset: 6912)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "content_type_property", scope: !4426, file: !4427, line: 768, baseType: !4498, size: 64, offset: 6976)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut_property", scope: !4426, file: !4427, line: 773, baseType: !4498, size: 64, offset: 7040)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut_size_property", scope: !4426, file: !4427, line: 778, baseType: !4498, size: 64, offset: 7104)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "ctm_property", scope: !4426, file: !4427, line: 784, baseType: !4498, size: 64, offset: 7168)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut_property", scope: !4426, file: !4427, line: 790, baseType: !4498, size: 64, offset: 7232)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut_size_property", scope: !4426, file: !4427, line: 795, baseType: !4498, size: 64, offset: 7296)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "suggested_x_property", scope: !4426, file: !4427, line: 801, baseType: !4498, size: 64, offset: 7360)
!4702 = !DIDerivedType(tag: DW_TAG_member, name: "suggested_y_property", scope: !4426, file: !4427, line: 806, baseType: !4498, size: 64, offset: 7424)
!4703 = !DIDerivedType(tag: DW_TAG_member, name: "non_desktop_property", scope: !4426, file: !4427, line: 813, baseType: !4498, size: 64, offset: 7488)
!4704 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation_property", scope: !4426, file: !4427, line: 820, baseType: !4498, size: 64, offset: 7552)
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_fb_id_property", scope: !4426, file: !4427, line: 827, baseType: !4498, size: 64, offset: 7616)
!4706 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_pixel_formats_property", scope: !4426, file: !4427, line: 835, baseType: !4498, size: 64, offset: 7680)
!4707 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_out_fence_ptr_property", scope: !4426, file: !4427, line: 843, baseType: !4498, size: 64, offset: 7744)
!4708 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_output_metadata_property", scope: !4426, file: !4427, line: 850, baseType: !4498, size: 64, offset: 7808)
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "content_protection_property", scope: !4426, file: !4427, line: 856, baseType: !4498, size: 64, offset: 7872)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_content_type_property", scope: !4426, file: !4427, line: 862, baseType: !4498, size: 64, offset: 7936)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_depth", scope: !4426, file: !4427, line: 865, baseType: !1492, size: 32, offset: 8000)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_shadow", scope: !4426, file: !4427, line: 865, baseType: !1492, size: 32, offset: 8032)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "prefer_shadow_fbdev", scope: !4426, file: !4427, line: 872, baseType: !370, size: 8, offset: 8064)
!4714 = !DIDerivedType(tag: DW_TAG_member, name: "fbdev_use_iomem", scope: !4426, file: !4427, line: 884, baseType: !370, size: 8, offset: 8072)
!4715 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_addfb_prefer_xbgr_30bpp", scope: !4426, file: !4427, line: 892, baseType: !370, size: 8, offset: 8080)
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "quirk_addfb_prefer_host_byte_order", scope: !4426, file: !4427, line: 906, baseType: !370, size: 8, offset: 8088)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "async_page_flip", scope: !4426, file: !4427, line: 912, baseType: !370, size: 8, offset: 8096)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "allow_fb_modifiers", scope: !4426, file: !4427, line: 919, baseType: !370, size: 8, offset: 8104)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "normalize_zpos", scope: !4426, file: !4427, line: 927, baseType: !370, size: 8, offset: 8112)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_property", scope: !4426, file: !4427, line: 933, baseType: !4498, size: 64, offset: 8128)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_width", scope: !4426, file: !4427, line: 936, baseType: !1492, size: 32, offset: 8192)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_height", scope: !4426, file: !4427, line: 936, baseType: !1492, size: 32, offset: 8224)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_state", scope: !4426, file: !4427, line: 945, baseType: !3367, size: 64, offset: 8256)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4426, file: !4427, line: 947, baseType: !4725, size: 64, offset: 8320)
!4725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4726, size: 64)
!4726 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4727)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_config_helper_funcs", file: !4728, line: 1372, size: 64, elements: !4729)
!4728 = !DIFile(filename: "./include/drm/drm_modeset_helper_vtables.h", directory: "/home/lizy2001/genbc/linux")
!4729 = !{!4730}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_commit_tail", scope: !4727, file: !4728, line: 1408, baseType: !4637, size: 64)
!4731 = !DIDerivedType(tag: DW_TAG_member, name: "object_name_lock", scope: !3373, file: !237, line: 303, baseType: !423, size: 192, offset: 11200)
!4732 = !DIDerivedType(tag: DW_TAG_member, name: "object_name_idr", scope: !3373, file: !237, line: 306, baseType: !1381, size: 192, offset: 11392)
!4733 = !DIDerivedType(tag: DW_TAG_member, name: "vma_offset_manager", scope: !3373, file: !237, line: 309, baseType: !4734, size: 64, offset: 11584)
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vma_offset_manager", file: !237, line: 19, flags: DIFlagFwdDecl)
!4736 = !DIDerivedType(tag: DW_TAG_member, name: "vram_mm", scope: !3373, file: !237, line: 312, baseType: !4737, size: 64, offset: 11648)
!4737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4738, size: 64)
!4738 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_vram_mm", file: !237, line: 20, flags: DIFlagFwdDecl)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "switch_power_state", scope: !3373, file: !237, line: 322, baseType: !236, size: 32, offset: 11712)
!4740 = !DIDerivedType(tag: DW_TAG_member, name: "fb_helper", scope: !3373, file: !237, line: 330, baseType: !4741, size: 64, offset: 11776)
!4741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4742, size: 64)
!4742 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_fb_helper", file: !237, line: 21, flags: DIFlagFwdDecl)
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "allow_modeset", scope: !3368, file: !411, line: 338, baseType: !370, size: 1, offset: 128, flags: DIFlagBitField, extraData: i64 128)
!4744 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_cursor_update", scope: !3368, file: !411, line: 339, baseType: !370, size: 1, offset: 129, flags: DIFlagBitField, extraData: i64 128)
!4745 = !DIDerivedType(tag: DW_TAG_member, name: "async_update", scope: !3368, file: !411, line: 340, baseType: !370, size: 1, offset: 130, flags: DIFlagBitField, extraData: i64 128)
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "duplicated", scope: !3368, file: !411, line: 349, baseType: !370, size: 1, offset: 131, flags: DIFlagBitField, extraData: i64 128)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !3368, file: !411, line: 350, baseType: !4748, size: 64, offset: 192)
!4748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4749, size: 64)
!4749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_planes_state", file: !411, line: 158, size: 256, elements: !4750)
!4750 = !{!4751, !5661, !5662, !5663}
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4749, file: !411, line: 159, baseType: !4752, size: 64)
!4752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4753, size: 64)
!4753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane", file: !179, line: 575, size: 5184, elements: !4754)
!4754 = !{!4755, !4756, !4757, !4758, !4759, !4760, !4761, !4762, !4763, !4764, !4765, !4766, !5544, !5545, !5546, !5636, !5637, !5638, !5639, !5654, !5655, !5656, !5657, !5658, !5659, !5660}
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4753, file: !179, line: 577, baseType: !3372, size: 64)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4753, file: !179, line: 586, baseType: !385, size: 128, offset: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4753, file: !179, line: 589, baseType: !870, size: 64, offset: 192)
!4758 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4753, file: !179, line: 600, baseType: !415, size: 384, offset: 256)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4753, file: !179, line: 603, baseType: !4486, size: 256, offset: 640)
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "possible_crtcs", scope: !4753, file: !179, line: 609, baseType: !1492, size: 32, offset: 896)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "format_types", scope: !4753, file: !179, line: 611, baseType: !4284, size: 64, offset: 960)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "format_count", scope: !4753, file: !179, line: 613, baseType: !7, size: 32, offset: 1024)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "format_default", scope: !4753, file: !179, line: 618, baseType: !370, size: 8, offset: 1056)
!4764 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !4753, file: !179, line: 621, baseType: !4342, size: 64, offset: 1088)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "modifier_count", scope: !4753, file: !179, line: 623, baseType: !7, size: 32, offset: 1152)
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4753, file: !179, line: 632, baseType: !4767, size: 64, offset: 1216)
!4767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4768, size: 64)
!4768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc", file: !4769, line: 939, size: 7680, elements: !4770)
!4769 = !DIFile(filename: "./include/drm/drm_crtc.h", directory: "/home/lizy2001/genbc/linux")
!4770 = !{!4771, !4772, !4773, !4774, !4775, !4776, !4777, !4778, !4779, !4780, !4781, !4782, !4783, !4784, !4785, !4786, !4787, !5462, !5463, !5465, !5511, !5512, !5513, !5514, !5515, !5537, !5538, !5539, !5540, !5541}
!4771 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4768, file: !4769, line: 941, baseType: !3372, size: 64)
!4772 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4768, file: !4769, line: 943, baseType: !3950, size: 64, offset: 64)
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4768, file: !4769, line: 951, baseType: !385, size: 128, offset: 128)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4768, file: !4769, line: 954, baseType: !870, size: 64, offset: 256)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4768, file: !4769, line: 966, baseType: !415, size: 384, offset: 320)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4768, file: !4769, line: 969, baseType: !4486, size: 256, offset: 704)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "primary", scope: !4768, file: !4769, line: 978, baseType: !4752, size: 64, offset: 960)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !4768, file: !4769, line: 987, baseType: !4752, size: 64, offset: 1024)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4768, file: !4769, line: 993, baseType: !7, size: 32, offset: 1088)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_x", scope: !4768, file: !4769, line: 1002, baseType: !115, size: 32, offset: 1120)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_y", scope: !4768, file: !4769, line: 1010, baseType: !115, size: 32, offset: 1152)
!4782 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4768, file: !4769, line: 1020, baseType: !370, size: 8, offset: 1184)
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4768, file: !4769, line: 1030, baseType: !4588, size: 960, offset: 1216)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "hwmode", scope: !4768, file: !4769, line: 1046, baseType: !4588, size: 960, offset: 2176)
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4768, file: !4769, line: 1055, baseType: !115, size: 32, offset: 3136)
!4786 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4768, file: !4769, line: 1063, baseType: !115, size: 32, offset: 3168)
!4787 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4768, file: !4769, line: 1066, baseType: !4788, size: 64, offset: 3200)
!4788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4789, size: 64)
!4789 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4790)
!4790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_funcs", file: !4769, line: 409, size: 1536, elements: !4791)
!4791 = !{!4792, !4796, !4800, !4804, !4808, !4813, !4814, !5397, !5401, !5405, !5409, !5413, !5417, !5421, !5427, !5431, !5432, !5436, !5441, !5447, !5451, !5455, !5456, !5457}
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4790, file: !4769, line: 420, baseType: !4793, size: 64)
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = !DISubroutineType(types: !4795)
!4795 = !{null, !4767}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_set", scope: !4790, file: !4769, line: 443, baseType: !4797, size: 64, offset: 64)
!4797 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4798, size: 64)
!4798 = !DISubroutineType(types: !4799)
!4799 = !{!115, !4767, !4222, !1492, !1492, !1492}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_set2", scope: !4790, file: !4769, line: 465, baseType: !4801, size: 64, offset: 128)
!4801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4802, size: 64)
!4802 = !DISubroutineType(types: !4803)
!4803 = !{!115, !4767, !4222, !1492, !1492, !1492, !1460, !1460}
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_move", scope: !4790, file: !4769, line: 485, baseType: !4805, size: 64, offset: 192)
!4805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4806, size: 64)
!4806 = !DISubroutineType(types: !4807)
!4807 = !{!115, !4767, !115, !115}
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_set", scope: !4790, file: !4769, line: 500, baseType: !4809, size: 64, offset: 256)
!4809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4810, size: 64)
!4810 = !DISubroutineType(types: !4811)
!4811 = !{!115, !4767, !4812, !4812, !4812, !1492, !4432}
!4812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !381, size: 64)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4790, file: !4769, line: 511, baseType: !4793, size: 64, offset: 320)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "set_config", scope: !4790, file: !4769, line: 527, baseType: !4815, size: 64, offset: 384)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DISubroutineType(types: !4817)
!4817 = !{!115, !4818, !4432}
!4818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4819, size: 64)
!4819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_mode_set", file: !4769, line: 1190, size: 384, elements: !4820)
!4820 = !{!4821, !4822, !4823, !4825, !4826, !4827, !5396}
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !4819, file: !4769, line: 1191, baseType: !4480, size: 64)
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4819, file: !4769, line: 1192, baseType: !4767, size: 64, offset: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4819, file: !4769, line: 1193, baseType: !4824, size: 64, offset: 128)
!4824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4588, size: 64)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !4819, file: !4769, line: 1195, baseType: !1492, size: 32, offset: 192)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !4819, file: !4769, line: 1196, baseType: !1492, size: 32, offset: 224)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "connectors", scope: !4819, file: !4769, line: 1198, baseType: !4828, size: 64, offset: 256)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4830, size: 64)
!4830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector", file: !185, line: 1170, size: 9280, elements: !4831)
!4831 = !{!4832, !4833, !4834, !4847, !4848, !4849, !4850, !4851, !4852, !4853, !4854, !4855, !4856, !4857, !4858, !4859, !4860, !4861, !4862, !4905, !5151, !5152, !5153, !5154, !5155, !5156, !5157, !5158, !5160, !5161, !5203, !5222, !5223, !5224, !5225, !5226, !5227, !5229, !5231, !5233, !5234, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5373, !5374, !5375, !5376, !5377, !5378, !5379, !5380, !5381}
!4832 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4830, file: !185, line: 1172, baseType: !3372, size: 64)
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "kdev", scope: !4830, file: !185, line: 1174, baseType: !3379, size: 64, offset: 64)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4830, file: !185, line: 1176, baseType: !4835, size: 64, offset: 128)
!4835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4836, size: 64)
!4836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !4837)
!4837 = !{!4838, !4839, !4843}
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !4836, file: !73, line: 100, baseType: !3449, size: 128)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !4836, file: !73, line: 101, baseType: !4840, size: 64, offset: 128)
!4840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4841, size: 64)
!4841 = !DISubroutineType(types: !4842)
!4842 = !{!1095, !3379, !4835, !870}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !4836, file: !73, line: 103, baseType: !4844, size: 64, offset: 192)
!4844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4845, size: 64)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{!1095, !3379, !4835, !844, !1023}
!4847 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4830, file: !185, line: 1186, baseType: !385, size: 128, offset: 192)
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4830, file: !185, line: 1189, baseType: !4486, size: 256, offset: 320)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4830, file: !185, line: 1192, baseType: !870, size: 64, offset: 576)
!4850 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !4830, file: !185, line: 1199, baseType: !423, size: 192, offset: 640)
!4851 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4830, file: !185, line: 1207, baseType: !7, size: 32, offset: 832)
!4852 = !DIDerivedType(tag: DW_TAG_member, name: "connector_type", scope: !4830, file: !185, line: 1213, baseType: !115, size: 32, offset: 864)
!4853 = !DIDerivedType(tag: DW_TAG_member, name: "connector_type_id", scope: !4830, file: !185, line: 1215, baseType: !115, size: 32, offset: 896)
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "interlace_allowed", scope: !4830, file: !185, line: 1221, baseType: !370, size: 8, offset: 928)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "doublescan_allowed", scope: !4830, file: !185, line: 1227, baseType: !370, size: 8, offset: 936)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "stereo_allowed", scope: !4830, file: !185, line: 1233, baseType: !370, size: 8, offset: 944)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "ycbcr_420_allowed", scope: !4830, file: !185, line: 1241, baseType: !370, size: 8, offset: 952)
!4858 = !DIDerivedType(tag: DW_TAG_member, name: "registration_state", scope: !4830, file: !185, line: 1249, baseType: !184, size: 32, offset: 960)
!4859 = !DIDerivedType(tag: DW_TAG_member, name: "modes", scope: !4830, file: !185, line: 1256, baseType: !385, size: 128, offset: 1024)
!4860 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4830, file: !185, line: 1263, baseType: !190, size: 32, offset: 1152)
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "probed_modes", scope: !4830, file: !185, line: 1271, baseType: !385, size: 128, offset: 1216)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "display_info", scope: !4830, file: !185, line: 1282, baseType: !4863, size: 1216, offset: 1344)
!4863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_display_info", file: !185, line: 428, size: 1216, elements: !4864)
!4864 = !{!4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4873, !4874, !4875, !4876, !4877, !4878, !4879, !4880, !4881, !4899, !4900}
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm", scope: !4863, file: !185, line: 432, baseType: !7, size: 32)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm", scope: !4863, file: !185, line: 437, baseType: !7, size: 32, offset: 32)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "bpc", scope: !4863, file: !185, line: 442, baseType: !7, size: 32, offset: 64)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "subpixel_order", scope: !4863, file: !185, line: 447, baseType: !195, size: 32, offset: 96)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation", scope: !4863, file: !185, line: 461, baseType: !115, size: 32, offset: 128)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "color_formats", scope: !4863, file: !185, line: 469, baseType: !468, size: 32, offset: 160)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "bus_formats", scope: !4863, file: !185, line: 476, baseType: !4088, size: 64, offset: 192)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "num_bus_formats", scope: !4863, file: !185, line: 480, baseType: !7, size: 32, offset: 256)
!4873 = !DIDerivedType(tag: DW_TAG_member, name: "bus_flags", scope: !4863, file: !185, line: 487, baseType: !468, size: 32, offset: 288)
!4874 = !DIDerivedType(tag: DW_TAG_member, name: "max_tmds_clock", scope: !4863, file: !185, line: 493, baseType: !115, size: 32, offset: 320)
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "dvi_dual", scope: !4863, file: !185, line: 498, baseType: !370, size: 8, offset: 352)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "is_hdmi", scope: !4863, file: !185, line: 506, baseType: !370, size: 8, offset: 360)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "has_hdmi_infoframe", scope: !4863, file: !185, line: 511, baseType: !370, size: 8, offset: 368)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "rgb_quant_range_selectable", scope: !4863, file: !185, line: 517, baseType: !370, size: 8, offset: 376)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "edid_hdmi_dc_modes", scope: !4863, file: !185, line: 523, baseType: !364, size: 8, offset: 384)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "cea_rev", scope: !4863, file: !185, line: 528, baseType: !364, size: 8, offset: 392)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "hdmi", scope: !4863, file: !185, line: 533, baseType: !4882, size: 704, offset: 448)
!4882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_hdmi_info", file: !185, line: 185, size: 704, elements: !4883)
!4883 = !{!4884, !4894, !4896, !4897, !4898}
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "scdc", scope: !4882, file: !185, line: 187, baseType: !4885, size: 32)
!4885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_scdc", file: !185, line: 163, size: 32, elements: !4886)
!4886 = !{!4887, !4888, !4889}
!4887 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4885, file: !185, line: 167, baseType: !370, size: 8)
!4888 = !DIDerivedType(tag: DW_TAG_member, name: "read_request", scope: !4885, file: !185, line: 171, baseType: !370, size: 8, offset: 8)
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "scrambling", scope: !4885, file: !185, line: 175, baseType: !4890, size: 16, offset: 16)
!4890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_scrambling", file: !185, line: 146, size: 16, elements: !4891)
!4891 = !{!4892, !4893}
!4892 = !DIDerivedType(tag: DW_TAG_member, name: "supported", scope: !4890, file: !185, line: 150, baseType: !370, size: 8)
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "low_rates", scope: !4890, file: !185, line: 154, baseType: !370, size: 8, offset: 8)
!4894 = !DIDerivedType(tag: DW_TAG_member, name: "y420_vdb_modes", scope: !4882, file: !185, line: 195, baseType: !4895, size: 256, offset: 64)
!4895 = !DICompositeType(tag: DW_TAG_array_type, baseType: !341, size: 256, elements: !1364)
!4896 = !DIDerivedType(tag: DW_TAG_member, name: "y420_cmdb_modes", scope: !4882, file: !185, line: 203, baseType: !4895, size: 256, offset: 320)
!4897 = !DIDerivedType(tag: DW_TAG_member, name: "y420_cmdb_map", scope: !4882, file: !185, line: 206, baseType: !504, size: 64, offset: 576)
!4898 = !DIDerivedType(tag: DW_TAG_member, name: "y420_dc_modes", scope: !4882, file: !185, line: 209, baseType: !364, size: 8, offset: 640)
!4899 = !DIDerivedType(tag: DW_TAG_member, name: "non_desktop", scope: !4863, file: !185, line: 538, baseType: !370, size: 8, offset: 1152)
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "monitor_range", scope: !4863, file: !185, line: 543, baseType: !4901, size: 16, offset: 1160)
!4901 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_monitor_range_info", file: !185, line: 269, size: 16, elements: !4902)
!4902 = !{!4903, !4904}
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "min_vfreq", scope: !4901, file: !185, line: 270, baseType: !364, size: 8)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfreq", scope: !4901, file: !185, line: 271, baseType: !364, size: 8, offset: 8)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4830, file: !185, line: 1285, baseType: !4906, size: 64, offset: 2560)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4908)
!4908 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_funcs", file: !185, line: 749, size: 896, elements: !4909)
!4909 = !{!4910, !4914, !4918, !4922, !4923, !4927, !4931, !4935, !4936, !4937, !5103, !5107, !5111, !5117}
!4910 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !4908, file: !185, line: 766, baseType: !4911, size: 64)
!4911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4912, size: 64)
!4912 = !DISubroutineType(types: !4913)
!4913 = !{!115, !4829, !115}
!4914 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4908, file: !185, line: 778, baseType: !4915, size: 64, offset: 64)
!4915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4916, size: 64)
!4916 = !DISubroutineType(types: !4917)
!4917 = !{null, !4829}
!4918 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !4908, file: !185, line: 806, baseType: !4919, size: 64, offset: 128)
!4919 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4920, size: 64)
!4920 = !DISubroutineType(types: !4921)
!4921 = !{!190, !4829, !370}
!4922 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !4908, file: !185, line: 823, baseType: !4915, size: 64, offset: 192)
!4923 = !DIDerivedType(tag: DW_TAG_member, name: "fill_modes", scope: !4908, file: !185, line: 848, baseType: !4924, size: 64, offset: 256)
!4924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4925, size: 64)
!4925 = !DISubroutineType(types: !4926)
!4926 = !{!115, !4829, !1492, !1492}
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !4908, file: !185, line: 864, baseType: !4928, size: 64, offset: 320)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = !DISubroutineType(types: !4930)
!4930 = !{!115, !4829, !4498, !4343}
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !4908, file: !185, line: 883, baseType: !4932, size: 64, offset: 384)
!4932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4933, size: 64)
!4933 = !DISubroutineType(types: !4934)
!4934 = !{!115, !4829}
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !4908, file: !185, line: 896, baseType: !4915, size: 64, offset: 448)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4908, file: !185, line: 906, baseType: !4915, size: 64, offset: 512)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !4908, file: !185, line: 939, baseType: !4938, size: 64, offset: 576)
!4938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4939, size: 64)
!4939 = !DISubroutineType(types: !4940)
!4940 = !{!4941, !4829}
!4941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4942, size: 64)
!4942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_state", file: !185, line: 605, size: 1216, elements: !4943)
!4943 = !{!4944, !4945, !4946, !5069, !5070, !5071, !5072, !5090, !5091, !5092, !5093, !5094, !5095, !5096, !5097, !5100, !5101, !5102}
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !4942, file: !185, line: 607, baseType: !4829, size: 64)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4942, file: !185, line: 615, baseType: !4767, size: 64, offset: 64)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "best_encoder", scope: !4942, file: !185, line: 633, baseType: !4947, size: 64, offset: 128)
!4947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4948, size: 64)
!4948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder", file: !4949, line: 99, size: 960, elements: !4950)
!4949 = !DIFile(filename: "./include/drm/drm_encoder.h", directory: "/home/lizy2001/genbc/linux")
!4950 = !{!4951, !4952, !4953, !4954, !4955, !4956, !4957, !4958, !4959, !4960, !4961, !4976}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4948, file: !4949, line: 100, baseType: !3372, size: 64)
!4952 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4948, file: !4949, line: 101, baseType: !385, size: 128, offset: 64)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4948, file: !4949, line: 103, baseType: !4486, size: 256, offset: 192)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4948, file: !4949, line: 104, baseType: !870, size: 64, offset: 448)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_type", scope: !4948, file: !4949, line: 131, baseType: !115, size: 32, offset: 512)
!4956 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4948, file: !4949, line: 137, baseType: !7, size: 32, offset: 544)
!4957 = !DIDerivedType(tag: DW_TAG_member, name: "possible_crtcs", scope: !4948, file: !4949, line: 150, baseType: !1492, size: 32, offset: 576)
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "possible_clones", scope: !4948, file: !4949, line: 171, baseType: !1492, size: 32, offset: 608)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !4948, file: !4949, line: 178, baseType: !4767, size: 64, offset: 640)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "bridge_chain", scope: !4948, file: !4949, line: 184, baseType: !385, size: 128, offset: 704)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4948, file: !4949, line: 186, baseType: !4962, size: 64, offset: 832)
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4963, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4964)
!4964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder_funcs", file: !4949, line: 40, size: 256, elements: !4965)
!4965 = !{!4966, !4970, !4971, !4975}
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !4964, file: !4949, line: 48, baseType: !4967, size: 64)
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4968, size: 64)
!4968 = !DISubroutineType(types: !4969)
!4969 = !{null, !4947}
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !4964, file: !4949, line: 57, baseType: !4967, size: 64, offset: 64)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !4964, file: !4949, line: 72, baseType: !4972, size: 64, offset: 128)
!4972 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4973, size: 64)
!4973 = !DISubroutineType(types: !4974)
!4974 = !{!115, !4947}
!4975 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !4964, file: !4949, line: 83, baseType: !4967, size: 64, offset: 192)
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4948, file: !4949, line: 187, baseType: !4977, size: 64, offset: 896)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4979)
!4979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_encoder_helper_funcs", file: !4728, line: 519, size: 832, elements: !4980)
!4980 = !{!4981, !4985, !4989, !4993, !4994, !4995, !4999, !5054, !5058, !5062, !5063, !5064, !5065}
!4981 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !4979, file: !4728, line: 536, baseType: !4982, size: 64)
!4982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4983, size: 64)
!4983 = !DISubroutineType(types: !4984)
!4984 = !{null, !4947, !115}
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !4979, file: !4728, line: 569, baseType: !4986, size: 64, offset: 64)
!4986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4987, size: 64)
!4987 = !DISubroutineType(types: !4988)
!4988 = !{!113, !4947, !4586}
!4989 = !DIDerivedType(tag: DW_TAG_member, name: "mode_fixup", scope: !4979, file: !4728, line: 612, baseType: !4990, size: 64, offset: 128)
!4990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4991, size: 64)
!4991 = !DISubroutineType(types: !4992)
!4992 = !{!370, !4947, !4586, !4824}
!4993 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !4979, file: !4728, line: 629, baseType: !4967, size: 64, offset: 192)
!4994 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !4979, file: !4728, line: 644, baseType: !4967, size: 64, offset: 256)
!4995 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !4979, file: !4728, line: 668, baseType: !4996, size: 64, offset: 320)
!4996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4997, size: 64)
!4997 = !DISubroutineType(types: !4998)
!4998 = !{null, !4947, !4824, !4824}
!4999 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_mode_set", scope: !4979, file: !4728, line: 691, baseType: !5000, size: 64, offset: 384)
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = !DISubroutineType(types: !5002)
!5002 = !{null, !4947, !5003, !4941}
!5003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5004, size: 64)
!5004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_state", file: !4769, line: 99, size: 2624, elements: !5005)
!5005 = !{!5006, !5007, !5008, !5009, !5010, !5011, !5012, !5013, !5014, !5015, !5016, !5017, !5018, !5019, !5020, !5021, !5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5041, !5053}
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5004, file: !4769, line: 101, baseType: !4767, size: 64)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !5004, file: !4769, line: 108, baseType: !370, size: 8, offset: 64)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !5004, file: !4769, line: 123, baseType: !370, size: 8, offset: 72)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "planes_changed", scope: !5004, file: !4769, line: 129, baseType: !370, size: 1, offset: 80, flags: DIFlagBitField, extraData: i64 80)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "mode_changed", scope: !5004, file: !4769, line: 141, baseType: !370, size: 1, offset: 81, flags: DIFlagBitField, extraData: i64 80)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "active_changed", scope: !5004, file: !4769, line: 148, baseType: !370, size: 1, offset: 82, flags: DIFlagBitField, extraData: i64 80)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "connectors_changed", scope: !5004, file: !4769, line: 159, baseType: !370, size: 1, offset: 83, flags: DIFlagBitField, extraData: i64 80)
!5013 = !DIDerivedType(tag: DW_TAG_member, name: "zpos_changed", scope: !5004, file: !4769, line: 165, baseType: !370, size: 1, offset: 84, flags: DIFlagBitField, extraData: i64 80)
!5014 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgmt_changed", scope: !5004, file: !4769, line: 171, baseType: !370, size: 1, offset: 85, flags: DIFlagBitField, extraData: i64 80)
!5015 = !DIDerivedType(tag: DW_TAG_member, name: "no_vblank", scope: !5004, file: !4769, line: 207, baseType: !370, size: 1, offset: 86, flags: DIFlagBitField, extraData: i64 80)
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "plane_mask", scope: !5004, file: !4769, line: 213, baseType: !468, size: 32, offset: 96)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "connector_mask", scope: !5004, file: !4769, line: 219, baseType: !468, size: 32, offset: 128)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "encoder_mask", scope: !5004, file: !4769, line: 225, baseType: !468, size: 32, offset: 160)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "adjusted_mode", scope: !5004, file: !4769, line: 240, baseType: !4588, size: 960, offset: 192)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5004, file: !4769, line: 257, baseType: !4588, size: 960, offset: 1152)
!5021 = !DIDerivedType(tag: DW_TAG_member, name: "mode_blob", scope: !5004, file: !4769, line: 263, baseType: !5022, size: 64, offset: 2112)
!5022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5023, size: 64)
!5023 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_property_blob", file: !4500, line: 209, size: 704, elements: !5024)
!5024 = !{!5025, !5026, !5027, !5028, !5029, !5030}
!5025 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5023, file: !4500, line: 210, baseType: !4486, size: 256)
!5026 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5023, file: !4500, line: 211, baseType: !3372, size: 64, offset: 256)
!5027 = !DIDerivedType(tag: DW_TAG_member, name: "head_global", scope: !5023, file: !4500, line: 212, baseType: !385, size: 128, offset: 320)
!5028 = !DIDerivedType(tag: DW_TAG_member, name: "head_file", scope: !5023, file: !4500, line: 213, baseType: !385, size: 128, offset: 448)
!5029 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5023, file: !4500, line: 214, baseType: !1023, size: 64, offset: 576)
!5030 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5023, file: !4500, line: 215, baseType: !344, size: 64, offset: 640)
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "degamma_lut", scope: !5004, file: !4769, line: 272, baseType: !5022, size: 64, offset: 2176)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "ctm", scope: !5004, file: !4769, line: 280, baseType: !5022, size: 64, offset: 2240)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_lut", scope: !5004, file: !4769, line: 289, baseType: !5022, size: 64, offset: 2304)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "target_vblank", scope: !5004, file: !4769, line: 297, baseType: !468, size: 32, offset: 2368)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "async_flip", scope: !5004, file: !4769, line: 305, baseType: !370, size: 8, offset: 2400)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "vrr_enabled", scope: !5004, file: !4769, line: 314, baseType: !370, size: 8, offset: 2408)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_active", scope: !5004, file: !4769, line: 325, baseType: !370, size: 8, offset: 2416)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5004, file: !4769, line: 382, baseType: !5039, size: 64, offset: 2432)
!5039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5040, size: 64)
!5040 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_pending_vblank_event", file: !4769, line: 71, flags: DIFlagFwdDecl)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5004, file: !4769, line: 391, baseType: !5042, size: 64, offset: 2496)
!5042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5043, size: 64)
!5043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_commit", file: !411, line: 70, size: 960, elements: !5044)
!5044 = !{!5045, !5046, !5047, !5048, !5049, !5050, !5051, !5052}
!5045 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5043, file: !411, line: 76, baseType: !4767, size: 64)
!5046 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !5043, file: !411, line: 85, baseType: !350, size: 32, offset: 64)
!5047 = !DIDerivedType(tag: DW_TAG_member, name: "flip_done", scope: !5043, file: !411, line: 99, baseType: !2424, size: 192, offset: 128)
!5048 = !DIDerivedType(tag: DW_TAG_member, name: "hw_done", scope: !5043, file: !411, line: 117, baseType: !2424, size: 192, offset: 320)
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_done", scope: !5043, file: !411, line: 131, baseType: !2424, size: 192, offset: 512)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "commit_entry", scope: !5043, file: !411, line: 139, baseType: !385, size: 128, offset: 704)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !5043, file: !411, line: 146, baseType: !5039, size: 64, offset: 832)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "abort_completion", scope: !5043, file: !411, line: 155, baseType: !370, size: 8, offset: 896)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5004, file: !4769, line: 394, baseType: !3367, size: 64, offset: 2560)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "detect", scope: !4979, file: !4728, line: 710, baseType: !5055, size: 64, offset: 448)
!5055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5056, size: 64)
!5056 = !DISubroutineType(types: !5057)
!5057 = !{!190, !4947, !4829}
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_disable", scope: !4979, file: !4728, line: 733, baseType: !5059, size: 64, offset: 512)
!5059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5060, size: 64)
!5060 = !DISubroutineType(types: !5061)
!5061 = !{null, !4947, !3367}
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_enable", scope: !4979, file: !4728, line: 756, baseType: !5059, size: 64, offset: 576)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4979, file: !4728, line: 790, baseType: !4967, size: 64, offset: 640)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4979, file: !4728, line: 808, baseType: !4967, size: 64, offset: 704)
!5065 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !4979, file: !4728, line: 846, baseType: !5066, size: 64, offset: 768)
!5066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5067, size: 64)
!5067 = !DISubroutineType(types: !5068)
!5068 = !{!115, !4947, !5003, !4941}
!5069 = !DIDerivedType(tag: DW_TAG_member, name: "link_status", scope: !4942, file: !185, line: 639, baseType: !203, size: 32, offset: 192)
!5070 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4942, file: !185, line: 642, baseType: !3367, size: 64, offset: 256)
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !4942, file: !185, line: 649, baseType: !5042, size: 64, offset: 320)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "tv", scope: !4942, file: !185, line: 652, baseType: !5073, size: 384, offset: 384)
!5073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_tv_connector_state", file: !185, line: 590, size: 384, elements: !5074)
!5074 = !{!5075, !5076, !5083, !5084, !5085, !5086, !5087, !5088, !5089}
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "subconnector", scope: !5073, file: !185, line: 591, baseType: !207, size: 32)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "margins", scope: !5073, file: !185, line: 592, baseType: !5077, size: 128, offset: 32)
!5077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_tv_margins", file: !185, line: 556, size: 128, elements: !5078)
!5078 = !{!5079, !5080, !5081, !5082}
!5079 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !5077, file: !185, line: 560, baseType: !7, size: 32)
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !5077, file: !185, line: 565, baseType: !7, size: 32, offset: 32)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !5077, file: !185, line: 570, baseType: !7, size: 32, offset: 64)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !5077, file: !185, line: 575, baseType: !7, size: 32, offset: 96)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5073, file: !185, line: 593, baseType: !7, size: 32, offset: 160)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "brightness", scope: !5073, file: !185, line: 594, baseType: !7, size: 32, offset: 192)
!5085 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !5073, file: !185, line: 595, baseType: !7, size: 32, offset: 224)
!5086 = !DIDerivedType(tag: DW_TAG_member, name: "flicker_reduction", scope: !5073, file: !185, line: 596, baseType: !7, size: 32, offset: 256)
!5087 = !DIDerivedType(tag: DW_TAG_member, name: "overscan", scope: !5073, file: !185, line: 597, baseType: !7, size: 32, offset: 288)
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !5073, file: !185, line: 598, baseType: !7, size: 32, offset: 320)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "hue", scope: !5073, file: !185, line: 599, baseType: !7, size: 32, offset: 352)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_aware", scope: !4942, file: !185, line: 666, baseType: !370, size: 8, offset: 768)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "picture_aspect_ratio", scope: !4942, file: !185, line: 675, baseType: !157, size: 32, offset: 800)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "content_type", scope: !4942, file: !185, line: 683, baseType: !7, size: 32, offset: 832)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_content_type", scope: !4942, file: !185, line: 689, baseType: !7, size: 32, offset: 864)
!5094 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode", scope: !4942, file: !185, line: 695, baseType: !7, size: 32, offset: 896)
!5095 = !DIDerivedType(tag: DW_TAG_member, name: "content_protection", scope: !4942, file: !185, line: 701, baseType: !7, size: 32, offset: 928)
!5096 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !4942, file: !185, line: 708, baseType: !468, size: 32, offset: 960)
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_job", scope: !4942, file: !185, line: 721, baseType: !5098, size: 64, offset: 1024)
!5098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5099, size: 64)
!5099 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_writeback_job", file: !185, line: 721, flags: DIFlagFwdDecl)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "max_requested_bpc", scope: !4942, file: !185, line: 727, baseType: !364, size: 8, offset: 1088)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "max_bpc", scope: !4942, file: !185, line: 733, baseType: !364, size: 8, offset: 1096)
!5102 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_output_metadata", scope: !4942, file: !185, line: 739, baseType: !5022, size: 64, offset: 1152)
!5103 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !4908, file: !185, line: 949, baseType: !5104, size: 64, offset: 640)
!5104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5105, size: 64)
!5105 = !DISubroutineType(types: !5106)
!5106 = !{null, !4829, !4941}
!5107 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !4908, file: !185, line: 994, baseType: !5108, size: 64, offset: 704)
!5108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5109, size: 64)
!5109 = !DISubroutineType(types: !5110)
!5110 = !{!115, !4829, !4941, !4498, !4343}
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !4908, file: !185, line: 1017, baseType: !5112, size: 64, offset: 768)
!5112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5113, size: 64)
!5113 = !DISubroutineType(types: !5114)
!5114 = !{!115, !4829, !5115, !4498, !4342}
!5115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5116, size: 64)
!5116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4942)
!5117 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !4908, file: !185, line: 1031, baseType: !5118, size: 64, offset: 832)
!5118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5119, size: 64)
!5119 = !DISubroutineType(types: !5120)
!5120 = !{null, !5121, !5115}
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_printer", file: !249, line: 75, size: 256, elements: !5123)
!5123 = !{!5124, !5145, !5149, !5150}
!5124 = !DIDerivedType(tag: DW_TAG_member, name: "printfn", scope: !5122, file: !249, line: 77, baseType: !5125, size: 64)
!5125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5126, size: 64)
!5126 = !DISubroutineType(types: !5127)
!5127 = !{null, !5121, !5128}
!5128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "va_format", file: !335, line: 90, size: 128, elements: !5130)
!5130 = !{!5131, !5132}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "fmt", scope: !5129, file: !335, line: 91, baseType: !844, size: 64)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "va", scope: !5129, file: !335, line: 92, baseType: !5133, size: 64, offset: 64)
!5133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5134, size: 64)
!5134 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !5135, line: 99, baseType: !5136)
!5135 = !DIFile(filename: "/usr/lib/gcc/x86_64-linux-gnu/9/include/stdarg.h", directory: "")
!5136 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !5135, line: 40, baseType: !5137)
!5137 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, baseType: !5138)
!5138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5139, size: 192, elements: !630)
!5139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, size: 192, elements: !5140)
!5140 = !{!5141, !5142, !5143, !5144}
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !5139, file: !3, baseType: !7, size: 32)
!5142 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !5139, file: !3, baseType: !7, size: 32, offset: 32)
!5143 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !5139, file: !3, baseType: !344, size: 64, offset: 64)
!5144 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !5139, file: !3, baseType: !344, size: 64, offset: 128)
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "puts", scope: !5122, file: !249, line: 78, baseType: !5146, size: 64, offset: 64)
!5146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5147, size: 64)
!5147 = !DISubroutineType(types: !5148)
!5148 = !{null, !5121, !844}
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !5122, file: !249, line: 79, baseType: !344, size: 64, offset: 128)
!5150 = !DIDerivedType(tag: DW_TAG_member, name: "prefix", scope: !5122, file: !249, line: 80, baseType: !844, size: 64, offset: 192)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "edid_blob_ptr", scope: !4830, file: !185, line: 1292, baseType: !5022, size: 64, offset: 2624)
!5152 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4830, file: !185, line: 1295, baseType: !4493, size: 3136, offset: 2688)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "scaling_mode_property", scope: !4830, file: !185, line: 1301, baseType: !4498, size: 64, offset: 5824)
!5154 = !DIDerivedType(tag: DW_TAG_member, name: "vrr_capable_property", scope: !4830, file: !185, line: 1312, baseType: !4498, size: 64, offset: 5888)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_property", scope: !4830, file: !185, line: 1318, baseType: !4498, size: 64, offset: 5952)
!5156 = !DIDerivedType(tag: DW_TAG_member, name: "path_blob_ptr", scope: !4830, file: !185, line: 1326, baseType: !5022, size: 64, offset: 6016)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "max_bpc_property", scope: !4830, file: !185, line: 1332, baseType: !4498, size: 64, offset: 6080)
!5158 = !DIDerivedType(tag: DW_TAG_member, name: "polled", scope: !4830, file: !185, line: 1359, baseType: !5159, size: 8, offset: 6144)
!5159 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !343, line: 102, baseType: !364)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !4830, file: !185, line: 1367, baseType: !115, size: 32, offset: 6176)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4830, file: !185, line: 1370, baseType: !5162, size: 64, offset: 6208)
!5162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5163, size: 64)
!5163 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5164)
!5164 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_connector_helper_funcs", file: !4728, line: 868, size: 640, elements: !5165)
!5165 = !{!5166, !5167, !5171, !5175, !5180, !5184, !5188, !5192, !5193, !5199}
!5166 = !DIDerivedType(tag: DW_TAG_member, name: "get_modes", scope: !5164, file: !4728, line: 905, baseType: !4932, size: 64)
!5167 = !DIDerivedType(tag: DW_TAG_member, name: "detect_ctx", scope: !5164, file: !4728, line: 931, baseType: !5168, size: 64, offset: 64)
!5168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5169, size: 64)
!5169 = !DISubroutineType(types: !5170)
!5170 = !{!115, !4829, !4432, !370}
!5171 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !5164, file: !4728, line: 969, baseType: !5172, size: 64, offset: 128)
!5172 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5173, size: 64)
!5173 = !DISubroutineType(types: !5174)
!5174 = !{!113, !4829, !4824}
!5175 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid_ctx", scope: !5164, file: !4728, line: 1008, baseType: !5176, size: 64, offset: 192)
!5176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5177, size: 64)
!5177 = !DISubroutineType(types: !5178)
!5178 = !{!115, !4829, !4824, !4432, !5179}
!5179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !113, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_member, name: "best_encoder", scope: !5164, file: !4728, line: 1041, baseType: !5181, size: 64, offset: 256)
!5181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5182, size: 64)
!5182 = !DISubroutineType(types: !5183)
!5183 = !{!4947, !4829}
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_best_encoder", scope: !5164, file: !4728, line: 1068, baseType: !5185, size: 64, offset: 320)
!5185 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5186, size: 64)
!5186 = !DISubroutineType(types: !5187)
!5187 = !{!4947, !4829, !4941}
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5164, file: !4728, line: 1102, baseType: !5189, size: 64, offset: 384)
!5189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5190, size: 64)
!5190 = !DISubroutineType(types: !5191)
!5191 = !{!115, !4829, !3367}
!5192 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_commit", scope: !5164, file: !4728, line: 1117, baseType: !5104, size: 64, offset: 448)
!5193 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_writeback_job", scope: !5164, file: !4728, line: 1134, baseType: !5194, size: 64, offset: 512)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5195, size: 64)
!5195 = !DISubroutineType(types: !5196)
!5196 = !{!115, !5197, !5098}
!5197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5198, size: 64)
!5198 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_writeback_connector", file: !4728, line: 52, flags: DIFlagFwdDecl)
!5199 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_writeback_job", scope: !5164, file: !4728, line: 1149, baseType: !5200, size: 64, offset: 576)
!5200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5201, size: 64)
!5201 = !DISubroutineType(types: !5202)
!5202 = !{null, !5197, !5098}
!5203 = !DIDerivedType(tag: DW_TAG_member, name: "cmdline_mode", scope: !4830, file: !185, line: 1373, baseType: !5204, size: 672, offset: 6272)
!5204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_cmdline_mode", file: !185, line: 1043, size: 672, elements: !5205)
!5205 = !{!5206, !5207, !5208, !5209, !5210, !5211, !5212, !5213, !5214, !5215, !5216, !5217, !5218, !5219, !5220, !5221}
!5206 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5204, file: !185, line: 1049, baseType: !1933, size: 256)
!5207 = !DIDerivedType(tag: DW_TAG_member, name: "specified", scope: !5204, file: !185, line: 1056, baseType: !370, size: 8, offset: 256)
!5208 = !DIDerivedType(tag: DW_TAG_member, name: "refresh_specified", scope: !5204, file: !185, line: 1063, baseType: !370, size: 8, offset: 264)
!5209 = !DIDerivedType(tag: DW_TAG_member, name: "bpp_specified", scope: !5204, file: !185, line: 1070, baseType: !370, size: 8, offset: 272)
!5210 = !DIDerivedType(tag: DW_TAG_member, name: "xres", scope: !5204, file: !185, line: 1077, baseType: !115, size: 32, offset: 288)
!5211 = !DIDerivedType(tag: DW_TAG_member, name: "yres", scope: !5204, file: !185, line: 1084, baseType: !115, size: 32, offset: 320)
!5212 = !DIDerivedType(tag: DW_TAG_member, name: "bpp", scope: !5204, file: !185, line: 1091, baseType: !115, size: 32, offset: 352)
!5213 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !5204, file: !185, line: 1098, baseType: !115, size: 32, offset: 384)
!5214 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !5204, file: !185, line: 1105, baseType: !370, size: 8, offset: 416)
!5215 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !5204, file: !185, line: 1112, baseType: !370, size: 8, offset: 424)
!5216 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !5204, file: !185, line: 1120, baseType: !370, size: 8, offset: 432)
!5217 = !DIDerivedType(tag: DW_TAG_member, name: "margins", scope: !5204, file: !185, line: 1128, baseType: !370, size: 8, offset: 440)
!5218 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !5204, file: !185, line: 1136, baseType: !223, size: 32, offset: 448)
!5219 = !DIDerivedType(tag: DW_TAG_member, name: "rotation_reflection", scope: !5204, file: !185, line: 1146, baseType: !7, size: 32, offset: 480)
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "panel_orientation", scope: !5204, file: !185, line: 1154, baseType: !229, size: 32, offset: 512)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "tv_margins", scope: !5204, file: !185, line: 1159, baseType: !5077, size: 128, offset: 544)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "force", scope: !4830, file: !185, line: 1375, baseType: !223, size: 32, offset: 6944)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "override_edid", scope: !4830, file: !185, line: 1377, baseType: !370, size: 8, offset: 6976)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "epoch_counter", scope: !4830, file: !185, line: 1379, baseType: !504, size: 64, offset: 7040)
!5225 = !DIDerivedType(tag: DW_TAG_member, name: "possible_encoders", scope: !4830, file: !185, line: 1386, baseType: !468, size: 32, offset: 7104)
!5226 = !DIDerivedType(tag: DW_TAG_member, name: "encoder", scope: !4830, file: !185, line: 1394, baseType: !4947, size: 64, offset: 7168)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "eld", scope: !4830, file: !185, line: 1398, baseType: !5228, size: 1024, offset: 7232)
!5228 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5159, size: 1024, elements: !3747)
!5229 = !DIDerivedType(tag: DW_TAG_member, name: "latency_present", scope: !4830, file: !185, line: 1400, baseType: !5230, size: 16, offset: 8256)
!5230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !370, size: 16, elements: !1445)
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "video_latency", scope: !4830, file: !185, line: 1405, baseType: !5232, size: 64, offset: 8288)
!5232 = !DICompositeType(tag: DW_TAG_array_type, baseType: !115, size: 64, elements: !1445)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "audio_latency", scope: !4830, file: !185, line: 1410, baseType: !5232, size: 64, offset: 8352)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "ddc", scope: !4830, file: !185, line: 1421, baseType: !5235, size: 64, offset: 8448)
!5235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5236, size: 64)
!5236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter", file: !5237, line: 695, size: 7552, elements: !5238)
!5237 = !DIFile(filename: "./include/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!5238 = !{!5239, !5240, !5241, !5278, !5279, !5293, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5310, !5311, !5312, !5313, !5345, !5356}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5236, file: !5237, line: 696, baseType: !934, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !5236, file: !5237, line: 697, baseType: !7, size: 32, offset: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "algo", scope: !5236, file: !5237, line: 698, baseType: !5242, size: 64, offset: 128)
!5242 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5243, size: 64)
!5243 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5244)
!5244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_algorithm", file: !5237, line: 519, size: 320, elements: !5245)
!5245 = !{!5246, !5259, !5260, !5273, !5274}
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer", scope: !5244, file: !5237, line: 529, baseType: !5247, size: 64)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = !DISubroutineType(types: !5249)
!5249 = !{!115, !5235, !5250, !115}
!5250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5251, size: 64)
!5251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_msg", file: !5252, line: 69, size: 128, elements: !5253)
!5252 = !DIFile(filename: "./include/uapi/linux/i2c.h", directory: "/home/lizy2001/genbc/linux")
!5253 = !{!5254, !5255, !5256, !5257}
!5254 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !5251, file: !5252, line: 70, baseType: !382, size: 16)
!5255 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5251, file: !5252, line: 71, baseType: !382, size: 16, offset: 16)
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !5251, file: !5252, line: 84, baseType: !382, size: 16, offset: 32)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !5251, file: !5252, line: 85, baseType: !5258, size: 64, offset: 64)
!5258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "master_xfer_atomic", scope: !5244, file: !5237, line: 531, baseType: !5247, size: 64, offset: 64)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer", scope: !5244, file: !5237, line: 533, baseType: !5261, size: 64, offset: 128)
!5261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5262, size: 64)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{!115, !5235, !381, !383, !846, !364, !115, !5264}
!5264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5265, size: 64)
!5265 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "i2c_smbus_data", file: !5252, line: 135, size: 272, elements: !5266)
!5266 = !{!5267, !5268, !5269}
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "byte", scope: !5265, file: !5252, line: 136, baseType: !366, size: 8)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "word", scope: !5265, file: !5252, line: 137, baseType: !382, size: 16)
!5269 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !5265, file: !5252, line: 138, baseType: !5270, size: 272)
!5270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 272, elements: !5271)
!5271 = !{!5272}
!5272 = !DISubrange(count: 34)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "smbus_xfer_atomic", scope: !5244, file: !5237, line: 536, baseType: !5261, size: 64, offset: 192)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "functionality", scope: !5244, file: !5237, line: 541, baseType: !5275, size: 64, offset: 256)
!5275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5276, size: 64)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{!468, !5235}
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "algo_data", scope: !5236, file: !5237, line: 699, baseType: !344, size: 64, offset: 192)
!5279 = !DIDerivedType(tag: DW_TAG_member, name: "lock_ops", scope: !5236, file: !5237, line: 702, baseType: !5280, size: 64, offset: 256)
!5280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5281, size: 64)
!5281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5282)
!5282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_lock_operations", file: !5237, line: 557, size: 192, elements: !5283)
!5283 = !{!5284, !5288, !5292}
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "lock_bus", scope: !5282, file: !5237, line: 558, baseType: !5285, size: 64)
!5285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5286, size: 64)
!5286 = !DISubroutineType(types: !5287)
!5287 = !{null, !5235, !7}
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "trylock_bus", scope: !5282, file: !5237, line: 559, baseType: !5289, size: 64, offset: 64)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = !DISubroutineType(types: !5291)
!5291 = !{!115, !5235, !7}
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "unlock_bus", scope: !5282, file: !5237, line: 560, baseType: !5285, size: 64, offset: 128)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock", scope: !5236, file: !5237, line: 703, baseType: !5294, size: 192, offset: 320)
!5294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex", file: !5295, line: 30, size: 192, elements: !5296)
!5295 = !DIFile(filename: "./include/linux/rtmutex.h", directory: "/home/lizy2001/genbc/linux")
!5296 = !{!5297, !5298, !5299}
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !5294, file: !5295, line: 31, baseType: !566)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !5294, file: !5295, line: 32, baseType: !600, size: 128)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !5294, file: !5295, line: 33, baseType: !458, size: 64, offset: 128)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "mux_lock", scope: !5236, file: !5237, line: 704, baseType: !5294, size: 192, offset: 512)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !5236, file: !5237, line: 706, baseType: !115, size: 32, offset: 704)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "retries", scope: !5236, file: !5237, line: 707, baseType: !115, size: 32, offset: 736)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5236, file: !5237, line: 708, baseType: !3380, size: 5568, offset: 768)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "locked_flags", scope: !5236, file: !5237, line: 709, baseType: !341, size: 64, offset: 6336)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !5236, file: !5237, line: 713, baseType: !115, size: 32, offset: 6400)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5236, file: !5237, line: 714, baseType: !5307, size: 384, offset: 6432)
!5307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 384, elements: !5308)
!5308 = !{!5309}
!5309 = !DISubrange(count: 48)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "dev_released", scope: !5236, file: !5237, line: 715, baseType: !2424, size: 192, offset: 6848)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients_lock", scope: !5236, file: !5237, line: 717, baseType: !423, size: 192, offset: 7040)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "userspace_clients", scope: !5236, file: !5237, line: 718, baseType: !385, size: 128, offset: 7232)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "bus_recovery_info", scope: !5236, file: !5237, line: 720, baseType: !5314, size: 64, offset: 7360)
!5314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5315, size: 64)
!5315 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_bus_recovery_info", file: !5237, line: 618, size: 832, elements: !5316)
!5316 = !{!5317, !5321, !5322, !5326, !5327, !5328, !5329, !5333, !5334, !5337, !5338, !5341, !5344}
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "recover_bus", scope: !5315, file: !5237, line: 619, baseType: !5318, size: 64)
!5318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5319, size: 64)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{!115, !5235}
!5321 = !DIDerivedType(tag: DW_TAG_member, name: "get_scl", scope: !5315, file: !5237, line: 621, baseType: !5318, size: 64, offset: 64)
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "set_scl", scope: !5315, file: !5237, line: 622, baseType: !5323, size: 64, offset: 128)
!5323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5324, size: 64)
!5324 = !DISubroutineType(types: !5325)
!5325 = !{null, !5235, !115}
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "get_sda", scope: !5315, file: !5237, line: 623, baseType: !5318, size: 64, offset: 192)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "set_sda", scope: !5315, file: !5237, line: 624, baseType: !5323, size: 64, offset: 256)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "get_bus_free", scope: !5315, file: !5237, line: 625, baseType: !5318, size: 64, offset: 320)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_recovery", scope: !5315, file: !5237, line: 627, baseType: !5330, size: 64, offset: 384)
!5330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5331, size: 64)
!5331 = !DISubroutineType(types: !5332)
!5332 = !{null, !5235}
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_recovery", scope: !5315, file: !5237, line: 628, baseType: !5330, size: 64, offset: 448)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "scl_gpiod", scope: !5315, file: !5237, line: 631, baseType: !5335, size: 64, offset: 512)
!5335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5336, size: 64)
!5336 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !5237, line: 631, flags: DIFlagFwdDecl)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "sda_gpiod", scope: !5315, file: !5237, line: 632, baseType: !5335, size: 64, offset: 576)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "pinctrl", scope: !5315, file: !5237, line: 633, baseType: !5339, size: 64, offset: 640)
!5339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5340, size: 64)
!5340 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl", file: !5237, line: 633, flags: DIFlagFwdDecl)
!5341 = !DIDerivedType(tag: DW_TAG_member, name: "pins_default", scope: !5315, file: !5237, line: 634, baseType: !5342, size: 64, offset: 704)
!5342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5343, size: 64)
!5343 = !DICompositeType(tag: DW_TAG_structure_type, name: "pinctrl_state", file: !5237, line: 634, flags: DIFlagFwdDecl)
!5344 = !DIDerivedType(tag: DW_TAG_member, name: "pins_gpio", scope: !5315, file: !5237, line: 635, baseType: !5342, size: 64, offset: 768)
!5345 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !5236, file: !5237, line: 721, baseType: !5346, size: 64, offset: 7424)
!5346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5347, size: 64)
!5347 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5348)
!5348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "i2c_adapter_quirks", file: !5237, line: 664, size: 192, elements: !5349)
!5349 = !{!5350, !5351, !5352, !5353, !5354, !5355}
!5350 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5348, file: !5237, line: 665, baseType: !504, size: 64)
!5351 = !DIDerivedType(tag: DW_TAG_member, name: "max_num_msgs", scope: !5348, file: !5237, line: 666, baseType: !115, size: 32, offset: 64)
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "max_write_len", scope: !5348, file: !5237, line: 667, baseType: !381, size: 16, offset: 96)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "max_read_len", scope: !5348, file: !5237, line: 668, baseType: !381, size: 16, offset: 112)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_1st_msg_len", scope: !5348, file: !5237, line: 669, baseType: !381, size: 16, offset: 128)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "max_comb_2nd_msg_len", scope: !5348, file: !5237, line: 670, baseType: !381, size: 16, offset: 144)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "host_notify_domain", scope: !5236, file: !5237, line: 723, baseType: !3936, size: 64, offset: 7488)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "null_edid_counter", scope: !4830, file: !185, line: 1427, baseType: !115, size: 32, offset: 8512)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "bad_edid_counter", scope: !4830, file: !185, line: 1430, baseType: !7, size: 32, offset: 8544)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "edid_corrupt", scope: !4830, file: !185, line: 1437, baseType: !370, size: 8, offset: 8576)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "real_edid_checksum", scope: !4830, file: !185, line: 1443, baseType: !364, size: 8, offset: 8584)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "debugfs_entry", scope: !4830, file: !185, line: 1446, baseType: !772, size: 64, offset: 8640)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4830, file: !185, line: 1462, baseType: !4941, size: 64, offset: 8704)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "tile_blob_ptr", scope: !4830, file: !185, line: 1479, baseType: !5022, size: 64, offset: 8768)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "has_tile", scope: !4830, file: !185, line: 1482, baseType: !370, size: 8, offset: 8832)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "tile_group", scope: !4830, file: !185, line: 1484, baseType: !5366, size: 64, offset: 8896)
!5366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5367, size: 64)
!5367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_tile_group", file: !185, line: 1663, size: 256, elements: !5368)
!5368 = !{!5369, !5370, !5371, !5372}
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !5367, file: !185, line: 1664, baseType: !350, size: 32)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5367, file: !185, line: 1665, baseType: !3372, size: 64, offset: 64)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5367, file: !185, line: 1666, baseType: !115, size: 32, offset: 128)
!5372 = !DIDerivedType(tag: DW_TAG_member, name: "group_data", scope: !5367, file: !185, line: 1667, baseType: !398, size: 64, offset: 160)
!5373 = !DIDerivedType(tag: DW_TAG_member, name: "tile_is_single_monitor", scope: !4830, file: !185, line: 1486, baseType: !370, size: 8, offset: 8960)
!5374 = !DIDerivedType(tag: DW_TAG_member, name: "num_h_tile", scope: !4830, file: !185, line: 1490, baseType: !5159, size: 8, offset: 8968)
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "num_v_tile", scope: !4830, file: !185, line: 1490, baseType: !5159, size: 8, offset: 8976)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "tile_h_loc", scope: !4830, file: !185, line: 1493, baseType: !5159, size: 8, offset: 8984)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "tile_v_loc", scope: !4830, file: !185, line: 1493, baseType: !5159, size: 8, offset: 8992)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "tile_h_size", scope: !4830, file: !185, line: 1496, baseType: !380, size: 16, offset: 9008)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "tile_v_size", scope: !4830, file: !185, line: 1496, baseType: !380, size: 16, offset: 9024)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "free_node", scope: !4830, file: !185, line: 1505, baseType: !1064, size: 64, offset: 9088)
!5381 = !DIDerivedType(tag: DW_TAG_member, name: "hdr_sink_metadata", scope: !4830, file: !185, line: 1508, baseType: !5382, size: 96, offset: 9152)
!5382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_sink_metadata", file: !158, line: 378, size: 96, elements: !5383)
!5383 = !{!5384, !5385}
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !5382, file: !158, line: 382, baseType: !469, size: 32)
!5385 = !DIDerivedType(tag: DW_TAG_member, scope: !5382, file: !158, line: 386, baseType: !5386, size: 64, offset: 32)
!5386 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5382, file: !158, line: 386, size: 64, elements: !5387)
!5387 = !{!5388}
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "hdmi_type1", scope: !5386, file: !158, line: 387, baseType: !5389, size: 64)
!5389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hdr_static_metadata", file: !158, line: 365, size: 64, elements: !5390)
!5390 = !{!5391, !5392, !5393, !5394, !5395}
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "eotf", scope: !5389, file: !158, line: 366, baseType: !366, size: 8)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_type", scope: !5389, file: !158, line: 367, baseType: !366, size: 8, offset: 8)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "max_cll", scope: !5389, file: !158, line: 368, baseType: !382, size: 16, offset: 16)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "max_fall", scope: !5389, file: !158, line: 369, baseType: !382, size: 16, offset: 32)
!5395 = !DIDerivedType(tag: DW_TAG_member, name: "min_cll", scope: !5389, file: !158, line: 370, baseType: !382, size: 16, offset: 48)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "num_connectors", scope: !4819, file: !4769, line: 1199, baseType: !1023, size: 64, offset: 320)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "page_flip", scope: !4790, file: !4769, line: 583, baseType: !5398, size: 64, offset: 448)
!5398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5399, size: 64)
!5399 = !DISubroutineType(types: !5400)
!5400 = !{!115, !4767, !4480, !5039, !1492, !4432}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "page_flip_target", scope: !4790, file: !4769, line: 602, baseType: !5402, size: 64, offset: 512)
!5402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5403, size: 64)
!5403 = !DISubroutineType(types: !5404)
!5404 = !{!115, !4767, !4480, !5039, !1492, !1492, !4432}
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !4790, file: !4769, line: 622, baseType: !5406, size: 64, offset: 576)
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5407, size: 64)
!5407 = !DISubroutineType(types: !5408)
!5408 = !{!115, !4767, !4498, !4343}
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !4790, file: !4769, line: 656, baseType: !5410, size: 64, offset: 640)
!5410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5411, size: 64)
!5411 = !DISubroutineType(types: !5412)
!5412 = !{!5003, !4767}
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !4790, file: !4769, line: 666, baseType: !5414, size: 64, offset: 704)
!5414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5415, size: 64)
!5415 = !DISubroutineType(types: !5416)
!5416 = !{null, !4767, !5003}
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !4790, file: !4769, line: 711, baseType: !5418, size: 64, offset: 768)
!5418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5419, size: 64)
!5419 = !DISubroutineType(types: !5420)
!5420 = !{!115, !4767, !5003, !4498, !4343}
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !4790, file: !4769, line: 733, baseType: !5422, size: 64, offset: 832)
!5422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5423, size: 64)
!5423 = !DISubroutineType(types: !5424)
!5424 = !{!115, !4767, !5425, !4498, !4342}
!5425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5426, size: 64)
!5426 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5004)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !4790, file: !4769, line: 751, baseType: !5428, size: 64, offset: 896)
!5428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5429, size: 64)
!5429 = !DISubroutineType(types: !5430)
!5430 = !{!115, !4767}
!5431 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !4790, file: !4769, line: 762, baseType: !4793, size: 64, offset: 960)
!5432 = !DIDerivedType(tag: DW_TAG_member, name: "set_crc_source", scope: !4790, file: !4769, line: 791, baseType: !5433, size: 64, offset: 1024)
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5434, size: 64)
!5434 = !DISubroutineType(types: !5435)
!5435 = !{!115, !4767, !844}
!5436 = !DIDerivedType(tag: DW_TAG_member, name: "verify_crc_source", scope: !4790, file: !4769, line: 807, baseType: !5437, size: 64, offset: 1088)
!5437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5438, size: 64)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{!115, !4767, !844, !5440}
!5440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!5441 = !DIDerivedType(tag: DW_TAG_member, name: "get_crc_sources", scope: !4790, file: !4769, line: 829, baseType: !5442, size: 64, offset: 1152)
!5442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5443, size: 64)
!5443 = !DISubroutineType(types: !5444)
!5444 = !{!5445, !4767, !5440}
!5445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5446, size: 64)
!5446 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !844)
!5447 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !4790, file: !4769, line: 841, baseType: !5448, size: 64, offset: 1216)
!5448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5449, size: 64)
!5449 = !DISubroutineType(types: !5450)
!5450 = !{null, !5121, !5425}
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_counter", scope: !4790, file: !4769, line: 868, baseType: !5452, size: 64, offset: 1280)
!5452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5453, size: 64)
!5453 = !DISubroutineType(types: !5454)
!5454 = !{!468, !4767}
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "enable_vblank", scope: !4790, file: !4769, line: 881, baseType: !5428, size: 64, offset: 1344)
!5456 = !DIDerivedType(tag: DW_TAG_member, name: "disable_vblank", scope: !4790, file: !4769, line: 889, baseType: !4793, size: 64, offset: 1408)
!5457 = !DIDerivedType(tag: DW_TAG_member, name: "get_vblank_timestamp", scope: !4790, file: !4769, line: 927, baseType: !5458, size: 64, offset: 1472)
!5458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5459, size: 64)
!5459 = !DISubroutineType(types: !5460)
!5460 = !{!370, !4767, !1011, !5461, !370}
!5461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !549, size: 64)
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_size", scope: !4768, file: !4769, line: 1072, baseType: !1492, size: 32, offset: 3264)
!5463 = !DIDerivedType(tag: DW_TAG_member, name: "gamma_store", scope: !4768, file: !4769, line: 1078, baseType: !5464, size: 64, offset: 3328)
!5464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !380, size: 64)
!5465 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4768, file: !4769, line: 1081, baseType: !5466, size: 64, offset: 3392)
!5466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5467, size: 64)
!5467 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5468)
!5468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_helper_funcs", file: !4728, line: 61, size: 1024, elements: !5469)
!5469 = !{!5470, !5474, !5475, !5476, !5480, !5484, !5488, !5489, !5493, !5498, !5499, !5503, !5504, !5505, !5506, !5507}
!5470 = !DIDerivedType(tag: DW_TAG_member, name: "dpms", scope: !5468, file: !4728, line: 78, baseType: !5471, size: 64)
!5471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5472, size: 64)
!5472 = !DISubroutineType(types: !5473)
!5473 = !{null, !4767, !115}
!5474 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !5468, file: !4728, line: 93, baseType: !4793, size: 64, offset: 64)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5468, file: !4728, line: 108, baseType: !4793, size: 64, offset: 128)
!5476 = !DIDerivedType(tag: DW_TAG_member, name: "mode_valid", scope: !5468, file: !4728, line: 141, baseType: !5477, size: 64, offset: 192)
!5477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5478, size: 64)
!5478 = !DISubroutineType(types: !5479)
!5479 = !{!113, !4767, !4586}
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "mode_fixup", scope: !5468, file: !4728, line: 187, baseType: !5481, size: 64, offset: 256)
!5481 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5482, size: 64)
!5482 = !DISubroutineType(types: !5483)
!5483 = !{!370, !4767, !4586, !4824}
!5484 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set", scope: !5468, file: !4728, line: 206, baseType: !5485, size: 64, offset: 320)
!5485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5486, size: 64)
!5486 = !DISubroutineType(types: !5487)
!5487 = !{!115, !4767, !4824, !4824, !115, !115, !4480}
!5488 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set_nofb", scope: !5468, file: !4728, line: 231, baseType: !4793, size: 64, offset: 384)
!5489 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set_base", scope: !5468, file: !4728, line: 250, baseType: !5490, size: 64, offset: 448)
!5490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5491, size: 64)
!5491 = !DISubroutineType(types: !5492)
!5492 = !{!115, !4767, !115, !115, !4480}
!5493 = !DIDerivedType(tag: DW_TAG_member, name: "mode_set_base_atomic", scope: !5468, file: !4728, line: 267, baseType: !5494, size: 64, offset: 512)
!5494 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5495, size: 64)
!5495 = !DISubroutineType(types: !5496)
!5496 = !{!115, !4767, !4480, !115, !115, !5497}
!5497 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_set_atomic", file: !4728, line: 51, flags: DIFlagFwdDecl)
!5498 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !5468, file: !4728, line: 302, baseType: !4793, size: 64, offset: 576)
!5499 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5468, file: !4728, line: 355, baseType: !5500, size: 64, offset: 640)
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DISubroutineType(types: !5502)
!5502 = !{!115, !4767, !5003}
!5503 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_begin", scope: !5468, file: !4728, line: 376, baseType: !5414, size: 64, offset: 704)
!5504 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flush", scope: !5468, file: !4728, line: 400, baseType: !5414, size: 64, offset: 768)
!5505 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_enable", scope: !5468, file: !4728, line: 426, baseType: !5414, size: 64, offset: 832)
!5506 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_disable", scope: !5468, file: !4728, line: 451, baseType: !5414, size: 64, offset: 896)
!5507 = !DIDerivedType(tag: DW_TAG_member, name: "get_scanout_position", scope: !5468, file: !4728, line: 496, baseType: !5508, size: 64, offset: 960)
!5508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5509, size: 64)
!5509 = !DISubroutineType(types: !5510)
!5510 = !{!370, !4767, !370, !1011, !1011, !5461, !5461, !4586}
!5511 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4768, file: !4769, line: 1084, baseType: !4493, size: 3136, offset: 3456)
!5512 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4768, file: !4769, line: 1099, baseType: !5003, size: 64, offset: 6592)
!5513 = !DIDerivedType(tag: DW_TAG_member, name: "commit_list", scope: !4768, file: !4769, line: 1116, baseType: !385, size: 128, offset: 6656)
!5514 = !DIDerivedType(tag: DW_TAG_member, name: "commit_lock", scope: !4768, file: !4769, line: 1123, baseType: !436, offset: 6784)
!5515 = !DIDerivedType(tag: DW_TAG_member, name: "crc", scope: !4768, file: !4769, line: 1139, baseType: !5516, size: 448, offset: 6784)
!5516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_crc", file: !5517, line: 53, size: 448, elements: !5518)
!5517 = !DIFile(filename: "./include/drm/drm_debugfs_crc.h", directory: "/home/lizy2001/genbc/linux")
!5518 = !{!5519, !5520, !5521, !5522, !5523, !5533, !5534, !5535, !5536}
!5519 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5516, file: !5517, line: 54, baseType: !436)
!5520 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5516, file: !5517, line: 55, baseType: !844, size: 64)
!5521 = !DIDerivedType(tag: DW_TAG_member, name: "opened", scope: !5516, file: !5517, line: 56, baseType: !370, size: 8, offset: 64)
!5522 = !DIDerivedType(tag: DW_TAG_member, name: "overflow", scope: !5516, file: !5517, line: 56, baseType: !370, size: 8, offset: 72)
!5523 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !5516, file: !5517, line: 57, baseType: !5524, size: 64, offset: 128)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_crtc_crc_entry", file: !5517, line: 33, size: 384, elements: !5526)
!5526 = !{!5527, !5528, !5529}
!5527 = !DIDerivedType(tag: DW_TAG_member, name: "has_frame_counter", scope: !5525, file: !5517, line: 34, baseType: !370, size: 8)
!5528 = !DIDerivedType(tag: DW_TAG_member, name: "frame", scope: !5525, file: !5517, line: 35, baseType: !1492, size: 32, offset: 32)
!5529 = !DIDerivedType(tag: DW_TAG_member, name: "crcs", scope: !5525, file: !5517, line: 36, baseType: !5530, size: 320, offset: 64)
!5530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1492, size: 320, elements: !5531)
!5531 = !{!5532}
!5532 = !DISubrange(count: 10)
!5533 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5516, file: !5517, line: 58, baseType: !115, size: 32, offset: 192)
!5534 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5516, file: !5517, line: 58, baseType: !115, size: 32, offset: 224)
!5535 = !DIDerivedType(tag: DW_TAG_member, name: "values_cnt", scope: !5516, file: !5517, line: 59, baseType: !1023, size: 64, offset: 256)
!5536 = !DIDerivedType(tag: DW_TAG_member, name: "wq", scope: !5516, file: !5517, line: 60, baseType: !1201, size: 128, offset: 320)
!5537 = !DIDerivedType(tag: DW_TAG_member, name: "fence_context", scope: !4768, file: !4769, line: 1146, baseType: !7, size: 32, offset: 7232)
!5538 = !DIDerivedType(tag: DW_TAG_member, name: "fence_lock", scope: !4768, file: !4769, line: 1153, baseType: !436, offset: 7264)
!5539 = !DIDerivedType(tag: DW_TAG_member, name: "fence_seqno", scope: !4768, file: !4769, line: 1160, baseType: !341, size: 64, offset: 7296)
!5540 = !DIDerivedType(tag: DW_TAG_member, name: "timeline_name", scope: !4768, file: !4769, line: 1167, baseType: !1933, size: 256, offset: 7360)
!5541 = !DIDerivedType(tag: DW_TAG_member, name: "self_refresh_data", scope: !4768, file: !4769, line: 1174, baseType: !5542, size: 64, offset: 7616)
!5542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5543, size: 64)
!5543 = !DICompositeType(tag: DW_TAG_structure_type, name: "drm_self_refresh_data", file: !4769, line: 56, flags: DIFlagFwdDecl)
!5544 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !4753, file: !179, line: 641, baseType: !4480, size: 64, offset: 1280)
!5545 = !DIDerivedType(tag: DW_TAG_member, name: "old_fb", scope: !4753, file: !179, line: 649, baseType: !4480, size: 64, offset: 1344)
!5546 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !4753, file: !179, line: 652, baseType: !5547, size: 64, offset: 1408)
!5547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5548, size: 64)
!5548 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5549)
!5549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_funcs", file: !179, line: 256, size: 832, elements: !5550)
!5550 = !{!5551, !5555, !5559, !5563, !5564, !5568, !5609, !5613, !5617, !5623, !5627, !5628, !5632}
!5551 = !DIDerivedType(tag: DW_TAG_member, name: "update_plane", scope: !5549, file: !179, line: 283, baseType: !5552, size: 64)
!5552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5553, size: 64)
!5553 = !DISubroutineType(types: !5554)
!5554 = !{!115, !4752, !4767, !4480, !115, !115, !7, !7, !1492, !1492, !1492, !1492, !4432}
!5555 = !DIDerivedType(tag: DW_TAG_member, name: "disable_plane", scope: !5549, file: !179, line: 306, baseType: !5556, size: 64, offset: 64)
!5556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5557, size: 64)
!5557 = !DISubroutineType(types: !5558)
!5558 = !{!115, !4752, !4432}
!5559 = !DIDerivedType(tag: DW_TAG_member, name: "destroy", scope: !5549, file: !179, line: 316, baseType: !5560, size: 64, offset: 128)
!5560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5561, size: 64)
!5561 = !DISubroutineType(types: !5562)
!5562 = !{null, !4752}
!5563 = !DIDerivedType(tag: DW_TAG_member, name: "reset", scope: !5549, file: !179, line: 328, baseType: !5560, size: 64, offset: 192)
!5564 = !DIDerivedType(tag: DW_TAG_member, name: "set_property", scope: !5549, file: !179, line: 344, baseType: !5565, size: 64, offset: 256)
!5565 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5566, size: 64)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{!115, !4752, !4498, !4343}
!5568 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5549, file: !179, line: 378, baseType: !5569, size: 64, offset: 320)
!5569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5570, size: 64)
!5570 = !DISubroutineType(types: !5571)
!5571 = !{!5572, !4752}
!5572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5573, size: 64)
!5573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_state", file: !179, line: 47, size: 1216, elements: !5574)
!5574 = !{!5575, !5576, !5577, !5578, !5581, !5582, !5583, !5584, !5585, !5586, !5587, !5588, !5589, !5590, !5591, !5592, !5593, !5594, !5595, !5596, !5597, !5605, !5606, !5607, !5608}
!5575 = !DIDerivedType(tag: DW_TAG_member, name: "plane", scope: !5573, file: !179, line: 49, baseType: !4752, size: 64)
!5576 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5573, file: !179, line: 57, baseType: !4767, size: 64, offset: 64)
!5577 = !DIDerivedType(tag: DW_TAG_member, name: "fb", scope: !5573, file: !179, line: 65, baseType: !4480, size: 64, offset: 128)
!5578 = !DIDerivedType(tag: DW_TAG_member, name: "fence", scope: !5573, file: !179, line: 80, baseType: !5579, size: 64, offset: 192)
!5579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5580, size: 64)
!5580 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_fence", file: !179, line: 80, flags: DIFlagFwdDecl)
!5581 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_x", scope: !5573, file: !179, line: 89, baseType: !1460, size: 32, offset: 256)
!5582 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_y", scope: !5573, file: !179, line: 96, baseType: !1460, size: 32, offset: 288)
!5583 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_w", scope: !5573, file: !179, line: 100, baseType: !1492, size: 32, offset: 320)
!5584 = !DIDerivedType(tag: DW_TAG_member, name: "crtc_h", scope: !5573, file: !179, line: 100, baseType: !1492, size: 32, offset: 352)
!5585 = !DIDerivedType(tag: DW_TAG_member, name: "src_x", scope: !5573, file: !179, line: 106, baseType: !1492, size: 32, offset: 384)
!5586 = !DIDerivedType(tag: DW_TAG_member, name: "src_y", scope: !5573, file: !179, line: 111, baseType: !1492, size: 32, offset: 416)
!5587 = !DIDerivedType(tag: DW_TAG_member, name: "src_h", scope: !5573, file: !179, line: 114, baseType: !1492, size: 32, offset: 448)
!5588 = !DIDerivedType(tag: DW_TAG_member, name: "src_w", scope: !5573, file: !179, line: 114, baseType: !1492, size: 32, offset: 480)
!5589 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !5573, file: !179, line: 122, baseType: !381, size: 16, offset: 512)
!5590 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_blend_mode", scope: !5573, file: !179, line: 130, baseType: !380, size: 16, offset: 528)
!5591 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !5573, file: !179, line: 137, baseType: !7, size: 32, offset: 544)
!5592 = !DIDerivedType(tag: DW_TAG_member, name: "zpos", scope: !5573, file: !179, line: 152, baseType: !7, size: 32, offset: 576)
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_zpos", scope: !5573, file: !179, line: 161, baseType: !7, size: 32, offset: 608)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "color_encoding", scope: !5573, file: !179, line: 168, baseType: !166, size: 32, offset: 640)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "color_range", scope: !5573, file: !179, line: 175, baseType: !173, size: 32, offset: 672)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "fb_damage_clips", scope: !5573, file: !179, line: 185, baseType: !5022, size: 64, offset: 704)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !5573, file: !179, line: 207, baseType: !5598, size: 128, offset: 768)
!5598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_rect", file: !5599, line: 43, size: 128, elements: !5600)
!5599 = !DIFile(filename: "./include/drm/drm_rect.h", directory: "/home/lizy2001/genbc/linux")
!5600 = !{!5601, !5602, !5603, !5604}
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !5598, file: !5599, line: 44, baseType: !115, size: 32)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !5598, file: !5599, line: 44, baseType: !115, size: 32, offset: 32)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !5598, file: !5599, line: 44, baseType: !115, size: 32, offset: 64)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !5598, file: !5599, line: 44, baseType: !115, size: 32, offset: 96)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !5573, file: !179, line: 207, baseType: !5598, size: 128, offset: 896)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "visible", scope: !5573, file: !179, line: 215, baseType: !370, size: 8, offset: 1024)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5573, file: !179, line: 223, baseType: !5042, size: 64, offset: 1088)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5573, file: !179, line: 226, baseType: !3367, size: 64, offset: 1152)
!5609 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5549, file: !179, line: 388, baseType: !5610, size: 64, offset: 384)
!5610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5611, size: 64)
!5611 = !DISubroutineType(types: !5612)
!5612 = !{null, !4752, !5572}
!5613 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_set_property", scope: !5549, file: !179, line: 433, baseType: !5614, size: 64, offset: 448)
!5614 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5615, size: 64)
!5615 = !DISubroutineType(types: !5616)
!5616 = !{!115, !4752, !5572, !4498, !4343}
!5617 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_get_property", scope: !5549, file: !179, line: 456, baseType: !5618, size: 64, offset: 512)
!5618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5619, size: 64)
!5619 = !DISubroutineType(types: !5620)
!5620 = !{!115, !4752, !5621, !4498, !4342}
!5621 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5622, size: 64)
!5622 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5573)
!5623 = !DIDerivedType(tag: DW_TAG_member, name: "late_register", scope: !5549, file: !179, line: 473, baseType: !5624, size: 64, offset: 576)
!5624 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5625, size: 64)
!5625 = !DISubroutineType(types: !5626)
!5626 = !{!115, !4752}
!5627 = !DIDerivedType(tag: DW_TAG_member, name: "early_unregister", scope: !5549, file: !179, line: 484, baseType: !5560, size: 64, offset: 640)
!5628 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_print_state", scope: !5549, file: !179, line: 495, baseType: !5629, size: 64, offset: 704)
!5629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5630, size: 64)
!5630 = !DISubroutineType(types: !5631)
!5631 = !{null, !5121, !5621}
!5632 = !DIDerivedType(tag: DW_TAG_member, name: "format_mod_supported", scope: !5549, file: !179, line: 514, baseType: !5633, size: 64, offset: 768)
!5633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5634, size: 64)
!5634 = !DISubroutineType(types: !5635)
!5635 = !{!370, !4752, !1492, !4343}
!5636 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4753, file: !179, line: 655, baseType: !4493, size: 3136, offset: 1472)
!5637 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4753, file: !179, line: 658, baseType: !178, size: 32, offset: 4608)
!5638 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !4753, file: !179, line: 664, baseType: !7, size: 32, offset: 4640)
!5639 = !DIDerivedType(tag: DW_TAG_member, name: "helper_private", scope: !4753, file: !179, line: 667, baseType: !5640, size: 64, offset: 4672)
!5640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5641, size: 64)
!5641 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5642)
!5642 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_plane_helper_funcs", file: !4728, line: 1170, size: 448, elements: !5643)
!5643 = !{!5644, !5648, !5649, !5650, !5651, !5652, !5653}
!5644 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_fb", scope: !5642, file: !4728, line: 1202, baseType: !5645, size: 64)
!5645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5646, size: 64)
!5646 = !DISubroutineType(types: !5647)
!5647 = !{!115, !4752, !5572}
!5648 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup_fb", scope: !5642, file: !4728, line: 1213, baseType: !5610, size: 64, offset: 64)
!5649 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_check", scope: !5642, file: !4728, line: 1252, baseType: !5645, size: 64, offset: 128)
!5650 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_update", scope: !5642, file: !4728, line: 1270, baseType: !5610, size: 64, offset: 192)
!5651 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_disable", scope: !5642, file: !4728, line: 1294, baseType: !5610, size: 64, offset: 256)
!5652 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_async_check", scope: !5642, file: !4728, line: 1313, baseType: !5645, size: 64, offset: 320)
!5653 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_async_update", scope: !5642, file: !4728, line: 1352, baseType: !5610, size: 64, offset: 384)
!5654 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4753, file: !179, line: 682, baseType: !5572, size: 64, offset: 4736)
!5655 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_property", scope: !4753, file: !179, line: 689, baseType: !4498, size: 64, offset: 4800)
!5656 = !DIDerivedType(tag: DW_TAG_member, name: "zpos_property", scope: !4753, file: !179, line: 695, baseType: !4498, size: 64, offset: 4864)
!5657 = !DIDerivedType(tag: DW_TAG_member, name: "rotation_property", scope: !4753, file: !179, line: 701, baseType: !4498, size: 64, offset: 4928)
!5658 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode_property", scope: !4753, file: !179, line: 709, baseType: !4498, size: 64, offset: 4992)
!5659 = !DIDerivedType(tag: DW_TAG_member, name: "color_encoding_property", scope: !4753, file: !179, line: 718, baseType: !4498, size: 64, offset: 5056)
!5660 = !DIDerivedType(tag: DW_TAG_member, name: "color_range_property", scope: !4753, file: !179, line: 726, baseType: !4498, size: 64, offset: 5120)
!5661 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4749, file: !411, line: 160, baseType: !5572, size: 64, offset: 64)
!5662 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !4749, file: !411, line: 160, baseType: !5572, size: 64, offset: 128)
!5663 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !4749, file: !411, line: 160, baseType: !5572, size: 64, offset: 192)
!5664 = !DIDerivedType(tag: DW_TAG_member, name: "crtcs", scope: !3368, file: !411, line: 351, baseType: !5665, size: 64, offset: 256)
!5665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5666, size: 64)
!5666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_crtcs_state", file: !411, line: 163, size: 448, elements: !5667)
!5667 = !{!5668, !5669, !5670, !5671, !5672, !5673, !5675}
!5668 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5666, file: !411, line: 164, baseType: !4767, size: 64)
!5669 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5666, file: !411, line: 165, baseType: !5003, size: 64, offset: 64)
!5670 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !5666, file: !411, line: 165, baseType: !5003, size: 64, offset: 128)
!5671 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !5666, file: !411, line: 165, baseType: !5003, size: 64, offset: 192)
!5672 = !DIDerivedType(tag: DW_TAG_member, name: "commit", scope: !5666, file: !411, line: 175, baseType: !5042, size: 64, offset: 256)
!5673 = !DIDerivedType(tag: DW_TAG_member, name: "out_fence_ptr", scope: !5666, file: !411, line: 177, baseType: !5674, size: 64, offset: 320)
!5674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1461, size: 64)
!5675 = !DIDerivedType(tag: DW_TAG_member, name: "last_vblank_count", scope: !5666, file: !411, line: 178, baseType: !504, size: 64, offset: 384)
!5676 = !DIDerivedType(tag: DW_TAG_member, name: "num_connector", scope: !3368, file: !411, line: 352, baseType: !115, size: 32, offset: 320)
!5677 = !DIDerivedType(tag: DW_TAG_member, name: "connectors", scope: !3368, file: !411, line: 353, baseType: !5678, size: 64, offset: 384)
!5678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5679, size: 64)
!5679 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_connnectors_state", file: !411, line: 181, size: 320, elements: !5680)
!5680 = !{!5681, !5682, !5683, !5684, !5685}
!5681 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5679, file: !411, line: 182, baseType: !4829, size: 64)
!5682 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5679, file: !411, line: 183, baseType: !4941, size: 64, offset: 64)
!5683 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !5679, file: !411, line: 183, baseType: !4941, size: 64, offset: 128)
!5684 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !5679, file: !411, line: 183, baseType: !4941, size: 64, offset: 192)
!5685 = !DIDerivedType(tag: DW_TAG_member, name: "out_fence_ptr", scope: !5679, file: !411, line: 191, baseType: !5674, size: 64, offset: 256)
!5686 = !DIDerivedType(tag: DW_TAG_member, name: "num_private_objs", scope: !3368, file: !411, line: 354, baseType: !115, size: 32, offset: 448)
!5687 = !DIDerivedType(tag: DW_TAG_member, name: "private_objs", scope: !3368, file: !411, line: 355, baseType: !5688, size: 64, offset: 512)
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 64)
!5689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__drm_private_objs_state", file: !411, line: 302, size: 256, elements: !5690)
!5690 = !{!5691, !5693, !5694, !5695}
!5691 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !5689, file: !411, line: 303, baseType: !5692, size: 64)
!5692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !410, size: 64)
!5693 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !5689, file: !411, line: 304, baseType: !3363, size: 64, offset: 64)
!5694 = !DIDerivedType(tag: DW_TAG_member, name: "old_state", scope: !5689, file: !411, line: 304, baseType: !3363, size: 64, offset: 128)
!5695 = !DIDerivedType(tag: DW_TAG_member, name: "new_state", scope: !5689, file: !411, line: 304, baseType: !3363, size: 64, offset: 192)
!5696 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_ctx", scope: !3368, file: !411, line: 357, baseType: !4432, size: 64, offset: 576)
!5697 = !DIDerivedType(tag: DW_TAG_member, name: "fake_commit", scope: !3368, file: !411, line: 369, baseType: !5042, size: 64, offset: 640)
!5698 = !DIDerivedType(tag: DW_TAG_member, name: "commit_work", scope: !3368, file: !411, line: 377, baseType: !1991, size: 256, offset: 704)
!5699 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !410, file: !411, line: 275, baseType: !5700, size: 64, offset: 576)
!5700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5701, size: 64)
!5701 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5702)
!5702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_private_state_funcs", file: !411, line: 207, size: 128, elements: !5703)
!5703 = !{!5704, !5708}
!5704 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_duplicate_state", scope: !5702, file: !411, line: 219, baseType: !5705, size: 64)
!5705 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5706, size: 64)
!5706 = !DISubroutineType(types: !5707)
!5707 = !{!3363, !5692}
!5708 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_destroy_state", scope: !5702, file: !411, line: 226, baseType: !5709, size: 64, offset: 64)
!5709 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5710, size: 64)
!5710 = !DISubroutineType(types: !5711)
!5711 = !{null, !5692, !3363}
!5712 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !407, file: !347, line: 577, baseType: !3372, size: 64, offset: 640)
!5713 = !DIDerivedType(tag: DW_TAG_member, name: "cbs", scope: !407, file: !347, line: 581, baseType: !5714, size: 64, offset: 704)
!5714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5715, size: 64)
!5715 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5716)
!5716 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_mst_topology_cbs", file: !347, line: 516, size: 128, elements: !5717)
!5717 = !{!5718, !5722}
!5718 = !DIDerivedType(tag: DW_TAG_member, name: "add_connector", scope: !5716, file: !347, line: 518, baseType: !5719, size: 64)
!5719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5720, size: 64)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{!4829, !406, !345, !844}
!5722 = !DIDerivedType(tag: DW_TAG_member, name: "poll_hpd_irq", scope: !5716, file: !347, line: 527, baseType: !5723, size: 64, offset: 64)
!5723 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5724, size: 64)
!5724 = !DISubroutineType(types: !5725)
!5725 = !{null, !406}
!5726 = !DIDerivedType(tag: DW_TAG_member, name: "max_dpcd_transaction_bytes", scope: !407, file: !347, line: 586, baseType: !115, size: 32, offset: 768)
!5727 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !407, file: !347, line: 591, baseType: !5728, size: 64, offset: 832)
!5728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5729, size: 64)
!5729 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_aux", file: !311, line: 1580, size: 9472, elements: !5730)
!5730 = !{!5731, !5732, !5733, !5734, !5735, !5736, !5737, !5738, !5750, !5751, !5752, !5761}
!5731 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5729, file: !311, line: 1581, baseType: !844, size: 64)
!5732 = !DIDerivedType(tag: DW_TAG_member, name: "ddc", scope: !5729, file: !311, line: 1582, baseType: !5236, size: 7552, offset: 64)
!5733 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5729, file: !311, line: 1583, baseType: !3379, size: 64, offset: 7616)
!5734 = !DIDerivedType(tag: DW_TAG_member, name: "crtc", scope: !5729, file: !311, line: 1584, baseType: !4767, size: 64, offset: 7680)
!5735 = !DIDerivedType(tag: DW_TAG_member, name: "hw_mutex", scope: !5729, file: !311, line: 1585, baseType: !423, size: 192, offset: 7744)
!5736 = !DIDerivedType(tag: DW_TAG_member, name: "crc_work", scope: !5729, file: !311, line: 1586, baseType: !1991, size: 256, offset: 7936)
!5737 = !DIDerivedType(tag: DW_TAG_member, name: "crc_count", scope: !5729, file: !311, line: 1587, baseType: !364, size: 8, offset: 8192)
!5738 = !DIDerivedType(tag: DW_TAG_member, name: "transfer", scope: !5729, file: !311, line: 1588, baseType: !5739, size: 64, offset: 8256)
!5739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5740, size: 64)
!5740 = !DISubroutineType(types: !5741)
!5741 = !{!1095, !5728, !5742}
!5742 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5743, size: 64)
!5743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_aux_msg", file: !311, line: 1514, size: 192, elements: !5744)
!5744 = !{!5745, !5746, !5747, !5748, !5749}
!5745 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !5743, file: !311, line: 1515, baseType: !7, size: 32)
!5746 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !5743, file: !311, line: 1516, baseType: !364, size: 8, offset: 32)
!5747 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !5743, file: !311, line: 1517, baseType: !364, size: 8, offset: 40)
!5748 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5743, file: !311, line: 1518, baseType: !344, size: 64, offset: 64)
!5749 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5743, file: !311, line: 1519, baseType: !1023, size: 64, offset: 128)
!5750 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_nack_count", scope: !5729, file: !311, line: 1593, baseType: !7, size: 32, offset: 8320)
!5751 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_defer_count", scope: !5729, file: !311, line: 1597, baseType: !7, size: 32, offset: 8352)
!5752 = !DIDerivedType(tag: DW_TAG_member, name: "cec", scope: !5729, file: !311, line: 1601, baseType: !5753, size: 1024, offset: 8384)
!5753 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_aux_cec", file: !311, line: 1533, size: 1024, elements: !5754)
!5754 = !{!5755, !5756, !5759, !5760}
!5755 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5753, file: !311, line: 1534, baseType: !423, size: 192)
!5756 = !DIDerivedType(tag: DW_TAG_member, name: "adap", scope: !5753, file: !311, line: 1535, baseType: !5757, size: 64, offset: 192)
!5757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5758, size: 64)
!5758 = !DICompositeType(tag: DW_TAG_structure_type, name: "cec_adapter", file: !311, line: 1522, flags: DIFlagFwdDecl)
!5759 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !5753, file: !311, line: 1536, baseType: !4829, size: 64, offset: 256)
!5760 = !DIDerivedType(tag: DW_TAG_member, name: "unregister_work", scope: !5753, file: !311, line: 1537, baseType: !4647, size: 704, offset: 320)
!5761 = !DIDerivedType(tag: DW_TAG_member, name: "is_remote", scope: !5729, file: !311, line: 1605, baseType: !370, size: 8, offset: 9408)
!5762 = !DIDerivedType(tag: DW_TAG_member, name: "max_payloads", scope: !407, file: !347, line: 595, baseType: !115, size: 32, offset: 896)
!5763 = !DIDerivedType(tag: DW_TAG_member, name: "conn_base_id", scope: !407, file: !347, line: 600, baseType: !115, size: 32, offset: 928)
!5764 = !DIDerivedType(tag: DW_TAG_member, name: "up_req_recv", scope: !407, file: !347, line: 605, baseType: !5765, size: 2608, offset: 960)
!5765 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_sideband_msg_rx", file: !347, line: 180, size: 2608, elements: !5766)
!5766 = !{!5767, !5769, !5773, !5774, !5775, !5776, !5777, !5778, !5779}
!5767 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !5765, file: !347, line: 181, baseType: !5768, size: 384)
!5768 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 384, elements: !5308)
!5769 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !5765, file: !347, line: 182, baseType: !5770, size: 2048, offset: 384)
!5770 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 2048, elements: !5771)
!5771 = !{!5772}
!5772 = !DISubrange(count: 256)
!5773 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk_len", scope: !5765, file: !347, line: 183, baseType: !364, size: 8, offset: 2432)
!5774 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk_idx", scope: !5765, file: !347, line: 184, baseType: !364, size: 8, offset: 2440)
!5775 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk_hdrlen", scope: !5765, file: !347, line: 185, baseType: !364, size: 8, offset: 2448)
!5776 = !DIDerivedType(tag: DW_TAG_member, name: "curlen", scope: !5765, file: !347, line: 186, baseType: !364, size: 8, offset: 2456)
!5777 = !DIDerivedType(tag: DW_TAG_member, name: "have_somt", scope: !5765, file: !347, line: 187, baseType: !370, size: 8, offset: 2464)
!5778 = !DIDerivedType(tag: DW_TAG_member, name: "have_eomt", scope: !5765, file: !347, line: 188, baseType: !370, size: 8, offset: 2472)
!5779 = !DIDerivedType(tag: DW_TAG_member, name: "initial_hdr", scope: !5765, file: !347, line: 189, baseType: !5780, size: 128, offset: 2480)
!5780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_sideband_msg_hdr", file: !347, line: 168, size: 128, elements: !5781)
!5781 = !{!5782, !5783, !5784, !5785, !5786, !5787, !5788, !5789, !5790}
!5782 = !DIDerivedType(tag: DW_TAG_member, name: "lct", scope: !5780, file: !347, line: 169, baseType: !364, size: 8)
!5783 = !DIDerivedType(tag: DW_TAG_member, name: "lcr", scope: !5780, file: !347, line: 170, baseType: !364, size: 8, offset: 8)
!5784 = !DIDerivedType(tag: DW_TAG_member, name: "rad", scope: !5780, file: !347, line: 171, baseType: !398, size: 64, offset: 16)
!5785 = !DIDerivedType(tag: DW_TAG_member, name: "broadcast", scope: !5780, file: !347, line: 172, baseType: !370, size: 8, offset: 80)
!5786 = !DIDerivedType(tag: DW_TAG_member, name: "path_msg", scope: !5780, file: !347, line: 173, baseType: !370, size: 8, offset: 88)
!5787 = !DIDerivedType(tag: DW_TAG_member, name: "msg_len", scope: !5780, file: !347, line: 174, baseType: !364, size: 8, offset: 96)
!5788 = !DIDerivedType(tag: DW_TAG_member, name: "somt", scope: !5780, file: !347, line: 175, baseType: !370, size: 8, offset: 104)
!5789 = !DIDerivedType(tag: DW_TAG_member, name: "eomt", scope: !5780, file: !347, line: 176, baseType: !370, size: 8, offset: 112)
!5790 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !5780, file: !347, line: 177, baseType: !370, size: 8, offset: 120)
!5791 = !DIDerivedType(tag: DW_TAG_member, name: "down_rep_recv", scope: !407, file: !347, line: 611, baseType: !5765, size: 2608, offset: 3568)
!5792 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !407, file: !347, line: 617, baseType: !423, size: 192, offset: 6208)
!5793 = !DIDerivedType(tag: DW_TAG_member, name: "probe_lock", scope: !407, file: !347, line: 624, baseType: !423, size: 192, offset: 6400)
!5794 = !DIDerivedType(tag: DW_TAG_member, name: "mst_state", scope: !407, file: !347, line: 630, baseType: !370, size: 1, offset: 6592, flags: DIFlagBitField, extraData: i64 6592)
!5795 = !DIDerivedType(tag: DW_TAG_member, name: "payload_id_table_cleared", scope: !407, file: !347, line: 636, baseType: !370, size: 1, offset: 6593, flags: DIFlagBitField, extraData: i64 6592)
!5796 = !DIDerivedType(tag: DW_TAG_member, name: "mst_primary", scope: !407, file: !347, line: 641, baseType: !391, size: 64, offset: 6656)
!5797 = !DIDerivedType(tag: DW_TAG_member, name: "dpcd", scope: !407, file: !347, line: 646, baseType: !5798, size: 120, offset: 6720)
!5798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 120, elements: !5799)
!5799 = !{!5800}
!5800 = !DISubrange(count: 15)
!5801 = !DIDerivedType(tag: DW_TAG_member, name: "sink_count", scope: !407, file: !347, line: 650, baseType: !364, size: 8, offset: 6840)
!5802 = !DIDerivedType(tag: DW_TAG_member, name: "pbn_div", scope: !407, file: !347, line: 654, baseType: !115, size: 32, offset: 6848)
!5803 = !DIDerivedType(tag: DW_TAG_member, name: "funcs", scope: !407, file: !347, line: 659, baseType: !5700, size: 64, offset: 6912)
!5804 = !DIDerivedType(tag: DW_TAG_member, name: "qlock", scope: !407, file: !347, line: 664, baseType: !423, size: 192, offset: 6976)
!5805 = !DIDerivedType(tag: DW_TAG_member, name: "tx_msg_downq", scope: !407, file: !347, line: 669, baseType: !385, size: 128, offset: 7168)
!5806 = !DIDerivedType(tag: DW_TAG_member, name: "payload_lock", scope: !407, file: !347, line: 674, baseType: !423, size: 192, offset: 7296)
!5807 = !DIDerivedType(tag: DW_TAG_member, name: "proposed_vcpis", scope: !407, file: !347, line: 680, baseType: !5808, size: 64, offset: 7488)
!5808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5809, size: 64)
!5809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5810, size: 64)
!5810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_vcpi", file: !347, line: 58, size: 128, elements: !5811)
!5811 = !{!5812, !5813, !5814, !5815}
!5812 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi", scope: !5810, file: !347, line: 59, baseType: !115, size: 32)
!5813 = !DIDerivedType(tag: DW_TAG_member, name: "pbn", scope: !5810, file: !347, line: 60, baseType: !115, size: 32, offset: 32)
!5814 = !DIDerivedType(tag: DW_TAG_member, name: "aligned_pbn", scope: !5810, file: !347, line: 61, baseType: !115, size: 32, offset: 64)
!5815 = !DIDerivedType(tag: DW_TAG_member, name: "num_slots", scope: !5810, file: !347, line: 62, baseType: !115, size: 32, offset: 96)
!5816 = !DIDerivedType(tag: DW_TAG_member, name: "payloads", scope: !407, file: !347, line: 685, baseType: !5817, size: 64, offset: 7552)
!5817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5818, size: 64)
!5818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_payload", file: !347, line: 536, size: 128, elements: !5819)
!5819 = !{!5820, !5821, !5822, !5823}
!5820 = !DIDerivedType(tag: DW_TAG_member, name: "payload_state", scope: !5818, file: !347, line: 537, baseType: !115, size: 32)
!5821 = !DIDerivedType(tag: DW_TAG_member, name: "start_slot", scope: !5818, file: !347, line: 538, baseType: !115, size: 32, offset: 32)
!5822 = !DIDerivedType(tag: DW_TAG_member, name: "num_slots", scope: !5818, file: !347, line: 539, baseType: !115, size: 32, offset: 64)
!5823 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi", scope: !5818, file: !347, line: 540, baseType: !115, size: 32, offset: 96)
!5824 = !DIDerivedType(tag: DW_TAG_member, name: "payload_mask", scope: !407, file: !347, line: 691, baseType: !341, size: 64, offset: 7616)
!5825 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi_mask", scope: !407, file: !347, line: 695, baseType: !341, size: 64, offset: 7680)
!5826 = !DIDerivedType(tag: DW_TAG_member, name: "tx_waitq", scope: !407, file: !347, line: 700, baseType: !1201, size: 128, offset: 7744)
!5827 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !407, file: !347, line: 704, baseType: !1991, size: 256, offset: 7872)
!5828 = !DIDerivedType(tag: DW_TAG_member, name: "tx_work", scope: !407, file: !347, line: 709, baseType: !1991, size: 256, offset: 8128)
!5829 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_port_list", scope: !407, file: !347, line: 714, baseType: !385, size: 128, offset: 8384)
!5830 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_branch_device_list", scope: !407, file: !347, line: 719, baseType: !385, size: 128, offset: 8512)
!5831 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_destroy_lock", scope: !407, file: !347, line: 724, baseType: !423, size: 192, offset: 8640)
!5832 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_destroy_wq", scope: !407, file: !347, line: 731, baseType: !1969, size: 64, offset: 8832)
!5833 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_destroy_work", scope: !407, file: !347, line: 737, baseType: !1991, size: 256, offset: 8896)
!5834 = !DIDerivedType(tag: DW_TAG_member, name: "up_req_list", scope: !407, file: !347, line: 743, baseType: !385, size: 128, offset: 9152)
!5835 = !DIDerivedType(tag: DW_TAG_member, name: "up_req_lock", scope: !407, file: !347, line: 747, baseType: !423, size: 192, offset: 9280)
!5836 = !DIDerivedType(tag: DW_TAG_member, name: "up_req_work", scope: !407, file: !347, line: 753, baseType: !1991, size: 256, offset: 9472)
!5837 = !DIDerivedType(tag: DW_TAG_member, name: "link_address_sent", scope: !392, file: !347, line: 254, baseType: !370, size: 8, offset: 576)
!5838 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !392, file: !347, line: 257, baseType: !5839, size: 128, offset: 584)
!5839 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 128, elements: !1941)
!5840 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !346, file: !347, line: 142, baseType: !5729, size: 9472, offset: 384)
!5841 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !346, file: !347, line: 143, baseType: !391, size: 64, offset: 9856)
!5842 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi", scope: !346, file: !347, line: 145, baseType: !5810, size: 128, offset: 9920)
!5843 = !DIDerivedType(tag: DW_TAG_member, name: "connector", scope: !346, file: !347, line: 146, baseType: !4829, size: 64, offset: 10048)
!5844 = !DIDerivedType(tag: DW_TAG_member, name: "mgr", scope: !346, file: !347, line: 147, baseType: !406, size: 64, offset: 10112)
!5845 = !DIDerivedType(tag: DW_TAG_member, name: "cached_edid", scope: !346, file: !347, line: 153, baseType: !5846, size: 64, offset: 10176)
!5846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5847, size: 64)
!5847 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edid", file: !5848, line: 290, size: 1024, elements: !5849)
!5848 = !DIFile(filename: "./include/drm/drm_edid.h", directory: "/home/lizy2001/genbc/linux")
!5849 = !{!5850, !5851, !5853, !5854, !5855, !5856, !5857, !5858, !5859, !5860, !5861, !5862, !5863, !5864, !5865, !5866, !5867, !5868, !5869, !5870, !5871, !5872, !5873, !5874, !5880, !5886, !5976, !5977}
!5850 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !5847, file: !5848, line: 291, baseType: !398, size: 64)
!5851 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_id", scope: !5847, file: !5848, line: 293, baseType: !5852, size: 16, offset: 64)
!5852 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 16, elements: !1445)
!5853 = !DIDerivedType(tag: DW_TAG_member, name: "prod_code", scope: !5847, file: !5848, line: 294, baseType: !5852, size: 16, offset: 80)
!5854 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !5847, file: !5848, line: 295, baseType: !468, size: 32, offset: 96)
!5855 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_week", scope: !5847, file: !5848, line: 296, baseType: !364, size: 8, offset: 128)
!5856 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_year", scope: !5847, file: !5848, line: 297, baseType: !364, size: 8, offset: 136)
!5857 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5847, file: !5848, line: 299, baseType: !364, size: 8, offset: 144)
!5858 = !DIDerivedType(tag: DW_TAG_member, name: "revision", scope: !5847, file: !5848, line: 300, baseType: !364, size: 8, offset: 152)
!5859 = !DIDerivedType(tag: DW_TAG_member, name: "input", scope: !5847, file: !5848, line: 302, baseType: !364, size: 8, offset: 160)
!5860 = !DIDerivedType(tag: DW_TAG_member, name: "width_cm", scope: !5847, file: !5848, line: 303, baseType: !364, size: 8, offset: 168)
!5861 = !DIDerivedType(tag: DW_TAG_member, name: "height_cm", scope: !5847, file: !5848, line: 304, baseType: !364, size: 8, offset: 176)
!5862 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !5847, file: !5848, line: 305, baseType: !364, size: 8, offset: 184)
!5863 = !DIDerivedType(tag: DW_TAG_member, name: "features", scope: !5847, file: !5848, line: 306, baseType: !364, size: 8, offset: 192)
!5864 = !DIDerivedType(tag: DW_TAG_member, name: "red_green_lo", scope: !5847, file: !5848, line: 308, baseType: !364, size: 8, offset: 200)
!5865 = !DIDerivedType(tag: DW_TAG_member, name: "black_white_lo", scope: !5847, file: !5848, line: 309, baseType: !364, size: 8, offset: 208)
!5866 = !DIDerivedType(tag: DW_TAG_member, name: "red_x", scope: !5847, file: !5848, line: 310, baseType: !364, size: 8, offset: 216)
!5867 = !DIDerivedType(tag: DW_TAG_member, name: "red_y", scope: !5847, file: !5848, line: 311, baseType: !364, size: 8, offset: 224)
!5868 = !DIDerivedType(tag: DW_TAG_member, name: "green_x", scope: !5847, file: !5848, line: 312, baseType: !364, size: 8, offset: 232)
!5869 = !DIDerivedType(tag: DW_TAG_member, name: "green_y", scope: !5847, file: !5848, line: 313, baseType: !364, size: 8, offset: 240)
!5870 = !DIDerivedType(tag: DW_TAG_member, name: "blue_x", scope: !5847, file: !5848, line: 314, baseType: !364, size: 8, offset: 248)
!5871 = !DIDerivedType(tag: DW_TAG_member, name: "blue_y", scope: !5847, file: !5848, line: 315, baseType: !364, size: 8, offset: 256)
!5872 = !DIDerivedType(tag: DW_TAG_member, name: "white_x", scope: !5847, file: !5848, line: 316, baseType: !364, size: 8, offset: 264)
!5873 = !DIDerivedType(tag: DW_TAG_member, name: "white_y", scope: !5847, file: !5848, line: 317, baseType: !364, size: 8, offset: 272)
!5874 = !DIDerivedType(tag: DW_TAG_member, name: "established_timings", scope: !5847, file: !5848, line: 319, baseType: !5875, size: 24, offset: 280)
!5875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "est_timings", file: !5848, line: 44, size: 24, elements: !5876)
!5876 = !{!5877, !5878, !5879}
!5877 = !DIDerivedType(tag: DW_TAG_member, name: "t1", scope: !5875, file: !5848, line: 45, baseType: !364, size: 8)
!5878 = !DIDerivedType(tag: DW_TAG_member, name: "t2", scope: !5875, file: !5848, line: 46, baseType: !364, size: 8, offset: 8)
!5879 = !DIDerivedType(tag: DW_TAG_member, name: "mfg_rsvd", scope: !5875, file: !5848, line: 47, baseType: !364, size: 8, offset: 16)
!5880 = !DIDerivedType(tag: DW_TAG_member, name: "standard_timings", scope: !5847, file: !5848, line: 321, baseType: !5881, size: 128, offset: 304)
!5881 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5882, size: 128, elements: !399)
!5882 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "std_timing", file: !5848, line: 58, size: 16, elements: !5883)
!5883 = !{!5884, !5885}
!5884 = !DIDerivedType(tag: DW_TAG_member, name: "hsize", scope: !5882, file: !5848, line: 59, baseType: !364, size: 8)
!5885 = !DIDerivedType(tag: DW_TAG_member, name: "vfreq_aspect", scope: !5882, file: !5848, line: 60, baseType: !364, size: 8, offset: 8)
!5886 = !DIDerivedType(tag: DW_TAG_member, name: "detailed_timings", scope: !5847, file: !5848, line: 323, baseType: !5887, size: 576, offset: 432)
!5887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5888, size: 576, elements: !1364)
!5888 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_timing", file: !5848, line: 170, size: 144, elements: !5889)
!5889 = !{!5890, !5892}
!5890 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_clock", scope: !5888, file: !5848, line: 171, baseType: !5891, size: 16)
!5891 = !DIDerivedType(tag: DW_TAG_typedef, name: "__le16", file: !1152, line: 29, baseType: !382)
!5892 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5888, file: !5848, line: 175, baseType: !5893, size: 128, offset: 16)
!5893 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5888, file: !5848, line: 172, size: 128, elements: !5894)
!5894 = !{!5895, !5914}
!5895 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_data", scope: !5893, file: !5848, line: 173, baseType: !5896, size: 128)
!5896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_pixel_timing", file: !5848, line: 70, size: 128, elements: !5897)
!5897 = !{!5898, !5899, !5900, !5901, !5902, !5903, !5904, !5905, !5906, !5907, !5908, !5909, !5910, !5911, !5912, !5913}
!5898 = !DIDerivedType(tag: DW_TAG_member, name: "hactive_lo", scope: !5896, file: !5848, line: 71, baseType: !364, size: 8)
!5899 = !DIDerivedType(tag: DW_TAG_member, name: "hblank_lo", scope: !5896, file: !5848, line: 72, baseType: !364, size: 8, offset: 8)
!5900 = !DIDerivedType(tag: DW_TAG_member, name: "hactive_hblank_hi", scope: !5896, file: !5848, line: 73, baseType: !364, size: 8, offset: 16)
!5901 = !DIDerivedType(tag: DW_TAG_member, name: "vactive_lo", scope: !5896, file: !5848, line: 74, baseType: !364, size: 8, offset: 24)
!5902 = !DIDerivedType(tag: DW_TAG_member, name: "vblank_lo", scope: !5896, file: !5848, line: 75, baseType: !364, size: 8, offset: 32)
!5903 = !DIDerivedType(tag: DW_TAG_member, name: "vactive_vblank_hi", scope: !5896, file: !5848, line: 76, baseType: !364, size: 8, offset: 40)
!5904 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_offset_lo", scope: !5896, file: !5848, line: 77, baseType: !364, size: 8, offset: 48)
!5905 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_pulse_width_lo", scope: !5896, file: !5848, line: 78, baseType: !364, size: 8, offset: 56)
!5906 = !DIDerivedType(tag: DW_TAG_member, name: "vsync_offset_pulse_width_lo", scope: !5896, file: !5848, line: 79, baseType: !364, size: 8, offset: 64)
!5907 = !DIDerivedType(tag: DW_TAG_member, name: "hsync_vsync_offset_pulse_width_hi", scope: !5896, file: !5848, line: 80, baseType: !364, size: 8, offset: 72)
!5908 = !DIDerivedType(tag: DW_TAG_member, name: "width_mm_lo", scope: !5896, file: !5848, line: 81, baseType: !364, size: 8, offset: 80)
!5909 = !DIDerivedType(tag: DW_TAG_member, name: "height_mm_lo", scope: !5896, file: !5848, line: 82, baseType: !364, size: 8, offset: 88)
!5910 = !DIDerivedType(tag: DW_TAG_member, name: "width_height_mm_hi", scope: !5896, file: !5848, line: 83, baseType: !364, size: 8, offset: 96)
!5911 = !DIDerivedType(tag: DW_TAG_member, name: "hborder", scope: !5896, file: !5848, line: 84, baseType: !364, size: 8, offset: 104)
!5912 = !DIDerivedType(tag: DW_TAG_member, name: "vborder", scope: !5896, file: !5848, line: 85, baseType: !364, size: 8, offset: 112)
!5913 = !DIDerivedType(tag: DW_TAG_member, name: "misc", scope: !5896, file: !5848, line: 86, baseType: !364, size: 8, offset: 120)
!5914 = !DIDerivedType(tag: DW_TAG_member, name: "other_data", scope: !5893, file: !5848, line: 174, baseType: !5915, size: 128)
!5915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_non_pixel", file: !5848, line: 145, size: 128, elements: !5916)
!5916 = !{!5917, !5918, !5919, !5920}
!5917 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !5915, file: !5848, line: 146, baseType: !364, size: 8)
!5918 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5915, file: !5848, line: 147, baseType: !364, size: 8, offset: 8)
!5919 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5915, file: !5848, line: 150, baseType: !364, size: 8, offset: 16)
!5920 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5915, file: !5848, line: 157, baseType: !5921, size: 104, offset: 24)
!5921 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5915, file: !5848, line: 151, size: 104, elements: !5922)
!5922 = !{!5923, !5930, !5961, !5968, !5970}
!5923 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5921, file: !5848, line: 152, baseType: !5924, size: 104)
!5924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_string", file: !5848, line: 90, size: 104, elements: !5925)
!5925 = !{!5926}
!5926 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5924, file: !5848, line: 91, baseType: !5927, size: 104)
!5927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 104, elements: !5928)
!5928 = !{!5929}
!5929 = !DISubrange(count: 13)
!5930 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !5921, file: !5848, line: 153, baseType: !5931, size: 104)
!5931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_monitor_range", file: !5848, line: 99, size: 104, elements: !5932)
!5932 = !{!5933, !5934, !5935, !5936, !5937, !5938, !5939}
!5933 = !DIDerivedType(tag: DW_TAG_member, name: "min_vfreq", scope: !5931, file: !5848, line: 100, baseType: !364, size: 8)
!5934 = !DIDerivedType(tag: DW_TAG_member, name: "max_vfreq", scope: !5931, file: !5848, line: 101, baseType: !364, size: 8, offset: 8)
!5935 = !DIDerivedType(tag: DW_TAG_member, name: "min_hfreq_khz", scope: !5931, file: !5848, line: 102, baseType: !364, size: 8, offset: 16)
!5936 = !DIDerivedType(tag: DW_TAG_member, name: "max_hfreq_khz", scope: !5931, file: !5848, line: 103, baseType: !364, size: 8, offset: 24)
!5937 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_clock_mhz", scope: !5931, file: !5848, line: 104, baseType: !364, size: 8, offset: 32)
!5938 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5931, file: !5848, line: 105, baseType: !364, size: 8, offset: 40)
!5939 = !DIDerivedType(tag: DW_TAG_member, name: "formula", scope: !5931, file: !5848, line: 124, baseType: !5940, size: 56, offset: 48)
!5940 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5931, file: !5848, line: 106, size: 56, elements: !5941)
!5941 = !{!5942, !5951}
!5942 = !DIDerivedType(tag: DW_TAG_member, name: "gtf2", scope: !5940, file: !5848, line: 114, baseType: !5943, size: 56)
!5943 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5940, file: !5848, line: 107, size: 56, elements: !5944)
!5944 = !{!5945, !5946, !5947, !5948, !5949, !5950}
!5945 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !5943, file: !5848, line: 108, baseType: !364, size: 8)
!5946 = !DIDerivedType(tag: DW_TAG_member, name: "hfreq_start_khz", scope: !5943, file: !5848, line: 109, baseType: !364, size: 8, offset: 8)
!5947 = !DIDerivedType(tag: DW_TAG_member, name: "c", scope: !5943, file: !5848, line: 110, baseType: !364, size: 8, offset: 16)
!5948 = !DIDerivedType(tag: DW_TAG_member, name: "m", scope: !5943, file: !5848, line: 111, baseType: !5891, size: 16, offset: 24)
!5949 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !5943, file: !5848, line: 112, baseType: !364, size: 8, offset: 40)
!5950 = !DIDerivedType(tag: DW_TAG_member, name: "j", scope: !5943, file: !5848, line: 113, baseType: !364, size: 8, offset: 48)
!5951 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !5940, file: !5848, line: 123, baseType: !5952, size: 56)
!5952 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5940, file: !5848, line: 115, size: 56, elements: !5953)
!5953 = !{!5954, !5955, !5956, !5957, !5958, !5959, !5960}
!5954 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !5952, file: !5848, line: 116, baseType: !364, size: 8)
!5955 = !DIDerivedType(tag: DW_TAG_member, name: "data1", scope: !5952, file: !5848, line: 117, baseType: !364, size: 8, offset: 8)
!5956 = !DIDerivedType(tag: DW_TAG_member, name: "data2", scope: !5952, file: !5848, line: 118, baseType: !364, size: 8, offset: 16)
!5957 = !DIDerivedType(tag: DW_TAG_member, name: "supported_aspects", scope: !5952, file: !5848, line: 119, baseType: !364, size: 8, offset: 24)
!5958 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5952, file: !5848, line: 120, baseType: !364, size: 8, offset: 32)
!5959 = !DIDerivedType(tag: DW_TAG_member, name: "supported_scalings", scope: !5952, file: !5848, line: 121, baseType: !364, size: 8, offset: 40)
!5960 = !DIDerivedType(tag: DW_TAG_member, name: "preferred_refresh", scope: !5952, file: !5848, line: 122, baseType: !364, size: 8, offset: 48)
!5961 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !5921, file: !5848, line: 154, baseType: !5962, size: 32)
!5962 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "detailed_data_wpindex", file: !5848, line: 127, size: 32, elements: !5963)
!5963 = !{!5964, !5965, !5966, !5967}
!5964 = !DIDerivedType(tag: DW_TAG_member, name: "white_yx_lo", scope: !5962, file: !5848, line: 128, baseType: !364, size: 8)
!5965 = !DIDerivedType(tag: DW_TAG_member, name: "white_x_hi", scope: !5962, file: !5848, line: 129, baseType: !364, size: 8, offset: 8)
!5966 = !DIDerivedType(tag: DW_TAG_member, name: "white_y_hi", scope: !5962, file: !5848, line: 130, baseType: !364, size: 8, offset: 16)
!5967 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !5962, file: !5848, line: 131, baseType: !364, size: 8, offset: 24)
!5968 = !DIDerivedType(tag: DW_TAG_member, name: "timings", scope: !5921, file: !5848, line: 155, baseType: !5969, size: 96)
!5969 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5882, size: 96, elements: !1514)
!5970 = !DIDerivedType(tag: DW_TAG_member, name: "cvt", scope: !5921, file: !5848, line: 156, baseType: !5971, size: 96)
!5971 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5972, size: 96, elements: !1364)
!5972 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cvt_timing", file: !5848, line: 141, size: 24, elements: !5973)
!5973 = !{!5974}
!5974 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !5972, file: !5848, line: 142, baseType: !5975, size: 24)
!5975 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 24, elements: !955)
!5976 = !DIDerivedType(tag: DW_TAG_member, name: "extensions", scope: !5847, file: !5848, line: 325, baseType: !364, size: 8, offset: 1008)
!5977 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !5847, file: !5848, line: 327, baseType: !364, size: 8, offset: 1016)
!5978 = !DIDerivedType(tag: DW_TAG_member, name: "has_audio", scope: !346, file: !347, line: 158, baseType: !370, size: 8, offset: 10240)
!5979 = !DIDerivedType(tag: DW_TAG_member, name: "fec_capable", scope: !346, file: !347, line: 164, baseType: !370, size: 8, offset: 10248)
!5980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5981, size: 64)
!5981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_vcpi_allocation", file: !347, line: 545, size: 320, elements: !5982)
!5982 = !{!5983, !5984, !5985, !5986, !5987}
!5983 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !5981, file: !347, line: 546, baseType: !345, size: 64)
!5984 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi", scope: !5981, file: !347, line: 547, baseType: !115, size: 32, offset: 64)
!5985 = !DIDerivedType(tag: DW_TAG_member, name: "pbn", scope: !5981, file: !347, line: 548, baseType: !115, size: 32, offset: 96)
!5986 = !DIDerivedType(tag: DW_TAG_member, name: "dsc_enabled", scope: !5981, file: !347, line: 549, baseType: !370, size: 8, offset: 128)
!5987 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5981, file: !347, line: 550, baseType: !385, size: 128, offset: 192)
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5989, size: 64)
!5989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_mst_topology_state", file: !347, line: 553, size: 256, elements: !5990)
!5990 = !{!5991, !5992, !5993}
!5991 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !5989, file: !347, line: 554, baseType: !3364, size: 64)
!5992 = !DIDerivedType(tag: DW_TAG_member, name: "vcpis", scope: !5989, file: !347, line: 555, baseType: !385, size: 128, offset: 64)
!5993 = !DIDerivedType(tag: DW_TAG_member, name: "mgr", scope: !5989, file: !347, line: 556, baseType: !406, size: 64, offset: 192)
!5994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5995, size: 64)
!5995 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5996)
!5996 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !115)
!5997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5998, size: 64)
!5998 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !468)
!5999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6000, size: 64)
!6000 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !388)
!6001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6002, size: 64)
!6002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6000)
!6003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6004, size: 64)
!6004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_sideband_msg_tx", file: !347, line: 501, size: 6144, elements: !6005)
!6005 = !{!6006, !6007, !6008, !6009, !6010, !6011, !6012, !6013, !6014, !6015}
!6006 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !6004, file: !347, line: 502, baseType: !5770, size: 2048)
!6007 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !6004, file: !347, line: 503, baseType: !5768, size: 384, offset: 2048)
!6008 = !DIDerivedType(tag: DW_TAG_member, name: "cur_offset", scope: !6004, file: !347, line: 504, baseType: !364, size: 8, offset: 2432)
!6009 = !DIDerivedType(tag: DW_TAG_member, name: "cur_len", scope: !6004, file: !347, line: 505, baseType: !364, size: 8, offset: 2440)
!6010 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !6004, file: !347, line: 506, baseType: !391, size: 64, offset: 2496)
!6011 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6004, file: !347, line: 507, baseType: !385, size: 128, offset: 2560)
!6012 = !DIDerivedType(tag: DW_TAG_member, name: "seqno", scope: !6004, file: !347, line: 508, baseType: !115, size: 32, offset: 2688)
!6013 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6004, file: !347, line: 509, baseType: !115, size: 32, offset: 2720)
!6014 = !DIDerivedType(tag: DW_TAG_member, name: "path_msg", scope: !6004, file: !347, line: 510, baseType: !370, size: 8, offset: 2752)
!6015 = !DIDerivedType(tag: DW_TAG_member, name: "reply", scope: !6004, file: !347, line: 511, baseType: !6016, size: 3360, offset: 2768)
!6016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_sideband_msg_reply_body", file: !347, line: 467, size: 3360, elements: !6017)
!6017 = !{!6018, !6019, !6020}
!6018 = !DIDerivedType(tag: DW_TAG_member, name: "reply_type", scope: !6016, file: !347, line: 468, baseType: !364, size: 8)
!6019 = !DIDerivedType(tag: DW_TAG_member, name: "req_type", scope: !6016, file: !347, line: 469, baseType: !364, size: 8, offset: 8)
!6020 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6016, file: !347, line: 488, baseType: !6021, size: 3344, offset: 16)
!6021 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ack_replies", file: !347, line: 470, size: 3344, elements: !6022)
!6022 = !{!6023, !6029, !6048, !6052, !6059, !6065, !6070, !6079, !6083, !6089, !6095, !6101, !6105}
!6023 = !DIDerivedType(tag: DW_TAG_member, name: "nak", scope: !6021, file: !347, line: 471, baseType: !6024, size: 144)
!6024 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_nak_reply", file: !347, line: 261, size: 144, elements: !6025)
!6025 = !{!6026, !6027, !6028}
!6026 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !6024, file: !347, line: 262, baseType: !5839, size: 128)
!6027 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !6024, file: !347, line: 263, baseType: !364, size: 8, offset: 128)
!6028 = !DIDerivedType(tag: DW_TAG_member, name: "nak_data", scope: !6024, file: !347, line: 264, baseType: !364, size: 8, offset: 136)
!6029 = !DIDerivedType(tag: DW_TAG_member, name: "link_addr", scope: !6021, file: !347, line: 472, baseType: !6030, size: 3336)
!6030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_link_address_ack_reply", file: !347, line: 267, size: 3336, elements: !6031)
!6031 = !{!6032, !6033, !6034}
!6032 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !6030, file: !347, line: 268, baseType: !5839, size: 128)
!6033 = !DIDerivedType(tag: DW_TAG_member, name: "nports", scope: !6030, file: !347, line: 269, baseType: !364, size: 8, offset: 128)
!6034 = !DIDerivedType(tag: DW_TAG_member, name: "ports", scope: !6030, file: !347, line: 281, baseType: !6035, size: 3200, offset: 136)
!6035 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6036, size: 3200, elements: !1941)
!6036 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_link_addr_reply_port", file: !347, line: 270, size: 200, elements: !6037)
!6037 = !{!6038, !6039, !6040, !6041, !6042, !6043, !6044, !6045, !6046, !6047}
!6038 = !DIDerivedType(tag: DW_TAG_member, name: "input_port", scope: !6036, file: !347, line: 271, baseType: !370, size: 8)
!6039 = !DIDerivedType(tag: DW_TAG_member, name: "peer_device_type", scope: !6036, file: !347, line: 272, baseType: !364, size: 8, offset: 8)
!6040 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6036, file: !347, line: 273, baseType: !364, size: 8, offset: 16)
!6041 = !DIDerivedType(tag: DW_TAG_member, name: "mcs", scope: !6036, file: !347, line: 274, baseType: !370, size: 8, offset: 24)
!6042 = !DIDerivedType(tag: DW_TAG_member, name: "ddps", scope: !6036, file: !347, line: 275, baseType: !370, size: 8, offset: 32)
!6043 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_device_plug_status", scope: !6036, file: !347, line: 276, baseType: !370, size: 8, offset: 40)
!6044 = !DIDerivedType(tag: DW_TAG_member, name: "dpcd_revision", scope: !6036, file: !347, line: 277, baseType: !364, size: 8, offset: 48)
!6045 = !DIDerivedType(tag: DW_TAG_member, name: "peer_guid", scope: !6036, file: !347, line: 278, baseType: !5839, size: 128, offset: 56)
!6046 = !DIDerivedType(tag: DW_TAG_member, name: "num_sdp_streams", scope: !6036, file: !347, line: 279, baseType: !364, size: 8, offset: 184)
!6047 = !DIDerivedType(tag: DW_TAG_member, name: "num_sdp_stream_sinks", scope: !6036, file: !347, line: 280, baseType: !364, size: 8, offset: 192)
!6048 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6021, file: !347, line: 473, baseType: !6049, size: 8)
!6049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_port_number_rep", file: !347, line: 427, size: 8, elements: !6050)
!6050 = !{!6051}
!6051 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6049, file: !347, line: 428, baseType: !364, size: 8)
!6052 = !DIDerivedType(tag: DW_TAG_member, name: "path_resources", scope: !6021, file: !347, line: 475, baseType: !6053, size: 48)
!6053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_enum_path_resources_ack_reply", file: !347, line: 419, size: 48, elements: !6054)
!6054 = !{!6055, !6056, !6057, !6058}
!6055 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6053, file: !347, line: 420, baseType: !364, size: 8)
!6056 = !DIDerivedType(tag: DW_TAG_member, name: "fec_capable", scope: !6053, file: !347, line: 421, baseType: !370, size: 8, offset: 8)
!6057 = !DIDerivedType(tag: DW_TAG_member, name: "full_payload_bw_number", scope: !6053, file: !347, line: 422, baseType: !381, size: 16, offset: 16)
!6058 = !DIDerivedType(tag: DW_TAG_member, name: "avail_payload_bw_number", scope: !6053, file: !347, line: 423, baseType: !381, size: 16, offset: 32)
!6059 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_payload", scope: !6021, file: !347, line: 476, baseType: !6060, size: 32)
!6060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_allocate_payload_ack_reply", file: !347, line: 354, size: 32, elements: !6061)
!6061 = !{!6062, !6063, !6064}
!6062 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6060, file: !347, line: 355, baseType: !364, size: 8)
!6063 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi", scope: !6060, file: !347, line: 356, baseType: !364, size: 8, offset: 8)
!6064 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_pbn", scope: !6060, file: !347, line: 357, baseType: !381, size: 16, offset: 16)
!6065 = !DIDerivedType(tag: DW_TAG_member, name: "query_payload", scope: !6021, file: !347, line: 477, baseType: !6066, size: 32)
!6066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_query_payload_ack_reply", file: !347, line: 442, size: 32, elements: !6067)
!6067 = !{!6068, !6069}
!6068 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6066, file: !347, line: 443, baseType: !364, size: 8)
!6069 = !DIDerivedType(tag: DW_TAG_member, name: "allocated_pbn", scope: !6066, file: !347, line: 444, baseType: !381, size: 16, offset: 16)
!6070 = !DIDerivedType(tag: DW_TAG_member, name: "remote_dpcd_read_ack", scope: !6021, file: !347, line: 479, baseType: !6071, size: 2056)
!6071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_dpcd_read_ack_reply", file: !347, line: 284, size: 2056, elements: !6072)
!6072 = !{!6073, !6074, !6075}
!6073 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6071, file: !347, line: 285, baseType: !364, size: 8)
!6074 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes", scope: !6071, file: !347, line: 286, baseType: !364, size: 8, offset: 8)
!6075 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6071, file: !347, line: 287, baseType: !6076, size: 2040, offset: 16)
!6076 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 2040, elements: !6077)
!6077 = !{!6078}
!6078 = !DISubrange(count: 255)
!6079 = !DIDerivedType(tag: DW_TAG_member, name: "remote_dpcd_write_ack", scope: !6021, file: !347, line: 480, baseType: !6080, size: 8)
!6080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_dpcd_write_ack_reply", file: !347, line: 290, size: 8, elements: !6081)
!6081 = !{!6082}
!6082 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6080, file: !347, line: 291, baseType: !364, size: 8)
!6083 = !DIDerivedType(tag: DW_TAG_member, name: "remote_dpcd_write_nack", scope: !6021, file: !347, line: 481, baseType: !6084, size: 24)
!6084 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_dpcd_write_nak_reply", file: !347, line: 294, size: 24, elements: !6085)
!6085 = !{!6086, !6087, !6088}
!6086 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6084, file: !347, line: 295, baseType: !364, size: 8)
!6087 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !6084, file: !347, line: 296, baseType: !364, size: 8, offset: 8)
!6088 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_written_before_failure", scope: !6084, file: !347, line: 297, baseType: !364, size: 8, offset: 16)
!6089 = !DIDerivedType(tag: DW_TAG_member, name: "remote_i2c_read_ack", scope: !6021, file: !347, line: 483, baseType: !6090, size: 2056)
!6090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_i2c_read_ack_reply", file: !347, line: 300, size: 2056, elements: !6091)
!6091 = !{!6092, !6093, !6094}
!6092 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6090, file: !347, line: 301, baseType: !364, size: 8)
!6093 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes", scope: !6090, file: !347, line: 302, baseType: !364, size: 8, offset: 8)
!6094 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6090, file: !347, line: 303, baseType: !6076, size: 2040, offset: 16)
!6095 = !DIDerivedType(tag: DW_TAG_member, name: "remote_i2c_read_nack", scope: !6021, file: !347, line: 484, baseType: !6096, size: 24)
!6096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_i2c_read_nak_reply", file: !347, line: 306, size: 24, elements: !6097)
!6097 = !{!6098, !6099, !6100}
!6098 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6096, file: !347, line: 307, baseType: !364, size: 8)
!6099 = !DIDerivedType(tag: DW_TAG_member, name: "nak_reason", scope: !6096, file: !347, line: 308, baseType: !364, size: 8, offset: 8)
!6100 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_nak_transaction", scope: !6096, file: !347, line: 309, baseType: !364, size: 8, offset: 16)
!6101 = !DIDerivedType(tag: DW_TAG_member, name: "remote_i2c_write_ack", scope: !6021, file: !347, line: 485, baseType: !6102, size: 8)
!6102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_i2c_write_ack_reply", file: !347, line: 312, size: 8, elements: !6103)
!6103 = !{!6104}
!6104 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6102, file: !347, line: 313, baseType: !364, size: 8)
!6105 = !DIDerivedType(tag: DW_TAG_member, name: "enc_status", scope: !6021, file: !347, line: 487, baseType: !6106, size: 88)
!6106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_query_stream_enc_status_ack_reply", file: !347, line: 316, size: 88, elements: !6107)
!6107 = !{!6108, !6109, !6110, !6111, !6112, !6113, !6114, !6115, !6116, !6117, !6118}
!6108 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !6106, file: !347, line: 318, baseType: !364, size: 8)
!6109 = !DIDerivedType(tag: DW_TAG_member, name: "reply_signed", scope: !6106, file: !347, line: 321, baseType: !370, size: 8, offset: 8)
!6110 = !DIDerivedType(tag: DW_TAG_member, name: "unauthorizable_device_present", scope: !6106, file: !347, line: 324, baseType: !370, size: 8, offset: 16)
!6111 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_device_present", scope: !6106, file: !347, line: 325, baseType: !370, size: 8, offset: 24)
!6112 = !DIDerivedType(tag: DW_TAG_member, name: "query_capable_device_present", scope: !6106, file: !347, line: 326, baseType: !370, size: 8, offset: 32)
!6113 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_1x_device_present", scope: !6106, file: !347, line: 329, baseType: !370, size: 8, offset: 40)
!6114 = !DIDerivedType(tag: DW_TAG_member, name: "hdcp_2x_device_present", scope: !6106, file: !347, line: 330, baseType: !370, size: 8, offset: 48)
!6115 = !DIDerivedType(tag: DW_TAG_member, name: "auth_completed", scope: !6106, file: !347, line: 333, baseType: !370, size: 8, offset: 56)
!6116 = !DIDerivedType(tag: DW_TAG_member, name: "encryption_enabled", scope: !6106, file: !347, line: 336, baseType: !370, size: 8, offset: 64)
!6117 = !DIDerivedType(tag: DW_TAG_member, name: "repeater_present", scope: !6106, file: !347, line: 339, baseType: !370, size: 8, offset: 72)
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !6106, file: !347, line: 342, baseType: !364, size: 8, offset: 80)
!6119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6120, size: 64)
!6120 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !846)
!6121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!6122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5996, size: 64)
!6123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6124, size: 64)
!6124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_pending_up_req", file: !3, line: 58, size: 1216, elements: !6125)
!6125 = !{!6126, !6127, !6216}
!6126 = !DIDerivedType(tag: DW_TAG_member, name: "hdr", scope: !6124, file: !3, line: 59, baseType: !5780, size: 128)
!6127 = !DIDerivedType(tag: DW_TAG_member, name: "msg", scope: !6124, file: !3, line: 60, baseType: !6128, size: 960, offset: 128)
!6128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_sideband_msg_req_body", file: !347, line: 447, size: 960, elements: !6129)
!6129 = !{!6130, !6131}
!6130 = !DIDerivedType(tag: DW_TAG_member, name: "req_type", scope: !6128, file: !347, line: 448, baseType: !364, size: 8)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !6128, file: !347, line: 464, baseType: !6132, size: 896, offset: 64)
!6132 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "ack_req", file: !347, line: 449, size: 896, elements: !6133)
!6133 = !{!6134, !6144, !6148, !6154, !6159, !6167, !6173, !6181, !6197, !6204}
!6134 = !DIDerivedType(tag: DW_TAG_member, name: "conn_stat", scope: !6132, file: !347, line: 450, baseType: !6135, size: 176)
!6135 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_connection_status_notify", file: !347, line: 360, size: 176, elements: !6136)
!6136 = !{!6137, !6138, !6139, !6140, !6141, !6142, !6143}
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !6135, file: !347, line: 361, baseType: !5839, size: 128)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6135, file: !347, line: 362, baseType: !364, size: 8, offset: 128)
!6139 = !DIDerivedType(tag: DW_TAG_member, name: "legacy_device_plug_status", scope: !6135, file: !347, line: 363, baseType: !370, size: 8, offset: 136)
!6140 = !DIDerivedType(tag: DW_TAG_member, name: "displayport_device_plug_status", scope: !6135, file: !347, line: 364, baseType: !370, size: 8, offset: 144)
!6141 = !DIDerivedType(tag: DW_TAG_member, name: "message_capability_status", scope: !6135, file: !347, line: 365, baseType: !370, size: 8, offset: 152)
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "input_port", scope: !6135, file: !347, line: 366, baseType: !370, size: 8, offset: 160)
!6143 = !DIDerivedType(tag: DW_TAG_member, name: "peer_device_type", scope: !6135, file: !347, line: 367, baseType: !364, size: 8, offset: 168)
!6144 = !DIDerivedType(tag: DW_TAG_member, name: "port_num", scope: !6132, file: !347, line: 451, baseType: !6145, size: 8)
!6145 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_port_number_req", file: !347, line: 415, size: 8, elements: !6146)
!6146 = !{!6147}
!6147 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6145, file: !347, line: 416, baseType: !364, size: 8)
!6148 = !DIDerivedType(tag: DW_TAG_member, name: "resource_stat", scope: !6132, file: !347, line: 452, baseType: !6149, size: 160)
!6149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_resource_status_notify", file: !347, line: 436, size: 160, elements: !6150)
!6150 = !{!6151, !6152, !6153}
!6151 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6149, file: !347, line: 437, baseType: !364, size: 8)
!6152 = !DIDerivedType(tag: DW_TAG_member, name: "guid", scope: !6149, file: !347, line: 438, baseType: !5839, size: 128, offset: 8)
!6153 = !DIDerivedType(tag: DW_TAG_member, name: "available_pbn", scope: !6149, file: !347, line: 439, baseType: !381, size: 16, offset: 144)
!6154 = !DIDerivedType(tag: DW_TAG_member, name: "query_payload", scope: !6132, file: !347, line: 454, baseType: !6155, size: 16)
!6155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_query_payload", file: !347, line: 431, size: 16, elements: !6156)
!6156 = !{!6157, !6158}
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6155, file: !347, line: 432, baseType: !364, size: 8)
!6158 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi", scope: !6155, file: !347, line: 433, baseType: !364, size: 8, offset: 8)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "allocate_payload", scope: !6132, file: !347, line: 455, baseType: !6160, size: 176)
!6160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_allocate_payload", file: !347, line: 346, size: 176, elements: !6161)
!6161 = !{!6162, !6163, !6164, !6165, !6166}
!6162 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6160, file: !347, line: 347, baseType: !364, size: 8)
!6163 = !DIDerivedType(tag: DW_TAG_member, name: "number_sdp_streams", scope: !6160, file: !347, line: 348, baseType: !364, size: 8, offset: 8)
!6164 = !DIDerivedType(tag: DW_TAG_member, name: "vcpi", scope: !6160, file: !347, line: 349, baseType: !364, size: 8, offset: 16)
!6165 = !DIDerivedType(tag: DW_TAG_member, name: "pbn", scope: !6160, file: !347, line: 350, baseType: !381, size: 16, offset: 32)
!6166 = !DIDerivedType(tag: DW_TAG_member, name: "sdp_stream_sink", scope: !6160, file: !347, line: 351, baseType: !5839, size: 128, offset: 48)
!6167 = !DIDerivedType(tag: DW_TAG_member, name: "dpcd_read", scope: !6132, file: !347, line: 457, baseType: !6168, size: 96)
!6168 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_dpcd_read", file: !347, line: 370, size: 96, elements: !6169)
!6169 = !{!6170, !6171, !6172}
!6170 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6168, file: !347, line: 371, baseType: !364, size: 8)
!6171 = !DIDerivedType(tag: DW_TAG_member, name: "dpcd_address", scope: !6168, file: !347, line: 372, baseType: !468, size: 32, offset: 32)
!6172 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes", scope: !6168, file: !347, line: 373, baseType: !364, size: 8, offset: 64)
!6173 = !DIDerivedType(tag: DW_TAG_member, name: "dpcd_write", scope: !6132, file: !347, line: 458, baseType: !6174, size: 192)
!6174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_dpcd_write", file: !347, line: 376, size: 192, elements: !6175)
!6175 = !{!6176, !6177, !6178, !6179}
!6176 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6174, file: !347, line: 377, baseType: !364, size: 8)
!6177 = !DIDerivedType(tag: DW_TAG_member, name: "dpcd_address", scope: !6174, file: !347, line: 378, baseType: !468, size: 32, offset: 32)
!6178 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes", scope: !6174, file: !347, line: 379, baseType: !364, size: 8, offset: 64)
!6179 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6174, file: !347, line: 380, baseType: !6180, size: 64, offset: 128)
!6180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !364, size: 64)
!6181 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_read", scope: !6132, file: !347, line: 460, baseType: !6182, size: 896)
!6182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_i2c_read", file: !347, line: 384, size: 896, elements: !6183)
!6183 = !{!6184, !6185, !6186, !6195, !6196}
!6184 = !DIDerivedType(tag: DW_TAG_member, name: "num_transactions", scope: !6182, file: !347, line: 385, baseType: !364, size: 8)
!6185 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6182, file: !347, line: 386, baseType: !364, size: 8, offset: 8)
!6186 = !DIDerivedType(tag: DW_TAG_member, name: "transactions", scope: !6182, file: !347, line: 393, baseType: !6187, size: 768, offset: 64)
!6187 = !DICompositeType(tag: DW_TAG_array_type, baseType: !6188, size: 768, elements: !1364)
!6188 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_i2c_read_tx", file: !347, line: 387, size: 192, elements: !6189)
!6189 = !{!6190, !6191, !6192, !6193, !6194}
!6190 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_dev_id", scope: !6188, file: !347, line: 388, baseType: !364, size: 8)
!6191 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes", scope: !6188, file: !347, line: 389, baseType: !364, size: 8, offset: 8)
!6192 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6188, file: !347, line: 390, baseType: !6180, size: 64, offset: 64)
!6193 = !DIDerivedType(tag: DW_TAG_member, name: "no_stop_bit", scope: !6188, file: !347, line: 391, baseType: !364, size: 8, offset: 128)
!6194 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_transaction_delay", scope: !6188, file: !347, line: 392, baseType: !364, size: 8, offset: 136)
!6195 = !DIDerivedType(tag: DW_TAG_member, name: "read_i2c_device_id", scope: !6182, file: !347, line: 394, baseType: !364, size: 8, offset: 832)
!6196 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes_read", scope: !6182, file: !347, line: 395, baseType: !364, size: 8, offset: 840)
!6197 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_write", scope: !6132, file: !347, line: 461, baseType: !6198, size: 128)
!6198 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_remote_i2c_write", file: !347, line: 398, size: 128, elements: !6199)
!6199 = !{!6200, !6201, !6202, !6203}
!6200 = !DIDerivedType(tag: DW_TAG_member, name: "port_number", scope: !6198, file: !347, line: 399, baseType: !364, size: 8)
!6201 = !DIDerivedType(tag: DW_TAG_member, name: "write_i2c_device_id", scope: !6198, file: !347, line: 400, baseType: !364, size: 8, offset: 8)
!6202 = !DIDerivedType(tag: DW_TAG_member, name: "num_bytes", scope: !6198, file: !347, line: 401, baseType: !364, size: 8, offset: 16)
!6203 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !6198, file: !347, line: 402, baseType: !6180, size: 64, offset: 64)
!6204 = !DIDerivedType(tag: DW_TAG_member, name: "enc_status", scope: !6132, file: !347, line: 463, baseType: !6205, size: 96)
!6205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_query_stream_enc_status", file: !347, line: 405, size: 96, elements: !6206)
!6206 = !{!6207, !6208, !6212, !6213, !6214, !6215}
!6207 = !DIDerivedType(tag: DW_TAG_member, name: "stream_id", scope: !6205, file: !347, line: 406, baseType: !364, size: 8)
!6208 = !DIDerivedType(tag: DW_TAG_member, name: "client_id", scope: !6205, file: !347, line: 407, baseType: !6209, size: 56, offset: 8)
!6209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 56, elements: !6210)
!6210 = !{!6211}
!6211 = !DISubrange(count: 7)
!6212 = !DIDerivedType(tag: DW_TAG_member, name: "stream_event", scope: !6205, file: !347, line: 408, baseType: !364, size: 8, offset: 64)
!6213 = !DIDerivedType(tag: DW_TAG_member, name: "valid_stream_event", scope: !6205, file: !347, line: 409, baseType: !370, size: 8, offset: 72)
!6214 = !DIDerivedType(tag: DW_TAG_member, name: "stream_behavior", scope: !6205, file: !347, line: 410, baseType: !364, size: 8, offset: 80)
!6215 = !DIDerivedType(tag: DW_TAG_member, name: "valid_stream_behavior", scope: !6205, file: !347, line: 411, baseType: !364, size: 8, offset: 88)
!6216 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6124, file: !3, line: 61, baseType: !385, size: 128, offset: 1088)
!6217 = !{!0, !6218, !6223, !6225, !6227, !6229, !6231, !6233, !6235, !6243, !6251, !6257}
!6218 = !DIGlobalVariableExpression(var: !6219, expr: !DIExpression())
!6219 = distinct !DIGlobalVariable(name: "__key", scope: !6220, file: !3, line: 5393, type: !949, isLocal: true, isDefinition: true)
!6220 = distinct !DISubprogram(name: "drm_dp_mst_topology_mgr_init", scope: !3, file: !3, line: 5386, type: !6221, scopeLine: 5390, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!6221 = !DISubroutineType(types: !6222)
!6222 = !{!115, !406, !3372, !5728, !115, !115, !115}
!6223 = !DIGlobalVariableExpression(var: !6224, expr: !DIExpression())
!6224 = distinct !DIGlobalVariable(name: "__key", scope: !6220, file: !3, line: 5394, type: !949, isLocal: true, isDefinition: true)
!6225 = !DIGlobalVariableExpression(var: !6226, expr: !DIExpression())
!6226 = distinct !DIGlobalVariable(name: "__key", scope: !6220, file: !3, line: 5395, type: !949, isLocal: true, isDefinition: true)
!6227 = !DIGlobalVariableExpression(var: !6228, expr: !DIExpression())
!6228 = distinct !DIGlobalVariable(name: "__key", scope: !6220, file: !3, line: 5396, type: !949, isLocal: true, isDefinition: true)
!6229 = !DIGlobalVariableExpression(var: !6230, expr: !DIExpression())
!6230 = distinct !DIGlobalVariable(name: "__key", scope: !6220, file: !3, line: 5397, type: !949, isLocal: true, isDefinition: true)
!6231 = !DIGlobalVariableExpression(var: !6232, expr: !DIExpression())
!6232 = distinct !DIGlobalVariable(name: "__key", scope: !6220, file: !3, line: 5398, type: !949, isLocal: true, isDefinition: true)
!6233 = !DIGlobalVariableExpression(var: !6234, expr: !DIExpression())
!6234 = distinct !DIGlobalVariable(name: "__key", scope: !6220, file: !3, line: 5419, type: !949, isLocal: true, isDefinition: true)
!6235 = !DIGlobalVariableExpression(var: !6236, expr: !DIExpression())
!6236 = distinct !DIGlobalVariable(name: "req_type_str", scope: !6237, file: !3, line: 103, type: !6240, isLocal: true, isDefinition: true)
!6237 = distinct !DISubprogram(name: "drm_dp_mst_req_type_str", scope: !3, file: !3, line: 101, type: !6238, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!6238 = !DISubroutineType(types: !6239)
!6239 = !{!844, !364}
!6240 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5446, size: 3648, elements: !6241)
!6241 = !{!6242}
!6242 = !DISubrange(count: 57)
!6243 = !DIGlobalVariableExpression(var: !6244, expr: !DIExpression())
!6244 = distinct !DIGlobalVariable(name: "sideband_reason_str", scope: !6245, file: !3, line: 159, type: !6248, isLocal: true, isDefinition: true)
!6245 = distinct !DISubprogram(name: "drm_dp_mst_sideband_tx_state_str", scope: !3, file: !3, line: 157, type: !6246, scopeLine: 158, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!6246 = !DISubroutineType(types: !6247)
!6247 = !{!844, !115}
!6248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5446, size: 320, elements: !6249)
!6249 = !{!6250}
!6250 = !DISubrange(count: 5)
!6251 = !DIGlobalVariableExpression(var: !6252, expr: !DIExpression())
!6252 = distinct !DIGlobalVariable(name: "nak_reason_str", scope: !6253, file: !3, line: 134, type: !6254, isLocal: true, isDefinition: true)
!6253 = distinct !DISubprogram(name: "drm_dp_mst_nak_reason_str", scope: !3, file: !3, line: 132, type: !6238, scopeLine: 133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!6254 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5446, size: 704, elements: !6255)
!6255 = !{!6256}
!6256 = !DISubrange(count: 11)
!6257 = !DIGlobalVariableExpression(var: !6258, expr: !DIExpression())
!6258 = distinct !DIGlobalVariable(name: "drm_dp_mst_i2c_algo", scope: !2, file: !3, line: 5651, type: !5243, isLocal: true, isDefinition: true)
!6259 = !{i32 7, !"Dwarf Version", i32 4}
!6260 = !{i32 2, !"Debug Info Version", i32 3}
!6261 = !{i32 1, !"wchar_size", i32 2}
!6262 = !{i32 1, !"Code Model", i32 2}
!6263 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!6264 = distinct !DISubprogram(name: "drm_dp_encode_sideband_req", scope: !3, file: !3, line: 328, type: !6265, scopeLine: 330, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!6265 = !DISubroutineType(types: !6266)
!6266 = !{null, !6267, !6003}
!6267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6268, size: 64)
!6268 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6128)
!6269 = !DILocalVariable(name: "req", arg: 1, scope: !6264, file: !3, line: 328, type: !6267)
!6270 = !DILocation(line: 328, column: 71, scope: !6264)
!6271 = !DILocalVariable(name: "raw", arg: 2, scope: !6264, file: !3, line: 329, type: !6003)
!6272 = !DILocation(line: 329, column: 38, scope: !6264)
!6273 = !DILocalVariable(name: "idx", scope: !6264, file: !3, line: 331, type: !115)
!6274 = !DILocation(line: 331, column: 6, scope: !6264)
!6275 = !DILocalVariable(name: "i", scope: !6264, file: !3, line: 332, type: !115)
!6276 = !DILocation(line: 332, column: 6, scope: !6264)
!6277 = !DILocalVariable(name: "buf", scope: !6264, file: !3, line: 333, type: !6180)
!6278 = !DILocation(line: 333, column: 6, scope: !6264)
!6279 = !DILocation(line: 333, column: 12, scope: !6264)
!6280 = !DILocation(line: 333, column: 17, scope: !6264)
!6281 = !DILocation(line: 335, column: 15, scope: !6264)
!6282 = !DILocation(line: 335, column: 20, scope: !6264)
!6283 = !DILocation(line: 335, column: 29, scope: !6264)
!6284 = !DILocation(line: 335, column: 2, scope: !6264)
!6285 = !DILocation(line: 335, column: 9, scope: !6264)
!6286 = !DILocation(line: 335, column: 13, scope: !6264)
!6287 = !DILocation(line: 337, column: 10, scope: !6264)
!6288 = !DILocation(line: 337, column: 15, scope: !6264)
!6289 = !DILocation(line: 337, column: 2, scope: !6264)
!6290 = !DILocation(line: 341, column: 15, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6264, file: !3, line: 337, column: 25)
!6292 = !DILocation(line: 341, column: 20, scope: !6291)
!6293 = !DILocation(line: 341, column: 22, scope: !6291)
!6294 = !DILocation(line: 341, column: 31, scope: !6291)
!6295 = !DILocation(line: 341, column: 43, scope: !6291)
!6296 = !DILocation(line: 341, column: 50, scope: !6291)
!6297 = !DILocation(line: 341, column: 14, scope: !6291)
!6298 = !DILocation(line: 341, column: 3, scope: !6291)
!6299 = !DILocation(line: 341, column: 7, scope: !6291)
!6300 = !DILocation(line: 341, column: 12, scope: !6291)
!6301 = !DILocation(line: 342, column: 6, scope: !6291)
!6302 = !DILocation(line: 343, column: 3, scope: !6291)
!6303 = !DILocation(line: 345, column: 15, scope: !6291)
!6304 = !DILocation(line: 345, column: 20, scope: !6291)
!6305 = !DILocation(line: 345, column: 22, scope: !6291)
!6306 = !DILocation(line: 345, column: 39, scope: !6291)
!6307 = !DILocation(line: 345, column: 51, scope: !6291)
!6308 = !DILocation(line: 345, column: 58, scope: !6291)
!6309 = !DILocation(line: 346, column: 5, scope: !6291)
!6310 = !DILocation(line: 346, column: 10, scope: !6291)
!6311 = !DILocation(line: 346, column: 12, scope: !6291)
!6312 = !DILocation(line: 346, column: 29, scope: !6291)
!6313 = !DILocation(line: 346, column: 48, scope: !6291)
!6314 = !DILocation(line: 345, column: 63, scope: !6291)
!6315 = !DILocation(line: 345, column: 14, scope: !6291)
!6316 = !DILocation(line: 345, column: 3, scope: !6291)
!6317 = !DILocation(line: 345, column: 7, scope: !6291)
!6318 = !DILocation(line: 345, column: 12, scope: !6291)
!6319 = !DILocation(line: 347, column: 6, scope: !6291)
!6320 = !DILocation(line: 348, column: 15, scope: !6291)
!6321 = !DILocation(line: 348, column: 20, scope: !6291)
!6322 = !DILocation(line: 348, column: 22, scope: !6291)
!6323 = !DILocation(line: 348, column: 39, scope: !6291)
!6324 = !DILocation(line: 348, column: 44, scope: !6291)
!6325 = !DILocation(line: 348, column: 14, scope: !6291)
!6326 = !DILocation(line: 348, column: 3, scope: !6291)
!6327 = !DILocation(line: 348, column: 7, scope: !6291)
!6328 = !DILocation(line: 348, column: 12, scope: !6291)
!6329 = !DILocation(line: 349, column: 6, scope: !6291)
!6330 = !DILocation(line: 350, column: 15, scope: !6291)
!6331 = !DILocation(line: 350, column: 20, scope: !6291)
!6332 = !DILocation(line: 350, column: 22, scope: !6291)
!6333 = !DILocation(line: 350, column: 39, scope: !6291)
!6334 = !DILocation(line: 350, column: 43, scope: !6291)
!6335 = !DILocation(line: 350, column: 14, scope: !6291)
!6336 = !DILocation(line: 350, column: 3, scope: !6291)
!6337 = !DILocation(line: 350, column: 7, scope: !6291)
!6338 = !DILocation(line: 350, column: 12, scope: !6291)
!6339 = !DILocation(line: 351, column: 6, scope: !6291)
!6340 = !DILocation(line: 352, column: 15, scope: !6291)
!6341 = !DILocation(line: 352, column: 20, scope: !6291)
!6342 = !DILocation(line: 352, column: 22, scope: !6291)
!6343 = !DILocation(line: 352, column: 39, scope: !6291)
!6344 = !DILocation(line: 352, column: 43, scope: !6291)
!6345 = !DILocation(line: 352, column: 14, scope: !6291)
!6346 = !DILocation(line: 352, column: 3, scope: !6291)
!6347 = !DILocation(line: 352, column: 7, scope: !6291)
!6348 = !DILocation(line: 352, column: 12, scope: !6291)
!6349 = !DILocation(line: 353, column: 6, scope: !6291)
!6350 = !DILocation(line: 354, column: 10, scope: !6351)
!6351 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 354, column: 3)
!6352 = !DILocation(line: 354, column: 8, scope: !6351)
!6353 = !DILocation(line: 354, column: 15, scope: !6354)
!6354 = distinct !DILexicalBlock(scope: !6351, file: !3, line: 354, column: 3)
!6355 = !DILocation(line: 354, column: 19, scope: !6354)
!6356 = !DILocation(line: 354, column: 24, scope: !6354)
!6357 = !DILocation(line: 354, column: 26, scope: !6354)
!6358 = !DILocation(line: 354, column: 43, scope: !6354)
!6359 = !DILocation(line: 354, column: 62, scope: !6354)
!6360 = !DILocation(line: 354, column: 17, scope: !6354)
!6361 = !DILocation(line: 354, column: 3, scope: !6351)
!6362 = !DILocation(line: 355, column: 17, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6354, file: !3, line: 354, column: 72)
!6364 = !DILocation(line: 355, column: 22, scope: !6363)
!6365 = !DILocation(line: 355, column: 24, scope: !6363)
!6366 = !DILocation(line: 355, column: 41, scope: !6363)
!6367 = !DILocation(line: 355, column: 57, scope: !6363)
!6368 = !DILocation(line: 355, column: 59, scope: !6363)
!6369 = !DILocation(line: 355, column: 64, scope: !6363)
!6370 = !DILocation(line: 355, column: 71, scope: !6363)
!6371 = !DILocation(line: 356, column: 6, scope: !6363)
!6372 = !DILocation(line: 356, column: 11, scope: !6363)
!6373 = !DILocation(line: 356, column: 13, scope: !6363)
!6374 = !DILocation(line: 356, column: 30, scope: !6363)
!6375 = !DILocation(line: 356, column: 46, scope: !6363)
!6376 = !DILocation(line: 356, column: 48, scope: !6363)
!6377 = !DILocation(line: 356, column: 52, scope: !6363)
!6378 = !DILocation(line: 356, column: 57, scope: !6363)
!6379 = !DILocation(line: 355, column: 77, scope: !6363)
!6380 = !DILocation(line: 355, column: 15, scope: !6363)
!6381 = !DILocation(line: 355, column: 4, scope: !6363)
!6382 = !DILocation(line: 355, column: 8, scope: !6363)
!6383 = !DILocation(line: 355, column: 13, scope: !6363)
!6384 = !DILocation(line: 357, column: 7, scope: !6363)
!6385 = !DILocation(line: 358, column: 3, scope: !6363)
!6386 = !DILocation(line: 354, column: 68, scope: !6354)
!6387 = !DILocation(line: 354, column: 3, scope: !6354)
!6388 = distinct !{!6388, !6361, !6389}
!6389 = !DILocation(line: 358, column: 3, scope: !6351)
!6390 = !DILocation(line: 359, column: 7, scope: !6391)
!6391 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 359, column: 7)
!6392 = !DILocation(line: 359, column: 12, scope: !6391)
!6393 = !DILocation(line: 359, column: 14, scope: !6391)
!6394 = !DILocation(line: 359, column: 31, scope: !6391)
!6395 = !DILocation(line: 359, column: 50, scope: !6391)
!6396 = !DILocation(line: 359, column: 7, scope: !6291)
!6397 = !DILocation(line: 360, column: 8, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6391, file: !3, line: 359, column: 55)
!6399 = !DILocation(line: 360, column: 13, scope: !6398)
!6400 = !DILocation(line: 360, column: 15, scope: !6398)
!6401 = !DILocation(line: 360, column: 32, scope: !6398)
!6402 = !DILocation(line: 360, column: 51, scope: !6398)
!6403 = !DILocation(line: 360, column: 6, scope: !6398)
!6404 = !DILocation(line: 361, column: 16, scope: !6398)
!6405 = !DILocation(line: 361, column: 21, scope: !6398)
!6406 = !DILocation(line: 361, column: 23, scope: !6398)
!6407 = !DILocation(line: 361, column: 40, scope: !6398)
!6408 = !DILocation(line: 361, column: 56, scope: !6398)
!6409 = !DILocation(line: 361, column: 59, scope: !6398)
!6410 = !DILocation(line: 361, column: 66, scope: !6398)
!6411 = !DILocation(line: 361, column: 15, scope: !6398)
!6412 = !DILocation(line: 361, column: 4, scope: !6398)
!6413 = !DILocation(line: 361, column: 8, scope: !6398)
!6414 = !DILocation(line: 361, column: 13, scope: !6398)
!6415 = !DILocation(line: 362, column: 7, scope: !6398)
!6416 = !DILocation(line: 363, column: 3, scope: !6398)
!6417 = !DILocation(line: 364, column: 3, scope: !6291)
!6418 = !DILocation(line: 366, column: 15, scope: !6291)
!6419 = !DILocation(line: 366, column: 20, scope: !6291)
!6420 = !DILocation(line: 366, column: 22, scope: !6291)
!6421 = !DILocation(line: 366, column: 36, scope: !6291)
!6422 = !DILocation(line: 366, column: 48, scope: !6291)
!6423 = !DILocation(line: 366, column: 55, scope: !6291)
!6424 = !DILocation(line: 366, column: 14, scope: !6291)
!6425 = !DILocation(line: 366, column: 3, scope: !6291)
!6426 = !DILocation(line: 366, column: 7, scope: !6291)
!6427 = !DILocation(line: 366, column: 12, scope: !6291)
!6428 = !DILocation(line: 367, column: 6, scope: !6291)
!6429 = !DILocation(line: 368, column: 15, scope: !6291)
!6430 = !DILocation(line: 368, column: 20, scope: !6291)
!6431 = !DILocation(line: 368, column: 22, scope: !6291)
!6432 = !DILocation(line: 368, column: 36, scope: !6291)
!6433 = !DILocation(line: 368, column: 41, scope: !6291)
!6434 = !DILocation(line: 368, column: 14, scope: !6291)
!6435 = !DILocation(line: 368, column: 3, scope: !6291)
!6436 = !DILocation(line: 368, column: 7, scope: !6291)
!6437 = !DILocation(line: 368, column: 12, scope: !6291)
!6438 = !DILocation(line: 369, column: 6, scope: !6291)
!6439 = !DILocation(line: 370, column: 3, scope: !6291)
!6440 = !DILocation(line: 372, column: 15, scope: !6291)
!6441 = !DILocation(line: 372, column: 20, scope: !6291)
!6442 = !DILocation(line: 372, column: 22, scope: !6291)
!6443 = !DILocation(line: 372, column: 32, scope: !6291)
!6444 = !DILocation(line: 372, column: 44, scope: !6291)
!6445 = !DILocation(line: 372, column: 51, scope: !6291)
!6446 = !DILocation(line: 372, column: 14, scope: !6291)
!6447 = !DILocation(line: 372, column: 3, scope: !6291)
!6448 = !DILocation(line: 372, column: 7, scope: !6291)
!6449 = !DILocation(line: 372, column: 12, scope: !6291)
!6450 = !DILocation(line: 373, column: 17, scope: !6291)
!6451 = !DILocation(line: 373, column: 22, scope: !6291)
!6452 = !DILocation(line: 373, column: 24, scope: !6291)
!6453 = !DILocation(line: 373, column: 34, scope: !6291)
!6454 = !DILocation(line: 373, column: 47, scope: !6291)
!6455 = !DILocation(line: 373, column: 58, scope: !6291)
!6456 = !DILocation(line: 373, column: 65, scope: !6291)
!6457 = !DILocation(line: 373, column: 3, scope: !6291)
!6458 = !DILocation(line: 373, column: 7, scope: !6291)
!6459 = !DILocation(line: 373, column: 12, scope: !6291)
!6460 = !DILocation(line: 374, column: 6, scope: !6291)
!6461 = !DILocation(line: 375, column: 15, scope: !6291)
!6462 = !DILocation(line: 375, column: 20, scope: !6291)
!6463 = !DILocation(line: 375, column: 22, scope: !6291)
!6464 = !DILocation(line: 375, column: 32, scope: !6291)
!6465 = !DILocation(line: 375, column: 45, scope: !6291)
!6466 = !DILocation(line: 375, column: 55, scope: !6291)
!6467 = !DILocation(line: 375, column: 14, scope: !6291)
!6468 = !DILocation(line: 375, column: 3, scope: !6291)
!6469 = !DILocation(line: 375, column: 7, scope: !6291)
!6470 = !DILocation(line: 375, column: 12, scope: !6291)
!6471 = !DILocation(line: 376, column: 6, scope: !6291)
!6472 = !DILocation(line: 377, column: 15, scope: !6291)
!6473 = !DILocation(line: 377, column: 20, scope: !6291)
!6474 = !DILocation(line: 377, column: 22, scope: !6291)
!6475 = !DILocation(line: 377, column: 32, scope: !6291)
!6476 = !DILocation(line: 377, column: 45, scope: !6291)
!6477 = !DILocation(line: 377, column: 14, scope: !6291)
!6478 = !DILocation(line: 377, column: 3, scope: !6291)
!6479 = !DILocation(line: 377, column: 7, scope: !6291)
!6480 = !DILocation(line: 377, column: 12, scope: !6291)
!6481 = !DILocation(line: 378, column: 6, scope: !6291)
!6482 = !DILocation(line: 379, column: 15, scope: !6291)
!6483 = !DILocation(line: 379, column: 20, scope: !6291)
!6484 = !DILocation(line: 379, column: 22, scope: !6291)
!6485 = !DILocation(line: 379, column: 32, scope: !6291)
!6486 = !DILocation(line: 379, column: 3, scope: !6291)
!6487 = !DILocation(line: 379, column: 7, scope: !6291)
!6488 = !DILocation(line: 379, column: 12, scope: !6291)
!6489 = !DILocation(line: 380, column: 6, scope: !6291)
!6490 = !DILocation(line: 381, column: 3, scope: !6291)
!6491 = !DILocation(line: 384, column: 15, scope: !6291)
!6492 = !DILocation(line: 384, column: 20, scope: !6291)
!6493 = !DILocation(line: 384, column: 22, scope: !6291)
!6494 = !DILocation(line: 384, column: 33, scope: !6291)
!6495 = !DILocation(line: 384, column: 45, scope: !6291)
!6496 = !DILocation(line: 384, column: 52, scope: !6291)
!6497 = !DILocation(line: 384, column: 14, scope: !6291)
!6498 = !DILocation(line: 384, column: 3, scope: !6291)
!6499 = !DILocation(line: 384, column: 7, scope: !6291)
!6500 = !DILocation(line: 384, column: 12, scope: !6291)
!6501 = !DILocation(line: 385, column: 17, scope: !6291)
!6502 = !DILocation(line: 385, column: 22, scope: !6291)
!6503 = !DILocation(line: 385, column: 24, scope: !6291)
!6504 = !DILocation(line: 385, column: 35, scope: !6291)
!6505 = !DILocation(line: 385, column: 48, scope: !6291)
!6506 = !DILocation(line: 385, column: 59, scope: !6291)
!6507 = !DILocation(line: 385, column: 66, scope: !6291)
!6508 = !DILocation(line: 385, column: 3, scope: !6291)
!6509 = !DILocation(line: 385, column: 7, scope: !6291)
!6510 = !DILocation(line: 385, column: 12, scope: !6291)
!6511 = !DILocation(line: 386, column: 6, scope: !6291)
!6512 = !DILocation(line: 387, column: 15, scope: !6291)
!6513 = !DILocation(line: 387, column: 20, scope: !6291)
!6514 = !DILocation(line: 387, column: 22, scope: !6291)
!6515 = !DILocation(line: 387, column: 33, scope: !6291)
!6516 = !DILocation(line: 387, column: 46, scope: !6291)
!6517 = !DILocation(line: 387, column: 56, scope: !6291)
!6518 = !DILocation(line: 387, column: 14, scope: !6291)
!6519 = !DILocation(line: 387, column: 3, scope: !6291)
!6520 = !DILocation(line: 387, column: 7, scope: !6291)
!6521 = !DILocation(line: 387, column: 12, scope: !6291)
!6522 = !DILocation(line: 388, column: 6, scope: !6291)
!6523 = !DILocation(line: 389, column: 15, scope: !6291)
!6524 = !DILocation(line: 389, column: 20, scope: !6291)
!6525 = !DILocation(line: 389, column: 22, scope: !6291)
!6526 = !DILocation(line: 389, column: 33, scope: !6291)
!6527 = !DILocation(line: 389, column: 46, scope: !6291)
!6528 = !DILocation(line: 389, column: 14, scope: !6291)
!6529 = !DILocation(line: 389, column: 3, scope: !6291)
!6530 = !DILocation(line: 389, column: 7, scope: !6291)
!6531 = !DILocation(line: 389, column: 12, scope: !6291)
!6532 = !DILocation(line: 390, column: 6, scope: !6291)
!6533 = !DILocation(line: 391, column: 15, scope: !6291)
!6534 = !DILocation(line: 391, column: 20, scope: !6291)
!6535 = !DILocation(line: 391, column: 22, scope: !6291)
!6536 = !DILocation(line: 391, column: 33, scope: !6291)
!6537 = !DILocation(line: 391, column: 3, scope: !6291)
!6538 = !DILocation(line: 391, column: 7, scope: !6291)
!6539 = !DILocation(line: 391, column: 12, scope: !6291)
!6540 = !DILocation(line: 392, column: 6, scope: !6291)
!6541 = !DILocation(line: 393, column: 11, scope: !6291)
!6542 = !DILocation(line: 393, column: 15, scope: !6291)
!6543 = !DILocation(line: 393, column: 21, scope: !6291)
!6544 = !DILocation(line: 393, column: 26, scope: !6291)
!6545 = !DILocation(line: 393, column: 28, scope: !6291)
!6546 = !DILocation(line: 393, column: 39, scope: !6291)
!6547 = !DILocation(line: 393, column: 46, scope: !6291)
!6548 = !DILocation(line: 393, column: 51, scope: !6291)
!6549 = !DILocation(line: 393, column: 53, scope: !6291)
!6550 = !DILocation(line: 393, column: 64, scope: !6291)
!6551 = !DILocation(line: 393, column: 3, scope: !6291)
!6552 = !DILocation(line: 394, column: 10, scope: !6291)
!6553 = !DILocation(line: 394, column: 15, scope: !6291)
!6554 = !DILocation(line: 394, column: 17, scope: !6291)
!6555 = !DILocation(line: 394, column: 28, scope: !6291)
!6556 = !DILocation(line: 394, column: 7, scope: !6291)
!6557 = !DILocation(line: 395, column: 3, scope: !6291)
!6558 = !DILocation(line: 397, column: 15, scope: !6291)
!6559 = !DILocation(line: 397, column: 20, scope: !6291)
!6560 = !DILocation(line: 397, column: 22, scope: !6291)
!6561 = !DILocation(line: 397, column: 31, scope: !6291)
!6562 = !DILocation(line: 397, column: 43, scope: !6291)
!6563 = !DILocation(line: 397, column: 50, scope: !6291)
!6564 = !DILocation(line: 397, column: 14, scope: !6291)
!6565 = !DILocation(line: 397, column: 3, scope: !6291)
!6566 = !DILocation(line: 397, column: 7, scope: !6291)
!6567 = !DILocation(line: 397, column: 12, scope: !6291)
!6568 = !DILocation(line: 398, column: 16, scope: !6291)
!6569 = !DILocation(line: 398, column: 21, scope: !6291)
!6570 = !DILocation(line: 398, column: 23, scope: !6291)
!6571 = !DILocation(line: 398, column: 32, scope: !6291)
!6572 = !DILocation(line: 398, column: 49, scope: !6291)
!6573 = !DILocation(line: 398, column: 3, scope: !6291)
!6574 = !DILocation(line: 398, column: 7, scope: !6291)
!6575 = !DILocation(line: 398, column: 12, scope: !6291)
!6576 = !DILocation(line: 399, column: 6, scope: !6291)
!6577 = !DILocation(line: 400, column: 10, scope: !6578)
!6578 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 400, column: 3)
!6579 = !DILocation(line: 400, column: 8, scope: !6578)
!6580 = !DILocation(line: 400, column: 15, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !6578, file: !3, line: 400, column: 3)
!6582 = !DILocation(line: 400, column: 20, scope: !6581)
!6583 = !DILocation(line: 400, column: 25, scope: !6581)
!6584 = !DILocation(line: 400, column: 27, scope: !6581)
!6585 = !DILocation(line: 400, column: 36, scope: !6581)
!6586 = !DILocation(line: 400, column: 53, scope: !6581)
!6587 = !DILocation(line: 400, column: 17, scope: !6581)
!6588 = !DILocation(line: 400, column: 3, scope: !6578)
!6589 = !DILocation(line: 401, column: 15, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6581, file: !3, line: 400, column: 66)
!6591 = !DILocation(line: 401, column: 20, scope: !6590)
!6592 = !DILocation(line: 401, column: 22, scope: !6590)
!6593 = !DILocation(line: 401, column: 31, scope: !6590)
!6594 = !DILocation(line: 401, column: 44, scope: !6590)
!6595 = !DILocation(line: 401, column: 47, scope: !6590)
!6596 = !DILocation(line: 401, column: 58, scope: !6590)
!6597 = !DILocation(line: 401, column: 4, scope: !6590)
!6598 = !DILocation(line: 401, column: 8, scope: !6590)
!6599 = !DILocation(line: 401, column: 13, scope: !6590)
!6600 = !DILocation(line: 402, column: 7, scope: !6590)
!6601 = !DILocation(line: 403, column: 15, scope: !6590)
!6602 = !DILocation(line: 403, column: 20, scope: !6590)
!6603 = !DILocation(line: 403, column: 22, scope: !6590)
!6604 = !DILocation(line: 403, column: 31, scope: !6590)
!6605 = !DILocation(line: 403, column: 44, scope: !6590)
!6606 = !DILocation(line: 403, column: 47, scope: !6590)
!6607 = !DILocation(line: 403, column: 4, scope: !6590)
!6608 = !DILocation(line: 403, column: 8, scope: !6590)
!6609 = !DILocation(line: 403, column: 13, scope: !6590)
!6610 = !DILocation(line: 404, column: 7, scope: !6590)
!6611 = !DILocation(line: 405, column: 12, scope: !6590)
!6612 = !DILocation(line: 405, column: 16, scope: !6590)
!6613 = !DILocation(line: 405, column: 22, scope: !6590)
!6614 = !DILocation(line: 405, column: 27, scope: !6590)
!6615 = !DILocation(line: 405, column: 29, scope: !6590)
!6616 = !DILocation(line: 405, column: 38, scope: !6590)
!6617 = !DILocation(line: 405, column: 51, scope: !6590)
!6618 = !DILocation(line: 405, column: 54, scope: !6590)
!6619 = !DILocation(line: 405, column: 61, scope: !6590)
!6620 = !DILocation(line: 405, column: 66, scope: !6590)
!6621 = !DILocation(line: 405, column: 68, scope: !6590)
!6622 = !DILocation(line: 405, column: 77, scope: !6590)
!6623 = !DILocation(line: 405, column: 90, scope: !6590)
!6624 = !DILocation(line: 405, column: 93, scope: !6590)
!6625 = !DILocation(line: 405, column: 4, scope: !6590)
!6626 = !DILocation(line: 406, column: 11, scope: !6590)
!6627 = !DILocation(line: 406, column: 16, scope: !6590)
!6628 = !DILocation(line: 406, column: 18, scope: !6590)
!6629 = !DILocation(line: 406, column: 27, scope: !6590)
!6630 = !DILocation(line: 406, column: 40, scope: !6590)
!6631 = !DILocation(line: 406, column: 43, scope: !6590)
!6632 = !DILocation(line: 406, column: 8, scope: !6590)
!6633 = !DILocation(line: 408, column: 16, scope: !6590)
!6634 = !DILocation(line: 408, column: 21, scope: !6590)
!6635 = !DILocation(line: 408, column: 23, scope: !6590)
!6636 = !DILocation(line: 408, column: 32, scope: !6590)
!6637 = !DILocation(line: 408, column: 45, scope: !6590)
!6638 = !DILocation(line: 408, column: 48, scope: !6590)
!6639 = !DILocation(line: 408, column: 60, scope: !6590)
!6640 = !DILocation(line: 408, column: 67, scope: !6590)
!6641 = !DILocation(line: 408, column: 15, scope: !6590)
!6642 = !DILocation(line: 408, column: 4, scope: !6590)
!6643 = !DILocation(line: 408, column: 8, scope: !6590)
!6644 = !DILocation(line: 408, column: 13, scope: !6590)
!6645 = !DILocation(line: 409, column: 17, scope: !6590)
!6646 = !DILocation(line: 409, column: 22, scope: !6590)
!6647 = !DILocation(line: 409, column: 24, scope: !6590)
!6648 = !DILocation(line: 409, column: 33, scope: !6590)
!6649 = !DILocation(line: 409, column: 46, scope: !6590)
!6650 = !DILocation(line: 409, column: 49, scope: !6590)
!6651 = !DILocation(line: 409, column: 71, scope: !6590)
!6652 = !DILocation(line: 409, column: 4, scope: !6590)
!6653 = !DILocation(line: 409, column: 8, scope: !6590)
!6654 = !DILocation(line: 409, column: 13, scope: !6590)
!6655 = !DILocation(line: 410, column: 7, scope: !6590)
!6656 = !DILocation(line: 411, column: 3, scope: !6590)
!6657 = !DILocation(line: 400, column: 62, scope: !6581)
!6658 = !DILocation(line: 400, column: 3, scope: !6581)
!6659 = distinct !{!6659, !6588, !6660}
!6660 = !DILocation(line: 411, column: 3, scope: !6578)
!6661 = !DILocation(line: 412, column: 15, scope: !6291)
!6662 = !DILocation(line: 412, column: 20, scope: !6291)
!6663 = !DILocation(line: 412, column: 22, scope: !6291)
!6664 = !DILocation(line: 412, column: 31, scope: !6291)
!6665 = !DILocation(line: 412, column: 14, scope: !6291)
!6666 = !DILocation(line: 412, column: 51, scope: !6291)
!6667 = !DILocation(line: 412, column: 3, scope: !6291)
!6668 = !DILocation(line: 412, column: 7, scope: !6291)
!6669 = !DILocation(line: 412, column: 12, scope: !6291)
!6670 = !DILocation(line: 413, column: 6, scope: !6291)
!6671 = !DILocation(line: 414, column: 15, scope: !6291)
!6672 = !DILocation(line: 414, column: 20, scope: !6291)
!6673 = !DILocation(line: 414, column: 22, scope: !6291)
!6674 = !DILocation(line: 414, column: 31, scope: !6291)
!6675 = !DILocation(line: 414, column: 3, scope: !6291)
!6676 = !DILocation(line: 414, column: 7, scope: !6291)
!6677 = !DILocation(line: 414, column: 12, scope: !6291)
!6678 = !DILocation(line: 415, column: 6, scope: !6291)
!6679 = !DILocation(line: 416, column: 3, scope: !6291)
!6680 = !DILocation(line: 419, column: 15, scope: !6291)
!6681 = !DILocation(line: 419, column: 20, scope: !6291)
!6682 = !DILocation(line: 419, column: 22, scope: !6291)
!6683 = !DILocation(line: 419, column: 32, scope: !6291)
!6684 = !DILocation(line: 419, column: 44, scope: !6291)
!6685 = !DILocation(line: 419, column: 51, scope: !6291)
!6686 = !DILocation(line: 419, column: 14, scope: !6291)
!6687 = !DILocation(line: 419, column: 3, scope: !6291)
!6688 = !DILocation(line: 419, column: 7, scope: !6291)
!6689 = !DILocation(line: 419, column: 12, scope: !6291)
!6690 = !DILocation(line: 420, column: 6, scope: !6291)
!6691 = !DILocation(line: 421, column: 15, scope: !6291)
!6692 = !DILocation(line: 421, column: 20, scope: !6291)
!6693 = !DILocation(line: 421, column: 22, scope: !6291)
!6694 = !DILocation(line: 421, column: 32, scope: !6291)
!6695 = !DILocation(line: 421, column: 14, scope: !6291)
!6696 = !DILocation(line: 421, column: 53, scope: !6291)
!6697 = !DILocation(line: 421, column: 3, scope: !6291)
!6698 = !DILocation(line: 421, column: 7, scope: !6291)
!6699 = !DILocation(line: 421, column: 12, scope: !6291)
!6700 = !DILocation(line: 422, column: 6, scope: !6291)
!6701 = !DILocation(line: 423, column: 15, scope: !6291)
!6702 = !DILocation(line: 423, column: 20, scope: !6291)
!6703 = !DILocation(line: 423, column: 22, scope: !6291)
!6704 = !DILocation(line: 423, column: 32, scope: !6291)
!6705 = !DILocation(line: 423, column: 3, scope: !6291)
!6706 = !DILocation(line: 423, column: 7, scope: !6291)
!6707 = !DILocation(line: 423, column: 12, scope: !6291)
!6708 = !DILocation(line: 424, column: 6, scope: !6291)
!6709 = !DILocation(line: 425, column: 11, scope: !6291)
!6710 = !DILocation(line: 425, column: 15, scope: !6291)
!6711 = !DILocation(line: 425, column: 21, scope: !6291)
!6712 = !DILocation(line: 425, column: 26, scope: !6291)
!6713 = !DILocation(line: 425, column: 28, scope: !6291)
!6714 = !DILocation(line: 425, column: 38, scope: !6291)
!6715 = !DILocation(line: 425, column: 45, scope: !6291)
!6716 = !DILocation(line: 425, column: 50, scope: !6291)
!6717 = !DILocation(line: 425, column: 52, scope: !6291)
!6718 = !DILocation(line: 425, column: 62, scope: !6291)
!6719 = !DILocation(line: 425, column: 3, scope: !6291)
!6720 = !DILocation(line: 426, column: 10, scope: !6291)
!6721 = !DILocation(line: 426, column: 15, scope: !6291)
!6722 = !DILocation(line: 426, column: 17, scope: !6291)
!6723 = !DILocation(line: 426, column: 27, scope: !6291)
!6724 = !DILocation(line: 426, column: 7, scope: !6291)
!6725 = !DILocation(line: 427, column: 3, scope: !6291)
!6726 = !DILocalVariable(name: "msg", scope: !6727, file: !3, line: 429, type: !6728)
!6727 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 428, column: 35)
!6728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6729, size: 64)
!6729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6205)
!6730 = !DILocation(line: 429, column: 48, scope: !6727)
!6731 = !DILocation(line: 431, column: 10, scope: !6727)
!6732 = !DILocation(line: 431, column: 15, scope: !6727)
!6733 = !DILocation(line: 431, column: 17, scope: !6727)
!6734 = !DILocation(line: 431, column: 7, scope: !6727)
!6735 = !DILocation(line: 432, column: 14, scope: !6727)
!6736 = !DILocation(line: 432, column: 19, scope: !6727)
!6737 = !DILocation(line: 432, column: 3, scope: !6727)
!6738 = !DILocation(line: 432, column: 7, scope: !6727)
!6739 = !DILocation(line: 432, column: 12, scope: !6727)
!6740 = !DILocation(line: 433, column: 6, scope: !6727)
!6741 = !DILocation(line: 434, column: 11, scope: !6727)
!6742 = !DILocation(line: 434, column: 15, scope: !6727)
!6743 = !DILocation(line: 434, column: 21, scope: !6727)
!6744 = !DILocation(line: 434, column: 26, scope: !6727)
!6745 = !DILocation(line: 434, column: 3, scope: !6727)
!6746 = !DILocation(line: 435, column: 7, scope: !6727)
!6747 = !DILocation(line: 436, column: 3, scope: !6727)
!6748 = !DILocation(line: 436, column: 7, scope: !6727)
!6749 = !DILocation(line: 436, column: 12, scope: !6727)
!6750 = !DILocation(line: 437, column: 15, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 437, column: 15)
!6752 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 437, column: 15)
!6753 = !DILocation(line: 437, column: 15, scope: !6754)
!6754 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 437, column: 15)
!6755 = !DILocation(line: 437, column: 15, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 437, column: 15)
!6757 = !DILocation(line: 437, column: 15, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 437, column: 15)
!6759 = !DILocation(line: 437, column: 15, scope: !6760)
!6760 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 437, column: 15)
!6761 = !DILocation(line: 437, column: 15, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !6751, file: !3, line: 437, column: 15)
!6763 = !DILocation(line: 437, column: 15, scope: !6752)
!6764 = !DILocation(line: 437, column: 3, scope: !6727)
!6765 = !DILocation(line: 437, column: 7, scope: !6727)
!6766 = !DILocation(line: 437, column: 12, scope: !6727)
!6767 = !DILocation(line: 438, column: 15, scope: !6727)
!6768 = !DILocation(line: 438, column: 20, scope: !6727)
!6769 = !DILocation(line: 438, column: 3, scope: !6727)
!6770 = !DILocation(line: 438, column: 7, scope: !6727)
!6771 = !DILocation(line: 438, column: 12, scope: !6727)
!6772 = !DILocation(line: 439, column: 15, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 439, column: 15)
!6774 = distinct !DILexicalBlock(scope: !6727, file: !3, line: 439, column: 15)
!6775 = !DILocation(line: 439, column: 15, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 439, column: 15)
!6777 = !DILocation(line: 439, column: 15, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 439, column: 15)
!6779 = !DILocation(line: 439, column: 15, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 439, column: 15)
!6781 = !DILocation(line: 439, column: 15, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 439, column: 15)
!6783 = !DILocation(line: 439, column: 15, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6773, file: !3, line: 439, column: 15)
!6785 = !DILocation(line: 439, column: 15, scope: !6774)
!6786 = !DILocation(line: 439, column: 3, scope: !6727)
!6787 = !DILocation(line: 439, column: 7, scope: !6727)
!6788 = !DILocation(line: 439, column: 12, scope: !6727)
!6789 = !DILocation(line: 440, column: 15, scope: !6727)
!6790 = !DILocation(line: 440, column: 20, scope: !6727)
!6791 = !DILocation(line: 440, column: 3, scope: !6727)
!6792 = !DILocation(line: 440, column: 7, scope: !6727)
!6793 = !DILocation(line: 440, column: 12, scope: !6727)
!6794 = !DILocation(line: 441, column: 6, scope: !6727)
!6795 = !DILocation(line: 443, column: 3, scope: !6291)
!6796 = !DILocation(line: 445, column: 17, scope: !6264)
!6797 = !DILocation(line: 445, column: 2, scope: !6264)
!6798 = !DILocation(line: 445, column: 7, scope: !6264)
!6799 = !DILocation(line: 445, column: 15, scope: !6264)
!6800 = !DILocation(line: 446, column: 1, scope: !6264)
!6801 = distinct !DISubprogram(name: "drm_dp_decode_sideband_req", scope: !3, file: !3, line: 451, type: !6802, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!6802 = !DISubroutineType(types: !6803)
!6803 = !{!115, !6804, !6806}
!6804 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6805, size: 64)
!6805 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6004)
!6806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6128, size: 64)
!6807 = !DILocalVariable(name: "raw", arg: 1, scope: !6801, file: !3, line: 451, type: !6804)
!6808 = !DILocation(line: 451, column: 65, scope: !6801)
!6809 = !DILocalVariable(name: "req", arg: 2, scope: !6801, file: !3, line: 452, type: !6806)
!6810 = !DILocation(line: 452, column: 44, scope: !6801)
!6811 = !DILocalVariable(name: "buf", scope: !6801, file: !3, line: 454, type: !6812)
!6812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6813, size: 64)
!6813 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !364)
!6814 = !DILocation(line: 454, column: 12, scope: !6801)
!6815 = !DILocation(line: 454, column: 18, scope: !6801)
!6816 = !DILocation(line: 454, column: 23, scope: !6801)
!6817 = !DILocalVariable(name: "i", scope: !6801, file: !3, line: 455, type: !115)
!6818 = !DILocation(line: 455, column: 6, scope: !6801)
!6819 = !DILocalVariable(name: "idx", scope: !6801, file: !3, line: 455, type: !115)
!6820 = !DILocation(line: 455, column: 9, scope: !6801)
!6821 = !DILocation(line: 457, column: 18, scope: !6801)
!6822 = !DILocation(line: 457, column: 25, scope: !6801)
!6823 = !DILocation(line: 457, column: 29, scope: !6801)
!6824 = !DILocation(line: 457, column: 2, scope: !6801)
!6825 = !DILocation(line: 457, column: 7, scope: !6801)
!6826 = !DILocation(line: 457, column: 16, scope: !6801)
!6827 = !DILocation(line: 458, column: 10, scope: !6801)
!6828 = !DILocation(line: 458, column: 15, scope: !6801)
!6829 = !DILocation(line: 458, column: 2, scope: !6801)
!6830 = !DILocation(line: 462, column: 34, scope: !6831)
!6831 = distinct !DILexicalBlock(scope: !6801, file: !3, line: 458, column: 25)
!6832 = !DILocation(line: 462, column: 38, scope: !6831)
!6833 = !DILocation(line: 462, column: 43, scope: !6831)
!6834 = !DILocation(line: 462, column: 49, scope: !6831)
!6835 = !DILocation(line: 462, column: 33, scope: !6831)
!6836 = !DILocation(line: 462, column: 3, scope: !6831)
!6837 = !DILocation(line: 462, column: 8, scope: !6831)
!6838 = !DILocation(line: 462, column: 10, scope: !6831)
!6839 = !DILocation(line: 462, column: 19, scope: !6831)
!6840 = !DILocation(line: 462, column: 31, scope: !6831)
!6841 = !DILocation(line: 463, column: 3, scope: !6831)
!6842 = !DILocalVariable(name: "a", scope: !6843, file: !3, line: 466, type: !6844)
!6843 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 465, column: 3)
!6844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6160, size: 64)
!6845 = !DILocation(line: 466, column: 36, scope: !6843)
!6846 = !DILocation(line: 467, column: 6, scope: !6843)
!6847 = !DILocation(line: 467, column: 11, scope: !6843)
!6848 = !DILocation(line: 467, column: 13, scope: !6843)
!6849 = !DILocation(line: 469, column: 28, scope: !6843)
!6850 = !DILocation(line: 469, column: 32, scope: !6843)
!6851 = !DILocation(line: 469, column: 37, scope: !6843)
!6852 = !DILocation(line: 469, column: 4, scope: !6843)
!6853 = !DILocation(line: 469, column: 7, scope: !6843)
!6854 = !DILocation(line: 469, column: 26, scope: !6843)
!6855 = !DILocation(line: 470, column: 22, scope: !6843)
!6856 = !DILocation(line: 470, column: 26, scope: !6843)
!6857 = !DILocation(line: 470, column: 31, scope: !6843)
!6858 = !DILocation(line: 470, column: 37, scope: !6843)
!6859 = !DILocation(line: 470, column: 21, scope: !6843)
!6860 = !DILocation(line: 470, column: 4, scope: !6843)
!6861 = !DILocation(line: 470, column: 7, scope: !6843)
!6862 = !DILocation(line: 470, column: 19, scope: !6843)
!6863 = !DILocalVariable(name: "__ret_warn_on", scope: !6864, file: !3, line: 472, type: !115)
!6864 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 472, column: 4)
!6865 = !DILocation(line: 472, column: 4, scope: !6864)
!6866 = !DILocation(line: 472, column: 4, scope: !6867)
!6867 = distinct !DILexicalBlock(scope: !6864, file: !3, line: 472, column: 4)
!6868 = !DILocation(line: 472, column: 4, scope: !6869)
!6869 = distinct !DILexicalBlock(scope: !6867, file: !3, line: 472, column: 4)
!6870 = !DILocation(line: 472, column: 4, scope: !6871)
!6871 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 472, column: 4)
!6872 = !DILocation(line: 472, column: 4, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 472, column: 4)
!6874 = !{i32 -2140148781, i32 -2140148752, i32 -2140148706, i32 -2140148648, i32 -2140148594, i32 -2140148540, i32 -2140148485, i32 -2140148454}
!6875 = !DILocation(line: 472, column: 4, scope: !6876)
!6876 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 472, column: 4)
!6877 = !{i32 -2140148035, i32 -2140148028, i32 -2140147976, i32 -2140147945, i32 -2140147915}
!6878 = !DILocation(line: 472, column: 4, scope: !6879)
!6879 = distinct !DILexicalBlock(scope: !6869, file: !3, line: 472, column: 4)
!6880 = !DILocation(line: 473, column: 14, scope: !6843)
!6881 = !DILocation(line: 473, column: 18, scope: !6843)
!6882 = !DILocation(line: 473, column: 23, scope: !6843)
!6883 = !DILocation(line: 473, column: 4, scope: !6843)
!6884 = !DILocation(line: 473, column: 7, scope: !6843)
!6885 = !DILocation(line: 473, column: 12, scope: !6843)
!6886 = !DILocation(line: 475, column: 13, scope: !6843)
!6887 = !DILocation(line: 475, column: 17, scope: !6843)
!6888 = !DILocation(line: 475, column: 24, scope: !6843)
!6889 = !DILocation(line: 475, column: 4, scope: !6843)
!6890 = !DILocation(line: 475, column: 7, scope: !6843)
!6891 = !DILocation(line: 475, column: 11, scope: !6843)
!6892 = !DILocation(line: 476, column: 14, scope: !6843)
!6893 = !DILocation(line: 476, column: 18, scope: !6843)
!6894 = !DILocation(line: 476, column: 4, scope: !6843)
!6895 = !DILocation(line: 476, column: 7, scope: !6843)
!6896 = !DILocation(line: 476, column: 11, scope: !6843)
!6897 = !DILocation(line: 478, column: 7, scope: !6843)
!6898 = !DILocation(line: 479, column: 11, scope: !6899)
!6899 = distinct !DILexicalBlock(scope: !6843, file: !3, line: 479, column: 4)
!6900 = !DILocation(line: 479, column: 9, scope: !6899)
!6901 = !DILocation(line: 479, column: 16, scope: !6902)
!6902 = distinct !DILexicalBlock(scope: !6899, file: !3, line: 479, column: 4)
!6903 = !DILocation(line: 479, column: 20, scope: !6902)
!6904 = !DILocation(line: 479, column: 23, scope: !6902)
!6905 = !DILocation(line: 479, column: 18, scope: !6902)
!6906 = !DILocation(line: 479, column: 4, scope: !6899)
!6907 = !DILocation(line: 481, column: 7, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 479, column: 48)
!6909 = !DILocation(line: 481, column: 11, scope: !6908)
!6910 = !DILocation(line: 481, column: 18, scope: !6908)
!6911 = !DILocation(line: 481, column: 20, scope: !6908)
!6912 = !DILocation(line: 481, column: 15, scope: !6908)
!6913 = !DILocation(line: 481, column: 31, scope: !6908)
!6914 = !DILocation(line: 481, column: 33, scope: !6908)
!6915 = !DILocation(line: 481, column: 30, scope: !6908)
!6916 = !DILocation(line: 481, column: 26, scope: !6908)
!6917 = !DILocation(line: 481, column: 48, scope: !6908)
!6918 = !DILocation(line: 481, column: 6, scope: !6908)
!6919 = !DILocation(line: 480, column: 5, scope: !6908)
!6920 = !DILocation(line: 480, column: 8, scope: !6908)
!6921 = !DILocation(line: 480, column: 24, scope: !6908)
!6922 = !DILocation(line: 480, column: 27, scope: !6908)
!6923 = !DILocation(line: 482, column: 4, scope: !6908)
!6924 = !DILocation(line: 479, column: 44, scope: !6902)
!6925 = !DILocation(line: 479, column: 4, scope: !6902)
!6926 = distinct !{!6926, !6906, !6927}
!6927 = !DILocation(line: 482, column: 4, scope: !6899)
!6928 = !DILocation(line: 484, column: 3, scope: !6831)
!6929 = !DILocation(line: 486, column: 39, scope: !6831)
!6930 = !DILocation(line: 486, column: 43, scope: !6831)
!6931 = !DILocation(line: 486, column: 48, scope: !6831)
!6932 = !DILocation(line: 486, column: 54, scope: !6831)
!6933 = !DILocation(line: 486, column: 38, scope: !6831)
!6934 = !DILocation(line: 486, column: 3, scope: !6831)
!6935 = !DILocation(line: 486, column: 8, scope: !6831)
!6936 = !DILocation(line: 486, column: 10, scope: !6831)
!6937 = !DILocation(line: 486, column: 24, scope: !6831)
!6938 = !DILocation(line: 486, column: 36, scope: !6831)
!6939 = !DILocalVariable(name: "__ret_warn_on", scope: !6940, file: !3, line: 487, type: !115)
!6940 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 487, column: 3)
!6941 = !DILocation(line: 487, column: 3, scope: !6940)
!6942 = !DILocation(line: 487, column: 3, scope: !6943)
!6943 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 487, column: 3)
!6944 = !DILocation(line: 487, column: 3, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6943, file: !3, line: 487, column: 3)
!6946 = !DILocation(line: 487, column: 3, scope: !6947)
!6947 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 487, column: 3)
!6948 = !DILocation(line: 487, column: 3, scope: !6949)
!6949 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 487, column: 3)
!6950 = !{i32 -2140147321, i32 -2140147292, i32 -2140147246, i32 -2140147188, i32 -2140147134, i32 -2140147080, i32 -2140147025, i32 -2140146994}
!6951 = !DILocation(line: 487, column: 3, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 487, column: 3)
!6953 = !{i32 -2140146575, i32 -2140146568, i32 -2140146516, i32 -2140146485, i32 -2140146455}
!6954 = !DILocation(line: 487, column: 3, scope: !6955)
!6955 = distinct !DILexicalBlock(scope: !6945, file: !3, line: 487, column: 3)
!6956 = !DILocation(line: 488, column: 31, scope: !6831)
!6957 = !DILocation(line: 488, column: 35, scope: !6831)
!6958 = !DILocation(line: 488, column: 40, scope: !6831)
!6959 = !DILocation(line: 488, column: 3, scope: !6831)
!6960 = !DILocation(line: 488, column: 8, scope: !6831)
!6961 = !DILocation(line: 488, column: 10, scope: !6831)
!6962 = !DILocation(line: 488, column: 24, scope: !6831)
!6963 = !DILocation(line: 488, column: 29, scope: !6831)
!6964 = !DILocation(line: 489, column: 3, scope: !6831)
!6965 = !DILocalVariable(name: "r", scope: !6966, file: !3, line: 492, type: !6967)
!6966 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 491, column: 3)
!6967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6168, size: 64)
!6968 = !DILocation(line: 492, column: 36, scope: !6966)
!6969 = !DILocation(line: 492, column: 41, scope: !6966)
!6970 = !DILocation(line: 492, column: 46, scope: !6966)
!6971 = !DILocation(line: 492, column: 48, scope: !6966)
!6972 = !DILocation(line: 494, column: 22, scope: !6966)
!6973 = !DILocation(line: 494, column: 26, scope: !6966)
!6974 = !DILocation(line: 494, column: 31, scope: !6966)
!6975 = !DILocation(line: 494, column: 37, scope: !6966)
!6976 = !DILocation(line: 494, column: 21, scope: !6966)
!6977 = !DILocation(line: 494, column: 4, scope: !6966)
!6978 = !DILocation(line: 494, column: 7, scope: !6966)
!6979 = !DILocation(line: 494, column: 19, scope: !6966)
!6980 = !DILocation(line: 496, column: 23, scope: !6966)
!6981 = !DILocation(line: 496, column: 27, scope: !6966)
!6982 = !DILocation(line: 496, column: 32, scope: !6966)
!6983 = !DILocation(line: 496, column: 39, scope: !6966)
!6984 = !DILocation(line: 496, column: 4, scope: !6966)
!6985 = !DILocation(line: 496, column: 7, scope: !6966)
!6986 = !DILocation(line: 496, column: 20, scope: !6966)
!6987 = !DILocation(line: 497, column: 24, scope: !6966)
!6988 = !DILocation(line: 497, column: 28, scope: !6966)
!6989 = !DILocation(line: 497, column: 35, scope: !6966)
!6990 = !DILocation(line: 497, column: 41, scope: !6966)
!6991 = !DILocation(line: 497, column: 4, scope: !6966)
!6992 = !DILocation(line: 497, column: 7, scope: !6966)
!6993 = !DILocation(line: 497, column: 20, scope: !6966)
!6994 = !DILocation(line: 498, column: 23, scope: !6966)
!6995 = !DILocation(line: 498, column: 27, scope: !6966)
!6996 = !DILocation(line: 498, column: 34, scope: !6966)
!6997 = !DILocation(line: 498, column: 4, scope: !6966)
!6998 = !DILocation(line: 498, column: 7, scope: !6966)
!6999 = !DILocation(line: 498, column: 20, scope: !6966)
!7000 = !DILocation(line: 500, column: 19, scope: !6966)
!7001 = !DILocation(line: 500, column: 23, scope: !6966)
!7002 = !DILocation(line: 500, column: 4, scope: !6966)
!7003 = !DILocation(line: 500, column: 7, scope: !6966)
!7004 = !DILocation(line: 500, column: 17, scope: !6966)
!7005 = !DILocation(line: 502, column: 3, scope: !6831)
!7006 = !DILocalVariable(name: "w", scope: !7007, file: !3, line: 505, type: !7008)
!7007 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 504, column: 3)
!7008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6174, size: 64)
!7009 = !DILocation(line: 505, column: 37, scope: !7007)
!7010 = !DILocation(line: 506, column: 6, scope: !7007)
!7011 = !DILocation(line: 506, column: 11, scope: !7007)
!7012 = !DILocation(line: 506, column: 13, scope: !7007)
!7013 = !DILocation(line: 508, column: 22, scope: !7007)
!7014 = !DILocation(line: 508, column: 26, scope: !7007)
!7015 = !DILocation(line: 508, column: 31, scope: !7007)
!7016 = !DILocation(line: 508, column: 37, scope: !7007)
!7017 = !DILocation(line: 508, column: 21, scope: !7007)
!7018 = !DILocation(line: 508, column: 4, scope: !7007)
!7019 = !DILocation(line: 508, column: 7, scope: !7007)
!7020 = !DILocation(line: 508, column: 19, scope: !7007)
!7021 = !DILocation(line: 510, column: 23, scope: !7007)
!7022 = !DILocation(line: 510, column: 27, scope: !7007)
!7023 = !DILocation(line: 510, column: 32, scope: !7007)
!7024 = !DILocation(line: 510, column: 39, scope: !7007)
!7025 = !DILocation(line: 510, column: 4, scope: !7007)
!7026 = !DILocation(line: 510, column: 7, scope: !7007)
!7027 = !DILocation(line: 510, column: 20, scope: !7007)
!7028 = !DILocation(line: 511, column: 24, scope: !7007)
!7029 = !DILocation(line: 511, column: 28, scope: !7007)
!7030 = !DILocation(line: 511, column: 35, scope: !7007)
!7031 = !DILocation(line: 511, column: 41, scope: !7007)
!7032 = !DILocation(line: 511, column: 4, scope: !7007)
!7033 = !DILocation(line: 511, column: 7, scope: !7007)
!7034 = !DILocation(line: 511, column: 20, scope: !7007)
!7035 = !DILocation(line: 512, column: 23, scope: !7007)
!7036 = !DILocation(line: 512, column: 27, scope: !7007)
!7037 = !DILocation(line: 512, column: 34, scope: !7007)
!7038 = !DILocation(line: 512, column: 4, scope: !7007)
!7039 = !DILocation(line: 512, column: 7, scope: !7007)
!7040 = !DILocation(line: 512, column: 20, scope: !7007)
!7041 = !DILocation(line: 514, column: 19, scope: !7007)
!7042 = !DILocation(line: 514, column: 23, scope: !7007)
!7043 = !DILocation(line: 514, column: 4, scope: !7007)
!7044 = !DILocation(line: 514, column: 7, scope: !7007)
!7045 = !DILocation(line: 514, column: 17, scope: !7007)
!7046 = !DILocation(line: 516, column: 24, scope: !7007)
!7047 = !DILocation(line: 516, column: 28, scope: !7007)
!7048 = !DILocation(line: 516, column: 36, scope: !7007)
!7049 = !DILocation(line: 516, column: 39, scope: !7007)
!7050 = !DILocation(line: 516, column: 15, scope: !7007)
!7051 = !DILocation(line: 516, column: 4, scope: !7007)
!7052 = !DILocation(line: 516, column: 7, scope: !7007)
!7053 = !DILocation(line: 516, column: 13, scope: !7007)
!7054 = !DILocation(line: 518, column: 9, scope: !7055)
!7055 = distinct !DILexicalBlock(scope: !7007, file: !3, line: 518, column: 8)
!7056 = !DILocation(line: 518, column: 12, scope: !7055)
!7057 = !DILocation(line: 518, column: 8, scope: !7007)
!7058 = !DILocation(line: 519, column: 5, scope: !7055)
!7059 = !DILocation(line: 521, column: 3, scope: !6831)
!7060 = !DILocalVariable(name: "r", scope: !7061, file: !3, line: 524, type: !7062)
!7061 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 523, column: 3)
!7062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6182, size: 64)
!7063 = !DILocation(line: 524, column: 35, scope: !7061)
!7064 = !DILocation(line: 524, column: 40, scope: !7061)
!7065 = !DILocation(line: 524, column: 45, scope: !7061)
!7066 = !DILocation(line: 524, column: 47, scope: !7061)
!7067 = !DILocalVariable(name: "tx", scope: !7061, file: !3, line: 525, type: !7068)
!7068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6188, size: 64)
!7069 = !DILocation(line: 525, column: 38, scope: !7061)
!7070 = !DILocalVariable(name: "failed", scope: !7061, file: !3, line: 526, type: !370)
!7071 = !DILocation(line: 526, column: 9, scope: !7061)
!7072 = !DILocation(line: 528, column: 26, scope: !7061)
!7073 = !DILocation(line: 528, column: 30, scope: !7061)
!7074 = !DILocation(line: 528, column: 35, scope: !7061)
!7075 = !DILocation(line: 528, column: 4, scope: !7061)
!7076 = !DILocation(line: 528, column: 7, scope: !7061)
!7077 = !DILocation(line: 528, column: 24, scope: !7061)
!7078 = !DILocation(line: 529, column: 22, scope: !7061)
!7079 = !DILocation(line: 529, column: 26, scope: !7061)
!7080 = !DILocation(line: 529, column: 31, scope: !7061)
!7081 = !DILocation(line: 529, column: 37, scope: !7061)
!7082 = !DILocation(line: 529, column: 21, scope: !7061)
!7083 = !DILocation(line: 529, column: 4, scope: !7061)
!7084 = !DILocation(line: 529, column: 7, scope: !7061)
!7085 = !DILocation(line: 529, column: 19, scope: !7061)
!7086 = !DILocation(line: 530, column: 11, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 530, column: 4)
!7088 = !DILocation(line: 530, column: 9, scope: !7087)
!7089 = !DILocation(line: 530, column: 16, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7087, file: !3, line: 530, column: 4)
!7091 = !DILocation(line: 530, column: 20, scope: !7090)
!7092 = !DILocation(line: 530, column: 23, scope: !7090)
!7093 = !DILocation(line: 530, column: 18, scope: !7090)
!7094 = !DILocation(line: 530, column: 4, scope: !7087)
!7095 = !DILocation(line: 531, column: 11, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 530, column: 46)
!7097 = !DILocation(line: 531, column: 14, scope: !7096)
!7098 = !DILocation(line: 531, column: 27, scope: !7096)
!7099 = !DILocation(line: 531, column: 8, scope: !7096)
!7100 = !DILocation(line: 533, column: 22, scope: !7096)
!7101 = !DILocation(line: 533, column: 26, scope: !7096)
!7102 = !DILocation(line: 533, column: 33, scope: !7096)
!7103 = !DILocation(line: 533, column: 5, scope: !7096)
!7104 = !DILocation(line: 533, column: 9, scope: !7096)
!7105 = !DILocation(line: 533, column: 20, scope: !7096)
!7106 = !DILocation(line: 534, column: 21, scope: !7096)
!7107 = !DILocation(line: 534, column: 25, scope: !7096)
!7108 = !DILocation(line: 534, column: 5, scope: !7096)
!7109 = !DILocation(line: 534, column: 9, scope: !7096)
!7110 = !DILocation(line: 534, column: 19, scope: !7096)
!7111 = !DILocation(line: 535, column: 26, scope: !7096)
!7112 = !DILocation(line: 535, column: 30, scope: !7096)
!7113 = !DILocation(line: 536, column: 11, scope: !7096)
!7114 = !DILocation(line: 536, column: 15, scope: !7096)
!7115 = !DILocation(line: 535, column: 17, scope: !7096)
!7116 = !DILocation(line: 535, column: 5, scope: !7096)
!7117 = !DILocation(line: 535, column: 9, scope: !7096)
!7118 = !DILocation(line: 535, column: 15, scope: !7096)
!7119 = !DILocation(line: 538, column: 10, scope: !7120)
!7120 = distinct !DILexicalBlock(scope: !7096, file: !3, line: 538, column: 9)
!7121 = !DILocation(line: 538, column: 14, scope: !7120)
!7122 = !DILocation(line: 538, column: 9, scope: !7096)
!7123 = !DILocation(line: 539, column: 13, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7120, file: !3, line: 538, column: 21)
!7125 = !DILocation(line: 540, column: 6, scope: !7124)
!7126 = !DILocation(line: 542, column: 12, scope: !7096)
!7127 = !DILocation(line: 542, column: 16, scope: !7096)
!7128 = !DILocation(line: 542, column: 9, scope: !7096)
!7129 = !DILocation(line: 543, column: 24, scope: !7096)
!7130 = !DILocation(line: 543, column: 28, scope: !7096)
!7131 = !DILocation(line: 543, column: 33, scope: !7096)
!7132 = !DILocation(line: 543, column: 39, scope: !7096)
!7133 = !DILocation(line: 543, column: 23, scope: !7096)
!7134 = !DILocation(line: 543, column: 5, scope: !7096)
!7135 = !DILocation(line: 543, column: 9, scope: !7096)
!7136 = !DILocation(line: 543, column: 21, scope: !7096)
!7137 = !DILocation(line: 544, column: 33, scope: !7096)
!7138 = !DILocation(line: 544, column: 37, scope: !7096)
!7139 = !DILocation(line: 544, column: 42, scope: !7096)
!7140 = !DILocation(line: 544, column: 5, scope: !7096)
!7141 = !DILocation(line: 544, column: 9, scope: !7096)
!7142 = !DILocation(line: 544, column: 31, scope: !7096)
!7143 = !DILocation(line: 545, column: 4, scope: !7096)
!7144 = !DILocation(line: 530, column: 42, scope: !7090)
!7145 = !DILocation(line: 530, column: 4, scope: !7090)
!7146 = distinct !{!7146, !7094, !7147}
!7147 = !DILocation(line: 545, column: 4, scope: !7087)
!7148 = !DILocation(line: 547, column: 8, scope: !7149)
!7149 = distinct !DILexicalBlock(scope: !7061, file: !3, line: 547, column: 8)
!7150 = !DILocation(line: 547, column: 8, scope: !7061)
!7151 = !DILocation(line: 548, column: 12, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 548, column: 5)
!7153 = distinct !DILexicalBlock(scope: !7149, file: !3, line: 547, column: 16)
!7154 = !DILocation(line: 548, column: 10, scope: !7152)
!7155 = !DILocation(line: 548, column: 17, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7152, file: !3, line: 548, column: 5)
!7157 = !DILocation(line: 548, column: 21, scope: !7156)
!7158 = !DILocation(line: 548, column: 24, scope: !7156)
!7159 = !DILocation(line: 548, column: 19, scope: !7156)
!7160 = !DILocation(line: 548, column: 5, scope: !7152)
!7161 = !DILocation(line: 549, column: 12, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 548, column: 47)
!7163 = !DILocation(line: 549, column: 15, scope: !7162)
!7164 = !DILocation(line: 549, column: 28, scope: !7162)
!7165 = !DILocation(line: 549, column: 9, scope: !7162)
!7166 = !DILocation(line: 550, column: 12, scope: !7162)
!7167 = !DILocation(line: 550, column: 16, scope: !7162)
!7168 = !DILocation(line: 550, column: 6, scope: !7162)
!7169 = !DILocation(line: 551, column: 5, scope: !7162)
!7170 = !DILocation(line: 548, column: 43, scope: !7156)
!7171 = !DILocation(line: 548, column: 5, scope: !7156)
!7172 = distinct !{!7172, !7160, !7173}
!7173 = !DILocation(line: 551, column: 5, scope: !7152)
!7174 = !DILocation(line: 552, column: 5, scope: !7153)
!7175 = !DILocation(line: 555, column: 28, scope: !7061)
!7176 = !DILocation(line: 555, column: 32, scope: !7061)
!7177 = !DILocation(line: 555, column: 39, scope: !7061)
!7178 = !DILocation(line: 555, column: 4, scope: !7061)
!7179 = !DILocation(line: 555, column: 7, scope: !7061)
!7180 = !DILocation(line: 555, column: 26, scope: !7061)
!7181 = !DILocation(line: 556, column: 24, scope: !7061)
!7182 = !DILocation(line: 556, column: 28, scope: !7061)
!7183 = !DILocation(line: 556, column: 4, scope: !7061)
!7184 = !DILocation(line: 556, column: 7, scope: !7061)
!7185 = !DILocation(line: 556, column: 22, scope: !7061)
!7186 = !DILocation(line: 558, column: 3, scope: !6831)
!7187 = !DILocalVariable(name: "w", scope: !7188, file: !3, line: 561, type: !7189)
!7188 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 560, column: 3)
!7189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6198, size: 64)
!7190 = !DILocation(line: 561, column: 36, scope: !7188)
!7191 = !DILocation(line: 561, column: 41, scope: !7188)
!7192 = !DILocation(line: 561, column: 46, scope: !7188)
!7193 = !DILocation(line: 561, column: 48, scope: !7188)
!7194 = !DILocation(line: 563, column: 22, scope: !7188)
!7195 = !DILocation(line: 563, column: 26, scope: !7188)
!7196 = !DILocation(line: 563, column: 31, scope: !7188)
!7197 = !DILocation(line: 563, column: 37, scope: !7188)
!7198 = !DILocation(line: 563, column: 21, scope: !7188)
!7199 = !DILocation(line: 563, column: 4, scope: !7188)
!7200 = !DILocation(line: 563, column: 7, scope: !7188)
!7201 = !DILocation(line: 563, column: 19, scope: !7188)
!7202 = !DILocation(line: 564, column: 29, scope: !7188)
!7203 = !DILocation(line: 564, column: 33, scope: !7188)
!7204 = !DILocation(line: 564, column: 40, scope: !7188)
!7205 = !DILocation(line: 564, column: 4, scope: !7188)
!7206 = !DILocation(line: 564, column: 7, scope: !7188)
!7207 = !DILocation(line: 564, column: 27, scope: !7188)
!7208 = !DILocation(line: 565, column: 19, scope: !7188)
!7209 = !DILocation(line: 565, column: 23, scope: !7188)
!7210 = !DILocation(line: 565, column: 4, scope: !7188)
!7211 = !DILocation(line: 565, column: 7, scope: !7188)
!7212 = !DILocation(line: 565, column: 17, scope: !7188)
!7213 = !DILocation(line: 566, column: 24, scope: !7188)
!7214 = !DILocation(line: 566, column: 28, scope: !7188)
!7215 = !DILocation(line: 566, column: 36, scope: !7188)
!7216 = !DILocation(line: 566, column: 39, scope: !7188)
!7217 = !DILocation(line: 566, column: 15, scope: !7188)
!7218 = !DILocation(line: 566, column: 4, scope: !7188)
!7219 = !DILocation(line: 566, column: 7, scope: !7188)
!7220 = !DILocation(line: 566, column: 13, scope: !7188)
!7221 = !DILocation(line: 568, column: 9, scope: !7222)
!7222 = distinct !DILexicalBlock(scope: !7188, file: !3, line: 568, column: 8)
!7223 = !DILocation(line: 568, column: 12, scope: !7222)
!7224 = !DILocation(line: 568, column: 8, scope: !7188)
!7225 = !DILocation(line: 569, column: 5, scope: !7222)
!7226 = !DILocation(line: 571, column: 3, scope: !6831)
!7227 = !DILocation(line: 573, column: 33, scope: !6831)
!7228 = !DILocation(line: 573, column: 40, scope: !6831)
!7229 = !DILocation(line: 573, column: 3, scope: !6831)
!7230 = !DILocation(line: 573, column: 8, scope: !6831)
!7231 = !DILocation(line: 573, column: 10, scope: !6831)
!7232 = !DILocation(line: 573, column: 21, scope: !6831)
!7233 = !DILocation(line: 573, column: 31, scope: !6831)
!7234 = !DILocation(line: 574, column: 10, scope: !7235)
!7235 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 574, column: 3)
!7236 = !DILocation(line: 574, column: 8, scope: !7235)
!7237 = !DILocation(line: 574, column: 15, scope: !7238)
!7238 = distinct !DILexicalBlock(scope: !7235, file: !3, line: 574, column: 3)
!7239 = !DILocation(line: 574, column: 17, scope: !7238)
!7240 = !DILocation(line: 574, column: 3, scope: !7235)
!7241 = !DILocation(line: 575, column: 37, scope: !7238)
!7242 = !DILocation(line: 575, column: 44, scope: !7238)
!7243 = !DILocation(line: 575, column: 4, scope: !7238)
!7244 = !DILocation(line: 575, column: 9, scope: !7238)
!7245 = !DILocation(line: 575, column: 11, scope: !7238)
!7246 = !DILocation(line: 575, column: 22, scope: !7238)
!7247 = !DILocation(line: 575, column: 32, scope: !7238)
!7248 = !DILocation(line: 575, column: 35, scope: !7238)
!7249 = !DILocation(line: 574, column: 57, scope: !7238)
!7250 = !DILocation(line: 574, column: 3, scope: !7238)
!7251 = distinct !{!7251, !7240, !7252}
!7252 = !DILocation(line: 575, column: 46, scope: !7235)
!7253 = !DILocation(line: 577, column: 36, scope: !7254)
!7254 = distinct !DILexicalBlock(scope: !7255, file: !3, line: 577, column: 36)
!7255 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 577, column: 36)
!7256 = !DILocation(line: 577, column: 36, scope: !7257)
!7257 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 577, column: 36)
!7258 = !DILocation(line: 577, column: 36, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 577, column: 36)
!7260 = !DILocation(line: 577, column: 36, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 577, column: 36)
!7262 = !DILocation(line: 577, column: 36, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 577, column: 36)
!7264 = !DILocation(line: 577, column: 36, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7254, file: !3, line: 577, column: 36)
!7266 = !DILocation(line: 577, column: 36, scope: !7255)
!7267 = !DILocation(line: 577, column: 36, scope: !6831)
!7268 = !DILocation(line: 577, column: 3, scope: !6831)
!7269 = !DILocation(line: 577, column: 8, scope: !6831)
!7270 = !DILocation(line: 577, column: 10, scope: !6831)
!7271 = !DILocation(line: 577, column: 21, scope: !6831)
!7272 = !DILocation(line: 577, column: 34, scope: !6831)
!7273 = !DILocation(line: 579, column: 42, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7275, file: !3, line: 579, column: 42)
!7275 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 579, column: 42)
!7276 = !DILocation(line: 579, column: 42, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 579, column: 42)
!7278 = !DILocation(line: 579, column: 42, scope: !7279)
!7279 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 579, column: 42)
!7280 = !DILocation(line: 579, column: 42, scope: !7281)
!7281 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 579, column: 42)
!7282 = !DILocation(line: 579, column: 42, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 579, column: 42)
!7284 = !DILocation(line: 579, column: 42, scope: !7285)
!7285 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 579, column: 42)
!7286 = !DILocation(line: 579, column: 42, scope: !7275)
!7287 = !DILocation(line: 579, column: 42, scope: !6831)
!7288 = !DILocation(line: 579, column: 3, scope: !6831)
!7289 = !DILocation(line: 579, column: 8, scope: !6831)
!7290 = !DILocation(line: 579, column: 10, scope: !6831)
!7291 = !DILocation(line: 579, column: 21, scope: !6831)
!7292 = !DILocation(line: 579, column: 40, scope: !6831)
!7293 = !DILocation(line: 581, column: 39, scope: !7294)
!7294 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 581, column: 39)
!7295 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 581, column: 39)
!7296 = !DILocation(line: 581, column: 39, scope: !7297)
!7297 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 581, column: 39)
!7298 = !DILocation(line: 581, column: 39, scope: !7299)
!7299 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 581, column: 39)
!7300 = !DILocation(line: 581, column: 39, scope: !7301)
!7301 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 581, column: 39)
!7302 = !DILocation(line: 581, column: 39, scope: !7303)
!7303 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 581, column: 39)
!7304 = !DILocation(line: 581, column: 39, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7294, file: !3, line: 581, column: 39)
!7306 = !DILocation(line: 581, column: 39, scope: !7295)
!7307 = !DILocation(line: 581, column: 39, scope: !6831)
!7308 = !DILocation(line: 581, column: 3, scope: !6831)
!7309 = !DILocation(line: 581, column: 8, scope: !6831)
!7310 = !DILocation(line: 581, column: 10, scope: !6831)
!7311 = !DILocation(line: 581, column: 21, scope: !6831)
!7312 = !DILocation(line: 581, column: 37, scope: !6831)
!7313 = !DILocation(line: 583, column: 45, scope: !7314)
!7314 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 583, column: 45)
!7315 = distinct !DILexicalBlock(scope: !6831, file: !3, line: 583, column: 45)
!7316 = !DILocation(line: 583, column: 45, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 583, column: 45)
!7318 = !DILocation(line: 583, column: 45, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 583, column: 45)
!7320 = !DILocation(line: 583, column: 45, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 583, column: 45)
!7322 = !DILocation(line: 583, column: 45, scope: !7323)
!7323 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 583, column: 45)
!7324 = !DILocation(line: 583, column: 45, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7314, file: !3, line: 583, column: 45)
!7326 = !DILocation(line: 583, column: 45, scope: !7315)
!7327 = !DILocation(line: 583, column: 45, scope: !6831)
!7328 = !DILocation(line: 583, column: 3, scope: !6831)
!7329 = !DILocation(line: 583, column: 8, scope: !6831)
!7330 = !DILocation(line: 583, column: 10, scope: !6831)
!7331 = !DILocation(line: 583, column: 21, scope: !6831)
!7332 = !DILocation(line: 583, column: 43, scope: !6831)
!7333 = !DILocation(line: 585, column: 3, scope: !6831)
!7334 = !DILocation(line: 588, column: 2, scope: !6801)
!7335 = !DILocation(line: 589, column: 1, scope: !6801)
!7336 = distinct !DISubprogram(name: "drm_dp_dump_sideband_msg_req_body", scope: !3, file: !3, line: 593, type: !7337, scopeLine: 595, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7337 = !DISubroutineType(types: !7338)
!7338 = !{null, !6267, !115, !5121}
!7339 = !DILocalVariable(name: "req", arg: 1, scope: !7336, file: !3, line: 593, type: !6267)
!7340 = !DILocation(line: 593, column: 78, scope: !7336)
!7341 = !DILocalVariable(name: "indent", arg: 2, scope: !7336, file: !3, line: 594, type: !115)
!7342 = !DILocation(line: 594, column: 11, scope: !7336)
!7343 = !DILocalVariable(name: "printer", arg: 3, scope: !7336, file: !3, line: 594, type: !5121)
!7344 = !DILocation(line: 594, column: 39, scope: !7336)
!7345 = !DILocalVariable(name: "i", scope: !7336, file: !3, line: 596, type: !115)
!7346 = !DILocation(line: 596, column: 6, scope: !7336)
!7347 = !DILocation(line: 599, column: 6, scope: !7348)
!7348 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 599, column: 6)
!7349 = !DILocation(line: 599, column: 11, scope: !7348)
!7350 = !DILocation(line: 599, column: 20, scope: !7348)
!7351 = !DILocation(line: 599, column: 6, scope: !7336)
!7352 = !DILocation(line: 601, column: 3, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7348, file: !3, line: 599, column: 40)
!7354 = !DILocation(line: 602, column: 3, scope: !7353)
!7355 = !DILocation(line: 605, column: 2, scope: !7336)
!7356 = !DILocation(line: 606, column: 8, scope: !7336)
!7357 = !DILocation(line: 608, column: 10, scope: !7336)
!7358 = !DILocation(line: 608, column: 15, scope: !7336)
!7359 = !DILocation(line: 608, column: 2, scope: !7336)
!7360 = !DILocation(line: 612, column: 3, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7336, file: !3, line: 608, column: 25)
!7362 = !DILocation(line: 613, column: 3, scope: !7361)
!7363 = !DILocation(line: 615, column: 3, scope: !7361)
!7364 = !DILocation(line: 621, column: 3, scope: !7361)
!7365 = !DILocation(line: 623, column: 3, scope: !7361)
!7366 = !DILocation(line: 626, column: 3, scope: !7361)
!7367 = !DILocation(line: 628, column: 3, scope: !7361)
!7368 = !DILocation(line: 631, column: 3, scope: !7361)
!7369 = !DILocation(line: 633, column: 3, scope: !7361)
!7370 = !DILocation(line: 638, column: 3, scope: !7361)
!7371 = !DILocation(line: 640, column: 3, scope: !7361)
!7372 = !DILocation(line: 646, column: 9, scope: !7361)
!7373 = !DILocation(line: 647, column: 10, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 647, column: 3)
!7375 = !DILocation(line: 647, column: 8, scope: !7374)
!7376 = !DILocation(line: 647, column: 15, scope: !7377)
!7377 = distinct !DILexicalBlock(scope: !7374, file: !3, line: 647, column: 3)
!7378 = !DILocation(line: 647, column: 19, scope: !7377)
!7379 = !DILocation(line: 647, column: 24, scope: !7377)
!7380 = !DILocation(line: 647, column: 26, scope: !7377)
!7381 = !DILocation(line: 647, column: 35, scope: !7377)
!7382 = !DILocation(line: 647, column: 17, scope: !7377)
!7383 = !DILocation(line: 647, column: 3, scope: !7374)
!7384 = !DILocalVariable(name: "rtx", scope: !7385, file: !3, line: 648, type: !7386)
!7385 = distinct !DILexicalBlock(scope: !7377, file: !3, line: 647, column: 58)
!7386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7387, size: 64)
!7387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6188)
!7388 = !DILocation(line: 648, column: 44, scope: !7385)
!7389 = !DILocation(line: 649, column: 6, scope: !7385)
!7390 = !DILocation(line: 649, column: 11, scope: !7385)
!7391 = !DILocation(line: 649, column: 13, scope: !7385)
!7392 = !DILocation(line: 649, column: 22, scope: !7385)
!7393 = !DILocation(line: 649, column: 35, scope: !7385)
!7394 = !DILocation(line: 651, column: 4, scope: !7385)
!7395 = !DILocation(line: 655, column: 3, scope: !7385)
!7396 = !DILocation(line: 647, column: 54, scope: !7377)
!7397 = !DILocation(line: 647, column: 3, scope: !7377)
!7398 = distinct !{!7398, !7383, !7399}
!7399 = !DILocation(line: 655, column: 3, scope: !7374)
!7400 = !DILocation(line: 656, column: 3, scope: !7361)
!7401 = !DILocation(line: 658, column: 3, scope: !7361)
!7402 = !DILocation(line: 663, column: 3, scope: !7361)
!7403 = !DILocation(line: 665, column: 3, scope: !7361)
!7404 = !DILocation(line: 673, column: 3, scope: !7361)
!7405 = !DILocation(line: 675, column: 3, scope: !7361)
!7406 = !DILocation(line: 676, column: 3, scope: !7361)
!7407 = !DILocation(line: 679, column: 1, scope: !7336)
!7408 = !DILocalVariable(name: "req_type", arg: 1, scope: !6237, file: !3, line: 101, type: !364)
!7409 = !DILocation(line: 101, column: 47, scope: !6237)
!7410 = !DILocation(line: 122, column: 6, scope: !7411)
!7411 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 122, column: 6)
!7412 = !DILocation(line: 122, column: 15, scope: !7411)
!7413 = !DILocation(line: 122, column: 43, scope: !7411)
!7414 = !DILocation(line: 123, column: 20, scope: !7411)
!7415 = !DILocation(line: 123, column: 7, scope: !7411)
!7416 = !DILocation(line: 122, column: 6, scope: !6237)
!7417 = !DILocation(line: 124, column: 3, scope: !7411)
!7418 = !DILocation(line: 126, column: 22, scope: !6237)
!7419 = !DILocation(line: 126, column: 9, scope: !6237)
!7420 = !DILocation(line: 126, column: 2, scope: !6237)
!7421 = !DILocation(line: 127, column: 1, scope: !6237)
!7422 = distinct !DISubprogram(name: "drm_dp_mst_get_port_malloc", scope: !3, file: !3, line: 1535, type: !7423, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7423 = !DISubroutineType(types: !7424)
!7424 = !{null, !345}
!7425 = !DILocalVariable(name: "port", arg: 1, scope: !7422, file: !3, line: 1535, type: !345)
!7426 = !DILocation(line: 1535, column: 52, scope: !7422)
!7427 = !DILocation(line: 1537, column: 12, scope: !7422)
!7428 = !DILocation(line: 1537, column: 18, scope: !7422)
!7429 = !DILocation(line: 1537, column: 2, scope: !7422)
!7430 = !DILocation(line: 1538, column: 2, scope: !7422)
!7431 = !DILocation(line: 1539, column: 1, scope: !7422)
!7432 = distinct !DISubprogram(name: "kref_get", scope: !351, file: !351, line: 43, type: !4517, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7433 = !DILocalVariable(name: "kref", arg: 1, scope: !7432, file: !351, line: 43, type: !4519)
!7434 = !DILocation(line: 43, column: 42, scope: !7432)
!7435 = !DILocation(line: 45, column: 16, scope: !7432)
!7436 = !DILocation(line: 45, column: 22, scope: !7432)
!7437 = !DILocation(line: 45, column: 2, scope: !7432)
!7438 = !DILocation(line: 46, column: 1, scope: !7432)
!7439 = distinct !DISubprogram(name: "kref_read", scope: !351, file: !351, line: 34, type: !7440, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7440 = !DISubroutineType(types: !7441)
!7441 = !{!7, !7442}
!7442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7443, size: 64)
!7443 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !350)
!7444 = !DILocalVariable(name: "kref", arg: 1, scope: !7439, file: !351, line: 34, type: !7442)
!7445 = !DILocation(line: 34, column: 57, scope: !7439)
!7446 = !DILocation(line: 36, column: 24, scope: !7439)
!7447 = !DILocation(line: 36, column: 30, scope: !7439)
!7448 = !DILocation(line: 36, column: 9, scope: !7439)
!7449 = !DILocation(line: 36, column: 2, scope: !7439)
!7450 = distinct !DISubprogram(name: "drm_dp_mst_put_port_malloc", scope: !3, file: !3, line: 1553, type: !7423, scopeLine: 1554, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7451 = !DILocalVariable(name: "port", arg: 1, scope: !7450, file: !3, line: 1553, type: !345)
!7452 = !DILocation(line: 1553, column: 52, scope: !7450)
!7453 = !DILocation(line: 1555, column: 2, scope: !7450)
!7454 = !DILocation(line: 1556, column: 12, scope: !7450)
!7455 = !DILocation(line: 1556, column: 18, scope: !7450)
!7456 = !DILocation(line: 1556, column: 2, scope: !7450)
!7457 = !DILocation(line: 1557, column: 1, scope: !7450)
!7458 = distinct !DISubprogram(name: "kref_put", scope: !351, file: !351, line: 62, type: !7459, scopeLine: 63, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7459 = !DISubroutineType(types: !7460)
!7460 = !{!115, !4519, !4516}
!7461 = !DILocalVariable(name: "kref", arg: 1, scope: !7458, file: !351, line: 62, type: !4519)
!7462 = !DILocation(line: 62, column: 41, scope: !7458)
!7463 = !DILocalVariable(name: "release", arg: 2, scope: !7458, file: !351, line: 62, type: !4516)
!7464 = !DILocation(line: 62, column: 54, scope: !7458)
!7465 = !DILocation(line: 64, column: 29, scope: !7466)
!7466 = distinct !DILexicalBlock(scope: !7458, file: !351, line: 64, column: 6)
!7467 = !DILocation(line: 64, column: 35, scope: !7466)
!7468 = !DILocation(line: 64, column: 6, scope: !7466)
!7469 = !DILocation(line: 64, column: 6, scope: !7458)
!7470 = !DILocation(line: 65, column: 3, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7466, file: !351, line: 64, column: 46)
!7472 = !DILocation(line: 65, column: 11, scope: !7471)
!7473 = !DILocation(line: 66, column: 3, scope: !7471)
!7474 = !DILocation(line: 68, column: 2, scope: !7458)
!7475 = !DILocation(line: 69, column: 1, scope: !7458)
!7476 = distinct !DISubprogram(name: "drm_dp_free_mst_port", scope: !3, file: !3, line: 1508, type: !4517, scopeLine: 1509, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7477 = !DILocalVariable(name: "kref", arg: 1, scope: !7476, file: !3, line: 1508, type: !4519)
!7478 = !DILocation(line: 1508, column: 47, scope: !7476)
!7479 = !DILocalVariable(name: "port", scope: !7476, file: !3, line: 1510, type: !345)
!7480 = !DILocation(line: 1510, column: 26, scope: !7476)
!7481 = !DILocalVariable(name: "__mptr", scope: !7482, file: !3, line: 1511, type: !344)
!7482 = distinct !DILexicalBlock(scope: !7476, file: !3, line: 1511, column: 3)
!7483 = !DILocation(line: 1511, column: 3, scope: !7482)
!7484 = !DILocation(line: 1511, column: 3, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7482, file: !3, line: 1511, column: 3)
!7486 = !DILocation(line: 1513, column: 29, scope: !7476)
!7487 = !DILocation(line: 1513, column: 35, scope: !7476)
!7488 = !DILocation(line: 1513, column: 2, scope: !7476)
!7489 = !DILocation(line: 1514, column: 8, scope: !7476)
!7490 = !DILocation(line: 1514, column: 2, scope: !7476)
!7491 = !DILocation(line: 1515, column: 1, scope: !7476)
!7492 = distinct !DISubprogram(name: "drm_dp_mst_dpcd_read", scope: !3, file: !3, line: 2173, type: !7493, scopeLine: 2175, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7493 = !DISubroutineType(types: !7494)
!7494 = !{!1095, !5728, !7, !344, !1023}
!7495 = !DILocalVariable(name: "aux", arg: 1, scope: !7492, file: !3, line: 2173, type: !5728)
!7496 = !DILocation(line: 2173, column: 49, scope: !7492)
!7497 = !DILocalVariable(name: "offset", arg: 2, scope: !7492, file: !3, line: 2174, type: !7)
!7498 = !DILocation(line: 2174, column: 22, scope: !7492)
!7499 = !DILocalVariable(name: "buffer", arg: 3, scope: !7492, file: !3, line: 2174, type: !344)
!7500 = !DILocation(line: 2174, column: 36, scope: !7492)
!7501 = !DILocalVariable(name: "size", arg: 4, scope: !7492, file: !3, line: 2174, type: !1023)
!7502 = !DILocation(line: 2174, column: 51, scope: !7492)
!7503 = !DILocalVariable(name: "port", scope: !7492, file: !3, line: 2176, type: !345)
!7504 = !DILocation(line: 2176, column: 26, scope: !7492)
!7505 = !DILocalVariable(name: "__mptr", scope: !7506, file: !3, line: 2176, type: !344)
!7506 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 2176, column: 33)
!7507 = !DILocation(line: 2176, column: 33, scope: !7506)
!7508 = !DILocation(line: 2176, column: 33, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7506, file: !3, line: 2176, column: 33)
!7510 = !DILocation(line: 2179, column: 31, scope: !7492)
!7511 = !DILocation(line: 2179, column: 37, scope: !7492)
!7512 = !DILocation(line: 2179, column: 42, scope: !7492)
!7513 = !DILocation(line: 2180, column: 10, scope: !7492)
!7514 = !DILocation(line: 2180, column: 18, scope: !7492)
!7515 = !DILocation(line: 2180, column: 24, scope: !7492)
!7516 = !DILocation(line: 2179, column: 9, scope: !7492)
!7517 = !DILocation(line: 2179, column: 2, scope: !7492)
!7518 = distinct !DISubprogram(name: "drm_dp_send_dpcd_read", scope: !3, file: !3, line: 3511, type: !7519, scopeLine: 3514, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7519 = !DISubroutineType(types: !7520)
!7520 = !{!115, !406, !345, !115, !115, !6180}
!7521 = !DILocalVariable(name: "mgr", arg: 1, scope: !7518, file: !3, line: 3511, type: !406)
!7522 = !DILocation(line: 3511, column: 66, scope: !7518)
!7523 = !DILocalVariable(name: "port", arg: 2, scope: !7518, file: !3, line: 3512, type: !345)
!7524 = !DILocation(line: 3512, column: 30, scope: !7518)
!7525 = !DILocalVariable(name: "offset", arg: 3, scope: !7518, file: !3, line: 3513, type: !115)
!7526 = !DILocation(line: 3513, column: 10, scope: !7518)
!7527 = !DILocalVariable(name: "size", arg: 4, scope: !7518, file: !3, line: 3513, type: !115)
!7528 = !DILocation(line: 3513, column: 22, scope: !7518)
!7529 = !DILocalVariable(name: "bytes", arg: 5, scope: !7518, file: !3, line: 3513, type: !6180)
!7530 = !DILocation(line: 3513, column: 32, scope: !7518)
!7531 = !DILocalVariable(name: "ret", scope: !7518, file: !3, line: 3515, type: !115)
!7532 = !DILocation(line: 3515, column: 6, scope: !7518)
!7533 = !DILocalVariable(name: "txmsg", scope: !7518, file: !3, line: 3516, type: !6003)
!7534 = !DILocation(line: 3516, column: 33, scope: !7518)
!7535 = !DILocalVariable(name: "mstb", scope: !7518, file: !3, line: 3517, type: !391)
!7536 = !DILocation(line: 3517, column: 28, scope: !7518)
!7537 = !DILocation(line: 3519, column: 48, scope: !7518)
!7538 = !DILocation(line: 3519, column: 53, scope: !7518)
!7539 = !DILocation(line: 3519, column: 59, scope: !7518)
!7540 = !DILocation(line: 3519, column: 9, scope: !7518)
!7541 = !DILocation(line: 3519, column: 7, scope: !7518)
!7542 = !DILocation(line: 3520, column: 7, scope: !7543)
!7543 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3520, column: 6)
!7544 = !DILocation(line: 3520, column: 6, scope: !7518)
!7545 = !DILocation(line: 3521, column: 3, scope: !7543)
!7546 = !DILocation(line: 3523, column: 10, scope: !7518)
!7547 = !DILocation(line: 3523, column: 8, scope: !7518)
!7548 = !DILocation(line: 3524, column: 7, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3524, column: 6)
!7550 = !DILocation(line: 3524, column: 6, scope: !7518)
!7551 = !DILocation(line: 3525, column: 7, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 3524, column: 14)
!7553 = !DILocation(line: 3526, column: 3, scope: !7552)
!7554 = !DILocation(line: 3529, column: 18, scope: !7518)
!7555 = !DILocation(line: 3529, column: 25, scope: !7518)
!7556 = !DILocation(line: 3529, column: 31, scope: !7518)
!7557 = !DILocation(line: 3529, column: 41, scope: !7518)
!7558 = !DILocation(line: 3529, column: 49, scope: !7518)
!7559 = !DILocation(line: 3529, column: 2, scope: !7518)
!7560 = !DILocation(line: 3530, column: 15, scope: !7518)
!7561 = !DILocation(line: 3530, column: 21, scope: !7518)
!7562 = !DILocation(line: 3530, column: 2, scope: !7518)
!7563 = !DILocation(line: 3530, column: 9, scope: !7518)
!7564 = !DILocation(line: 3530, column: 13, scope: !7518)
!7565 = !DILocation(line: 3532, column: 23, scope: !7518)
!7566 = !DILocation(line: 3532, column: 28, scope: !7518)
!7567 = !DILocation(line: 3532, column: 2, scope: !7518)
!7568 = !DILocation(line: 3534, column: 33, scope: !7518)
!7569 = !DILocation(line: 3534, column: 39, scope: !7518)
!7570 = !DILocation(line: 3534, column: 8, scope: !7518)
!7571 = !DILocation(line: 3534, column: 6, scope: !7518)
!7572 = !DILocation(line: 3535, column: 6, scope: !7573)
!7573 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3535, column: 6)
!7574 = !DILocation(line: 3535, column: 10, scope: !7573)
!7575 = !DILocation(line: 3535, column: 6, scope: !7518)
!7576 = !DILocation(line: 3536, column: 3, scope: !7573)
!7577 = !DILocation(line: 3539, column: 6, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3539, column: 6)
!7579 = !DILocation(line: 3539, column: 13, scope: !7578)
!7580 = !DILocation(line: 3539, column: 19, scope: !7578)
!7581 = !DILocation(line: 3539, column: 30, scope: !7578)
!7582 = !DILocation(line: 3539, column: 6, scope: !7518)
!7583 = !DILocation(line: 3540, column: 3, scope: !7584)
!7584 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 3539, column: 36)
!7585 = !DILocation(line: 3542, column: 7, scope: !7584)
!7586 = !DILocation(line: 3543, column: 3, scope: !7584)
!7587 = !DILocation(line: 3546, column: 6, scope: !7588)
!7588 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3546, column: 6)
!7589 = !DILocation(line: 3546, column: 13, scope: !7588)
!7590 = !DILocation(line: 3546, column: 19, scope: !7588)
!7591 = !DILocation(line: 3546, column: 21, scope: !7588)
!7592 = !DILocation(line: 3546, column: 42, scope: !7588)
!7593 = !DILocation(line: 3546, column: 55, scope: !7588)
!7594 = !DILocation(line: 3546, column: 52, scope: !7588)
!7595 = !DILocation(line: 3546, column: 6, scope: !7518)
!7596 = !DILocation(line: 3547, column: 7, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7588, file: !3, line: 3546, column: 61)
!7598 = !DILocation(line: 3548, column: 3, scope: !7597)
!7599 = !DILocalVariable(name: "__UNIQUE_ID___x327", scope: !7600, file: !3, line: 3551, type: !1023)
!7600 = distinct !DILexicalBlock(scope: !7518, file: !3, line: 3551, column: 8)
!7601 = !DILocation(line: 3551, column: 8, scope: !7600)
!7602 = !DILocalVariable(name: "__UNIQUE_ID___y328", scope: !7600, file: !3, line: 3551, type: !1023)
!7603 = !DILocation(line: 3551, column: 8, scope: !7518)
!7604 = !DILocation(line: 3551, column: 6, scope: !7518)
!7605 = !DILocation(line: 3553, column: 9, scope: !7518)
!7606 = !DILocation(line: 3553, column: 16, scope: !7518)
!7607 = !DILocation(line: 3553, column: 23, scope: !7518)
!7608 = !DILocation(line: 3553, column: 29, scope: !7518)
!7609 = !DILocation(line: 3553, column: 31, scope: !7518)
!7610 = !DILocation(line: 3553, column: 52, scope: !7518)
!7611 = !DILocation(line: 3553, column: 2, scope: !7518)
!7612 = !DILocation(line: 3553, column: 59, scope: !7518)
!7613 = !DILabel(scope: !7518, name: "fail_free", file: !3, line: 3555)
!7614 = !DILocation(line: 3555, column: 1, scope: !7518)
!7615 = !DILocation(line: 3556, column: 8, scope: !7518)
!7616 = !DILocation(line: 3556, column: 2, scope: !7518)
!7617 = !DILabel(scope: !7518, name: "fail_put", file: !3, line: 3557)
!7618 = !DILocation(line: 3557, column: 1, scope: !7518)
!7619 = !DILocation(line: 3558, column: 31, scope: !7518)
!7620 = !DILocation(line: 3558, column: 2, scope: !7518)
!7621 = !DILocation(line: 3560, column: 9, scope: !7518)
!7622 = !DILocation(line: 3560, column: 2, scope: !7518)
!7623 = !DILocation(line: 3561, column: 1, scope: !7518)
!7624 = distinct !DISubprogram(name: "drm_dp_mst_dpcd_write", scope: !3, file: !3, line: 2196, type: !7493, scopeLine: 2198, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7625 = !DILocalVariable(name: "aux", arg: 1, scope: !7624, file: !3, line: 2196, type: !5728)
!7626 = !DILocation(line: 2196, column: 50, scope: !7624)
!7627 = !DILocalVariable(name: "offset", arg: 2, scope: !7624, file: !3, line: 2197, type: !7)
!7628 = !DILocation(line: 2197, column: 23, scope: !7624)
!7629 = !DILocalVariable(name: "buffer", arg: 3, scope: !7624, file: !3, line: 2197, type: !344)
!7630 = !DILocation(line: 2197, column: 37, scope: !7624)
!7631 = !DILocalVariable(name: "size", arg: 4, scope: !7624, file: !3, line: 2197, type: !1023)
!7632 = !DILocation(line: 2197, column: 52, scope: !7624)
!7633 = !DILocalVariable(name: "port", scope: !7624, file: !3, line: 2199, type: !345)
!7634 = !DILocation(line: 2199, column: 26, scope: !7624)
!7635 = !DILocalVariable(name: "__mptr", scope: !7636, file: !3, line: 2199, type: !344)
!7636 = distinct !DILexicalBlock(scope: !7624, file: !3, line: 2199, column: 33)
!7637 = !DILocation(line: 2199, column: 33, scope: !7636)
!7638 = !DILocation(line: 2199, column: 33, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 2199, column: 33)
!7640 = !DILocation(line: 2202, column: 32, scope: !7624)
!7641 = !DILocation(line: 2202, column: 38, scope: !7624)
!7642 = !DILocation(line: 2202, column: 43, scope: !7624)
!7643 = !DILocation(line: 2203, column: 11, scope: !7624)
!7644 = !DILocation(line: 2203, column: 19, scope: !7624)
!7645 = !DILocation(line: 2203, column: 25, scope: !7624)
!7646 = !DILocation(line: 2202, column: 9, scope: !7624)
!7647 = !DILocation(line: 2202, column: 2, scope: !7624)
!7648 = distinct !DISubprogram(name: "drm_dp_send_dpcd_write", scope: !3, file: !3, line: 3563, type: !7519, scopeLine: 3566, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7649 = !DILocalVariable(name: "mgr", arg: 1, scope: !7648, file: !3, line: 3563, type: !406)
!7650 = !DILocation(line: 3563, column: 67, scope: !7648)
!7651 = !DILocalVariable(name: "port", arg: 2, scope: !7648, file: !3, line: 3564, type: !345)
!7652 = !DILocation(line: 3564, column: 31, scope: !7648)
!7653 = !DILocalVariable(name: "offset", arg: 3, scope: !7648, file: !3, line: 3565, type: !115)
!7654 = !DILocation(line: 3565, column: 11, scope: !7648)
!7655 = !DILocalVariable(name: "size", arg: 4, scope: !7648, file: !3, line: 3565, type: !115)
!7656 = !DILocation(line: 3565, column: 23, scope: !7648)
!7657 = !DILocalVariable(name: "bytes", arg: 5, scope: !7648, file: !3, line: 3565, type: !6180)
!7658 = !DILocation(line: 3565, column: 33, scope: !7648)
!7659 = !DILocalVariable(name: "ret", scope: !7648, file: !3, line: 3567, type: !115)
!7660 = !DILocation(line: 3567, column: 6, scope: !7648)
!7661 = !DILocalVariable(name: "txmsg", scope: !7648, file: !3, line: 3568, type: !6003)
!7662 = !DILocation(line: 3568, column: 33, scope: !7648)
!7663 = !DILocalVariable(name: "mstb", scope: !7648, file: !3, line: 3569, type: !391)
!7664 = !DILocation(line: 3569, column: 28, scope: !7648)
!7665 = !DILocation(line: 3571, column: 48, scope: !7648)
!7666 = !DILocation(line: 3571, column: 53, scope: !7648)
!7667 = !DILocation(line: 3571, column: 59, scope: !7648)
!7668 = !DILocation(line: 3571, column: 9, scope: !7648)
!7669 = !DILocation(line: 3571, column: 7, scope: !7648)
!7670 = !DILocation(line: 3572, column: 7, scope: !7671)
!7671 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 3572, column: 6)
!7672 = !DILocation(line: 3572, column: 6, scope: !7648)
!7673 = !DILocation(line: 3573, column: 3, scope: !7671)
!7674 = !DILocation(line: 3575, column: 10, scope: !7648)
!7675 = !DILocation(line: 3575, column: 8, scope: !7648)
!7676 = !DILocation(line: 3576, column: 7, scope: !7677)
!7677 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 3576, column: 6)
!7678 = !DILocation(line: 3576, column: 6, scope: !7648)
!7679 = !DILocation(line: 3577, column: 7, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7677, file: !3, line: 3576, column: 14)
!7681 = !DILocation(line: 3578, column: 3, scope: !7680)
!7682 = !DILocation(line: 3581, column: 19, scope: !7648)
!7683 = !DILocation(line: 3581, column: 26, scope: !7648)
!7684 = !DILocation(line: 3581, column: 32, scope: !7648)
!7685 = !DILocation(line: 3581, column: 42, scope: !7648)
!7686 = !DILocation(line: 3581, column: 50, scope: !7648)
!7687 = !DILocation(line: 3581, column: 56, scope: !7648)
!7688 = !DILocation(line: 3581, column: 2, scope: !7648)
!7689 = !DILocation(line: 3582, column: 15, scope: !7648)
!7690 = !DILocation(line: 3582, column: 2, scope: !7648)
!7691 = !DILocation(line: 3582, column: 9, scope: !7648)
!7692 = !DILocation(line: 3582, column: 13, scope: !7648)
!7693 = !DILocation(line: 3584, column: 23, scope: !7648)
!7694 = !DILocation(line: 3584, column: 28, scope: !7648)
!7695 = !DILocation(line: 3584, column: 2, scope: !7648)
!7696 = !DILocation(line: 3586, column: 33, scope: !7648)
!7697 = !DILocation(line: 3586, column: 39, scope: !7648)
!7698 = !DILocation(line: 3586, column: 8, scope: !7648)
!7699 = !DILocation(line: 3586, column: 6, scope: !7648)
!7700 = !DILocation(line: 3587, column: 6, scope: !7701)
!7701 = distinct !DILexicalBlock(scope: !7648, file: !3, line: 3587, column: 6)
!7702 = !DILocation(line: 3587, column: 10, scope: !7701)
!7703 = !DILocation(line: 3587, column: 6, scope: !7648)
!7704 = !DILocation(line: 3588, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 3588, column: 7)
!7706 = distinct !DILexicalBlock(scope: !7701, file: !3, line: 3587, column: 15)
!7707 = !DILocation(line: 3588, column: 14, scope: !7705)
!7708 = !DILocation(line: 3588, column: 20, scope: !7705)
!7709 = !DILocation(line: 3588, column: 31, scope: !7705)
!7710 = !DILocation(line: 3588, column: 7, scope: !7706)
!7711 = !DILocation(line: 3589, column: 8, scope: !7705)
!7712 = !DILocation(line: 3589, column: 4, scope: !7705)
!7713 = !DILocation(line: 3591, column: 10, scope: !7705)
!7714 = !DILocation(line: 3591, column: 8, scope: !7705)
!7715 = !DILocation(line: 3592, column: 2, scope: !7706)
!7716 = !DILocation(line: 3594, column: 8, scope: !7648)
!7717 = !DILocation(line: 3594, column: 2, scope: !7648)
!7718 = !DILabel(scope: !7648, name: "fail_put", file: !3, line: 3595)
!7719 = !DILocation(line: 3595, column: 1, scope: !7648)
!7720 = !DILocation(line: 3596, column: 31, scope: !7648)
!7721 = !DILocation(line: 3596, column: 2, scope: !7648)
!7722 = !DILocation(line: 3597, column: 9, scope: !7648)
!7723 = !DILocation(line: 3597, column: 2, scope: !7648)
!7724 = !DILocation(line: 3598, column: 1, scope: !7648)
!7725 = distinct !DISubprogram(name: "drm_dp_mst_connector_late_register", scope: !3, file: !3, line: 2260, type: !7726, scopeLine: 2262, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7726 = !DISubroutineType(types: !7727)
!7727 = !{!115, !4829, !345}
!7728 = !DILocalVariable(name: "connector", arg: 1, scope: !7725, file: !3, line: 2260, type: !4829)
!7729 = !DILocation(line: 2260, column: 62, scope: !7725)
!7730 = !DILocalVariable(name: "port", arg: 2, scope: !7725, file: !3, line: 2261, type: !345)
!7731 = !DILocation(line: 2261, column: 36, scope: !7725)
!7732 = !DILocation(line: 2263, column: 2, scope: !7725)
!7733 = !DILocation(line: 2266, column: 18, scope: !7725)
!7734 = !DILocation(line: 2266, column: 29, scope: !7725)
!7735 = !DILocation(line: 2266, column: 2, scope: !7725)
!7736 = !DILocation(line: 2266, column: 8, scope: !7725)
!7737 = !DILocation(line: 2266, column: 12, scope: !7725)
!7738 = !DILocation(line: 2266, column: 16, scope: !7725)
!7739 = !DILocation(line: 2267, column: 38, scope: !7725)
!7740 = !DILocation(line: 2267, column: 44, scope: !7725)
!7741 = !DILocation(line: 2267, column: 9, scope: !7725)
!7742 = !DILocation(line: 2267, column: 2, scope: !7725)
!7743 = distinct !DISubprogram(name: "drm_dp_aux_register_devnode", scope: !7744, file: !7744, line: 61, type: !7745, scopeLine: 62, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7744 = !DIFile(filename: "drivers/gpu/drm/drm_crtc_helper_internal.h", directory: "/home/lizy2001/genbc/linux")
!7745 = !DISubroutineType(types: !7746)
!7746 = !{!115, !5728}
!7747 = !DILocalVariable(name: "aux", arg: 1, scope: !7743, file: !7744, line: 61, type: !5728)
!7748 = !DILocation(line: 61, column: 66, scope: !7743)
!7749 = !DILocation(line: 63, column: 2, scope: !7743)
!7750 = distinct !DISubprogram(name: "drm_dp_mst_connector_early_unregister", scope: !3, file: !3, line: 2280, type: !7751, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7751 = !DISubroutineType(types: !7752)
!7752 = !{null, !4829, !345}
!7753 = !DILocalVariable(name: "connector", arg: 1, scope: !7750, file: !3, line: 2280, type: !4829)
!7754 = !DILocation(line: 2280, column: 66, scope: !7750)
!7755 = !DILocalVariable(name: "port", arg: 2, scope: !7750, file: !3, line: 2281, type: !345)
!7756 = !DILocation(line: 2281, column: 33, scope: !7750)
!7757 = !DILocation(line: 2283, column: 2, scope: !7750)
!7758 = !DILocation(line: 2285, column: 33, scope: !7750)
!7759 = !DILocation(line: 2285, column: 39, scope: !7750)
!7760 = !DILocation(line: 2285, column: 2, scope: !7750)
!7761 = !DILocation(line: 2286, column: 1, scope: !7750)
!7762 = distinct !DISubprogram(name: "drm_dp_aux_unregister_devnode", scope: !7744, file: !7744, line: 66, type: !7763, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7763 = !DISubroutineType(types: !7764)
!7764 = !{null, !5728}
!7765 = !DILocalVariable(name: "aux", arg: 1, scope: !7762, file: !7744, line: 66, type: !5728)
!7766 = !DILocation(line: 66, column: 69, scope: !7762)
!7767 = !DILocation(line: 68, column: 1, scope: !7762)
!7768 = distinct !DISubprogram(name: "drm_dp_send_power_updown_phy", scope: !3, file: !3, line: 3223, type: !7769, scopeLine: 3225, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7769 = !DISubroutineType(types: !7770)
!7770 = !{!115, !406, !345, !370}
!7771 = !DILocalVariable(name: "mgr", arg: 1, scope: !7768, file: !3, line: 3223, type: !406)
!7772 = !DILocation(line: 3223, column: 66, scope: !7768)
!7773 = !DILocalVariable(name: "port", arg: 2, scope: !7768, file: !3, line: 3224, type: !345)
!7774 = !DILocation(line: 3224, column: 30, scope: !7768)
!7775 = !DILocalVariable(name: "power_up", arg: 3, scope: !7768, file: !3, line: 3224, type: !370)
!7776 = !DILocation(line: 3224, column: 41, scope: !7768)
!7777 = !DILocalVariable(name: "txmsg", scope: !7768, file: !3, line: 3226, type: !6003)
!7778 = !DILocation(line: 3226, column: 33, scope: !7768)
!7779 = !DILocalVariable(name: "ret", scope: !7768, file: !3, line: 3227, type: !115)
!7780 = !DILocation(line: 3227, column: 6, scope: !7768)
!7781 = !DILocation(line: 3229, column: 48, scope: !7768)
!7782 = !DILocation(line: 3229, column: 53, scope: !7768)
!7783 = !DILocation(line: 3229, column: 9, scope: !7768)
!7784 = !DILocation(line: 3229, column: 7, scope: !7768)
!7785 = !DILocation(line: 3230, column: 7, scope: !7786)
!7786 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 3230, column: 6)
!7787 = !DILocation(line: 3230, column: 6, scope: !7768)
!7788 = !DILocation(line: 3231, column: 3, scope: !7786)
!7789 = !DILocation(line: 3233, column: 10, scope: !7768)
!7790 = !DILocation(line: 3233, column: 8, scope: !7768)
!7791 = !DILocation(line: 3234, column: 7, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 3234, column: 6)
!7793 = !DILocation(line: 3234, column: 6, scope: !7768)
!7794 = !DILocation(line: 3235, column: 32, scope: !7795)
!7795 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 3234, column: 14)
!7796 = !DILocation(line: 3235, column: 3, scope: !7795)
!7797 = !DILocation(line: 3236, column: 3, scope: !7795)
!7798 = !DILocation(line: 3239, column: 15, scope: !7768)
!7799 = !DILocation(line: 3239, column: 21, scope: !7768)
!7800 = !DILocation(line: 3239, column: 2, scope: !7768)
!7801 = !DILocation(line: 3239, column: 9, scope: !7768)
!7802 = !DILocation(line: 3239, column: 13, scope: !7768)
!7803 = !DILocation(line: 3240, column: 25, scope: !7768)
!7804 = !DILocation(line: 3240, column: 32, scope: !7768)
!7805 = !DILocation(line: 3240, column: 38, scope: !7768)
!7806 = !DILocation(line: 3240, column: 48, scope: !7768)
!7807 = !DILocation(line: 3240, column: 2, scope: !7768)
!7808 = !DILocation(line: 3241, column: 23, scope: !7768)
!7809 = !DILocation(line: 3241, column: 28, scope: !7768)
!7810 = !DILocation(line: 3241, column: 2, scope: !7768)
!7811 = !DILocation(line: 3243, column: 33, scope: !7768)
!7812 = !DILocation(line: 3243, column: 39, scope: !7768)
!7813 = !DILocation(line: 3243, column: 47, scope: !7768)
!7814 = !DILocation(line: 3243, column: 8, scope: !7768)
!7815 = !DILocation(line: 3243, column: 6, scope: !7768)
!7816 = !DILocation(line: 3244, column: 6, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7768, file: !3, line: 3244, column: 6)
!7818 = !DILocation(line: 3244, column: 10, scope: !7817)
!7819 = !DILocation(line: 3244, column: 6, scope: !7768)
!7820 = !DILocation(line: 3245, column: 7, scope: !7821)
!7821 = distinct !DILexicalBlock(scope: !7822, file: !3, line: 3245, column: 7)
!7822 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 3244, column: 15)
!7823 = !DILocation(line: 3245, column: 14, scope: !7821)
!7824 = !DILocation(line: 3245, column: 20, scope: !7821)
!7825 = !DILocation(line: 3245, column: 31, scope: !7821)
!7826 = !DILocation(line: 3245, column: 7, scope: !7822)
!7827 = !DILocation(line: 3246, column: 8, scope: !7821)
!7828 = !DILocation(line: 3246, column: 4, scope: !7821)
!7829 = !DILocation(line: 3248, column: 8, scope: !7821)
!7830 = !DILocation(line: 3249, column: 2, scope: !7822)
!7831 = !DILocation(line: 3250, column: 8, scope: !7768)
!7832 = !DILocation(line: 3250, column: 2, scope: !7768)
!7833 = !DILocation(line: 3251, column: 31, scope: !7768)
!7834 = !DILocation(line: 3251, column: 2, scope: !7768)
!7835 = !DILocation(line: 3253, column: 9, scope: !7768)
!7836 = !DILocation(line: 3253, column: 2, scope: !7768)
!7837 = !DILocation(line: 3254, column: 1, scope: !7768)
!7838 = distinct !DISubprogram(name: "drm_dp_mst_topology_get_port_validated", scope: !3, file: !3, line: 2014, type: !7839, scopeLine: 2016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7839 = !DISubroutineType(types: !7840)
!7840 = !{!345, !406, !345}
!7841 = !DILocalVariable(name: "mgr", arg: 1, scope: !7838, file: !3, line: 2014, type: !406)
!7842 = !DILocation(line: 2014, column: 72, scope: !7838)
!7843 = !DILocalVariable(name: "port", arg: 2, scope: !7838, file: !3, line: 2015, type: !345)
!7844 = !DILocation(line: 2015, column: 36, scope: !7838)
!7845 = !DILocalVariable(name: "rport", scope: !7838, file: !3, line: 2017, type: !345)
!7846 = !DILocation(line: 2017, column: 26, scope: !7838)
!7847 = !DILocation(line: 2019, column: 14, scope: !7838)
!7848 = !DILocation(line: 2019, column: 19, scope: !7838)
!7849 = !DILocation(line: 2019, column: 2, scope: !7838)
!7850 = !DILocation(line: 2020, column: 6, scope: !7851)
!7851 = distinct !DILexicalBlock(scope: !7838, file: !3, line: 2020, column: 6)
!7852 = !DILocation(line: 2020, column: 11, scope: !7851)
!7853 = !DILocation(line: 2020, column: 6, scope: !7838)
!7854 = !DILocation(line: 2022, column: 7, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7851, file: !3, line: 2020, column: 24)
!7856 = !DILocation(line: 2022, column: 12, scope: !7855)
!7857 = !DILocation(line: 2022, column: 25, scope: !7855)
!7858 = !DILocation(line: 2021, column: 11, scope: !7855)
!7859 = !DILocation(line: 2021, column: 9, scope: !7855)
!7860 = !DILocation(line: 2024, column: 7, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 2024, column: 7)
!7862 = !DILocation(line: 2024, column: 13, scope: !7861)
!7863 = !DILocation(line: 2024, column: 50, scope: !7861)
!7864 = !DILocation(line: 2024, column: 17, scope: !7861)
!7865 = !DILocation(line: 2024, column: 7, scope: !7855)
!7866 = !DILocation(line: 2025, column: 10, scope: !7861)
!7867 = !DILocation(line: 2025, column: 4, scope: !7861)
!7868 = !DILocation(line: 2026, column: 2, scope: !7855)
!7869 = !DILocation(line: 2027, column: 16, scope: !7838)
!7870 = !DILocation(line: 2027, column: 21, scope: !7838)
!7871 = !DILocation(line: 2027, column: 2, scope: !7838)
!7872 = !DILocation(line: 2028, column: 9, scope: !7838)
!7873 = !DILocation(line: 2028, column: 2, scope: !7838)
!7874 = distinct !DISubprogram(name: "kzalloc", scope: !328, file: !328, line: 662, type: !7875, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7875 = !DISubroutineType(types: !7876)
!7876 = !{!344, !1023, !342}
!7877 = !DILocalVariable(name: "s", arg: 1, scope: !7878, file: !328, line: 445, type: !1397)
!7878 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !328, file: !328, line: 445, type: !7879, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7879 = !DISubroutineType(types: !7880)
!7880 = !{!344, !1397, !342, !1023}
!7881 = !DILocation(line: 445, column: 72, scope: !7878, inlinedAt: !7882)
!7882 = distinct !DILocation(line: 552, column: 10, scope: !7883, inlinedAt: !7886)
!7883 = distinct !DILexicalBlock(scope: !7884, file: !328, line: 540, column: 34)
!7884 = distinct !DILexicalBlock(scope: !7885, file: !328, line: 540, column: 6)
!7885 = distinct !DISubprogram(name: "kmalloc", scope: !328, file: !328, line: 538, type: !7875, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7886 = distinct !DILocation(line: 664, column: 9, scope: !7874)
!7887 = !DILocalVariable(name: "flags", arg: 2, scope: !7878, file: !328, line: 446, type: !342)
!7888 = !DILocation(line: 446, column: 9, scope: !7878, inlinedAt: !7882)
!7889 = !DILocalVariable(name: "size", arg: 3, scope: !7878, file: !328, line: 446, type: !1023)
!7890 = !DILocation(line: 446, column: 23, scope: !7878, inlinedAt: !7882)
!7891 = !DILocalVariable(name: "ret", scope: !7878, file: !328, line: 448, type: !344)
!7892 = !DILocation(line: 448, column: 8, scope: !7878, inlinedAt: !7882)
!7893 = !DILocalVariable(name: "flags", arg: 1, scope: !7894, file: !328, line: 318, type: !342)
!7894 = distinct !DISubprogram(name: "kmalloc_type", scope: !328, file: !328, line: 318, type: !7895, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7895 = !DISubroutineType(types: !7896)
!7896 = !{!327, !342}
!7897 = !DILocation(line: 318, column: 67, scope: !7894, inlinedAt: !7898)
!7898 = distinct !DILocation(line: 553, column: 20, scope: !7883, inlinedAt: !7886)
!7899 = !DILocalVariable(name: "size", arg: 1, scope: !7900, file: !328, line: 346, type: !1023)
!7900 = distinct !DISubprogram(name: "kmalloc_index", scope: !328, file: !328, line: 346, type: !7901, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7901 = !DISubroutineType(types: !7902)
!7902 = !{!7, !1023}
!7903 = !DILocation(line: 346, column: 58, scope: !7900, inlinedAt: !7904)
!7904 = distinct !DILocation(line: 547, column: 11, scope: !7883, inlinedAt: !7886)
!7905 = !DILocalVariable(name: "size", arg: 1, scope: !7906, file: !328, line: 472, type: !1023)
!7906 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !328, file: !328, line: 472, type: !7907, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7907 = !DISubroutineType(types: !7908)
!7908 = !{!344, !1023, !342, !7}
!7909 = !DILocation(line: 472, column: 28, scope: !7906, inlinedAt: !7910)
!7910 = distinct !DILocation(line: 481, column: 9, scope: !7911, inlinedAt: !7912)
!7911 = distinct !DISubprogram(name: "kmalloc_large", scope: !328, file: !328, line: 478, type: !7875, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!7912 = distinct !DILocation(line: 545, column: 11, scope: !7913, inlinedAt: !7886)
!7913 = distinct !DILexicalBlock(scope: !7883, file: !328, line: 544, column: 7)
!7914 = !DILocalVariable(name: "flags", arg: 2, scope: !7906, file: !328, line: 472, type: !342)
!7915 = !DILocation(line: 472, column: 40, scope: !7906, inlinedAt: !7910)
!7916 = !DILocalVariable(name: "order", arg: 3, scope: !7906, file: !328, line: 472, type: !7)
!7917 = !DILocation(line: 472, column: 60, scope: !7906, inlinedAt: !7910)
!7918 = !DILocalVariable(name: "size", arg: 1, scope: !7911, file: !328, line: 478, type: !1023)
!7919 = !DILocation(line: 478, column: 51, scope: !7911, inlinedAt: !7912)
!7920 = !DILocalVariable(name: "flags", arg: 2, scope: !7911, file: !328, line: 478, type: !342)
!7921 = !DILocation(line: 478, column: 63, scope: !7911, inlinedAt: !7912)
!7922 = !DILocalVariable(name: "order", scope: !7911, file: !328, line: 480, type: !7)
!7923 = !DILocation(line: 480, column: 15, scope: !7911, inlinedAt: !7912)
!7924 = !DILocalVariable(name: "size", arg: 1, scope: !7885, file: !328, line: 538, type: !1023)
!7925 = !DILocation(line: 538, column: 45, scope: !7885, inlinedAt: !7886)
!7926 = !DILocalVariable(name: "flags", arg: 2, scope: !7885, file: !328, line: 538, type: !342)
!7927 = !DILocation(line: 538, column: 57, scope: !7885, inlinedAt: !7886)
!7928 = !DILocalVariable(name: "index", scope: !7883, file: !328, line: 542, type: !7)
!7929 = !DILocation(line: 542, column: 16, scope: !7883, inlinedAt: !7886)
!7930 = !DILocalVariable(name: "size", arg: 1, scope: !7874, file: !328, line: 662, type: !1023)
!7931 = !DILocation(line: 662, column: 36, scope: !7874)
!7932 = !DILocalVariable(name: "flags", arg: 2, scope: !7874, file: !328, line: 662, type: !342)
!7933 = !DILocation(line: 662, column: 48, scope: !7874)
!7934 = !DILocation(line: 664, column: 17, scope: !7874)
!7935 = !DILocation(line: 664, column: 23, scope: !7874)
!7936 = !DILocation(line: 664, column: 29, scope: !7874)
!7937 = !DILocation(line: 540, column: 27, scope: !7884, inlinedAt: !7886)
!7938 = !DILocation(line: 540, column: 6, scope: !7884, inlinedAt: !7886)
!7939 = !DILocation(line: 540, column: 6, scope: !7885, inlinedAt: !7886)
!7940 = !DILocation(line: 544, column: 7, scope: !7913, inlinedAt: !7886)
!7941 = !DILocation(line: 544, column: 12, scope: !7913, inlinedAt: !7886)
!7942 = !DILocation(line: 544, column: 7, scope: !7883, inlinedAt: !7886)
!7943 = !DILocation(line: 545, column: 25, scope: !7913, inlinedAt: !7886)
!7944 = !DILocation(line: 545, column: 31, scope: !7913, inlinedAt: !7886)
!7945 = !DILocation(line: 480, column: 33, scope: !7911, inlinedAt: !7912)
!7946 = !DILocation(line: 480, column: 23, scope: !7911, inlinedAt: !7912)
!7947 = !DILocation(line: 481, column: 29, scope: !7911, inlinedAt: !7912)
!7948 = !DILocation(line: 481, column: 35, scope: !7911, inlinedAt: !7912)
!7949 = !DILocation(line: 481, column: 42, scope: !7911, inlinedAt: !7912)
!7950 = !DILocation(line: 474, column: 23, scope: !7906, inlinedAt: !7910)
!7951 = !DILocation(line: 474, column: 29, scope: !7906, inlinedAt: !7910)
!7952 = !DILocation(line: 474, column: 36, scope: !7906, inlinedAt: !7910)
!7953 = !DILocation(line: 474, column: 9, scope: !7906, inlinedAt: !7910)
!7954 = !DILocation(line: 545, column: 4, scope: !7913, inlinedAt: !7886)
!7955 = !DILocation(line: 547, column: 25, scope: !7883, inlinedAt: !7886)
!7956 = !DILocation(line: 348, column: 7, scope: !7957, inlinedAt: !7904)
!7957 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 348, column: 6)
!7958 = !DILocation(line: 348, column: 6, scope: !7900, inlinedAt: !7904)
!7959 = !DILocation(line: 349, column: 3, scope: !7957, inlinedAt: !7904)
!7960 = !DILocation(line: 351, column: 6, scope: !7961, inlinedAt: !7904)
!7961 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 351, column: 6)
!7962 = !DILocation(line: 351, column: 11, scope: !7961, inlinedAt: !7904)
!7963 = !DILocation(line: 351, column: 6, scope: !7900, inlinedAt: !7904)
!7964 = !DILocation(line: 352, column: 3, scope: !7961, inlinedAt: !7904)
!7965 = !DILocation(line: 354, column: 32, scope: !7966, inlinedAt: !7904)
!7966 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 354, column: 6)
!7967 = !DILocation(line: 354, column: 37, scope: !7966, inlinedAt: !7904)
!7968 = !DILocation(line: 354, column: 42, scope: !7966, inlinedAt: !7904)
!7969 = !DILocation(line: 354, column: 45, scope: !7966, inlinedAt: !7904)
!7970 = !DILocation(line: 354, column: 50, scope: !7966, inlinedAt: !7904)
!7971 = !DILocation(line: 354, column: 6, scope: !7900, inlinedAt: !7904)
!7972 = !DILocation(line: 355, column: 3, scope: !7966, inlinedAt: !7904)
!7973 = !DILocation(line: 356, column: 32, scope: !7974, inlinedAt: !7904)
!7974 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 356, column: 6)
!7975 = !DILocation(line: 356, column: 37, scope: !7974, inlinedAt: !7904)
!7976 = !DILocation(line: 356, column: 43, scope: !7974, inlinedAt: !7904)
!7977 = !DILocation(line: 356, column: 46, scope: !7974, inlinedAt: !7904)
!7978 = !DILocation(line: 356, column: 51, scope: !7974, inlinedAt: !7904)
!7979 = !DILocation(line: 356, column: 6, scope: !7900, inlinedAt: !7904)
!7980 = !DILocation(line: 357, column: 3, scope: !7974, inlinedAt: !7904)
!7981 = !DILocation(line: 358, column: 6, scope: !7982, inlinedAt: !7904)
!7982 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 358, column: 6)
!7983 = !DILocation(line: 358, column: 11, scope: !7982, inlinedAt: !7904)
!7984 = !DILocation(line: 358, column: 6, scope: !7900, inlinedAt: !7904)
!7985 = !DILocation(line: 358, column: 26, scope: !7982, inlinedAt: !7904)
!7986 = !DILocation(line: 359, column: 6, scope: !7987, inlinedAt: !7904)
!7987 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 359, column: 6)
!7988 = !DILocation(line: 359, column: 11, scope: !7987, inlinedAt: !7904)
!7989 = !DILocation(line: 359, column: 6, scope: !7900, inlinedAt: !7904)
!7990 = !DILocation(line: 359, column: 26, scope: !7987, inlinedAt: !7904)
!7991 = !DILocation(line: 360, column: 6, scope: !7992, inlinedAt: !7904)
!7992 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 360, column: 6)
!7993 = !DILocation(line: 360, column: 11, scope: !7992, inlinedAt: !7904)
!7994 = !DILocation(line: 360, column: 6, scope: !7900, inlinedAt: !7904)
!7995 = !DILocation(line: 360, column: 26, scope: !7992, inlinedAt: !7904)
!7996 = !DILocation(line: 361, column: 6, scope: !7997, inlinedAt: !7904)
!7997 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 361, column: 6)
!7998 = !DILocation(line: 361, column: 11, scope: !7997, inlinedAt: !7904)
!7999 = !DILocation(line: 361, column: 6, scope: !7900, inlinedAt: !7904)
!8000 = !DILocation(line: 361, column: 26, scope: !7997, inlinedAt: !7904)
!8001 = !DILocation(line: 362, column: 6, scope: !8002, inlinedAt: !7904)
!8002 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 362, column: 6)
!8003 = !DILocation(line: 362, column: 11, scope: !8002, inlinedAt: !7904)
!8004 = !DILocation(line: 362, column: 6, scope: !7900, inlinedAt: !7904)
!8005 = !DILocation(line: 362, column: 26, scope: !8002, inlinedAt: !7904)
!8006 = !DILocation(line: 363, column: 6, scope: !8007, inlinedAt: !7904)
!8007 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 363, column: 6)
!8008 = !DILocation(line: 363, column: 11, scope: !8007, inlinedAt: !7904)
!8009 = !DILocation(line: 363, column: 6, scope: !7900, inlinedAt: !7904)
!8010 = !DILocation(line: 363, column: 26, scope: !8007, inlinedAt: !7904)
!8011 = !DILocation(line: 364, column: 6, scope: !8012, inlinedAt: !7904)
!8012 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 364, column: 6)
!8013 = !DILocation(line: 364, column: 11, scope: !8012, inlinedAt: !7904)
!8014 = !DILocation(line: 364, column: 6, scope: !7900, inlinedAt: !7904)
!8015 = !DILocation(line: 364, column: 26, scope: !8012, inlinedAt: !7904)
!8016 = !DILocation(line: 365, column: 6, scope: !8017, inlinedAt: !7904)
!8017 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 365, column: 6)
!8018 = !DILocation(line: 365, column: 11, scope: !8017, inlinedAt: !7904)
!8019 = !DILocation(line: 365, column: 6, scope: !7900, inlinedAt: !7904)
!8020 = !DILocation(line: 365, column: 26, scope: !8017, inlinedAt: !7904)
!8021 = !DILocation(line: 366, column: 6, scope: !8022, inlinedAt: !7904)
!8022 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 366, column: 6)
!8023 = !DILocation(line: 366, column: 11, scope: !8022, inlinedAt: !7904)
!8024 = !DILocation(line: 366, column: 6, scope: !7900, inlinedAt: !7904)
!8025 = !DILocation(line: 366, column: 26, scope: !8022, inlinedAt: !7904)
!8026 = !DILocation(line: 367, column: 6, scope: !8027, inlinedAt: !7904)
!8027 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 367, column: 6)
!8028 = !DILocation(line: 367, column: 11, scope: !8027, inlinedAt: !7904)
!8029 = !DILocation(line: 367, column: 6, scope: !7900, inlinedAt: !7904)
!8030 = !DILocation(line: 367, column: 26, scope: !8027, inlinedAt: !7904)
!8031 = !DILocation(line: 368, column: 6, scope: !8032, inlinedAt: !7904)
!8032 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 368, column: 6)
!8033 = !DILocation(line: 368, column: 11, scope: !8032, inlinedAt: !7904)
!8034 = !DILocation(line: 368, column: 6, scope: !7900, inlinedAt: !7904)
!8035 = !DILocation(line: 368, column: 26, scope: !8032, inlinedAt: !7904)
!8036 = !DILocation(line: 369, column: 6, scope: !8037, inlinedAt: !7904)
!8037 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 369, column: 6)
!8038 = !DILocation(line: 369, column: 11, scope: !8037, inlinedAt: !7904)
!8039 = !DILocation(line: 369, column: 6, scope: !7900, inlinedAt: !7904)
!8040 = !DILocation(line: 369, column: 26, scope: !8037, inlinedAt: !7904)
!8041 = !DILocation(line: 370, column: 6, scope: !8042, inlinedAt: !7904)
!8042 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 370, column: 6)
!8043 = !DILocation(line: 370, column: 11, scope: !8042, inlinedAt: !7904)
!8044 = !DILocation(line: 370, column: 6, scope: !7900, inlinedAt: !7904)
!8045 = !DILocation(line: 370, column: 26, scope: !8042, inlinedAt: !7904)
!8046 = !DILocation(line: 371, column: 6, scope: !8047, inlinedAt: !7904)
!8047 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 371, column: 6)
!8048 = !DILocation(line: 371, column: 11, scope: !8047, inlinedAt: !7904)
!8049 = !DILocation(line: 371, column: 6, scope: !7900, inlinedAt: !7904)
!8050 = !DILocation(line: 371, column: 26, scope: !8047, inlinedAt: !7904)
!8051 = !DILocation(line: 372, column: 6, scope: !8052, inlinedAt: !7904)
!8052 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 372, column: 6)
!8053 = !DILocation(line: 372, column: 11, scope: !8052, inlinedAt: !7904)
!8054 = !DILocation(line: 372, column: 6, scope: !7900, inlinedAt: !7904)
!8055 = !DILocation(line: 372, column: 26, scope: !8052, inlinedAt: !7904)
!8056 = !DILocation(line: 373, column: 6, scope: !8057, inlinedAt: !7904)
!8057 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 373, column: 6)
!8058 = !DILocation(line: 373, column: 11, scope: !8057, inlinedAt: !7904)
!8059 = !DILocation(line: 373, column: 6, scope: !7900, inlinedAt: !7904)
!8060 = !DILocation(line: 373, column: 26, scope: !8057, inlinedAt: !7904)
!8061 = !DILocation(line: 374, column: 6, scope: !8062, inlinedAt: !7904)
!8062 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 374, column: 6)
!8063 = !DILocation(line: 374, column: 11, scope: !8062, inlinedAt: !7904)
!8064 = !DILocation(line: 374, column: 6, scope: !7900, inlinedAt: !7904)
!8065 = !DILocation(line: 374, column: 26, scope: !8062, inlinedAt: !7904)
!8066 = !DILocation(line: 375, column: 6, scope: !8067, inlinedAt: !7904)
!8067 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 375, column: 6)
!8068 = !DILocation(line: 375, column: 11, scope: !8067, inlinedAt: !7904)
!8069 = !DILocation(line: 375, column: 6, scope: !7900, inlinedAt: !7904)
!8070 = !DILocation(line: 375, column: 27, scope: !8067, inlinedAt: !7904)
!8071 = !DILocation(line: 376, column: 6, scope: !8072, inlinedAt: !7904)
!8072 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 376, column: 6)
!8073 = !DILocation(line: 376, column: 11, scope: !8072, inlinedAt: !7904)
!8074 = !DILocation(line: 376, column: 6, scope: !7900, inlinedAt: !7904)
!8075 = !DILocation(line: 376, column: 32, scope: !8072, inlinedAt: !7904)
!8076 = !DILocation(line: 377, column: 6, scope: !8077, inlinedAt: !7904)
!8077 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 377, column: 6)
!8078 = !DILocation(line: 377, column: 11, scope: !8077, inlinedAt: !7904)
!8079 = !DILocation(line: 377, column: 6, scope: !7900, inlinedAt: !7904)
!8080 = !DILocation(line: 377, column: 32, scope: !8077, inlinedAt: !7904)
!8081 = !DILocation(line: 378, column: 6, scope: !8082, inlinedAt: !7904)
!8082 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 378, column: 6)
!8083 = !DILocation(line: 378, column: 11, scope: !8082, inlinedAt: !7904)
!8084 = !DILocation(line: 378, column: 6, scope: !7900, inlinedAt: !7904)
!8085 = !DILocation(line: 378, column: 32, scope: !8082, inlinedAt: !7904)
!8086 = !DILocation(line: 379, column: 6, scope: !8087, inlinedAt: !7904)
!8087 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 379, column: 6)
!8088 = !DILocation(line: 379, column: 11, scope: !8087, inlinedAt: !7904)
!8089 = !DILocation(line: 379, column: 6, scope: !7900, inlinedAt: !7904)
!8090 = !DILocation(line: 379, column: 33, scope: !8087, inlinedAt: !7904)
!8091 = !DILocation(line: 380, column: 6, scope: !8092, inlinedAt: !7904)
!8092 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 380, column: 6)
!8093 = !DILocation(line: 380, column: 11, scope: !8092, inlinedAt: !7904)
!8094 = !DILocation(line: 380, column: 6, scope: !7900, inlinedAt: !7904)
!8095 = !DILocation(line: 380, column: 33, scope: !8092, inlinedAt: !7904)
!8096 = !DILocation(line: 381, column: 6, scope: !8097, inlinedAt: !7904)
!8097 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 381, column: 6)
!8098 = !DILocation(line: 381, column: 11, scope: !8097, inlinedAt: !7904)
!8099 = !DILocation(line: 381, column: 6, scope: !7900, inlinedAt: !7904)
!8100 = !DILocation(line: 381, column: 33, scope: !8097, inlinedAt: !7904)
!8101 = !DILocation(line: 382, column: 2, scope: !8102, inlinedAt: !7904)
!8102 = distinct !DILexicalBlock(scope: !8103, file: !328, line: 382, column: 2)
!8103 = distinct !DILexicalBlock(scope: !7900, file: !328, line: 382, column: 2)
!8104 = !{i32 -2143987020, i32 -2143986991, i32 -2143986945, i32 -2143986887, i32 -2143986833, i32 -2143986779, i32 -2143986724, i32 -2143986693}
!8105 = !DILocation(line: 382, column: 2, scope: !8106, inlinedAt: !7904)
!8106 = distinct !DILexicalBlock(scope: !8107, file: !328, line: 382, column: 2)
!8107 = distinct !DILexicalBlock(scope: !8103, file: !328, line: 382, column: 2)
!8108 = !{i32 -2143986250, i32 -2143986243, i32 -2143986189, i32 -2143986158, i32 -2143986128}
!8109 = !DILocation(line: 382, column: 2, scope: !8107, inlinedAt: !7904)
!8110 = !DILocation(line: 386, column: 1, scope: !7900, inlinedAt: !7904)
!8111 = !DILocation(line: 547, column: 9, scope: !7883, inlinedAt: !7886)
!8112 = !DILocation(line: 549, column: 8, scope: !8113, inlinedAt: !7886)
!8113 = distinct !DILexicalBlock(scope: !7883, file: !328, line: 549, column: 7)
!8114 = !DILocation(line: 549, column: 7, scope: !7883, inlinedAt: !7886)
!8115 = !DILocation(line: 550, column: 4, scope: !8113, inlinedAt: !7886)
!8116 = !DILocation(line: 553, column: 33, scope: !7883, inlinedAt: !7886)
!8117 = !DILocation(line: 325, column: 6, scope: !8118, inlinedAt: !7898)
!8118 = distinct !DILexicalBlock(scope: !7894, file: !328, line: 325, column: 6)
!8119 = !DILocation(line: 325, column: 6, scope: !7894, inlinedAt: !7898)
!8120 = !DILocation(line: 326, column: 3, scope: !8118, inlinedAt: !7898)
!8121 = !DILocation(line: 332, column: 9, scope: !7894, inlinedAt: !7898)
!8122 = !DILocation(line: 332, column: 15, scope: !7894, inlinedAt: !7898)
!8123 = !DILocation(line: 332, column: 2, scope: !7894, inlinedAt: !7898)
!8124 = !DILocation(line: 336, column: 1, scope: !7894, inlinedAt: !7898)
!8125 = !DILocation(line: 553, column: 5, scope: !7883, inlinedAt: !7886)
!8126 = !DILocation(line: 553, column: 41, scope: !7883, inlinedAt: !7886)
!8127 = !DILocation(line: 554, column: 5, scope: !7883, inlinedAt: !7886)
!8128 = !DILocation(line: 554, column: 12, scope: !7883, inlinedAt: !7886)
!8129 = !DILocation(line: 448, column: 31, scope: !7878, inlinedAt: !7882)
!8130 = !DILocation(line: 448, column: 34, scope: !7878, inlinedAt: !7882)
!8131 = !DILocation(line: 448, column: 14, scope: !7878, inlinedAt: !7882)
!8132 = !DILocation(line: 450, column: 22, scope: !7878, inlinedAt: !7882)
!8133 = !DILocation(line: 450, column: 25, scope: !7878, inlinedAt: !7882)
!8134 = !DILocation(line: 450, column: 30, scope: !7878, inlinedAt: !7882)
!8135 = !DILocation(line: 450, column: 36, scope: !7878, inlinedAt: !7882)
!8136 = !DILocation(line: 450, column: 8, scope: !7878, inlinedAt: !7882)
!8137 = !DILocation(line: 450, column: 6, scope: !7878, inlinedAt: !7882)
!8138 = !DILocation(line: 451, column: 9, scope: !7878, inlinedAt: !7882)
!8139 = !DILocation(line: 552, column: 3, scope: !7883, inlinedAt: !7886)
!8140 = !DILocation(line: 557, column: 19, scope: !7885, inlinedAt: !7886)
!8141 = !DILocation(line: 557, column: 25, scope: !7885, inlinedAt: !7886)
!8142 = !DILocation(line: 557, column: 9, scope: !7885, inlinedAt: !7886)
!8143 = !DILocation(line: 557, column: 2, scope: !7885, inlinedAt: !7886)
!8144 = !DILocation(line: 558, column: 1, scope: !7885, inlinedAt: !7886)
!8145 = !DILocation(line: 664, column: 2, scope: !7874)
!8146 = distinct !DISubprogram(name: "drm_dp_mst_topology_put_port", scope: !3, file: !3, line: 1942, type: !7423, scopeLine: 1943, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8147 = !DILocalVariable(name: "port", arg: 1, scope: !8146, file: !3, line: 1942, type: !345)
!8148 = !DILocation(line: 1942, column: 66, scope: !8146)
!8149 = !DILocation(line: 1944, column: 28, scope: !8146)
!8150 = !DILocation(line: 1944, column: 34, scope: !8146)
!8151 = !DILocation(line: 1944, column: 2, scope: !8146)
!8152 = !DILocation(line: 1946, column: 2, scope: !8146)
!8153 = !DILocation(line: 1950, column: 30, scope: !8146)
!8154 = !DILocation(line: 1950, column: 36, scope: !8146)
!8155 = !DILocation(line: 1950, column: 2, scope: !8146)
!8156 = !DILocation(line: 1951, column: 12, scope: !8146)
!8157 = !DILocation(line: 1951, column: 18, scope: !8146)
!8158 = !DILocation(line: 1951, column: 2, scope: !8146)
!8159 = !DILocation(line: 1952, column: 1, scope: !8146)
!8160 = distinct !DISubprogram(name: "build_power_updown_phy", scope: !3, file: !3, line: 1191, type: !8161, scopeLine: 1193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8161 = !DISubroutineType(types: !8162)
!8162 = !{null, !6003, !115, !370}
!8163 = !DILocalVariable(name: "msg", arg: 1, scope: !8160, file: !3, line: 1191, type: !6003)
!8164 = !DILocation(line: 1191, column: 67, scope: !8160)
!8165 = !DILocalVariable(name: "port_num", arg: 2, scope: !8160, file: !3, line: 1192, type: !115)
!8166 = !DILocation(line: 1192, column: 12, scope: !8160)
!8167 = !DILocalVariable(name: "power_up", arg: 3, scope: !8160, file: !3, line: 1192, type: !370)
!8168 = !DILocation(line: 1192, column: 27, scope: !8160)
!8169 = !DILocalVariable(name: "req", scope: !8160, file: !3, line: 1194, type: !6128)
!8170 = !DILocation(line: 1194, column: 38, scope: !8160)
!8171 = !DILocation(line: 1196, column: 6, scope: !8172)
!8172 = distinct !DILexicalBlock(scope: !8160, file: !3, line: 1196, column: 6)
!8173 = !DILocation(line: 1196, column: 6, scope: !8160)
!8174 = !DILocation(line: 1197, column: 7, scope: !8172)
!8175 = !DILocation(line: 1197, column: 16, scope: !8172)
!8176 = !DILocation(line: 1197, column: 3, scope: !8172)
!8177 = !DILocation(line: 1199, column: 7, scope: !8172)
!8178 = !DILocation(line: 1199, column: 16, scope: !8172)
!8179 = !DILocation(line: 1201, column: 31, scope: !8160)
!8180 = !DILocation(line: 1201, column: 6, scope: !8160)
!8181 = !DILocation(line: 1201, column: 8, scope: !8160)
!8182 = !DILocation(line: 1201, column: 17, scope: !8160)
!8183 = !DILocation(line: 1201, column: 29, scope: !8160)
!8184 = !DILocation(line: 1202, column: 35, scope: !8160)
!8185 = !DILocation(line: 1202, column: 2, scope: !8160)
!8186 = !DILocation(line: 1203, column: 2, scope: !8160)
!8187 = !DILocation(line: 1203, column: 7, scope: !8160)
!8188 = !DILocation(line: 1203, column: 16, scope: !8160)
!8189 = !DILocation(line: 1204, column: 1, scope: !8160)
!8190 = distinct !DISubprogram(name: "drm_dp_queue_down_tx", scope: !3, file: !3, line: 2922, type: !8191, scopeLine: 2924, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{null, !406, !6003}
!8193 = !DILocalVariable(name: "mgr", arg: 1, scope: !8190, file: !3, line: 2922, type: !406)
!8194 = !DILocation(line: 2922, column: 66, scope: !8190)
!8195 = !DILocalVariable(name: "txmsg", arg: 2, scope: !8190, file: !3, line: 2923, type: !6003)
!8196 = !DILocation(line: 2923, column: 37, scope: !8190)
!8197 = !DILocation(line: 2925, column: 14, scope: !8190)
!8198 = !DILocation(line: 2925, column: 19, scope: !8190)
!8199 = !DILocation(line: 2925, column: 2, scope: !8190)
!8200 = !DILocation(line: 2926, column: 17, scope: !8190)
!8201 = !DILocation(line: 2926, column: 24, scope: !8190)
!8202 = !DILocation(line: 2926, column: 31, scope: !8190)
!8203 = !DILocation(line: 2926, column: 36, scope: !8190)
!8204 = !DILocation(line: 2926, column: 2, scope: !8190)
!8205 = !DILocation(line: 2928, column: 6, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 2928, column: 6)
!8207 = !DILocation(line: 2928, column: 6, scope: !8190)
!8208 = !DILocalVariable(name: "p", scope: !8209, file: !3, line: 2929, type: !5122)
!8209 = distinct !DILexicalBlock(scope: !8206, file: !3, line: 2928, column: 36)
!8210 = !DILocation(line: 2929, column: 22, scope: !8209)
!8211 = !DILocation(line: 2929, column: 26, scope: !8209)
!8212 = !DILocation(line: 2931, column: 39, scope: !8209)
!8213 = !DILocation(line: 2931, column: 3, scope: !8209)
!8214 = !DILocation(line: 2932, column: 2, scope: !8209)
!8215 = !DILocation(line: 2934, column: 24, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8190, file: !3, line: 2934, column: 6)
!8217 = !DILocation(line: 2934, column: 29, scope: !8216)
!8218 = !DILocation(line: 2934, column: 6, scope: !8216)
!8219 = !DILocation(line: 2934, column: 6, scope: !8190)
!8220 = !DILocation(line: 2935, column: 32, scope: !8216)
!8221 = !DILocation(line: 2935, column: 3, scope: !8216)
!8222 = !DILocation(line: 2936, column: 16, scope: !8190)
!8223 = !DILocation(line: 2936, column: 21, scope: !8190)
!8224 = !DILocation(line: 2936, column: 2, scope: !8190)
!8225 = !DILocation(line: 2937, column: 1, scope: !8190)
!8226 = distinct !DISubprogram(name: "drm_dp_mst_wait_tx_reply", scope: !3, file: !3, line: 1291, type: !8227, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8227 = !DISubroutineType(types: !8228)
!8228 = !{!115, !391, !6003}
!8229 = !DILocalVariable(name: "m", arg: 1, scope: !8230, file: !8231, line: 363, type: !2156)
!8230 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !8231, file: !8231, line: 363, type: !8232, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8231 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!8232 = !DISubroutineType(types: !8233)
!8233 = !{!341, !2156}
!8234 = !DILocation(line: 363, column: 74, scope: !8230, inlinedAt: !8235)
!8235 = distinct !DILocation(line: 1313, column: 9, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 1313, column: 9)
!8237 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 1313, column: 9)
!8238 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 1313, column: 9)
!8239 = distinct !DILexicalBlock(scope: !8240, file: !3, line: 1299, column: 11)
!8240 = distinct !DILexicalBlock(scope: !8241, file: !3, line: 1299, column: 2)
!8241 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 1299, column: 2)
!8242 = !DILocation(line: 363, column: 74, scope: !8230, inlinedAt: !8243)
!8243 = distinct !DILocation(line: 1313, column: 9, scope: !8238)
!8244 = !DILocation(line: 363, column: 74, scope: !8230, inlinedAt: !8245)
!8245 = distinct !DILocation(line: 1295, column: 31, scope: !8226)
!8246 = !DILocalVariable(name: "mstb", arg: 1, scope: !8226, file: !3, line: 1291, type: !391)
!8247 = !DILocation(line: 1291, column: 63, scope: !8226)
!8248 = !DILocalVariable(name: "txmsg", arg: 2, scope: !8226, file: !3, line: 1292, type: !6003)
!8249 = !DILocation(line: 1292, column: 40, scope: !8226)
!8250 = !DILocalVariable(name: "mgr", scope: !8226, file: !3, line: 1294, type: !406)
!8251 = !DILocation(line: 1294, column: 34, scope: !8226)
!8252 = !DILocation(line: 1294, column: 40, scope: !8226)
!8253 = !DILocation(line: 1294, column: 46, scope: !8226)
!8254 = !DILocalVariable(name: "wait_timeout", scope: !8226, file: !3, line: 1295, type: !341)
!8255 = !DILocation(line: 1295, column: 16, scope: !8226)
!8256 = !DILocation(line: 365, column: 27, scope: !8257, inlinedAt: !8245)
!8257 = distinct !DILexicalBlock(scope: !8230, file: !8231, line: 365, column: 6)
!8258 = !DILocation(line: 365, column: 6, scope: !8257, inlinedAt: !8245)
!8259 = !DILocation(line: 365, column: 6, scope: !8230, inlinedAt: !8245)
!8260 = !DILocation(line: 366, column: 12, scope: !8261, inlinedAt: !8245)
!8261 = distinct !DILexicalBlock(scope: !8262, file: !8231, line: 366, column: 7)
!8262 = distinct !DILexicalBlock(scope: !8257, file: !8231, line: 365, column: 31)
!8263 = !DILocation(line: 366, column: 14, scope: !8261, inlinedAt: !8245)
!8264 = !DILocation(line: 366, column: 7, scope: !8262, inlinedAt: !8245)
!8265 = !DILocation(line: 367, column: 4, scope: !8261, inlinedAt: !8245)
!8266 = !DILocation(line: 368, column: 28, scope: !8262, inlinedAt: !8245)
!8267 = !DILocation(line: 368, column: 10, scope: !8262, inlinedAt: !8245)
!8268 = !DILocation(line: 368, column: 3, scope: !8262, inlinedAt: !8245)
!8269 = !DILocation(line: 370, column: 29, scope: !8270, inlinedAt: !8245)
!8270 = distinct !DILexicalBlock(scope: !8257, file: !8231, line: 369, column: 9)
!8271 = !DILocation(line: 370, column: 10, scope: !8270, inlinedAt: !8245)
!8272 = !DILocation(line: 370, column: 3, scope: !8270, inlinedAt: !8245)
!8273 = !DILocation(line: 372, column: 1, scope: !8230, inlinedAt: !8245)
!8274 = !DILocalVariable(name: "wait_expires", scope: !8226, file: !3, line: 1296, type: !341)
!8275 = !DILocation(line: 1296, column: 16, scope: !8226)
!8276 = !DILocation(line: 1296, column: 31, scope: !8226)
!8277 = !DILocation(line: 1296, column: 41, scope: !8226)
!8278 = !DILocation(line: 1296, column: 39, scope: !8226)
!8279 = !DILocalVariable(name: "ret", scope: !8226, file: !3, line: 1297, type: !115)
!8280 = !DILocation(line: 1297, column: 6, scope: !8226)
!8281 = !DILocation(line: 1299, column: 2, scope: !8226)
!8282 = !DILocalVariable(name: "__ret", scope: !8238, file: !3, line: 1313, type: !279)
!8283 = !DILocation(line: 1313, column: 9, scope: !8238)
!8284 = !DILocation(line: 365, column: 27, scope: !8257, inlinedAt: !8243)
!8285 = !DILocation(line: 365, column: 6, scope: !8257, inlinedAt: !8243)
!8286 = !DILocation(line: 365, column: 6, scope: !8230, inlinedAt: !8243)
!8287 = !DILocation(line: 366, column: 12, scope: !8261, inlinedAt: !8243)
!8288 = !DILocation(line: 366, column: 14, scope: !8261, inlinedAt: !8243)
!8289 = !DILocation(line: 366, column: 7, scope: !8262, inlinedAt: !8243)
!8290 = !DILocation(line: 367, column: 4, scope: !8261, inlinedAt: !8243)
!8291 = !DILocation(line: 368, column: 28, scope: !8262, inlinedAt: !8243)
!8292 = !DILocation(line: 368, column: 10, scope: !8262, inlinedAt: !8243)
!8293 = !DILocation(line: 368, column: 3, scope: !8262, inlinedAt: !8243)
!8294 = !DILocation(line: 370, column: 29, scope: !8270, inlinedAt: !8243)
!8295 = !DILocation(line: 370, column: 10, scope: !8270, inlinedAt: !8243)
!8296 = !DILocation(line: 370, column: 3, scope: !8270, inlinedAt: !8243)
!8297 = !DILocation(line: 372, column: 1, scope: !8230, inlinedAt: !8243)
!8298 = !DILocation(line: 1313, column: 9, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8238, file: !3, line: 1313, column: 9)
!8300 = !DILocation(line: 1313, column: 9, scope: !8301)
!8301 = distinct !DILexicalBlock(scope: !8299, file: !3, line: 1313, column: 9)
!8302 = !DILocalVariable(name: "__cond", scope: !8303, file: !3, line: 1313, type: !370)
!8303 = distinct !DILexicalBlock(scope: !8237, file: !3, line: 1313, column: 9)
!8304 = !DILocation(line: 1313, column: 9, scope: !8303)
!8305 = !DILocation(line: 1313, column: 9, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 1313, column: 9)
!8307 = !DILocation(line: 1313, column: 9, scope: !8237)
!8308 = !DILocalVariable(name: "__wq_entry", scope: !8236, file: !3, line: 1313, type: !8309)
!8309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_entry", file: !1202, line: 29, size: 320, elements: !8310)
!8310 = !{!8311, !8312, !8313, !8319}
!8311 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !8309, file: !1202, line: 30, baseType: !7, size: 32)
!8312 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !8309, file: !1202, line: 31, baseType: !344, size: 64, offset: 64)
!8313 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !8309, file: !1202, line: 32, baseType: !8314, size: 64, offset: 128)
!8314 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_func_t", file: !1202, line: 16, baseType: !8315)
!8315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8316, size: 64)
!8316 = !DISubroutineType(types: !8317)
!8317 = !{!115, !8318, !7, !115, !344}
!8318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8309, size: 64)
!8319 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !8309, file: !1202, line: 33, baseType: !385, size: 128, offset: 192)
!8320 = !DILocation(line: 1313, column: 9, scope: !8236)
!8321 = !DILocalVariable(name: "__ret", scope: !8236, file: !3, line: 1313, type: !279)
!8322 = !DILocation(line: 365, column: 27, scope: !8257, inlinedAt: !8235)
!8323 = !DILocation(line: 365, column: 6, scope: !8257, inlinedAt: !8235)
!8324 = !DILocation(line: 365, column: 6, scope: !8230, inlinedAt: !8235)
!8325 = !DILocation(line: 366, column: 12, scope: !8261, inlinedAt: !8235)
!8326 = !DILocation(line: 366, column: 14, scope: !8261, inlinedAt: !8235)
!8327 = !DILocation(line: 366, column: 7, scope: !8262, inlinedAt: !8235)
!8328 = !DILocation(line: 367, column: 4, scope: !8261, inlinedAt: !8235)
!8329 = !DILocation(line: 368, column: 28, scope: !8262, inlinedAt: !8235)
!8330 = !DILocation(line: 368, column: 10, scope: !8262, inlinedAt: !8235)
!8331 = !DILocation(line: 368, column: 3, scope: !8262, inlinedAt: !8235)
!8332 = !DILocation(line: 370, column: 29, scope: !8270, inlinedAt: !8235)
!8333 = !DILocation(line: 370, column: 10, scope: !8270, inlinedAt: !8235)
!8334 = !DILocation(line: 370, column: 3, scope: !8270, inlinedAt: !8235)
!8335 = !DILocation(line: 372, column: 1, scope: !8230, inlinedAt: !8235)
!8336 = !DILocalVariable(name: "__int", scope: !8337, file: !3, line: 1313, type: !279)
!8337 = distinct !DILexicalBlock(scope: !8338, file: !3, line: 1313, column: 9)
!8338 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 1313, column: 9)
!8339 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 1313, column: 9)
!8340 = !DILocation(line: 1313, column: 9, scope: !8337)
!8341 = !DILocalVariable(name: "__cond", scope: !8342, file: !3, line: 1313, type: !370)
!8342 = distinct !DILexicalBlock(scope: !8343, file: !3, line: 1313, column: 9)
!8343 = distinct !DILexicalBlock(scope: !8337, file: !3, line: 1313, column: 9)
!8344 = !DILocation(line: 1313, column: 9, scope: !8342)
!8345 = !DILocation(line: 1313, column: 9, scope: !8346)
!8346 = distinct !DILexicalBlock(scope: !8342, file: !3, line: 1313, column: 9)
!8347 = !DILocation(line: 1313, column: 9, scope: !8343)
!8348 = !DILocation(line: 1313, column: 9, scope: !8338)
!8349 = distinct !{!8349, !8350, !8350}
!8350 = !DILocation(line: 1313, column: 9, scope: !8339)
!8351 = !DILabel(scope: !8236, name: "__out", file: !3, line: 1313)
!8352 = !DILocation(line: 1313, column: 9, scope: !8239)
!8353 = !DILocation(line: 1313, column: 7, scope: !8239)
!8354 = !DILocation(line: 1319, column: 7, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8239, file: !3, line: 1319, column: 7)
!8356 = !DILocation(line: 1319, column: 11, scope: !8355)
!8357 = !DILocation(line: 1319, column: 15, scope: !8355)
!8358 = !DILocation(line: 1319, column: 20, scope: !8355)
!8359 = !DILocation(line: 1319, column: 25, scope: !8355)
!8360 = !DILocation(line: 1319, column: 38, scope: !8355)
!8361 = !DILocation(line: 1320, column: 7, scope: !8355)
!8362 = !DILocation(line: 1319, column: 7, scope: !8239)
!8363 = !DILocation(line: 1321, column: 4, scope: !8355)
!8364 = !DILocation(line: 1323, column: 3, scope: !8239)
!8365 = !DILocation(line: 1323, column: 8, scope: !8239)
!8366 = !DILocation(line: 1323, column: 13, scope: !8239)
!8367 = !DILocation(line: 1323, column: 26, scope: !8239)
!8368 = !DILocation(line: 1299, column: 2, scope: !8240)
!8369 = distinct !{!8369, !8370, !8371}
!8370 = !DILocation(line: 1299, column: 2, scope: !8241)
!8371 = !DILocation(line: 1324, column: 2, scope: !8241)
!8372 = !DILocation(line: 1326, column: 14, scope: !8226)
!8373 = !DILocation(line: 1326, column: 19, scope: !8226)
!8374 = !DILocation(line: 1326, column: 2, scope: !8226)
!8375 = !DILocation(line: 1327, column: 6, scope: !8376)
!8376 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 1327, column: 6)
!8377 = !DILocation(line: 1327, column: 10, scope: !8376)
!8378 = !DILocation(line: 1327, column: 6, scope: !8226)
!8379 = !DILocation(line: 1328, column: 7, scope: !8380)
!8380 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 1328, column: 7)
!8381 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 1327, column: 15)
!8382 = !DILocation(line: 1328, column: 14, scope: !8380)
!8383 = !DILocation(line: 1328, column: 20, scope: !8380)
!8384 = !DILocation(line: 1328, column: 7, scope: !8381)
!8385 = !DILocation(line: 1329, column: 8, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8380, file: !3, line: 1328, column: 51)
!8387 = !DILocation(line: 1330, column: 4, scope: !8386)
!8388 = !DILocation(line: 1332, column: 2, scope: !8381)
!8389 = !DILocation(line: 1333, column: 3, scope: !8390)
!8390 = distinct !DILexicalBlock(scope: !8376, file: !3, line: 1332, column: 9)
!8391 = !DILocation(line: 1336, column: 7, scope: !8390)
!8392 = !DILocation(line: 1339, column: 7, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8390, file: !3, line: 1339, column: 7)
!8394 = !DILocation(line: 1339, column: 14, scope: !8393)
!8395 = !DILocation(line: 1339, column: 20, scope: !8393)
!8396 = !DILocation(line: 1339, column: 49, scope: !8393)
!8397 = !DILocation(line: 1340, column: 7, scope: !8393)
!8398 = !DILocation(line: 1340, column: 14, scope: !8393)
!8399 = !DILocation(line: 1340, column: 20, scope: !8393)
!8400 = !DILocation(line: 1340, column: 53, scope: !8393)
!8401 = !DILocation(line: 1341, column: 7, scope: !8393)
!8402 = !DILocation(line: 1341, column: 14, scope: !8393)
!8403 = !DILocation(line: 1341, column: 20, scope: !8393)
!8404 = !DILocation(line: 1339, column: 7, scope: !8390)
!8405 = !DILocation(line: 1342, column: 14, scope: !8393)
!8406 = !DILocation(line: 1342, column: 21, scope: !8393)
!8407 = !DILocation(line: 1342, column: 4, scope: !8393)
!8408 = !DILocation(line: 1327, column: 12, scope: !8376)
!8409 = !DILabel(scope: !8226, name: "out", file: !3, line: 1344)
!8410 = !DILocation(line: 1344, column: 1, scope: !8226)
!8411 = !DILocation(line: 1345, column: 6, scope: !8412)
!8412 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 1345, column: 6)
!8413 = !DILocation(line: 1345, column: 28, scope: !8412)
!8414 = !DILocation(line: 1345, column: 31, scope: !8412)
!8415 = !DILocation(line: 1345, column: 6, scope: !8226)
!8416 = !DILocalVariable(name: "p", scope: !8417, file: !3, line: 1346, type: !5122)
!8417 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 1345, column: 61)
!8418 = !DILocation(line: 1346, column: 22, scope: !8417)
!8419 = !DILocation(line: 1346, column: 26, scope: !8417)
!8420 = !DILocation(line: 1348, column: 39, scope: !8417)
!8421 = !DILocation(line: 1348, column: 3, scope: !8417)
!8422 = !DILocation(line: 1349, column: 2, scope: !8417)
!8423 = !DILocation(line: 1350, column: 16, scope: !8226)
!8424 = !DILocation(line: 1350, column: 21, scope: !8226)
!8425 = !DILocation(line: 1350, column: 2, scope: !8226)
!8426 = !DILocation(line: 1352, column: 21, scope: !8226)
!8427 = !DILocation(line: 1352, column: 2, scope: !8226)
!8428 = !DILocation(line: 1353, column: 9, scope: !8226)
!8429 = !DILocation(line: 1353, column: 2, scope: !8226)
!8430 = distinct !DISubprogram(name: "drm_dp_send_query_stream_enc_status", scope: !3, file: !3, line: 3257, type: !8431, scopeLine: 3260, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8431 = !DISubroutineType(types: !8432)
!8432 = !{!115, !406, !345, !8433}
!8433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6106, size: 64)
!8434 = !DILocalVariable(name: "mgr", arg: 1, scope: !8430, file: !3, line: 3257, type: !406)
!8435 = !DILocation(line: 3257, column: 73, scope: !8430)
!8436 = !DILocalVariable(name: "port", arg: 2, scope: !8430, file: !3, line: 3258, type: !345)
!8437 = !DILocation(line: 3258, column: 27, scope: !8430)
!8438 = !DILocalVariable(name: "status", arg: 3, scope: !8430, file: !3, line: 3259, type: !8433)
!8439 = !DILocation(line: 3259, column: 52, scope: !8430)
!8440 = !DILocalVariable(name: "txmsg", scope: !8430, file: !3, line: 3261, type: !6003)
!8441 = !DILocation(line: 3261, column: 33, scope: !8430)
!8442 = !DILocalVariable(name: "nonce", scope: !8430, file: !3, line: 3262, type: !6209)
!8443 = !DILocation(line: 3262, column: 5, scope: !8430)
!8444 = !DILocalVariable(name: "len", scope: !8430, file: !3, line: 3263, type: !115)
!8445 = !DILocation(line: 3263, column: 6, scope: !8430)
!8446 = !DILocalVariable(name: "ret", scope: !8430, file: !3, line: 3263, type: !115)
!8447 = !DILocation(line: 3263, column: 11, scope: !8430)
!8448 = !DILocation(line: 3265, column: 10, scope: !8430)
!8449 = !DILocation(line: 3265, column: 8, scope: !8430)
!8450 = !DILocation(line: 3266, column: 7, scope: !8451)
!8451 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 3266, column: 6)
!8452 = !DILocation(line: 3266, column: 6, scope: !8430)
!8453 = !DILocation(line: 3267, column: 3, scope: !8451)
!8454 = !DILocation(line: 3269, column: 48, scope: !8430)
!8455 = !DILocation(line: 3269, column: 53, scope: !8430)
!8456 = !DILocation(line: 3269, column: 9, scope: !8430)
!8457 = !DILocation(line: 3269, column: 7, scope: !8430)
!8458 = !DILocation(line: 3270, column: 7, scope: !8459)
!8459 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 3270, column: 6)
!8460 = !DILocation(line: 3270, column: 6, scope: !8430)
!8461 = !DILocation(line: 3271, column: 7, scope: !8462)
!8462 = distinct !DILexicalBlock(scope: !8459, file: !3, line: 3270, column: 13)
!8463 = !DILocation(line: 3272, column: 3, scope: !8462)
!8464 = !DILocation(line: 3275, column: 19, scope: !8430)
!8465 = !DILocation(line: 3275, column: 2, scope: !8430)
!8466 = !DILocation(line: 3282, column: 15, scope: !8430)
!8467 = !DILocation(line: 3282, column: 20, scope: !8430)
!8468 = !DILocation(line: 3282, column: 2, scope: !8430)
!8469 = !DILocation(line: 3282, column: 9, scope: !8430)
!8470 = !DILocation(line: 3282, column: 13, scope: !8430)
!8471 = !DILocation(line: 3284, column: 38, scope: !8430)
!8472 = !DILocation(line: 3284, column: 45, scope: !8430)
!8473 = !DILocation(line: 3284, column: 51, scope: !8430)
!8474 = !DILocation(line: 3284, column: 56, scope: !8430)
!8475 = !DILocation(line: 3284, column: 62, scope: !8430)
!8476 = !DILocation(line: 3284, column: 8, scope: !8430)
!8477 = !DILocation(line: 3284, column: 6, scope: !8430)
!8478 = !DILocation(line: 3286, column: 23, scope: !8430)
!8479 = !DILocation(line: 3286, column: 28, scope: !8430)
!8480 = !DILocation(line: 3286, column: 2, scope: !8430)
!8481 = !DILocation(line: 3288, column: 33, scope: !8430)
!8482 = !DILocation(line: 3288, column: 38, scope: !8430)
!8483 = !DILocation(line: 3288, column: 51, scope: !8430)
!8484 = !DILocation(line: 3288, column: 8, scope: !8430)
!8485 = !DILocation(line: 3288, column: 6, scope: !8430)
!8486 = !DILocation(line: 3289, column: 6, scope: !8487)
!8487 = distinct !DILexicalBlock(scope: !8430, file: !3, line: 3289, column: 6)
!8488 = !DILocation(line: 3289, column: 10, scope: !8487)
!8489 = !DILocation(line: 3289, column: 6, scope: !8430)
!8490 = !DILocation(line: 3290, column: 3, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 3289, column: 15)
!8492 = !DILocation(line: 3291, column: 13, scope: !8493)
!8493 = distinct !DILexicalBlock(scope: !8487, file: !3, line: 3291, column: 13)
!8494 = !DILocation(line: 3291, column: 20, scope: !8493)
!8495 = !DILocation(line: 3291, column: 26, scope: !8493)
!8496 = !DILocation(line: 3291, column: 37, scope: !8493)
!8497 = !DILocation(line: 3291, column: 13, scope: !8487)
!8498 = !DILocation(line: 3292, column: 3, scope: !8499)
!8499 = distinct !DILexicalBlock(scope: !8493, file: !3, line: 3291, column: 63)
!8500 = !DILocation(line: 3293, column: 7, scope: !8499)
!8501 = !DILocation(line: 3294, column: 3, scope: !8499)
!8502 = !DILocation(line: 3297, column: 6, scope: !8430)
!8503 = !DILocation(line: 3298, column: 9, scope: !8430)
!8504 = !DILocation(line: 3298, column: 2, scope: !8430)
!8505 = !DILocation(line: 3298, column: 18, scope: !8430)
!8506 = !DILocation(line: 3298, column: 25, scope: !8430)
!8507 = !DILocation(line: 3298, column: 31, scope: !8430)
!8508 = !DILocation(line: 3298, column: 33, scope: !8430)
!8509 = !DILabel(scope: !8430, name: "out", file: !3, line: 3300)
!8510 = !DILocation(line: 3300, column: 1, scope: !8430)
!8511 = !DILocation(line: 3301, column: 31, scope: !8430)
!8512 = !DILocation(line: 3301, column: 2, scope: !8430)
!8513 = !DILabel(scope: !8430, name: "out_get_port", file: !3, line: 3302)
!8514 = !DILocation(line: 3302, column: 1, scope: !8430)
!8515 = !DILocation(line: 3303, column: 8, scope: !8430)
!8516 = !DILocation(line: 3303, column: 2, scope: !8430)
!8517 = !DILocation(line: 3304, column: 9, scope: !8430)
!8518 = !DILocation(line: 3304, column: 2, scope: !8430)
!8519 = !DILocation(line: 3305, column: 1, scope: !8430)
!8520 = distinct !DISubprogram(name: "build_query_stream_enc_status", scope: !3, file: !3, line: 1207, type: !8521, scopeLine: 1209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8521 = !DISubroutineType(types: !8522)
!8522 = !{!115, !6003, !364, !6180}
!8523 = !DILocalVariable(name: "msg", arg: 1, scope: !8520, file: !3, line: 1207, type: !6003)
!8524 = !DILocation(line: 1207, column: 62, scope: !8520)
!8525 = !DILocalVariable(name: "stream_id", arg: 2, scope: !8520, file: !3, line: 1207, type: !364)
!8526 = !DILocation(line: 1207, column: 70, scope: !8520)
!8527 = !DILocalVariable(name: "q_id", arg: 3, scope: !8520, file: !3, line: 1208, type: !6180)
!8528 = !DILocation(line: 1208, column: 14, scope: !8520)
!8529 = !DILocalVariable(name: "req", scope: !8520, file: !3, line: 1210, type: !6128)
!8530 = !DILocation(line: 1210, column: 38, scope: !8520)
!8531 = !DILocation(line: 1212, column: 6, scope: !8520)
!8532 = !DILocation(line: 1212, column: 15, scope: !8520)
!8533 = !DILocation(line: 1213, column: 31, scope: !8520)
!8534 = !DILocation(line: 1213, column: 6, scope: !8520)
!8535 = !DILocation(line: 1213, column: 8, scope: !8520)
!8536 = !DILocation(line: 1213, column: 19, scope: !8520)
!8537 = !DILocation(line: 1213, column: 29, scope: !8520)
!8538 = !DILocation(line: 1214, column: 13, scope: !8520)
!8539 = !DILocation(line: 1214, column: 15, scope: !8520)
!8540 = !DILocation(line: 1214, column: 26, scope: !8520)
!8541 = !DILocation(line: 1214, column: 2, scope: !8520)
!8542 = !DILocation(line: 1214, column: 37, scope: !8520)
!8543 = !DILocation(line: 1216, column: 6, scope: !8520)
!8544 = !DILocation(line: 1216, column: 8, scope: !8520)
!8545 = !DILocation(line: 1216, column: 19, scope: !8520)
!8546 = !DILocation(line: 1216, column: 32, scope: !8520)
!8547 = !DILocation(line: 1217, column: 6, scope: !8520)
!8548 = !DILocation(line: 1217, column: 8, scope: !8520)
!8549 = !DILocation(line: 1217, column: 19, scope: !8520)
!8550 = !DILocation(line: 1217, column: 38, scope: !8520)
!8551 = !DILocation(line: 1218, column: 6, scope: !8520)
!8552 = !DILocation(line: 1218, column: 8, scope: !8520)
!8553 = !DILocation(line: 1218, column: 19, scope: !8520)
!8554 = !DILocation(line: 1218, column: 35, scope: !8520)
!8555 = !DILocation(line: 1219, column: 6, scope: !8520)
!8556 = !DILocation(line: 1219, column: 8, scope: !8520)
!8557 = !DILocation(line: 1219, column: 19, scope: !8520)
!8558 = !DILocation(line: 1219, column: 41, scope: !8520)
!8559 = !DILocation(line: 1221, column: 35, scope: !8520)
!8560 = !DILocation(line: 1221, column: 2, scope: !8520)
!8561 = !DILocation(line: 1222, column: 2, scope: !8520)
!8562 = distinct !DISubprogram(name: "drm_dp_update_payload_part1", scope: !3, file: !3, line: 3374, type: !8563, scopeLine: 3375, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8563 = !DISubroutineType(types: !8564)
!8564 = !{!115, !406}
!8565 = !DILocalVariable(name: "mgr", arg: 1, scope: !8562, file: !3, line: 3374, type: !406)
!8566 = !DILocation(line: 3374, column: 65, scope: !8562)
!8567 = !DILocalVariable(name: "req_payload", scope: !8562, file: !3, line: 3376, type: !5818)
!8568 = !DILocation(line: 3376, column: 24, scope: !8562)
!8569 = !DILocalVariable(name: "port", scope: !8562, file: !3, line: 3377, type: !345)
!8570 = !DILocation(line: 3377, column: 26, scope: !8562)
!8571 = !DILocalVariable(name: "i", scope: !8562, file: !3, line: 3378, type: !115)
!8572 = !DILocation(line: 3378, column: 6, scope: !8562)
!8573 = !DILocalVariable(name: "j", scope: !8562, file: !3, line: 3378, type: !115)
!8574 = !DILocation(line: 3378, column: 9, scope: !8562)
!8575 = !DILocalVariable(name: "cur_slots", scope: !8562, file: !3, line: 3379, type: !115)
!8576 = !DILocation(line: 3379, column: 6, scope: !8562)
!8577 = !DILocation(line: 3381, column: 14, scope: !8562)
!8578 = !DILocation(line: 3381, column: 19, scope: !8562)
!8579 = !DILocation(line: 3381, column: 2, scope: !8562)
!8580 = !DILocation(line: 3382, column: 9, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 3382, column: 2)
!8582 = !DILocation(line: 3382, column: 7, scope: !8581)
!8583 = !DILocation(line: 3382, column: 14, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 3382, column: 2)
!8585 = !DILocation(line: 3382, column: 18, scope: !8584)
!8586 = !DILocation(line: 3382, column: 23, scope: !8584)
!8587 = !DILocation(line: 3382, column: 16, scope: !8584)
!8588 = !DILocation(line: 3382, column: 2, scope: !8581)
!8589 = !DILocalVariable(name: "vcpi", scope: !8590, file: !3, line: 3383, type: !5809)
!8590 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 3382, column: 42)
!8591 = !DILocation(line: 3383, column: 23, scope: !8590)
!8592 = !DILocation(line: 3383, column: 30, scope: !8590)
!8593 = !DILocation(line: 3383, column: 35, scope: !8590)
!8594 = !DILocation(line: 3383, column: 50, scope: !8590)
!8595 = !DILocalVariable(name: "payload", scope: !8590, file: !3, line: 3384, type: !5817)
!8596 = !DILocation(line: 3384, column: 26, scope: !8590)
!8597 = !DILocation(line: 3384, column: 37, scope: !8590)
!8598 = !DILocation(line: 3384, column: 42, scope: !8590)
!8599 = !DILocation(line: 3384, column: 51, scope: !8590)
!8600 = !DILocalVariable(name: "put_port", scope: !8590, file: !3, line: 3385, type: !370)
!8601 = !DILocation(line: 3385, column: 8, scope: !8590)
!8602 = !DILocation(line: 3389, column: 28, scope: !8590)
!8603 = !DILocation(line: 3389, column: 15, scope: !8590)
!8604 = !DILocation(line: 3389, column: 26, scope: !8590)
!8605 = !DILocation(line: 3390, column: 7, scope: !8606)
!8606 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 3390, column: 7)
!8607 = !DILocation(line: 3390, column: 7, scope: !8590)
!8608 = !DILocalVariable(name: "__mptr", scope: !8609, file: !3, line: 3391, type: !344)
!8609 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 3391, column: 11)
!8610 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 3390, column: 13)
!8611 = !DILocation(line: 3391, column: 11, scope: !8609)
!8612 = !DILocation(line: 3391, column: 11, scope: !8613)
!8613 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 3391, column: 11)
!8614 = !DILocation(line: 3391, column: 9, scope: !8610)
!8615 = !DILocation(line: 3397, column: 8, scope: !8616)
!8616 = distinct !DILexicalBlock(scope: !8610, file: !3, line: 3397, column: 8)
!8617 = !DILocation(line: 3397, column: 14, scope: !8616)
!8618 = !DILocation(line: 3397, column: 8, scope: !8610)
!8619 = !DILocation(line: 3399, column: 9, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8616, file: !3, line: 3397, column: 25)
!8621 = !DILocation(line: 3399, column: 14, scope: !8620)
!8622 = !DILocation(line: 3398, column: 12, scope: !8620)
!8623 = !DILocation(line: 3398, column: 10, scope: !8620)
!8624 = !DILocation(line: 3400, column: 10, scope: !8625)
!8625 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 3400, column: 9)
!8626 = !DILocation(line: 3400, column: 9, scope: !8620)
!8627 = !DILocation(line: 3401, column: 20, scope: !8628)
!8628 = distinct !DILexicalBlock(scope: !8625, file: !3, line: 3400, column: 16)
!8629 = !DILocation(line: 3401, column: 25, scope: !8628)
!8630 = !DILocation(line: 3401, column: 6, scope: !8628)
!8631 = !DILocation(line: 3402, column: 6, scope: !8628)
!8632 = !DILocation(line: 3404, column: 14, scope: !8620)
!8633 = !DILocation(line: 3405, column: 4, scope: !8620)
!8634 = !DILocation(line: 3407, column: 28, scope: !8610)
!8635 = !DILocation(line: 3407, column: 34, scope: !8610)
!8636 = !DILocation(line: 3407, column: 16, scope: !8610)
!8637 = !DILocation(line: 3407, column: 26, scope: !8610)
!8638 = !DILocation(line: 3408, column: 23, scope: !8610)
!8639 = !DILocation(line: 3408, column: 29, scope: !8610)
!8640 = !DILocation(line: 3408, column: 16, scope: !8610)
!8641 = !DILocation(line: 3408, column: 21, scope: !8610)
!8642 = !DILocation(line: 3409, column: 3, scope: !8610)
!8643 = !DILocation(line: 3410, column: 9, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8606, file: !3, line: 3409, column: 10)
!8645 = !DILocation(line: 3411, column: 16, scope: !8644)
!8646 = !DILocation(line: 3411, column: 26, scope: !8644)
!8647 = !DILocation(line: 3414, column: 37, scope: !8590)
!8648 = !DILocation(line: 3414, column: 3, scope: !8590)
!8649 = !DILocation(line: 3414, column: 12, scope: !8590)
!8650 = !DILocation(line: 3414, column: 23, scope: !8590)
!8651 = !DILocation(line: 3416, column: 7, scope: !8652)
!8652 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 3416, column: 7)
!8653 = !DILocation(line: 3416, column: 16, scope: !8652)
!8654 = !DILocation(line: 3416, column: 41, scope: !8652)
!8655 = !DILocation(line: 3416, column: 26, scope: !8652)
!8656 = !DILocation(line: 3416, column: 7, scope: !8590)
!8657 = !DILocation(line: 3419, column: 20, scope: !8658)
!8658 = distinct !DILexicalBlock(scope: !8659, file: !3, line: 3419, column: 8)
!8659 = distinct !DILexicalBlock(scope: !8652, file: !3, line: 3416, column: 52)
!8660 = !DILocation(line: 3419, column: 8, scope: !8658)
!8661 = !DILocation(line: 3419, column: 8, scope: !8659)
!8662 = !DILocation(line: 3420, column: 33, scope: !8663)
!8663 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 3419, column: 31)
!8664 = !DILocation(line: 3420, column: 38, scope: !8663)
!8665 = !DILocation(line: 3420, column: 44, scope: !8663)
!8666 = !DILocation(line: 3420, column: 5, scope: !8663)
!8667 = !DILocation(line: 3422, column: 38, scope: !8663)
!8668 = !DILocation(line: 3422, column: 5, scope: !8663)
!8669 = !DILocation(line: 3422, column: 14, scope: !8663)
!8670 = !DILocation(line: 3422, column: 24, scope: !8663)
!8671 = !DILocation(line: 3423, column: 33, scope: !8663)
!8672 = !DILocation(line: 3423, column: 5, scope: !8663)
!8673 = !DILocation(line: 3423, column: 14, scope: !8663)
!8674 = !DILocation(line: 3423, column: 19, scope: !8663)
!8675 = !DILocation(line: 3425, column: 4, scope: !8663)
!8676 = !DILocation(line: 3425, column: 15, scope: !8677)
!8677 = distinct !DILexicalBlock(scope: !8658, file: !3, line: 3425, column: 15)
!8678 = !DILocation(line: 3425, column: 24, scope: !8677)
!8679 = !DILocation(line: 3425, column: 15, scope: !8658)
!8680 = !DILocation(line: 3426, column: 5, scope: !8681)
!8681 = distinct !DILexicalBlock(scope: !8677, file: !3, line: 3425, column: 35)
!8682 = !DILocation(line: 3426, column: 14, scope: !8681)
!8683 = !DILocation(line: 3426, column: 24, scope: !8681)
!8684 = !DILocation(line: 3427, column: 34, scope: !8681)
!8685 = !DILocation(line: 3427, column: 39, scope: !8681)
!8686 = !DILocation(line: 3428, column: 13, scope: !8681)
!8687 = !DILocation(line: 3428, column: 22, scope: !8681)
!8688 = !DILocation(line: 3429, column: 13, scope: !8681)
!8689 = !DILocation(line: 3427, column: 5, scope: !8681)
!8690 = !DILocation(line: 3431, column: 6, scope: !8681)
!8691 = !DILocation(line: 3431, column: 15, scope: !8681)
!8692 = !DILocation(line: 3430, column: 17, scope: !8681)
!8693 = !DILocation(line: 3430, column: 31, scope: !8681)
!8694 = !DILocation(line: 3432, column: 5, scope: !8681)
!8695 = !DILocation(line: 3432, column: 14, scope: !8681)
!8696 = !DILocation(line: 3432, column: 25, scope: !8681)
!8697 = !DILocation(line: 3433, column: 4, scope: !8681)
!8698 = !DILocation(line: 3434, column: 41, scope: !8659)
!8699 = !DILocation(line: 3434, column: 4, scope: !8659)
!8700 = !DILocation(line: 3434, column: 13, scope: !8659)
!8701 = !DILocation(line: 3434, column: 27, scope: !8659)
!8702 = !DILocation(line: 3435, column: 3, scope: !8659)
!8703 = !DILocation(line: 3436, column: 28, scope: !8590)
!8704 = !DILocation(line: 3436, column: 13, scope: !8590)
!8705 = !DILocation(line: 3438, column: 7, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 3438, column: 7)
!8707 = !DILocation(line: 3438, column: 7, scope: !8590)
!8708 = !DILocation(line: 3439, column: 33, scope: !8706)
!8709 = !DILocation(line: 3439, column: 4, scope: !8706)
!8710 = !DILocation(line: 3440, column: 2, scope: !8590)
!8711 = !DILocation(line: 3382, column: 38, scope: !8584)
!8712 = !DILocation(line: 3382, column: 2, scope: !8584)
!8713 = distinct !{!8713, !8588, !8714}
!8714 = !DILocation(line: 3440, column: 2, scope: !8581)
!8715 = !DILocation(line: 3442, column: 9, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8562, file: !3, line: 3442, column: 2)
!8717 = !DILocation(line: 3442, column: 7, scope: !8716)
!8718 = !DILocation(line: 3442, column: 14, scope: !8719)
!8719 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 3442, column: 2)
!8720 = !DILocation(line: 3442, column: 18, scope: !8719)
!8721 = !DILocation(line: 3442, column: 23, scope: !8719)
!8722 = !DILocation(line: 3442, column: 16, scope: !8719)
!8723 = !DILocation(line: 3442, column: 2, scope: !8716)
!8724 = !DILocation(line: 3443, column: 7, scope: !8725)
!8725 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 3443, column: 7)
!8726 = distinct !DILexicalBlock(scope: !8719, file: !3, line: 3442, column: 55)
!8727 = !DILocation(line: 3443, column: 12, scope: !8725)
!8728 = !DILocation(line: 3443, column: 21, scope: !8725)
!8729 = !DILocation(line: 3443, column: 24, scope: !8725)
!8730 = !DILocation(line: 3443, column: 38, scope: !8725)
!8731 = !DILocation(line: 3443, column: 7, scope: !8726)
!8732 = !DILocation(line: 3444, column: 5, scope: !8733)
!8733 = distinct !DILexicalBlock(scope: !8725, file: !3, line: 3443, column: 66)
!8734 = !DILocation(line: 3445, column: 4, scope: !8733)
!8735 = distinct !{!8735, !8723, !8736}
!8736 = !DILocation(line: 3465, column: 2, scope: !8716)
!8737 = !DILocation(line: 3448, column: 3, scope: !8726)
!8738 = !DILocation(line: 3449, column: 12, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8726, file: !3, line: 3449, column: 3)
!8740 = !DILocation(line: 3449, column: 10, scope: !8739)
!8741 = !DILocation(line: 3449, column: 8, scope: !8739)
!8742 = !DILocation(line: 3449, column: 15, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8739, file: !3, line: 3449, column: 3)
!8744 = !DILocation(line: 3449, column: 19, scope: !8743)
!8745 = !DILocation(line: 3449, column: 24, scope: !8743)
!8746 = !DILocation(line: 3449, column: 37, scope: !8743)
!8747 = !DILocation(line: 3449, column: 17, scope: !8743)
!8748 = !DILocation(line: 3449, column: 3, scope: !8739)
!8749 = !DILocation(line: 3450, column: 4, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8743, file: !3, line: 3449, column: 47)
!8751 = !DILocation(line: 3450, column: 9, scope: !8750)
!8752 = !DILocation(line: 3450, column: 18, scope: !8750)
!8753 = !DILocation(line: 3450, column: 23, scope: !8750)
!8754 = !DILocation(line: 3450, column: 28, scope: !8750)
!8755 = !DILocation(line: 3450, column: 37, scope: !8750)
!8756 = !DILocation(line: 3450, column: 39, scope: !8750)
!8757 = !DILocation(line: 3451, column: 29, scope: !8750)
!8758 = !DILocation(line: 3451, column: 34, scope: !8750)
!8759 = !DILocation(line: 3451, column: 49, scope: !8750)
!8760 = !DILocation(line: 3451, column: 51, scope: !8750)
!8761 = !DILocation(line: 3451, column: 4, scope: !8750)
!8762 = !DILocation(line: 3451, column: 9, scope: !8750)
!8763 = !DILocation(line: 3451, column: 24, scope: !8750)
!8764 = !DILocation(line: 3451, column: 27, scope: !8750)
!8765 = !DILocation(line: 3453, column: 8, scope: !8766)
!8766 = distinct !DILexicalBlock(scope: !8750, file: !3, line: 3453, column: 8)
!8767 = !DILocation(line: 3453, column: 13, scope: !8766)
!8768 = !DILocation(line: 3453, column: 28, scope: !8766)
!8769 = !DILocation(line: 3453, column: 31, scope: !8766)
!8770 = !DILocation(line: 3454, column: 8, scope: !8766)
!8771 = !DILocation(line: 3454, column: 13, scope: !8766)
!8772 = !DILocation(line: 3454, column: 28, scope: !8766)
!8773 = !DILocation(line: 3454, column: 32, scope: !8766)
!8774 = !DILocation(line: 3453, column: 8, scope: !8750)
!8775 = !DILocation(line: 3455, column: 13, scope: !8776)
!8776 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 3454, column: 43)
!8777 = !DILocation(line: 3455, column: 15, scope: !8776)
!8778 = !DILocation(line: 3455, column: 21, scope: !8776)
!8779 = !DILocation(line: 3455, column: 26, scope: !8776)
!8780 = !DILocation(line: 3455, column: 5, scope: !8776)
!8781 = !DILocation(line: 3456, column: 4, scope: !8776)
!8782 = !DILocation(line: 3457, column: 15, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8766, file: !3, line: 3456, column: 11)
!8784 = !DILocation(line: 3457, column: 17, scope: !8783)
!8785 = !DILocation(line: 3457, column: 23, scope: !8783)
!8786 = !DILocation(line: 3457, column: 28, scope: !8783)
!8787 = !DILocation(line: 3457, column: 5, scope: !8783)
!8788 = !DILocation(line: 3459, column: 3, scope: !8750)
!8789 = !DILocation(line: 3449, column: 43, scope: !8743)
!8790 = !DILocation(line: 3449, column: 3, scope: !8743)
!8791 = distinct !{!8791, !8748, !8792}
!8792 = !DILocation(line: 3459, column: 3, scope: !8739)
!8793 = !DILocation(line: 3461, column: 11, scope: !8726)
!8794 = !DILocation(line: 3461, column: 16, scope: !8726)
!8795 = !DILocation(line: 3461, column: 25, scope: !8726)
!8796 = !DILocation(line: 3461, column: 30, scope: !8726)
!8797 = !DILocation(line: 3461, column: 43, scope: !8726)
!8798 = !DILocation(line: 3461, column: 3, scope: !8726)
!8799 = !DILocation(line: 3463, column: 3, scope: !8726)
!8800 = !DILocation(line: 3463, column: 8, scope: !8726)
!8801 = !DILocation(line: 3463, column: 23, scope: !8726)
!8802 = !DILocation(line: 3463, column: 28, scope: !8726)
!8803 = !DILocation(line: 3463, column: 41, scope: !8726)
!8804 = !DILocation(line: 3463, column: 46, scope: !8726)
!8805 = !DILocation(line: 3464, column: 13, scope: !8726)
!8806 = !DILocation(line: 3464, column: 18, scope: !8726)
!8807 = !DILocation(line: 3464, column: 33, scope: !8726)
!8808 = !DILocation(line: 3464, column: 38, scope: !8726)
!8809 = !DILocation(line: 3464, column: 3, scope: !8726)
!8810 = !DILocation(line: 3442, column: 2, scope: !8719)
!8811 = !DILocation(line: 3466, column: 16, scope: !8562)
!8812 = !DILocation(line: 3466, column: 21, scope: !8562)
!8813 = !DILocation(line: 3466, column: 2, scope: !8562)
!8814 = !DILocation(line: 3468, column: 2, scope: !8562)
!8815 = !DILocation(line: 3469, column: 1, scope: !8562)
!8816 = distinct !DISubprogram(name: "drm_dp_create_payload_step1", scope: !3, file: !3, line: 3308, type: !8817, scopeLine: 3311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8817 = !DISubroutineType(types: !8818)
!8818 = !{!115, !406, !115, !5817}
!8819 = !DILocalVariable(name: "mgr", arg: 1, scope: !8816, file: !3, line: 3308, type: !406)
!8820 = !DILocation(line: 3308, column: 72, scope: !8816)
!8821 = !DILocalVariable(name: "id", arg: 2, scope: !8816, file: !3, line: 3309, type: !115)
!8822 = !DILocation(line: 3309, column: 16, scope: !8816)
!8823 = !DILocalVariable(name: "payload", arg: 3, scope: !8816, file: !3, line: 3310, type: !5817)
!8824 = !DILocation(line: 3310, column: 35, scope: !8816)
!8825 = !DILocalVariable(name: "ret", scope: !8816, file: !3, line: 3312, type: !115)
!8826 = !DILocation(line: 3312, column: 6, scope: !8816)
!8827 = !DILocation(line: 3314, column: 34, scope: !8816)
!8828 = !DILocation(line: 3314, column: 39, scope: !8816)
!8829 = !DILocation(line: 3314, column: 43, scope: !8816)
!8830 = !DILocation(line: 3314, column: 8, scope: !8816)
!8831 = !DILocation(line: 3314, column: 6, scope: !8816)
!8832 = !DILocation(line: 3315, column: 6, scope: !8833)
!8833 = distinct !DILexicalBlock(scope: !8816, file: !3, line: 3315, column: 6)
!8834 = !DILocation(line: 3315, column: 10, scope: !8833)
!8835 = !DILocation(line: 3315, column: 6, scope: !8816)
!8836 = !DILocation(line: 3316, column: 3, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8833, file: !3, line: 3315, column: 15)
!8838 = !DILocation(line: 3316, column: 12, scope: !8837)
!8839 = !DILocation(line: 3316, column: 26, scope: !8837)
!8840 = !DILocation(line: 3317, column: 10, scope: !8837)
!8841 = !DILocation(line: 3317, column: 3, scope: !8837)
!8842 = !DILocation(line: 3319, column: 2, scope: !8816)
!8843 = !DILocation(line: 3319, column: 11, scope: !8816)
!8844 = !DILocation(line: 3319, column: 25, scope: !8816)
!8845 = !DILocation(line: 3320, column: 2, scope: !8816)
!8846 = !DILocation(line: 3321, column: 1, scope: !8816)
!8847 = distinct !DISubprogram(name: "drm_dp_destroy_payload_step1", scope: !3, file: !3, line: 3337, type: !8848, scopeLine: 3341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8848 = !DISubroutineType(types: !8849)
!8849 = !{!115, !406, !345, !115, !5817}
!8850 = !DILocalVariable(name: "mgr", arg: 1, scope: !8847, file: !3, line: 3337, type: !406)
!8851 = !DILocation(line: 3337, column: 73, scope: !8847)
!8852 = !DILocalVariable(name: "port", arg: 2, scope: !8847, file: !3, line: 3338, type: !345)
!8853 = !DILocation(line: 3338, column: 30, scope: !8847)
!8854 = !DILocalVariable(name: "id", arg: 3, scope: !8847, file: !3, line: 3339, type: !115)
!8855 = !DILocation(line: 3339, column: 10, scope: !8847)
!8856 = !DILocalVariable(name: "payload", arg: 4, scope: !8847, file: !3, line: 3340, type: !5817)
!8857 = !DILocation(line: 3340, column: 29, scope: !8847)
!8858 = !DILocation(line: 3342, column: 2, scope: !8847)
!8859 = !DILocation(line: 3344, column: 6, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8847, file: !3, line: 3344, column: 6)
!8861 = !DILocation(line: 3344, column: 6, scope: !8847)
!8862 = !DILocation(line: 3345, column: 27, scope: !8863)
!8863 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 3344, column: 12)
!8864 = !DILocation(line: 3345, column: 32, scope: !8863)
!8865 = !DILocation(line: 3345, column: 38, scope: !8863)
!8866 = !DILocation(line: 3345, column: 3, scope: !8863)
!8867 = !DILocation(line: 3346, column: 2, scope: !8863)
!8868 = !DILocation(line: 3348, column: 28, scope: !8847)
!8869 = !DILocation(line: 3348, column: 33, scope: !8847)
!8870 = !DILocation(line: 3348, column: 37, scope: !8847)
!8871 = !DILocation(line: 3348, column: 2, scope: !8847)
!8872 = !DILocation(line: 3349, column: 2, scope: !8847)
!8873 = !DILocation(line: 3349, column: 11, scope: !8847)
!8874 = !DILocation(line: 3349, column: 25, scope: !8847)
!8875 = !DILocation(line: 3350, column: 2, scope: !8847)
!8876 = distinct !DISubprogram(name: "set_bit", scope: !8877, file: !8877, line: 26, type: !8878, scopeLine: 27, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8877 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!8878 = !DISubroutineType(types: !8879)
!8879 = !{null, !279, !8880}
!8880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8881, size: 64)
!8881 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !341)
!8882 = !DILocalVariable(name: "nr", arg: 1, scope: !8883, file: !8884, line: 52, type: !279)
!8883 = distinct !DISubprogram(name: "arch_set_bit", scope: !8884, file: !8884, line: 52, type: !8878, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8884 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!8885 = !DILocation(line: 52, column: 19, scope: !8883, inlinedAt: !8886)
!8886 = distinct !DILocation(line: 29, column: 2, scope: !8876)
!8887 = !DILocalVariable(name: "addr", arg: 2, scope: !8883, file: !8884, line: 52, type: !8880)
!8888 = !DILocation(line: 52, column: 47, scope: !8883, inlinedAt: !8886)
!8889 = !DILocalVariable(name: "v", arg: 1, scope: !8890, file: !8891, line: 84, type: !8894)
!8890 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !8891, file: !8891, line: 84, type: !8892, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8891 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!8892 = !DISubroutineType(types: !8893)
!8893 = !{null, !8894, !1023}
!8894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8895, size: 64)
!8895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8896)
!8896 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!8897 = !DILocation(line: 84, column: 74, scope: !8890, inlinedAt: !8898)
!8898 = distinct !DILocation(line: 28, column: 2, scope: !8876)
!8899 = !DILocalVariable(name: "size", arg: 2, scope: !8890, file: !8891, line: 84, type: !1023)
!8900 = !DILocation(line: 84, column: 84, scope: !8890, inlinedAt: !8898)
!8901 = !DILocalVariable(name: "nr", arg: 1, scope: !8876, file: !8877, line: 26, type: !279)
!8902 = !DILocation(line: 26, column: 33, scope: !8876)
!8903 = !DILocalVariable(name: "addr", arg: 2, scope: !8876, file: !8877, line: 26, type: !8880)
!8904 = !DILocation(line: 26, column: 61, scope: !8876)
!8905 = !DILocation(line: 28, column: 26, scope: !8876)
!8906 = !DILocation(line: 28, column: 33, scope: !8876)
!8907 = !DILocation(line: 28, column: 31, scope: !8876)
!8908 = !DILocation(line: 86, column: 20, scope: !8890, inlinedAt: !8898)
!8909 = !DILocation(line: 86, column: 23, scope: !8890, inlinedAt: !8898)
!8910 = !DILocation(line: 86, column: 2, scope: !8890, inlinedAt: !8898)
!8911 = !DILocation(line: 87, column: 2, scope: !8890, inlinedAt: !8898)
!8912 = !DILocation(line: 29, column: 15, scope: !8876)
!8913 = !DILocation(line: 29, column: 19, scope: !8876)
!8914 = !DILocation(line: 54, column: 27, scope: !8915, inlinedAt: !8886)
!8915 = distinct !DILexicalBlock(scope: !8883, file: !8884, line: 54, column: 6)
!8916 = !DILocation(line: 54, column: 6, scope: !8915, inlinedAt: !8886)
!8917 = !DILocation(line: 54, column: 6, scope: !8883, inlinedAt: !8886)
!8918 = !DILocation(line: 56, column: 6, scope: !8919, inlinedAt: !8886)
!8919 = distinct !DILexicalBlock(scope: !8915, file: !8884, line: 54, column: 32)
!8920 = !DILocation(line: 57, column: 12, scope: !8919, inlinedAt: !8886)
!8921 = !DILocation(line: 55, column: 3, scope: !8919, inlinedAt: !8886)
!8922 = !{i32 -2146966503}
!8923 = !DILocation(line: 59, column: 2, scope: !8919, inlinedAt: !8886)
!8924 = !DILocation(line: 61, column: 8, scope: !8925, inlinedAt: !8886)
!8925 = distinct !DILexicalBlock(scope: !8915, file: !8884, line: 59, column: 9)
!8926 = !DILocation(line: 61, column: 32, scope: !8925, inlinedAt: !8886)
!8927 = !DILocation(line: 60, column: 3, scope: !8925, inlinedAt: !8886)
!8928 = !{i32 -2146966371}
!8929 = !DILocation(line: 30, column: 1, scope: !8876)
!8930 = distinct !DISubprogram(name: "clear_bit", scope: !8877, file: !8877, line: 39, type: !8878, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8931 = !DILocalVariable(name: "nr", arg: 1, scope: !8932, file: !8884, line: 72, type: !279)
!8932 = distinct !DISubprogram(name: "arch_clear_bit", scope: !8884, file: !8884, line: 72, type: !8878, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8933 = !DILocation(line: 72, column: 21, scope: !8932, inlinedAt: !8934)
!8934 = distinct !DILocation(line: 42, column: 2, scope: !8930)
!8935 = !DILocalVariable(name: "addr", arg: 2, scope: !8932, file: !8884, line: 72, type: !8880)
!8936 = !DILocation(line: 72, column: 49, scope: !8932, inlinedAt: !8934)
!8937 = !DILocation(line: 84, column: 74, scope: !8890, inlinedAt: !8938)
!8938 = distinct !DILocation(line: 41, column: 2, scope: !8930)
!8939 = !DILocation(line: 84, column: 84, scope: !8890, inlinedAt: !8938)
!8940 = !DILocalVariable(name: "nr", arg: 1, scope: !8930, file: !8877, line: 39, type: !279)
!8941 = !DILocation(line: 39, column: 35, scope: !8930)
!8942 = !DILocalVariable(name: "addr", arg: 2, scope: !8930, file: !8877, line: 39, type: !8880)
!8943 = !DILocation(line: 39, column: 63, scope: !8930)
!8944 = !DILocation(line: 41, column: 26, scope: !8930)
!8945 = !DILocation(line: 41, column: 33, scope: !8930)
!8946 = !DILocation(line: 41, column: 31, scope: !8930)
!8947 = !DILocation(line: 86, column: 20, scope: !8890, inlinedAt: !8938)
!8948 = !DILocation(line: 86, column: 23, scope: !8890, inlinedAt: !8938)
!8949 = !DILocation(line: 86, column: 2, scope: !8890, inlinedAt: !8938)
!8950 = !DILocation(line: 87, column: 2, scope: !8890, inlinedAt: !8938)
!8951 = !DILocation(line: 42, column: 17, scope: !8930)
!8952 = !DILocation(line: 42, column: 21, scope: !8930)
!8953 = !DILocation(line: 74, column: 27, scope: !8954, inlinedAt: !8934)
!8954 = distinct !DILexicalBlock(scope: !8932, file: !8884, line: 74, column: 6)
!8955 = !DILocation(line: 74, column: 6, scope: !8954, inlinedAt: !8934)
!8956 = !DILocation(line: 74, column: 6, scope: !8932, inlinedAt: !8934)
!8957 = !DILocation(line: 76, column: 6, scope: !8958, inlinedAt: !8934)
!8958 = distinct !DILexicalBlock(scope: !8954, file: !8884, line: 74, column: 32)
!8959 = !DILocation(line: 77, column: 13, scope: !8958, inlinedAt: !8934)
!8960 = !DILocation(line: 77, column: 12, scope: !8958, inlinedAt: !8934)
!8961 = !DILocation(line: 75, column: 3, scope: !8958, inlinedAt: !8934)
!8962 = !{i32 -2146965549}
!8963 = !DILocation(line: 78, column: 2, scope: !8958, inlinedAt: !8934)
!8964 = !DILocation(line: 80, column: 8, scope: !8965, inlinedAt: !8934)
!8965 = distinct !DILexicalBlock(scope: !8954, file: !8884, line: 78, column: 9)
!8966 = !DILocation(line: 80, column: 32, scope: !8965, inlinedAt: !8934)
!8967 = !DILocation(line: 79, column: 3, scope: !8965, inlinedAt: !8934)
!8968 = !{i32 -2146965417}
!8969 = !DILocation(line: 43, column: 1, scope: !8930)
!8970 = distinct !DISubprogram(name: "drm_dp_update_payload_part2", scope: !3, file: !3, line: 3481, type: !8563, scopeLine: 3482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!8971 = !DILocalVariable(name: "mgr", arg: 1, scope: !8970, file: !3, line: 3481, type: !406)
!8972 = !DILocation(line: 3481, column: 65, scope: !8970)
!8973 = !DILocalVariable(name: "port", scope: !8970, file: !3, line: 3483, type: !345)
!8974 = !DILocation(line: 3483, column: 26, scope: !8970)
!8975 = !DILocalVariable(name: "i", scope: !8970, file: !3, line: 3484, type: !115)
!8976 = !DILocation(line: 3484, column: 6, scope: !8970)
!8977 = !DILocalVariable(name: "ret", scope: !8970, file: !3, line: 3485, type: !115)
!8978 = !DILocation(line: 3485, column: 6, scope: !8970)
!8979 = !DILocation(line: 3487, column: 14, scope: !8970)
!8980 = !DILocation(line: 3487, column: 19, scope: !8970)
!8981 = !DILocation(line: 3487, column: 2, scope: !8970)
!8982 = !DILocation(line: 3488, column: 9, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8970, file: !3, line: 3488, column: 2)
!8984 = !DILocation(line: 3488, column: 7, scope: !8983)
!8985 = !DILocation(line: 3488, column: 14, scope: !8986)
!8986 = distinct !DILexicalBlock(scope: !8983, file: !3, line: 3488, column: 2)
!8987 = !DILocation(line: 3488, column: 18, scope: !8986)
!8988 = !DILocation(line: 3488, column: 23, scope: !8986)
!8989 = !DILocation(line: 3488, column: 16, scope: !8986)
!8990 = !DILocation(line: 3488, column: 2, scope: !8983)
!8991 = !DILocation(line: 3490, column: 8, scope: !8992)
!8992 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 3490, column: 7)
!8993 = distinct !DILexicalBlock(scope: !8986, file: !3, line: 3488, column: 42)
!8994 = !DILocation(line: 3490, column: 13, scope: !8992)
!8995 = !DILocation(line: 3490, column: 28, scope: !8992)
!8996 = !DILocation(line: 3490, column: 7, scope: !8993)
!8997 = !DILocation(line: 3491, column: 4, scope: !8992)
!8998 = !DILocalVariable(name: "__mptr", scope: !8999, file: !3, line: 3493, type: !344)
!8999 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 3493, column: 10)
!9000 = !DILocation(line: 3493, column: 10, scope: !8999)
!9001 = !DILocation(line: 3493, column: 10, scope: !9002)
!9002 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 3493, column: 10)
!9003 = !DILocation(line: 3493, column: 8, scope: !8993)
!9004 = !DILocation(line: 3495, column: 3, scope: !8993)
!9005 = !DILocation(line: 3496, column: 7, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 3496, column: 7)
!9007 = !DILocation(line: 3496, column: 12, scope: !9006)
!9008 = !DILocation(line: 3496, column: 21, scope: !9006)
!9009 = !DILocation(line: 3496, column: 24, scope: !9006)
!9010 = !DILocation(line: 3496, column: 38, scope: !9006)
!9011 = !DILocation(line: 3496, column: 7, scope: !8993)
!9012 = !DILocation(line: 3497, column: 38, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3496, column: 59)
!9014 = !DILocation(line: 3497, column: 43, scope: !9013)
!9015 = !DILocation(line: 3497, column: 49, scope: !9013)
!9016 = !DILocation(line: 3497, column: 54, scope: !9013)
!9017 = !DILocation(line: 3497, column: 69, scope: !9013)
!9018 = !DILocation(line: 3497, column: 73, scope: !9013)
!9019 = !DILocation(line: 3497, column: 80, scope: !9013)
!9020 = !DILocation(line: 3497, column: 85, scope: !9013)
!9021 = !DILocation(line: 3497, column: 94, scope: !9013)
!9022 = !DILocation(line: 3497, column: 10, scope: !9013)
!9023 = !DILocation(line: 3497, column: 8, scope: !9013)
!9024 = !DILocation(line: 3498, column: 3, scope: !9013)
!9025 = !DILocation(line: 3498, column: 14, scope: !9026)
!9026 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 3498, column: 14)
!9027 = !DILocation(line: 3498, column: 19, scope: !9026)
!9028 = !DILocation(line: 3498, column: 28, scope: !9026)
!9029 = !DILocation(line: 3498, column: 31, scope: !9026)
!9030 = !DILocation(line: 3498, column: 45, scope: !9026)
!9031 = !DILocation(line: 3498, column: 14, scope: !9006)
!9032 = !DILocation(line: 3499, column: 39, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 3498, column: 73)
!9034 = !DILocation(line: 3499, column: 44, scope: !9033)
!9035 = !DILocation(line: 3499, column: 49, scope: !9033)
!9036 = !DILocation(line: 3499, column: 64, scope: !9033)
!9037 = !DILocation(line: 3499, column: 68, scope: !9033)
!9038 = !DILocation(line: 3499, column: 75, scope: !9033)
!9039 = !DILocation(line: 3499, column: 80, scope: !9033)
!9040 = !DILocation(line: 3499, column: 89, scope: !9033)
!9041 = !DILocation(line: 3499, column: 10, scope: !9033)
!9042 = !DILocation(line: 3499, column: 8, scope: !9033)
!9043 = !DILocation(line: 3500, column: 3, scope: !9033)
!9044 = !DILocation(line: 3501, column: 7, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !8993, file: !3, line: 3501, column: 7)
!9046 = !DILocation(line: 3501, column: 7, scope: !8993)
!9047 = !DILocation(line: 3502, column: 18, scope: !9048)
!9048 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 3501, column: 12)
!9049 = !DILocation(line: 3502, column: 23, scope: !9048)
!9050 = !DILocation(line: 3502, column: 4, scope: !9048)
!9051 = !DILocation(line: 3503, column: 11, scope: !9048)
!9052 = !DILocation(line: 3503, column: 4, scope: !9048)
!9053 = !DILocation(line: 3505, column: 2, scope: !8993)
!9054 = !DILocation(line: 3488, column: 38, scope: !8986)
!9055 = !DILocation(line: 3488, column: 2, scope: !8986)
!9056 = distinct !{!9056, !8990, !9057}
!9057 = !DILocation(line: 3505, column: 2, scope: !8983)
!9058 = !DILocation(line: 3506, column: 16, scope: !8970)
!9059 = !DILocation(line: 3506, column: 21, scope: !8970)
!9060 = !DILocation(line: 3506, column: 2, scope: !8970)
!9061 = !DILocation(line: 3507, column: 2, scope: !8970)
!9062 = !DILocation(line: 3508, column: 1, scope: !8970)
!9063 = distinct !DISubprogram(name: "drm_dp_create_payload_step2", scope: !3, file: !3, line: 3323, type: !8848, scopeLine: 3327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9064 = !DILocalVariable(name: "mgr", arg: 1, scope: !9063, file: !3, line: 3323, type: !406)
!9065 = !DILocation(line: 3323, column: 72, scope: !9063)
!9066 = !DILocalVariable(name: "port", arg: 2, scope: !9063, file: !3, line: 3324, type: !345)
!9067 = !DILocation(line: 3324, column: 36, scope: !9063)
!9068 = !DILocalVariable(name: "id", arg: 3, scope: !9063, file: !3, line: 3325, type: !115)
!9069 = !DILocation(line: 3325, column: 16, scope: !9063)
!9070 = !DILocalVariable(name: "payload", arg: 4, scope: !9063, file: !3, line: 3326, type: !5817)
!9071 = !DILocation(line: 3326, column: 35, scope: !9063)
!9072 = !DILocalVariable(name: "ret", scope: !9063, file: !3, line: 3328, type: !115)
!9073 = !DILocation(line: 3328, column: 6, scope: !9063)
!9074 = !DILocation(line: 3330, column: 32, scope: !9063)
!9075 = !DILocation(line: 3330, column: 37, scope: !9063)
!9076 = !DILocation(line: 3330, column: 43, scope: !9063)
!9077 = !DILocation(line: 3330, column: 47, scope: !9063)
!9078 = !DILocation(line: 3330, column: 53, scope: !9063)
!9079 = !DILocation(line: 3330, column: 58, scope: !9063)
!9080 = !DILocation(line: 3330, column: 8, scope: !9063)
!9081 = !DILocation(line: 3330, column: 6, scope: !9063)
!9082 = !DILocation(line: 3331, column: 6, scope: !9083)
!9083 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 3331, column: 6)
!9084 = !DILocation(line: 3331, column: 10, scope: !9083)
!9085 = !DILocation(line: 3331, column: 6, scope: !9063)
!9086 = !DILocation(line: 3332, column: 10, scope: !9083)
!9087 = !DILocation(line: 3332, column: 3, scope: !9083)
!9088 = !DILocation(line: 3333, column: 2, scope: !9063)
!9089 = !DILocation(line: 3333, column: 11, scope: !9063)
!9090 = !DILocation(line: 3333, column: 25, scope: !9063)
!9091 = !DILocation(line: 3334, column: 9, scope: !9063)
!9092 = !DILocation(line: 3334, column: 2, scope: !9063)
!9093 = !DILocation(line: 3335, column: 1, scope: !9063)
!9094 = distinct !DISubprogram(name: "drm_dp_destroy_payload_step2", scope: !3, file: !3, line: 3353, type: !8817, scopeLine: 3356, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9095 = !DILocalVariable(name: "mgr", arg: 1, scope: !9094, file: !3, line: 3353, type: !406)
!9096 = !DILocation(line: 3353, column: 73, scope: !9094)
!9097 = !DILocalVariable(name: "id", arg: 2, scope: !9094, file: !3, line: 3354, type: !115)
!9098 = !DILocation(line: 3354, column: 10, scope: !9094)
!9099 = !DILocalVariable(name: "payload", arg: 3, scope: !9094, file: !3, line: 3355, type: !5817)
!9100 = !DILocation(line: 3355, column: 29, scope: !9094)
!9101 = !DILocation(line: 3357, column: 2, scope: !9094)
!9102 = !DILocation(line: 3357, column: 11, scope: !9094)
!9103 = !DILocation(line: 3357, column: 25, scope: !9094)
!9104 = !DILocation(line: 3358, column: 2, scope: !9094)
!9105 = distinct !DISubprogram(name: "drm_dp_read_mst_cap", scope: !3, file: !3, line: 3648, type: !9106, scopeLine: 3650, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9106 = !DISubroutineType(types: !9107)
!9107 = !{!370, !5728, !6812}
!9108 = !DILocalVariable(name: "aux", arg: 1, scope: !9105, file: !3, line: 3648, type: !5728)
!9109 = !DILocation(line: 3648, column: 45, scope: !9105)
!9110 = !DILocalVariable(name: "dpcd", arg: 2, scope: !9105, file: !3, line: 3649, type: !6812)
!9111 = !DILocation(line: 3649, column: 14, scope: !9105)
!9112 = !DILocalVariable(name: "mstm_cap", scope: !9105, file: !3, line: 3651, type: !364)
!9113 = !DILocation(line: 3651, column: 5, scope: !9105)
!9114 = !DILocation(line: 3653, column: 6, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3653, column: 6)
!9116 = !DILocation(line: 3653, column: 24, scope: !9115)
!9117 = !DILocation(line: 3653, column: 6, scope: !9105)
!9118 = !DILocation(line: 3654, column: 3, scope: !9115)
!9119 = !DILocation(line: 3656, column: 24, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9105, file: !3, line: 3656, column: 6)
!9121 = !DILocation(line: 3656, column: 6, scope: !9120)
!9122 = !DILocation(line: 3656, column: 53, scope: !9120)
!9123 = !DILocation(line: 3656, column: 6, scope: !9105)
!9124 = !DILocation(line: 3657, column: 3, scope: !9120)
!9125 = !DILocation(line: 3659, column: 9, scope: !9105)
!9126 = !DILocation(line: 3659, column: 18, scope: !9105)
!9127 = !DILocation(line: 3659, column: 2, scope: !9105)
!9128 = !DILocation(line: 3660, column: 1, scope: !9105)
!9129 = distinct !DISubprogram(name: "drm_dp_dpcd_readb", scope: !311, file: !311, line: 1622, type: !9130, scopeLine: 1624, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9130 = !DISubroutineType(types: !9131)
!9131 = !{!1095, !5728, !7, !6180}
!9132 = !DILocalVariable(name: "aux", arg: 1, scope: !9129, file: !311, line: 1622, type: !5728)
!9133 = !DILocation(line: 1622, column: 60, scope: !9129)
!9134 = !DILocalVariable(name: "offset", arg: 2, scope: !9129, file: !311, line: 1623, type: !7)
!9135 = !DILocation(line: 1623, column: 19, scope: !9129)
!9136 = !DILocalVariable(name: "valuep", arg: 3, scope: !9129, file: !311, line: 1623, type: !6180)
!9137 = !DILocation(line: 1623, column: 31, scope: !9129)
!9138 = !DILocation(line: 1625, column: 26, scope: !9129)
!9139 = !DILocation(line: 1625, column: 31, scope: !9129)
!9140 = !DILocation(line: 1625, column: 39, scope: !9129)
!9141 = !DILocation(line: 1625, column: 9, scope: !9129)
!9142 = !DILocation(line: 1625, column: 2, scope: !9129)
!9143 = distinct !DISubprogram(name: "drm_dp_mst_topology_mgr_set_mst", scope: !3, file: !3, line: 3671, type: !9144, scopeLine: 3672, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9144 = !DISubroutineType(types: !9145)
!9145 = !{!115, !406, !370}
!9146 = !DILocalVariable(name: "mgr", arg: 1, scope: !9143, file: !3, line: 3671, type: !406)
!9147 = !DILocation(line: 3671, column: 69, scope: !9143)
!9148 = !DILocalVariable(name: "mst_state", arg: 2, scope: !9143, file: !3, line: 3671, type: !370)
!9149 = !DILocation(line: 3671, column: 79, scope: !9143)
!9150 = !DILocalVariable(name: "ret", scope: !9143, file: !3, line: 3673, type: !115)
!9151 = !DILocation(line: 3673, column: 6, scope: !9143)
!9152 = !DILocalVariable(name: "mstb", scope: !9143, file: !3, line: 3674, type: !391)
!9153 = !DILocation(line: 3674, column: 28, scope: !9143)
!9154 = !DILocation(line: 3676, column: 14, scope: !9143)
!9155 = !DILocation(line: 3676, column: 19, scope: !9143)
!9156 = !DILocation(line: 3676, column: 2, scope: !9143)
!9157 = !DILocation(line: 3677, column: 14, scope: !9143)
!9158 = !DILocation(line: 3677, column: 19, scope: !9143)
!9159 = !DILocation(line: 3677, column: 2, scope: !9143)
!9160 = !DILocation(line: 3678, column: 6, scope: !9161)
!9161 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 3678, column: 6)
!9162 = !DILocation(line: 3678, column: 19, scope: !9161)
!9163 = !DILocation(line: 3678, column: 24, scope: !9161)
!9164 = !DILocation(line: 3678, column: 16, scope: !9161)
!9165 = !DILocation(line: 3678, column: 6, scope: !9143)
!9166 = !DILocation(line: 3679, column: 3, scope: !9161)
!9167 = !DILocation(line: 3681, column: 19, scope: !9143)
!9168 = !DILocation(line: 3681, column: 2, scope: !9143)
!9169 = !DILocation(line: 3681, column: 7, scope: !9143)
!9170 = !DILocation(line: 3681, column: 17, scope: !9143)
!9171 = !DILocation(line: 3683, column: 6, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 3683, column: 6)
!9173 = !DILocation(line: 3683, column: 6, scope: !9143)
!9174 = !DILocalVariable(name: "reset_pay", scope: !9175, file: !3, line: 3684, type: !5818)
!9175 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 3683, column: 17)
!9176 = !DILocation(line: 3684, column: 25, scope: !9175)
!9177 = !DILocalVariable(name: "__ret_warn_on", scope: !9178, file: !3, line: 3686, type: !115)
!9178 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 3686, column: 3)
!9179 = !DILocation(line: 3686, column: 3, scope: !9178)
!9180 = !DILocation(line: 3686, column: 3, scope: !9181)
!9181 = distinct !DILexicalBlock(scope: !9178, file: !3, line: 3686, column: 3)
!9182 = !DILocation(line: 3686, column: 3, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9181, file: !3, line: 3686, column: 3)
!9184 = !DILocation(line: 3686, column: 3, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 3686, column: 3)
!9186 = !DILocation(line: 3686, column: 3, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 3686, column: 3)
!9188 = !{i32 -2140002018, i32 -2140001989, i32 -2140001943, i32 -2140001885, i32 -2140001831, i32 -2140001777, i32 -2140001722, i32 -2140001691}
!9189 = !DILocation(line: 3686, column: 3, scope: !9190)
!9190 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 3686, column: 3)
!9191 = !{i32 -2140001271, i32 -2140001264, i32 -2140001212, i32 -2140001181, i32 -2140001151}
!9192 = !DILocation(line: 3686, column: 3, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9183, file: !3, line: 3686, column: 3)
!9194 = !DILocation(line: 3689, column: 26, scope: !9175)
!9195 = !DILocation(line: 3689, column: 31, scope: !9175)
!9196 = !DILocation(line: 3689, column: 49, scope: !9175)
!9197 = !DILocation(line: 3689, column: 54, scope: !9175)
!9198 = !DILocation(line: 3689, column: 9, scope: !9175)
!9199 = !DILocation(line: 3689, column: 7, scope: !9175)
!9200 = !DILocation(line: 3690, column: 7, scope: !9201)
!9201 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 3690, column: 7)
!9202 = !DILocation(line: 3690, column: 11, scope: !9201)
!9203 = !DILocation(line: 3690, column: 7, scope: !9175)
!9204 = !DILocation(line: 3691, column: 4, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9201, file: !3, line: 3690, column: 36)
!9206 = !DILocation(line: 3692, column: 4, scope: !9205)
!9207 = !DILocation(line: 3695, column: 43, scope: !9175)
!9208 = !DILocation(line: 3695, column: 48, scope: !9175)
!9209 = !DILocation(line: 3696, column: 8, scope: !9175)
!9210 = !DILocation(line: 3696, column: 13, scope: !9175)
!9211 = !DILocation(line: 3696, column: 21, scope: !9175)
!9212 = !DILocation(line: 3695, column: 18, scope: !9175)
!9213 = !DILocation(line: 3695, column: 3, scope: !9175)
!9214 = !DILocation(line: 3695, column: 8, scope: !9175)
!9215 = !DILocation(line: 3695, column: 16, scope: !9175)
!9216 = !DILocation(line: 3697, column: 7, scope: !9217)
!9217 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 3697, column: 7)
!9218 = !DILocation(line: 3697, column: 12, scope: !9217)
!9219 = !DILocation(line: 3697, column: 20, scope: !9217)
!9220 = !DILocation(line: 3697, column: 7, scope: !9175)
!9221 = !DILocation(line: 3698, column: 8, scope: !9222)
!9222 = distinct !DILexicalBlock(scope: !9217, file: !3, line: 3697, column: 26)
!9223 = !DILocation(line: 3699, column: 4, scope: !9222)
!9224 = !DILocation(line: 3703, column: 10, scope: !9175)
!9225 = !DILocation(line: 3703, column: 8, scope: !9175)
!9226 = !DILocation(line: 3704, column: 7, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 3704, column: 7)
!9228 = !DILocation(line: 3704, column: 12, scope: !9227)
!9229 = !DILocation(line: 3704, column: 7, scope: !9175)
!9230 = !DILocation(line: 3705, column: 8, scope: !9231)
!9231 = distinct !DILexicalBlock(scope: !9227, file: !3, line: 3704, column: 21)
!9232 = !DILocation(line: 3706, column: 4, scope: !9231)
!9233 = !DILocation(line: 3708, column: 15, scope: !9175)
!9234 = !DILocation(line: 3708, column: 3, scope: !9175)
!9235 = !DILocation(line: 3708, column: 9, scope: !9175)
!9236 = !DILocation(line: 3708, column: 13, scope: !9175)
!9237 = !DILocation(line: 3711, column: 22, scope: !9175)
!9238 = !DILocation(line: 3711, column: 3, scope: !9175)
!9239 = !DILocation(line: 3711, column: 8, scope: !9175)
!9240 = !DILocation(line: 3711, column: 20, scope: !9175)
!9241 = !DILocation(line: 3712, column: 32, scope: !9175)
!9242 = !DILocation(line: 3712, column: 37, scope: !9175)
!9243 = !DILocation(line: 3712, column: 3, scope: !9175)
!9244 = !DILocation(line: 3714, column: 28, scope: !9175)
!9245 = !DILocation(line: 3714, column: 33, scope: !9175)
!9246 = !DILocation(line: 3714, column: 9, scope: !9175)
!9247 = !DILocation(line: 3714, column: 7, scope: !9175)
!9248 = !DILocation(line: 3718, column: 7, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9175, file: !3, line: 3718, column: 7)
!9250 = !DILocation(line: 3718, column: 11, scope: !9249)
!9251 = !DILocation(line: 3718, column: 7, scope: !9175)
!9252 = !DILocation(line: 3719, column: 4, scope: !9249)
!9253 = !DILocation(line: 3721, column: 13, scope: !9175)
!9254 = !DILocation(line: 3721, column: 24, scope: !9175)
!9255 = !DILocation(line: 3722, column: 13, scope: !9175)
!9256 = !DILocation(line: 3722, column: 23, scope: !9175)
!9257 = !DILocation(line: 3723, column: 29, scope: !9175)
!9258 = !DILocation(line: 3723, column: 3, scope: !9175)
!9259 = !DILocation(line: 3725, column: 14, scope: !9175)
!9260 = !DILocation(line: 3725, column: 31, scope: !9175)
!9261 = !DILocation(line: 3725, column: 36, scope: !9175)
!9262 = !DILocation(line: 3725, column: 3, scope: !9175)
!9263 = !DILocation(line: 3727, column: 7, scope: !9175)
!9264 = !DILocation(line: 3728, column: 2, scope: !9175)
!9265 = !DILocation(line: 3730, column: 10, scope: !9266)
!9266 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 3728, column: 9)
!9267 = !DILocation(line: 3730, column: 15, scope: !9266)
!9268 = !DILocation(line: 3730, column: 8, scope: !9266)
!9269 = !DILocation(line: 3731, column: 3, scope: !9266)
!9270 = !DILocation(line: 3731, column: 8, scope: !9266)
!9271 = !DILocation(line: 3731, column: 20, scope: !9266)
!9272 = !DILocation(line: 3733, column: 22, scope: !9266)
!9273 = !DILocation(line: 3733, column: 27, scope: !9266)
!9274 = !DILocation(line: 3733, column: 3, scope: !9266)
!9275 = !DILocation(line: 3734, column: 7, scope: !9266)
!9276 = !DILocation(line: 3735, column: 10, scope: !9266)
!9277 = !DILocation(line: 3735, column: 15, scope: !9266)
!9278 = !DILocation(line: 3735, column: 3, scope: !9266)
!9279 = !DILocation(line: 3736, column: 10, scope: !9266)
!9280 = !DILocation(line: 3736, column: 15, scope: !9266)
!9281 = !DILocation(line: 3736, column: 28, scope: !9266)
!9282 = !DILocation(line: 3737, column: 10, scope: !9266)
!9283 = !DILocation(line: 3737, column: 15, scope: !9266)
!9284 = !DILocation(line: 3737, column: 3, scope: !9266)
!9285 = !DILocation(line: 3738, column: 10, scope: !9266)
!9286 = !DILocation(line: 3738, column: 15, scope: !9266)
!9287 = !DILocation(line: 3738, column: 28, scope: !9266)
!9288 = !DILocation(line: 3739, column: 3, scope: !9266)
!9289 = !DILocation(line: 3739, column: 8, scope: !9266)
!9290 = !DILocation(line: 3739, column: 21, scope: !9266)
!9291 = !DILocation(line: 3740, column: 15, scope: !9266)
!9292 = !DILocation(line: 3740, column: 20, scope: !9266)
!9293 = !DILocation(line: 3740, column: 3, scope: !9266)
!9294 = !DILocation(line: 3741, column: 3, scope: !9266)
!9295 = !DILocation(line: 3741, column: 8, scope: !9266)
!9296 = !DILocation(line: 3741, column: 18, scope: !9266)
!9297 = !DILocation(line: 3742, column: 3, scope: !9266)
!9298 = !DILocation(line: 3742, column: 8, scope: !9266)
!9299 = !DILocation(line: 3742, column: 33, scope: !9266)
!9300 = !DILabel(scope: !9143, name: "out_unlock", file: !3, line: 3745)
!9301 = !DILocation(line: 3745, column: 1, scope: !9143)
!9302 = !DILocation(line: 3746, column: 16, scope: !9143)
!9303 = !DILocation(line: 3746, column: 21, scope: !9143)
!9304 = !DILocation(line: 3746, column: 2, scope: !9143)
!9305 = !DILocation(line: 3747, column: 16, scope: !9143)
!9306 = !DILocation(line: 3747, column: 21, scope: !9143)
!9307 = !DILocation(line: 3747, column: 2, scope: !9143)
!9308 = !DILocation(line: 3748, column: 6, scope: !9309)
!9309 = distinct !DILexicalBlock(scope: !9143, file: !3, line: 3748, column: 6)
!9310 = !DILocation(line: 3748, column: 6, scope: !9143)
!9311 = !DILocation(line: 3749, column: 32, scope: !9309)
!9312 = !DILocation(line: 3749, column: 3, scope: !9309)
!9313 = !DILocation(line: 3750, column: 9, scope: !9143)
!9314 = !DILocation(line: 3750, column: 2, scope: !9143)
!9315 = distinct !DISubprogram(name: "drm_dp_get_vc_payload_bw", scope: !3, file: !3, line: 3632, type: !9316, scopeLine: 3633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9316 = !DISubroutineType(types: !9317)
!9317 = !{!115, !364, !364}
!9318 = !DILocalVariable(name: "dp_link_bw", arg: 1, scope: !9315, file: !3, line: 3632, type: !364)
!9319 = !DILocation(line: 3632, column: 40, scope: !9315)
!9320 = !DILocalVariable(name: "dp_link_count", arg: 2, scope: !9315, file: !3, line: 3632, type: !364)
!9321 = !DILocation(line: 3632, column: 56, scope: !9315)
!9322 = !DILocation(line: 3634, column: 6, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9315, file: !3, line: 3634, column: 6)
!9324 = !DILocation(line: 3634, column: 17, scope: !9323)
!9325 = !DILocation(line: 3634, column: 22, scope: !9323)
!9326 = !DILocation(line: 3634, column: 25, scope: !9323)
!9327 = !DILocation(line: 3634, column: 39, scope: !9323)
!9328 = !DILocation(line: 3634, column: 6, scope: !9315)
!9329 = !DILocation(line: 3635, column: 3, scope: !9323)
!9330 = !DILocation(line: 3638, column: 9, scope: !9315)
!9331 = !DILocation(line: 3638, column: 22, scope: !9315)
!9332 = !DILocation(line: 3638, column: 20, scope: !9315)
!9333 = !DILocation(line: 3638, column: 36, scope: !9315)
!9334 = !DILocation(line: 3638, column: 2, scope: !9315)
!9335 = distinct !DISubprogram(name: "drm_dp_add_mst_branch_device", scope: !3, file: !3, line: 1356, type: !9336, scopeLine: 1357, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9336 = !DISubroutineType(types: !9337)
!9337 = !{!391, !364, !6180}
!9338 = !DILocalVariable(name: "lct", arg: 1, scope: !9335, file: !3, line: 1356, type: !364)
!9339 = !DILocation(line: 1356, column: 66, scope: !9335)
!9340 = !DILocalVariable(name: "rad", arg: 2, scope: !9335, file: !3, line: 1356, type: !6180)
!9341 = !DILocation(line: 1356, column: 75, scope: !9335)
!9342 = !DILocalVariable(name: "mstb", scope: !9335, file: !3, line: 1358, type: !391)
!9343 = !DILocation(line: 1358, column: 28, scope: !9335)
!9344 = !DILocation(line: 1360, column: 9, scope: !9335)
!9345 = !DILocation(line: 1360, column: 7, scope: !9335)
!9346 = !DILocation(line: 1361, column: 7, scope: !9347)
!9347 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 1361, column: 6)
!9348 = !DILocation(line: 1361, column: 6, scope: !9335)
!9349 = !DILocation(line: 1362, column: 3, scope: !9347)
!9350 = !DILocation(line: 1364, column: 14, scope: !9335)
!9351 = !DILocation(line: 1364, column: 2, scope: !9335)
!9352 = !DILocation(line: 1364, column: 8, scope: !9335)
!9353 = !DILocation(line: 1364, column: 12, scope: !9335)
!9354 = !DILocation(line: 1365, column: 6, scope: !9355)
!9355 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 1365, column: 6)
!9356 = !DILocation(line: 1365, column: 10, scope: !9355)
!9357 = !DILocation(line: 1365, column: 6, scope: !9335)
!9358 = !DILocation(line: 1366, column: 10, scope: !9355)
!9359 = !DILocation(line: 1366, column: 16, scope: !9355)
!9360 = !DILocation(line: 1366, column: 3, scope: !9355)
!9361 = !DILocation(line: 1366, column: 21, scope: !9355)
!9362 = !DILocation(line: 1366, column: 26, scope: !9355)
!9363 = !DILocation(line: 1366, column: 30, scope: !9355)
!9364 = !DILocation(line: 1367, column: 18, scope: !9335)
!9365 = !DILocation(line: 1367, column: 24, scope: !9335)
!9366 = !DILocation(line: 1367, column: 2, scope: !9335)
!9367 = !DILocation(line: 1368, column: 13, scope: !9335)
!9368 = !DILocation(line: 1368, column: 19, scope: !9335)
!9369 = !DILocation(line: 1368, column: 2, scope: !9335)
!9370 = !DILocation(line: 1369, column: 13, scope: !9335)
!9371 = !DILocation(line: 1369, column: 19, scope: !9335)
!9372 = !DILocation(line: 1369, column: 2, scope: !9335)
!9373 = !DILocation(line: 1370, column: 9, scope: !9335)
!9374 = !DILocation(line: 1370, column: 2, scope: !9335)
!9375 = !DILocation(line: 1371, column: 1, scope: !9335)
!9376 = distinct !DISubprogram(name: "drm_dp_mst_topology_get_mstb", scope: !3, file: !3, line: 1804, type: !9377, scopeLine: 1805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9377 = !DISubroutineType(types: !9378)
!9378 = !{null, !391}
!9379 = !DILocalVariable(name: "mstb", arg: 1, scope: !9376, file: !3, line: 1804, type: !391)
!9380 = !DILocation(line: 1804, column: 68, scope: !9376)
!9381 = !DILocation(line: 1806, column: 28, scope: !9376)
!9382 = !DILocation(line: 1806, column: 34, scope: !9376)
!9383 = !DILocation(line: 1806, column: 2, scope: !9376)
!9384 = !DILocalVariable(name: "__ret_warn_on", scope: !9385, file: !3, line: 1809, type: !115)
!9385 = distinct !DILexicalBlock(scope: !9376, file: !3, line: 1809, column: 2)
!9386 = !DILocation(line: 1809, column: 2, scope: !9385)
!9387 = !DILocation(line: 1809, column: 2, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9385, file: !3, line: 1809, column: 2)
!9389 = !DILocation(line: 1809, column: 2, scope: !9390)
!9390 = distinct !DILexicalBlock(scope: !9388, file: !3, line: 1809, column: 2)
!9391 = !DILocation(line: 1809, column: 2, scope: !9392)
!9392 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1809, column: 2)
!9393 = !DILocation(line: 1809, column: 2, scope: !9394)
!9394 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1809, column: 2)
!9395 = !{i32 -2140070064, i32 -2140070035, i32 -2140069989, i32 -2140069931, i32 -2140069877, i32 -2140069823, i32 -2140069768, i32 -2140069737}
!9396 = !DILocation(line: 1809, column: 2, scope: !9397)
!9397 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1809, column: 2)
!9398 = !{i32 -2140069317, i32 -2140069310, i32 -2140069258, i32 -2140069227, i32 -2140069197}
!9399 = !DILocation(line: 1809, column: 2, scope: !9400)
!9400 = distinct !DILexicalBlock(scope: !9390, file: !3, line: 1809, column: 2)
!9401 = !DILocation(line: 1810, column: 12, scope: !9376)
!9402 = !DILocation(line: 1810, column: 18, scope: !9376)
!9403 = !DILocation(line: 1810, column: 2, scope: !9376)
!9404 = !DILocation(line: 1811, column: 2, scope: !9376)
!9405 = !DILocation(line: 1813, column: 30, scope: !9376)
!9406 = !DILocation(line: 1813, column: 36, scope: !9376)
!9407 = !DILocation(line: 1813, column: 2, scope: !9376)
!9408 = !DILocation(line: 1814, column: 1, scope: !9376)
!9409 = distinct !DISubprogram(name: "drm_dp_dpcd_writeb", scope: !311, file: !311, line: 1637, type: !9410, scopeLine: 1639, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9410 = !DISubroutineType(types: !9411)
!9411 = !{!1095, !5728, !7, !364}
!9412 = !DILocalVariable(name: "aux", arg: 1, scope: !9409, file: !311, line: 1637, type: !5728)
!9413 = !DILocation(line: 1637, column: 61, scope: !9409)
!9414 = !DILocalVariable(name: "offset", arg: 2, scope: !9409, file: !311, line: 1638, type: !7)
!9415 = !DILocation(line: 1638, column: 20, scope: !9409)
!9416 = !DILocalVariable(name: "value", arg: 3, scope: !9409, file: !311, line: 1638, type: !364)
!9417 = !DILocation(line: 1638, column: 31, scope: !9409)
!9418 = !DILocation(line: 1640, column: 27, scope: !9409)
!9419 = !DILocation(line: 1640, column: 32, scope: !9409)
!9420 = !DILocation(line: 1640, column: 9, scope: !9409)
!9421 = !DILocation(line: 1640, column: 2, scope: !9409)
!9422 = distinct !DISubprogram(name: "drm_dp_dpcd_write_payload", scope: !3, file: !3, line: 4575, type: !8817, scopeLine: 4577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9423 = !DILocalVariable(name: "mgr", arg: 1, scope: !9422, file: !3, line: 4575, type: !406)
!9424 = !DILocation(line: 4575, column: 70, scope: !9422)
!9425 = !DILocalVariable(name: "id", arg: 2, scope: !9422, file: !3, line: 4576, type: !115)
!9426 = !DILocation(line: 4576, column: 14, scope: !9422)
!9427 = !DILocalVariable(name: "payload", arg: 3, scope: !9422, file: !3, line: 4576, type: !5817)
!9428 = !DILocation(line: 4576, column: 41, scope: !9422)
!9429 = !DILocalVariable(name: "payload_alloc", scope: !9422, file: !3, line: 4578, type: !5975)
!9430 = !DILocation(line: 4578, column: 5, scope: !9422)
!9431 = !DILocalVariable(name: "status", scope: !9422, file: !3, line: 4578, type: !364)
!9432 = !DILocation(line: 4578, column: 23, scope: !9422)
!9433 = !DILocalVariable(name: "ret", scope: !9422, file: !3, line: 4579, type: !115)
!9434 = !DILocation(line: 4579, column: 6, scope: !9422)
!9435 = !DILocalVariable(name: "retries", scope: !9422, file: !3, line: 4580, type: !115)
!9436 = !DILocation(line: 4580, column: 6, scope: !9422)
!9437 = !DILocation(line: 4582, column: 21, scope: !9422)
!9438 = !DILocation(line: 4582, column: 26, scope: !9422)
!9439 = !DILocation(line: 4582, column: 2, scope: !9422)
!9440 = !DILocation(line: 4585, column: 21, scope: !9422)
!9441 = !DILocation(line: 4585, column: 2, scope: !9422)
!9442 = !DILocation(line: 4585, column: 19, scope: !9422)
!9443 = !DILocation(line: 4586, column: 21, scope: !9422)
!9444 = !DILocation(line: 4586, column: 30, scope: !9422)
!9445 = !DILocation(line: 4586, column: 2, scope: !9422)
!9446 = !DILocation(line: 4586, column: 19, scope: !9422)
!9447 = !DILocation(line: 4587, column: 21, scope: !9422)
!9448 = !DILocation(line: 4587, column: 30, scope: !9422)
!9449 = !DILocation(line: 4587, column: 2, scope: !9422)
!9450 = !DILocation(line: 4587, column: 19, scope: !9422)
!9451 = !DILocation(line: 4589, column: 26, scope: !9422)
!9452 = !DILocation(line: 4589, column: 31, scope: !9422)
!9453 = !DILocation(line: 4589, column: 61, scope: !9422)
!9454 = !DILocation(line: 4589, column: 8, scope: !9422)
!9455 = !DILocation(line: 4589, column: 6, scope: !9422)
!9456 = !DILocation(line: 4590, column: 6, scope: !9457)
!9457 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 4590, column: 6)
!9458 = !DILocation(line: 4590, column: 10, scope: !9457)
!9459 = !DILocation(line: 4590, column: 6, scope: !9422)
!9460 = !DILocation(line: 4591, column: 3, scope: !9461)
!9461 = distinct !DILexicalBlock(scope: !9457, file: !3, line: 4590, column: 16)
!9462 = !DILocation(line: 4592, column: 3, scope: !9461)
!9463 = !DILocation(line: 4590, column: 13, scope: !9457)
!9464 = !DILabel(scope: !9422, name: "retry", file: !3, line: 4595)
!9465 = !DILocation(line: 4595, column: 1, scope: !9422)
!9466 = !DILocation(line: 4596, column: 26, scope: !9422)
!9467 = !DILocation(line: 4596, column: 31, scope: !9422)
!9468 = !DILocation(line: 4596, column: 8, scope: !9422)
!9469 = !DILocation(line: 4596, column: 6, scope: !9422)
!9470 = !DILocation(line: 4597, column: 6, scope: !9471)
!9471 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 4597, column: 6)
!9472 = !DILocation(line: 4597, column: 10, scope: !9471)
!9473 = !DILocation(line: 4597, column: 6, scope: !9422)
!9474 = !DILocation(line: 4598, column: 3, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9471, file: !3, line: 4597, column: 15)
!9476 = !DILocation(line: 4599, column: 3, scope: !9475)
!9477 = !DILocation(line: 4602, column: 8, scope: !9478)
!9478 = distinct !DILexicalBlock(scope: !9422, file: !3, line: 4602, column: 6)
!9479 = !DILocation(line: 4602, column: 15, scope: !9478)
!9480 = !DILocation(line: 4602, column: 6, scope: !9422)
!9481 = !DILocation(line: 4603, column: 10, scope: !9482)
!9482 = distinct !DILexicalBlock(scope: !9478, file: !3, line: 4602, column: 44)
!9483 = !DILocation(line: 4604, column: 7, scope: !9484)
!9484 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 4604, column: 7)
!9485 = !DILocation(line: 4604, column: 15, scope: !9484)
!9486 = !DILocation(line: 4604, column: 7, scope: !9482)
!9487 = !DILocation(line: 4605, column: 4, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 4604, column: 21)
!9489 = !DILocation(line: 4606, column: 4, scope: !9488)
!9490 = !DILocation(line: 4608, column: 3, scope: !9482)
!9491 = !DILocation(line: 4609, column: 7, scope: !9482)
!9492 = !DILocation(line: 4610, column: 3, scope: !9482)
!9493 = !DILocation(line: 4612, column: 6, scope: !9422)
!9494 = !DILocation(line: 4612, column: 2, scope: !9422)
!9495 = !DILabel(scope: !9422, name: "fail", file: !3, line: 4613)
!9496 = !DILocation(line: 4613, column: 1, scope: !9422)
!9497 = !DILocation(line: 4614, column: 9, scope: !9422)
!9498 = !DILocation(line: 4614, column: 2, scope: !9422)
!9499 = distinct !DISubprogram(name: "queue_work", scope: !262, file: !262, line: 504, type: !9500, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9500 = !DISubroutineType(types: !9501)
!9501 = !{!370, !1969, !2000}
!9502 = !DILocalVariable(name: "wq", arg: 1, scope: !9499, file: !262, line: 504, type: !1969)
!9503 = !DILocation(line: 504, column: 56, scope: !9499)
!9504 = !DILocalVariable(name: "work", arg: 2, scope: !9499, file: !262, line: 505, type: !2000)
!9505 = !DILocation(line: 505, column: 30, scope: !9499)
!9506 = !DILocation(line: 507, column: 41, scope: !9499)
!9507 = !DILocation(line: 507, column: 45, scope: !9499)
!9508 = !DILocation(line: 507, column: 9, scope: !9499)
!9509 = !DILocation(line: 507, column: 2, scope: !9499)
!9510 = distinct !DISubprogram(name: "drm_dp_mst_topology_put_mstb", scope: !3, file: !3, line: 1829, type: !9377, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9511 = !DILocalVariable(name: "mstb", arg: 1, scope: !9510, file: !3, line: 1829, type: !391)
!9512 = !DILocation(line: 1829, column: 56, scope: !9510)
!9513 = !DILocation(line: 1831, column: 28, scope: !9510)
!9514 = !DILocation(line: 1831, column: 34, scope: !9510)
!9515 = !DILocation(line: 1831, column: 2, scope: !9510)
!9516 = !DILocation(line: 1833, column: 2, scope: !9510)
!9517 = !DILocation(line: 1837, column: 30, scope: !9510)
!9518 = !DILocation(line: 1837, column: 36, scope: !9510)
!9519 = !DILocation(line: 1837, column: 2, scope: !9510)
!9520 = !DILocation(line: 1838, column: 12, scope: !9510)
!9521 = !DILocation(line: 1838, column: 18, scope: !9510)
!9522 = !DILocation(line: 1838, column: 2, scope: !9510)
!9523 = !DILocation(line: 1839, column: 1, scope: !9510)
!9524 = distinct !DISubprogram(name: "drm_dp_mst_topology_mgr_suspend", scope: !3, file: !3, line: 3775, type: !5724, scopeLine: 3776, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9525 = !DILocalVariable(name: "mgr", arg: 1, scope: !9524, file: !3, line: 3775, type: !406)
!9526 = !DILocation(line: 3775, column: 70, scope: !9524)
!9527 = !DILocation(line: 3777, column: 14, scope: !9524)
!9528 = !DILocation(line: 3777, column: 19, scope: !9524)
!9529 = !DILocation(line: 3777, column: 2, scope: !9524)
!9530 = !DILocation(line: 3778, column: 21, scope: !9524)
!9531 = !DILocation(line: 3778, column: 26, scope: !9524)
!9532 = !DILocation(line: 3778, column: 2, scope: !9524)
!9533 = !DILocation(line: 3780, column: 16, scope: !9524)
!9534 = !DILocation(line: 3780, column: 21, scope: !9524)
!9535 = !DILocation(line: 3780, column: 2, scope: !9524)
!9536 = !DILocation(line: 3781, column: 14, scope: !9524)
!9537 = !DILocation(line: 3781, column: 19, scope: !9524)
!9538 = !DILocation(line: 3781, column: 2, scope: !9524)
!9539 = !DILocation(line: 3782, column: 14, scope: !9524)
!9540 = !DILocation(line: 3782, column: 19, scope: !9524)
!9541 = !DILocation(line: 3782, column: 2, scope: !9524)
!9542 = !DILocation(line: 3783, column: 14, scope: !9524)
!9543 = !DILocation(line: 3783, column: 19, scope: !9524)
!9544 = !DILocation(line: 3783, column: 2, scope: !9524)
!9545 = !DILocation(line: 3785, column: 14, scope: !9524)
!9546 = !DILocation(line: 3785, column: 19, scope: !9524)
!9547 = !DILocation(line: 3785, column: 2, scope: !9524)
!9548 = !DILocation(line: 3786, column: 6, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 3786, column: 6)
!9550 = !DILocation(line: 3786, column: 11, scope: !9549)
!9551 = !DILocation(line: 3786, column: 21, scope: !9549)
!9552 = !DILocation(line: 3786, column: 24, scope: !9549)
!9553 = !DILocation(line: 3786, column: 29, scope: !9549)
!9554 = !DILocation(line: 3786, column: 6, scope: !9524)
!9555 = !DILocation(line: 3787, column: 43, scope: !9549)
!9556 = !DILocation(line: 3787, column: 48, scope: !9549)
!9557 = !DILocation(line: 3787, column: 3, scope: !9549)
!9558 = !DILocation(line: 3788, column: 16, scope: !9524)
!9559 = !DILocation(line: 3788, column: 21, scope: !9524)
!9560 = !DILocation(line: 3788, column: 2, scope: !9524)
!9561 = !DILocation(line: 3789, column: 1, scope: !9524)
!9562 = distinct !DISubprogram(name: "drm_dp_mst_topology_mgr_invalidate_mstb", scope: !3, file: !3, line: 3756, type: !9377, scopeLine: 3757, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9563 = !DILocalVariable(name: "mstb", arg: 1, scope: !9562, file: !3, line: 3756, type: !391)
!9564 = !DILocation(line: 3756, column: 67, scope: !9562)
!9565 = !DILocalVariable(name: "port", scope: !9562, file: !3, line: 3758, type: !345)
!9566 = !DILocation(line: 3758, column: 26, scope: !9562)
!9567 = !DILocation(line: 3761, column: 2, scope: !9562)
!9568 = !DILocation(line: 3761, column: 8, scope: !9562)
!9569 = !DILocation(line: 3761, column: 26, scope: !9562)
!9570 = !DILocalVariable(name: "__mptr", scope: !9571, file: !3, line: 3763, type: !344)
!9571 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 3763, column: 2)
!9572 = distinct !DILexicalBlock(scope: !9562, file: !3, line: 3763, column: 2)
!9573 = !DILocation(line: 3763, column: 2, scope: !9571)
!9574 = !DILocation(line: 3763, column: 2, scope: !9575)
!9575 = distinct !DILexicalBlock(scope: !9571, file: !3, line: 3763, column: 2)
!9576 = !DILocation(line: 3763, column: 2, scope: !9572)
!9577 = !DILocation(line: 3763, column: 2, scope: !9578)
!9578 = distinct !DILexicalBlock(scope: !9572, file: !3, line: 3763, column: 2)
!9579 = !DILocation(line: 3764, column: 7, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9578, file: !3, line: 3764, column: 7)
!9581 = !DILocation(line: 3764, column: 13, scope: !9580)
!9582 = !DILocation(line: 3764, column: 7, scope: !9578)
!9583 = !DILocation(line: 3765, column: 44, scope: !9580)
!9584 = !DILocation(line: 3765, column: 50, scope: !9580)
!9585 = !DILocation(line: 3765, column: 4, scope: !9580)
!9586 = !DILocalVariable(name: "__mptr", scope: !9587, file: !3, line: 3763, type: !344)
!9587 = distinct !DILexicalBlock(scope: !9578, file: !3, line: 3763, column: 2)
!9588 = !DILocation(line: 3763, column: 2, scope: !9587)
!9589 = !DILocation(line: 3763, column: 2, scope: !9590)
!9590 = distinct !DILexicalBlock(scope: !9587, file: !3, line: 3763, column: 2)
!9591 = distinct !{!9591, !9576, !9592}
!9592 = !DILocation(line: 3765, column: 54, scope: !9572)
!9593 = !DILocation(line: 3766, column: 1, scope: !9562)
!9594 = distinct !DISubprogram(name: "drm_dp_mst_topology_mgr_resume", scope: !3, file: !3, line: 3812, type: !9144, scopeLine: 3814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9595 = !DILocalVariable(name: "mgr", arg: 1, scope: !9594, file: !3, line: 3812, type: !406)
!9596 = !DILocation(line: 3812, column: 68, scope: !9594)
!9597 = !DILocalVariable(name: "sync", arg: 2, scope: !9594, file: !3, line: 3813, type: !370)
!9598 = !DILocation(line: 3813, column: 13, scope: !9594)
!9599 = !DILocalVariable(name: "ret", scope: !9594, file: !3, line: 3815, type: !115)
!9600 = !DILocation(line: 3815, column: 6, scope: !9594)
!9601 = !DILocalVariable(name: "guid", scope: !9594, file: !3, line: 3816, type: !5839)
!9602 = !DILocation(line: 3816, column: 5, scope: !9594)
!9603 = !DILocation(line: 3818, column: 14, scope: !9594)
!9604 = !DILocation(line: 3818, column: 19, scope: !9594)
!9605 = !DILocation(line: 3818, column: 2, scope: !9594)
!9606 = !DILocation(line: 3819, column: 7, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 3819, column: 6)
!9608 = !DILocation(line: 3819, column: 12, scope: !9607)
!9609 = !DILocation(line: 3819, column: 6, scope: !9594)
!9610 = !DILocation(line: 3820, column: 3, scope: !9607)
!9611 = !DILocation(line: 3822, column: 25, scope: !9594)
!9612 = !DILocation(line: 3822, column: 30, scope: !9594)
!9613 = !DILocation(line: 3822, column: 48, scope: !9594)
!9614 = !DILocation(line: 3822, column: 53, scope: !9594)
!9615 = !DILocation(line: 3822, column: 8, scope: !9594)
!9616 = !DILocation(line: 3822, column: 6, scope: !9594)
!9617 = !DILocation(line: 3824, column: 6, scope: !9618)
!9618 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 3824, column: 6)
!9619 = !DILocation(line: 3824, column: 10, scope: !9618)
!9620 = !DILocation(line: 3824, column: 6, scope: !9594)
!9621 = !DILocation(line: 3825, column: 3, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9618, file: !3, line: 3824, column: 35)
!9623 = !DILocation(line: 3826, column: 3, scope: !9622)
!9624 = !DILocation(line: 3829, column: 27, scope: !9594)
!9625 = !DILocation(line: 3829, column: 32, scope: !9594)
!9626 = !DILocation(line: 3829, column: 8, scope: !9594)
!9627 = !DILocation(line: 3829, column: 6, scope: !9594)
!9628 = !DILocation(line: 3833, column: 6, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 3833, column: 6)
!9630 = !DILocation(line: 3833, column: 10, scope: !9629)
!9631 = !DILocation(line: 3833, column: 6, scope: !9594)
!9632 = !DILocation(line: 3834, column: 3, scope: !9633)
!9633 = distinct !DILexicalBlock(scope: !9629, file: !3, line: 3833, column: 15)
!9634 = !DILocation(line: 3835, column: 3, scope: !9633)
!9635 = !DILocation(line: 3839, column: 25, scope: !9594)
!9636 = !DILocation(line: 3839, column: 30, scope: !9594)
!9637 = !DILocation(line: 3839, column: 44, scope: !9594)
!9638 = !DILocation(line: 3839, column: 8, scope: !9594)
!9639 = !DILocation(line: 3839, column: 6, scope: !9594)
!9640 = !DILocation(line: 3840, column: 6, scope: !9641)
!9641 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 3840, column: 6)
!9642 = !DILocation(line: 3840, column: 10, scope: !9641)
!9643 = !DILocation(line: 3840, column: 6, scope: !9594)
!9644 = !DILocation(line: 3841, column: 3, scope: !9645)
!9645 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 3840, column: 17)
!9646 = !DILocation(line: 3842, column: 3, scope: !9645)
!9647 = !DILocation(line: 3845, column: 31, scope: !9594)
!9648 = !DILocation(line: 3845, column: 36, scope: !9594)
!9649 = !DILocation(line: 3845, column: 49, scope: !9594)
!9650 = !DILocation(line: 3845, column: 8, scope: !9594)
!9651 = !DILocation(line: 3845, column: 6, scope: !9594)
!9652 = !DILocation(line: 3846, column: 6, scope: !9653)
!9653 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 3846, column: 6)
!9654 = !DILocation(line: 3846, column: 6, scope: !9594)
!9655 = !DILocation(line: 3847, column: 3, scope: !9656)
!9656 = distinct !DILexicalBlock(scope: !9653, file: !3, line: 3846, column: 11)
!9657 = !DILocation(line: 3848, column: 3, scope: !9656)
!9658 = !DILocation(line: 3856, column: 13, scope: !9594)
!9659 = !DILocation(line: 3856, column: 30, scope: !9594)
!9660 = !DILocation(line: 3856, column: 35, scope: !9594)
!9661 = !DILocation(line: 3856, column: 2, scope: !9594)
!9662 = !DILocation(line: 3857, column: 16, scope: !9594)
!9663 = !DILocation(line: 3857, column: 21, scope: !9594)
!9664 = !DILocation(line: 3857, column: 2, scope: !9594)
!9665 = !DILocation(line: 3859, column: 6, scope: !9666)
!9666 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 3859, column: 6)
!9667 = !DILocation(line: 3859, column: 6, scope: !9594)
!9668 = !DILocation(line: 3860, column: 3, scope: !9669)
!9669 = distinct !DILexicalBlock(scope: !9666, file: !3, line: 3859, column: 12)
!9670 = !DILocation(line: 3861, column: 15, scope: !9669)
!9671 = !DILocation(line: 3861, column: 20, scope: !9669)
!9672 = !DILocation(line: 3861, column: 3, scope: !9669)
!9673 = !DILocation(line: 3862, column: 2, scope: !9669)
!9674 = !DILocation(line: 3864, column: 2, scope: !9594)
!9675 = !DILabel(scope: !9594, name: "out_fail", file: !3, line: 3866)
!9676 = !DILocation(line: 3866, column: 1, scope: !9594)
!9677 = !DILocation(line: 3867, column: 16, scope: !9594)
!9678 = !DILocation(line: 3867, column: 21, scope: !9594)
!9679 = !DILocation(line: 3867, column: 2, scope: !9594)
!9680 = !DILocation(line: 3868, column: 2, scope: !9594)
!9681 = !DILocation(line: 3869, column: 1, scope: !9594)
!9682 = distinct !DISubprogram(name: "drm_dp_check_mstb_guid", scope: !3, file: !3, line: 2206, type: !9683, scopeLine: 2207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9683 = !DISubroutineType(types: !9684)
!9684 = !{!115, !391, !6180}
!9685 = !DILocalVariable(name: "mstb", arg: 1, scope: !9682, file: !3, line: 2206, type: !391)
!9686 = !DILocation(line: 2206, column: 61, scope: !9682)
!9687 = !DILocalVariable(name: "guid", arg: 2, scope: !9682, file: !3, line: 2206, type: !6180)
!9688 = !DILocation(line: 2206, column: 71, scope: !9682)
!9689 = !DILocalVariable(name: "ret", scope: !9682, file: !3, line: 2208, type: !115)
!9690 = !DILocation(line: 2208, column: 6, scope: !9682)
!9691 = !DILocation(line: 2210, column: 9, scope: !9682)
!9692 = !DILocation(line: 2210, column: 15, scope: !9682)
!9693 = !DILocation(line: 2210, column: 2, scope: !9682)
!9694 = !DILocation(line: 2210, column: 21, scope: !9682)
!9695 = !DILocation(line: 2212, column: 28, scope: !9696)
!9696 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2212, column: 6)
!9697 = !DILocation(line: 2212, column: 34, scope: !9696)
!9698 = !DILocation(line: 2212, column: 39, scope: !9696)
!9699 = !DILocation(line: 2212, column: 45, scope: !9696)
!9700 = !DILocation(line: 2212, column: 7, scope: !9696)
!9701 = !DILocation(line: 2212, column: 6, scope: !9682)
!9702 = !DILocation(line: 2213, column: 7, scope: !9703)
!9703 = distinct !DILexicalBlock(scope: !9704, file: !3, line: 2213, column: 7)
!9704 = distinct !DILexicalBlock(scope: !9696, file: !3, line: 2212, column: 52)
!9705 = !DILocation(line: 2213, column: 13, scope: !9703)
!9706 = !DILocation(line: 2213, column: 7, scope: !9704)
!9707 = !DILocation(line: 2214, column: 33, scope: !9708)
!9708 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2213, column: 26)
!9709 = !DILocation(line: 2214, column: 39, scope: !9708)
!9710 = !DILocation(line: 2215, column: 12, scope: !9708)
!9711 = !DILocation(line: 2215, column: 18, scope: !9708)
!9712 = !DILocation(line: 2216, column: 25, scope: !9708)
!9713 = !DILocation(line: 2216, column: 31, scope: !9708)
!9714 = !DILocation(line: 2214, column: 10, scope: !9708)
!9715 = !DILocation(line: 2214, column: 8, scope: !9708)
!9716 = !DILocation(line: 2217, column: 3, scope: !9708)
!9717 = !DILocation(line: 2218, column: 28, scope: !9718)
!9718 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2217, column: 10)
!9719 = !DILocation(line: 2218, column: 34, scope: !9718)
!9720 = !DILocation(line: 2218, column: 39, scope: !9718)
!9721 = !DILocation(line: 2219, column: 16, scope: !9718)
!9722 = !DILocation(line: 2219, column: 22, scope: !9718)
!9723 = !DILocation(line: 2218, column: 10, scope: !9718)
!9724 = !DILocation(line: 2218, column: 8, scope: !9718)
!9725 = !DILocation(line: 2221, column: 2, scope: !9704)
!9726 = !DILocation(line: 2223, column: 6, scope: !9727)
!9727 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 2223, column: 6)
!9728 = !DILocation(line: 2223, column: 10, scope: !9727)
!9729 = !DILocation(line: 2223, column: 15, scope: !9727)
!9730 = !DILocation(line: 2223, column: 18, scope: !9727)
!9731 = !DILocation(line: 2223, column: 22, scope: !9727)
!9732 = !DILocation(line: 2223, column: 6, scope: !9682)
!9733 = !DILocation(line: 2224, column: 3, scope: !9727)
!9734 = !DILocation(line: 2226, column: 9, scope: !9682)
!9735 = !DILocation(line: 2226, column: 13, scope: !9682)
!9736 = !DILocation(line: 2226, column: 25, scope: !9682)
!9737 = !DILocation(line: 2226, column: 2, scope: !9682)
!9738 = !DILocation(line: 2227, column: 1, scope: !9682)
!9739 = distinct !DISubprogram(name: "drm_dp_mst_hpd_irq", scope: !3, file: !3, line: 4155, type: !9740, scopeLine: 4156, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9740 = !DISubroutineType(types: !9741)
!9741 = !{!115, !406, !6180, !2303}
!9742 = !DILocalVariable(name: "mgr", arg: 1, scope: !9739, file: !3, line: 4155, type: !406)
!9743 = !DILocation(line: 4155, column: 56, scope: !9739)
!9744 = !DILocalVariable(name: "esi", arg: 2, scope: !9739, file: !3, line: 4155, type: !6180)
!9745 = !DILocation(line: 4155, column: 65, scope: !9739)
!9746 = !DILocalVariable(name: "handled", arg: 3, scope: !9739, file: !3, line: 4155, type: !2303)
!9747 = !DILocation(line: 4155, column: 76, scope: !9739)
!9748 = !DILocalVariable(name: "ret", scope: !9739, file: !3, line: 4157, type: !115)
!9749 = !DILocation(line: 4157, column: 6, scope: !9739)
!9750 = !DILocalVariable(name: "sc", scope: !9739, file: !3, line: 4158, type: !115)
!9751 = !DILocation(line: 4158, column: 6, scope: !9739)
!9752 = !DILocation(line: 4159, column: 3, scope: !9739)
!9753 = !DILocation(line: 4159, column: 11, scope: !9739)
!9754 = !DILocation(line: 4160, column: 7, scope: !9739)
!9755 = !DILocation(line: 4160, column: 14, scope: !9739)
!9756 = !DILocation(line: 4160, column: 5, scope: !9739)
!9757 = !DILocation(line: 4162, column: 6, scope: !9758)
!9758 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 4162, column: 6)
!9759 = !DILocation(line: 4162, column: 12, scope: !9758)
!9760 = !DILocation(line: 4162, column: 17, scope: !9758)
!9761 = !DILocation(line: 4162, column: 9, scope: !9758)
!9762 = !DILocation(line: 4162, column: 6, scope: !9739)
!9763 = !DILocation(line: 4163, column: 21, scope: !9764)
!9764 = distinct !DILexicalBlock(scope: !9758, file: !3, line: 4162, column: 29)
!9765 = !DILocation(line: 4163, column: 3, scope: !9764)
!9766 = !DILocation(line: 4163, column: 8, scope: !9764)
!9767 = !DILocation(line: 4163, column: 19, scope: !9764)
!9768 = !DILocation(line: 4164, column: 4, scope: !9764)
!9769 = !DILocation(line: 4164, column: 12, scope: !9764)
!9770 = !DILocation(line: 4165, column: 2, scope: !9764)
!9771 = !DILocation(line: 4167, column: 6, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 4167, column: 6)
!9773 = !DILocation(line: 4167, column: 13, scope: !9772)
!9774 = !DILocation(line: 4167, column: 6, scope: !9739)
!9775 = !DILocation(line: 4168, column: 36, scope: !9776)
!9776 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 4167, column: 36)
!9777 = !DILocation(line: 4168, column: 9, scope: !9776)
!9778 = !DILocation(line: 4168, column: 7, scope: !9776)
!9779 = !DILocation(line: 4169, column: 4, scope: !9776)
!9780 = !DILocation(line: 4169, column: 12, scope: !9776)
!9781 = !DILocation(line: 4170, column: 2, scope: !9776)
!9782 = !DILocation(line: 4172, column: 6, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9739, file: !3, line: 4172, column: 6)
!9784 = !DILocation(line: 4172, column: 13, scope: !9783)
!9785 = !DILocation(line: 4172, column: 6, scope: !9739)
!9786 = !DILocation(line: 4173, column: 35, scope: !9787)
!9787 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 4172, column: 34)
!9788 = !DILocation(line: 4173, column: 10, scope: !9787)
!9789 = !DILocation(line: 4173, column: 7, scope: !9787)
!9790 = !DILocation(line: 4174, column: 4, scope: !9787)
!9791 = !DILocation(line: 4174, column: 12, scope: !9787)
!9792 = !DILocation(line: 4175, column: 2, scope: !9787)
!9793 = !DILocation(line: 4177, column: 21, scope: !9739)
!9794 = !DILocation(line: 4177, column: 2, scope: !9739)
!9795 = !DILocation(line: 4178, column: 9, scope: !9739)
!9796 = !DILocation(line: 4178, column: 2, scope: !9739)
!9797 = distinct !DISubprogram(name: "drm_dp_mst_handle_down_rep", scope: !3, file: !3, line: 3952, type: !8563, scopeLine: 3953, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9798 = !DILocalVariable(name: "mgr", arg: 1, scope: !9797, file: !3, line: 3952, type: !406)
!9799 = !DILocation(line: 3952, column: 71, scope: !9797)
!9800 = !DILocalVariable(name: "txmsg", scope: !9797, file: !3, line: 3954, type: !6003)
!9801 = !DILocation(line: 3954, column: 33, scope: !9797)
!9802 = !DILocalVariable(name: "mstb", scope: !9797, file: !3, line: 3955, type: !391)
!9803 = !DILocation(line: 3955, column: 28, scope: !9797)
!9804 = !DILocalVariable(name: "msg", scope: !9797, file: !3, line: 3956, type: !9805)
!9805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5765, size: 64)
!9806 = !DILocation(line: 3956, column: 33, scope: !9797)
!9807 = !DILocation(line: 3956, column: 40, scope: !9797)
!9808 = !DILocation(line: 3956, column: 45, scope: !9797)
!9809 = !DILocation(line: 3958, column: 29, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3958, column: 6)
!9811 = !DILocation(line: 3958, column: 7, scope: !9810)
!9812 = !DILocation(line: 3958, column: 6, scope: !9797)
!9813 = !DILocation(line: 3959, column: 3, scope: !9810)
!9814 = !DILocation(line: 3962, column: 7, scope: !9815)
!9815 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3962, column: 6)
!9816 = !DILocation(line: 3962, column: 12, scope: !9815)
!9817 = !DILocation(line: 3962, column: 6, scope: !9797)
!9818 = !DILocation(line: 3963, column: 3, scope: !9815)
!9819 = !DILocation(line: 3966, column: 14, scope: !9797)
!9820 = !DILocation(line: 3966, column: 19, scope: !9797)
!9821 = !DILocation(line: 3966, column: 2, scope: !9797)
!9822 = !DILocalVariable(name: "head__", scope: !9823, file: !3, line: 3967, type: !388)
!9823 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3967, column: 10)
!9824 = !DILocation(line: 3967, column: 10, scope: !9823)
!9825 = !DILocalVariable(name: "pos__", scope: !9823, file: !3, line: 3967, type: !388)
!9826 = !DILocation(line: 3967, column: 10, scope: !9827)
!9827 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 3967, column: 10)
!9828 = !DILocation(line: 3967, column: 10, scope: !9829)
!9829 = distinct !DILexicalBlock(scope: !9827, file: !3, line: 3967, column: 10)
!9830 = !DILocalVariable(name: "__mptr", scope: !9831, file: !3, line: 3967, type: !344)
!9831 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 3967, column: 10)
!9832 = !DILocation(line: 3967, column: 10, scope: !9831)
!9833 = !DILocation(line: 3967, column: 10, scope: !9834)
!9834 = distinct !DILexicalBlock(scope: !9831, file: !3, line: 3967, column: 10)
!9835 = !DILocation(line: 3967, column: 8, scope: !9797)
!9836 = !DILocation(line: 3969, column: 16, scope: !9797)
!9837 = !DILocation(line: 3969, column: 21, scope: !9797)
!9838 = !DILocation(line: 3969, column: 2, scope: !9797)
!9839 = !DILocation(line: 3972, column: 7, scope: !9840)
!9840 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3972, column: 6)
!9841 = !DILocation(line: 3972, column: 13, scope: !9840)
!9842 = !DILocation(line: 3972, column: 16, scope: !9840)
!9843 = !DILocation(line: 3972, column: 23, scope: !9840)
!9844 = !DILocation(line: 3972, column: 30, scope: !9840)
!9845 = !DILocation(line: 3972, column: 27, scope: !9840)
!9846 = !DILocation(line: 3972, column: 6, scope: !9797)
!9847 = !DILocalVariable(name: "hdr", scope: !9848, file: !3, line: 3973, type: !9849)
!9848 = distinct !DILexicalBlock(scope: !9840, file: !3, line: 3972, column: 36)
!9849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5780, size: 64)
!9850 = !DILocation(line: 3973, column: 35, scope: !9848)
!9851 = !DILocation(line: 3975, column: 10, scope: !9848)
!9852 = !DILocation(line: 3975, column: 15, scope: !9848)
!9853 = !DILocation(line: 3975, column: 7, scope: !9848)
!9854 = !DILocation(line: 3976, column: 3, scope: !9848)
!9855 = !DILocation(line: 3979, column: 3, scope: !9848)
!9856 = !DILocation(line: 3982, column: 30, scope: !9797)
!9857 = !DILocation(line: 3982, column: 36, scope: !9797)
!9858 = !DILocation(line: 3982, column: 43, scope: !9797)
!9859 = !DILocation(line: 3982, column: 2, scope: !9797)
!9860 = !DILocation(line: 3984, column: 6, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 3984, column: 6)
!9862 = !DILocation(line: 3984, column: 13, scope: !9861)
!9863 = !DILocation(line: 3984, column: 19, scope: !9861)
!9864 = !DILocation(line: 3984, column: 30, scope: !9861)
!9865 = !DILocation(line: 3984, column: 6, scope: !9797)
!9866 = !DILocation(line: 3985, column: 3, scope: !9867)
!9867 = distinct !DILexicalBlock(scope: !9861, file: !3, line: 3984, column: 56)
!9868 = !DILocation(line: 3991, column: 2, scope: !9867)
!9869 = !DILocation(line: 3993, column: 9, scope: !9797)
!9870 = !DILocation(line: 3993, column: 2, scope: !9797)
!9871 = !DILocation(line: 3994, column: 31, scope: !9797)
!9872 = !DILocation(line: 3994, column: 2, scope: !9797)
!9873 = !DILocation(line: 3996, column: 14, scope: !9797)
!9874 = !DILocation(line: 3996, column: 19, scope: !9797)
!9875 = !DILocation(line: 3996, column: 2, scope: !9797)
!9876 = !DILocation(line: 3997, column: 2, scope: !9797)
!9877 = !DILocation(line: 3997, column: 9, scope: !9797)
!9878 = !DILocation(line: 3997, column: 15, scope: !9797)
!9879 = !DILocation(line: 3998, column: 12, scope: !9797)
!9880 = !DILocation(line: 3998, column: 19, scope: !9797)
!9881 = !DILocation(line: 3998, column: 2, scope: !9797)
!9882 = !DILocation(line: 3999, column: 16, scope: !9797)
!9883 = !DILocation(line: 3999, column: 21, scope: !9797)
!9884 = !DILocation(line: 3999, column: 2, scope: !9797)
!9885 = !DILocation(line: 4001, column: 2, scope: !9797)
!9886 = !DILocation(line: 4003, column: 2, scope: !9797)
!9887 = !DILabel(scope: !9797, name: "out_clear_reply", file: !3, line: 4005)
!9888 = !DILocation(line: 4005, column: 1, scope: !9797)
!9889 = !DILocation(line: 4006, column: 9, scope: !9797)
!9890 = !DILocation(line: 4006, column: 2, scope: !9797)
!9891 = !DILabel(scope: !9797, name: "out", file: !3, line: 4007)
!9892 = !DILocation(line: 4007, column: 1, scope: !9797)
!9893 = !DILocation(line: 4008, column: 6, scope: !9894)
!9894 = distinct !DILexicalBlock(scope: !9797, file: !3, line: 4008, column: 6)
!9895 = !DILocation(line: 4008, column: 6, scope: !9797)
!9896 = !DILocation(line: 4009, column: 32, scope: !9894)
!9897 = !DILocation(line: 4009, column: 3, scope: !9894)
!9898 = !DILocation(line: 4011, column: 2, scope: !9797)
!9899 = !DILocation(line: 4012, column: 1, scope: !9797)
!9900 = distinct !DISubprogram(name: "drm_dp_mst_handle_up_req", scope: !3, file: !3, line: 4083, type: !8563, scopeLine: 4084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!9901 = !DILocalVariable(name: "mgr", arg: 1, scope: !9900, file: !3, line: 4083, type: !406)
!9902 = !DILocation(line: 4083, column: 69, scope: !9900)
!9903 = !DILocalVariable(name: "up_req", scope: !9900, file: !3, line: 4085, type: !6123)
!9904 = !DILocation(line: 4085, column: 32, scope: !9900)
!9905 = !DILocation(line: 4087, column: 29, scope: !9906)
!9906 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4087, column: 6)
!9907 = !DILocation(line: 4087, column: 7, scope: !9906)
!9908 = !DILocation(line: 4087, column: 6, scope: !9900)
!9909 = !DILocation(line: 4088, column: 3, scope: !9906)
!9910 = !DILocation(line: 4090, column: 7, scope: !9911)
!9911 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4090, column: 6)
!9912 = !DILocation(line: 4090, column: 12, scope: !9911)
!9913 = !DILocation(line: 4090, column: 24, scope: !9911)
!9914 = !DILocation(line: 4090, column: 6, scope: !9900)
!9915 = !DILocation(line: 4091, column: 3, scope: !9911)
!9916 = !DILocation(line: 4093, column: 11, scope: !9900)
!9917 = !DILocation(line: 4093, column: 9, scope: !9900)
!9918 = !DILocation(line: 4094, column: 7, scope: !9919)
!9919 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4094, column: 6)
!9920 = !DILocation(line: 4094, column: 6, scope: !9900)
!9921 = !DILocation(line: 4095, column: 3, scope: !9922)
!9922 = distinct !DILexicalBlock(scope: !9919, file: !3, line: 4094, column: 15)
!9923 = !DILocation(line: 4096, column: 3, scope: !9922)
!9924 = !DILocation(line: 4098, column: 18, scope: !9900)
!9925 = !DILocation(line: 4098, column: 26, scope: !9900)
!9926 = !DILocation(line: 4098, column: 2, scope: !9900)
!9927 = !DILocation(line: 4100, column: 29, scope: !9900)
!9928 = !DILocation(line: 4100, column: 34, scope: !9900)
!9929 = !DILocation(line: 4100, column: 48, scope: !9900)
!9930 = !DILocation(line: 4100, column: 56, scope: !9900)
!9931 = !DILocation(line: 4100, column: 2, scope: !9900)
!9932 = !DILocation(line: 4102, column: 6, scope: !9933)
!9933 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4102, column: 6)
!9934 = !DILocation(line: 4102, column: 14, scope: !9933)
!9935 = !DILocation(line: 4102, column: 18, scope: !9933)
!9936 = !DILocation(line: 4102, column: 27, scope: !9933)
!9937 = !DILocation(line: 4102, column: 58, scope: !9933)
!9938 = !DILocation(line: 4103, column: 6, scope: !9933)
!9939 = !DILocation(line: 4103, column: 14, scope: !9933)
!9940 = !DILocation(line: 4103, column: 18, scope: !9933)
!9941 = !DILocation(line: 4103, column: 27, scope: !9933)
!9942 = !DILocation(line: 4102, column: 6, scope: !9900)
!9943 = !DILocation(line: 4104, column: 3, scope: !9944)
!9944 = distinct !DILexicalBlock(scope: !9933, file: !3, line: 4103, column: 57)
!9945 = !DILocation(line: 4106, column: 9, scope: !9944)
!9946 = !DILocation(line: 4106, column: 3, scope: !9944)
!9947 = !DILocation(line: 4107, column: 3, scope: !9944)
!9948 = !DILocation(line: 4110, column: 27, scope: !9900)
!9949 = !DILocation(line: 4110, column: 32, scope: !9900)
!9950 = !DILocation(line: 4110, column: 37, scope: !9900)
!9951 = !DILocation(line: 4110, column: 50, scope: !9900)
!9952 = !DILocation(line: 4110, column: 58, scope: !9900)
!9953 = !DILocation(line: 4110, column: 62, scope: !9900)
!9954 = !DILocation(line: 4110, column: 2, scope: !9900)
!9955 = !DILocation(line: 4113, column: 6, scope: !9956)
!9956 = distinct !DILexicalBlock(scope: !9900, file: !3, line: 4113, column: 6)
!9957 = !DILocation(line: 4113, column: 14, scope: !9956)
!9958 = !DILocation(line: 4113, column: 18, scope: !9956)
!9959 = !DILocation(line: 4113, column: 27, scope: !9956)
!9960 = !DILocation(line: 4113, column: 6, scope: !9900)
!9961 = !DILocalVariable(name: "conn_stat", scope: !9962, file: !3, line: 4114, type: !9963)
!9962 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 4113, column: 59)
!9963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9964, size: 64)
!9964 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6135)
!9965 = !DILocation(line: 4114, column: 49, scope: !9962)
!9966 = !DILocation(line: 4115, column: 5, scope: !9962)
!9967 = !DILocation(line: 4115, column: 13, scope: !9962)
!9968 = !DILocation(line: 4115, column: 17, scope: !9962)
!9969 = !DILocation(line: 4115, column: 19, scope: !9962)
!9970 = !DILocation(line: 4117, column: 3, scope: !9962)
!9971 = !DILocation(line: 4124, column: 2, scope: !9962)
!9972 = !DILocation(line: 4124, column: 13, scope: !9973)
!9973 = distinct !DILexicalBlock(scope: !9956, file: !3, line: 4124, column: 13)
!9974 = !DILocation(line: 4124, column: 21, scope: !9973)
!9975 = !DILocation(line: 4124, column: 25, scope: !9973)
!9976 = !DILocation(line: 4124, column: 34, scope: !9973)
!9977 = !DILocation(line: 4124, column: 13, scope: !9956)
!9978 = !DILocalVariable(name: "res_stat", scope: !9979, file: !3, line: 4125, type: !9980)
!9979 = distinct !DILexicalBlock(scope: !9973, file: !3, line: 4124, column: 64)
!9980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9981, size: 64)
!9981 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6149)
!9982 = !DILocation(line: 4125, column: 47, scope: !9979)
!9983 = !DILocation(line: 4126, column: 5, scope: !9979)
!9984 = !DILocation(line: 4126, column: 13, scope: !9979)
!9985 = !DILocation(line: 4126, column: 17, scope: !9979)
!9986 = !DILocation(line: 4126, column: 19, scope: !9979)
!9987 = !DILocation(line: 4128, column: 3, scope: !9979)
!9988 = !DILocation(line: 4131, column: 2, scope: !9979)
!9989 = !DILocation(line: 4133, column: 2, scope: !9900)
!9990 = !DILocation(line: 4133, column: 10, scope: !9900)
!9991 = !DILocation(line: 4133, column: 16, scope: !9900)
!9992 = !DILocation(line: 4133, column: 21, scope: !9900)
!9993 = !DILocation(line: 4133, column: 33, scope: !9900)
!9994 = !DILocation(line: 4134, column: 14, scope: !9900)
!9995 = !DILocation(line: 4134, column: 19, scope: !9900)
!9996 = !DILocation(line: 4134, column: 2, scope: !9900)
!9997 = !DILocation(line: 4135, column: 17, scope: !9900)
!9998 = !DILocation(line: 4135, column: 25, scope: !9900)
!9999 = !DILocation(line: 4135, column: 32, scope: !9900)
!10000 = !DILocation(line: 4135, column: 37, scope: !9900)
!10001 = !DILocation(line: 4135, column: 2, scope: !9900)
!10002 = !DILocation(line: 4136, column: 16, scope: !9900)
!10003 = !DILocation(line: 4136, column: 21, scope: !9900)
!10004 = !DILocation(line: 4136, column: 2, scope: !9900)
!10005 = !DILocation(line: 4137, column: 13, scope: !9900)
!10006 = !DILocation(line: 4137, column: 30, scope: !9900)
!10007 = !DILocation(line: 4137, column: 35, scope: !9900)
!10008 = !DILocation(line: 4137, column: 2, scope: !9900)
!10009 = !DILabel(scope: !9900, name: "out", file: !3, line: 4139)
!10010 = !DILocation(line: 4139, column: 1, scope: !9900)
!10011 = !DILocation(line: 4140, column: 10, scope: !9900)
!10012 = !DILocation(line: 4140, column: 15, scope: !9900)
!10013 = !DILocation(line: 4140, column: 2, scope: !9900)
!10014 = !DILocation(line: 4141, column: 2, scope: !9900)
!10015 = !DILocation(line: 4142, column: 1, scope: !9900)
!10016 = distinct !DISubprogram(name: "drm_dp_mst_kick_tx", scope: !3, file: !3, line: 4707, type: !5724, scopeLine: 4708, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10017 = !DILocalVariable(name: "mgr", arg: 1, scope: !10016, file: !3, line: 4707, type: !406)
!10018 = !DILocation(line: 4707, column: 64, scope: !10016)
!10019 = !DILocation(line: 4709, column: 13, scope: !10016)
!10020 = !DILocation(line: 4709, column: 30, scope: !10016)
!10021 = !DILocation(line: 4709, column: 35, scope: !10016)
!10022 = !DILocation(line: 4709, column: 2, scope: !10016)
!10023 = !DILocation(line: 4710, column: 1, scope: !10016)
!10024 = distinct !DISubprogram(name: "drm_dp_mst_detect_port", scope: !3, file: !3, line: 4192, type: !10025, scopeLine: 4196, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10025 = !DISubroutineType(types: !10026)
!10026 = !{!115, !4829, !4432, !406, !345}
!10027 = !DILocalVariable(name: "connector", arg: 1, scope: !10024, file: !3, line: 4192, type: !4829)
!10028 = !DILocation(line: 4192, column: 46, scope: !10024)
!10029 = !DILocalVariable(name: "ctx", arg: 2, scope: !10024, file: !3, line: 4193, type: !4432)
!10030 = !DILocation(line: 4193, column: 42, scope: !10024)
!10031 = !DILocalVariable(name: "mgr", arg: 3, scope: !10024, file: !3, line: 4194, type: !406)
!10032 = !DILocation(line: 4194, column: 42, scope: !10024)
!10033 = !DILocalVariable(name: "port", arg: 4, scope: !10024, file: !3, line: 4195, type: !345)
!10034 = !DILocation(line: 4195, column: 34, scope: !10024)
!10035 = !DILocalVariable(name: "ret", scope: !10024, file: !3, line: 4197, type: !115)
!10036 = !DILocation(line: 4197, column: 6, scope: !10024)
!10037 = !DILocation(line: 4200, column: 48, scope: !10024)
!10038 = !DILocation(line: 4200, column: 53, scope: !10024)
!10039 = !DILocation(line: 4200, column: 9, scope: !10024)
!10040 = !DILocation(line: 4200, column: 7, scope: !10024)
!10041 = !DILocation(line: 4201, column: 7, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 4201, column: 6)
!10043 = !DILocation(line: 4201, column: 6, scope: !10024)
!10044 = !DILocation(line: 4202, column: 3, scope: !10042)
!10045 = !DILocation(line: 4204, column: 26, scope: !10024)
!10046 = !DILocation(line: 4204, column: 31, scope: !10024)
!10047 = !DILocation(line: 4204, column: 36, scope: !10024)
!10048 = !DILocation(line: 4204, column: 42, scope: !10024)
!10049 = !DILocation(line: 4204, column: 8, scope: !10024)
!10050 = !DILocation(line: 4204, column: 6, scope: !10024)
!10051 = !DILocation(line: 4205, column: 6, scope: !10052)
!10052 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 4205, column: 6)
!10053 = !DILocation(line: 4205, column: 6, scope: !10024)
!10054 = !DILocation(line: 4206, column: 3, scope: !10052)
!10055 = !DILocation(line: 4208, column: 6, scope: !10024)
!10056 = !DILocation(line: 4210, column: 7, scope: !10057)
!10057 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 4210, column: 6)
!10058 = !DILocation(line: 4210, column: 13, scope: !10057)
!10059 = !DILocation(line: 4210, column: 6, scope: !10024)
!10060 = !DILocation(line: 4211, column: 3, scope: !10057)
!10061 = !DILocation(line: 4213, column: 10, scope: !10024)
!10062 = !DILocation(line: 4213, column: 16, scope: !10024)
!10063 = !DILocation(line: 4213, column: 2, scope: !10024)
!10064 = !DILocation(line: 4216, column: 8, scope: !10065)
!10065 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 4216, column: 7)
!10066 = distinct !DILexicalBlock(scope: !10024, file: !3, line: 4213, column: 21)
!10067 = !DILocation(line: 4216, column: 14, scope: !10065)
!10068 = !DILocation(line: 4216, column: 7, scope: !10066)
!10069 = !DILocation(line: 4217, column: 8, scope: !10065)
!10070 = !DILocation(line: 4217, column: 4, scope: !10065)
!10071 = !DILocation(line: 4218, column: 3, scope: !10066)
!10072 = !DILocation(line: 4221, column: 7, scope: !10066)
!10073 = !DILocation(line: 4223, column: 7, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 4223, column: 7)
!10075 = !DILocation(line: 4223, column: 13, scope: !10074)
!10076 = !DILocation(line: 4223, column: 22, scope: !10074)
!10077 = !DILocation(line: 4223, column: 27, scope: !10074)
!10078 = !DILocation(line: 4223, column: 31, scope: !10074)
!10079 = !DILocation(line: 4223, column: 37, scope: !10074)
!10080 = !DILocation(line: 4223, column: 7, scope: !10066)
!10081 = !DILocation(line: 4224, column: 37, scope: !10082)
!10082 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 4223, column: 50)
!10083 = !DILocation(line: 4224, column: 49, scope: !10082)
!10084 = !DILocation(line: 4224, column: 55, scope: !10082)
!10085 = !DILocation(line: 4224, column: 59, scope: !10082)
!10086 = !DILocation(line: 4224, column: 24, scope: !10082)
!10087 = !DILocation(line: 4224, column: 4, scope: !10082)
!10088 = !DILocation(line: 4224, column: 10, scope: !10082)
!10089 = !DILocation(line: 4224, column: 22, scope: !10082)
!10090 = !DILocation(line: 4225, column: 3, scope: !10082)
!10091 = !DILocation(line: 4226, column: 3, scope: !10066)
!10092 = !DILocation(line: 4228, column: 7, scope: !10093)
!10093 = distinct !DILexicalBlock(scope: !10066, file: !3, line: 4228, column: 7)
!10094 = !DILocation(line: 4228, column: 13, scope: !10093)
!10095 = !DILocation(line: 4228, column: 7, scope: !10066)
!10096 = !DILocation(line: 4229, column: 8, scope: !10093)
!10097 = !DILocation(line: 4229, column: 4, scope: !10093)
!10098 = !DILocation(line: 4230, column: 3, scope: !10066)
!10099 = !DILocation(line: 4231, column: 2, scope: !10066)
!10100 = !DILabel(scope: !10024, name: "out", file: !3, line: 4232)
!10101 = !DILocation(line: 4232, column: 1, scope: !10024)
!10102 = !DILocation(line: 4233, column: 31, scope: !10024)
!10103 = !DILocation(line: 4233, column: 2, scope: !10024)
!10104 = !DILocation(line: 4234, column: 9, scope: !10024)
!10105 = !DILocation(line: 4234, column: 2, scope: !10024)
!10106 = !DILocation(line: 4235, column: 1, scope: !10024)
!10107 = distinct !DISubprogram(name: "drm_dp_mst_get_edid", scope: !3, file: !3, line: 4248, type: !10108, scopeLine: 4249, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10108 = !DISubroutineType(types: !10109)
!10109 = !{!5846, !4829, !406, !345}
!10110 = !DILocalVariable(name: "connector", arg: 1, scope: !10107, file: !3, line: 4248, type: !4829)
!10111 = !DILocation(line: 4248, column: 56, scope: !10107)
!10112 = !DILocalVariable(name: "mgr", arg: 2, scope: !10107, file: !3, line: 4248, type: !406)
!10113 = !DILocation(line: 4248, column: 99, scope: !10107)
!10114 = !DILocalVariable(name: "port", arg: 3, scope: !10107, file: !3, line: 4248, type: !345)
!10115 = !DILocation(line: 4248, column: 128, scope: !10107)
!10116 = !DILocalVariable(name: "edid", scope: !10107, file: !3, line: 4250, type: !5846)
!10117 = !DILocation(line: 4250, column: 15, scope: !10107)
!10118 = !DILocation(line: 4253, column: 48, scope: !10107)
!10119 = !DILocation(line: 4253, column: 53, scope: !10107)
!10120 = !DILocation(line: 4253, column: 9, scope: !10107)
!10121 = !DILocation(line: 4253, column: 7, scope: !10107)
!10122 = !DILocation(line: 4254, column: 7, scope: !10123)
!10123 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 4254, column: 6)
!10124 = !DILocation(line: 4254, column: 6, scope: !10107)
!10125 = !DILocation(line: 4255, column: 3, scope: !10123)
!10126 = !DILocation(line: 4257, column: 6, scope: !10127)
!10127 = distinct !DILexicalBlock(scope: !10107, file: !3, line: 4257, column: 6)
!10128 = !DILocation(line: 4257, column: 12, scope: !10127)
!10129 = !DILocation(line: 4257, column: 6, scope: !10107)
!10130 = !DILocation(line: 4258, column: 29, scope: !10127)
!10131 = !DILocation(line: 4258, column: 35, scope: !10127)
!10132 = !DILocation(line: 4258, column: 10, scope: !10127)
!10133 = !DILocation(line: 4258, column: 8, scope: !10127)
!10134 = !DILocation(line: 4258, column: 3, scope: !10127)
!10135 = !DILocation(line: 4260, column: 23, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10127, file: !3, line: 4259, column: 7)
!10137 = !DILocation(line: 4260, column: 35, scope: !10136)
!10138 = !DILocation(line: 4260, column: 41, scope: !10136)
!10139 = !DILocation(line: 4260, column: 45, scope: !10136)
!10140 = !DILocation(line: 4260, column: 10, scope: !10136)
!10141 = !DILocation(line: 4260, column: 8, scope: !10136)
!10142 = !DILocation(line: 4262, column: 45, scope: !10107)
!10143 = !DILocation(line: 4262, column: 20, scope: !10107)
!10144 = !DILocation(line: 4262, column: 2, scope: !10107)
!10145 = !DILocation(line: 4262, column: 8, scope: !10107)
!10146 = !DILocation(line: 4262, column: 18, scope: !10107)
!10147 = !DILocation(line: 4263, column: 31, scope: !10107)
!10148 = !DILocation(line: 4263, column: 2, scope: !10107)
!10149 = !DILocation(line: 4264, column: 9, scope: !10107)
!10150 = !DILocation(line: 4264, column: 2, scope: !10107)
!10151 = !DILocation(line: 4265, column: 1, scope: !10107)
!10152 = distinct !DISubprogram(name: "drm_dp_find_vcpi_slots", scope: !3, file: !3, line: 4280, type: !10153, scopeLine: 4282, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10153 = !DISubroutineType(types: !10154)
!10154 = !{!115, !406, !115}
!10155 = !DILocalVariable(name: "mgr", arg: 1, scope: !10152, file: !3, line: 4280, type: !406)
!10156 = !DILocation(line: 4280, column: 60, scope: !10152)
!10157 = !DILocalVariable(name: "pbn", arg: 2, scope: !10152, file: !3, line: 4281, type: !115)
!10158 = !DILocation(line: 4281, column: 11, scope: !10152)
!10159 = !DILocalVariable(name: "num_slots", scope: !10152, file: !3, line: 4283, type: !115)
!10160 = !DILocation(line: 4283, column: 6, scope: !10152)
!10161 = !DILocation(line: 4285, column: 14, scope: !10152)
!10162 = !DILocation(line: 4285, column: 12, scope: !10152)
!10163 = !DILocation(line: 4288, column: 6, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10152, file: !3, line: 4288, column: 6)
!10165 = !DILocation(line: 4288, column: 16, scope: !10164)
!10166 = !DILocation(line: 4288, column: 6, scope: !10152)
!10167 = !DILocation(line: 4289, column: 3, scope: !10164)
!10168 = !DILocation(line: 4290, column: 9, scope: !10152)
!10169 = !DILocation(line: 4290, column: 2, scope: !10152)
!10170 = !DILocation(line: 4291, column: 1, scope: !10152)
!10171 = distinct !DISubprogram(name: "drm_dp_atomic_find_vcpi_slots", scope: !3, file: !3, line: 4344, type: !10172, scopeLine: 4348, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10172 = !DISubroutineType(types: !10173)
!10173 = !{!115, !3367, !406, !345, !115, !115}
!10174 = !DILocalVariable(name: "state", arg: 1, scope: !10171, file: !3, line: 4344, type: !3367)
!10175 = !DILocation(line: 4344, column: 60, scope: !10171)
!10176 = !DILocalVariable(name: "mgr", arg: 2, scope: !10171, file: !3, line: 4345, type: !406)
!10177 = !DILocation(line: 4345, column: 39, scope: !10171)
!10178 = !DILocalVariable(name: "port", arg: 3, scope: !10171, file: !3, line: 4346, type: !345)
!10179 = !DILocation(line: 4346, column: 31, scope: !10171)
!10180 = !DILocalVariable(name: "pbn", arg: 4, scope: !10171, file: !3, line: 4346, type: !115)
!10181 = !DILocation(line: 4346, column: 41, scope: !10171)
!10182 = !DILocalVariable(name: "pbn_div", arg: 5, scope: !10171, file: !3, line: 4347, type: !115)
!10183 = !DILocation(line: 4347, column: 11, scope: !10171)
!10184 = !DILocalVariable(name: "topology_state", scope: !10171, file: !3, line: 4349, type: !5988)
!10185 = !DILocation(line: 4349, column: 36, scope: !10171)
!10186 = !DILocalVariable(name: "pos", scope: !10171, file: !3, line: 4350, type: !5980)
!10187 = !DILocation(line: 4350, column: 33, scope: !10171)
!10188 = !DILocalVariable(name: "vcpi", scope: !10171, file: !3, line: 4350, type: !5980)
!10189 = !DILocation(line: 4350, column: 39, scope: !10171)
!10190 = !DILocalVariable(name: "prev_slots", scope: !10171, file: !3, line: 4351, type: !115)
!10191 = !DILocation(line: 4351, column: 6, scope: !10171)
!10192 = !DILocalVariable(name: "prev_bw", scope: !10171, file: !3, line: 4351, type: !115)
!10193 = !DILocation(line: 4351, column: 18, scope: !10171)
!10194 = !DILocalVariable(name: "req_slots", scope: !10171, file: !3, line: 4351, type: !115)
!10195 = !DILocation(line: 4351, column: 27, scope: !10171)
!10196 = !DILocation(line: 4353, column: 53, scope: !10171)
!10197 = !DILocation(line: 4353, column: 60, scope: !10171)
!10198 = !DILocation(line: 4353, column: 19, scope: !10171)
!10199 = !DILocation(line: 4353, column: 17, scope: !10171)
!10200 = !DILocation(line: 4354, column: 13, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 4354, column: 6)
!10202 = !DILocation(line: 4354, column: 6, scope: !10201)
!10203 = !DILocation(line: 4354, column: 6, scope: !10171)
!10204 = !DILocation(line: 4355, column: 18, scope: !10201)
!10205 = !DILocation(line: 4355, column: 10, scope: !10201)
!10206 = !DILocation(line: 4355, column: 3, scope: !10201)
!10207 = !DILocalVariable(name: "__mptr", scope: !10208, file: !3, line: 4358, type: !344)
!10208 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 4358, column: 2)
!10209 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 4358, column: 2)
!10210 = !DILocation(line: 4358, column: 2, scope: !10208)
!10211 = !DILocation(line: 4358, column: 2, scope: !10212)
!10212 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 4358, column: 2)
!10213 = !DILocation(line: 4358, column: 2, scope: !10209)
!10214 = !DILocation(line: 4358, column: 2, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10209, file: !3, line: 4358, column: 2)
!10216 = !DILocation(line: 4359, column: 7, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 4359, column: 7)
!10218 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 4358, column: 57)
!10219 = !DILocation(line: 4359, column: 12, scope: !10217)
!10220 = !DILocation(line: 4359, column: 20, scope: !10217)
!10221 = !DILocation(line: 4359, column: 17, scope: !10217)
!10222 = !DILocation(line: 4359, column: 7, scope: !10218)
!10223 = !DILocation(line: 4360, column: 11, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 4359, column: 26)
!10225 = !DILocation(line: 4360, column: 9, scope: !10224)
!10226 = !DILocation(line: 4361, column: 17, scope: !10224)
!10227 = !DILocation(line: 4361, column: 23, scope: !10224)
!10228 = !DILocation(line: 4361, column: 15, scope: !10224)
!10229 = !DILocation(line: 4362, column: 14, scope: !10224)
!10230 = !DILocation(line: 4362, column: 20, scope: !10224)
!10231 = !DILocation(line: 4362, column: 12, scope: !10224)
!10232 = !DILocalVariable(name: "__ret_warn_on", scope: !10233, file: !3, line: 4369, type: !115)
!10233 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 4369, column: 8)
!10234 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 4369, column: 8)
!10235 = !DILocation(line: 4369, column: 8, scope: !10233)
!10236 = !DILocation(line: 4369, column: 8, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 4369, column: 8)
!10238 = !DILocation(line: 4369, column: 8, scope: !10239)
!10239 = distinct !DILexicalBlock(scope: !10237, file: !3, line: 4369, column: 8)
!10240 = !DILocation(line: 4369, column: 8, scope: !10241)
!10241 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 4369, column: 8)
!10242 = !DILocation(line: 4369, column: 8, scope: !10243)
!10243 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 4369, column: 8)
!10244 = !{i32 -2139963974, i32 -2139963945, i32 -2139963899, i32 -2139963841, i32 -2139963787, i32 -2139963733, i32 -2139963678, i32 -2139963647}
!10245 = !DILocation(line: 4369, column: 8, scope: !10246)
!10246 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 4369, column: 8)
!10247 = !{i32 -2139963227, i32 -2139963220, i32 -2139963168, i32 -2139963137, i32 -2139963107}
!10248 = !DILocation(line: 4369, column: 8, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 4369, column: 8)
!10250 = !DILocation(line: 4369, column: 8, scope: !10234)
!10251 = !DILocation(line: 4369, column: 8, scope: !10224)
!10252 = !DILocation(line: 4370, column: 5, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10234, file: !3, line: 4369, column: 30)
!10254 = !DILocation(line: 4372, column: 5, scope: !10253)
!10255 = !DILocation(line: 4375, column: 4, scope: !10224)
!10256 = !DILocation(line: 4377, column: 2, scope: !10218)
!10257 = !DILocalVariable(name: "__mptr", scope: !10258, file: !3, line: 4358, type: !344)
!10258 = distinct !DILexicalBlock(scope: !10215, file: !3, line: 4358, column: 2)
!10259 = !DILocation(line: 4358, column: 2, scope: !10258)
!10260 = !DILocation(line: 4358, column: 2, scope: !10261)
!10261 = distinct !DILexicalBlock(scope: !10258, file: !3, line: 4358, column: 2)
!10262 = distinct !{!10262, !10213, !10263}
!10263 = !DILocation(line: 4377, column: 2, scope: !10209)
!10264 = !DILocation(line: 4378, column: 7, scope: !10265)
!10265 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 4378, column: 6)
!10266 = !DILocation(line: 4378, column: 6, scope: !10171)
!10267 = !DILocation(line: 4379, column: 14, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10265, file: !3, line: 4378, column: 13)
!10269 = !DILocation(line: 4380, column: 11, scope: !10268)
!10270 = !DILocation(line: 4381, column: 2, scope: !10268)
!10271 = !DILocation(line: 4383, column: 6, scope: !10272)
!10272 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 4383, column: 6)
!10273 = !DILocation(line: 4383, column: 14, scope: !10272)
!10274 = !DILocation(line: 4383, column: 6, scope: !10171)
!10275 = !DILocation(line: 4384, column: 13, scope: !10272)
!10276 = !DILocation(line: 4384, column: 18, scope: !10272)
!10277 = !DILocation(line: 4384, column: 11, scope: !10272)
!10278 = !DILocation(line: 4384, column: 3, scope: !10272)
!10279 = !DILocation(line: 4386, column: 14, scope: !10171)
!10280 = !DILocation(line: 4386, column: 12, scope: !10171)
!10281 = !DILocation(line: 4388, column: 2, scope: !10171)
!10282 = !DILocation(line: 4391, column: 2, scope: !10171)
!10283 = !DILocation(line: 4396, column: 7, scope: !10284)
!10284 = distinct !DILexicalBlock(scope: !10171, file: !3, line: 4396, column: 6)
!10285 = !DILocation(line: 4396, column: 6, scope: !10171)
!10286 = !DILocation(line: 4397, column: 10, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10284, file: !3, line: 4396, column: 13)
!10288 = !DILocation(line: 4397, column: 8, scope: !10287)
!10289 = !DILocation(line: 4398, column: 8, scope: !10290)
!10290 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 4398, column: 7)
!10291 = !DILocation(line: 4398, column: 7, scope: !10287)
!10292 = !DILocation(line: 4399, column: 4, scope: !10290)
!10293 = !DILocation(line: 4401, column: 30, scope: !10287)
!10294 = !DILocation(line: 4401, column: 3, scope: !10287)
!10295 = !DILocation(line: 4402, column: 16, scope: !10287)
!10296 = !DILocation(line: 4402, column: 3, scope: !10287)
!10297 = !DILocation(line: 4402, column: 9, scope: !10287)
!10298 = !DILocation(line: 4402, column: 14, scope: !10287)
!10299 = !DILocation(line: 4403, column: 13, scope: !10287)
!10300 = !DILocation(line: 4403, column: 19, scope: !10287)
!10301 = !DILocation(line: 4403, column: 26, scope: !10287)
!10302 = !DILocation(line: 4403, column: 42, scope: !10287)
!10303 = !DILocation(line: 4403, column: 3, scope: !10287)
!10304 = !DILocation(line: 4404, column: 2, scope: !10287)
!10305 = !DILocation(line: 4405, column: 15, scope: !10171)
!10306 = !DILocation(line: 4405, column: 2, scope: !10171)
!10307 = !DILocation(line: 4405, column: 8, scope: !10171)
!10308 = !DILocation(line: 4405, column: 13, scope: !10171)
!10309 = !DILocation(line: 4406, column: 14, scope: !10171)
!10310 = !DILocation(line: 4406, column: 2, scope: !10171)
!10311 = !DILocation(line: 4406, column: 8, scope: !10171)
!10312 = !DILocation(line: 4406, column: 12, scope: !10171)
!10313 = !DILocation(line: 4408, column: 9, scope: !10171)
!10314 = !DILocation(line: 4408, column: 2, scope: !10171)
!10315 = !DILocation(line: 4409, column: 1, scope: !10171)
!10316 = distinct !DISubprogram(name: "drm_atomic_get_mst_topology_state", scope: !3, file: !3, line: 5368, type: !10317, scopeLine: 5370, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10317 = !DISubroutineType(types: !10318)
!10318 = !{!5988, !3367, !406}
!10319 = !DILocalVariable(name: "state", arg: 1, scope: !10316, file: !3, line: 5368, type: !3367)
!10320 = !DILocation(line: 5368, column: 94, scope: !10316)
!10321 = !DILocalVariable(name: "mgr", arg: 2, scope: !10316, file: !3, line: 5369, type: !406)
!10322 = !DILocation(line: 5369, column: 45, scope: !10316)
!10323 = !DILocalVariable(name: "__mptr", scope: !10324, file: !3, line: 5371, type: !344)
!10324 = distinct !DILexicalBlock(scope: !10316, file: !3, line: 5371, column: 9)
!10325 = !DILocation(line: 5371, column: 9, scope: !10324)
!10326 = !DILocation(line: 5371, column: 9, scope: !10327)
!10327 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 5371, column: 9)
!10328 = !DILocation(line: 5371, column: 2, scope: !10316)
!10329 = distinct !DISubprogram(name: "IS_ERR", scope: !10330, file: !10330, line: 34, type: !10331, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10330 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!10331 = !DISubroutineType(types: !10332)
!10332 = !{!370, !3176}
!10333 = !DILocalVariable(name: "ptr", arg: 1, scope: !10329, file: !10330, line: 34, type: !3176)
!10334 = !DILocation(line: 34, column: 60, scope: !10329)
!10335 = !DILocation(line: 36, column: 9, scope: !10329)
!10336 = !DILocation(line: 36, column: 2, scope: !10329)
!10337 = distinct !DISubprogram(name: "PTR_ERR", scope: !10330, file: !10330, line: 29, type: !10338, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10338 = !DISubroutineType(types: !10339)
!10339 = !{!279, !3176}
!10340 = !DILocalVariable(name: "ptr", arg: 1, scope: !10337, file: !10330, line: 29, type: !3176)
!10341 = !DILocation(line: 29, column: 61, scope: !10337)
!10342 = !DILocation(line: 31, column: 16, scope: !10337)
!10343 = !DILocation(line: 31, column: 9, scope: !10337)
!10344 = !DILocation(line: 31, column: 2, scope: !10337)
!10345 = distinct !DISubprogram(name: "list_add", scope: !10346, file: !10346, line: 84, type: !10347, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10346 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!10347 = !DISubroutineType(types: !10348)
!10348 = !{null, !388, !388}
!10349 = !DILocalVariable(name: "new", arg: 1, scope: !10345, file: !10346, line: 84, type: !388)
!10350 = !DILocation(line: 84, column: 47, scope: !10345)
!10351 = !DILocalVariable(name: "head", arg: 2, scope: !10345, file: !10346, line: 84, type: !388)
!10352 = !DILocation(line: 84, column: 70, scope: !10345)
!10353 = !DILocation(line: 86, column: 13, scope: !10345)
!10354 = !DILocation(line: 86, column: 18, scope: !10345)
!10355 = !DILocation(line: 86, column: 24, scope: !10345)
!10356 = !DILocation(line: 86, column: 30, scope: !10345)
!10357 = !DILocation(line: 86, column: 2, scope: !10345)
!10358 = !DILocation(line: 87, column: 1, scope: !10345)
!10359 = distinct !DISubprogram(name: "drm_dp_atomic_release_vcpi_slots", scope: !3, file: !3, line: 4438, type: !10360, scopeLine: 4441, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10360 = !DISubroutineType(types: !10361)
!10361 = !{!115, !3367, !406, !345}
!10362 = !DILocalVariable(name: "state", arg: 1, scope: !10359, file: !3, line: 4438, type: !3367)
!10363 = !DILocation(line: 4438, column: 63, scope: !10359)
!10364 = !DILocalVariable(name: "mgr", arg: 2, scope: !10359, file: !3, line: 4439, type: !406)
!10365 = !DILocation(line: 4439, column: 42, scope: !10359)
!10366 = !DILocalVariable(name: "port", arg: 3, scope: !10359, file: !3, line: 4440, type: !345)
!10367 = !DILocation(line: 4440, column: 34, scope: !10359)
!10368 = !DILocalVariable(name: "topology_state", scope: !10359, file: !3, line: 4442, type: !5988)
!10369 = !DILocation(line: 4442, column: 36, scope: !10359)
!10370 = !DILocalVariable(name: "pos", scope: !10359, file: !3, line: 4443, type: !5980)
!10371 = !DILocation(line: 4443, column: 33, scope: !10359)
!10372 = !DILocalVariable(name: "found", scope: !10359, file: !3, line: 4444, type: !370)
!10373 = !DILocation(line: 4444, column: 7, scope: !10359)
!10374 = !DILocation(line: 4446, column: 53, scope: !10359)
!10375 = !DILocation(line: 4446, column: 60, scope: !10359)
!10376 = !DILocation(line: 4446, column: 19, scope: !10359)
!10377 = !DILocation(line: 4446, column: 17, scope: !10359)
!10378 = !DILocation(line: 4447, column: 13, scope: !10379)
!10379 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 4447, column: 6)
!10380 = !DILocation(line: 4447, column: 6, scope: !10379)
!10381 = !DILocation(line: 4447, column: 6, scope: !10359)
!10382 = !DILocation(line: 4448, column: 18, scope: !10379)
!10383 = !DILocation(line: 4448, column: 10, scope: !10379)
!10384 = !DILocation(line: 4448, column: 3, scope: !10379)
!10385 = !DILocalVariable(name: "__mptr", scope: !10386, file: !3, line: 4450, type: !344)
!10386 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 4450, column: 2)
!10387 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 4450, column: 2)
!10388 = !DILocation(line: 4450, column: 2, scope: !10386)
!10389 = !DILocation(line: 4450, column: 2, scope: !10390)
!10390 = distinct !DILexicalBlock(scope: !10386, file: !3, line: 4450, column: 2)
!10391 = !DILocation(line: 4450, column: 2, scope: !10387)
!10392 = !DILocation(line: 4450, column: 2, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10387, file: !3, line: 4450, column: 2)
!10394 = !DILocation(line: 4451, column: 7, scope: !10395)
!10395 = distinct !DILexicalBlock(scope: !10396, file: !3, line: 4451, column: 7)
!10396 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 4450, column: 57)
!10397 = !DILocation(line: 4451, column: 12, scope: !10395)
!10398 = !DILocation(line: 4451, column: 20, scope: !10395)
!10399 = !DILocation(line: 4451, column: 17, scope: !10395)
!10400 = !DILocation(line: 4451, column: 7, scope: !10396)
!10401 = !DILocation(line: 4452, column: 10, scope: !10402)
!10402 = distinct !DILexicalBlock(scope: !10395, file: !3, line: 4451, column: 26)
!10403 = !DILocation(line: 4453, column: 4, scope: !10402)
!10404 = !DILocation(line: 4455, column: 2, scope: !10396)
!10405 = !DILocalVariable(name: "__mptr", scope: !10406, file: !3, line: 4450, type: !344)
!10406 = distinct !DILexicalBlock(scope: !10393, file: !3, line: 4450, column: 2)
!10407 = !DILocation(line: 4450, column: 2, scope: !10406)
!10408 = !DILocation(line: 4450, column: 2, scope: !10409)
!10409 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 4450, column: 2)
!10410 = distinct !{!10410, !10391, !10411}
!10411 = !DILocation(line: 4455, column: 2, scope: !10387)
!10412 = !DILocalVariable(name: "__ret_warn_on", scope: !10413, file: !3, line: 4456, type: !115)
!10413 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 4456, column: 6)
!10414 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 4456, column: 6)
!10415 = !DILocation(line: 4456, column: 6, scope: !10413)
!10416 = !DILocation(line: 4456, column: 6, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 4456, column: 6)
!10418 = !DILocation(line: 4456, column: 6, scope: !10419)
!10419 = distinct !DILexicalBlock(scope: !10417, file: !3, line: 4456, column: 6)
!10420 = !DILocation(line: 4456, column: 6, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 4456, column: 6)
!10422 = !DILocation(line: 4456, column: 6, scope: !10423)
!10423 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 4456, column: 6)
!10424 = !{i32 -2139957761, i32 -2139957732, i32 -2139957686, i32 -2139957628, i32 -2139957574, i32 -2139957520, i32 -2139957465, i32 -2139957434}
!10425 = !DILocation(line: 4456, column: 6, scope: !10426)
!10426 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 4456, column: 6)
!10427 = !{i32 -2139957014, i32 -2139957007, i32 -2139956955, i32 -2139956924, i32 -2139956894}
!10428 = !DILocation(line: 4456, column: 6, scope: !10429)
!10429 = distinct !DILexicalBlock(scope: !10419, file: !3, line: 4456, column: 6)
!10430 = !DILocation(line: 4456, column: 6, scope: !10414)
!10431 = !DILocation(line: 4456, column: 6, scope: !10359)
!10432 = !DILocation(line: 4457, column: 3, scope: !10433)
!10433 = distinct !DILexicalBlock(scope: !10414, file: !3, line: 4456, column: 23)
!10434 = !DILocation(line: 4459, column: 3, scope: !10433)
!10435 = !DILocation(line: 4462, column: 2, scope: !10359)
!10436 = !DILocation(line: 4463, column: 6, scope: !10437)
!10437 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 4463, column: 6)
!10438 = !DILocation(line: 4463, column: 11, scope: !10437)
!10439 = !DILocation(line: 4463, column: 6, scope: !10359)
!10440 = !DILocation(line: 4464, column: 30, scope: !10441)
!10441 = distinct !DILexicalBlock(scope: !10437, file: !3, line: 4463, column: 17)
!10442 = !DILocation(line: 4464, column: 3, scope: !10441)
!10443 = !DILocation(line: 4465, column: 3, scope: !10441)
!10444 = !DILocation(line: 4465, column: 8, scope: !10441)
!10445 = !DILocation(line: 4465, column: 13, scope: !10441)
!10446 = !DILocation(line: 4466, column: 3, scope: !10441)
!10447 = !DILocation(line: 4466, column: 8, scope: !10441)
!10448 = !DILocation(line: 4466, column: 12, scope: !10441)
!10449 = !DILocation(line: 4467, column: 2, scope: !10441)
!10450 = !DILocation(line: 4469, column: 2, scope: !10359)
!10451 = !DILocation(line: 4470, column: 1, scope: !10359)
!10452 = distinct !DISubprogram(name: "drm_dp_mst_allocate_vcpi", scope: !3, file: !3, line: 4480, type: !10453, scopeLine: 4482, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10453 = !DISubroutineType(types: !10454)
!10454 = !{!370, !406, !345, !115, !115}
!10455 = !DILocalVariable(name: "mgr", arg: 1, scope: !10452, file: !3, line: 4480, type: !406)
!10456 = !DILocation(line: 4480, column: 63, scope: !10452)
!10457 = !DILocalVariable(name: "port", arg: 2, scope: !10452, file: !3, line: 4481, type: !345)
!10458 = !DILocation(line: 4481, column: 34, scope: !10452)
!10459 = !DILocalVariable(name: "pbn", arg: 3, scope: !10452, file: !3, line: 4481, type: !115)
!10460 = !DILocation(line: 4481, column: 44, scope: !10452)
!10461 = !DILocalVariable(name: "slots", arg: 4, scope: !10452, file: !3, line: 4481, type: !115)
!10462 = !DILocation(line: 4481, column: 53, scope: !10452)
!10463 = !DILocalVariable(name: "ret", scope: !10452, file: !3, line: 4483, type: !115)
!10464 = !DILocation(line: 4483, column: 6, scope: !10452)
!10465 = !DILocation(line: 4485, column: 6, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 4485, column: 6)
!10467 = !DILocation(line: 4485, column: 12, scope: !10466)
!10468 = !DILocation(line: 4485, column: 6, scope: !10452)
!10469 = !DILocation(line: 4486, column: 3, scope: !10466)
!10470 = !DILocation(line: 4488, column: 48, scope: !10452)
!10471 = !DILocation(line: 4488, column: 53, scope: !10452)
!10472 = !DILocation(line: 4488, column: 9, scope: !10452)
!10473 = !DILocation(line: 4488, column: 7, scope: !10452)
!10474 = !DILocation(line: 4489, column: 7, scope: !10475)
!10475 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 4489, column: 6)
!10476 = !DILocation(line: 4489, column: 6, scope: !10452)
!10477 = !DILocation(line: 4490, column: 3, scope: !10475)
!10478 = !DILocation(line: 4492, column: 6, scope: !10479)
!10479 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 4492, column: 6)
!10480 = !DILocation(line: 4492, column: 12, scope: !10479)
!10481 = !DILocation(line: 4492, column: 17, scope: !10479)
!10482 = !DILocation(line: 4492, column: 22, scope: !10479)
!10483 = !DILocation(line: 4492, column: 6, scope: !10452)
!10484 = !DILocation(line: 4493, column: 3, scope: !10485)
!10485 = distinct !DILexicalBlock(scope: !10479, file: !3, line: 4492, column: 27)
!10486 = !DILocation(line: 4495, column: 7, scope: !10487)
!10487 = distinct !DILexicalBlock(scope: !10485, file: !3, line: 4495, column: 7)
!10488 = !DILocation(line: 4495, column: 14, scope: !10487)
!10489 = !DILocation(line: 4495, column: 20, scope: !10487)
!10490 = !DILocation(line: 4495, column: 25, scope: !10487)
!10491 = !DILocation(line: 4495, column: 11, scope: !10487)
!10492 = !DILocation(line: 4495, column: 7, scope: !10485)
!10493 = !DILocation(line: 4496, column: 33, scope: !10494)
!10494 = distinct !DILexicalBlock(scope: !10487, file: !3, line: 4495, column: 30)
!10495 = !DILocation(line: 4496, column: 4, scope: !10494)
!10496 = !DILocation(line: 4497, column: 4, scope: !10494)
!10497 = !DILocation(line: 4499, column: 2, scope: !10485)
!10498 = !DILocation(line: 4501, column: 25, scope: !10452)
!10499 = !DILocation(line: 4501, column: 31, scope: !10452)
!10500 = !DILocation(line: 4501, column: 37, scope: !10452)
!10501 = !DILocation(line: 4501, column: 43, scope: !10452)
!10502 = !DILocation(line: 4501, column: 48, scope: !10452)
!10503 = !DILocation(line: 4501, column: 8, scope: !10452)
!10504 = !DILocation(line: 4501, column: 6, scope: !10452)
!10505 = !DILocation(line: 4502, column: 6, scope: !10506)
!10506 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 4502, column: 6)
!10507 = !DILocation(line: 4502, column: 6, scope: !10452)
!10508 = !DILocation(line: 4503, column: 3, scope: !10509)
!10509 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 4502, column: 11)
!10510 = !DILocation(line: 4505, column: 32, scope: !10509)
!10511 = !DILocation(line: 4505, column: 3, scope: !10509)
!10512 = !DILocation(line: 4506, column: 3, scope: !10509)
!10513 = !DILocation(line: 4508, column: 2, scope: !10452)
!10514 = !DILocation(line: 4512, column: 29, scope: !10452)
!10515 = !DILocation(line: 4512, column: 2, scope: !10452)
!10516 = !DILocation(line: 4513, column: 31, scope: !10452)
!10517 = !DILocation(line: 4513, column: 2, scope: !10452)
!10518 = !DILocation(line: 4514, column: 2, scope: !10452)
!10519 = !DILabel(scope: !10452, name: "out", file: !3, line: 4515)
!10520 = !DILocation(line: 4515, column: 1, scope: !10452)
!10521 = !DILocation(line: 4516, column: 2, scope: !10452)
!10522 = !DILocation(line: 4517, column: 1, scope: !10452)
!10523 = distinct !DISubprogram(name: "drm_dp_init_vcpi", scope: !3, file: !3, line: 4294, type: !10524, scopeLine: 4296, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10524 = !DISubroutineType(types: !10525)
!10525 = !{!115, !406, !5809, !115, !115}
!10526 = !DILocalVariable(name: "mgr", arg: 1, scope: !10523, file: !3, line: 4294, type: !406)
!10527 = !DILocation(line: 4294, column: 61, scope: !10523)
!10528 = !DILocalVariable(name: "vcpi", arg: 2, scope: !10523, file: !3, line: 4295, type: !5809)
!10529 = !DILocation(line: 4295, column: 28, scope: !10523)
!10530 = !DILocalVariable(name: "pbn", arg: 3, scope: !10523, file: !3, line: 4295, type: !115)
!10531 = !DILocation(line: 4295, column: 38, scope: !10523)
!10532 = !DILocalVariable(name: "slots", arg: 4, scope: !10523, file: !3, line: 4295, type: !115)
!10533 = !DILocation(line: 4295, column: 47, scope: !10523)
!10534 = !DILocalVariable(name: "ret", scope: !10523, file: !3, line: 4297, type: !115)
!10535 = !DILocation(line: 4297, column: 6, scope: !10523)
!10536 = !DILocation(line: 4300, column: 6, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 4300, column: 6)
!10538 = !DILocation(line: 4300, column: 12, scope: !10537)
!10539 = !DILocation(line: 4300, column: 6, scope: !10523)
!10540 = !DILocation(line: 4301, column: 3, scope: !10537)
!10541 = !DILocation(line: 4303, column: 14, scope: !10523)
!10542 = !DILocation(line: 4303, column: 2, scope: !10523)
!10543 = !DILocation(line: 4303, column: 8, scope: !10523)
!10544 = !DILocation(line: 4303, column: 12, scope: !10523)
!10545 = !DILocation(line: 4304, column: 22, scope: !10523)
!10546 = !DILocation(line: 4304, column: 30, scope: !10523)
!10547 = !DILocation(line: 4304, column: 35, scope: !10523)
!10548 = !DILocation(line: 4304, column: 28, scope: !10523)
!10549 = !DILocation(line: 4304, column: 2, scope: !10523)
!10550 = !DILocation(line: 4304, column: 8, scope: !10523)
!10551 = !DILocation(line: 4304, column: 20, scope: !10523)
!10552 = !DILocation(line: 4305, column: 20, scope: !10523)
!10553 = !DILocation(line: 4305, column: 2, scope: !10523)
!10554 = !DILocation(line: 4305, column: 8, scope: !10523)
!10555 = !DILocation(line: 4305, column: 18, scope: !10523)
!10556 = !DILocation(line: 4307, column: 37, scope: !10523)
!10557 = !DILocation(line: 4307, column: 42, scope: !10523)
!10558 = !DILocation(line: 4307, column: 8, scope: !10523)
!10559 = !DILocation(line: 4307, column: 6, scope: !10523)
!10560 = !DILocation(line: 4308, column: 6, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10523, file: !3, line: 4308, column: 6)
!10562 = !DILocation(line: 4308, column: 10, scope: !10561)
!10563 = !DILocation(line: 4308, column: 6, scope: !10523)
!10564 = !DILocation(line: 4309, column: 10, scope: !10561)
!10565 = !DILocation(line: 4309, column: 3, scope: !10561)
!10566 = !DILocation(line: 4310, column: 2, scope: !10523)
!10567 = !DILocation(line: 4311, column: 1, scope: !10523)
!10568 = distinct !DISubprogram(name: "drm_dp_mst_get_vcpi_slots", scope: !3, file: !3, line: 4520, type: !10569, scopeLine: 4521, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10569 = !DISubroutineType(types: !10570)
!10570 = !{!115, !406, !345}
!10571 = !DILocalVariable(name: "mgr", arg: 1, scope: !10568, file: !3, line: 4520, type: !406)
!10572 = !DILocation(line: 4520, column: 63, scope: !10568)
!10573 = !DILocalVariable(name: "port", arg: 2, scope: !10568, file: !3, line: 4520, type: !345)
!10574 = !DILocation(line: 4520, column: 92, scope: !10568)
!10575 = !DILocalVariable(name: "slots", scope: !10568, file: !3, line: 4522, type: !115)
!10576 = !DILocation(line: 4522, column: 6, scope: !10568)
!10577 = !DILocation(line: 4524, column: 48, scope: !10568)
!10578 = !DILocation(line: 4524, column: 53, scope: !10568)
!10579 = !DILocation(line: 4524, column: 9, scope: !10568)
!10580 = !DILocation(line: 4524, column: 7, scope: !10568)
!10581 = !DILocation(line: 4525, column: 7, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10568, file: !3, line: 4525, column: 6)
!10583 = !DILocation(line: 4525, column: 6, scope: !10568)
!10584 = !DILocation(line: 4526, column: 10, scope: !10582)
!10585 = !DILocation(line: 4526, column: 3, scope: !10582)
!10586 = !DILocation(line: 4528, column: 10, scope: !10568)
!10587 = !DILocation(line: 4528, column: 16, scope: !10568)
!10588 = !DILocation(line: 4528, column: 21, scope: !10568)
!10589 = !DILocation(line: 4528, column: 8, scope: !10568)
!10590 = !DILocation(line: 4529, column: 31, scope: !10568)
!10591 = !DILocation(line: 4529, column: 2, scope: !10568)
!10592 = !DILocation(line: 4530, column: 9, scope: !10568)
!10593 = !DILocation(line: 4530, column: 2, scope: !10568)
!10594 = !DILocation(line: 4531, column: 1, scope: !10568)
!10595 = distinct !DISubprogram(name: "drm_dp_mst_reset_vcpi_slots", scope: !3, file: !3, line: 4541, type: !10596, scopeLine: 4542, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10596 = !DISubroutineType(types: !10597)
!10597 = !{null, !406, !345}
!10598 = !DILocalVariable(name: "mgr", arg: 1, scope: !10595, file: !3, line: 4541, type: !406)
!10599 = !DILocation(line: 4541, column: 66, scope: !10595)
!10600 = !DILocalVariable(name: "port", arg: 2, scope: !10595, file: !3, line: 4541, type: !345)
!10601 = !DILocation(line: 4541, column: 95, scope: !10595)
!10602 = !DILocation(line: 4548, column: 2, scope: !10595)
!10603 = !DILocation(line: 4548, column: 8, scope: !10595)
!10604 = !DILocation(line: 4548, column: 13, scope: !10595)
!10605 = !DILocation(line: 4548, column: 23, scope: !10595)
!10606 = !DILocation(line: 4549, column: 1, scope: !10595)
!10607 = distinct !DISubprogram(name: "drm_dp_mst_deallocate_vcpi", scope: !3, file: !3, line: 4560, type: !10596, scopeLine: 4562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10608 = !DILocalVariable(name: "mgr", arg: 1, scope: !10607, file: !3, line: 4560, type: !406)
!10609 = !DILocation(line: 4560, column: 65, scope: !10607)
!10610 = !DILocalVariable(name: "port", arg: 2, scope: !10607, file: !3, line: 4561, type: !345)
!10611 = !DILocation(line: 4561, column: 29, scope: !10607)
!10612 = !DILocation(line: 4563, column: 7, scope: !10613)
!10613 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 4563, column: 6)
!10614 = !DILocation(line: 4563, column: 13, scope: !10613)
!10615 = !DILocation(line: 4563, column: 18, scope: !10613)
!10616 = !DILocation(line: 4563, column: 6, scope: !10607)
!10617 = !DILocation(line: 4564, column: 3, scope: !10613)
!10618 = !DILocation(line: 4566, column: 28, scope: !10607)
!10619 = !DILocation(line: 4566, column: 33, scope: !10607)
!10620 = !DILocation(line: 4566, column: 39, scope: !10607)
!10621 = !DILocation(line: 4566, column: 44, scope: !10607)
!10622 = !DILocation(line: 4566, column: 2, scope: !10607)
!10623 = !DILocation(line: 4567, column: 2, scope: !10607)
!10624 = !DILocation(line: 4567, column: 8, scope: !10607)
!10625 = !DILocation(line: 4567, column: 13, scope: !10607)
!10626 = !DILocation(line: 4567, column: 23, scope: !10607)
!10627 = !DILocation(line: 4568, column: 2, scope: !10607)
!10628 = !DILocation(line: 4568, column: 8, scope: !10607)
!10629 = !DILocation(line: 4568, column: 13, scope: !10607)
!10630 = !DILocation(line: 4568, column: 17, scope: !10607)
!10631 = !DILocation(line: 4569, column: 2, scope: !10607)
!10632 = !DILocation(line: 4569, column: 8, scope: !10607)
!10633 = !DILocation(line: 4569, column: 13, scope: !10607)
!10634 = !DILocation(line: 4569, column: 25, scope: !10607)
!10635 = !DILocation(line: 4570, column: 2, scope: !10607)
!10636 = !DILocation(line: 4570, column: 8, scope: !10607)
!10637 = !DILocation(line: 4570, column: 13, scope: !10607)
!10638 = !DILocation(line: 4570, column: 18, scope: !10607)
!10639 = !DILocation(line: 4571, column: 29, scope: !10607)
!10640 = !DILocation(line: 4571, column: 2, scope: !10607)
!10641 = !DILocation(line: 4572, column: 1, scope: !10607)
!10642 = distinct !DISubprogram(name: "drm_dp_mst_put_payload_id", scope: !3, file: !3, line: 1254, type: !10643, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10643 = !DISubroutineType(types: !10644)
!10644 = !{null, !406, !115}
!10645 = !DILocalVariable(name: "mgr", arg: 1, scope: !10642, file: !3, line: 1254, type: !406)
!10646 = !DILocation(line: 1254, column: 71, scope: !10642)
!10647 = !DILocalVariable(name: "vcpi", arg: 2, scope: !10642, file: !3, line: 1255, type: !115)
!10648 = !DILocation(line: 1255, column: 15, scope: !10642)
!10649 = !DILocalVariable(name: "i", scope: !10642, file: !3, line: 1257, type: !115)
!10650 = !DILocation(line: 1257, column: 6, scope: !10642)
!10651 = !DILocation(line: 1259, column: 6, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1259, column: 6)
!10653 = !DILocation(line: 1259, column: 11, scope: !10652)
!10654 = !DILocation(line: 1259, column: 6, scope: !10642)
!10655 = !DILocation(line: 1260, column: 3, scope: !10652)
!10656 = !DILocation(line: 1262, column: 14, scope: !10642)
!10657 = !DILocation(line: 1262, column: 19, scope: !10642)
!10658 = !DILocation(line: 1262, column: 2, scope: !10642)
!10659 = !DILocation(line: 1263, column: 2, scope: !10642)
!10660 = !DILocation(line: 1264, column: 12, scope: !10642)
!10661 = !DILocation(line: 1264, column: 17, scope: !10642)
!10662 = !DILocation(line: 1264, column: 23, scope: !10642)
!10663 = !DILocation(line: 1264, column: 28, scope: !10642)
!10664 = !DILocation(line: 1264, column: 2, scope: !10642)
!10665 = !DILocation(line: 1266, column: 9, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1266, column: 2)
!10667 = !DILocation(line: 1266, column: 7, scope: !10666)
!10668 = !DILocation(line: 1266, column: 14, scope: !10669)
!10669 = distinct !DILexicalBlock(scope: !10666, file: !3, line: 1266, column: 2)
!10670 = !DILocation(line: 1266, column: 18, scope: !10669)
!10671 = !DILocation(line: 1266, column: 23, scope: !10669)
!10672 = !DILocation(line: 1266, column: 16, scope: !10669)
!10673 = !DILocation(line: 1266, column: 2, scope: !10666)
!10674 = !DILocation(line: 1267, column: 7, scope: !10675)
!10675 = distinct !DILexicalBlock(scope: !10676, file: !3, line: 1267, column: 7)
!10676 = distinct !DILexicalBlock(scope: !10669, file: !3, line: 1266, column: 42)
!10677 = !DILocation(line: 1267, column: 12, scope: !10675)
!10678 = !DILocation(line: 1267, column: 27, scope: !10675)
!10679 = !DILocation(line: 1267, column: 30, scope: !10675)
!10680 = !DILocation(line: 1268, column: 7, scope: !10675)
!10681 = !DILocation(line: 1268, column: 12, scope: !10675)
!10682 = !DILocation(line: 1268, column: 27, scope: !10675)
!10683 = !DILocation(line: 1268, column: 31, scope: !10675)
!10684 = !DILocation(line: 1268, column: 39, scope: !10675)
!10685 = !DILocation(line: 1268, column: 36, scope: !10675)
!10686 = !DILocation(line: 1267, column: 7, scope: !10676)
!10687 = !DILocation(line: 1269, column: 4, scope: !10688)
!10688 = distinct !DILexicalBlock(scope: !10675, file: !3, line: 1268, column: 45)
!10689 = !DILocation(line: 1269, column: 9, scope: !10688)
!10690 = !DILocation(line: 1269, column: 24, scope: !10688)
!10691 = !DILocation(line: 1269, column: 27, scope: !10688)
!10692 = !DILocation(line: 1270, column: 14, scope: !10688)
!10693 = !DILocation(line: 1270, column: 16, scope: !10688)
!10694 = !DILocation(line: 1270, column: 22, scope: !10688)
!10695 = !DILocation(line: 1270, column: 27, scope: !10688)
!10696 = !DILocation(line: 1270, column: 4, scope: !10688)
!10697 = !DILocation(line: 1271, column: 3, scope: !10688)
!10698 = !DILocation(line: 1272, column: 2, scope: !10676)
!10699 = !DILocation(line: 1266, column: 38, scope: !10669)
!10700 = !DILocation(line: 1266, column: 2, scope: !10669)
!10701 = distinct !{!10701, !10673, !10702}
!10702 = !DILocation(line: 1272, column: 2, scope: !10666)
!10703 = !DILocation(line: 1273, column: 16, scope: !10642)
!10704 = !DILocation(line: 1273, column: 21, scope: !10642)
!10705 = !DILocation(line: 1273, column: 2, scope: !10642)
!10706 = !DILocation(line: 1274, column: 1, scope: !10642)
!10707 = distinct !DISubprogram(name: "drm_dp_check_act_status", scope: !3, file: !3, line: 4640, type: !8563, scopeLine: 4641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10708 = !DILocalVariable(name: "mgr", arg: 1, scope: !10707, file: !3, line: 4640, type: !406)
!10709 = !DILocation(line: 4640, column: 61, scope: !10707)
!10710 = !DILocalVariable(name: "timeout_ms", scope: !10707, file: !3, line: 4648, type: !10711)
!10711 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !115)
!10712 = !DILocation(line: 4648, column: 12, scope: !10707)
!10713 = !DILocalVariable(name: "ret", scope: !10707, file: !3, line: 4649, type: !115)
!10714 = !DILocation(line: 4649, column: 6, scope: !10707)
!10715 = !DILocalVariable(name: "status", scope: !10707, file: !3, line: 4649, type: !115)
!10716 = !DILocation(line: 4649, column: 11, scope: !10707)
!10717 = !DILocalVariable(name: "__timeout_us", scope: !10718, file: !3, line: 4651, type: !504)
!10718 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 4651, column: 8)
!10719 = !DILocation(line: 4651, column: 8, scope: !10718)
!10720 = !DILocalVariable(name: "__sleep_us", scope: !10718, file: !3, line: 4651, type: !341)
!10721 = !DILocalVariable(name: "__timeout", scope: !10718, file: !3, line: 4651, type: !549)
!10722 = !DILocation(line: 4651, column: 8, scope: !10723)
!10723 = distinct !DILexicalBlock(scope: !10724, file: !3, line: 4651, column: 8)
!10724 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 4651, column: 8)
!10725 = !DILocation(line: 4651, column: 8, scope: !10724)
!10726 = !DILocation(line: 4651, column: 8, scope: !10727)
!10727 = distinct !DILexicalBlock(scope: !10723, file: !3, line: 4651, column: 8)
!10728 = !DILocation(line: 4651, column: 8, scope: !10729)
!10729 = distinct !DILexicalBlock(scope: !10727, file: !3, line: 4651, column: 8)
!10730 = !DILocation(line: 4651, column: 8, scope: !10731)
!10731 = distinct !DILexicalBlock(scope: !10732, file: !3, line: 4651, column: 8)
!10732 = distinct !DILexicalBlock(scope: !10733, file: !3, line: 4651, column: 8)
!10733 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 4651, column: 8)
!10734 = !DILocation(line: 4651, column: 8, scope: !10735)
!10735 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 4651, column: 8)
!10736 = !DILocation(line: 4651, column: 8, scope: !10737)
!10737 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 4651, column: 8)
!10738 = !DILocation(line: 4651, column: 8, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10737, file: !3, line: 4651, column: 8)
!10740 = !DILocation(line: 4651, column: 8, scope: !10741)
!10741 = distinct !DILexicalBlock(scope: !10731, file: !3, line: 4651, column: 8)
!10742 = !DILocation(line: 4651, column: 8, scope: !10732)
!10743 = distinct !{!10743, !10744, !10744}
!10744 = !DILocation(line: 4651, column: 8, scope: !10733)
!10745 = !DILocation(line: 4651, column: 6, scope: !10707)
!10746 = !DILocation(line: 4654, column: 6, scope: !10747)
!10747 = distinct !DILexicalBlock(scope: !10707, file: !3, line: 4654, column: 6)
!10748 = !DILocation(line: 4654, column: 10, scope: !10747)
!10749 = !DILocation(line: 4654, column: 14, scope: !10747)
!10750 = !DILocation(line: 4654, column: 17, scope: !10747)
!10751 = !DILocation(line: 4654, column: 24, scope: !10747)
!10752 = !DILocation(line: 4654, column: 6, scope: !10707)
!10753 = !DILocation(line: 4655, column: 3, scope: !10754)
!10754 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 4654, column: 30)
!10755 = !DILocation(line: 4657, column: 3, scope: !10754)
!10756 = !DILocation(line: 4658, column: 13, scope: !10757)
!10757 = distinct !DILexicalBlock(scope: !10747, file: !3, line: 4658, column: 13)
!10758 = !DILocation(line: 4658, column: 20, scope: !10757)
!10759 = !DILocation(line: 4658, column: 13, scope: !10747)
!10760 = !DILocation(line: 4663, column: 3, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10757, file: !3, line: 4658, column: 25)
!10762 = !DILocation(line: 4665, column: 10, scope: !10761)
!10763 = !DILocation(line: 4665, column: 3, scope: !10761)
!10764 = !DILocation(line: 4668, column: 2, scope: !10707)
!10765 = !DILocation(line: 4669, column: 1, scope: !10707)
!10766 = distinct !DISubprogram(name: "ktime_add_us", scope: !550, file: !550, line: 179, type: !10767, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10767 = !DISubroutineType(types: !10768)
!10768 = !{!549, !10769, !10770}
!10769 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !549)
!10770 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!10771 = !DILocalVariable(name: "kt", arg: 1, scope: !10766, file: !550, line: 179, type: !10769)
!10772 = !DILocation(line: 179, column: 50, scope: !10766)
!10773 = !DILocalVariable(name: "usec", arg: 2, scope: !10766, file: !550, line: 179, type: !10770)
!10774 = !DILocation(line: 179, column: 64, scope: !10766)
!10775 = !DILocation(line: 181, column: 9, scope: !10766)
!10776 = !DILocation(line: 181, column: 2, scope: !10766)
!10777 = distinct !DISubprogram(name: "do_get_act_status", scope: !3, file: !3, line: 4617, type: !7745, scopeLine: 4618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10778 = !DILocalVariable(name: "aux", arg: 1, scope: !10777, file: !3, line: 4617, type: !5728)
!10779 = !DILocation(line: 4617, column: 49, scope: !10777)
!10780 = !DILocalVariable(name: "ret", scope: !10777, file: !3, line: 4619, type: !115)
!10781 = !DILocation(line: 4619, column: 6, scope: !10777)
!10782 = !DILocalVariable(name: "status", scope: !10777, file: !3, line: 4620, type: !364)
!10783 = !DILocation(line: 4620, column: 5, scope: !10777)
!10784 = !DILocation(line: 4622, column: 26, scope: !10777)
!10785 = !DILocation(line: 4622, column: 8, scope: !10777)
!10786 = !DILocation(line: 4622, column: 6, scope: !10777)
!10787 = !DILocation(line: 4623, column: 6, scope: !10788)
!10788 = distinct !DILexicalBlock(scope: !10777, file: !3, line: 4623, column: 6)
!10789 = !DILocation(line: 4623, column: 10, scope: !10788)
!10790 = !DILocation(line: 4623, column: 6, scope: !10777)
!10791 = !DILocation(line: 4624, column: 10, scope: !10788)
!10792 = !DILocation(line: 4624, column: 3, scope: !10788)
!10793 = !DILocation(line: 4626, column: 9, scope: !10777)
!10794 = !DILocation(line: 4626, column: 2, scope: !10777)
!10795 = !DILocation(line: 4627, column: 1, scope: !10777)
!10796 = distinct !DISubprogram(name: "ktime_compare", scope: !550, file: !550, line: 95, type: !10797, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10797 = !DISubroutineType(types: !10798)
!10798 = !{!115, !10769, !10769}
!10799 = !DILocalVariable(name: "cmp1", arg: 1, scope: !10796, file: !550, line: 95, type: !10769)
!10800 = !DILocation(line: 95, column: 47, scope: !10796)
!10801 = !DILocalVariable(name: "cmp2", arg: 2, scope: !10796, file: !550, line: 95, type: !10769)
!10802 = !DILocation(line: 95, column: 67, scope: !10796)
!10803 = !DILocation(line: 97, column: 6, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10796, file: !550, line: 97, column: 6)
!10805 = !DILocation(line: 97, column: 13, scope: !10804)
!10806 = !DILocation(line: 97, column: 11, scope: !10804)
!10807 = !DILocation(line: 97, column: 6, scope: !10796)
!10808 = !DILocation(line: 98, column: 3, scope: !10804)
!10809 = !DILocation(line: 99, column: 6, scope: !10810)
!10810 = distinct !DILexicalBlock(scope: !10796, file: !550, line: 99, column: 6)
!10811 = !DILocation(line: 99, column: 13, scope: !10810)
!10812 = !DILocation(line: 99, column: 11, scope: !10810)
!10813 = !DILocation(line: 99, column: 6, scope: !10796)
!10814 = !DILocation(line: 100, column: 3, scope: !10810)
!10815 = !DILocation(line: 101, column: 2, scope: !10796)
!10816 = !DILocation(line: 102, column: 1, scope: !10796)
!10817 = distinct !DISubprogram(name: "drm_dp_calc_pbn_mode", scope: !3, file: !3, line: 4680, type: !10818, scopeLine: 4681, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10818 = !DISubroutineType(types: !10819)
!10819 = !{!115, !115, !115, !370}
!10820 = !DILocalVariable(name: "clock", arg: 1, scope: !10817, file: !3, line: 4680, type: !115)
!10821 = !DILocation(line: 4680, column: 30, scope: !10817)
!10822 = !DILocalVariable(name: "bpp", arg: 2, scope: !10817, file: !3, line: 4680, type: !115)
!10823 = !DILocation(line: 4680, column: 41, scope: !10817)
!10824 = !DILocalVariable(name: "dsc", arg: 3, scope: !10817, file: !3, line: 4680, type: !370)
!10825 = !DILocation(line: 4680, column: 51, scope: !10817)
!10826 = !DILocation(line: 4697, column: 6, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 4697, column: 6)
!10828 = !DILocation(line: 4697, column: 6, scope: !10817)
!10829 = !DILocalVariable(name: "_tmp", scope: !10830, file: !3, line: 4698, type: !506)
!10830 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 4698, column: 10)
!10831 = !DILocation(line: 4698, column: 10, scope: !10830)
!10832 = !DILocalVariable(name: "__base", scope: !10833, file: !3, line: 4698, type: !1492)
!10833 = distinct !DILexicalBlock(scope: !10830, file: !3, line: 4698, column: 10)
!10834 = !DILocation(line: 4698, column: 10, scope: !10833)
!10835 = !DILocalVariable(name: "__rem", scope: !10833, file: !3, line: 4698, type: !1492)
!10836 = !DILocation(line: 4698, column: 10, scope: !10827)
!10837 = !DILocation(line: 4698, column: 3, scope: !10827)
!10838 = !DILocalVariable(name: "_tmp", scope: !10839, file: !3, line: 4701, type: !506)
!10839 = distinct !DILexicalBlock(scope: !10817, file: !3, line: 4701, column: 9)
!10840 = !DILocation(line: 4701, column: 9, scope: !10839)
!10841 = !DILocalVariable(name: "__base", scope: !10842, file: !3, line: 4701, type: !1492)
!10842 = distinct !DILexicalBlock(scope: !10839, file: !3, line: 4701, column: 9)
!10843 = !DILocation(line: 4701, column: 9, scope: !10842)
!10844 = !DILocalVariable(name: "__rem", scope: !10842, file: !3, line: 4701, type: !1492)
!10845 = !DILocation(line: 4701, column: 9, scope: !10817)
!10846 = !DILocation(line: 4701, column: 2, scope: !10817)
!10847 = !DILocation(line: 4703, column: 1, scope: !10817)
!10848 = distinct !DISubprogram(name: "mul_u32_u32", scope: !10849, file: !10849, line: 150, type: !10850, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10849 = !DIFile(filename: "./include/linux/math64.h", directory: "/home/lizy2001/genbc/linux")
!10850 = !DISubroutineType(types: !10851)
!10851 = !{!504, !468, !468}
!10852 = !DILocalVariable(name: "a", arg: 1, scope: !10848, file: !10849, line: 150, type: !468)
!10853 = !DILocation(line: 150, column: 35, scope: !10848)
!10854 = !DILocalVariable(name: "b", arg: 2, scope: !10848, file: !10849, line: 150, type: !468)
!10855 = !DILocation(line: 150, column: 42, scope: !10848)
!10856 = !DILocation(line: 152, column: 14, scope: !10848)
!10857 = !DILocation(line: 152, column: 9, scope: !10848)
!10858 = !DILocation(line: 152, column: 18, scope: !10848)
!10859 = !DILocation(line: 152, column: 16, scope: !10848)
!10860 = !DILocation(line: 152, column: 2, scope: !10848)
!10861 = distinct !DISubprogram(name: "drm_dp_mst_dump_topology", scope: !3, file: !3, line: 4765, type: !10862, scopeLine: 4767, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!10862 = !DISubroutineType(types: !10863)
!10863 = !{null, !1017, !406}
!10864 = !DILocalVariable(name: "m", arg: 1, scope: !10861, file: !3, line: 4765, type: !1017)
!10865 = !DILocation(line: 4765, column: 48, scope: !10861)
!10866 = !DILocalVariable(name: "mgr", arg: 2, scope: !10861, file: !3, line: 4766, type: !406)
!10867 = !DILocation(line: 4766, column: 42, scope: !10861)
!10868 = !DILocalVariable(name: "i", scope: !10861, file: !3, line: 4768, type: !115)
!10869 = !DILocation(line: 4768, column: 6, scope: !10861)
!10870 = !DILocalVariable(name: "port", scope: !10861, file: !3, line: 4769, type: !345)
!10871 = !DILocation(line: 4769, column: 26, scope: !10861)
!10872 = !DILocation(line: 4771, column: 14, scope: !10861)
!10873 = !DILocation(line: 4771, column: 19, scope: !10861)
!10874 = !DILocation(line: 4771, column: 2, scope: !10861)
!10875 = !DILocation(line: 4772, column: 6, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 4772, column: 6)
!10877 = !DILocation(line: 4772, column: 11, scope: !10876)
!10878 = !DILocation(line: 4772, column: 6, scope: !10861)
!10879 = !DILocation(line: 4773, column: 24, scope: !10876)
!10880 = !DILocation(line: 4773, column: 27, scope: !10876)
!10881 = !DILocation(line: 4773, column: 32, scope: !10876)
!10882 = !DILocation(line: 4773, column: 3, scope: !10876)
!10883 = !DILocation(line: 4776, column: 16, scope: !10861)
!10884 = !DILocation(line: 4776, column: 21, scope: !10861)
!10885 = !DILocation(line: 4776, column: 2, scope: !10861)
!10886 = !DILocation(line: 4778, column: 14, scope: !10861)
!10887 = !DILocation(line: 4778, column: 19, scope: !10861)
!10888 = !DILocation(line: 4778, column: 2, scope: !10861)
!10889 = !DILocation(line: 4779, column: 13, scope: !10861)
!10890 = !DILocation(line: 4779, column: 38, scope: !10861)
!10891 = !DILocation(line: 4779, column: 43, scope: !10861)
!10892 = !DILocation(line: 4779, column: 57, scope: !10861)
!10893 = !DILocation(line: 4779, column: 62, scope: !10861)
!10894 = !DILocation(line: 4780, column: 3, scope: !10861)
!10895 = !DILocation(line: 4780, column: 8, scope: !10861)
!10896 = !DILocation(line: 4779, column: 2, scope: !10861)
!10897 = !DILocation(line: 4782, column: 9, scope: !10898)
!10898 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 4782, column: 2)
!10899 = !DILocation(line: 4782, column: 7, scope: !10898)
!10900 = !DILocation(line: 4782, column: 14, scope: !10901)
!10901 = distinct !DILexicalBlock(scope: !10898, file: !3, line: 4782, column: 2)
!10902 = !DILocation(line: 4782, column: 18, scope: !10901)
!10903 = !DILocation(line: 4782, column: 23, scope: !10901)
!10904 = !DILocation(line: 4782, column: 16, scope: !10901)
!10905 = !DILocation(line: 4782, column: 2, scope: !10898)
!10906 = !DILocation(line: 4783, column: 7, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10908, file: !3, line: 4783, column: 7)
!10908 = distinct !DILexicalBlock(scope: !10901, file: !3, line: 4782, column: 42)
!10909 = !DILocation(line: 4783, column: 12, scope: !10907)
!10910 = !DILocation(line: 4783, column: 27, scope: !10907)
!10911 = !DILocation(line: 4783, column: 7, scope: !10908)
!10912 = !DILocalVariable(name: "name", scope: !10913, file: !3, line: 4784, type: !10914)
!10913 = distinct !DILexicalBlock(scope: !10907, file: !3, line: 4783, column: 31)
!10914 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 112, elements: !10915)
!10915 = !{!10916}
!10916 = !DISubrange(count: 14)
!10917 = !DILocation(line: 4784, column: 9, scope: !10913)
!10918 = !DILocalVariable(name: "__mptr", scope: !10919, file: !3, line: 4786, type: !344)
!10919 = distinct !DILexicalBlock(scope: !10913, file: !3, line: 4786, column: 11)
!10920 = !DILocation(line: 4786, column: 11, scope: !10919)
!10921 = !DILocation(line: 4786, column: 11, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10919, file: !3, line: 4786, column: 11)
!10923 = !DILocation(line: 4786, column: 9, scope: !10913)
!10924 = !DILocation(line: 4787, column: 23, scope: !10913)
!10925 = !DILocation(line: 4787, column: 28, scope: !10913)
!10926 = !DILocation(line: 4787, column: 34, scope: !10913)
!10927 = !DILocation(line: 4787, column: 4, scope: !10913)
!10928 = !DILocation(line: 4788, column: 15, scope: !10913)
!10929 = !DILocation(line: 4788, column: 55, scope: !10913)
!10930 = !DILocation(line: 4789, column: 8, scope: !10913)
!10931 = !DILocation(line: 4789, column: 14, scope: !10913)
!10932 = !DILocation(line: 4789, column: 24, scope: !10913)
!10933 = !DILocation(line: 4789, column: 30, scope: !10913)
!10934 = !DILocation(line: 4789, column: 35, scope: !10913)
!10935 = !DILocation(line: 4790, column: 8, scope: !10913)
!10936 = !DILocation(line: 4790, column: 14, scope: !10913)
!10937 = !DILocation(line: 4790, column: 19, scope: !10913)
!10938 = !DILocation(line: 4791, column: 9, scope: !10913)
!10939 = !DILocation(line: 4791, column: 15, scope: !10913)
!10940 = !DILocation(line: 4791, column: 8, scope: !10913)
!10941 = !DILocation(line: 4791, column: 23, scope: !10913)
!10942 = !DILocation(line: 4788, column: 4, scope: !10913)
!10943 = !DILocation(line: 4792, column: 3, scope: !10913)
!10944 = !DILocation(line: 4793, column: 15, scope: !10907)
!10945 = !DILocation(line: 4793, column: 38, scope: !10907)
!10946 = !DILocation(line: 4793, column: 4, scope: !10907)
!10947 = !DILocation(line: 4794, column: 2, scope: !10908)
!10948 = !DILocation(line: 4782, column: 38, scope: !10901)
!10949 = !DILocation(line: 4782, column: 2, scope: !10901)
!10950 = distinct !{!10950, !10905, !10951}
!10951 = !DILocation(line: 4794, column: 2, scope: !10898)
!10952 = !DILocation(line: 4795, column: 9, scope: !10953)
!10953 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 4795, column: 2)
!10954 = !DILocation(line: 4795, column: 7, scope: !10953)
!10955 = !DILocation(line: 4795, column: 14, scope: !10956)
!10956 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 4795, column: 2)
!10957 = !DILocation(line: 4795, column: 18, scope: !10956)
!10958 = !DILocation(line: 4795, column: 23, scope: !10956)
!10959 = !DILocation(line: 4795, column: 16, scope: !10956)
!10960 = !DILocation(line: 4795, column: 2, scope: !10953)
!10961 = !DILocation(line: 4796, column: 14, scope: !10962)
!10962 = distinct !DILexicalBlock(scope: !10956, file: !3, line: 4795, column: 42)
!10963 = !DILocation(line: 4797, column: 7, scope: !10962)
!10964 = !DILocation(line: 4798, column: 7, scope: !10962)
!10965 = !DILocation(line: 4798, column: 12, scope: !10962)
!10966 = !DILocation(line: 4798, column: 21, scope: !10962)
!10967 = !DILocation(line: 4798, column: 24, scope: !10962)
!10968 = !DILocation(line: 4799, column: 7, scope: !10962)
!10969 = !DILocation(line: 4799, column: 12, scope: !10962)
!10970 = !DILocation(line: 4799, column: 21, scope: !10962)
!10971 = !DILocation(line: 4799, column: 24, scope: !10962)
!10972 = !DILocation(line: 4800, column: 7, scope: !10962)
!10973 = !DILocation(line: 4800, column: 12, scope: !10962)
!10974 = !DILocation(line: 4800, column: 21, scope: !10962)
!10975 = !DILocation(line: 4800, column: 24, scope: !10962)
!10976 = !DILocation(line: 4796, column: 3, scope: !10962)
!10977 = !DILocation(line: 4803, column: 2, scope: !10962)
!10978 = !DILocation(line: 4795, column: 38, scope: !10956)
!10979 = !DILocation(line: 4795, column: 2, scope: !10956)
!10980 = distinct !{!10980, !10960, !10981}
!10981 = !DILocation(line: 4803, column: 2, scope: !10953)
!10982 = !DILocation(line: 4804, column: 16, scope: !10861)
!10983 = !DILocation(line: 4804, column: 21, scope: !10861)
!10984 = !DILocation(line: 4804, column: 2, scope: !10861)
!10985 = !DILocation(line: 4806, column: 14, scope: !10861)
!10986 = !DILocation(line: 4806, column: 19, scope: !10861)
!10987 = !DILocation(line: 4806, column: 2, scope: !10861)
!10988 = !DILocation(line: 4807, column: 6, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10861, file: !3, line: 4807, column: 6)
!10990 = !DILocation(line: 4807, column: 11, scope: !10989)
!10991 = !DILocation(line: 4807, column: 6, scope: !10861)
!10992 = !DILocalVariable(name: "buf", scope: !10993, file: !3, line: 4808, type: !10994)
!10993 = distinct !DILexicalBlock(scope: !10989, file: !3, line: 4807, column: 24)
!10994 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 512, elements: !2943)
!10995 = !DILocation(line: 4808, column: 6, scope: !10993)
!10996 = !DILocalVariable(name: "ret", scope: !10993, file: !3, line: 4809, type: !115)
!10997 = !DILocation(line: 4809, column: 7, scope: !10993)
!10998 = !DILocation(line: 4811, column: 26, scope: !10993)
!10999 = !DILocation(line: 4811, column: 31, scope: !10993)
!11000 = !DILocation(line: 4811, column: 49, scope: !10993)
!11001 = !DILocation(line: 4811, column: 9, scope: !10993)
!11002 = !DILocation(line: 4811, column: 7, scope: !10993)
!11003 = !DILocation(line: 4812, column: 7, scope: !11004)
!11004 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 4812, column: 7)
!11005 = !DILocation(line: 4812, column: 7, scope: !10993)
!11006 = !DILocation(line: 4813, column: 15, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !11004, file: !3, line: 4812, column: 12)
!11008 = !DILocation(line: 4813, column: 4, scope: !11007)
!11009 = !DILocation(line: 4814, column: 4, scope: !11007)
!11010 = !DILocation(line: 4816, column: 14, scope: !10993)
!11011 = !DILocation(line: 4816, column: 55, scope: !10993)
!11012 = !DILocation(line: 4816, column: 3, scope: !10993)
!11013 = !DILocation(line: 4818, column: 26, scope: !10993)
!11014 = !DILocation(line: 4818, column: 31, scope: !10993)
!11015 = !DILocation(line: 4818, column: 49, scope: !10993)
!11016 = !DILocation(line: 4818, column: 9, scope: !10993)
!11017 = !DILocation(line: 4818, column: 7, scope: !10993)
!11018 = !DILocation(line: 4819, column: 7, scope: !11019)
!11019 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 4819, column: 7)
!11020 = !DILocation(line: 4819, column: 7, scope: !10993)
!11021 = !DILocation(line: 4820, column: 15, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11019, file: !3, line: 4819, column: 12)
!11023 = !DILocation(line: 4820, column: 4, scope: !11022)
!11024 = !DILocation(line: 4821, column: 4, scope: !11022)
!11025 = !DILocation(line: 4823, column: 14, scope: !10993)
!11026 = !DILocation(line: 4823, column: 40, scope: !10993)
!11027 = !DILocation(line: 4823, column: 3, scope: !10993)
!11028 = !DILocation(line: 4825, column: 26, scope: !10993)
!11029 = !DILocation(line: 4825, column: 31, scope: !10993)
!11030 = !DILocation(line: 4825, column: 50, scope: !10993)
!11031 = !DILocation(line: 4825, column: 9, scope: !10993)
!11032 = !DILocation(line: 4825, column: 7, scope: !10993)
!11033 = !DILocation(line: 4826, column: 7, scope: !11034)
!11034 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 4826, column: 7)
!11035 = !DILocation(line: 4826, column: 7, scope: !10993)
!11036 = !DILocation(line: 4827, column: 15, scope: !11037)
!11037 = distinct !DILexicalBlock(scope: !11034, file: !3, line: 4826, column: 12)
!11038 = !DILocation(line: 4827, column: 4, scope: !11037)
!11039 = !DILocation(line: 4828, column: 4, scope: !11037)
!11040 = !DILocation(line: 4830, column: 14, scope: !10993)
!11041 = !DILocation(line: 4830, column: 40, scope: !10993)
!11042 = !DILocation(line: 4830, column: 3, scope: !10993)
!11043 = !DILocation(line: 4833, column: 26, scope: !10993)
!11044 = !DILocation(line: 4833, column: 31, scope: !10993)
!11045 = !DILocation(line: 4833, column: 51, scope: !10993)
!11046 = !DILocation(line: 4833, column: 9, scope: !10993)
!11047 = !DILocation(line: 4833, column: 7, scope: !10993)
!11048 = !DILocation(line: 4834, column: 7, scope: !11049)
!11049 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 4834, column: 7)
!11050 = !DILocation(line: 4834, column: 7, scope: !10993)
!11051 = !DILocation(line: 4835, column: 15, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 4834, column: 12)
!11053 = !DILocation(line: 4835, column: 4, scope: !11052)
!11054 = !DILocation(line: 4836, column: 4, scope: !11052)
!11055 = !DILocation(line: 4838, column: 14, scope: !10993)
!11056 = !DILocation(line: 4838, column: 49, scope: !10993)
!11057 = !DILocation(line: 4838, column: 3, scope: !10993)
!11058 = !DILocation(line: 4840, column: 10, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 4840, column: 3)
!11060 = !DILocation(line: 4840, column: 8, scope: !11059)
!11061 = !DILocation(line: 4840, column: 17, scope: !11062)
!11062 = distinct !DILexicalBlock(scope: !11059, file: !3, line: 4840, column: 3)
!11063 = !DILocation(line: 4840, column: 19, scope: !11062)
!11064 = !DILocation(line: 4840, column: 25, scope: !11062)
!11065 = !DILocation(line: 4840, column: 32, scope: !11062)
!11066 = !DILocation(line: 4840, column: 28, scope: !11062)
!11067 = !DILocation(line: 0, scope: !11062)
!11068 = !DILocation(line: 4840, column: 3, scope: !11059)
!11069 = !DILocation(line: 4841, column: 15, scope: !11062)
!11070 = !DILocation(line: 4841, column: 28, scope: !11062)
!11071 = !DILocation(line: 4841, column: 24, scope: !11062)
!11072 = !DILocation(line: 4841, column: 4, scope: !11062)
!11073 = !DILocation(line: 4840, column: 37, scope: !11062)
!11074 = !DILocation(line: 4840, column: 3, scope: !11062)
!11075 = distinct !{!11075, !11068, !11076}
!11076 = !DILocation(line: 4841, column: 30, scope: !11059)
!11077 = !DILocation(line: 4842, column: 14, scope: !10993)
!11078 = !DILocation(line: 4843, column: 7, scope: !10993)
!11079 = !DILocation(line: 4843, column: 16, scope: !10993)
!11080 = !DILocation(line: 4843, column: 22, scope: !10993)
!11081 = !DILocation(line: 4843, column: 31, scope: !10993)
!11082 = !DILocation(line: 4843, column: 38, scope: !10993)
!11083 = !DILocation(line: 4843, column: 48, scope: !10993)
!11084 = !DILocation(line: 4842, column: 3, scope: !10993)
!11085 = !DILocation(line: 4844, column: 29, scope: !11086)
!11086 = distinct !DILexicalBlock(scope: !10993, file: !3, line: 4844, column: 7)
!11087 = !DILocation(line: 4844, column: 34, scope: !11086)
!11088 = !DILocation(line: 4844, column: 7, scope: !11086)
!11089 = !DILocation(line: 4844, column: 7, scope: !10993)
!11090 = !DILocation(line: 4845, column: 15, scope: !11086)
!11091 = !DILocation(line: 4845, column: 66, scope: !11086)
!11092 = !DILocation(line: 4845, column: 4, scope: !11086)
!11093 = !DILocation(line: 4846, column: 2, scope: !10993)
!11094 = !DILabel(scope: !10861, name: "out", file: !3, line: 4848)
!11095 = !DILocation(line: 4848, column: 1, scope: !10861)
!11096 = !DILocation(line: 4849, column: 16, scope: !10861)
!11097 = !DILocation(line: 4849, column: 21, scope: !10861)
!11098 = !DILocation(line: 4849, column: 2, scope: !10861)
!11099 = !DILocation(line: 4851, column: 1, scope: !10861)
!11100 = distinct !DISubprogram(name: "drm_dp_mst_dump_mstb", scope: !3, file: !3, line: 4712, type: !11101, scopeLine: 4714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11101 = !DISubroutineType(types: !11102)
!11102 = !{null, !1017, !391}
!11103 = !DILocalVariable(name: "m", arg: 1, scope: !11100, file: !3, line: 4712, type: !1017)
!11104 = !DILocation(line: 4712, column: 51, scope: !11100)
!11105 = !DILocalVariable(name: "mstb", arg: 2, scope: !11100, file: !3, line: 4713, type: !391)
!11106 = !DILocation(line: 4713, column: 32, scope: !11100)
!11107 = !DILocalVariable(name: "port", scope: !11100, file: !3, line: 4715, type: !345)
!11108 = !DILocation(line: 4715, column: 26, scope: !11100)
!11109 = !DILocalVariable(name: "tabs", scope: !11100, file: !3, line: 4716, type: !115)
!11110 = !DILocation(line: 4716, column: 6, scope: !11100)
!11111 = !DILocation(line: 4716, column: 13, scope: !11100)
!11112 = !DILocation(line: 4716, column: 19, scope: !11100)
!11113 = !DILocalVariable(name: "prefix", scope: !11100, file: !3, line: 4717, type: !11114)
!11114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 80, elements: !5531)
!11115 = !DILocation(line: 4717, column: 7, scope: !11100)
!11116 = !DILocalVariable(name: "i", scope: !11100, file: !3, line: 4718, type: !115)
!11117 = !DILocation(line: 4718, column: 6, scope: !11100)
!11118 = !DILocation(line: 4720, column: 9, scope: !11119)
!11119 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 4720, column: 2)
!11120 = !DILocation(line: 4720, column: 7, scope: !11119)
!11121 = !DILocation(line: 4720, column: 14, scope: !11122)
!11122 = distinct !DILexicalBlock(scope: !11119, file: !3, line: 4720, column: 2)
!11123 = !DILocation(line: 4720, column: 18, scope: !11122)
!11124 = !DILocation(line: 4720, column: 16, scope: !11122)
!11125 = !DILocation(line: 4720, column: 2, scope: !11119)
!11126 = !DILocation(line: 4721, column: 10, scope: !11122)
!11127 = !DILocation(line: 4721, column: 3, scope: !11122)
!11128 = !DILocation(line: 4721, column: 13, scope: !11122)
!11129 = !DILocation(line: 4720, column: 25, scope: !11122)
!11130 = !DILocation(line: 4720, column: 2, scope: !11122)
!11131 = distinct !{!11131, !11125, !11132}
!11132 = !DILocation(line: 4721, column: 15, scope: !11119)
!11133 = !DILocation(line: 4722, column: 9, scope: !11100)
!11134 = !DILocation(line: 4722, column: 2, scope: !11100)
!11135 = !DILocation(line: 4722, column: 12, scope: !11100)
!11136 = !DILocation(line: 4724, column: 13, scope: !11100)
!11137 = !DILocation(line: 4724, column: 35, scope: !11100)
!11138 = !DILocation(line: 4724, column: 43, scope: !11100)
!11139 = !DILocation(line: 4724, column: 49, scope: !11100)
!11140 = !DILocation(line: 4724, column: 55, scope: !11100)
!11141 = !DILocation(line: 4724, column: 2, scope: !11100)
!11142 = !DILocalVariable(name: "__mptr", scope: !11143, file: !3, line: 4725, type: !344)
!11143 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 4725, column: 2)
!11144 = distinct !DILexicalBlock(scope: !11100, file: !3, line: 4725, column: 2)
!11145 = !DILocation(line: 4725, column: 2, scope: !11143)
!11146 = !DILocation(line: 4725, column: 2, scope: !11147)
!11147 = distinct !DILexicalBlock(scope: !11143, file: !3, line: 4725, column: 2)
!11148 = !DILocation(line: 4725, column: 2, scope: !11144)
!11149 = !DILocation(line: 4725, column: 2, scope: !11150)
!11150 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 4725, column: 2)
!11151 = !DILocation(line: 4726, column: 14, scope: !11152)
!11152 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 4725, column: 48)
!11153 = !DILocation(line: 4726, column: 98, scope: !11152)
!11154 = !DILocation(line: 4726, column: 106, scope: !11152)
!11155 = !DILocation(line: 4726, column: 112, scope: !11152)
!11156 = !DILocation(line: 4726, column: 122, scope: !11152)
!11157 = !DILocation(line: 4726, column: 128, scope: !11152)
!11158 = !DILocation(line: 4726, column: 135, scope: !11152)
!11159 = !DILocation(line: 4726, column: 141, scope: !11152)
!11160 = !DILocation(line: 4726, column: 146, scope: !11152)
!11161 = !DILocation(line: 4726, column: 152, scope: !11152)
!11162 = !DILocation(line: 4726, column: 158, scope: !11152)
!11163 = !DILocation(line: 4726, column: 164, scope: !11152)
!11164 = !DILocation(line: 4726, column: 170, scope: !11152)
!11165 = !DILocation(line: 4726, column: 176, scope: !11152)
!11166 = !DILocation(line: 4726, column: 193, scope: !11152)
!11167 = !DILocation(line: 4726, column: 199, scope: !11152)
!11168 = !DILocation(line: 4726, column: 221, scope: !11152)
!11169 = !DILocation(line: 4726, column: 227, scope: !11152)
!11170 = !DILocation(line: 4726, column: 233, scope: !11152)
!11171 = !DILocation(line: 4726, column: 3, scope: !11152)
!11172 = !DILocation(line: 4727, column: 7, scope: !11173)
!11173 = distinct !DILexicalBlock(scope: !11152, file: !3, line: 4727, column: 7)
!11174 = !DILocation(line: 4727, column: 13, scope: !11173)
!11175 = !DILocation(line: 4727, column: 7, scope: !11152)
!11176 = !DILocation(line: 4728, column: 25, scope: !11173)
!11177 = !DILocation(line: 4728, column: 28, scope: !11173)
!11178 = !DILocation(line: 4728, column: 34, scope: !11173)
!11179 = !DILocation(line: 4728, column: 4, scope: !11173)
!11180 = !DILocation(line: 4729, column: 2, scope: !11152)
!11181 = !DILocalVariable(name: "__mptr", scope: !11182, file: !3, line: 4725, type: !344)
!11182 = distinct !DILexicalBlock(scope: !11150, file: !3, line: 4725, column: 2)
!11183 = !DILocation(line: 4725, column: 2, scope: !11182)
!11184 = !DILocation(line: 4725, column: 2, scope: !11185)
!11185 = distinct !DILexicalBlock(scope: !11182, file: !3, line: 4725, column: 2)
!11186 = distinct !{!11186, !11148, !11187}
!11187 = !DILocation(line: 4729, column: 2, scope: !11144)
!11188 = !DILocation(line: 4730, column: 1, scope: !11100)
!11189 = distinct !DISubprogram(name: "fetch_monitor_name", scope: !3, file: !3, line: 4748, type: !11190, scopeLine: 4751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11190 = !DISubroutineType(types: !11191)
!11191 = !{null, !406, !345, !870, !115}
!11192 = !DILocalVariable(name: "mgr", arg: 1, scope: !11189, file: !3, line: 4748, type: !406)
!11193 = !DILocation(line: 4748, column: 64, scope: !11189)
!11194 = !DILocalVariable(name: "port", arg: 2, scope: !11189, file: !3, line: 4749, type: !345)
!11195 = !DILocation(line: 4749, column: 35, scope: !11189)
!11196 = !DILocalVariable(name: "name", arg: 3, scope: !11189, file: !3, line: 4749, type: !870)
!11197 = !DILocation(line: 4749, column: 47, scope: !11189)
!11198 = !DILocalVariable(name: "namelen", arg: 4, scope: !11189, file: !3, line: 4750, type: !115)
!11199 = !DILocation(line: 4750, column: 15, scope: !11189)
!11200 = !DILocalVariable(name: "mst_edid", scope: !11189, file: !3, line: 4752, type: !5846)
!11201 = !DILocation(line: 4752, column: 15, scope: !11189)
!11202 = !DILocation(line: 4754, column: 33, scope: !11189)
!11203 = !DILocation(line: 4754, column: 39, scope: !11189)
!11204 = !DILocation(line: 4754, column: 50, scope: !11189)
!11205 = !DILocation(line: 4754, column: 55, scope: !11189)
!11206 = !DILocation(line: 4754, column: 13, scope: !11189)
!11207 = !DILocation(line: 4754, column: 11, scope: !11189)
!11208 = !DILocation(line: 4755, column: 28, scope: !11189)
!11209 = !DILocation(line: 4755, column: 38, scope: !11189)
!11210 = !DILocation(line: 4755, column: 44, scope: !11189)
!11211 = !DILocation(line: 4755, column: 2, scope: !11189)
!11212 = !DILocation(line: 4756, column: 1, scope: !11189)
!11213 = distinct !DISubprogram(name: "dump_dp_payload_table", scope: !3, file: !3, line: 4734, type: !11214, scopeLine: 4736, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11214 = !DISubroutineType(types: !11215)
!11215 = !{!370, !406, !870}
!11216 = !DILocalVariable(name: "mgr", arg: 1, scope: !11213, file: !3, line: 4734, type: !406)
!11217 = !DILocation(line: 4734, column: 67, scope: !11213)
!11218 = !DILocalVariable(name: "buf", arg: 2, scope: !11213, file: !3, line: 4735, type: !870)
!11219 = !DILocation(line: 4735, column: 13, scope: !11213)
!11220 = !DILocalVariable(name: "i", scope: !11213, file: !3, line: 4737, type: !115)
!11221 = !DILocation(line: 4737, column: 6, scope: !11213)
!11222 = !DILocation(line: 4739, column: 9, scope: !11223)
!11223 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 4739, column: 2)
!11224 = !DILocation(line: 4739, column: 7, scope: !11223)
!11225 = !DILocation(line: 4739, column: 14, scope: !11226)
!11226 = distinct !DILexicalBlock(scope: !11223, file: !3, line: 4739, column: 2)
!11227 = !DILocation(line: 4739, column: 16, scope: !11226)
!11228 = !DILocation(line: 4739, column: 2, scope: !11223)
!11229 = !DILocation(line: 4740, column: 24, scope: !11230)
!11230 = distinct !DILexicalBlock(scope: !11231, file: !3, line: 4740, column: 7)
!11231 = distinct !DILexicalBlock(scope: !11226, file: !3, line: 4739, column: 50)
!11232 = !DILocation(line: 4740, column: 29, scope: !11230)
!11233 = !DILocation(line: 4741, column: 43, scope: !11230)
!11234 = !DILocation(line: 4741, column: 41, scope: !11230)
!11235 = !DILocation(line: 4742, column: 11, scope: !11230)
!11236 = !DILocation(line: 4742, column: 15, scope: !11230)
!11237 = !DILocation(line: 4740, column: 7, scope: !11230)
!11238 = !DILocation(line: 4742, column: 23, scope: !11230)
!11239 = !DILocation(line: 4740, column: 7, scope: !11231)
!11240 = !DILocation(line: 4743, column: 4, scope: !11230)
!11241 = !DILocation(line: 4744, column: 2, scope: !11231)
!11242 = !DILocation(line: 4739, column: 43, scope: !11226)
!11243 = !DILocation(line: 4739, column: 2, scope: !11226)
!11244 = distinct !{!11244, !11228, !11245}
!11245 = !DILocation(line: 4744, column: 2, scope: !11223)
!11246 = !DILocation(line: 4745, column: 2, scope: !11213)
!11247 = !DILocation(line: 4746, column: 1, scope: !11213)
!11248 = distinct !DISubprogram(name: "drm_dp_mst_add_affected_dsc_crtcs", scope: !3, file: !3, line: 5189, type: !11249, scopeLine: 5190, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11249 = !DISubroutineType(types: !11250)
!11250 = !{!115, !3367, !406}
!11251 = !DILocalVariable(name: "state", arg: 1, scope: !11248, file: !3, line: 5189, type: !3367)
!11252 = !DILocation(line: 5189, column: 64, scope: !11248)
!11253 = !DILocalVariable(name: "mgr", arg: 2, scope: !11248, file: !3, line: 5189, type: !406)
!11254 = !DILocation(line: 5189, column: 103, scope: !11248)
!11255 = !DILocalVariable(name: "mst_state", scope: !11248, file: !3, line: 5191, type: !5988)
!11256 = !DILocation(line: 5191, column: 36, scope: !11248)
!11257 = !DILocalVariable(name: "pos", scope: !11248, file: !3, line: 5192, type: !5980)
!11258 = !DILocation(line: 5192, column: 33, scope: !11248)
!11259 = !DILocalVariable(name: "connector", scope: !11248, file: !3, line: 5193, type: !4829)
!11260 = !DILocation(line: 5193, column: 24, scope: !11248)
!11261 = !DILocalVariable(name: "conn_state", scope: !11248, file: !3, line: 5194, type: !4941)
!11262 = !DILocation(line: 5194, column: 30, scope: !11248)
!11263 = !DILocalVariable(name: "crtc", scope: !11248, file: !3, line: 5195, type: !4767)
!11264 = !DILocation(line: 5195, column: 19, scope: !11248)
!11265 = !DILocalVariable(name: "crtc_state", scope: !11248, file: !3, line: 5196, type: !5003)
!11266 = !DILocation(line: 5196, column: 25, scope: !11248)
!11267 = !DILocation(line: 5198, column: 48, scope: !11248)
!11268 = !DILocation(line: 5198, column: 55, scope: !11248)
!11269 = !DILocation(line: 5198, column: 14, scope: !11248)
!11270 = !DILocation(line: 5198, column: 12, scope: !11248)
!11271 = !DILocation(line: 5200, column: 13, scope: !11272)
!11272 = distinct !DILexicalBlock(scope: !11248, file: !3, line: 5200, column: 6)
!11273 = !DILocation(line: 5200, column: 6, scope: !11272)
!11274 = !DILocation(line: 5200, column: 6, scope: !11248)
!11275 = !DILocation(line: 5201, column: 3, scope: !11272)
!11276 = !DILocalVariable(name: "__mptr", scope: !11277, file: !3, line: 5203, type: !344)
!11277 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 5203, column: 2)
!11278 = distinct !DILexicalBlock(scope: !11248, file: !3, line: 5203, column: 2)
!11279 = !DILocation(line: 5203, column: 2, scope: !11277)
!11280 = !DILocation(line: 5203, column: 2, scope: !11281)
!11281 = distinct !DILexicalBlock(scope: !11277, file: !3, line: 5203, column: 2)
!11282 = !DILocation(line: 5203, column: 2, scope: !11278)
!11283 = !DILocation(line: 5203, column: 2, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 5203, column: 2)
!11285 = !DILocation(line: 5205, column: 15, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 5203, column: 52)
!11287 = !DILocation(line: 5205, column: 20, scope: !11286)
!11288 = !DILocation(line: 5205, column: 26, scope: !11286)
!11289 = !DILocation(line: 5205, column: 13, scope: !11286)
!11290 = !DILocation(line: 5207, column: 8, scope: !11291)
!11291 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 5207, column: 7)
!11292 = !DILocation(line: 5207, column: 7, scope: !11286)
!11293 = !DILocation(line: 5208, column: 4, scope: !11291)
!11294 = !DILocation(line: 5210, column: 47, scope: !11286)
!11295 = !DILocation(line: 5210, column: 54, scope: !11286)
!11296 = !DILocation(line: 5210, column: 16, scope: !11286)
!11297 = !DILocation(line: 5210, column: 14, scope: !11286)
!11298 = !DILocation(line: 5212, column: 14, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 5212, column: 7)
!11300 = !DILocation(line: 5212, column: 7, scope: !11299)
!11301 = !DILocation(line: 5212, column: 7, scope: !11286)
!11302 = !DILocation(line: 5213, column: 19, scope: !11299)
!11303 = !DILocation(line: 5213, column: 11, scope: !11299)
!11304 = !DILocation(line: 5213, column: 4, scope: !11299)
!11305 = !DILocation(line: 5215, column: 10, scope: !11286)
!11306 = !DILocation(line: 5215, column: 22, scope: !11286)
!11307 = !DILocation(line: 5215, column: 8, scope: !11286)
!11308 = !DILocation(line: 5217, column: 8, scope: !11309)
!11309 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 5217, column: 7)
!11310 = !DILocation(line: 5217, column: 7, scope: !11286)
!11311 = !DILocation(line: 5218, column: 4, scope: !11309)
!11312 = !DILocation(line: 5220, column: 36, scope: !11313)
!11313 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 5220, column: 7)
!11314 = !DILocation(line: 5220, column: 41, scope: !11313)
!11315 = !DILocation(line: 5220, column: 8, scope: !11313)
!11316 = !DILocation(line: 5220, column: 7, scope: !11286)
!11317 = !DILocation(line: 5221, column: 4, scope: !11313)
!11318 = !DILocation(line: 5223, column: 42, scope: !11286)
!11319 = !DILocation(line: 5223, column: 53, scope: !11286)
!11320 = !DILocation(line: 5223, column: 58, scope: !11286)
!11321 = !DILocation(line: 5223, column: 65, scope: !11286)
!11322 = !DILocation(line: 5223, column: 16, scope: !11286)
!11323 = !DILocation(line: 5223, column: 14, scope: !11286)
!11324 = !DILocation(line: 5225, column: 14, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 5225, column: 7)
!11326 = !DILocation(line: 5225, column: 7, scope: !11325)
!11327 = !DILocation(line: 5225, column: 7, scope: !11286)
!11328 = !DILocation(line: 5226, column: 19, scope: !11325)
!11329 = !DILocation(line: 5226, column: 11, scope: !11325)
!11330 = !DILocation(line: 5226, column: 4, scope: !11325)
!11331 = !DILocation(line: 5228, column: 3, scope: !11286)
!11332 = !DILocation(line: 5231, column: 3, scope: !11286)
!11333 = !DILocation(line: 5231, column: 15, scope: !11286)
!11334 = !DILocation(line: 5231, column: 28, scope: !11286)
!11335 = !DILocation(line: 5232, column: 2, scope: !11286)
!11336 = !DILocalVariable(name: "__mptr", scope: !11337, file: !3, line: 5203, type: !344)
!11337 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 5203, column: 2)
!11338 = !DILocation(line: 5203, column: 2, scope: !11337)
!11339 = !DILocation(line: 5203, column: 2, scope: !11340)
!11340 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 5203, column: 2)
!11341 = distinct !{!11341, !11282, !11342}
!11342 = !DILocation(line: 5232, column: 2, scope: !11278)
!11343 = !DILocation(line: 5233, column: 2, scope: !11248)
!11344 = !DILocation(line: 5234, column: 1, scope: !11248)
!11345 = distinct !DISubprogram(name: "drm_dp_mst_dsc_aux_for_port", scope: !3, file: !3, line: 5759, type: !11346, scopeLine: 5760, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11346 = !DISubroutineType(types: !11347)
!11347 = !{!5728, !345}
!11348 = !DILocalVariable(name: "port", arg: 1, scope: !11345, file: !3, line: 5759, type: !345)
!11349 = !DILocation(line: 5759, column: 72, scope: !11345)
!11350 = !DILocalVariable(name: "immediate_upstream_port", scope: !11345, file: !3, line: 5761, type: !345)
!11351 = !DILocation(line: 5761, column: 26, scope: !11345)
!11352 = !DILocalVariable(name: "fec_port", scope: !11345, file: !3, line: 5762, type: !345)
!11353 = !DILocation(line: 5762, column: 26, scope: !11345)
!11354 = !DILocalVariable(name: "desc", scope: !11345, file: !3, line: 5763, type: !11355)
!11355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_desc", file: !311, line: 1719, size: 128, elements: !11356)
!11356 = !{!11357, !11366}
!11357 = !DIDerivedType(tag: DW_TAG_member, name: "ident", scope: !11355, file: !311, line: 1720, baseType: !11358, size: 96)
!11358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "drm_dp_dpcd_ident", file: !311, line: 1706, size: 96, elements: !11359)
!11359 = !{!11360, !11361, !11363, !11364, !11365}
!11360 = !DIDerivedType(tag: DW_TAG_member, name: "oui", scope: !11358, file: !311, line: 1707, baseType: !5975, size: 24)
!11361 = !DIDerivedType(tag: DW_TAG_member, name: "device_id", scope: !11358, file: !311, line: 1708, baseType: !11362, size: 48, offset: 24)
!11362 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 48, elements: !1514)
!11363 = !DIDerivedType(tag: DW_TAG_member, name: "hw_rev", scope: !11358, file: !311, line: 1709, baseType: !364, size: 8, offset: 72)
!11364 = !DIDerivedType(tag: DW_TAG_member, name: "sw_major_rev", scope: !11358, file: !311, line: 1710, baseType: !364, size: 8, offset: 80)
!11365 = !DIDerivedType(tag: DW_TAG_member, name: "sw_minor_rev", scope: !11358, file: !311, line: 1711, baseType: !364, size: 8, offset: 88)
!11366 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !11355, file: !311, line: 1721, baseType: !468, size: 32, offset: 96)
!11367 = !DILocation(line: 5763, column: 21, scope: !11345)
!11368 = !DILocalVariable(name: "endpoint_fec", scope: !11345, file: !3, line: 5764, type: !364)
!11369 = !DILocation(line: 5764, column: 5, scope: !11345)
!11370 = !DILocalVariable(name: "endpoint_dsc", scope: !11345, file: !3, line: 5765, type: !364)
!11371 = !DILocation(line: 5765, column: 5, scope: !11345)
!11372 = !DILocation(line: 5767, column: 7, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5767, column: 6)
!11374 = !DILocation(line: 5767, column: 6, scope: !11345)
!11375 = !DILocation(line: 5768, column: 3, scope: !11373)
!11376 = !DILocation(line: 5770, column: 6, scope: !11377)
!11377 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5770, column: 6)
!11378 = !DILocation(line: 5770, column: 12, scope: !11377)
!11379 = !DILocation(line: 5770, column: 20, scope: !11377)
!11380 = !DILocation(line: 5770, column: 6, scope: !11345)
!11381 = !DILocation(line: 5771, column: 29, scope: !11377)
!11382 = !DILocation(line: 5771, column: 35, scope: !11377)
!11383 = !DILocation(line: 5771, column: 43, scope: !11377)
!11384 = !DILocation(line: 5771, column: 27, scope: !11377)
!11385 = !DILocation(line: 5771, column: 3, scope: !11377)
!11386 = !DILocation(line: 5773, column: 27, scope: !11377)
!11387 = !DILocation(line: 5775, column: 13, scope: !11345)
!11388 = !DILocation(line: 5775, column: 11, scope: !11345)
!11389 = !DILocation(line: 5776, column: 2, scope: !11345)
!11390 = !DILocation(line: 5776, column: 9, scope: !11345)
!11391 = !DILocation(line: 5781, column: 35, scope: !11392)
!11392 = distinct !DILexicalBlock(scope: !11393, file: !3, line: 5781, column: 7)
!11393 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5776, column: 19)
!11394 = !DILocation(line: 5781, column: 8, scope: !11392)
!11395 = !DILocation(line: 5781, column: 45, scope: !11392)
!11396 = !DILocation(line: 5782, column: 8, scope: !11392)
!11397 = !DILocation(line: 5782, column: 18, scope: !11392)
!11398 = !DILocation(line: 5781, column: 7, scope: !11393)
!11399 = !DILocation(line: 5783, column: 4, scope: !11392)
!11400 = !DILocation(line: 5785, column: 14, scope: !11393)
!11401 = !DILocation(line: 5785, column: 24, scope: !11393)
!11402 = !DILocation(line: 5785, column: 32, scope: !11393)
!11403 = !DILocation(line: 5785, column: 12, scope: !11393)
!11404 = distinct !{!11404, !11389, !11405}
!11405 = !DILocation(line: 5786, column: 2, scope: !11345)
!11406 = !DILocation(line: 5789, column: 33, scope: !11407)
!11407 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5789, column: 6)
!11408 = !DILocation(line: 5789, column: 6, scope: !11407)
!11409 = !DILocation(line: 5789, column: 6, scope: !11345)
!11410 = !DILocalVariable(name: "upstream_dsc", scope: !11411, file: !3, line: 5790, type: !364)
!11411 = distinct !DILexicalBlock(scope: !11407, file: !3, line: 5789, column: 59)
!11412 = !DILocation(line: 5790, column: 6, scope: !11411)
!11413 = !DILocation(line: 5792, column: 25, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 5792, column: 7)
!11415 = !DILocation(line: 5792, column: 31, scope: !11414)
!11416 = !DILocation(line: 5792, column: 7, scope: !11414)
!11417 = !DILocation(line: 5793, column: 44, scope: !11414)
!11418 = !DILocation(line: 5792, column: 7, scope: !11411)
!11419 = !DILocation(line: 5794, column: 4, scope: !11414)
!11420 = !DILocation(line: 5795, column: 25, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 5795, column: 7)
!11422 = !DILocation(line: 5795, column: 31, scope: !11421)
!11423 = !DILocation(line: 5795, column: 7, scope: !11421)
!11424 = !DILocation(line: 5796, column: 47, scope: !11421)
!11425 = !DILocation(line: 5795, column: 7, scope: !11411)
!11426 = !DILocation(line: 5797, column: 4, scope: !11421)
!11427 = !DILocation(line: 5798, column: 25, scope: !11428)
!11428 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 5798, column: 7)
!11429 = !DILocation(line: 5798, column: 50, scope: !11428)
!11430 = !DILocation(line: 5798, column: 7, scope: !11428)
!11431 = !DILocation(line: 5799, column: 44, scope: !11428)
!11432 = !DILocation(line: 5798, column: 7, scope: !11411)
!11433 = !DILocation(line: 5800, column: 4, scope: !11428)
!11434 = !DILocation(line: 5803, column: 8, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11411, file: !3, line: 5803, column: 7)
!11436 = !DILocation(line: 5803, column: 21, scope: !11435)
!11437 = !DILocation(line: 5803, column: 58, scope: !11435)
!11438 = !DILocation(line: 5804, column: 8, scope: !11435)
!11439 = !DILocation(line: 5804, column: 21, scope: !11435)
!11440 = !DILocation(line: 5804, column: 39, scope: !11435)
!11441 = !DILocation(line: 5805, column: 8, scope: !11435)
!11442 = !DILocation(line: 5805, column: 21, scope: !11435)
!11443 = !DILocation(line: 5803, column: 7, scope: !11411)
!11444 = !DILocation(line: 5806, column: 12, scope: !11435)
!11445 = !DILocation(line: 5806, column: 18, scope: !11435)
!11446 = !DILocation(line: 5806, column: 4, scope: !11435)
!11447 = !DILocation(line: 5809, column: 11, scope: !11411)
!11448 = !DILocation(line: 5809, column: 36, scope: !11411)
!11449 = !DILocation(line: 5809, column: 3, scope: !11411)
!11450 = !DILocation(line: 5813, column: 33, scope: !11451)
!11451 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5813, column: 6)
!11452 = !DILocation(line: 5813, column: 6, scope: !11451)
!11453 = !DILocation(line: 5813, column: 6, scope: !11345)
!11454 = !DILocation(line: 5814, column: 11, scope: !11451)
!11455 = !DILocation(line: 5814, column: 17, scope: !11451)
!11456 = !DILocation(line: 5814, column: 3, scope: !11451)
!11457 = !DILocation(line: 5824, column: 23, scope: !11458)
!11458 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5824, column: 6)
!11459 = !DILocation(line: 5824, column: 29, scope: !11458)
!11460 = !DILocation(line: 5824, column: 34, scope: !11458)
!11461 = !DILocation(line: 5824, column: 6, scope: !11458)
!11462 = !DILocation(line: 5824, column: 6, scope: !11345)
!11463 = !DILocation(line: 5825, column: 3, scope: !11458)
!11464 = !DILocation(line: 5827, column: 6, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5827, column: 6)
!11466 = !DILocation(line: 5828, column: 49, scope: !11465)
!11467 = !DILocation(line: 5829, column: 6, scope: !11465)
!11468 = !DILocation(line: 5829, column: 12, scope: !11465)
!11469 = !DILocation(line: 5829, column: 17, scope: !11465)
!11470 = !DILocation(line: 5829, column: 35, scope: !11465)
!11471 = !DILocation(line: 5829, column: 53, scope: !11465)
!11472 = !DILocation(line: 5830, column: 6, scope: !11465)
!11473 = !DILocation(line: 5830, column: 12, scope: !11465)
!11474 = !DILocation(line: 5830, column: 22, scope: !11465)
!11475 = !DILocation(line: 5830, column: 28, scope: !11465)
!11476 = !DILocation(line: 5830, column: 33, scope: !11465)
!11477 = !DILocation(line: 5830, column: 19, scope: !11465)
!11478 = !DILocation(line: 5827, column: 6, scope: !11345)
!11479 = !DILocalVariable(name: "downstreamport", scope: !11480, file: !3, line: 5831, type: !364)
!11480 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 5830, column: 46)
!11481 = !DILocation(line: 5831, column: 6, scope: !11480)
!11482 = !DILocation(line: 5833, column: 25, scope: !11483)
!11483 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 5833, column: 7)
!11484 = !DILocation(line: 5833, column: 31, scope: !11483)
!11485 = !DILocation(line: 5833, column: 7, scope: !11483)
!11486 = !DILocation(line: 5834, column: 30, scope: !11483)
!11487 = !DILocation(line: 5833, column: 7, scope: !11480)
!11488 = !DILocation(line: 5835, column: 4, scope: !11483)
!11489 = !DILocation(line: 5837, column: 8, scope: !11490)
!11490 = distinct !DILexicalBlock(scope: !11480, file: !3, line: 5837, column: 7)
!11491 = !DILocation(line: 5837, column: 23, scope: !11490)
!11492 = !DILocation(line: 5837, column: 51, scope: !11490)
!11493 = !DILocation(line: 5838, column: 8, scope: !11490)
!11494 = !DILocation(line: 5838, column: 23, scope: !11490)
!11495 = !DILocation(line: 5839, column: 8, scope: !11490)
!11496 = !DILocation(line: 5837, column: 7, scope: !11480)
!11497 = !DILocation(line: 5840, column: 11, scope: !11490)
!11498 = !DILocation(line: 5840, column: 17, scope: !11490)
!11499 = !DILocation(line: 5840, column: 22, scope: !11490)
!11500 = !DILocation(line: 5840, column: 4, scope: !11490)
!11501 = !DILocation(line: 5841, column: 2, scope: !11480)
!11502 = !DILocation(line: 5849, column: 24, scope: !11503)
!11503 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5849, column: 6)
!11504 = !DILocation(line: 5849, column: 30, scope: !11503)
!11505 = !DILocation(line: 5849, column: 6, scope: !11503)
!11506 = !DILocation(line: 5850, column: 39, scope: !11503)
!11507 = !DILocation(line: 5849, column: 6, scope: !11345)
!11508 = !DILocation(line: 5851, column: 3, scope: !11503)
!11509 = !DILocation(line: 5852, column: 24, scope: !11510)
!11510 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5852, column: 6)
!11511 = !DILocation(line: 5852, column: 30, scope: !11510)
!11512 = !DILocation(line: 5852, column: 6, scope: !11510)
!11513 = !DILocation(line: 5853, column: 42, scope: !11510)
!11514 = !DILocation(line: 5852, column: 6, scope: !11345)
!11515 = !DILocation(line: 5854, column: 3, scope: !11510)
!11516 = !DILocation(line: 5855, column: 7, scope: !11517)
!11517 = distinct !DILexicalBlock(scope: !11345, file: !3, line: 5855, column: 6)
!11518 = !DILocation(line: 5855, column: 20, scope: !11517)
!11519 = !DILocation(line: 5855, column: 57, scope: !11517)
!11520 = !DILocation(line: 5856, column: 6, scope: !11517)
!11521 = !DILocation(line: 5856, column: 19, scope: !11517)
!11522 = !DILocation(line: 5855, column: 6, scope: !11345)
!11523 = !DILocation(line: 5857, column: 11, scope: !11517)
!11524 = !DILocation(line: 5857, column: 17, scope: !11517)
!11525 = !DILocation(line: 5857, column: 3, scope: !11517)
!11526 = !DILocation(line: 5859, column: 2, scope: !11345)
!11527 = !DILocation(line: 5860, column: 1, scope: !11345)
!11528 = distinct !DISubprogram(name: "drm_dp_mst_atomic_enable_dsc", scope: !3, file: !3, line: 5251, type: !11529, scopeLine: 5255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11529 = !DISubroutineType(types: !11530)
!11530 = !{!115, !3367, !345, !115, !115, !370}
!11531 = !DILocalVariable(name: "state", arg: 1, scope: !11528, file: !3, line: 5251, type: !3367)
!11532 = !DILocation(line: 5251, column: 59, scope: !11528)
!11533 = !DILocalVariable(name: "port", arg: 2, scope: !11528, file: !3, line: 5252, type: !345)
!11534 = !DILocation(line: 5252, column: 30, scope: !11528)
!11535 = !DILocalVariable(name: "pbn", arg: 3, scope: !11528, file: !3, line: 5253, type: !115)
!11536 = !DILocation(line: 5253, column: 10, scope: !11528)
!11537 = !DILocalVariable(name: "pbn_div", arg: 4, scope: !11528, file: !3, line: 5253, type: !115)
!11538 = !DILocation(line: 5253, column: 19, scope: !11528)
!11539 = !DILocalVariable(name: "enable", arg: 5, scope: !11528, file: !3, line: 5254, type: !370)
!11540 = !DILocation(line: 5254, column: 11, scope: !11528)
!11541 = !DILocalVariable(name: "mst_state", scope: !11528, file: !3, line: 5256, type: !5988)
!11542 = !DILocation(line: 5256, column: 36, scope: !11528)
!11543 = !DILocalVariable(name: "pos", scope: !11528, file: !3, line: 5257, type: !5980)
!11544 = !DILocation(line: 5257, column: 33, scope: !11528)
!11545 = !DILocalVariable(name: "found", scope: !11528, file: !3, line: 5258, type: !370)
!11546 = !DILocation(line: 5258, column: 7, scope: !11528)
!11547 = !DILocalVariable(name: "vcpi", scope: !11528, file: !3, line: 5259, type: !115)
!11548 = !DILocation(line: 5259, column: 6, scope: !11528)
!11549 = !DILocation(line: 5261, column: 48, scope: !11528)
!11550 = !DILocation(line: 5261, column: 55, scope: !11528)
!11551 = !DILocation(line: 5261, column: 61, scope: !11528)
!11552 = !DILocation(line: 5261, column: 14, scope: !11528)
!11553 = !DILocation(line: 5261, column: 12, scope: !11528)
!11554 = !DILocation(line: 5263, column: 13, scope: !11555)
!11555 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 5263, column: 6)
!11556 = !DILocation(line: 5263, column: 6, scope: !11555)
!11557 = !DILocation(line: 5263, column: 6, scope: !11528)
!11558 = !DILocation(line: 5264, column: 18, scope: !11555)
!11559 = !DILocation(line: 5264, column: 10, scope: !11555)
!11560 = !DILocation(line: 5264, column: 3, scope: !11555)
!11561 = !DILocalVariable(name: "__mptr", scope: !11562, file: !3, line: 5266, type: !344)
!11562 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 5266, column: 2)
!11563 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 5266, column: 2)
!11564 = !DILocation(line: 5266, column: 2, scope: !11562)
!11565 = !DILocation(line: 5266, column: 2, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11562, file: !3, line: 5266, column: 2)
!11567 = !DILocation(line: 5266, column: 2, scope: !11563)
!11568 = !DILocation(line: 5266, column: 2, scope: !11569)
!11569 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 5266, column: 2)
!11570 = !DILocation(line: 5267, column: 7, scope: !11571)
!11571 = distinct !DILexicalBlock(scope: !11572, file: !3, line: 5267, column: 7)
!11572 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 5266, column: 52)
!11573 = !DILocation(line: 5267, column: 12, scope: !11571)
!11574 = !DILocation(line: 5267, column: 20, scope: !11571)
!11575 = !DILocation(line: 5267, column: 17, scope: !11571)
!11576 = !DILocation(line: 5267, column: 7, scope: !11572)
!11577 = !DILocation(line: 5268, column: 10, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11571, file: !3, line: 5267, column: 26)
!11579 = !DILocation(line: 5269, column: 4, scope: !11578)
!11580 = !DILocation(line: 5271, column: 2, scope: !11572)
!11581 = !DILocalVariable(name: "__mptr", scope: !11582, file: !3, line: 5266, type: !344)
!11582 = distinct !DILexicalBlock(scope: !11569, file: !3, line: 5266, column: 2)
!11583 = !DILocation(line: 5266, column: 2, scope: !11582)
!11584 = !DILocation(line: 5266, column: 2, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11582, file: !3, line: 5266, column: 2)
!11586 = distinct !{!11586, !11567, !11587}
!11587 = !DILocation(line: 5271, column: 2, scope: !11563)
!11588 = !DILocation(line: 5273, column: 7, scope: !11589)
!11589 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 5273, column: 6)
!11590 = !DILocation(line: 5273, column: 6, scope: !11528)
!11591 = !DILocation(line: 5274, column: 3, scope: !11592)
!11592 = distinct !DILexicalBlock(scope: !11589, file: !3, line: 5273, column: 14)
!11593 = !DILocation(line: 5276, column: 3, scope: !11592)
!11594 = !DILocation(line: 5279, column: 6, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 5279, column: 6)
!11596 = !DILocation(line: 5279, column: 11, scope: !11595)
!11597 = !DILocation(line: 5279, column: 26, scope: !11595)
!11598 = !DILocation(line: 5279, column: 23, scope: !11595)
!11599 = !DILocation(line: 5279, column: 6, scope: !11528)
!11600 = !DILocation(line: 5280, column: 3, scope: !11601)
!11601 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 5279, column: 34)
!11602 = !DILocation(line: 5282, column: 10, scope: !11601)
!11603 = !DILocation(line: 5282, column: 15, scope: !11601)
!11604 = !DILocation(line: 5282, column: 8, scope: !11601)
!11605 = !DILocation(line: 5283, column: 2, scope: !11601)
!11606 = !DILocation(line: 5285, column: 6, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 5285, column: 6)
!11608 = !DILocation(line: 5285, column: 6, scope: !11528)
!11609 = !DILocation(line: 5286, column: 40, scope: !11610)
!11610 = distinct !DILexicalBlock(scope: !11607, file: !3, line: 5285, column: 14)
!11611 = !DILocation(line: 5286, column: 47, scope: !11610)
!11612 = !DILocation(line: 5286, column: 53, scope: !11610)
!11613 = !DILocation(line: 5286, column: 58, scope: !11610)
!11614 = !DILocation(line: 5286, column: 64, scope: !11610)
!11615 = !DILocation(line: 5286, column: 69, scope: !11610)
!11616 = !DILocation(line: 5286, column: 10, scope: !11610)
!11617 = !DILocation(line: 5286, column: 8, scope: !11610)
!11618 = !DILocation(line: 5287, column: 3, scope: !11610)
!11619 = !DILocation(line: 5289, column: 7, scope: !11620)
!11620 = distinct !DILexicalBlock(scope: !11610, file: !3, line: 5289, column: 7)
!11621 = !DILocation(line: 5289, column: 12, scope: !11620)
!11622 = !DILocation(line: 5289, column: 7, scope: !11610)
!11623 = !DILocation(line: 5290, column: 4, scope: !11620)
!11624 = !DILocation(line: 5291, column: 2, scope: !11610)
!11625 = !DILocation(line: 5293, column: 21, scope: !11528)
!11626 = !DILocation(line: 5293, column: 2, scope: !11528)
!11627 = !DILocation(line: 5293, column: 7, scope: !11528)
!11628 = !DILocation(line: 5293, column: 19, scope: !11528)
!11629 = !DILocation(line: 5295, column: 9, scope: !11528)
!11630 = !DILocation(line: 5295, column: 2, scope: !11528)
!11631 = !DILocation(line: 5296, column: 1, scope: !11528)
!11632 = distinct !DISubprogram(name: "drm_dp_mst_atomic_check", scope: !3, file: !3, line: 5319, type: !11633, scopeLine: 5320, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11633 = !DISubroutineType(types: !11634)
!11634 = !{!115, !3367}
!11635 = !DILocalVariable(name: "state", arg: 1, scope: !11632, file: !3, line: 5319, type: !3367)
!11636 = !DILocation(line: 5319, column: 54, scope: !11632)
!11637 = !DILocalVariable(name: "mgr", scope: !11632, file: !3, line: 5321, type: !406)
!11638 = !DILocation(line: 5321, column: 34, scope: !11632)
!11639 = !DILocalVariable(name: "mst_state", scope: !11632, file: !3, line: 5322, type: !5988)
!11640 = !DILocation(line: 5322, column: 36, scope: !11632)
!11641 = !DILocalVariable(name: "i", scope: !11632, file: !3, line: 5323, type: !115)
!11642 = !DILocation(line: 5323, column: 6, scope: !11632)
!11643 = !DILocalVariable(name: "ret", scope: !11632, file: !3, line: 5323, type: !115)
!11644 = !DILocation(line: 5323, column: 9, scope: !11632)
!11645 = !DILocation(line: 5325, column: 2, scope: !11646)
!11646 = distinct !DILexicalBlock(scope: !11632, file: !3, line: 5325, column: 2)
!11647 = !DILocation(line: 5325, column: 2, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11646, file: !3, line: 5325, column: 2)
!11649 = !DILocation(line: 5325, column: 2, scope: !11650)
!11650 = distinct !DILexicalBlock(scope: !11648, file: !3, line: 5325, column: 2)
!11651 = !DILocation(line: 5325, column: 2, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 5325, column: 2)
!11653 = !DILocation(line: 5326, column: 8, scope: !11654)
!11654 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5326, column: 7)
!11655 = distinct !DILexicalBlock(scope: !11650, file: !3, line: 5325, column: 58)
!11656 = !DILocation(line: 5326, column: 13, scope: !11654)
!11657 = !DILocation(line: 5326, column: 7, scope: !11655)
!11658 = !DILocation(line: 5327, column: 4, scope: !11654)
!11659 = !DILocation(line: 5329, column: 50, scope: !11655)
!11660 = !DILocation(line: 5329, column: 55, scope: !11655)
!11661 = !DILocation(line: 5329, column: 9, scope: !11655)
!11662 = !DILocation(line: 5329, column: 7, scope: !11655)
!11663 = !DILocation(line: 5330, column: 7, scope: !11664)
!11664 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5330, column: 7)
!11665 = !DILocation(line: 5330, column: 7, scope: !11655)
!11666 = !DILocation(line: 5331, column: 4, scope: !11664)
!11667 = !DILocation(line: 5333, column: 15, scope: !11655)
!11668 = !DILocation(line: 5333, column: 20, scope: !11655)
!11669 = !DILocation(line: 5333, column: 3, scope: !11655)
!11670 = !DILocation(line: 5334, column: 47, scope: !11655)
!11671 = !DILocation(line: 5334, column: 52, scope: !11655)
!11672 = !DILocation(line: 5335, column: 12, scope: !11655)
!11673 = !DILocation(line: 5334, column: 9, scope: !11655)
!11674 = !DILocation(line: 5334, column: 7, scope: !11655)
!11675 = !DILocation(line: 5336, column: 17, scope: !11655)
!11676 = !DILocation(line: 5336, column: 22, scope: !11655)
!11677 = !DILocation(line: 5336, column: 3, scope: !11655)
!11678 = !DILocation(line: 5337, column: 7, scope: !11679)
!11679 = distinct !DILexicalBlock(scope: !11655, file: !3, line: 5337, column: 7)
!11680 = !DILocation(line: 5337, column: 11, scope: !11679)
!11681 = !DILocation(line: 5337, column: 7, scope: !11655)
!11682 = !DILocation(line: 5338, column: 4, scope: !11679)
!11683 = !DILocation(line: 5340, column: 8, scope: !11679)
!11684 = distinct !{!11684, !11645, !11685}
!11685 = !DILocation(line: 5341, column: 2, scope: !11646)
!11686 = !DILocation(line: 5343, column: 9, scope: !11632)
!11687 = !DILocation(line: 5343, column: 2, scope: !11632)
!11688 = distinct !DISubprogram(name: "__drm_dp_mst_state_iter_get", scope: !347, file: !347, line: 883, type: !11689, scopeLine: 888, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11689 = !DISubroutineType(types: !11690)
!11690 = !{!370, !3367, !11691, !11692, !11692, !115}
!11691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!11692 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5988, size: 64)
!11693 = !DILocalVariable(name: "state", arg: 1, scope: !11688, file: !347, line: 883, type: !3367)
!11694 = !DILocation(line: 883, column: 54, scope: !11688)
!11695 = !DILocalVariable(name: "mgr", arg: 2, scope: !11688, file: !347, line: 884, type: !11691)
!11696 = !DILocation(line: 884, column: 41, scope: !11688)
!11697 = !DILocalVariable(name: "old_state", arg: 3, scope: !11688, file: !347, line: 885, type: !11692)
!11698 = !DILocation(line: 885, column: 43, scope: !11688)
!11699 = !DILocalVariable(name: "new_state", arg: 4, scope: !11688, file: !347, line: 886, type: !11692)
!11700 = !DILocation(line: 886, column: 43, scope: !11688)
!11701 = !DILocalVariable(name: "i", arg: 5, scope: !11688, file: !347, line: 887, type: !115)
!11702 = !DILocation(line: 887, column: 12, scope: !11688)
!11703 = !DILocalVariable(name: "objs_state", scope: !11688, file: !347, line: 889, type: !5688)
!11704 = !DILocation(line: 889, column: 35, scope: !11688)
!11705 = !DILocation(line: 889, column: 49, scope: !11688)
!11706 = !DILocation(line: 889, column: 56, scope: !11688)
!11707 = !DILocation(line: 889, column: 69, scope: !11688)
!11708 = !DILocation(line: 891, column: 6, scope: !11709)
!11709 = distinct !DILexicalBlock(scope: !11688, file: !347, line: 891, column: 6)
!11710 = !DILocation(line: 891, column: 18, scope: !11709)
!11711 = !DILocation(line: 891, column: 23, scope: !11709)
!11712 = !DILocation(line: 891, column: 29, scope: !11709)
!11713 = !DILocation(line: 891, column: 6, scope: !11688)
!11714 = !DILocation(line: 892, column: 3, scope: !11709)
!11715 = !DILocalVariable(name: "__mptr", scope: !11716, file: !347, line: 894, type: !344)
!11716 = distinct !DILexicalBlock(scope: !11688, file: !347, line: 894, column: 9)
!11717 = !DILocation(line: 894, column: 9, scope: !11716)
!11718 = !DILocation(line: 894, column: 9, scope: !11719)
!11719 = distinct !DILexicalBlock(scope: !11716, file: !347, line: 894, column: 9)
!11720 = !DILocation(line: 894, column: 3, scope: !11688)
!11721 = !DILocation(line: 894, column: 7, scope: !11688)
!11722 = !DILocation(line: 895, column: 6, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11688, file: !347, line: 895, column: 6)
!11724 = !DILocation(line: 895, column: 6, scope: !11688)
!11725 = !DILocalVariable(name: "__mptr", scope: !11726, file: !347, line: 896, type: !344)
!11726 = distinct !DILexicalBlock(scope: !11723, file: !347, line: 896, column: 16)
!11727 = !DILocation(line: 896, column: 16, scope: !11726)
!11728 = !DILocation(line: 896, column: 16, scope: !11729)
!11729 = distinct !DILexicalBlock(scope: !11726, file: !347, line: 896, column: 16)
!11730 = !DILocation(line: 896, column: 4, scope: !11723)
!11731 = !DILocation(line: 896, column: 14, scope: !11723)
!11732 = !DILocation(line: 896, column: 3, scope: !11723)
!11733 = !DILocation(line: 897, column: 6, scope: !11734)
!11734 = distinct !DILexicalBlock(scope: !11688, file: !347, line: 897, column: 6)
!11735 = !DILocation(line: 897, column: 6, scope: !11688)
!11736 = !DILocalVariable(name: "__mptr", scope: !11737, file: !347, line: 898, type: !344)
!11737 = distinct !DILexicalBlock(scope: !11734, file: !347, line: 898, column: 16)
!11738 = !DILocation(line: 898, column: 16, scope: !11737)
!11739 = !DILocation(line: 898, column: 16, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11737, file: !347, line: 898, column: 16)
!11741 = !DILocation(line: 898, column: 4, scope: !11734)
!11742 = !DILocation(line: 898, column: 14, scope: !11734)
!11743 = !DILocation(line: 898, column: 3, scope: !11734)
!11744 = !DILocation(line: 900, column: 2, scope: !11688)
!11745 = !DILocation(line: 901, column: 1, scope: !11688)
!11746 = distinct !DISubprogram(name: "drm_dp_mst_atomic_check_vcpi_alloc_limit", scope: !3, file: !3, line: 5138, type: !11747, scopeLine: 5140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11747 = !DISubroutineType(types: !11748)
!11748 = !{!115, !406, !5988}
!11749 = !DILocalVariable(name: "mgr", arg: 1, scope: !11746, file: !3, line: 5138, type: !406)
!11750 = !DILocation(line: 5138, column: 74, scope: !11746)
!11751 = !DILocalVariable(name: "mst_state", arg: 2, scope: !11746, file: !3, line: 5139, type: !5988)
!11752 = !DILocation(line: 5139, column: 41, scope: !11746)
!11753 = !DILocalVariable(name: "vcpi", scope: !11746, file: !3, line: 5141, type: !5980)
!11754 = !DILocation(line: 5141, column: 33, scope: !11746)
!11755 = !DILocalVariable(name: "avail_slots", scope: !11746, file: !3, line: 5142, type: !115)
!11756 = !DILocation(line: 5142, column: 6, scope: !11746)
!11757 = !DILocalVariable(name: "payload_count", scope: !11746, file: !3, line: 5142, type: !115)
!11758 = !DILocation(line: 5142, column: 24, scope: !11746)
!11759 = !DILocalVariable(name: "__mptr", scope: !11760, file: !3, line: 5144, type: !344)
!11760 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 5144, column: 2)
!11761 = distinct !DILexicalBlock(scope: !11746, file: !3, line: 5144, column: 2)
!11762 = !DILocation(line: 5144, column: 2, scope: !11760)
!11763 = !DILocation(line: 5144, column: 2, scope: !11764)
!11764 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 5144, column: 2)
!11765 = !DILocation(line: 5144, column: 2, scope: !11761)
!11766 = !DILocation(line: 5144, column: 2, scope: !11767)
!11767 = distinct !DILexicalBlock(scope: !11761, file: !3, line: 5144, column: 2)
!11768 = !DILocation(line: 5146, column: 8, scope: !11769)
!11769 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 5146, column: 7)
!11770 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 5144, column: 53)
!11771 = !DILocation(line: 5146, column: 14, scope: !11769)
!11772 = !DILocation(line: 5146, column: 7, scope: !11770)
!11773 = !DILocation(line: 5147, column: 4, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11769, file: !3, line: 5146, column: 20)
!11775 = !DILocation(line: 5149, column: 4, scope: !11774)
!11776 = !DILocation(line: 5152, column: 3, scope: !11770)
!11777 = !DILocation(line: 5155, column: 18, scope: !11770)
!11778 = !DILocation(line: 5155, column: 24, scope: !11770)
!11779 = !DILocation(line: 5155, column: 15, scope: !11770)
!11780 = !DILocation(line: 5156, column: 7, scope: !11781)
!11781 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 5156, column: 7)
!11782 = !DILocation(line: 5156, column: 19, scope: !11781)
!11783 = !DILocation(line: 5156, column: 7, scope: !11770)
!11784 = !DILocation(line: 5157, column: 4, scope: !11785)
!11785 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 5156, column: 24)
!11786 = !DILocation(line: 5160, column: 4, scope: !11785)
!11787 = !DILocation(line: 5163, column: 7, scope: !11788)
!11788 = distinct !DILexicalBlock(scope: !11770, file: !3, line: 5163, column: 7)
!11789 = !DILocation(line: 5163, column: 25, scope: !11788)
!11790 = !DILocation(line: 5163, column: 30, scope: !11788)
!11791 = !DILocation(line: 5163, column: 23, scope: !11788)
!11792 = !DILocation(line: 5163, column: 7, scope: !11770)
!11793 = !DILocation(line: 5164, column: 4, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 5163, column: 44)
!11795 = !DILocation(line: 5166, column: 4, scope: !11794)
!11796 = !DILocation(line: 5168, column: 2, scope: !11770)
!11797 = !DILocalVariable(name: "__mptr", scope: !11798, file: !3, line: 5144, type: !344)
!11798 = distinct !DILexicalBlock(scope: !11767, file: !3, line: 5144, column: 2)
!11799 = !DILocation(line: 5144, column: 2, scope: !11798)
!11800 = !DILocation(line: 5144, column: 2, scope: !11801)
!11801 = distinct !DILexicalBlock(scope: !11798, file: !3, line: 5144, column: 2)
!11802 = distinct !{!11802, !11765, !11803}
!11803 = !DILocation(line: 5168, column: 2, scope: !11761)
!11804 = !DILocation(line: 5169, column: 2, scope: !11746)
!11805 = !DILocation(line: 5173, column: 2, scope: !11746)
!11806 = !DILocation(line: 5174, column: 1, scope: !11746)
!11807 = distinct !DISubprogram(name: "drm_dp_mst_atomic_check_mstb_bw_limit", scope: !3, file: !3, line: 5044, type: !11808, scopeLine: 5046, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11808 = !DISubroutineType(types: !11809)
!11809 = !{!115, !391, !5988}
!11810 = !DILocalVariable(name: "mstb", arg: 1, scope: !11807, file: !3, line: 5044, type: !391)
!11811 = !DILocation(line: 5044, column: 65, scope: !11807)
!11812 = !DILocalVariable(name: "state", arg: 2, scope: !11807, file: !3, line: 5045, type: !5988)
!11813 = !DILocation(line: 5045, column: 45, scope: !11807)
!11814 = !DILocalVariable(name: "vcpi", scope: !11807, file: !3, line: 5047, type: !5980)
!11815 = !DILocation(line: 5047, column: 33, scope: !11807)
!11816 = !DILocalVariable(name: "port", scope: !11807, file: !3, line: 5048, type: !345)
!11817 = !DILocation(line: 5048, column: 26, scope: !11807)
!11818 = !DILocalVariable(name: "pbn_used", scope: !11807, file: !3, line: 5049, type: !115)
!11819 = !DILocation(line: 5049, column: 6, scope: !11807)
!11820 = !DILocalVariable(name: "ret", scope: !11807, file: !3, line: 5049, type: !115)
!11821 = !DILocation(line: 5049, column: 20, scope: !11807)
!11822 = !DILocalVariable(name: "found", scope: !11807, file: !3, line: 5050, type: !370)
!11823 = !DILocation(line: 5050, column: 7, scope: !11807)
!11824 = !DILocalVariable(name: "__mptr", scope: !11825, file: !3, line: 5055, type: !344)
!11825 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 5055, column: 2)
!11826 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5055, column: 2)
!11827 = !DILocation(line: 5055, column: 2, scope: !11825)
!11828 = !DILocation(line: 5055, column: 2, scope: !11829)
!11829 = distinct !DILexicalBlock(scope: !11825, file: !3, line: 5055, column: 2)
!11830 = !DILocation(line: 5055, column: 2, scope: !11826)
!11831 = !DILocation(line: 5055, column: 2, scope: !11832)
!11832 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 5055, column: 2)
!11833 = !DILocation(line: 5056, column: 8, scope: !11834)
!11834 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 5056, column: 7)
!11835 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 5055, column: 49)
!11836 = !DILocation(line: 5056, column: 14, scope: !11834)
!11837 = !DILocation(line: 5056, column: 18, scope: !11834)
!11838 = !DILocation(line: 5057, column: 45, scope: !11834)
!11839 = !DILocation(line: 5057, column: 51, scope: !11834)
!11840 = !DILocation(line: 5057, column: 57, scope: !11834)
!11841 = !DILocation(line: 5057, column: 8, scope: !11834)
!11842 = !DILocation(line: 5056, column: 7, scope: !11835)
!11843 = !DILocation(line: 5058, column: 4, scope: !11834)
!11844 = !DILocation(line: 5060, column: 9, scope: !11835)
!11845 = !DILocation(line: 5061, column: 3, scope: !11835)
!11846 = !DILocalVariable(name: "__mptr", scope: !11847, file: !3, line: 5055, type: !344)
!11847 = distinct !DILexicalBlock(scope: !11832, file: !3, line: 5055, column: 2)
!11848 = !DILocation(line: 5055, column: 2, scope: !11847)
!11849 = !DILocation(line: 5055, column: 2, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11847, file: !3, line: 5055, column: 2)
!11851 = distinct !{!11851, !11830, !11852}
!11852 = !DILocation(line: 5062, column: 2, scope: !11826)
!11853 = !DILocation(line: 5063, column: 7, scope: !11854)
!11854 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5063, column: 6)
!11855 = !DILocation(line: 5063, column: 6, scope: !11807)
!11856 = !DILocation(line: 5064, column: 3, scope: !11854)
!11857 = !DILocation(line: 5066, column: 6, scope: !11858)
!11858 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5066, column: 6)
!11859 = !DILocation(line: 5066, column: 12, scope: !11858)
!11860 = !DILocation(line: 5066, column: 6, scope: !11807)
!11861 = !DILocation(line: 5067, column: 3, scope: !11858)
!11862 = !DILocation(line: 5071, column: 3, scope: !11858)
!11863 = !DILocalVariable(name: "__mptr", scope: !11864, file: !3, line: 5074, type: !344)
!11864 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 5074, column: 2)
!11865 = distinct !DILexicalBlock(scope: !11807, file: !3, line: 5074, column: 2)
!11866 = !DILocation(line: 5074, column: 2, scope: !11864)
!11867 = !DILocation(line: 5074, column: 2, scope: !11868)
!11868 = distinct !DILexicalBlock(scope: !11864, file: !3, line: 5074, column: 2)
!11869 = !DILocation(line: 5074, column: 2, scope: !11865)
!11870 = !DILocation(line: 5074, column: 2, scope: !11871)
!11871 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 5074, column: 2)
!11872 = !DILocation(line: 5075, column: 47, scope: !11873)
!11873 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 5074, column: 48)
!11874 = !DILocation(line: 5075, column: 53, scope: !11873)
!11875 = !DILocation(line: 5075, column: 9, scope: !11873)
!11876 = !DILocation(line: 5075, column: 7, scope: !11873)
!11877 = !DILocation(line: 5076, column: 7, scope: !11878)
!11878 = distinct !DILexicalBlock(scope: !11873, file: !3, line: 5076, column: 7)
!11879 = !DILocation(line: 5076, column: 11, scope: !11878)
!11880 = !DILocation(line: 5076, column: 7, scope: !11873)
!11881 = !DILocation(line: 5077, column: 11, scope: !11878)
!11882 = !DILocation(line: 5077, column: 4, scope: !11878)
!11883 = !DILocation(line: 5079, column: 15, scope: !11873)
!11884 = !DILocation(line: 5079, column: 12, scope: !11873)
!11885 = !DILocation(line: 5080, column: 2, scope: !11873)
!11886 = !DILocalVariable(name: "__mptr", scope: !11887, file: !3, line: 5074, type: !344)
!11887 = distinct !DILexicalBlock(scope: !11871, file: !3, line: 5074, column: 2)
!11888 = !DILocation(line: 5074, column: 2, scope: !11887)
!11889 = !DILocation(line: 5074, column: 2, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11887, file: !3, line: 5074, column: 2)
!11891 = distinct !{!11891, !11869, !11892}
!11892 = !DILocation(line: 5080, column: 2, scope: !11865)
!11893 = !DILocation(line: 5082, column: 9, scope: !11807)
!11894 = !DILocation(line: 5082, column: 2, scope: !11807)
!11895 = !DILocation(line: 5083, column: 1, scope: !11807)
!11896 = distinct !DISubprogram(name: "drm_dp_mst_duplicate_state", scope: !3, file: !3, line: 4968, type: !5706, scopeLine: 4969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!11897 = !DILocalVariable(name: "obj", arg: 1, scope: !11896, file: !3, line: 4968, type: !5692)
!11898 = !DILocation(line: 4968, column: 52, scope: !11896)
!11899 = !DILocalVariable(name: "state", scope: !11896, file: !3, line: 4970, type: !5988)
!11900 = !DILocation(line: 4970, column: 36, scope: !11896)
!11901 = !DILocalVariable(name: "old_state", scope: !11896, file: !3, line: 4970, type: !5988)
!11902 = !DILocation(line: 4970, column: 44, scope: !11896)
!11903 = !DILocalVariable(name: "__mptr", scope: !11904, file: !3, line: 4971, type: !344)
!11904 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 4971, column: 3)
!11905 = !DILocation(line: 4971, column: 3, scope: !11904)
!11906 = !DILocation(line: 4971, column: 3, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11904, file: !3, line: 4971, column: 3)
!11908 = !DILocalVariable(name: "pos", scope: !11896, file: !3, line: 4972, type: !5980)
!11909 = !DILocation(line: 4972, column: 33, scope: !11896)
!11910 = !DILocalVariable(name: "vcpi", scope: !11896, file: !3, line: 4972, type: !5980)
!11911 = !DILocation(line: 4972, column: 39, scope: !11896)
!11912 = !DILocation(line: 4974, column: 18, scope: !11896)
!11913 = !DILocation(line: 4974, column: 10, scope: !11896)
!11914 = !DILocation(line: 4974, column: 8, scope: !11896)
!11915 = !DILocation(line: 4975, column: 7, scope: !11916)
!11916 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 4975, column: 6)
!11917 = !DILocation(line: 4975, column: 6, scope: !11896)
!11918 = !DILocation(line: 4976, column: 3, scope: !11916)
!11919 = !DILocation(line: 4978, column: 50, scope: !11896)
!11920 = !DILocation(line: 4978, column: 56, scope: !11896)
!11921 = !DILocation(line: 4978, column: 63, scope: !11896)
!11922 = !DILocation(line: 4978, column: 2, scope: !11896)
!11923 = !DILocation(line: 4980, column: 18, scope: !11896)
!11924 = !DILocation(line: 4980, column: 25, scope: !11896)
!11925 = !DILocation(line: 4980, column: 2, scope: !11896)
!11926 = !DILocalVariable(name: "__mptr", scope: !11927, file: !3, line: 4982, type: !344)
!11927 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 4982, column: 2)
!11928 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 4982, column: 2)
!11929 = !DILocation(line: 4982, column: 2, scope: !11927)
!11930 = !DILocation(line: 4982, column: 2, scope: !11931)
!11931 = distinct !DILexicalBlock(scope: !11927, file: !3, line: 4982, column: 2)
!11932 = !DILocation(line: 4982, column: 2, scope: !11928)
!11933 = !DILocation(line: 4982, column: 2, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11928, file: !3, line: 4982, column: 2)
!11935 = !DILocation(line: 4984, column: 8, scope: !11936)
!11936 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 4984, column: 7)
!11937 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 4982, column: 52)
!11938 = !DILocation(line: 4984, column: 13, scope: !11936)
!11939 = !DILocation(line: 4984, column: 7, scope: !11937)
!11940 = !DILocation(line: 4985, column: 4, scope: !11936)
!11941 = !DILocation(line: 4987, column: 18, scope: !11937)
!11942 = !DILocation(line: 4987, column: 10, scope: !11937)
!11943 = !DILocation(line: 4987, column: 8, scope: !11937)
!11944 = !DILocation(line: 4988, column: 8, scope: !11945)
!11945 = distinct !DILexicalBlock(scope: !11937, file: !3, line: 4988, column: 7)
!11946 = !DILocation(line: 4988, column: 7, scope: !11937)
!11947 = !DILocation(line: 4989, column: 4, scope: !11945)
!11948 = !DILocation(line: 4991, column: 30, scope: !11937)
!11949 = !DILocation(line: 4991, column: 36, scope: !11937)
!11950 = !DILocation(line: 4991, column: 3, scope: !11937)
!11951 = !DILocation(line: 4992, column: 13, scope: !11937)
!11952 = !DILocation(line: 4992, column: 19, scope: !11937)
!11953 = !DILocation(line: 4992, column: 26, scope: !11937)
!11954 = !DILocation(line: 4992, column: 33, scope: !11937)
!11955 = !DILocation(line: 4992, column: 3, scope: !11937)
!11956 = !DILocation(line: 4993, column: 2, scope: !11937)
!11957 = !DILocalVariable(name: "__mptr", scope: !11958, file: !3, line: 4982, type: !344)
!11958 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 4982, column: 2)
!11959 = !DILocation(line: 4982, column: 2, scope: !11958)
!11960 = !DILocation(line: 4982, column: 2, scope: !11961)
!11961 = distinct !DILexicalBlock(scope: !11958, file: !3, line: 4982, column: 2)
!11962 = distinct !{!11962, !11932, !11963}
!11963 = !DILocation(line: 4993, column: 2, scope: !11928)
!11964 = !DILocation(line: 4995, column: 10, scope: !11896)
!11965 = !DILocation(line: 4995, column: 17, scope: !11896)
!11966 = !DILocation(line: 4995, column: 2, scope: !11896)
!11967 = !DILabel(scope: !11896, name: "fail", file: !3, line: 4997)
!11968 = !DILocation(line: 4997, column: 1, scope: !11896)
!11969 = !DILocalVariable(name: "__mptr", scope: !11970, file: !3, line: 4998, type: !344)
!11970 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 4998, column: 2)
!11971 = distinct !DILexicalBlock(scope: !11896, file: !3, line: 4998, column: 2)
!11972 = !DILocation(line: 4998, column: 2, scope: !11970)
!11973 = !DILocation(line: 4998, column: 2, scope: !11974)
!11974 = distinct !DILexicalBlock(scope: !11970, file: !3, line: 4998, column: 2)
!11975 = !DILocation(line: 4998, column: 2, scope: !11971)
!11976 = !DILocalVariable(name: "__mptr", scope: !11977, file: !3, line: 4998, type: !344)
!11977 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 4998, column: 2)
!11978 = !DILocation(line: 4998, column: 2, scope: !11977)
!11979 = !DILocation(line: 4998, column: 2, scope: !11980)
!11980 = distinct !DILexicalBlock(scope: !11977, file: !3, line: 4998, column: 2)
!11981 = !DILocation(line: 4998, column: 2, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11971, file: !3, line: 4998, column: 2)
!11983 = !DILocation(line: 4999, column: 30, scope: !11984)
!11984 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 4998, column: 59)
!11985 = !DILocation(line: 4999, column: 35, scope: !11984)
!11986 = !DILocation(line: 4999, column: 3, scope: !11984)
!11987 = !DILocation(line: 5000, column: 9, scope: !11984)
!11988 = !DILocation(line: 5000, column: 3, scope: !11984)
!11989 = !DILocation(line: 5001, column: 2, scope: !11984)
!11990 = !DILocalVariable(name: "__mptr", scope: !11991, file: !3, line: 4998, type: !344)
!11991 = distinct !DILexicalBlock(scope: !11982, file: !3, line: 4998, column: 2)
!11992 = !DILocation(line: 4998, column: 2, scope: !11991)
!11993 = !DILocation(line: 4998, column: 2, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11991, file: !3, line: 4998, column: 2)
!11995 = distinct !{!11995, !11975, !11996}
!11996 = !DILocation(line: 5001, column: 2, scope: !11971)
!11997 = !DILocation(line: 5002, column: 8, scope: !11896)
!11998 = !DILocation(line: 5002, column: 2, scope: !11896)
!11999 = !DILocation(line: 5004, column: 2, scope: !11896)
!12000 = !DILocation(line: 5005, column: 1, scope: !11896)
!12001 = distinct !DISubprogram(name: "drm_dp_mst_destroy_state", scope: !3, file: !3, line: 5007, type: !5710, scopeLine: 5009, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12002 = !DILocalVariable(name: "obj", arg: 1, scope: !12001, file: !3, line: 5007, type: !5692)
!12003 = !DILocation(line: 5007, column: 62, scope: !12001)
!12004 = !DILocalVariable(name: "state", arg: 2, scope: !12001, file: !3, line: 5008, type: !3363)
!12005 = !DILocation(line: 5008, column: 36, scope: !12001)
!12006 = !DILocalVariable(name: "mst_state", scope: !12001, file: !3, line: 5010, type: !5988)
!12007 = !DILocation(line: 5010, column: 36, scope: !12001)
!12008 = !DILocalVariable(name: "__mptr", scope: !12009, file: !3, line: 5011, type: !344)
!12009 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 5011, column: 3)
!12010 = !DILocation(line: 5011, column: 3, scope: !12009)
!12011 = !DILocation(line: 5011, column: 3, scope: !12012)
!12012 = distinct !DILexicalBlock(scope: !12009, file: !3, line: 5011, column: 3)
!12013 = !DILocalVariable(name: "pos", scope: !12001, file: !3, line: 5012, type: !5980)
!12014 = !DILocation(line: 5012, column: 33, scope: !12001)
!12015 = !DILocalVariable(name: "tmp", scope: !12001, file: !3, line: 5012, type: !5980)
!12016 = !DILocation(line: 5012, column: 39, scope: !12001)
!12017 = !DILocalVariable(name: "__mptr", scope: !12018, file: !3, line: 5014, type: !344)
!12018 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 5014, column: 2)
!12019 = distinct !DILexicalBlock(scope: !12001, file: !3, line: 5014, column: 2)
!12020 = !DILocation(line: 5014, column: 2, scope: !12018)
!12021 = !DILocation(line: 5014, column: 2, scope: !12022)
!12022 = distinct !DILexicalBlock(scope: !12018, file: !3, line: 5014, column: 2)
!12023 = !DILocation(line: 5014, column: 2, scope: !12019)
!12024 = !DILocalVariable(name: "__mptr", scope: !12025, file: !3, line: 5014, type: !344)
!12025 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 5014, column: 2)
!12026 = !DILocation(line: 5014, column: 2, scope: !12025)
!12027 = !DILocation(line: 5014, column: 2, scope: !12028)
!12028 = distinct !DILexicalBlock(scope: !12025, file: !3, line: 5014, column: 2)
!12029 = !DILocation(line: 5014, column: 2, scope: !12030)
!12030 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 5014, column: 2)
!12031 = !DILocation(line: 5016, column: 7, scope: !12032)
!12032 = distinct !DILexicalBlock(scope: !12033, file: !3, line: 5016, column: 7)
!12033 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 5014, column: 62)
!12034 = !DILocation(line: 5016, column: 12, scope: !12032)
!12035 = !DILocation(line: 5016, column: 7, scope: !12033)
!12036 = !DILocation(line: 5017, column: 31, scope: !12032)
!12037 = !DILocation(line: 5017, column: 36, scope: !12032)
!12038 = !DILocation(line: 5017, column: 4, scope: !12032)
!12039 = !DILocation(line: 5018, column: 9, scope: !12033)
!12040 = !DILocation(line: 5018, column: 3, scope: !12033)
!12041 = !DILocation(line: 5019, column: 2, scope: !12033)
!12042 = !DILocalVariable(name: "__mptr", scope: !12043, file: !3, line: 5014, type: !344)
!12043 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 5014, column: 2)
!12044 = !DILocation(line: 5014, column: 2, scope: !12043)
!12045 = !DILocation(line: 5014, column: 2, scope: !12046)
!12046 = distinct !DILexicalBlock(scope: !12043, file: !3, line: 5014, column: 2)
!12047 = distinct !{!12047, !12023, !12048}
!12048 = !DILocation(line: 5019, column: 2, scope: !12019)
!12049 = !DILocation(line: 5021, column: 8, scope: !12001)
!12050 = !DILocation(line: 5021, column: 2, scope: !12001)
!12051 = !DILocation(line: 5022, column: 1, scope: !12001)
!12052 = !DILocalVariable(name: "mgr", arg: 1, scope: !6220, file: !3, line: 5386, type: !406)
!12053 = !DILocation(line: 5386, column: 66, scope: !6220)
!12054 = !DILocalVariable(name: "dev", arg: 2, scope: !6220, file: !3, line: 5387, type: !3372)
!12055 = !DILocation(line: 5387, column: 25, scope: !6220)
!12056 = !DILocalVariable(name: "aux", arg: 3, scope: !6220, file: !3, line: 5387, type: !5728)
!12057 = !DILocation(line: 5387, column: 49, scope: !6220)
!12058 = !DILocalVariable(name: "max_dpcd_transaction_bytes", arg: 4, scope: !6220, file: !3, line: 5388, type: !115)
!12059 = !DILocation(line: 5388, column: 10, scope: !6220)
!12060 = !DILocalVariable(name: "max_payloads", arg: 5, scope: !6220, file: !3, line: 5389, type: !115)
!12061 = !DILocation(line: 5389, column: 10, scope: !6220)
!12062 = !DILocalVariable(name: "conn_base_id", arg: 6, scope: !6220, file: !3, line: 5389, type: !115)
!12063 = !DILocation(line: 5389, column: 28, scope: !6220)
!12064 = !DILocalVariable(name: "mst_state", scope: !6220, file: !3, line: 5391, type: !5988)
!12065 = !DILocation(line: 5391, column: 36, scope: !6220)
!12066 = !DILocation(line: 5393, column: 2, scope: !6220)
!12067 = !DILocation(line: 5393, column: 2, scope: !12068)
!12068 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5393, column: 2)
!12069 = !DILocation(line: 5394, column: 2, scope: !6220)
!12070 = !DILocation(line: 5394, column: 2, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5394, column: 2)
!12072 = !DILocation(line: 5395, column: 2, scope: !6220)
!12073 = !DILocation(line: 5395, column: 2, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5395, column: 2)
!12075 = !DILocation(line: 5396, column: 2, scope: !6220)
!12076 = !DILocation(line: 5396, column: 2, scope: !12077)
!12077 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5396, column: 2)
!12078 = !DILocation(line: 5397, column: 2, scope: !6220)
!12079 = !DILocation(line: 5397, column: 2, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5397, column: 2)
!12081 = !DILocation(line: 5398, column: 2, scope: !6220)
!12082 = !DILocation(line: 5398, column: 2, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5398, column: 2)
!12084 = !DILocation(line: 5402, column: 18, scope: !6220)
!12085 = !DILocation(line: 5402, column: 23, scope: !6220)
!12086 = !DILocation(line: 5402, column: 2, scope: !6220)
!12087 = !DILocation(line: 5403, column: 18, scope: !6220)
!12088 = !DILocation(line: 5403, column: 23, scope: !6220)
!12089 = !DILocation(line: 5403, column: 2, scope: !6220)
!12090 = !DILocation(line: 5404, column: 18, scope: !6220)
!12091 = !DILocation(line: 5404, column: 23, scope: !6220)
!12092 = !DILocation(line: 5404, column: 2, scope: !6220)
!12093 = !DILocation(line: 5405, column: 18, scope: !6220)
!12094 = !DILocation(line: 5405, column: 23, scope: !6220)
!12095 = !DILocation(line: 5405, column: 2, scope: !6220)
!12096 = !DILocation(line: 5411, column: 28, scope: !6220)
!12097 = !DILocation(line: 5411, column: 2, scope: !6220)
!12098 = !DILocation(line: 5411, column: 7, scope: !6220)
!12099 = !DILocation(line: 5411, column: 26, scope: !6220)
!12100 = !DILocation(line: 5412, column: 6, scope: !12101)
!12101 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5412, column: 6)
!12102 = !DILocation(line: 5412, column: 11, scope: !12101)
!12103 = !DILocation(line: 5412, column: 30, scope: !12101)
!12104 = !DILocation(line: 5412, column: 6, scope: !6220)
!12105 = !DILocation(line: 5413, column: 3, scope: !12101)
!12106 = !DILocation(line: 5415, column: 2, scope: !6220)
!12107 = !DILocation(line: 5415, column: 2, scope: !12108)
!12108 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5415, column: 2)
!12109 = !DILocation(line: 5416, column: 2, scope: !6220)
!12110 = !DILocation(line: 5416, column: 2, scope: !12111)
!12111 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5416, column: 2)
!12112 = !DILocation(line: 5417, column: 2, scope: !6220)
!12113 = !DILocation(line: 5417, column: 2, scope: !12114)
!12114 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5417, column: 2)
!12115 = !DILocation(line: 5418, column: 2, scope: !6220)
!12116 = !DILocation(line: 5418, column: 2, scope: !12117)
!12117 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5418, column: 2)
!12118 = !DILocation(line: 5419, column: 2, scope: !6220)
!12119 = !DILocation(line: 5419, column: 2, scope: !12120)
!12120 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5419, column: 2)
!12121 = !DILocation(line: 5420, column: 13, scope: !6220)
!12122 = !DILocation(line: 5420, column: 2, scope: !6220)
!12123 = !DILocation(line: 5420, column: 7, scope: !6220)
!12124 = !DILocation(line: 5420, column: 11, scope: !6220)
!12125 = !DILocation(line: 5421, column: 13, scope: !6220)
!12126 = !DILocation(line: 5421, column: 2, scope: !6220)
!12127 = !DILocation(line: 5421, column: 7, scope: !6220)
!12128 = !DILocation(line: 5421, column: 11, scope: !6220)
!12129 = !DILocation(line: 5422, column: 36, scope: !6220)
!12130 = !DILocation(line: 5422, column: 2, scope: !6220)
!12131 = !DILocation(line: 5422, column: 7, scope: !6220)
!12132 = !DILocation(line: 5422, column: 34, scope: !6220)
!12133 = !DILocation(line: 5423, column: 22, scope: !6220)
!12134 = !DILocation(line: 5423, column: 2, scope: !6220)
!12135 = !DILocation(line: 5423, column: 7, scope: !6220)
!12136 = !DILocation(line: 5423, column: 20, scope: !6220)
!12137 = !DILocation(line: 5424, column: 22, scope: !6220)
!12138 = !DILocation(line: 5424, column: 2, scope: !6220)
!12139 = !DILocation(line: 5424, column: 7, scope: !6220)
!12140 = !DILocation(line: 5424, column: 20, scope: !6220)
!12141 = !DILocation(line: 5425, column: 6, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5425, column: 6)
!12143 = !DILocation(line: 5425, column: 19, scope: !12142)
!12144 = !DILocation(line: 5425, column: 23, scope: !12142)
!12145 = !DILocation(line: 5425, column: 55, scope: !12142)
!12146 = !DILocation(line: 5426, column: 6, scope: !12142)
!12147 = !DILocation(line: 5426, column: 19, scope: !12142)
!12148 = !DILocation(line: 5426, column: 23, scope: !12142)
!12149 = !DILocation(line: 5425, column: 6, scope: !6220)
!12150 = !DILocation(line: 5427, column: 3, scope: !12142)
!12151 = !DILocation(line: 5428, column: 26, scope: !6220)
!12152 = !DILocation(line: 5428, column: 18, scope: !6220)
!12153 = !DILocation(line: 5428, column: 2, scope: !6220)
!12154 = !DILocation(line: 5428, column: 7, scope: !6220)
!12155 = !DILocation(line: 5428, column: 16, scope: !6220)
!12156 = !DILocation(line: 5429, column: 7, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5429, column: 6)
!12158 = !DILocation(line: 5429, column: 12, scope: !12157)
!12159 = !DILocation(line: 5429, column: 6, scope: !6220)
!12160 = !DILocation(line: 5430, column: 3, scope: !12157)
!12161 = !DILocation(line: 5431, column: 32, scope: !6220)
!12162 = !DILocation(line: 5431, column: 24, scope: !6220)
!12163 = !DILocation(line: 5431, column: 2, scope: !6220)
!12164 = !DILocation(line: 5431, column: 7, scope: !6220)
!12165 = !DILocation(line: 5431, column: 22, scope: !6220)
!12166 = !DILocation(line: 5432, column: 7, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5432, column: 6)
!12168 = !DILocation(line: 5432, column: 12, scope: !12167)
!12169 = !DILocation(line: 5432, column: 6, scope: !6220)
!12170 = !DILocation(line: 5433, column: 3, scope: !12167)
!12171 = !DILocation(line: 5434, column: 14, scope: !6220)
!12172 = !DILocation(line: 5434, column: 19, scope: !6220)
!12173 = !DILocation(line: 5434, column: 2, scope: !6220)
!12174 = !DILocation(line: 5436, column: 14, scope: !6220)
!12175 = !DILocation(line: 5436, column: 12, scope: !6220)
!12176 = !DILocation(line: 5437, column: 6, scope: !12177)
!12177 = distinct !DILexicalBlock(scope: !6220, file: !3, line: 5437, column: 6)
!12178 = !DILocation(line: 5437, column: 16, scope: !12177)
!12179 = !DILocation(line: 5437, column: 6, scope: !6220)
!12180 = !DILocation(line: 5438, column: 3, scope: !12177)
!12181 = !DILocation(line: 5440, column: 19, scope: !6220)
!12182 = !DILocation(line: 5440, column: 2, scope: !6220)
!12183 = !DILocation(line: 5440, column: 13, scope: !6220)
!12184 = !DILocation(line: 5440, column: 17, scope: !6220)
!12185 = !DILocation(line: 5441, column: 18, scope: !6220)
!12186 = !DILocation(line: 5441, column: 29, scope: !6220)
!12187 = !DILocation(line: 5441, column: 2, scope: !6220)
!12188 = !DILocation(line: 5443, column: 30, scope: !6220)
!12189 = !DILocation(line: 5443, column: 36, scope: !6220)
!12190 = !DILocation(line: 5443, column: 41, scope: !6220)
!12191 = !DILocation(line: 5444, column: 10, scope: !6220)
!12192 = !DILocation(line: 5444, column: 21, scope: !6220)
!12193 = !DILocation(line: 5443, column: 2, scope: !6220)
!12194 = !DILocation(line: 5447, column: 2, scope: !6220)
!12195 = !DILocation(line: 5448, column: 1, scope: !6220)
!12196 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !10346, file: !10346, line: 33, type: !12197, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12197 = !DISubroutineType(types: !12198)
!12198 = !{null, !388}
!12199 = !DILocalVariable(name: "list", arg: 1, scope: !12196, file: !10346, line: 33, type: !388)
!12200 = !DILocation(line: 33, column: 53, scope: !12196)
!12201 = !DILocation(line: 35, column: 2, scope: !12196)
!12202 = !DILocation(line: 35, column: 2, scope: !12203)
!12203 = distinct !DILexicalBlock(scope: !12196, file: !10346, line: 35, column: 2)
!12204 = !DILocation(line: 35, column: 2, scope: !12205)
!12205 = distinct !DILexicalBlock(scope: !12203, file: !10346, line: 35, column: 2)
!12206 = !DILocation(line: 35, column: 2, scope: !12207)
!12207 = distinct !DILexicalBlock(scope: !12203, file: !10346, line: 35, column: 2)
!12208 = !DILocation(line: 36, column: 15, scope: !12196)
!12209 = !DILocation(line: 36, column: 2, scope: !12196)
!12210 = !DILocation(line: 36, column: 8, scope: !12196)
!12211 = !DILocation(line: 36, column: 13, scope: !12196)
!12212 = !DILocation(line: 37, column: 1, scope: !12196)
!12213 = distinct !DISubprogram(name: "__init_work", scope: !262, file: !262, line: 215, type: !12214, scopeLine: 215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12214 = !DISubroutineType(types: !12215)
!12215 = !{null, !2000, !115}
!12216 = !DILocalVariable(name: "work", arg: 1, scope: !12213, file: !262, line: 215, type: !2000)
!12217 = !DILocation(line: 215, column: 52, scope: !12213)
!12218 = !DILocalVariable(name: "onstack", arg: 2, scope: !12213, file: !262, line: 215, type: !115)
!12219 = !DILocation(line: 215, column: 62, scope: !12213)
!12220 = !DILocation(line: 215, column: 73, scope: !12213)
!12221 = distinct !DISubprogram(name: "drm_dp_mst_link_probe_work", scope: !3, file: !3, line: 2710, type: !1998, scopeLine: 2711, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12222 = !DILocalVariable(name: "work", arg: 1, scope: !12221, file: !3, line: 2710, type: !2000)
!12223 = !DILocation(line: 2710, column: 60, scope: !12221)
!12224 = !DILocalVariable(name: "mgr", scope: !12221, file: !3, line: 2712, type: !406)
!12225 = !DILocation(line: 2712, column: 34, scope: !12221)
!12226 = !DILocalVariable(name: "__mptr", scope: !12227, file: !3, line: 2713, type: !344)
!12227 = distinct !DILexicalBlock(scope: !12221, file: !3, line: 2713, column: 3)
!12228 = !DILocation(line: 2713, column: 3, scope: !12227)
!12229 = !DILocation(line: 2713, column: 3, scope: !12230)
!12230 = distinct !DILexicalBlock(scope: !12227, file: !3, line: 2713, column: 3)
!12231 = !DILocalVariable(name: "dev", scope: !12221, file: !3, line: 2714, type: !3372)
!12232 = !DILocation(line: 2714, column: 21, scope: !12221)
!12233 = !DILocation(line: 2714, column: 27, scope: !12221)
!12234 = !DILocation(line: 2714, column: 32, scope: !12221)
!12235 = !DILocalVariable(name: "mstb", scope: !12221, file: !3, line: 2715, type: !391)
!12236 = !DILocation(line: 2715, column: 28, scope: !12221)
!12237 = !DILocalVariable(name: "ret", scope: !12221, file: !3, line: 2716, type: !115)
!12238 = !DILocation(line: 2716, column: 6, scope: !12221)
!12239 = !DILocalVariable(name: "clear_payload_id_table", scope: !12221, file: !3, line: 2717, type: !370)
!12240 = !DILocation(line: 2717, column: 7, scope: !12221)
!12241 = !DILocation(line: 2719, column: 14, scope: !12221)
!12242 = !DILocation(line: 2719, column: 19, scope: !12221)
!12243 = !DILocation(line: 2719, column: 2, scope: !12221)
!12244 = !DILocation(line: 2721, column: 14, scope: !12221)
!12245 = !DILocation(line: 2721, column: 19, scope: !12221)
!12246 = !DILocation(line: 2721, column: 2, scope: !12221)
!12247 = !DILocation(line: 2722, column: 28, scope: !12221)
!12248 = !DILocation(line: 2722, column: 33, scope: !12221)
!12249 = !DILocation(line: 2722, column: 27, scope: !12221)
!12250 = !DILocation(line: 2722, column: 25, scope: !12221)
!12251 = !DILocation(line: 2723, column: 2, scope: !12221)
!12252 = !DILocation(line: 2723, column: 7, scope: !12221)
!12253 = !DILocation(line: 2723, column: 32, scope: !12221)
!12254 = !DILocation(line: 2725, column: 9, scope: !12221)
!12255 = !DILocation(line: 2725, column: 14, scope: !12221)
!12256 = !DILocation(line: 2725, column: 7, scope: !12221)
!12257 = !DILocation(line: 2726, column: 6, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12221, file: !3, line: 2726, column: 6)
!12259 = !DILocation(line: 2726, column: 6, scope: !12221)
!12260 = !DILocation(line: 2727, column: 42, scope: !12261)
!12261 = distinct !DILexicalBlock(scope: !12258, file: !3, line: 2726, column: 12)
!12262 = !DILocation(line: 2727, column: 9, scope: !12261)
!12263 = !DILocation(line: 2727, column: 7, scope: !12261)
!12264 = !DILocation(line: 2728, column: 8, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12261, file: !3, line: 2728, column: 7)
!12266 = !DILocation(line: 2728, column: 7, scope: !12261)
!12267 = !DILocation(line: 2729, column: 9, scope: !12265)
!12268 = !DILocation(line: 2729, column: 4, scope: !12265)
!12269 = !DILocation(line: 2730, column: 2, scope: !12261)
!12270 = !DILocation(line: 2731, column: 16, scope: !12221)
!12271 = !DILocation(line: 2731, column: 21, scope: !12221)
!12272 = !DILocation(line: 2731, column: 2, scope: !12221)
!12273 = !DILocation(line: 2732, column: 7, scope: !12274)
!12274 = distinct !DILexicalBlock(scope: !12221, file: !3, line: 2732, column: 6)
!12275 = !DILocation(line: 2732, column: 6, scope: !12221)
!12276 = !DILocation(line: 2733, column: 17, scope: !12277)
!12277 = distinct !DILexicalBlock(scope: !12274, file: !3, line: 2732, column: 13)
!12278 = !DILocation(line: 2733, column: 22, scope: !12277)
!12279 = !DILocation(line: 2733, column: 3, scope: !12277)
!12280 = !DILocation(line: 2734, column: 3, scope: !12277)
!12281 = !DILocation(line: 2745, column: 6, scope: !12282)
!12282 = distinct !DILexicalBlock(scope: !12221, file: !3, line: 2745, column: 6)
!12283 = !DILocation(line: 2745, column: 6, scope: !12221)
!12284 = !DILocation(line: 2746, column: 3, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12282, file: !3, line: 2745, column: 30)
!12286 = !DILocation(line: 2747, column: 38, scope: !12285)
!12287 = !DILocation(line: 2747, column: 43, scope: !12285)
!12288 = !DILocation(line: 2747, column: 3, scope: !12285)
!12289 = !DILocation(line: 2748, column: 2, scope: !12285)
!12290 = !DILocation(line: 2750, column: 43, scope: !12221)
!12291 = !DILocation(line: 2750, column: 48, scope: !12221)
!12292 = !DILocation(line: 2750, column: 8, scope: !12221)
!12293 = !DILocation(line: 2750, column: 6, scope: !12221)
!12294 = !DILocation(line: 2751, column: 31, scope: !12221)
!12295 = !DILocation(line: 2751, column: 2, scope: !12221)
!12296 = !DILocation(line: 2753, column: 16, scope: !12221)
!12297 = !DILocation(line: 2753, column: 21, scope: !12221)
!12298 = !DILocation(line: 2753, column: 2, scope: !12221)
!12299 = !DILocation(line: 2754, column: 6, scope: !12300)
!12300 = distinct !DILexicalBlock(scope: !12221, file: !3, line: 2754, column: 6)
!12301 = !DILocation(line: 2754, column: 6, scope: !12221)
!12302 = !DILocation(line: 2755, column: 32, scope: !12300)
!12303 = !DILocation(line: 2755, column: 3, scope: !12300)
!12304 = !DILocation(line: 2756, column: 1, scope: !12221)
!12305 = distinct !DISubprogram(name: "drm_dp_tx_work", scope: !3, file: !3, line: 4854, type: !1998, scopeLine: 4855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12306 = !DILocalVariable(name: "work", arg: 1, scope: !12305, file: !3, line: 4854, type: !2000)
!12307 = !DILocation(line: 4854, column: 48, scope: !12305)
!12308 = !DILocalVariable(name: "mgr", scope: !12305, file: !3, line: 4856, type: !406)
!12309 = !DILocation(line: 4856, column: 34, scope: !12305)
!12310 = !DILocalVariable(name: "__mptr", scope: !12311, file: !3, line: 4856, type: !344)
!12311 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 4856, column: 40)
!12312 = !DILocation(line: 4856, column: 40, scope: !12311)
!12313 = !DILocation(line: 4856, column: 40, scope: !12314)
!12314 = distinct !DILexicalBlock(scope: !12311, file: !3, line: 4856, column: 40)
!12315 = !DILocation(line: 4858, column: 14, scope: !12305)
!12316 = !DILocation(line: 4858, column: 19, scope: !12305)
!12317 = !DILocation(line: 4858, column: 2, scope: !12305)
!12318 = !DILocation(line: 4859, column: 19, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12305, file: !3, line: 4859, column: 6)
!12320 = !DILocation(line: 4859, column: 24, scope: !12319)
!12321 = !DILocation(line: 4859, column: 7, scope: !12319)
!12322 = !DILocation(line: 4859, column: 6, scope: !12305)
!12323 = !DILocation(line: 4860, column: 32, scope: !12319)
!12324 = !DILocation(line: 4860, column: 3, scope: !12319)
!12325 = !DILocation(line: 4861, column: 16, scope: !12305)
!12326 = !DILocation(line: 4861, column: 21, scope: !12305)
!12327 = !DILocation(line: 4861, column: 2, scope: !12305)
!12328 = !DILocation(line: 4862, column: 1, scope: !12305)
!12329 = distinct !DISubprogram(name: "drm_dp_delayed_destroy_work", scope: !3, file: !3, line: 4910, type: !1998, scopeLine: 4911, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12330 = !DILocalVariable(name: "work", arg: 1, scope: !12329, file: !3, line: 4910, type: !2000)
!12331 = !DILocation(line: 4910, column: 61, scope: !12329)
!12332 = !DILocalVariable(name: "mgr", scope: !12329, file: !3, line: 4912, type: !406)
!12333 = !DILocation(line: 4912, column: 34, scope: !12329)
!12334 = !DILocalVariable(name: "__mptr", scope: !12335, file: !3, line: 4913, type: !344)
!12335 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 4913, column: 3)
!12336 = !DILocation(line: 4913, column: 3, scope: !12335)
!12337 = !DILocation(line: 4913, column: 3, scope: !12338)
!12338 = distinct !DILexicalBlock(scope: !12335, file: !3, line: 4913, column: 3)
!12339 = !DILocalVariable(name: "send_hotplug", scope: !12329, file: !3, line: 4915, type: !370)
!12340 = !DILocation(line: 4915, column: 7, scope: !12329)
!12341 = !DILocalVariable(name: "go_again", scope: !12329, file: !3, line: 4915, type: !370)
!12342 = !DILocation(line: 4915, column: 29, scope: !12329)
!12343 = !DILocation(line: 4922, column: 2, scope: !12329)
!12344 = !DILocation(line: 4923, column: 12, scope: !12345)
!12345 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 4922, column: 5)
!12346 = !DILocation(line: 4925, column: 3, scope: !12345)
!12347 = !DILocalVariable(name: "mstb", scope: !12348, file: !3, line: 4926, type: !391)
!12348 = distinct !DILexicalBlock(scope: !12349, file: !3, line: 4925, column: 12)
!12349 = distinct !DILexicalBlock(scope: !12350, file: !3, line: 4925, column: 3)
!12350 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 4925, column: 3)
!12351 = !DILocation(line: 4926, column: 30, scope: !12348)
!12352 = !DILocation(line: 4928, column: 16, scope: !12348)
!12353 = !DILocation(line: 4928, column: 21, scope: !12348)
!12354 = !DILocation(line: 4928, column: 4, scope: !12348)
!12355 = !DILocalVariable(name: "head__", scope: !12356, file: !3, line: 4929, type: !388)
!12356 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 4929, column: 11)
!12357 = !DILocation(line: 4929, column: 11, scope: !12356)
!12358 = !DILocalVariable(name: "pos__", scope: !12356, file: !3, line: 4929, type: !388)
!12359 = !DILocation(line: 4929, column: 11, scope: !12360)
!12360 = distinct !DILexicalBlock(scope: !12356, file: !3, line: 4929, column: 11)
!12361 = !DILocation(line: 4929, column: 11, scope: !12362)
!12362 = distinct !DILexicalBlock(scope: !12360, file: !3, line: 4929, column: 11)
!12363 = !DILocalVariable(name: "__mptr", scope: !12364, file: !3, line: 4929, type: !344)
!12364 = distinct !DILexicalBlock(scope: !12356, file: !3, line: 4929, column: 11)
!12365 = !DILocation(line: 4929, column: 11, scope: !12364)
!12366 = !DILocation(line: 4929, column: 11, scope: !12367)
!12367 = distinct !DILexicalBlock(scope: !12364, file: !3, line: 4929, column: 11)
!12368 = !DILocation(line: 4929, column: 9, scope: !12348)
!12369 = !DILocation(line: 4932, column: 8, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 4932, column: 8)
!12371 = !DILocation(line: 4932, column: 8, scope: !12348)
!12372 = !DILocation(line: 4933, column: 15, scope: !12370)
!12373 = !DILocation(line: 4933, column: 21, scope: !12370)
!12374 = !DILocation(line: 4933, column: 5, scope: !12370)
!12375 = !DILocation(line: 4934, column: 18, scope: !12348)
!12376 = !DILocation(line: 4934, column: 23, scope: !12348)
!12377 = !DILocation(line: 4934, column: 4, scope: !12348)
!12378 = !DILocation(line: 4936, column: 9, scope: !12379)
!12379 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 4936, column: 8)
!12380 = !DILocation(line: 4936, column: 8, scope: !12348)
!12381 = !DILocation(line: 4937, column: 5, scope: !12379)
!12382 = !DILocation(line: 4939, column: 32, scope: !12348)
!12383 = !DILocation(line: 4939, column: 4, scope: !12348)
!12384 = !DILocation(line: 4940, column: 13, scope: !12348)
!12385 = !DILocation(line: 4925, column: 3, scope: !12349)
!12386 = distinct !{!12386, !12387, !12388}
!12387 = !DILocation(line: 4925, column: 3, scope: !12350)
!12388 = !DILocation(line: 4941, column: 3, scope: !12350)
!12389 = !DILocation(line: 4943, column: 3, scope: !12345)
!12390 = !DILocalVariable(name: "port", scope: !12391, file: !3, line: 4944, type: !345)
!12391 = distinct !DILexicalBlock(scope: !12392, file: !3, line: 4943, column: 12)
!12392 = distinct !DILexicalBlock(scope: !12393, file: !3, line: 4943, column: 3)
!12393 = distinct !DILexicalBlock(scope: !12345, file: !3, line: 4943, column: 3)
!12394 = !DILocation(line: 4944, column: 28, scope: !12391)
!12395 = !DILocation(line: 4946, column: 16, scope: !12391)
!12396 = !DILocation(line: 4946, column: 21, scope: !12391)
!12397 = !DILocation(line: 4946, column: 4, scope: !12391)
!12398 = !DILocalVariable(name: "head__", scope: !12399, file: !3, line: 4947, type: !388)
!12399 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 4947, column: 11)
!12400 = !DILocation(line: 4947, column: 11, scope: !12399)
!12401 = !DILocalVariable(name: "pos__", scope: !12399, file: !3, line: 4947, type: !388)
!12402 = !DILocation(line: 4947, column: 11, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !12399, file: !3, line: 4947, column: 11)
!12404 = !DILocation(line: 4947, column: 11, scope: !12405)
!12405 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 4947, column: 11)
!12406 = !DILocalVariable(name: "__mptr", scope: !12407, file: !3, line: 4947, type: !344)
!12407 = distinct !DILexicalBlock(scope: !12399, file: !3, line: 4947, column: 11)
!12408 = !DILocation(line: 4947, column: 11, scope: !12407)
!12409 = !DILocation(line: 4947, column: 11, scope: !12410)
!12410 = distinct !DILexicalBlock(scope: !12407, file: !3, line: 4947, column: 11)
!12411 = !DILocation(line: 4947, column: 9, scope: !12391)
!12412 = !DILocation(line: 4950, column: 8, scope: !12413)
!12413 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 4950, column: 8)
!12414 = !DILocation(line: 4950, column: 8, scope: !12391)
!12415 = !DILocation(line: 4951, column: 15, scope: !12413)
!12416 = !DILocation(line: 4951, column: 21, scope: !12413)
!12417 = !DILocation(line: 4951, column: 5, scope: !12413)
!12418 = !DILocation(line: 4952, column: 18, scope: !12391)
!12419 = !DILocation(line: 4952, column: 23, scope: !12391)
!12420 = !DILocation(line: 4952, column: 4, scope: !12391)
!12421 = !DILocation(line: 4954, column: 9, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 4954, column: 8)
!12423 = !DILocation(line: 4954, column: 8, scope: !12391)
!12424 = !DILocation(line: 4955, column: 5, scope: !12422)
!12425 = !DILocation(line: 4957, column: 32, scope: !12391)
!12426 = !DILocation(line: 4957, column: 4, scope: !12391)
!12427 = !DILocation(line: 4958, column: 17, scope: !12391)
!12428 = !DILocation(line: 4959, column: 13, scope: !12391)
!12429 = !DILocation(line: 4943, column: 3, scope: !12392)
!12430 = distinct !{!12430, !12431, !12432}
!12431 = !DILocation(line: 4943, column: 3, scope: !12393)
!12432 = !DILocation(line: 4960, column: 3, scope: !12393)
!12433 = !DILocation(line: 4961, column: 2, scope: !12345)
!12434 = !DILocation(line: 4961, column: 11, scope: !12329)
!12435 = distinct !{!12435, !12343, !12436}
!12436 = !DILocation(line: 4961, column: 19, scope: !12329)
!12437 = !DILocation(line: 4963, column: 6, scope: !12438)
!12438 = distinct !DILexicalBlock(scope: !12329, file: !3, line: 4963, column: 6)
!12439 = !DILocation(line: 4963, column: 6, scope: !12329)
!12440 = !DILocation(line: 4964, column: 32, scope: !12438)
!12441 = !DILocation(line: 4964, column: 37, scope: !12438)
!12442 = !DILocation(line: 4964, column: 3, scope: !12438)
!12443 = !DILocation(line: 4965, column: 1, scope: !12329)
!12444 = distinct !DISubprogram(name: "drm_dp_mst_up_req_work", scope: !3, file: !3, line: 4053, type: !1998, scopeLine: 4054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12445 = !DILocalVariable(name: "work", arg: 1, scope: !12444, file: !3, line: 4053, type: !2000)
!12446 = !DILocation(line: 4053, column: 56, scope: !12444)
!12447 = !DILocalVariable(name: "mgr", scope: !12444, file: !3, line: 4055, type: !406)
!12448 = !DILocation(line: 4055, column: 34, scope: !12444)
!12449 = !DILocalVariable(name: "__mptr", scope: !12450, file: !3, line: 4056, type: !344)
!12450 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 4056, column: 3)
!12451 = !DILocation(line: 4056, column: 3, scope: !12450)
!12452 = !DILocation(line: 4056, column: 3, scope: !12453)
!12453 = distinct !DILexicalBlock(scope: !12450, file: !3, line: 4056, column: 3)
!12454 = !DILocalVariable(name: "up_req", scope: !12444, file: !3, line: 4058, type: !6123)
!12455 = !DILocation(line: 4058, column: 32, scope: !12444)
!12456 = !DILocalVariable(name: "send_hotplug", scope: !12444, file: !3, line: 4059, type: !370)
!12457 = !DILocation(line: 4059, column: 7, scope: !12444)
!12458 = !DILocation(line: 4061, column: 14, scope: !12444)
!12459 = !DILocation(line: 4061, column: 19, scope: !12444)
!12460 = !DILocation(line: 4061, column: 2, scope: !12444)
!12461 = !DILocation(line: 4062, column: 2, scope: !12444)
!12462 = !DILocation(line: 4063, column: 15, scope: !12463)
!12463 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 4062, column: 15)
!12464 = !DILocation(line: 4063, column: 20, scope: !12463)
!12465 = !DILocation(line: 4063, column: 3, scope: !12463)
!12466 = !DILocalVariable(name: "head__", scope: !12467, file: !3, line: 4064, type: !388)
!12467 = distinct !DILexicalBlock(scope: !12463, file: !3, line: 4064, column: 12)
!12468 = !DILocation(line: 4064, column: 12, scope: !12467)
!12469 = !DILocalVariable(name: "pos__", scope: !12467, file: !3, line: 4064, type: !388)
!12470 = !DILocation(line: 4064, column: 12, scope: !12471)
!12471 = distinct !DILexicalBlock(scope: !12467, file: !3, line: 4064, column: 12)
!12472 = !DILocation(line: 4064, column: 12, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12471, file: !3, line: 4064, column: 12)
!12474 = !DILocalVariable(name: "__mptr", scope: !12475, file: !3, line: 4064, type: !344)
!12475 = distinct !DILexicalBlock(scope: !12467, file: !3, line: 4064, column: 12)
!12476 = !DILocation(line: 4064, column: 12, scope: !12475)
!12477 = !DILocation(line: 4064, column: 12, scope: !12478)
!12478 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 4064, column: 12)
!12479 = !DILocation(line: 4064, column: 10, scope: !12463)
!12480 = !DILocation(line: 4067, column: 7, scope: !12481)
!12481 = distinct !DILexicalBlock(scope: !12463, file: !3, line: 4067, column: 7)
!12482 = !DILocation(line: 4067, column: 7, scope: !12463)
!12483 = !DILocation(line: 4068, column: 14, scope: !12481)
!12484 = !DILocation(line: 4068, column: 22, scope: !12481)
!12485 = !DILocation(line: 4068, column: 4, scope: !12481)
!12486 = !DILocation(line: 4069, column: 17, scope: !12463)
!12487 = !DILocation(line: 4069, column: 22, scope: !12463)
!12488 = !DILocation(line: 4069, column: 3, scope: !12463)
!12489 = !DILocation(line: 4071, column: 8, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12463, file: !3, line: 4071, column: 7)
!12491 = !DILocation(line: 4071, column: 7, scope: !12463)
!12492 = !DILocation(line: 4072, column: 4, scope: !12490)
!12493 = !DILocation(line: 4074, column: 45, scope: !12463)
!12494 = !DILocation(line: 4074, column: 50, scope: !12463)
!12495 = !DILocation(line: 4074, column: 19, scope: !12463)
!12496 = !DILocation(line: 4074, column: 16, scope: !12463)
!12497 = !DILocation(line: 4075, column: 9, scope: !12463)
!12498 = !DILocation(line: 4075, column: 3, scope: !12463)
!12499 = distinct !{!12499, !12461, !12500}
!12500 = !DILocation(line: 4076, column: 2, scope: !12444)
!12501 = !DILocation(line: 4077, column: 16, scope: !12444)
!12502 = !DILocation(line: 4077, column: 21, scope: !12444)
!12503 = !DILocation(line: 4077, column: 2, scope: !12444)
!12504 = !DILocation(line: 4079, column: 6, scope: !12505)
!12505 = distinct !DILexicalBlock(scope: !12444, file: !3, line: 4079, column: 6)
!12506 = !DILocation(line: 4079, column: 6, scope: !12444)
!12507 = !DILocation(line: 4080, column: 32, scope: !12505)
!12508 = !DILocation(line: 4080, column: 37, scope: !12505)
!12509 = !DILocation(line: 4080, column: 3, scope: !12505)
!12510 = !DILocation(line: 4081, column: 1, scope: !12444)
!12511 = distinct !DISubprogram(name: "kcalloc", scope: !328, file: !328, line: 601, type: !12512, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12512 = !DISubroutineType(types: !12513)
!12513 = !{!344, !1023, !1023, !342}
!12514 = !DILocalVariable(name: "n", arg: 1, scope: !12511, file: !328, line: 601, type: !1023)
!12515 = !DILocation(line: 601, column: 36, scope: !12511)
!12516 = !DILocalVariable(name: "size", arg: 2, scope: !12511, file: !328, line: 601, type: !1023)
!12517 = !DILocation(line: 601, column: 46, scope: !12511)
!12518 = !DILocalVariable(name: "flags", arg: 3, scope: !12511, file: !328, line: 601, type: !342)
!12519 = !DILocation(line: 601, column: 58, scope: !12511)
!12520 = !DILocation(line: 603, column: 23, scope: !12511)
!12521 = !DILocation(line: 603, column: 26, scope: !12511)
!12522 = !DILocation(line: 603, column: 32, scope: !12511)
!12523 = !DILocation(line: 603, column: 38, scope: !12511)
!12524 = !DILocation(line: 603, column: 9, scope: !12511)
!12525 = !DILocation(line: 603, column: 2, scope: !12511)
!12526 = distinct !DISubprogram(name: "drm_dp_mst_topology_mgr_destroy", scope: !3, file: !3, line: 5455, type: !5724, scopeLine: 5456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12527 = !DILocalVariable(name: "mgr", arg: 1, scope: !12526, file: !3, line: 5455, type: !406)
!12528 = !DILocation(line: 5455, column: 70, scope: !12526)
!12529 = !DILocation(line: 5457, column: 34, scope: !12526)
!12530 = !DILocation(line: 5457, column: 2, scope: !12526)
!12531 = !DILocation(line: 5458, column: 14, scope: !12526)
!12532 = !DILocation(line: 5458, column: 19, scope: !12526)
!12533 = !DILocation(line: 5458, column: 2, scope: !12526)
!12534 = !DILocation(line: 5460, column: 6, scope: !12535)
!12535 = distinct !DILexicalBlock(scope: !12526, file: !3, line: 5460, column: 6)
!12536 = !DILocation(line: 5460, column: 11, scope: !12535)
!12537 = !DILocation(line: 5460, column: 6, scope: !12526)
!12538 = !DILocation(line: 5461, column: 21, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12535, file: !3, line: 5460, column: 31)
!12540 = !DILocation(line: 5461, column: 26, scope: !12539)
!12541 = !DILocation(line: 5461, column: 3, scope: !12539)
!12542 = !DILocation(line: 5462, column: 3, scope: !12539)
!12543 = !DILocation(line: 5462, column: 8, scope: !12539)
!12544 = !DILocation(line: 5462, column: 27, scope: !12539)
!12545 = !DILocation(line: 5463, column: 2, scope: !12539)
!12546 = !DILocation(line: 5464, column: 14, scope: !12526)
!12547 = !DILocation(line: 5464, column: 19, scope: !12526)
!12548 = !DILocation(line: 5464, column: 2, scope: !12526)
!12549 = !DILocation(line: 5465, column: 8, scope: !12526)
!12550 = !DILocation(line: 5465, column: 13, scope: !12526)
!12551 = !DILocation(line: 5465, column: 2, scope: !12526)
!12552 = !DILocation(line: 5466, column: 2, scope: !12526)
!12553 = !DILocation(line: 5466, column: 7, scope: !12526)
!12554 = !DILocation(line: 5466, column: 16, scope: !12526)
!12555 = !DILocation(line: 5467, column: 8, scope: !12526)
!12556 = !DILocation(line: 5467, column: 13, scope: !12526)
!12557 = !DILocation(line: 5467, column: 2, scope: !12526)
!12558 = !DILocation(line: 5468, column: 2, scope: !12526)
!12559 = !DILocation(line: 5468, column: 7, scope: !12526)
!12560 = !DILocation(line: 5468, column: 22, scope: !12526)
!12561 = !DILocation(line: 5469, column: 16, scope: !12526)
!12562 = !DILocation(line: 5469, column: 21, scope: !12526)
!12563 = !DILocation(line: 5469, column: 2, scope: !12526)
!12564 = !DILocation(line: 5470, column: 2, scope: !12526)
!12565 = !DILocation(line: 5470, column: 7, scope: !12526)
!12566 = !DILocation(line: 5470, column: 11, scope: !12526)
!12567 = !DILocation(line: 5471, column: 2, scope: !12526)
!12568 = !DILocation(line: 5471, column: 7, scope: !12526)
!12569 = !DILocation(line: 5471, column: 11, scope: !12526)
!12570 = !DILocation(line: 5472, column: 31, scope: !12526)
!12571 = !DILocation(line: 5472, column: 36, scope: !12526)
!12572 = !DILocation(line: 5472, column: 2, scope: !12526)
!12573 = !DILocation(line: 5473, column: 2, scope: !12526)
!12574 = !DILocation(line: 5473, column: 7, scope: !12526)
!12575 = !DILocation(line: 5473, column: 13, scope: !12526)
!12576 = !DILocation(line: 5475, column: 17, scope: !12526)
!12577 = !DILocation(line: 5475, column: 22, scope: !12526)
!12578 = !DILocation(line: 5475, column: 2, scope: !12526)
!12579 = !DILocation(line: 5476, column: 17, scope: !12526)
!12580 = !DILocation(line: 5476, column: 22, scope: !12526)
!12581 = !DILocation(line: 5476, column: 2, scope: !12526)
!12582 = !DILocation(line: 5477, column: 17, scope: !12526)
!12583 = !DILocation(line: 5477, column: 22, scope: !12526)
!12584 = !DILocation(line: 5477, column: 2, scope: !12526)
!12585 = !DILocation(line: 5478, column: 17, scope: !12526)
!12586 = !DILocation(line: 5478, column: 22, scope: !12526)
!12587 = !DILocation(line: 5478, column: 2, scope: !12526)
!12588 = !DILocation(line: 5479, column: 17, scope: !12526)
!12589 = !DILocation(line: 5479, column: 22, scope: !12526)
!12590 = !DILocation(line: 5479, column: 2, scope: !12526)
!12591 = !DILocation(line: 5480, column: 17, scope: !12526)
!12592 = !DILocation(line: 5480, column: 22, scope: !12526)
!12593 = !DILocation(line: 5480, column: 2, scope: !12526)
!12594 = !DILocation(line: 5484, column: 1, scope: !12526)
!12595 = distinct !DISubprogram(name: "mutex_destroy", scope: !420, file: !420, line: 103, type: !12596, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12596 = !DISubroutineType(types: !12597)
!12597 = !{null, !12598}
!12598 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!12599 = !DILocalVariable(name: "lock", arg: 1, scope: !12595, file: !420, line: 103, type: !12598)
!12600 = !DILocation(line: 103, column: 48, scope: !12595)
!12601 = !DILocation(line: 103, column: 55, scope: !12595)
!12602 = distinct !DISubprogram(name: "drm_dp_mst_is_virtual_dpcd", scope: !3, file: !3, line: 5708, type: !12603, scopeLine: 5709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12603 = !DISubroutineType(types: !12604)
!12604 = !{!370, !345}
!12605 = !DILocalVariable(name: "port", arg: 1, scope: !12602, file: !3, line: 5708, type: !345)
!12606 = !DILocation(line: 5708, column: 64, scope: !12602)
!12607 = !DILocalVariable(name: "downstream_port", scope: !12602, file: !3, line: 5710, type: !345)
!12608 = !DILocation(line: 5710, column: 26, scope: !12602)
!12609 = !DILocation(line: 5712, column: 7, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 5712, column: 6)
!12611 = !DILocation(line: 5712, column: 12, scope: !12610)
!12612 = !DILocation(line: 5712, column: 15, scope: !12610)
!12613 = !DILocation(line: 5712, column: 21, scope: !12610)
!12614 = !DILocation(line: 5712, column: 30, scope: !12610)
!12615 = !DILocation(line: 5712, column: 6, scope: !12602)
!12616 = !DILocation(line: 5713, column: 3, scope: !12610)
!12617 = !DILocation(line: 5716, column: 6, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 5716, column: 6)
!12619 = !DILocation(line: 5716, column: 12, scope: !12618)
!12620 = !DILocation(line: 5716, column: 21, scope: !12618)
!12621 = !DILocation(line: 5716, column: 6, scope: !12602)
!12622 = !DILocation(line: 5717, column: 3, scope: !12618)
!12623 = !DILocation(line: 5720, column: 6, scope: !12624)
!12624 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 5720, column: 6)
!12625 = !DILocation(line: 5720, column: 12, scope: !12624)
!12626 = !DILocation(line: 5720, column: 16, scope: !12624)
!12627 = !DILocation(line: 5720, column: 49, scope: !12624)
!12628 = !DILocation(line: 5721, column: 7, scope: !12624)
!12629 = !DILocation(line: 5721, column: 13, scope: !12624)
!12630 = !DILocation(line: 5721, column: 17, scope: !12624)
!12631 = !DILocation(line: 5722, column: 6, scope: !12624)
!12632 = !DILocation(line: 5722, column: 12, scope: !12624)
!12633 = !DILocation(line: 5720, column: 6, scope: !12602)
!12634 = !DILocation(line: 5723, column: 3, scope: !12624)
!12635 = !DILocation(line: 5726, column: 14, scope: !12602)
!12636 = !DILocation(line: 5726, column: 20, scope: !12602)
!12637 = !DILocation(line: 5726, column: 25, scope: !12602)
!12638 = !DILocation(line: 5726, column: 2, scope: !12602)
!12639 = !DILocation(line: 5727, column: 6, scope: !12640)
!12640 = distinct !DILexicalBlock(scope: !12602, file: !3, line: 5727, column: 6)
!12641 = !DILocation(line: 5727, column: 12, scope: !12640)
!12642 = !DILocation(line: 5727, column: 16, scope: !12640)
!12643 = !DILocation(line: 5727, column: 48, scope: !12640)
!12644 = !DILocation(line: 5728, column: 6, scope: !12640)
!12645 = !DILocation(line: 5728, column: 12, scope: !12640)
!12646 = !DILocation(line: 5728, column: 17, scope: !12640)
!12647 = !DILocation(line: 5729, column: 6, scope: !12640)
!12648 = !DILocation(line: 5729, column: 12, scope: !12640)
!12649 = !DILocation(line: 5729, column: 18, scope: !12640)
!12650 = !DILocation(line: 5729, column: 28, scope: !12640)
!12651 = !DILocation(line: 5727, column: 6, scope: !12602)
!12652 = !DILocalVariable(name: "__mptr", scope: !12653, file: !3, line: 5730, type: !344)
!12653 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 5730, column: 3)
!12654 = distinct !DILexicalBlock(scope: !12655, file: !3, line: 5730, column: 3)
!12655 = distinct !DILexicalBlock(scope: !12640, file: !3, line: 5729, column: 34)
!12656 = !DILocation(line: 5730, column: 3, scope: !12653)
!12657 = !DILocation(line: 5730, column: 3, scope: !12658)
!12658 = distinct !DILexicalBlock(scope: !12653, file: !3, line: 5730, column: 3)
!12659 = !DILocation(line: 5730, column: 3, scope: !12654)
!12660 = !DILocation(line: 5730, column: 3, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12654, file: !3, line: 5730, column: 3)
!12662 = !DILocation(line: 5731, column: 8, scope: !12663)
!12663 = distinct !DILexicalBlock(scope: !12664, file: !3, line: 5731, column: 8)
!12664 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 5730, column: 66)
!12665 = !DILocation(line: 5731, column: 25, scope: !12663)
!12666 = !DILocation(line: 5731, column: 29, scope: !12663)
!12667 = !DILocation(line: 5731, column: 56, scope: !12663)
!12668 = !DILocation(line: 5732, column: 9, scope: !12663)
!12669 = !DILocation(line: 5732, column: 26, scope: !12663)
!12670 = !DILocation(line: 5731, column: 8, scope: !12664)
!12671 = !DILocation(line: 5733, column: 19, scope: !12672)
!12672 = distinct !DILexicalBlock(scope: !12663, file: !3, line: 5732, column: 33)
!12673 = !DILocation(line: 5733, column: 25, scope: !12672)
!12674 = !DILocation(line: 5733, column: 30, scope: !12672)
!12675 = !DILocation(line: 5733, column: 5, scope: !12672)
!12676 = !DILocation(line: 5734, column: 5, scope: !12672)
!12677 = !DILocation(line: 5736, column: 3, scope: !12664)
!12678 = !DILocalVariable(name: "__mptr", scope: !12679, file: !3, line: 5730, type: !344)
!12679 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 5730, column: 3)
!12680 = !DILocation(line: 5730, column: 3, scope: !12679)
!12681 = !DILocation(line: 5730, column: 3, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 5730, column: 3)
!12683 = distinct !{!12683, !12659, !12684}
!12684 = !DILocation(line: 5736, column: 3, scope: !12654)
!12685 = !DILocation(line: 5737, column: 2, scope: !12655)
!12686 = !DILocation(line: 5738, column: 16, scope: !12602)
!12687 = !DILocation(line: 5738, column: 22, scope: !12602)
!12688 = !DILocation(line: 5738, column: 27, scope: !12602)
!12689 = !DILocation(line: 5738, column: 2, scope: !12602)
!12690 = !DILocation(line: 5740, column: 2, scope: !12602)
!12691 = !DILocation(line: 5741, column: 1, scope: !12602)
!12692 = distinct !DISubprogram(name: "drm_dp_has_quirk", scope: !311, file: !311, line: 1795, type: !12693, scopeLine: 1797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12693 = !DISubroutineType(types: !12694)
!12694 = !{!370, !12695, !468, !310}
!12695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12696, size: 64)
!12696 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !11355)
!12697 = !DILocalVariable(name: "desc", arg: 1, scope: !12692, file: !311, line: 1795, type: !12695)
!12698 = !DILocation(line: 1795, column: 44, scope: !12692)
!12699 = !DILocalVariable(name: "edid_quirks", arg: 2, scope: !12692, file: !311, line: 1795, type: !468)
!12700 = !DILocation(line: 1795, column: 54, scope: !12692)
!12701 = !DILocalVariable(name: "quirk", arg: 3, scope: !12692, file: !311, line: 1796, type: !310)
!12702 = !DILocation(line: 1796, column: 22, scope: !12692)
!12703 = !DILocation(line: 1798, column: 10, scope: !12692)
!12704 = !DILocation(line: 1798, column: 16, scope: !12692)
!12705 = !DILocation(line: 1798, column: 25, scope: !12692)
!12706 = !DILocation(line: 1798, column: 23, scope: !12692)
!12707 = !DILocation(line: 1798, column: 9, scope: !12692)
!12708 = !DILocation(line: 1798, column: 40, scope: !12692)
!12709 = !DILocation(line: 1798, column: 38, scope: !12692)
!12710 = !DILocation(line: 1798, column: 2, scope: !12692)
!12711 = distinct !DISubprogram(name: "refcount_inc", scope: !320, file: !320, line: 265, type: !12712, scopeLine: 266, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12712 = !DISubroutineType(types: !12713)
!12713 = !{null, !12714}
!12714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!12715 = !DILocalVariable(name: "r", arg: 1, scope: !12711, file: !320, line: 265, type: !12714)
!12716 = !DILocation(line: 265, column: 45, scope: !12711)
!12717 = !DILocation(line: 267, column: 17, scope: !12711)
!12718 = !DILocation(line: 267, column: 2, scope: !12711)
!12719 = !DILocation(line: 268, column: 1, scope: !12711)
!12720 = distinct !DISubprogram(name: "__refcount_inc", scope: !320, file: !320, line: 248, type: !12721, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12721 = !DISubroutineType(types: !12722)
!12722 = !{null, !12714, !1011}
!12723 = !DILocalVariable(name: "r", arg: 1, scope: !12720, file: !320, line: 248, type: !12714)
!12724 = !DILocation(line: 248, column: 47, scope: !12720)
!12725 = !DILocalVariable(name: "oldp", arg: 2, scope: !12720, file: !320, line: 248, type: !1011)
!12726 = !DILocation(line: 248, column: 55, scope: !12720)
!12727 = !DILocation(line: 250, column: 20, scope: !12720)
!12728 = !DILocation(line: 250, column: 23, scope: !12720)
!12729 = !DILocation(line: 250, column: 2, scope: !12720)
!12730 = !DILocation(line: 251, column: 1, scope: !12720)
!12731 = distinct !DISubprogram(name: "__refcount_add", scope: !320, file: !320, line: 191, type: !12732, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12732 = !DISubroutineType(types: !12733)
!12733 = !{null, !115, !12714, !1011}
!12734 = !DILocalVariable(name: "i", arg: 1, scope: !12735, file: !12736, line: 182, type: !115)
!12735 = distinct !DISubprogram(name: "arch_atomic_fetch_add", scope: !12736, file: !12736, line: 182, type: !12737, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12736 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!12737 = !DISubroutineType(types: !12738)
!12738 = !{!115, !115, !12739}
!12739 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !358, size: 64)
!12740 = !DILocation(line: 182, column: 54, scope: !12735, inlinedAt: !12741)
!12741 = distinct !DILocation(line: 143, column: 9, scope: !12742, inlinedAt: !12744)
!12742 = distinct !DISubprogram(name: "atomic_fetch_add_relaxed", scope: !12743, file: !12743, line: 140, type: !12737, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12743 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!12744 = distinct !DILocation(line: 193, column: 12, scope: !12731)
!12745 = !DILocalVariable(name: "v", arg: 2, scope: !12735, file: !12736, line: 182, type: !12739)
!12746 = !DILocation(line: 182, column: 67, scope: !12735, inlinedAt: !12741)
!12747 = !DILocalVariable(name: "__ret", scope: !12748, file: !12736, line: 184, type: !115)
!12748 = distinct !DILexicalBlock(scope: !12735, file: !12736, line: 184, column: 9)
!12749 = !DILocation(line: 184, column: 9, scope: !12748, inlinedAt: !12741)
!12750 = !DILocalVariable(name: "v", arg: 1, scope: !12751, file: !8891, line: 99, type: !8894)
!12751 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !8891, file: !8891, line: 99, type: !8892, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12752 = !DILocation(line: 99, column: 79, scope: !12751, inlinedAt: !12753)
!12753 = distinct !DILocation(line: 142, column: 2, scope: !12742, inlinedAt: !12744)
!12754 = !DILocalVariable(name: "size", arg: 2, scope: !12751, file: !8891, line: 99, type: !1023)
!12755 = !DILocation(line: 99, column: 89, scope: !12751, inlinedAt: !12753)
!12756 = !DILocalVariable(name: "i", arg: 1, scope: !12742, file: !12743, line: 140, type: !115)
!12757 = !DILocation(line: 140, column: 30, scope: !12742, inlinedAt: !12744)
!12758 = !DILocalVariable(name: "v", arg: 2, scope: !12742, file: !12743, line: 140, type: !12739)
!12759 = !DILocation(line: 140, column: 43, scope: !12742, inlinedAt: !12744)
!12760 = !DILocalVariable(name: "i", arg: 1, scope: !12731, file: !320, line: 191, type: !115)
!12761 = !DILocation(line: 191, column: 39, scope: !12731)
!12762 = !DILocalVariable(name: "r", arg: 2, scope: !12731, file: !320, line: 191, type: !12714)
!12763 = !DILocation(line: 191, column: 54, scope: !12731)
!12764 = !DILocalVariable(name: "oldp", arg: 3, scope: !12731, file: !320, line: 191, type: !1011)
!12765 = !DILocation(line: 191, column: 62, scope: !12731)
!12766 = !DILocalVariable(name: "old", scope: !12731, file: !320, line: 193, type: !115)
!12767 = !DILocation(line: 193, column: 6, scope: !12731)
!12768 = !DILocation(line: 193, column: 37, scope: !12731)
!12769 = !DILocation(line: 193, column: 41, scope: !12731)
!12770 = !DILocation(line: 193, column: 44, scope: !12731)
!12771 = !DILocation(line: 142, column: 31, scope: !12742, inlinedAt: !12744)
!12772 = !DILocation(line: 101, column: 20, scope: !12751, inlinedAt: !12753)
!12773 = !DILocation(line: 101, column: 23, scope: !12751, inlinedAt: !12753)
!12774 = !DILocation(line: 101, column: 2, scope: !12751, inlinedAt: !12753)
!12775 = !DILocation(line: 102, column: 2, scope: !12751, inlinedAt: !12753)
!12776 = !DILocation(line: 143, column: 39, scope: !12742, inlinedAt: !12744)
!12777 = !DILocation(line: 143, column: 42, scope: !12742, inlinedAt: !12744)
!12778 = !{i32 -2146304280}
!12779 = !DILocation(line: 195, column: 6, scope: !12780)
!12780 = distinct !DILexicalBlock(scope: !12731, file: !320, line: 195, column: 6)
!12781 = !DILocation(line: 195, column: 6, scope: !12731)
!12782 = !DILocation(line: 196, column: 11, scope: !12780)
!12783 = !DILocation(line: 196, column: 4, scope: !12780)
!12784 = !DILocation(line: 196, column: 9, scope: !12780)
!12785 = !DILocation(line: 196, column: 3, scope: !12780)
!12786 = !DILocation(line: 198, column: 6, scope: !12787)
!12787 = distinct !DILexicalBlock(scope: !12731, file: !320, line: 198, column: 6)
!12788 = !DILocation(line: 198, column: 6, scope: !12731)
!12789 = !DILocation(line: 199, column: 26, scope: !12787)
!12790 = !DILocation(line: 199, column: 3, scope: !12787)
!12791 = !DILocation(line: 200, column: 11, scope: !12792)
!12792 = distinct !DILexicalBlock(scope: !12787, file: !320, line: 200, column: 11)
!12793 = !DILocation(line: 200, column: 11, scope: !12787)
!12794 = !DILocation(line: 201, column: 26, scope: !12792)
!12795 = !DILocation(line: 201, column: 3, scope: !12792)
!12796 = !DILocation(line: 202, column: 1, scope: !12731)
!12797 = distinct !DISubprogram(name: "kasan_check_write", scope: !12798, file: !12798, line: 38, type: !12799, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12798 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12799 = !DISubroutineType(types: !12800)
!12800 = !{!370, !8894, !7}
!12801 = !DILocalVariable(name: "p", arg: 1, scope: !12797, file: !12798, line: 38, type: !8894)
!12802 = !DILocation(line: 38, column: 59, scope: !12797)
!12803 = !DILocalVariable(name: "size", arg: 2, scope: !12797, file: !12798, line: 38, type: !7)
!12804 = !DILocation(line: 38, column: 75, scope: !12797)
!12805 = !DILocation(line: 40, column: 2, scope: !12797)
!12806 = distinct !DISubprogram(name: "kcsan_check_access", scope: !12807, file: !12807, line: 178, type: !12808, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12807 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!12808 = !DISubroutineType(types: !12809)
!12809 = !{null, !8894, !1023, !115}
!12810 = !DILocalVariable(name: "ptr", arg: 1, scope: !12806, file: !12807, line: 178, type: !8894)
!12811 = !DILocation(line: 178, column: 60, scope: !12806)
!12812 = !DILocalVariable(name: "size", arg: 2, scope: !12806, file: !12807, line: 178, type: !1023)
!12813 = !DILocation(line: 178, column: 72, scope: !12806)
!12814 = !DILocalVariable(name: "type", arg: 3, scope: !12806, file: !12807, line: 179, type: !115)
!12815 = !DILocation(line: 179, column: 15, scope: !12806)
!12816 = !DILocation(line: 179, column: 23, scope: !12806)
!12817 = distinct !DISubprogram(name: "refcount_read", scope: !320, file: !320, line: 145, type: !12818, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12818 = !DISubroutineType(types: !12819)
!12819 = !{!7, !12820}
!12820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12821, size: 64)
!12821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !354)
!12822 = !DILocalVariable(name: "v", arg: 1, scope: !12823, file: !12736, line: 23, type: !12826)
!12823 = distinct !DISubprogram(name: "arch_atomic_read", scope: !12736, file: !12736, line: 23, type: !12824, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12824 = !DISubroutineType(types: !12825)
!12825 = !{!115, !12826}
!12826 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12827, size: 64)
!12827 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !358)
!12828 = !DILocation(line: 23, column: 61, scope: !12823, inlinedAt: !12829)
!12829 = distinct !DILocation(line: 28, column: 9, scope: !12830, inlinedAt: !12831)
!12830 = distinct !DISubprogram(name: "atomic_read", scope: !12743, file: !12743, line: 25, type: !12824, scopeLine: 26, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12831 = distinct !DILocation(line: 147, column: 9, scope: !12817)
!12832 = !DILocalVariable(name: "v", arg: 1, scope: !12833, file: !8891, line: 69, type: !8894)
!12833 = distinct !DISubprogram(name: "instrument_atomic_read", scope: !8891, file: !8891, line: 69, type: !8892, scopeLine: 70, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12834 = !DILocation(line: 69, column: 73, scope: !12833, inlinedAt: !12835)
!12835 = distinct !DILocation(line: 27, column: 2, scope: !12830, inlinedAt: !12831)
!12836 = !DILocalVariable(name: "size", arg: 2, scope: !12833, file: !8891, line: 69, type: !1023)
!12837 = !DILocation(line: 69, column: 83, scope: !12833, inlinedAt: !12835)
!12838 = !DILocalVariable(name: "v", arg: 1, scope: !12830, file: !12743, line: 25, type: !12826)
!12839 = !DILocation(line: 25, column: 29, scope: !12830, inlinedAt: !12831)
!12840 = !DILocalVariable(name: "r", arg: 1, scope: !12817, file: !320, line: 145, type: !12820)
!12841 = !DILocation(line: 145, column: 60, scope: !12817)
!12842 = !DILocation(line: 147, column: 22, scope: !12817)
!12843 = !DILocation(line: 147, column: 25, scope: !12817)
!12844 = !DILocation(line: 27, column: 25, scope: !12830, inlinedAt: !12831)
!12845 = !DILocation(line: 71, column: 19, scope: !12833, inlinedAt: !12835)
!12846 = !DILocation(line: 71, column: 22, scope: !12833, inlinedAt: !12835)
!12847 = !DILocation(line: 71, column: 2, scope: !12833, inlinedAt: !12835)
!12848 = !DILocation(line: 72, column: 2, scope: !12833, inlinedAt: !12835)
!12849 = !DILocation(line: 28, column: 26, scope: !12830, inlinedAt: !12831)
!12850 = !DILocation(line: 29, column: 9, scope: !12823, inlinedAt: !12829)
!12851 = !DILocation(line: 147, column: 2, scope: !12817)
!12852 = distinct !DISubprogram(name: "kasan_check_read", scope: !12798, file: !12798, line: 34, type: !12799, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12853 = !DILocalVariable(name: "p", arg: 1, scope: !12852, file: !12798, line: 34, type: !8894)
!12854 = !DILocation(line: 34, column: 58, scope: !12852)
!12855 = !DILocalVariable(name: "size", arg: 2, scope: !12852, file: !12798, line: 34, type: !7)
!12856 = !DILocation(line: 34, column: 74, scope: !12852)
!12857 = !DILocation(line: 36, column: 2, scope: !12852)
!12858 = distinct !DISubprogram(name: "refcount_dec_and_test", scope: !320, file: !320, line: 331, type: !12859, scopeLine: 332, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12859 = !DISubroutineType(types: !12860)
!12860 = !{!370, !12714}
!12861 = !DILocalVariable(name: "r", arg: 1, scope: !12858, file: !320, line: 331, type: !12714)
!12862 = !DILocation(line: 331, column: 67, scope: !12858)
!12863 = !DILocation(line: 333, column: 33, scope: !12858)
!12864 = !DILocation(line: 333, column: 9, scope: !12858)
!12865 = !DILocation(line: 333, column: 2, scope: !12858)
!12866 = distinct !DISubprogram(name: "__refcount_dec_and_test", scope: !320, file: !320, line: 313, type: !12867, scopeLine: 314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12867 = !DISubroutineType(types: !12868)
!12868 = !{!370, !12714, !1011}
!12869 = !DILocalVariable(name: "r", arg: 1, scope: !12866, file: !320, line: 313, type: !12714)
!12870 = !DILocation(line: 313, column: 69, scope: !12866)
!12871 = !DILocalVariable(name: "oldp", arg: 2, scope: !12866, file: !320, line: 313, type: !1011)
!12872 = !DILocation(line: 313, column: 77, scope: !12866)
!12873 = !DILocation(line: 315, column: 36, scope: !12866)
!12874 = !DILocation(line: 315, column: 39, scope: !12866)
!12875 = !DILocation(line: 315, column: 9, scope: !12866)
!12876 = !DILocation(line: 315, column: 2, scope: !12866)
!12877 = distinct !DISubprogram(name: "__refcount_sub_and_test", scope: !320, file: !320, line: 270, type: !12878, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12878 = !DISubroutineType(types: !12879)
!12879 = !{!370, !115, !12714, !1011}
!12880 = !DILocalVariable(name: "i", arg: 1, scope: !12881, file: !12736, line: 188, type: !115)
!12881 = distinct !DISubprogram(name: "arch_atomic_fetch_sub", scope: !12736, file: !12736, line: 188, type: !12737, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12882 = !DILocation(line: 188, column: 54, scope: !12881, inlinedAt: !12883)
!12883 = distinct !DILocation(line: 221, column: 9, scope: !12884, inlinedAt: !12885)
!12884 = distinct !DISubprogram(name: "atomic_fetch_sub_release", scope: !12743, file: !12743, line: 218, type: !12737, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12885 = distinct !DILocation(line: 272, column: 12, scope: !12877)
!12886 = !DILocalVariable(name: "v", arg: 2, scope: !12881, file: !12736, line: 188, type: !12739)
!12887 = !DILocation(line: 188, column: 67, scope: !12881, inlinedAt: !12883)
!12888 = !DILocalVariable(name: "__ret", scope: !12889, file: !12736, line: 190, type: !115)
!12889 = distinct !DILexicalBlock(scope: !12881, file: !12736, line: 190, column: 9)
!12890 = !DILocation(line: 190, column: 9, scope: !12889, inlinedAt: !12883)
!12891 = !DILocation(line: 99, column: 79, scope: !12751, inlinedAt: !12892)
!12892 = distinct !DILocation(line: 220, column: 2, scope: !12884, inlinedAt: !12885)
!12893 = !DILocation(line: 99, column: 89, scope: !12751, inlinedAt: !12892)
!12894 = !DILocalVariable(name: "i", arg: 1, scope: !12884, file: !12743, line: 218, type: !115)
!12895 = !DILocation(line: 218, column: 30, scope: !12884, inlinedAt: !12885)
!12896 = !DILocalVariable(name: "v", arg: 2, scope: !12884, file: !12743, line: 218, type: !12739)
!12897 = !DILocation(line: 218, column: 43, scope: !12884, inlinedAt: !12885)
!12898 = !DILocalVariable(name: "i", arg: 1, scope: !12877, file: !320, line: 270, type: !115)
!12899 = !DILocation(line: 270, column: 61, scope: !12877)
!12900 = !DILocalVariable(name: "r", arg: 2, scope: !12877, file: !320, line: 270, type: !12714)
!12901 = !DILocation(line: 270, column: 76, scope: !12877)
!12902 = !DILocalVariable(name: "oldp", arg: 3, scope: !12877, file: !320, line: 270, type: !1011)
!12903 = !DILocation(line: 270, column: 84, scope: !12877)
!12904 = !DILocalVariable(name: "old", scope: !12877, file: !320, line: 272, type: !115)
!12905 = !DILocation(line: 272, column: 6, scope: !12877)
!12906 = !DILocation(line: 272, column: 37, scope: !12877)
!12907 = !DILocation(line: 272, column: 41, scope: !12877)
!12908 = !DILocation(line: 272, column: 44, scope: !12877)
!12909 = !DILocation(line: 220, column: 31, scope: !12884, inlinedAt: !12885)
!12910 = !DILocation(line: 101, column: 20, scope: !12751, inlinedAt: !12892)
!12911 = !DILocation(line: 101, column: 23, scope: !12751, inlinedAt: !12892)
!12912 = !DILocation(line: 101, column: 2, scope: !12751, inlinedAt: !12892)
!12913 = !DILocation(line: 102, column: 2, scope: !12751, inlinedAt: !12892)
!12914 = !DILocation(line: 221, column: 39, scope: !12884, inlinedAt: !12885)
!12915 = !DILocation(line: 221, column: 42, scope: !12884, inlinedAt: !12885)
!12916 = !{i32 -2146302928}
!12917 = !DILocation(line: 274, column: 6, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12877, file: !320, line: 274, column: 6)
!12919 = !DILocation(line: 274, column: 6, scope: !12877)
!12920 = !DILocation(line: 275, column: 11, scope: !12918)
!12921 = !DILocation(line: 275, column: 4, scope: !12918)
!12922 = !DILocation(line: 275, column: 9, scope: !12918)
!12923 = !DILocation(line: 275, column: 3, scope: !12918)
!12924 = !DILocation(line: 277, column: 6, scope: !12925)
!12925 = distinct !DILexicalBlock(scope: !12877, file: !320, line: 277, column: 6)
!12926 = !DILocation(line: 277, column: 13, scope: !12925)
!12927 = !DILocation(line: 277, column: 10, scope: !12925)
!12928 = !DILocation(line: 277, column: 6, scope: !12877)
!12929 = !DILocation(line: 278, column: 3, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12925, file: !320, line: 277, column: 16)
!12931 = !{i32 -2144167737}
!12932 = !DILocation(line: 279, column: 3, scope: !12930)
!12933 = !DILocation(line: 282, column: 6, scope: !12934)
!12934 = distinct !DILexicalBlock(scope: !12877, file: !320, line: 282, column: 6)
!12935 = !DILocation(line: 282, column: 6, scope: !12877)
!12936 = !DILocation(line: 283, column: 26, scope: !12934)
!12937 = !DILocation(line: 283, column: 3, scope: !12934)
!12938 = !DILocation(line: 285, column: 2, scope: !12877)
!12939 = !DILocation(line: 286, column: 1, scope: !12877)
!12940 = distinct !DISubprogram(name: "drm_dp_mst_put_mstb_malloc", scope: !3, file: !3, line: 1502, type: !9377, scopeLine: 1503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12941 = !DILocalVariable(name: "mstb", arg: 1, scope: !12940, file: !3, line: 1502, type: !391)
!12942 = !DILocation(line: 1502, column: 54, scope: !12940)
!12943 = !DILocation(line: 1504, column: 2, scope: !12940)
!12944 = !DILocation(line: 1505, column: 12, scope: !12940)
!12945 = !DILocation(line: 1505, column: 18, scope: !12940)
!12946 = !DILocation(line: 1505, column: 2, scope: !12940)
!12947 = !DILocation(line: 1506, column: 1, scope: !12940)
!12948 = distinct !DISubprogram(name: "drm_dp_free_mst_branch_device", scope: !3, file: !3, line: 1373, type: !4517, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12949 = !DILocalVariable(name: "kref", arg: 1, scope: !12948, file: !3, line: 1373, type: !4519)
!12950 = !DILocation(line: 1373, column: 56, scope: !12948)
!12951 = !DILocalVariable(name: "mstb", scope: !12948, file: !3, line: 1375, type: !391)
!12952 = !DILocation(line: 1375, column: 28, scope: !12948)
!12953 = !DILocalVariable(name: "__mptr", scope: !12954, file: !3, line: 1376, type: !344)
!12954 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 1376, column: 3)
!12955 = !DILocation(line: 1376, column: 3, scope: !12954)
!12956 = !DILocation(line: 1376, column: 3, scope: !12957)
!12957 = distinct !DILexicalBlock(scope: !12954, file: !3, line: 1376, column: 3)
!12958 = !DILocation(line: 1378, column: 6, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12948, file: !3, line: 1378, column: 6)
!12960 = !DILocation(line: 1378, column: 12, scope: !12959)
!12961 = !DILocation(line: 1378, column: 6, scope: !12948)
!12962 = !DILocation(line: 1379, column: 30, scope: !12959)
!12963 = !DILocation(line: 1379, column: 36, scope: !12959)
!12964 = !DILocation(line: 1379, column: 3, scope: !12959)
!12965 = !DILocation(line: 1381, column: 8, scope: !12948)
!12966 = !DILocation(line: 1381, column: 2, scope: !12948)
!12967 = !DILocation(line: 1382, column: 1, scope: !12948)
!12968 = distinct !DISubprogram(name: "drm_dp_mst_topology_get_port_validated_locked", scope: !3, file: !3, line: 1994, type: !12969, scopeLine: 1996, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!12969 = !DISubroutineType(types: !12970)
!12970 = !{!345, !391, !345}
!12971 = !DILocalVariable(name: "mstb", arg: 1, scope: !12968, file: !3, line: 1994, type: !391)
!12972 = !DILocation(line: 1994, column: 73, scope: !12968)
!12973 = !DILocalVariable(name: "to_find", arg: 2, scope: !12968, file: !3, line: 1995, type: !345)
!12974 = !DILocation(line: 1995, column: 36, scope: !12968)
!12975 = !DILocalVariable(name: "port", scope: !12968, file: !3, line: 1997, type: !345)
!12976 = !DILocation(line: 1997, column: 26, scope: !12968)
!12977 = !DILocalVariable(name: "mport", scope: !12968, file: !3, line: 1997, type: !345)
!12978 = !DILocation(line: 1997, column: 33, scope: !12968)
!12979 = !DILocalVariable(name: "__mptr", scope: !12980, file: !3, line: 1999, type: !344)
!12980 = distinct !DILexicalBlock(scope: !12981, file: !3, line: 1999, column: 2)
!12981 = distinct !DILexicalBlock(scope: !12968, file: !3, line: 1999, column: 2)
!12982 = !DILocation(line: 1999, column: 2, scope: !12980)
!12983 = !DILocation(line: 1999, column: 2, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12980, file: !3, line: 1999, column: 2)
!12985 = !DILocation(line: 1999, column: 2, scope: !12981)
!12986 = !DILocation(line: 1999, column: 2, scope: !12987)
!12987 = distinct !DILexicalBlock(scope: !12981, file: !3, line: 1999, column: 2)
!12988 = !DILocation(line: 2000, column: 7, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 2000, column: 7)
!12990 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 1999, column: 48)
!12991 = !DILocation(line: 2000, column: 15, scope: !12989)
!12992 = !DILocation(line: 2000, column: 12, scope: !12989)
!12993 = !DILocation(line: 2000, column: 7, scope: !12990)
!12994 = !DILocation(line: 2001, column: 11, scope: !12989)
!12995 = !DILocation(line: 2001, column: 4, scope: !12989)
!12996 = !DILocation(line: 2003, column: 7, scope: !12997)
!12997 = distinct !DILexicalBlock(scope: !12990, file: !3, line: 2003, column: 7)
!12998 = !DILocation(line: 2003, column: 13, scope: !12997)
!12999 = !DILocation(line: 2003, column: 7, scope: !12990)
!13000 = !DILocation(line: 2005, column: 8, scope: !13001)
!13001 = distinct !DILexicalBlock(scope: !12997, file: !3, line: 2003, column: 19)
!13002 = !DILocation(line: 2005, column: 14, scope: !13001)
!13003 = !DILocation(line: 2005, column: 20, scope: !13001)
!13004 = !DILocation(line: 2004, column: 12, scope: !13001)
!13005 = !DILocation(line: 2004, column: 10, scope: !13001)
!13006 = !DILocation(line: 2006, column: 8, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !13001, file: !3, line: 2006, column: 8)
!13008 = !DILocation(line: 2006, column: 8, scope: !13001)
!13009 = !DILocation(line: 2007, column: 12, scope: !13007)
!13010 = !DILocation(line: 2007, column: 5, scope: !13007)
!13011 = !DILocation(line: 2008, column: 3, scope: !13001)
!13012 = !DILocation(line: 2009, column: 2, scope: !12990)
!13013 = !DILocalVariable(name: "__mptr", scope: !13014, file: !3, line: 1999, type: !344)
!13014 = distinct !DILexicalBlock(scope: !12987, file: !3, line: 1999, column: 2)
!13015 = !DILocation(line: 1999, column: 2, scope: !13014)
!13016 = !DILocation(line: 1999, column: 2, scope: !13017)
!13017 = distinct !DILexicalBlock(scope: !13014, file: !3, line: 1999, column: 2)
!13018 = distinct !{!13018, !12985, !13019}
!13019 = !DILocation(line: 2009, column: 2, scope: !12981)
!13020 = !DILocation(line: 2010, column: 2, scope: !12968)
!13021 = !DILocation(line: 2011, column: 1, scope: !12968)
!13022 = distinct !DISubprogram(name: "drm_dp_mst_topology_try_get_port", scope: !3, file: !3, line: 1890, type: !13023, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13023 = !DISubroutineType(types: !13024)
!13024 = !{!115, !345}
!13025 = !DILocalVariable(name: "port", arg: 1, scope: !13022, file: !3, line: 1890, type: !345)
!13026 = !DILocation(line: 1890, column: 58, scope: !13022)
!13027 = !DILocalVariable(name: "ret", scope: !13022, file: !3, line: 1892, type: !115)
!13028 = !DILocation(line: 1892, column: 6, scope: !13022)
!13029 = !DILocation(line: 1894, column: 28, scope: !13022)
!13030 = !DILocation(line: 1894, column: 34, scope: !13022)
!13031 = !DILocation(line: 1894, column: 2, scope: !13022)
!13032 = !DILocation(line: 1895, column: 30, scope: !13022)
!13033 = !DILocation(line: 1895, column: 36, scope: !13022)
!13034 = !DILocation(line: 1895, column: 8, scope: !13022)
!13035 = !DILocation(line: 1895, column: 6, scope: !13022)
!13036 = !DILocation(line: 1896, column: 6, scope: !13037)
!13037 = distinct !DILexicalBlock(scope: !13022, file: !3, line: 1896, column: 6)
!13038 = !DILocation(line: 1896, column: 6, scope: !13022)
!13039 = !DILocation(line: 1897, column: 3, scope: !13040)
!13040 = distinct !DILexicalBlock(scope: !13037, file: !3, line: 1896, column: 11)
!13041 = !DILocation(line: 1900, column: 2, scope: !13040)
!13042 = !DILocation(line: 1902, column: 30, scope: !13022)
!13043 = !DILocation(line: 1902, column: 36, scope: !13022)
!13044 = !DILocation(line: 1902, column: 2, scope: !13022)
!13045 = !DILocation(line: 1903, column: 9, scope: !13022)
!13046 = !DILocation(line: 1903, column: 2, scope: !13022)
!13047 = distinct !DISubprogram(name: "topology_ref_history_lock", scope: !3, file: !3, line: 1719, type: !5724, scopeLine: 1719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13048 = !DILocalVariable(name: "mgr", arg: 1, scope: !13047, file: !3, line: 1719, type: !406)
!13049 = !DILocation(line: 1719, column: 59, scope: !13047)
!13050 = !DILocation(line: 1719, column: 65, scope: !13047)
!13051 = distinct !DISubprogram(name: "kref_get_unless_zero", scope: !351, file: !351, line: 109, type: !13052, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13052 = !DISubroutineType(types: !13053)
!13053 = !{!115, !4519}
!13054 = !DILocalVariable(name: "kref", arg: 1, scope: !13051, file: !351, line: 109, type: !4519)
!13055 = !DILocation(line: 109, column: 66, scope: !13051)
!13056 = !DILocation(line: 111, column: 32, scope: !13051)
!13057 = !DILocation(line: 111, column: 38, scope: !13051)
!13058 = !DILocation(line: 111, column: 9, scope: !13051)
!13059 = !DILocation(line: 111, column: 2, scope: !13051)
!13060 = distinct !DISubprogram(name: "topology_ref_history_unlock", scope: !3, file: !3, line: 1721, type: !5724, scopeLine: 1721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13061 = !DILocalVariable(name: "mgr", arg: 1, scope: !13060, file: !3, line: 1721, type: !406)
!13062 = !DILocation(line: 1721, column: 61, scope: !13060)
!13063 = !DILocation(line: 1721, column: 67, scope: !13060)
!13064 = distinct !DISubprogram(name: "refcount_inc_not_zero", scope: !320, file: !320, line: 243, type: !12859, scopeLine: 244, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13065 = !DILocalVariable(name: "r", arg: 1, scope: !13064, file: !320, line: 243, type: !12714)
!13066 = !DILocation(line: 243, column: 67, scope: !13064)
!13067 = !DILocation(line: 245, column: 33, scope: !13064)
!13068 = !DILocation(line: 245, column: 9, scope: !13064)
!13069 = !DILocation(line: 245, column: 2, scope: !13064)
!13070 = distinct !DISubprogram(name: "__refcount_inc_not_zero", scope: !320, file: !320, line: 225, type: !12867, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13071 = !DILocalVariable(name: "r", arg: 1, scope: !13070, file: !320, line: 225, type: !12714)
!13072 = !DILocation(line: 225, column: 69, scope: !13070)
!13073 = !DILocalVariable(name: "oldp", arg: 2, scope: !13070, file: !320, line: 225, type: !1011)
!13074 = !DILocation(line: 225, column: 77, scope: !13070)
!13075 = !DILocation(line: 227, column: 36, scope: !13070)
!13076 = !DILocation(line: 227, column: 39, scope: !13070)
!13077 = !DILocation(line: 227, column: 9, scope: !13070)
!13078 = !DILocation(line: 227, column: 2, scope: !13070)
!13079 = distinct !DISubprogram(name: "__refcount_add_not_zero", scope: !320, file: !320, line: 150, type: !12878, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13080 = !DILocalVariable(name: "v", arg: 1, scope: !13081, file: !12736, line: 200, type: !12739)
!13081 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !12736, file: !12736, line: 200, type: !13082, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13082 = !DISubroutineType(types: !13083)
!13083 = !{!370, !12739, !1011, !115}
!13084 = !DILocation(line: 200, column: 63, scope: !13081, inlinedAt: !13085)
!13085 = distinct !DILocation(line: 729, column: 9, scope: !13086, inlinedAt: !13087)
!13086 = distinct !DISubprogram(name: "atomic_try_cmpxchg_relaxed", scope: !12743, file: !12743, line: 725, type: !13082, scopeLine: 726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13087 = distinct !DILocation(line: 157, column: 12, scope: !13079)
!13088 = !DILocalVariable(name: "old", arg: 2, scope: !13081, file: !12736, line: 200, type: !1011)
!13089 = !DILocation(line: 200, column: 71, scope: !13081, inlinedAt: !13085)
!13090 = !DILocalVariable(name: "new", arg: 3, scope: !13081, file: !12736, line: 200, type: !115)
!13091 = !DILocation(line: 200, column: 80, scope: !13081, inlinedAt: !13085)
!13092 = !DILocalVariable(name: "success", scope: !13093, file: !12736, line: 202, type: !370)
!13093 = distinct !DILexicalBlock(scope: !13081, file: !12736, line: 202, column: 9)
!13094 = !DILocation(line: 202, column: 9, scope: !13093, inlinedAt: !13085)
!13095 = !DILocalVariable(name: "_old", scope: !13093, file: !12736, line: 202, type: !1011)
!13096 = !DILocalVariable(name: "__old", scope: !13093, file: !12736, line: 202, type: !115)
!13097 = !DILocalVariable(name: "__new", scope: !13093, file: !12736, line: 202, type: !115)
!13098 = !DILocalVariable(name: "__ptr", scope: !13093, file: !12736, line: 202, type: !5997)
!13099 = !DILocation(line: 99, column: 79, scope: !12751, inlinedAt: !13100)
!13100 = distinct !DILocation(line: 728, column: 2, scope: !13086, inlinedAt: !13087)
!13101 = !DILocation(line: 99, column: 89, scope: !12751, inlinedAt: !13100)
!13102 = !DILocation(line: 99, column: 79, scope: !12751, inlinedAt: !13103)
!13103 = distinct !DILocation(line: 727, column: 2, scope: !13086, inlinedAt: !13087)
!13104 = !DILocation(line: 99, column: 89, scope: !12751, inlinedAt: !13103)
!13105 = !DILocalVariable(name: "v", arg: 1, scope: !13086, file: !12743, line: 725, type: !12739)
!13106 = !DILocation(line: 725, column: 38, scope: !13086, inlinedAt: !13087)
!13107 = !DILocalVariable(name: "old", arg: 2, scope: !13086, file: !12743, line: 725, type: !1011)
!13108 = !DILocation(line: 725, column: 46, scope: !13086, inlinedAt: !13087)
!13109 = !DILocalVariable(name: "new", arg: 3, scope: !13086, file: !12743, line: 725, type: !115)
!13110 = !DILocation(line: 725, column: 55, scope: !13086, inlinedAt: !13087)
!13111 = !DILocalVariable(name: "i", arg: 1, scope: !13079, file: !320, line: 150, type: !115)
!13112 = !DILocation(line: 150, column: 61, scope: !13079)
!13113 = !DILocalVariable(name: "r", arg: 2, scope: !13079, file: !320, line: 150, type: !12714)
!13114 = !DILocation(line: 150, column: 76, scope: !13079)
!13115 = !DILocalVariable(name: "oldp", arg: 3, scope: !13079, file: !320, line: 150, type: !1011)
!13116 = !DILocation(line: 150, column: 84, scope: !13079)
!13117 = !DILocalVariable(name: "old", scope: !13079, file: !320, line: 152, type: !115)
!13118 = !DILocation(line: 152, column: 6, scope: !13079)
!13119 = !DILocation(line: 152, column: 26, scope: !13079)
!13120 = !DILocation(line: 152, column: 12, scope: !13079)
!13121 = !DILocation(line: 154, column: 2, scope: !13079)
!13122 = !DILocation(line: 155, column: 8, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13124, file: !320, line: 155, column: 7)
!13124 = distinct !DILexicalBlock(scope: !13079, file: !320, line: 154, column: 5)
!13125 = !DILocation(line: 155, column: 7, scope: !13124)
!13126 = !DILocation(line: 156, column: 4, scope: !13123)
!13127 = !DILocation(line: 157, column: 2, scope: !13124)
!13128 = !DILocation(line: 157, column: 40, scope: !13079)
!13129 = !DILocation(line: 157, column: 43, scope: !13079)
!13130 = !DILocation(line: 157, column: 55, scope: !13079)
!13131 = !DILocation(line: 157, column: 61, scope: !13079)
!13132 = !DILocation(line: 157, column: 59, scope: !13079)
!13133 = !DILocation(line: 727, column: 31, scope: !13086, inlinedAt: !13087)
!13134 = !DILocation(line: 101, column: 20, scope: !12751, inlinedAt: !13103)
!13135 = !DILocation(line: 101, column: 23, scope: !12751, inlinedAt: !13103)
!13136 = !DILocation(line: 101, column: 2, scope: !12751, inlinedAt: !13103)
!13137 = !DILocation(line: 102, column: 2, scope: !12751, inlinedAt: !13103)
!13138 = !DILocation(line: 728, column: 31, scope: !13086, inlinedAt: !13087)
!13139 = !DILocation(line: 101, column: 20, scope: !12751, inlinedAt: !13100)
!13140 = !DILocation(line: 101, column: 23, scope: !12751, inlinedAt: !13100)
!13141 = !DILocation(line: 101, column: 2, scope: !12751, inlinedAt: !13100)
!13142 = !DILocation(line: 102, column: 2, scope: !12751, inlinedAt: !13100)
!13143 = !DILocation(line: 729, column: 41, scope: !13086, inlinedAt: !13087)
!13144 = !DILocation(line: 729, column: 44, scope: !13086, inlinedAt: !13087)
!13145 = !DILocation(line: 729, column: 49, scope: !13086, inlinedAt: !13087)
!13146 = !{i32 -2146298615, i32 -2146298460}
!13147 = !DILocation(line: 202, column: 9, scope: !13148, inlinedAt: !13085)
!13148 = distinct !DILexicalBlock(scope: !13093, file: !12736, line: 202, column: 9)
!13149 = !DILocation(line: 202, column: 9, scope: !13081, inlinedAt: !13085)
!13150 = !DILocation(line: 157, column: 11, scope: !13079)
!13151 = distinct !{!13151, !13121, !13152}
!13152 = !DILocation(line: 157, column: 63, scope: !13079)
!13153 = !DILocation(line: 159, column: 6, scope: !13154)
!13154 = distinct !DILexicalBlock(scope: !13079, file: !320, line: 159, column: 6)
!13155 = !DILocation(line: 159, column: 6, scope: !13079)
!13156 = !DILocation(line: 160, column: 11, scope: !13154)
!13157 = !DILocation(line: 160, column: 4, scope: !13154)
!13158 = !DILocation(line: 160, column: 9, scope: !13154)
!13159 = !DILocation(line: 160, column: 3, scope: !13154)
!13160 = !DILocation(line: 162, column: 6, scope: !13161)
!13161 = distinct !DILexicalBlock(scope: !13079, file: !320, line: 162, column: 6)
!13162 = !DILocation(line: 162, column: 6, scope: !13079)
!13163 = !DILocation(line: 163, column: 26, scope: !13161)
!13164 = !DILocation(line: 163, column: 3, scope: !13161)
!13165 = !DILocation(line: 165, column: 9, scope: !13079)
!13166 = !DILocation(line: 165, column: 2, scope: !13079)
!13167 = distinct !DISubprogram(name: "get_order", scope: !13168, file: !13168, line: 29, type: !13169, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13168 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!13169 = !DISubroutineType(types: !13170)
!13170 = !{!115, !341}
!13171 = !DILocalVariable(name: "x", arg: 1, scope: !13172, file: !8884, line: 366, type: !505)
!13172 = distinct !DISubprogram(name: "fls64", scope: !8884, file: !8884, line: 366, type: !13173, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13173 = !DISubroutineType(types: !13174)
!13174 = !{!115, !505}
!13175 = !DILocation(line: 366, column: 40, scope: !13172, inlinedAt: !13176)
!13176 = distinct !DILocation(line: 46, column: 9, scope: !13167)
!13177 = !DILocalVariable(name: "bitpos", scope: !13172, file: !8884, line: 368, type: !115)
!13178 = !DILocation(line: 368, column: 6, scope: !13172, inlinedAt: !13176)
!13179 = !DILocalVariable(name: "size", arg: 1, scope: !13167, file: !13168, line: 29, type: !341)
!13180 = !DILocation(line: 29, column: 63, scope: !13167)
!13181 = !DILocation(line: 31, column: 27, scope: !13182)
!13182 = distinct !DILexicalBlock(scope: !13167, file: !13168, line: 31, column: 6)
!13183 = !DILocation(line: 31, column: 6, scope: !13182)
!13184 = !DILocation(line: 31, column: 6, scope: !13167)
!13185 = !DILocation(line: 32, column: 8, scope: !13186)
!13186 = distinct !DILexicalBlock(scope: !13187, file: !13168, line: 32, column: 7)
!13187 = distinct !DILexicalBlock(scope: !13182, file: !13168, line: 31, column: 34)
!13188 = !DILocation(line: 32, column: 7, scope: !13187)
!13189 = !DILocation(line: 33, column: 4, scope: !13186)
!13190 = !DILocation(line: 35, column: 7, scope: !13191)
!13191 = distinct !DILexicalBlock(scope: !13187, file: !13168, line: 35, column: 7)
!13192 = !DILocation(line: 35, column: 12, scope: !13191)
!13193 = !DILocation(line: 35, column: 7, scope: !13187)
!13194 = !DILocation(line: 36, column: 4, scope: !13191)
!13195 = !DILocation(line: 38, column: 10, scope: !13187)
!13196 = !DILocation(line: 38, column: 28, scope: !13187)
!13197 = !DILocation(line: 38, column: 41, scope: !13187)
!13198 = !DILocation(line: 38, column: 3, scope: !13187)
!13199 = !DILocation(line: 41, column: 6, scope: !13167)
!13200 = !DILocation(line: 42, column: 7, scope: !13167)
!13201 = !DILocation(line: 46, column: 15, scope: !13167)
!13202 = !DILocation(line: 374, column: 2, scope: !13172, inlinedAt: !13176)
!13203 = !DILocation(line: 376, column: 14, scope: !13172, inlinedAt: !13176)
!13204 = !{i32 485718}
!13205 = !DILocation(line: 377, column: 9, scope: !13172, inlinedAt: !13176)
!13206 = !DILocation(line: 377, column: 16, scope: !13172, inlinedAt: !13176)
!13207 = !DILocation(line: 46, column: 2, scope: !13167)
!13208 = !DILocation(line: 48, column: 1, scope: !13167)
!13209 = distinct !DISubprogram(name: "__ilog2_u64", scope: !13210, file: !13210, line: 30, type: !13211, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13210 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!13211 = !DISubroutineType(types: !13212)
!13212 = !{!115, !504}
!13213 = !DILocation(line: 366, column: 40, scope: !13172, inlinedAt: !13214)
!13214 = distinct !DILocation(line: 32, column: 9, scope: !13209)
!13215 = !DILocation(line: 368, column: 6, scope: !13172, inlinedAt: !13214)
!13216 = !DILocalVariable(name: "n", arg: 1, scope: !13209, file: !13210, line: 30, type: !504)
!13217 = !DILocation(line: 30, column: 21, scope: !13209)
!13218 = !DILocation(line: 32, column: 15, scope: !13209)
!13219 = !DILocation(line: 374, column: 2, scope: !13172, inlinedAt: !13214)
!13220 = !DILocation(line: 376, column: 14, scope: !13172, inlinedAt: !13214)
!13221 = !DILocation(line: 377, column: 9, scope: !13172, inlinedAt: !13214)
!13222 = !DILocation(line: 377, column: 16, scope: !13172, inlinedAt: !13214)
!13223 = !DILocation(line: 32, column: 18, scope: !13209)
!13224 = !DILocation(line: 32, column: 2, scope: !13209)
!13225 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !13226, file: !13226, line: 137, type: !13227, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13226 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!13227 = !DISubroutineType(types: !13228)
!13228 = !{!344, !1397, !3176, !1023, !342}
!13229 = !DILocalVariable(name: "s", arg: 1, scope: !13225, file: !13226, line: 137, type: !1397)
!13230 = !DILocation(line: 137, column: 54, scope: !13225)
!13231 = !DILocalVariable(name: "object", arg: 2, scope: !13225, file: !13226, line: 137, type: !3176)
!13232 = !DILocation(line: 137, column: 69, scope: !13225)
!13233 = !DILocalVariable(name: "size", arg: 3, scope: !13225, file: !13226, line: 138, type: !1023)
!13234 = !DILocation(line: 138, column: 12, scope: !13225)
!13235 = !DILocalVariable(name: "flags", arg: 4, scope: !13225, file: !13226, line: 138, type: !342)
!13236 = !DILocation(line: 138, column: 24, scope: !13225)
!13237 = !DILocation(line: 140, column: 17, scope: !13225)
!13238 = !DILocation(line: 140, column: 2, scope: !13225)
!13239 = distinct !DISubprogram(name: "drm_dp_destroy_port", scope: !3, file: !3, line: 1841, type: !4517, scopeLine: 1842, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13240 = !DILocalVariable(name: "kref", arg: 1, scope: !13239, file: !3, line: 1841, type: !4519)
!13241 = !DILocation(line: 1841, column: 46, scope: !13239)
!13242 = !DILocalVariable(name: "port", scope: !13239, file: !3, line: 1843, type: !345)
!13243 = !DILocation(line: 1843, column: 26, scope: !13239)
!13244 = !DILocalVariable(name: "__mptr", scope: !13245, file: !3, line: 1844, type: !344)
!13245 = distinct !DILexicalBlock(scope: !13239, file: !3, line: 1844, column: 3)
!13246 = !DILocation(line: 1844, column: 3, scope: !13245)
!13247 = !DILocation(line: 1844, column: 3, scope: !13248)
!13248 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 1844, column: 3)
!13249 = !DILocalVariable(name: "mgr", scope: !13239, file: !3, line: 1845, type: !406)
!13250 = !DILocation(line: 1845, column: 34, scope: !13239)
!13251 = !DILocation(line: 1845, column: 40, scope: !13239)
!13252 = !DILocation(line: 1845, column: 46, scope: !13239)
!13253 = !DILocation(line: 1847, column: 40, scope: !13239)
!13254 = !DILocation(line: 1847, column: 2, scope: !13239)
!13255 = !DILocation(line: 1850, column: 6, scope: !13256)
!13256 = distinct !DILexicalBlock(scope: !13239, file: !3, line: 1850, column: 6)
!13257 = !DILocation(line: 1850, column: 12, scope: !13256)
!13258 = !DILocation(line: 1850, column: 6, scope: !13239)
!13259 = !DILocation(line: 1851, column: 30, scope: !13260)
!13260 = distinct !DILexicalBlock(scope: !13256, file: !3, line: 1850, column: 19)
!13261 = !DILocation(line: 1851, column: 3, scope: !13260)
!13262 = !DILocation(line: 1852, column: 3, scope: !13260)
!13263 = !DILocation(line: 1855, column: 8, scope: !13239)
!13264 = !DILocation(line: 1855, column: 14, scope: !13239)
!13265 = !DILocation(line: 1855, column: 2, scope: !13239)
!13266 = !DILocation(line: 1861, column: 14, scope: !13239)
!13267 = !DILocation(line: 1861, column: 19, scope: !13239)
!13268 = !DILocation(line: 1861, column: 2, scope: !13239)
!13269 = !DILocation(line: 1862, column: 12, scope: !13239)
!13270 = !DILocation(line: 1862, column: 18, scope: !13239)
!13271 = !DILocation(line: 1862, column: 25, scope: !13239)
!13272 = !DILocation(line: 1862, column: 30, scope: !13239)
!13273 = !DILocation(line: 1862, column: 2, scope: !13239)
!13274 = !DILocation(line: 1863, column: 16, scope: !13239)
!13275 = !DILocation(line: 1863, column: 21, scope: !13239)
!13276 = !DILocation(line: 1863, column: 2, scope: !13239)
!13277 = !DILocation(line: 1864, column: 13, scope: !13239)
!13278 = !DILocation(line: 1864, column: 18, scope: !13239)
!13279 = !DILocation(line: 1864, column: 39, scope: !13239)
!13280 = !DILocation(line: 1864, column: 44, scope: !13239)
!13281 = !DILocation(line: 1864, column: 2, scope: !13239)
!13282 = !DILocation(line: 1865, column: 1, scope: !13239)
!13283 = distinct !DISubprogram(name: "drm_dp_mst_dump_port_topology_history", scope: !3, file: !3, line: 1725, type: !7423, scopeLine: 1725, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13284 = !DILocalVariable(name: "port", arg: 1, scope: !13283, file: !3, line: 1725, type: !345)
!13285 = !DILocation(line: 1725, column: 63, scope: !13283)
!13286 = !DILocation(line: 1725, column: 70, scope: !13283)
!13287 = distinct !DISubprogram(name: "list_add_tail", scope: !10346, file: !10346, line: 98, type: !10347, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13288 = !DILocalVariable(name: "new", arg: 1, scope: !13287, file: !10346, line: 98, type: !388)
!13289 = !DILocation(line: 98, column: 52, scope: !13287)
!13290 = !DILocalVariable(name: "head", arg: 2, scope: !13287, file: !10346, line: 98, type: !388)
!13291 = !DILocation(line: 98, column: 75, scope: !13287)
!13292 = !DILocation(line: 100, column: 13, scope: !13287)
!13293 = !DILocation(line: 100, column: 18, scope: !13287)
!13294 = !DILocation(line: 100, column: 24, scope: !13287)
!13295 = !DILocation(line: 100, column: 30, scope: !13287)
!13296 = !DILocation(line: 100, column: 2, scope: !13287)
!13297 = !DILocation(line: 101, column: 1, scope: !13287)
!13298 = distinct !DISubprogram(name: "drm_debug_enabled", scope: !249, file: !249, line: 322, type: !13299, scopeLine: 323, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13299 = !DISubroutineType(types: !13300)
!13300 = !{!370, !248}
!13301 = !DILocalVariable(name: "category", arg: 1, scope: !13298, file: !249, line: 322, type: !248)
!13302 = !DILocation(line: 322, column: 62, scope: !13298)
!13303 = !DILocation(line: 324, column: 9, scope: !13298)
!13304 = !DILocation(line: 324, column: 2, scope: !13298)
!13305 = distinct !DISubprogram(name: "drm_debug_printer", scope: !249, file: !249, line: 227, type: !13306, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13306 = !DISubroutineType(types: !13307)
!13307 = !{!5122, !844}
!13308 = !DILocalVariable(name: "prefix", arg: 1, scope: !13305, file: !249, line: 227, type: !844)
!13309 = !DILocation(line: 227, column: 64, scope: !13305)
!13310 = !DILocalVariable(name: "p", scope: !13305, file: !249, line: 229, type: !5122)
!13311 = !DILocation(line: 229, column: 21, scope: !13305)
!13312 = !DILocation(line: 229, column: 25, scope: !13305)
!13313 = !DILocation(line: 231, column: 13, scope: !13305)
!13314 = !DILocation(line: 233, column: 2, scope: !13305)
!13315 = distinct !DISubprogram(name: "drm_dp_mst_dump_sideband_msg_tx", scope: !3, file: !3, line: 683, type: !13316, scopeLine: 685, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13316 = !DISubroutineType(types: !13317)
!13317 = !{null, !5121, !6804}
!13318 = !DILocalVariable(name: "p", arg: 1, scope: !13315, file: !3, line: 683, type: !5121)
!13319 = !DILocation(line: 683, column: 53, scope: !13315)
!13320 = !DILocalVariable(name: "txmsg", arg: 2, scope: !13315, file: !3, line: 684, type: !6804)
!13321 = !DILocation(line: 684, column: 42, scope: !13315)
!13322 = !DILocalVariable(name: "req", scope: !13315, file: !3, line: 686, type: !6128)
!13323 = !DILocation(line: 686, column: 38, scope: !13315)
!13324 = !DILocalVariable(name: "buf", scope: !13315, file: !3, line: 687, type: !13325)
!13325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 512, elements: !2943)
!13326 = !DILocation(line: 687, column: 7, scope: !13315)
!13327 = !DILocalVariable(name: "ret", scope: !13315, file: !3, line: 688, type: !115)
!13328 = !DILocation(line: 688, column: 6, scope: !13315)
!13329 = !DILocalVariable(name: "i", scope: !13315, file: !3, line: 689, type: !115)
!13330 = !DILocation(line: 689, column: 6, scope: !13315)
!13331 = !DILocation(line: 691, column: 24, scope: !13315)
!13332 = !DILocation(line: 691, column: 31, scope: !13315)
!13333 = !DILocation(line: 691, column: 36, scope: !13315)
!13334 = !DILocation(line: 691, column: 41, scope: !13315)
!13335 = !DILocation(line: 691, column: 48, scope: !13315)
!13336 = !DILocation(line: 691, column: 53, scope: !13315)
!13337 = !DILocation(line: 691, column: 58, scope: !13315)
!13338 = !DILocation(line: 691, column: 2, scope: !13315)
!13339 = !DILocation(line: 693, column: 13, scope: !13315)
!13340 = !DILocation(line: 694, column: 6, scope: !13315)
!13341 = !DILocation(line: 694, column: 13, scope: !13315)
!13342 = !DILocation(line: 694, column: 25, scope: !13315)
!13343 = !DILocation(line: 694, column: 32, scope: !13315)
!13344 = !DILocation(line: 694, column: 41, scope: !13315)
!13345 = !DILocation(line: 694, column: 48, scope: !13315)
!13346 = !DILocation(line: 695, column: 39, scope: !13315)
!13347 = !DILocation(line: 695, column: 46, scope: !13315)
!13348 = !DILocation(line: 695, column: 6, scope: !13315)
!13349 = !DILocation(line: 696, column: 6, scope: !13315)
!13350 = !DILocation(line: 696, column: 13, scope: !13315)
!13351 = !DILocation(line: 696, column: 23, scope: !13315)
!13352 = !DILocation(line: 693, column: 2, scope: !13315)
!13353 = !DILocation(line: 698, column: 35, scope: !13315)
!13354 = !DILocation(line: 698, column: 8, scope: !13315)
!13355 = !DILocation(line: 698, column: 6, scope: !13315)
!13356 = !DILocation(line: 699, column: 6, scope: !13357)
!13357 = distinct !DILexicalBlock(scope: !13315, file: !3, line: 699, column: 6)
!13358 = !DILocation(line: 699, column: 6, scope: !13315)
!13359 = !DILocation(line: 700, column: 14, scope: !13360)
!13360 = distinct !DILexicalBlock(scope: !13357, file: !3, line: 699, column: 11)
!13361 = !DILocation(line: 700, column: 58, scope: !13360)
!13362 = !DILocation(line: 700, column: 3, scope: !13360)
!13363 = !DILocation(line: 701, column: 3, scope: !13360)
!13364 = !DILocation(line: 703, column: 45, scope: !13315)
!13365 = !DILocation(line: 703, column: 2, scope: !13315)
!13366 = !DILocation(line: 705, column: 14, scope: !13315)
!13367 = !DILocation(line: 705, column: 10, scope: !13315)
!13368 = !DILocation(line: 705, column: 2, scope: !13315)
!13369 = !DILocation(line: 707, column: 13, scope: !13370)
!13370 = distinct !DILexicalBlock(scope: !13315, file: !3, line: 705, column: 24)
!13371 = !DILocation(line: 707, column: 15, scope: !13370)
!13372 = !DILocation(line: 707, column: 26, scope: !13370)
!13373 = !DILocation(line: 707, column: 3, scope: !13370)
!13374 = !DILocation(line: 708, column: 3, scope: !13370)
!13375 = !DILocation(line: 710, column: 10, scope: !13376)
!13376 = distinct !DILexicalBlock(scope: !13370, file: !3, line: 710, column: 3)
!13377 = !DILocation(line: 710, column: 8, scope: !13376)
!13378 = !DILocation(line: 710, column: 15, scope: !13379)
!13379 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 710, column: 3)
!13380 = !DILocation(line: 710, column: 23, scope: !13379)
!13381 = !DILocation(line: 710, column: 25, scope: !13379)
!13382 = !DILocation(line: 710, column: 34, scope: !13379)
!13383 = !DILocation(line: 710, column: 19, scope: !13379)
!13384 = !DILocation(line: 710, column: 17, scope: !13379)
!13385 = !DILocation(line: 710, column: 3, scope: !13376)
!13386 = !DILocation(line: 711, column: 14, scope: !13379)
!13387 = !DILocation(line: 711, column: 16, scope: !13379)
!13388 = !DILocation(line: 711, column: 25, scope: !13379)
!13389 = !DILocation(line: 711, column: 38, scope: !13379)
!13390 = !DILocation(line: 711, column: 10, scope: !13379)
!13391 = !DILocation(line: 711, column: 41, scope: !13379)
!13392 = !DILocation(line: 711, column: 4, scope: !13379)
!13393 = !DILocation(line: 710, column: 53, scope: !13379)
!13394 = !DILocation(line: 710, column: 3, scope: !13379)
!13395 = distinct !{!13395, !13385, !13396}
!13396 = !DILocation(line: 711, column: 46, scope: !13376)
!13397 = !DILocation(line: 712, column: 3, scope: !13370)
!13398 = !DILocation(line: 714, column: 13, scope: !13370)
!13399 = !DILocation(line: 714, column: 15, scope: !13370)
!13400 = !DILocation(line: 714, column: 25, scope: !13370)
!13401 = !DILocation(line: 714, column: 3, scope: !13370)
!13402 = !DILocation(line: 715, column: 3, scope: !13370)
!13403 = !DILocation(line: 717, column: 1, scope: !13315)
!13404 = distinct !DISubprogram(name: "list_is_singular", scope: !10346, file: !10346, line: 358, type: !13405, scopeLine: 359, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13405 = !DISubroutineType(types: !13406)
!13406 = !{!115, !13407}
!13407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13408, size: 64)
!13408 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !385)
!13409 = !DILocalVariable(name: "head", arg: 1, scope: !13404, file: !10346, line: 358, type: !13407)
!13410 = !DILocation(line: 358, column: 60, scope: !13404)
!13411 = !DILocation(line: 360, column: 21, scope: !13404)
!13412 = !DILocation(line: 360, column: 10, scope: !13404)
!13413 = !DILocation(line: 360, column: 27, scope: !13404)
!13414 = !DILocation(line: 360, column: 31, scope: !13404)
!13415 = !DILocation(line: 360, column: 37, scope: !13404)
!13416 = !DILocation(line: 360, column: 45, scope: !13404)
!13417 = !DILocation(line: 360, column: 51, scope: !13404)
!13418 = !DILocation(line: 360, column: 42, scope: !13404)
!13419 = !DILocation(line: 0, scope: !13404)
!13420 = !DILocation(line: 360, column: 2, scope: !13404)
!13421 = distinct !DISubprogram(name: "process_single_down_tx_qlock", scope: !3, file: !3, line: 2900, type: !5724, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13422 = !DILocalVariable(name: "mgr", arg: 1, scope: !13421, file: !3, line: 2900, type: !406)
!13423 = !DILocation(line: 2900, column: 74, scope: !13421)
!13424 = !DILocalVariable(name: "txmsg", scope: !13421, file: !3, line: 2902, type: !6003)
!13425 = !DILocation(line: 2902, column: 33, scope: !13421)
!13426 = !DILocalVariable(name: "ret", scope: !13421, file: !3, line: 2903, type: !115)
!13427 = !DILocation(line: 2903, column: 6, scope: !13421)
!13428 = !DILocalVariable(name: "__ret_warn_on", scope: !13429, file: !3, line: 2905, type: !115)
!13429 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 2905, column: 2)
!13430 = !DILocation(line: 2905, column: 2, scope: !13429)
!13431 = !DILocation(line: 2905, column: 2, scope: !13432)
!13432 = distinct !DILexicalBlock(scope: !13429, file: !3, line: 2905, column: 2)
!13433 = !DILocation(line: 2905, column: 2, scope: !13434)
!13434 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 2905, column: 2)
!13435 = !DILocation(line: 2905, column: 2, scope: !13436)
!13436 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 2905, column: 2)
!13437 = !DILocation(line: 2905, column: 2, scope: !13438)
!13438 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 2905, column: 2)
!13439 = !{i32 -2140021140, i32 -2140021111, i32 -2140021065, i32 -2140021007, i32 -2140020953, i32 -2140020899, i32 -2140020844, i32 -2140020813}
!13440 = !DILocation(line: 2905, column: 2, scope: !13441)
!13441 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 2905, column: 2)
!13442 = !{i32 -2140020393, i32 -2140020386, i32 -2140020334, i32 -2140020303, i32 -2140020273}
!13443 = !DILocation(line: 2905, column: 2, scope: !13444)
!13444 = distinct !DILexicalBlock(scope: !13434, file: !3, line: 2905, column: 2)
!13445 = !DILocation(line: 2908, column: 18, scope: !13446)
!13446 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 2908, column: 6)
!13447 = !DILocation(line: 2908, column: 23, scope: !13446)
!13448 = !DILocation(line: 2908, column: 6, scope: !13446)
!13449 = !DILocation(line: 2908, column: 6, scope: !13421)
!13450 = !DILocation(line: 2909, column: 3, scope: !13446)
!13451 = !DILocalVariable(name: "__mptr", scope: !13452, file: !3, line: 2911, type: !344)
!13452 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 2911, column: 10)
!13453 = !DILocation(line: 2911, column: 10, scope: !13452)
!13454 = !DILocation(line: 2911, column: 10, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13452, file: !3, line: 2911, column: 10)
!13456 = !DILocation(line: 2911, column: 8, scope: !13421)
!13457 = !DILocation(line: 2913, column: 32, scope: !13421)
!13458 = !DILocation(line: 2913, column: 37, scope: !13421)
!13459 = !DILocation(line: 2913, column: 8, scope: !13421)
!13460 = !DILocation(line: 2913, column: 6, scope: !13421)
!13461 = !DILocation(line: 2914, column: 6, scope: !13462)
!13462 = distinct !DILexicalBlock(scope: !13421, file: !3, line: 2914, column: 6)
!13463 = !DILocation(line: 2914, column: 10, scope: !13462)
!13464 = !DILocation(line: 2914, column: 6, scope: !13421)
!13465 = !DILocation(line: 2915, column: 3, scope: !13466)
!13466 = distinct !DILexicalBlock(scope: !13462, file: !3, line: 2914, column: 15)
!13467 = !DILocation(line: 2916, column: 13, scope: !13466)
!13468 = !DILocation(line: 2916, column: 20, scope: !13466)
!13469 = !DILocation(line: 2916, column: 3, scope: !13466)
!13470 = !DILocation(line: 2917, column: 3, scope: !13466)
!13471 = !DILocation(line: 2917, column: 10, scope: !13466)
!13472 = !DILocation(line: 2917, column: 16, scope: !13466)
!13473 = !DILocation(line: 2918, column: 3, scope: !13466)
!13474 = !DILocation(line: 2919, column: 2, scope: !13466)
!13475 = !DILocation(line: 2920, column: 1, scope: !13421)
!13476 = distinct !DISubprogram(name: "__list_add", scope: !10346, file: !10346, line: 63, type: !13477, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13477 = !DISubroutineType(types: !13478)
!13478 = !{null, !388, !388, !388}
!13479 = !DILocalVariable(name: "new", arg: 1, scope: !13476, file: !10346, line: 63, type: !388)
!13480 = !DILocation(line: 63, column: 49, scope: !13476)
!13481 = !DILocalVariable(name: "prev", arg: 2, scope: !13476, file: !10346, line: 64, type: !388)
!13482 = !DILocation(line: 64, column: 28, scope: !13476)
!13483 = !DILocalVariable(name: "next", arg: 3, scope: !13476, file: !10346, line: 65, type: !388)
!13484 = !DILocation(line: 65, column: 28, scope: !13476)
!13485 = !DILocation(line: 67, column: 24, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13476, file: !10346, line: 67, column: 6)
!13487 = !DILocation(line: 67, column: 29, scope: !13486)
!13488 = !DILocation(line: 67, column: 35, scope: !13486)
!13489 = !DILocation(line: 67, column: 7, scope: !13486)
!13490 = !DILocation(line: 67, column: 6, scope: !13476)
!13491 = !DILocation(line: 68, column: 3, scope: !13486)
!13492 = !DILocation(line: 70, column: 15, scope: !13476)
!13493 = !DILocation(line: 70, column: 2, scope: !13476)
!13494 = !DILocation(line: 70, column: 8, scope: !13476)
!13495 = !DILocation(line: 70, column: 13, scope: !13476)
!13496 = !DILocation(line: 71, column: 14, scope: !13476)
!13497 = !DILocation(line: 71, column: 2, scope: !13476)
!13498 = !DILocation(line: 71, column: 7, scope: !13476)
!13499 = !DILocation(line: 71, column: 12, scope: !13476)
!13500 = !DILocation(line: 72, column: 14, scope: !13476)
!13501 = !DILocation(line: 72, column: 2, scope: !13476)
!13502 = !DILocation(line: 72, column: 7, scope: !13476)
!13503 = !DILocation(line: 72, column: 12, scope: !13476)
!13504 = !DILocation(line: 73, column: 2, scope: !13476)
!13505 = !DILocation(line: 73, column: 2, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13476, file: !10346, line: 73, column: 2)
!13507 = !DILocation(line: 73, column: 2, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13506, file: !10346, line: 73, column: 2)
!13509 = !DILocation(line: 73, column: 2, scope: !13510)
!13510 = distinct !DILexicalBlock(scope: !13506, file: !10346, line: 73, column: 2)
!13511 = !DILocation(line: 74, column: 1, scope: !13476)
!13512 = distinct !DISubprogram(name: "__list_add_valid", scope: !10346, file: !10346, line: 45, type: !13513, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13513 = !DISubroutineType(types: !13514)
!13514 = !{!370, !388, !388, !388}
!13515 = !DILocalVariable(name: "new", arg: 1, scope: !13512, file: !10346, line: 45, type: !388)
!13516 = !DILocation(line: 45, column: 55, scope: !13512)
!13517 = !DILocalVariable(name: "prev", arg: 2, scope: !13512, file: !10346, line: 46, type: !388)
!13518 = !DILocation(line: 46, column: 23, scope: !13512)
!13519 = !DILocalVariable(name: "next", arg: 3, scope: !13512, file: !10346, line: 47, type: !388)
!13520 = !DILocation(line: 47, column: 23, scope: !13512)
!13521 = !DILocation(line: 49, column: 2, scope: !13512)
!13522 = distinct !DISubprogram(name: "drm_dp_mst_rad_to_str", scope: !3, file: !3, line: 175, type: !13523, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13523 = !DISubroutineType(types: !13524)
!13524 = !{!115, !6812, !364, !870, !1023}
!13525 = !DILocalVariable(name: "rad", arg: 1, scope: !13522, file: !3, line: 175, type: !6812)
!13526 = !DILocation(line: 175, column: 32, scope: !13522)
!13527 = !DILocalVariable(name: "lct", arg: 2, scope: !13522, file: !3, line: 175, type: !364)
!13528 = !DILocation(line: 175, column: 43, scope: !13522)
!13529 = !DILocalVariable(name: "out", arg: 3, scope: !13522, file: !3, line: 175, type: !870)
!13530 = !DILocation(line: 175, column: 54, scope: !13522)
!13531 = !DILocalVariable(name: "len", arg: 4, scope: !13522, file: !3, line: 175, type: !1023)
!13532 = !DILocation(line: 175, column: 66, scope: !13522)
!13533 = !DILocalVariable(name: "i", scope: !13522, file: !3, line: 177, type: !115)
!13534 = !DILocation(line: 177, column: 6, scope: !13522)
!13535 = !DILocalVariable(name: "unpacked_rad", scope: !13522, file: !3, line: 178, type: !5839)
!13536 = !DILocation(line: 178, column: 5, scope: !13522)
!13537 = !DILocation(line: 180, column: 9, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13522, file: !3, line: 180, column: 2)
!13539 = !DILocation(line: 180, column: 7, scope: !13538)
!13540 = !DILocation(line: 180, column: 14, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13538, file: !3, line: 180, column: 2)
!13542 = !DILocation(line: 180, column: 18, scope: !13541)
!13543 = !DILocation(line: 180, column: 16, scope: !13541)
!13544 = !DILocation(line: 180, column: 2, scope: !13538)
!13545 = !DILocation(line: 181, column: 7, scope: !13546)
!13546 = distinct !DILexicalBlock(scope: !13547, file: !3, line: 181, column: 7)
!13547 = distinct !DILexicalBlock(scope: !13541, file: !3, line: 180, column: 28)
!13548 = !DILocation(line: 181, column: 9, scope: !13546)
!13549 = !DILocation(line: 181, column: 7, scope: !13547)
!13550 = !DILocation(line: 182, column: 22, scope: !13546)
!13551 = !DILocation(line: 182, column: 26, scope: !13546)
!13552 = !DILocation(line: 182, column: 28, scope: !13546)
!13553 = !DILocation(line: 182, column: 33, scope: !13546)
!13554 = !DILocation(line: 182, column: 17, scope: !13546)
!13555 = !DILocation(line: 182, column: 4, scope: !13546)
!13556 = !DILocation(line: 182, column: 20, scope: !13546)
!13557 = !DILocation(line: 184, column: 22, scope: !13546)
!13558 = !DILocation(line: 184, column: 26, scope: !13546)
!13559 = !DILocation(line: 184, column: 28, scope: !13546)
!13560 = !DILocation(line: 184, column: 33, scope: !13546)
!13561 = !DILocation(line: 184, column: 17, scope: !13546)
!13562 = !DILocation(line: 184, column: 4, scope: !13546)
!13563 = !DILocation(line: 184, column: 20, scope: !13546)
!13564 = !DILocation(line: 185, column: 2, scope: !13547)
!13565 = !DILocation(line: 180, column: 24, scope: !13541)
!13566 = !DILocation(line: 180, column: 2, scope: !13541)
!13567 = distinct !{!13567, !13544, !13568}
!13568 = !DILocation(line: 185, column: 2, scope: !13538)
!13569 = !DILocation(line: 190, column: 18, scope: !13522)
!13570 = !DILocation(line: 190, column: 23, scope: !13522)
!13571 = !DILocation(line: 190, column: 37, scope: !13522)
!13572 = !DILocation(line: 190, column: 42, scope: !13522)
!13573 = !DILocation(line: 190, column: 9, scope: !13522)
!13574 = !DILocation(line: 190, column: 2, scope: !13522)
!13575 = !DILocalVariable(name: "state", arg: 1, scope: !6245, file: !3, line: 157, type: !115)
!13576 = !DILocation(line: 157, column: 57, scope: !6245)
!13577 = !DILocation(line: 167, column: 6, scope: !13578)
!13578 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 167, column: 6)
!13579 = !DILocation(line: 167, column: 12, scope: !13578)
!13580 = !DILocation(line: 167, column: 47, scope: !13578)
!13581 = !DILocation(line: 168, column: 27, scope: !13578)
!13582 = !DILocation(line: 168, column: 7, scope: !13578)
!13583 = !DILocation(line: 167, column: 6, scope: !6245)
!13584 = !DILocation(line: 169, column: 3, scope: !13578)
!13585 = !DILocation(line: 171, column: 29, scope: !6245)
!13586 = !DILocation(line: 171, column: 9, scope: !6245)
!13587 = !DILocation(line: 171, column: 2, scope: !6245)
!13588 = !DILocation(line: 172, column: 1, scope: !6245)
!13589 = distinct !DISubprogram(name: "list_empty", scope: !10346, file: !10346, line: 280, type: !13405, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13590 = !DILocalVariable(name: "head", arg: 1, scope: !13589, file: !10346, line: 280, type: !13407)
!13591 = !DILocation(line: 280, column: 54, scope: !13589)
!13592 = !DILocation(line: 282, column: 9, scope: !13593)
!13593 = distinct !DILexicalBlock(scope: !13589, file: !10346, line: 282, column: 9)
!13594 = !DILocation(line: 282, column: 9, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13593, file: !10346, line: 282, column: 9)
!13596 = !DILocation(line: 282, column: 34, scope: !13589)
!13597 = !DILocation(line: 282, column: 31, scope: !13589)
!13598 = !DILocation(line: 282, column: 2, scope: !13589)
!13599 = distinct !DISubprogram(name: "process_single_tx_qlock", scope: !3, file: !3, line: 2841, type: !13600, scopeLine: 2844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13600 = !DISubroutineType(types: !13601)
!13601 = !{!115, !406, !6003, !370}
!13602 = !DILocalVariable(name: "mgr", arg: 1, scope: !13599, file: !3, line: 2841, type: !406)
!13603 = !DILocation(line: 2841, column: 68, scope: !13599)
!13604 = !DILocalVariable(name: "txmsg", arg: 2, scope: !13599, file: !3, line: 2842, type: !6003)
!13605 = !DILocation(line: 2842, column: 39, scope: !13599)
!13606 = !DILocalVariable(name: "up", arg: 3, scope: !13599, file: !3, line: 2843, type: !370)
!13607 = !DILocation(line: 2843, column: 13, scope: !13599)
!13608 = !DILocalVariable(name: "chunk", scope: !13599, file: !3, line: 2845, type: !5768)
!13609 = !DILocation(line: 2845, column: 5, scope: !13599)
!13610 = !DILocalVariable(name: "hdr", scope: !13599, file: !3, line: 2846, type: !5780)
!13611 = !DILocation(line: 2846, column: 33, scope: !13599)
!13612 = !DILocalVariable(name: "len", scope: !13599, file: !3, line: 2847, type: !115)
!13613 = !DILocation(line: 2847, column: 6, scope: !13599)
!13614 = !DILocalVariable(name: "space", scope: !13599, file: !3, line: 2847, type: !115)
!13615 = !DILocation(line: 2847, column: 11, scope: !13599)
!13616 = !DILocalVariable(name: "idx", scope: !13599, file: !3, line: 2847, type: !115)
!13617 = !DILocation(line: 2847, column: 18, scope: !13599)
!13618 = !DILocalVariable(name: "tosend", scope: !13599, file: !3, line: 2847, type: !115)
!13619 = !DILocation(line: 2847, column: 23, scope: !13599)
!13620 = !DILocalVariable(name: "ret", scope: !13599, file: !3, line: 2848, type: !115)
!13621 = !DILocation(line: 2848, column: 6, scope: !13599)
!13622 = !DILocation(line: 2850, column: 6, scope: !13623)
!13623 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2850, column: 6)
!13624 = !DILocation(line: 2850, column: 13, scope: !13623)
!13625 = !DILocation(line: 2850, column: 19, scope: !13623)
!13626 = !DILocation(line: 2850, column: 6, scope: !13599)
!13627 = !DILocation(line: 2851, column: 3, scope: !13623)
!13628 = !DILocation(line: 2853, column: 2, scope: !13599)
!13629 = !DILocation(line: 2855, column: 6, scope: !13630)
!13630 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2855, column: 6)
!13631 = !DILocation(line: 2855, column: 13, scope: !13630)
!13632 = !DILocation(line: 2855, column: 19, scope: !13630)
!13633 = !DILocation(line: 2855, column: 6, scope: !13599)
!13634 = !DILocation(line: 2856, column: 3, scope: !13630)
!13635 = !DILocation(line: 2856, column: 10, scope: !13630)
!13636 = !DILocation(line: 2856, column: 16, scope: !13630)
!13637 = !DILocation(line: 2859, column: 37, scope: !13599)
!13638 = !DILocation(line: 2859, column: 8, scope: !13599)
!13639 = !DILocation(line: 2859, column: 6, scope: !13599)
!13640 = !DILocation(line: 2860, column: 6, scope: !13641)
!13641 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2860, column: 6)
!13642 = !DILocation(line: 2860, column: 10, scope: !13641)
!13643 = !DILocation(line: 2860, column: 6, scope: !13599)
!13644 = !DILocation(line: 2861, column: 10, scope: !13641)
!13645 = !DILocation(line: 2861, column: 3, scope: !13641)
!13646 = !DILocation(line: 2864, column: 8, scope: !13599)
!13647 = !DILocation(line: 2864, column: 15, scope: !13599)
!13648 = !DILocation(line: 2864, column: 25, scope: !13599)
!13649 = !DILocation(line: 2864, column: 32, scope: !13599)
!13650 = !DILocation(line: 2864, column: 23, scope: !13599)
!13651 = !DILocation(line: 2864, column: 6, scope: !13599)
!13652 = !DILocation(line: 2867, column: 19, scope: !13599)
!13653 = !DILocation(line: 2867, column: 17, scope: !13599)
!13654 = !DILocation(line: 2867, column: 8, scope: !13599)
!13655 = !DILocalVariable(name: "__UNIQUE_ID___x318", scope: !13656, file: !3, line: 2869, type: !115)
!13656 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2869, column: 11)
!13657 = !DILocation(line: 2869, column: 11, scope: !13656)
!13658 = !DILocalVariable(name: "__UNIQUE_ID___y319", scope: !13656, file: !3, line: 2869, type: !115)
!13659 = !DILocation(line: 2869, column: 9, scope: !13599)
!13660 = !DILocation(line: 2870, column: 6, scope: !13661)
!13661 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2870, column: 6)
!13662 = !DILocation(line: 2870, column: 13, scope: !13661)
!13663 = !DILocation(line: 2870, column: 20, scope: !13661)
!13664 = !DILocation(line: 2870, column: 10, scope: !13661)
!13665 = !DILocation(line: 2870, column: 6, scope: !13599)
!13666 = !DILocation(line: 2871, column: 7, scope: !13661)
!13667 = !DILocation(line: 2871, column: 12, scope: !13661)
!13668 = !DILocation(line: 2871, column: 3, scope: !13661)
!13669 = !DILocation(line: 2872, column: 6, scope: !13670)
!13670 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2872, column: 6)
!13671 = !DILocation(line: 2872, column: 15, scope: !13670)
!13672 = !DILocation(line: 2872, column: 12, scope: !13670)
!13673 = !DILocation(line: 2872, column: 6, scope: !13599)
!13674 = !DILocation(line: 2873, column: 7, scope: !13670)
!13675 = !DILocation(line: 2873, column: 12, scope: !13670)
!13676 = !DILocation(line: 2873, column: 3, scope: !13670)
!13677 = !DILocation(line: 2876, column: 16, scope: !13599)
!13678 = !DILocation(line: 2876, column: 23, scope: !13599)
!13679 = !DILocation(line: 2876, column: 6, scope: !13599)
!13680 = !DILocation(line: 2876, column: 14, scope: !13599)
!13681 = !DILocation(line: 2877, column: 39, scope: !13599)
!13682 = !DILocation(line: 2877, column: 2, scope: !13599)
!13683 = !DILocation(line: 2878, column: 16, scope: !13599)
!13684 = !DILocation(line: 2878, column: 10, scope: !13599)
!13685 = !DILocation(line: 2878, column: 23, scope: !13599)
!13686 = !DILocation(line: 2878, column: 30, scope: !13599)
!13687 = !DILocation(line: 2878, column: 34, scope: !13599)
!13688 = !DILocation(line: 2878, column: 41, scope: !13599)
!13689 = !DILocation(line: 2878, column: 54, scope: !13599)
!13690 = !DILocation(line: 2878, column: 2, scope: !13599)
!13691 = !DILocation(line: 2880, column: 39, scope: !13599)
!13692 = !DILocation(line: 2880, column: 33, scope: !13599)
!13693 = !DILocation(line: 2880, column: 45, scope: !13599)
!13694 = !DILocation(line: 2880, column: 2, scope: !13599)
!13695 = !DILocation(line: 2881, column: 9, scope: !13599)
!13696 = !DILocation(line: 2881, column: 16, scope: !13599)
!13697 = !DILocation(line: 2881, column: 6, scope: !13599)
!13698 = !DILocation(line: 2883, column: 33, scope: !13599)
!13699 = !DILocation(line: 2883, column: 38, scope: !13599)
!13700 = !DILocation(line: 2883, column: 42, scope: !13599)
!13701 = !DILocation(line: 2883, column: 49, scope: !13599)
!13702 = !DILocation(line: 2883, column: 8, scope: !13599)
!13703 = !DILocation(line: 2883, column: 6, scope: !13599)
!13704 = !DILocation(line: 2884, column: 6, scope: !13705)
!13705 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2884, column: 6)
!13706 = !DILocation(line: 2884, column: 20, scope: !13705)
!13707 = !DILocation(line: 2884, column: 23, scope: !13705)
!13708 = !DILocation(line: 2884, column: 6, scope: !13599)
!13709 = !DILocalVariable(name: "p", scope: !13710, file: !3, line: 2885, type: !5122)
!13710 = distinct !DILexicalBlock(scope: !13705, file: !3, line: 2884, column: 53)
!13711 = !DILocation(line: 2885, column: 22, scope: !13710)
!13712 = !DILocation(line: 2885, column: 26, scope: !13710)
!13713 = !DILocation(line: 2887, column: 3, scope: !13710)
!13714 = !DILocation(line: 2888, column: 39, scope: !13710)
!13715 = !DILocation(line: 2888, column: 3, scope: !13710)
!13716 = !DILocation(line: 2889, column: 10, scope: !13710)
!13717 = !DILocation(line: 2889, column: 3, scope: !13710)
!13718 = !DILocation(line: 2892, column: 23, scope: !13599)
!13719 = !DILocation(line: 2892, column: 2, scope: !13599)
!13720 = !DILocation(line: 2892, column: 9, scope: !13599)
!13721 = !DILocation(line: 2892, column: 20, scope: !13599)
!13722 = !DILocation(line: 2893, column: 6, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13599, file: !3, line: 2893, column: 6)
!13724 = !DILocation(line: 2893, column: 13, scope: !13723)
!13725 = !DILocation(line: 2893, column: 27, scope: !13723)
!13726 = !DILocation(line: 2893, column: 34, scope: !13723)
!13727 = !DILocation(line: 2893, column: 24, scope: !13723)
!13728 = !DILocation(line: 2893, column: 6, scope: !13599)
!13729 = !DILocation(line: 2894, column: 3, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13723, file: !3, line: 2893, column: 43)
!13731 = !DILocation(line: 2894, column: 10, scope: !13730)
!13732 = !DILocation(line: 2894, column: 16, scope: !13730)
!13733 = !DILocation(line: 2895, column: 3, scope: !13730)
!13734 = !DILocation(line: 2897, column: 2, scope: !13599)
!13735 = !DILocation(line: 2898, column: 1, scope: !13599)
!13736 = distinct !DISubprogram(name: "list_del", scope: !10346, file: !10346, line: 144, type: !12197, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13737 = !DILocalVariable(name: "entry", arg: 1, scope: !13736, file: !10346, line: 144, type: !388)
!13738 = !DILocation(line: 144, column: 47, scope: !13736)
!13739 = !DILocation(line: 146, column: 19, scope: !13736)
!13740 = !DILocation(line: 146, column: 2, scope: !13736)
!13741 = !DILocation(line: 147, column: 2, scope: !13736)
!13742 = !DILocation(line: 147, column: 9, scope: !13736)
!13743 = !DILocation(line: 147, column: 14, scope: !13736)
!13744 = !DILocation(line: 148, column: 2, scope: !13736)
!13745 = !DILocation(line: 148, column: 9, scope: !13736)
!13746 = !DILocation(line: 148, column: 14, scope: !13736)
!13747 = !DILocation(line: 149, column: 1, scope: !13736)
!13748 = distinct !DISubprogram(name: "set_hdr_from_dst_qlock", scope: !3, file: !3, line: 2818, type: !13749, scopeLine: 2820, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13749 = !DISubroutineType(types: !13750)
!13750 = !{!115, !9849, !6003}
!13751 = !DILocalVariable(name: "hdr", arg: 1, scope: !13748, file: !3, line: 2818, type: !9849)
!13752 = !DILocation(line: 2818, column: 67, scope: !13748)
!13753 = !DILocalVariable(name: "txmsg", arg: 2, scope: !13748, file: !3, line: 2819, type: !6003)
!13754 = !DILocation(line: 2819, column: 38, scope: !13748)
!13755 = !DILocalVariable(name: "mstb", scope: !13748, file: !3, line: 2821, type: !391)
!13756 = !DILocation(line: 2821, column: 28, scope: !13748)
!13757 = !DILocation(line: 2821, column: 35, scope: !13748)
!13758 = !DILocation(line: 2821, column: 42, scope: !13748)
!13759 = !DILocalVariable(name: "req_type", scope: !13748, file: !3, line: 2822, type: !364)
!13760 = !DILocation(line: 2822, column: 5, scope: !13748)
!13761 = !DILocation(line: 2824, column: 13, scope: !13748)
!13762 = !DILocation(line: 2824, column: 20, scope: !13748)
!13763 = !DILocation(line: 2824, column: 27, scope: !13748)
!13764 = !DILocation(line: 2824, column: 11, scope: !13748)
!13765 = !DILocation(line: 2825, column: 6, scope: !13766)
!13766 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 2825, column: 6)
!13767 = !DILocation(line: 2825, column: 15, scope: !13766)
!13768 = !DILocation(line: 2825, column: 46, scope: !13766)
!13769 = !DILocation(line: 2826, column: 3, scope: !13766)
!13770 = !DILocation(line: 2826, column: 12, scope: !13766)
!13771 = !DILocation(line: 2825, column: 6, scope: !13748)
!13772 = !DILocation(line: 2827, column: 3, scope: !13766)
!13773 = !DILocation(line: 2827, column: 8, scope: !13766)
!13774 = !DILocation(line: 2827, column: 18, scope: !13766)
!13775 = !DILocation(line: 2829, column: 3, scope: !13766)
!13776 = !DILocation(line: 2829, column: 8, scope: !13766)
!13777 = !DILocation(line: 2829, column: 18, scope: !13766)
!13778 = !DILocation(line: 2830, column: 18, scope: !13748)
!13779 = !DILocation(line: 2830, column: 25, scope: !13748)
!13780 = !DILocation(line: 2830, column: 2, scope: !13748)
!13781 = !DILocation(line: 2830, column: 7, scope: !13748)
!13782 = !DILocation(line: 2830, column: 16, scope: !13748)
!13783 = !DILocation(line: 2831, column: 13, scope: !13748)
!13784 = !DILocation(line: 2831, column: 19, scope: !13748)
!13785 = !DILocation(line: 2831, column: 2, scope: !13748)
!13786 = !DILocation(line: 2831, column: 7, scope: !13748)
!13787 = !DILocation(line: 2831, column: 11, scope: !13748)
!13788 = !DILocation(line: 2832, column: 13, scope: !13748)
!13789 = !DILocation(line: 2832, column: 19, scope: !13748)
!13790 = !DILocation(line: 2832, column: 23, scope: !13748)
!13791 = !DILocation(line: 2832, column: 2, scope: !13748)
!13792 = !DILocation(line: 2832, column: 7, scope: !13748)
!13793 = !DILocation(line: 2832, column: 11, scope: !13748)
!13794 = !DILocation(line: 2833, column: 6, scope: !13795)
!13795 = distinct !DILexicalBlock(scope: !13748, file: !3, line: 2833, column: 6)
!13796 = !DILocation(line: 2833, column: 12, scope: !13795)
!13797 = !DILocation(line: 2833, column: 16, scope: !13795)
!13798 = !DILocation(line: 2833, column: 6, scope: !13748)
!13799 = !DILocation(line: 2834, column: 10, scope: !13795)
!13800 = !DILocation(line: 2834, column: 15, scope: !13795)
!13801 = !DILocation(line: 2834, column: 3, scope: !13795)
!13802 = !DILocation(line: 2834, column: 20, scope: !13795)
!13803 = !DILocation(line: 2834, column: 26, scope: !13795)
!13804 = !DILocation(line: 2834, column: 31, scope: !13795)
!13805 = !DILocation(line: 2834, column: 37, scope: !13795)
!13806 = !DILocation(line: 2834, column: 41, scope: !13795)
!13807 = !DILocation(line: 2836, column: 2, scope: !13748)
!13808 = distinct !DISubprogram(name: "drm_dp_calc_sb_hdr_size", scope: !3, file: !3, line: 261, type: !13809, scopeLine: 262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13809 = !DISubroutineType(types: !13810)
!13810 = !{!364, !9849}
!13811 = !DILocalVariable(name: "hdr", arg: 1, scope: !13808, file: !3, line: 261, type: !9849)
!13812 = !DILocation(line: 261, column: 74, scope: !13808)
!13813 = !DILocalVariable(name: "size", scope: !13808, file: !3, line: 263, type: !364)
!13814 = !DILocation(line: 263, column: 5, scope: !13808)
!13815 = !DILocation(line: 265, column: 11, scope: !13808)
!13816 = !DILocation(line: 265, column: 16, scope: !13808)
!13817 = !DILocation(line: 265, column: 20, scope: !13808)
!13818 = !DILocation(line: 265, column: 7, scope: !13808)
!13819 = !DILocation(line: 266, column: 9, scope: !13808)
!13820 = !DILocation(line: 266, column: 2, scope: !13808)
!13821 = distinct !DISubprogram(name: "drm_dp_encode_sideband_msg_hdr", scope: !3, file: !3, line: 269, type: !13822, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13822 = !DISubroutineType(types: !13823)
!13823 = !{null, !9849, !6180, !1011}
!13824 = !DILocalVariable(name: "hdr", arg: 1, scope: !13821, file: !3, line: 269, type: !9849)
!13825 = !DILocation(line: 269, column: 76, scope: !13821)
!13826 = !DILocalVariable(name: "buf", arg: 2, scope: !13821, file: !3, line: 270, type: !6180)
!13827 = !DILocation(line: 270, column: 13, scope: !13821)
!13828 = !DILocalVariable(name: "len", arg: 3, scope: !13821, file: !3, line: 270, type: !1011)
!13829 = !DILocation(line: 270, column: 23, scope: !13821)
!13830 = !DILocalVariable(name: "idx", scope: !13821, file: !3, line: 272, type: !115)
!13831 = !DILocation(line: 272, column: 6, scope: !13821)
!13832 = !DILocalVariable(name: "i", scope: !13821, file: !3, line: 273, type: !115)
!13833 = !DILocation(line: 273, column: 6, scope: !13821)
!13834 = !DILocalVariable(name: "crc4", scope: !13821, file: !3, line: 274, type: !364)
!13835 = !DILocation(line: 274, column: 5, scope: !13821)
!13836 = !DILocation(line: 276, column: 17, scope: !13821)
!13837 = !DILocation(line: 276, column: 22, scope: !13821)
!13838 = !DILocation(line: 276, column: 26, scope: !13821)
!13839 = !DILocation(line: 276, column: 33, scope: !13821)
!13840 = !DILocation(line: 276, column: 42, scope: !13821)
!13841 = !DILocation(line: 276, column: 47, scope: !13821)
!13842 = !DILocation(line: 276, column: 51, scope: !13821)
!13843 = !DILocation(line: 276, column: 39, scope: !13821)
!13844 = !DILocation(line: 276, column: 15, scope: !13821)
!13845 = !DILocation(line: 276, column: 2, scope: !13821)
!13846 = !DILocation(line: 276, column: 9, scope: !13821)
!13847 = !DILocation(line: 276, column: 13, scope: !13821)
!13848 = !DILocation(line: 277, column: 9, scope: !13849)
!13849 = distinct !DILexicalBlock(scope: !13821, file: !3, line: 277, column: 2)
!13850 = !DILocation(line: 277, column: 7, scope: !13849)
!13851 = !DILocation(line: 277, column: 14, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13849, file: !3, line: 277, column: 2)
!13853 = !DILocation(line: 277, column: 19, scope: !13852)
!13854 = !DILocation(line: 277, column: 24, scope: !13852)
!13855 = !DILocation(line: 277, column: 28, scope: !13852)
!13856 = !DILocation(line: 277, column: 16, scope: !13852)
!13857 = !DILocation(line: 277, column: 2, scope: !13849)
!13858 = !DILocation(line: 278, column: 16, scope: !13852)
!13859 = !DILocation(line: 278, column: 21, scope: !13852)
!13860 = !DILocation(line: 278, column: 25, scope: !13852)
!13861 = !DILocation(line: 278, column: 3, scope: !13852)
!13862 = !DILocation(line: 278, column: 10, scope: !13852)
!13863 = !DILocation(line: 278, column: 14, scope: !13852)
!13864 = !DILocation(line: 277, column: 35, scope: !13852)
!13865 = !DILocation(line: 277, column: 2, scope: !13852)
!13866 = distinct !{!13866, !13857, !13867}
!13867 = !DILocation(line: 278, column: 26, scope: !13849)
!13868 = !DILocation(line: 279, column: 16, scope: !13821)
!13869 = !DILocation(line: 279, column: 21, scope: !13821)
!13870 = !DILocation(line: 279, column: 31, scope: !13821)
!13871 = !DILocation(line: 279, column: 40, scope: !13821)
!13872 = !DILocation(line: 279, column: 45, scope: !13821)
!13873 = !DILocation(line: 279, column: 54, scope: !13821)
!13874 = !DILocation(line: 279, column: 37, scope: !13821)
!13875 = !DILocation(line: 280, column: 4, scope: !13821)
!13876 = !DILocation(line: 280, column: 9, scope: !13821)
!13877 = !DILocation(line: 280, column: 17, scope: !13821)
!13878 = !DILocation(line: 279, column: 60, scope: !13821)
!13879 = !DILocation(line: 279, column: 15, scope: !13821)
!13880 = !DILocation(line: 279, column: 2, scope: !13821)
!13881 = !DILocation(line: 279, column: 9, scope: !13821)
!13882 = !DILocation(line: 279, column: 13, scope: !13821)
!13883 = !DILocation(line: 281, column: 16, scope: !13821)
!13884 = !DILocation(line: 281, column: 21, scope: !13821)
!13885 = !DILocation(line: 281, column: 26, scope: !13821)
!13886 = !DILocation(line: 281, column: 35, scope: !13821)
!13887 = !DILocation(line: 281, column: 40, scope: !13821)
!13888 = !DILocation(line: 281, column: 45, scope: !13821)
!13889 = !DILocation(line: 281, column: 32, scope: !13821)
!13890 = !DILocation(line: 281, column: 54, scope: !13821)
!13891 = !DILocation(line: 281, column: 59, scope: !13821)
!13892 = !DILocation(line: 281, column: 65, scope: !13821)
!13893 = !DILocation(line: 281, column: 51, scope: !13821)
!13894 = !DILocation(line: 281, column: 15, scope: !13821)
!13895 = !DILocation(line: 281, column: 2, scope: !13821)
!13896 = !DILocation(line: 281, column: 9, scope: !13821)
!13897 = !DILocation(line: 281, column: 13, scope: !13821)
!13898 = !DILocation(line: 283, column: 32, scope: !13821)
!13899 = !DILocation(line: 283, column: 38, scope: !13821)
!13900 = !DILocation(line: 283, column: 42, scope: !13821)
!13901 = !DILocation(line: 283, column: 47, scope: !13821)
!13902 = !DILocation(line: 283, column: 37, scope: !13821)
!13903 = !DILocation(line: 283, column: 9, scope: !13821)
!13904 = !DILocation(line: 283, column: 7, scope: !13821)
!13905 = !DILocation(line: 284, column: 19, scope: !13821)
!13906 = !DILocation(line: 284, column: 24, scope: !13821)
!13907 = !DILocation(line: 284, column: 2, scope: !13821)
!13908 = !DILocation(line: 284, column: 6, scope: !13821)
!13909 = !DILocation(line: 284, column: 10, scope: !13821)
!13910 = !DILocation(line: 284, column: 15, scope: !13821)
!13911 = !DILocation(line: 286, column: 9, scope: !13821)
!13912 = !DILocation(line: 286, column: 3, scope: !13821)
!13913 = !DILocation(line: 286, column: 7, scope: !13821)
!13914 = !DILocation(line: 287, column: 1, scope: !13821)
!13915 = distinct !DISubprogram(name: "drm_dp_crc_sideband_chunk_req", scope: !3, file: !3, line: 719, type: !13916, scopeLine: 720, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13916 = !DISubroutineType(types: !13917)
!13917 = !{null, !6180, !364}
!13918 = !DILocalVariable(name: "msg", arg: 1, scope: !13915, file: !3, line: 719, type: !6180)
!13919 = !DILocation(line: 719, column: 47, scope: !13915)
!13920 = !DILocalVariable(name: "len", arg: 2, scope: !13915, file: !3, line: 719, type: !364)
!13921 = !DILocation(line: 719, column: 55, scope: !13915)
!13922 = !DILocalVariable(name: "crc4", scope: !13915, file: !3, line: 721, type: !364)
!13923 = !DILocation(line: 721, column: 5, scope: !13915)
!13924 = !DILocation(line: 723, column: 30, scope: !13915)
!13925 = !DILocation(line: 723, column: 35, scope: !13915)
!13926 = !DILocation(line: 723, column: 9, scope: !13915)
!13927 = !DILocation(line: 723, column: 7, scope: !13915)
!13928 = !DILocation(line: 724, column: 13, scope: !13915)
!13929 = !DILocation(line: 724, column: 2, scope: !13915)
!13930 = !DILocation(line: 724, column: 6, scope: !13915)
!13931 = !DILocation(line: 724, column: 11, scope: !13915)
!13932 = !DILocation(line: 725, column: 1, scope: !13915)
!13933 = distinct !DISubprogram(name: "drm_dp_send_sideband_msg", scope: !3, file: !3, line: 2786, type: !13934, scopeLine: 2788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!13934 = !DISubroutineType(types: !13935)
!13935 = !{!115, !406, !370, !6180, !115}
!13936 = !DILocalVariable(name: "mgr", arg: 1, scope: !13933, file: !3, line: 2786, type: !406)
!13937 = !DILocation(line: 2786, column: 69, scope: !13933)
!13938 = !DILocalVariable(name: "up", arg: 2, scope: !13933, file: !3, line: 2787, type: !370)
!13939 = !DILocation(line: 2787, column: 14, scope: !13933)
!13940 = !DILocalVariable(name: "msg", arg: 3, scope: !13933, file: !3, line: 2787, type: !6180)
!13941 = !DILocation(line: 2787, column: 22, scope: !13933)
!13942 = !DILocalVariable(name: "len", arg: 4, scope: !13933, file: !3, line: 2787, type: !115)
!13943 = !DILocation(line: 2787, column: 31, scope: !13933)
!13944 = !DILocalVariable(name: "ret", scope: !13933, file: !3, line: 2789, type: !115)
!13945 = !DILocation(line: 2789, column: 6, scope: !13933)
!13946 = !DILocalVariable(name: "regbase", scope: !13933, file: !3, line: 2790, type: !115)
!13947 = !DILocation(line: 2790, column: 6, scope: !13933)
!13948 = !DILocation(line: 2790, column: 16, scope: !13933)
!13949 = !DILocalVariable(name: "tosend", scope: !13933, file: !3, line: 2791, type: !115)
!13950 = !DILocation(line: 2791, column: 6, scope: !13933)
!13951 = !DILocalVariable(name: "total", scope: !13933, file: !3, line: 2791, type: !115)
!13952 = !DILocation(line: 2791, column: 14, scope: !13933)
!13953 = !DILocalVariable(name: "offset", scope: !13933, file: !3, line: 2791, type: !115)
!13954 = !DILocation(line: 2791, column: 21, scope: !13933)
!13955 = !DILocalVariable(name: "retries", scope: !13933, file: !3, line: 2792, type: !115)
!13956 = !DILocation(line: 2792, column: 6, scope: !13933)
!13957 = !DILocation(line: 2792, column: 2, scope: !13933)
!13958 = !DILabel(scope: !13933, name: "retry", file: !3, line: 2794)
!13959 = !DILocation(line: 2794, column: 1, scope: !13933)
!13960 = !DILocation(line: 2795, column: 10, scope: !13933)
!13961 = !DILocation(line: 2795, column: 8, scope: !13933)
!13962 = !DILocation(line: 2796, column: 9, scope: !13933)
!13963 = !DILocation(line: 2797, column: 2, scope: !13933)
!13964 = !DILocalVariable(name: "__UNIQUE_ID___x316", scope: !13965, file: !3, line: 2798, type: !115)
!13965 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 2798, column: 12)
!13966 = distinct !DILexicalBlock(scope: !13933, file: !3, line: 2797, column: 5)
!13967 = !DILocation(line: 2798, column: 12, scope: !13965)
!13968 = !DILocalVariable(name: "__UNIQUE_ID___x314", scope: !13969, file: !3, line: 2798, type: !115)
!13969 = distinct !DILexicalBlock(scope: !13965, file: !3, line: 2798, column: 12)
!13970 = !DILocation(line: 2798, column: 12, scope: !13969)
!13971 = !DILocalVariable(name: "__UNIQUE_ID___y315", scope: !13969, file: !3, line: 2798, type: !115)
!13972 = !DILocalVariable(name: "__UNIQUE_ID___y317", scope: !13965, file: !3, line: 2798, type: !115)
!13973 = !DILocation(line: 2798, column: 10, scope: !13966)
!13974 = !DILocation(line: 2800, column: 27, scope: !13966)
!13975 = !DILocation(line: 2800, column: 32, scope: !13966)
!13976 = !DILocation(line: 2800, column: 37, scope: !13966)
!13977 = !DILocation(line: 2800, column: 47, scope: !13966)
!13978 = !DILocation(line: 2800, column: 45, scope: !13966)
!13979 = !DILocation(line: 2801, column: 7, scope: !13966)
!13980 = !DILocation(line: 2801, column: 11, scope: !13966)
!13981 = !DILocation(line: 2802, column: 6, scope: !13966)
!13982 = !DILocation(line: 2800, column: 9, scope: !13966)
!13983 = !DILocation(line: 2800, column: 7, scope: !13966)
!13984 = !DILocation(line: 2803, column: 7, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13966, file: !3, line: 2803, column: 7)
!13986 = !DILocation(line: 2803, column: 14, scope: !13985)
!13987 = !DILocation(line: 2803, column: 11, scope: !13985)
!13988 = !DILocation(line: 2803, column: 7, scope: !13966)
!13989 = !DILocation(line: 2804, column: 8, scope: !13990)
!13990 = distinct !DILexicalBlock(scope: !13991, file: !3, line: 2804, column: 8)
!13991 = distinct !DILexicalBlock(scope: !13985, file: !3, line: 2803, column: 22)
!13992 = !DILocation(line: 2804, column: 12, scope: !13990)
!13993 = !DILocation(line: 2804, column: 20, scope: !13990)
!13994 = !DILocation(line: 2804, column: 23, scope: !13990)
!13995 = !DILocation(line: 2804, column: 31, scope: !13990)
!13996 = !DILocation(line: 2804, column: 8, scope: !13991)
!13997 = !DILocation(line: 2805, column: 12, scope: !13998)
!13998 = distinct !DILexicalBlock(scope: !13990, file: !3, line: 2804, column: 36)
!13999 = !DILocation(line: 2806, column: 5, scope: !13998)
!14000 = !DILocation(line: 2808, column: 4, scope: !13991)
!14001 = !DILocation(line: 2810, column: 4, scope: !13991)
!14002 = !DILocation(line: 2812, column: 13, scope: !13966)
!14003 = !DILocation(line: 2812, column: 10, scope: !13966)
!14004 = !DILocation(line: 2813, column: 12, scope: !13966)
!14005 = !DILocation(line: 2813, column: 9, scope: !13966)
!14006 = !DILocation(line: 2814, column: 2, scope: !13966)
!14007 = !DILocation(line: 2814, column: 11, scope: !13933)
!14008 = !DILocation(line: 2814, column: 17, scope: !13933)
!14009 = distinct !{!14009, !13963, !14010}
!14010 = !DILocation(line: 2814, column: 20, scope: !13933)
!14011 = !DILocation(line: 2815, column: 2, scope: !13933)
!14012 = !DILocation(line: 2816, column: 1, scope: !13933)
!14013 = distinct !DISubprogram(name: "drm_dp_msg_header_crc4", scope: !3, file: !3, line: 194, type: !14014, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14014 = !DISubroutineType(types: !14015)
!14015 = !{!364, !14016, !1023}
!14016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14017, size: 64)
!14017 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5159)
!14018 = !DILocalVariable(name: "data", arg: 1, scope: !14013, file: !3, line: 194, type: !14016)
!14019 = !DILocation(line: 194, column: 49, scope: !14013)
!14020 = !DILocalVariable(name: "num_nibbles", arg: 2, scope: !14013, file: !3, line: 194, type: !1023)
!14021 = !DILocation(line: 194, column: 62, scope: !14013)
!14022 = !DILocalVariable(name: "bitmask", scope: !14013, file: !3, line: 196, type: !364)
!14023 = !DILocation(line: 196, column: 5, scope: !14013)
!14024 = !DILocalVariable(name: "bitshift", scope: !14013, file: !3, line: 197, type: !364)
!14025 = !DILocation(line: 197, column: 5, scope: !14013)
!14026 = !DILocalVariable(name: "array_index", scope: !14013, file: !3, line: 198, type: !364)
!14027 = !DILocation(line: 198, column: 5, scope: !14013)
!14028 = !DILocalVariable(name: "number_of_bits", scope: !14013, file: !3, line: 199, type: !115)
!14029 = !DILocation(line: 199, column: 6, scope: !14013)
!14030 = !DILocation(line: 199, column: 23, scope: !14013)
!14031 = !DILocation(line: 199, column: 35, scope: !14013)
!14032 = !DILocalVariable(name: "remainder", scope: !14013, file: !3, line: 200, type: !364)
!14033 = !DILocation(line: 200, column: 5, scope: !14013)
!14034 = !DILocation(line: 202, column: 2, scope: !14013)
!14035 = !DILocation(line: 202, column: 9, scope: !14013)
!14036 = !DILocation(line: 202, column: 24, scope: !14013)
!14037 = !DILocation(line: 203, column: 17, scope: !14038)
!14038 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 202, column: 30)
!14039 = !DILocation(line: 204, column: 13, scope: !14038)
!14040 = !DILocation(line: 205, column: 17, scope: !14038)
!14041 = !DILocation(line: 205, column: 22, scope: !14038)
!14042 = !DILocation(line: 205, column: 37, scope: !14038)
!14043 = !DILocation(line: 205, column: 35, scope: !14038)
!14044 = !DILocation(line: 205, column: 49, scope: !14038)
!14045 = !DILocation(line: 205, column: 46, scope: !14038)
!14046 = !DILocation(line: 205, column: 13, scope: !14038)
!14047 = !DILocation(line: 206, column: 11, scope: !14038)
!14048 = !DILocation(line: 207, column: 11, scope: !14038)
!14049 = !DILocation(line: 208, column: 7, scope: !14050)
!14050 = distinct !DILexicalBlock(scope: !14038, file: !3, line: 208, column: 7)
!14051 = !DILocation(line: 208, column: 15, scope: !14050)
!14052 = !DILocation(line: 208, column: 7, scope: !14038)
!14053 = !DILocation(line: 209, column: 12, scope: !14054)
!14054 = distinct !DILexicalBlock(scope: !14050, file: !3, line: 208, column: 21)
!14055 = !DILocation(line: 210, column: 13, scope: !14054)
!14056 = !DILocation(line: 211, column: 15, scope: !14054)
!14057 = !DILocation(line: 212, column: 3, scope: !14054)
!14058 = !DILocation(line: 213, column: 8, scope: !14059)
!14059 = distinct !DILexicalBlock(scope: !14038, file: !3, line: 213, column: 7)
!14060 = !DILocation(line: 213, column: 18, scope: !14059)
!14061 = !DILocation(line: 213, column: 26, scope: !14059)
!14062 = !DILocation(line: 213, column: 7, scope: !14038)
!14063 = !DILocation(line: 214, column: 14, scope: !14059)
!14064 = !DILocation(line: 214, column: 4, scope: !14059)
!14065 = distinct !{!14065, !14034, !14066}
!14066 = !DILocation(line: 215, column: 2, scope: !14013)
!14067 = !DILocation(line: 217, column: 17, scope: !14013)
!14068 = !DILocation(line: 218, column: 2, scope: !14013)
!14069 = !DILocation(line: 218, column: 9, scope: !14013)
!14070 = !DILocation(line: 218, column: 24, scope: !14013)
!14071 = !DILocation(line: 219, column: 17, scope: !14072)
!14072 = distinct !DILexicalBlock(scope: !14013, file: !3, line: 218, column: 30)
!14073 = !DILocation(line: 220, column: 13, scope: !14072)
!14074 = !DILocation(line: 221, column: 8, scope: !14075)
!14075 = distinct !DILexicalBlock(scope: !14072, file: !3, line: 221, column: 7)
!14076 = !DILocation(line: 221, column: 18, scope: !14075)
!14077 = !DILocation(line: 221, column: 26, scope: !14075)
!14078 = !DILocation(line: 221, column: 7, scope: !14072)
!14079 = !DILocation(line: 222, column: 14, scope: !14075)
!14080 = !DILocation(line: 222, column: 4, scope: !14075)
!14081 = distinct !{!14081, !14068, !14082}
!14082 = !DILocation(line: 223, column: 2, scope: !14013)
!14083 = !DILocation(line: 225, column: 9, scope: !14013)
!14084 = !DILocation(line: 225, column: 2, scope: !14013)
!14085 = distinct !DISubprogram(name: "drm_dp_msg_data_crc4", scope: !3, file: !3, line: 228, type: !14086, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14086 = !DISubroutineType(types: !14087)
!14087 = !{!364, !14016, !364}
!14088 = !DILocalVariable(name: "data", arg: 1, scope: !14085, file: !3, line: 228, type: !14016)
!14089 = !DILocation(line: 228, column: 47, scope: !14085)
!14090 = !DILocalVariable(name: "number_of_bytes", arg: 2, scope: !14085, file: !3, line: 228, type: !364)
!14091 = !DILocation(line: 228, column: 56, scope: !14085)
!14092 = !DILocalVariable(name: "bitmask", scope: !14085, file: !3, line: 230, type: !364)
!14093 = !DILocation(line: 230, column: 5, scope: !14085)
!14094 = !DILocalVariable(name: "bitshift", scope: !14085, file: !3, line: 231, type: !364)
!14095 = !DILocation(line: 231, column: 5, scope: !14085)
!14096 = !DILocalVariable(name: "array_index", scope: !14085, file: !3, line: 232, type: !364)
!14097 = !DILocation(line: 232, column: 5, scope: !14085)
!14098 = !DILocalVariable(name: "number_of_bits", scope: !14085, file: !3, line: 233, type: !115)
!14099 = !DILocation(line: 233, column: 6, scope: !14085)
!14100 = !DILocation(line: 233, column: 23, scope: !14085)
!14101 = !DILocation(line: 233, column: 39, scope: !14085)
!14102 = !DILocalVariable(name: "remainder", scope: !14085, file: !3, line: 234, type: !381)
!14103 = !DILocation(line: 234, column: 6, scope: !14085)
!14104 = !DILocation(line: 236, column: 2, scope: !14085)
!14105 = !DILocation(line: 236, column: 9, scope: !14085)
!14106 = !DILocation(line: 236, column: 24, scope: !14085)
!14107 = !DILocation(line: 237, column: 17, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14085, file: !3, line: 236, column: 30)
!14109 = !DILocation(line: 238, column: 13, scope: !14108)
!14110 = !DILocation(line: 239, column: 17, scope: !14108)
!14111 = !DILocation(line: 239, column: 22, scope: !14108)
!14112 = !DILocation(line: 239, column: 37, scope: !14108)
!14113 = !DILocation(line: 239, column: 35, scope: !14108)
!14114 = !DILocation(line: 239, column: 49, scope: !14108)
!14115 = !DILocation(line: 239, column: 46, scope: !14108)
!14116 = !DILocation(line: 239, column: 13, scope: !14108)
!14117 = !DILocation(line: 240, column: 11, scope: !14108)
!14118 = !DILocation(line: 241, column: 11, scope: !14108)
!14119 = !DILocation(line: 242, column: 7, scope: !14120)
!14120 = distinct !DILexicalBlock(scope: !14108, file: !3, line: 242, column: 7)
!14121 = !DILocation(line: 242, column: 15, scope: !14120)
!14122 = !DILocation(line: 242, column: 7, scope: !14108)
!14123 = !DILocation(line: 243, column: 12, scope: !14124)
!14124 = distinct !DILexicalBlock(scope: !14120, file: !3, line: 242, column: 21)
!14125 = !DILocation(line: 244, column: 13, scope: !14124)
!14126 = !DILocation(line: 245, column: 15, scope: !14124)
!14127 = !DILocation(line: 246, column: 3, scope: !14124)
!14128 = !DILocation(line: 247, column: 8, scope: !14129)
!14129 = distinct !DILexicalBlock(scope: !14108, file: !3, line: 247, column: 7)
!14130 = !DILocation(line: 247, column: 18, scope: !14129)
!14131 = !DILocation(line: 247, column: 27, scope: !14129)
!14132 = !DILocation(line: 247, column: 7, scope: !14108)
!14133 = !DILocation(line: 248, column: 14, scope: !14129)
!14134 = !DILocation(line: 248, column: 4, scope: !14129)
!14135 = distinct !{!14135, !14104, !14136}
!14136 = !DILocation(line: 249, column: 2, scope: !14085)
!14137 = !DILocation(line: 251, column: 17, scope: !14085)
!14138 = !DILocation(line: 252, column: 2, scope: !14085)
!14139 = !DILocation(line: 252, column: 9, scope: !14085)
!14140 = !DILocation(line: 252, column: 24, scope: !14085)
!14141 = !DILocation(line: 253, column: 17, scope: !14142)
!14142 = distinct !DILexicalBlock(scope: !14085, file: !3, line: 252, column: 30)
!14143 = !DILocation(line: 254, column: 13, scope: !14142)
!14144 = !DILocation(line: 255, column: 8, scope: !14145)
!14145 = distinct !DILexicalBlock(scope: !14142, file: !3, line: 255, column: 7)
!14146 = !DILocation(line: 255, column: 18, scope: !14145)
!14147 = !DILocation(line: 255, column: 27, scope: !14145)
!14148 = !DILocation(line: 255, column: 7, scope: !14142)
!14149 = !DILocation(line: 256, column: 14, scope: !14145)
!14150 = !DILocation(line: 256, column: 4, scope: !14145)
!14151 = distinct !{!14151, !14138, !14152}
!14152 = !DILocation(line: 257, column: 2, scope: !14085)
!14153 = !DILocation(line: 259, column: 9, scope: !14085)
!14154 = !DILocation(line: 259, column: 19, scope: !14085)
!14155 = !DILocation(line: 259, column: 2, scope: !14085)
!14156 = distinct !DISubprogram(name: "__list_del_entry", scope: !10346, file: !10346, line: 130, type: !12197, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14157 = !DILocalVariable(name: "entry", arg: 1, scope: !14156, file: !10346, line: 130, type: !388)
!14158 = !DILocation(line: 130, column: 55, scope: !14156)
!14159 = !DILocation(line: 132, column: 30, scope: !14160)
!14160 = distinct !DILexicalBlock(scope: !14156, file: !10346, line: 132, column: 6)
!14161 = !DILocation(line: 132, column: 7, scope: !14160)
!14162 = !DILocation(line: 132, column: 6, scope: !14156)
!14163 = !DILocation(line: 133, column: 3, scope: !14160)
!14164 = !DILocation(line: 135, column: 13, scope: !14156)
!14165 = !DILocation(line: 135, column: 20, scope: !14156)
!14166 = !DILocation(line: 135, column: 26, scope: !14156)
!14167 = !DILocation(line: 135, column: 33, scope: !14156)
!14168 = !DILocation(line: 135, column: 2, scope: !14156)
!14169 = !DILocation(line: 136, column: 1, scope: !14156)
!14170 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !10346, file: !10346, line: 51, type: !14171, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14171 = !DISubroutineType(types: !14172)
!14172 = !{!370, !388}
!14173 = !DILocalVariable(name: "entry", arg: 1, scope: !14170, file: !10346, line: 51, type: !388)
!14174 = !DILocation(line: 51, column: 61, scope: !14170)
!14175 = !DILocation(line: 53, column: 2, scope: !14170)
!14176 = distinct !DISubprogram(name: "__list_del", scope: !10346, file: !10346, line: 110, type: !10347, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14177 = !DILocalVariable(name: "prev", arg: 1, scope: !14176, file: !10346, line: 110, type: !388)
!14178 = !DILocation(line: 110, column: 50, scope: !14176)
!14179 = !DILocalVariable(name: "next", arg: 2, scope: !14176, file: !10346, line: 110, type: !388)
!14180 = !DILocation(line: 110, column: 75, scope: !14176)
!14181 = !DILocation(line: 112, column: 15, scope: !14176)
!14182 = !DILocation(line: 112, column: 2, scope: !14176)
!14183 = !DILocation(line: 112, column: 8, scope: !14176)
!14184 = !DILocation(line: 112, column: 13, scope: !14176)
!14185 = !DILocation(line: 113, column: 2, scope: !14176)
!14186 = !DILocation(line: 113, column: 2, scope: !14187)
!14187 = distinct !DILexicalBlock(scope: !14176, file: !10346, line: 113, column: 2)
!14188 = !DILocation(line: 113, column: 2, scope: !14189)
!14189 = distinct !DILexicalBlock(scope: !14187, file: !10346, line: 113, column: 2)
!14190 = !DILocation(line: 113, column: 2, scope: !14191)
!14191 = distinct !DILexicalBlock(scope: !14187, file: !10346, line: 113, column: 2)
!14192 = !DILocation(line: 114, column: 1, scope: !14176)
!14193 = distinct !DISubprogram(name: "check_txmsg_state", scope: !3, file: !3, line: 1276, type: !14194, scopeLine: 1278, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14194 = !DISubroutineType(types: !14195)
!14195 = !{!370, !406, !6003}
!14196 = !DILocalVariable(name: "mgr", arg: 1, scope: !14193, file: !3, line: 1276, type: !406)
!14197 = !DILocation(line: 1276, column: 63, scope: !14193)
!14198 = !DILocalVariable(name: "txmsg", arg: 2, scope: !14193, file: !3, line: 1277, type: !6003)
!14199 = !DILocation(line: 1277, column: 41, scope: !14193)
!14200 = !DILocalVariable(name: "state", scope: !14193, file: !3, line: 1279, type: !7)
!14201 = !DILocation(line: 1279, column: 15, scope: !14193)
!14202 = !DILocation(line: 1286, column: 10, scope: !14203)
!14203 = distinct !DILexicalBlock(scope: !14193, file: !3, line: 1286, column: 10)
!14204 = !DILocation(line: 1286, column: 10, scope: !14205)
!14205 = distinct !DILexicalBlock(scope: !14203, file: !3, line: 1286, column: 10)
!14206 = !DILocation(line: 1286, column: 8, scope: !14193)
!14207 = !DILocation(line: 1287, column: 10, scope: !14193)
!14208 = !DILocation(line: 1287, column: 16, scope: !14193)
!14209 = !DILocation(line: 1287, column: 41, scope: !14193)
!14210 = !DILocation(line: 1288, column: 3, scope: !14193)
!14211 = !DILocation(line: 1288, column: 9, scope: !14193)
!14212 = !DILocation(line: 1287, column: 2, scope: !14193)
!14213 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !8231, file: !8231, line: 308, type: !8232, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14214 = !DILocalVariable(name: "m", arg: 1, scope: !14213, file: !8231, line: 308, type: !2156)
!14215 = !DILocation(line: 308, column: 66, scope: !14213)
!14216 = !DILocation(line: 310, column: 10, scope: !14213)
!14217 = !DILocation(line: 310, column: 12, scope: !14213)
!14218 = !DILocation(line: 310, column: 34, scope: !14213)
!14219 = !DILocation(line: 310, column: 39, scope: !14213)
!14220 = !DILocation(line: 310, column: 2, scope: !14213)
!14221 = distinct !DISubprogram(name: "drm_dp_payload_send_msg", scope: !3, file: !3, line: 3164, type: !14222, scopeLine: 3168, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14222 = !DISubroutineType(types: !14223)
!14223 = !{!115, !406, !345, !115, !115}
!14224 = !DILocalVariable(name: "mgr", arg: 1, scope: !14221, file: !3, line: 3164, type: !406)
!14225 = !DILocation(line: 3164, column: 68, scope: !14221)
!14226 = !DILocalVariable(name: "port", arg: 2, scope: !14221, file: !3, line: 3165, type: !345)
!14227 = !DILocation(line: 3165, column: 32, scope: !14221)
!14228 = !DILocalVariable(name: "id", arg: 3, scope: !14221, file: !3, line: 3166, type: !115)
!14229 = !DILocation(line: 3166, column: 12, scope: !14221)
!14230 = !DILocalVariable(name: "pbn", arg: 4, scope: !14221, file: !3, line: 3167, type: !115)
!14231 = !DILocation(line: 3167, column: 12, scope: !14221)
!14232 = !DILocalVariable(name: "txmsg", scope: !14221, file: !3, line: 3169, type: !6003)
!14233 = !DILocation(line: 3169, column: 33, scope: !14221)
!14234 = !DILocalVariable(name: "mstb", scope: !14221, file: !3, line: 3170, type: !391)
!14235 = !DILocation(line: 3170, column: 28, scope: !14221)
!14236 = !DILocalVariable(name: "ret", scope: !14221, file: !3, line: 3171, type: !115)
!14237 = !DILocation(line: 3171, column: 6, scope: !14221)
!14238 = !DILocalVariable(name: "port_num", scope: !14221, file: !3, line: 3171, type: !115)
!14239 = !DILocation(line: 3171, column: 11, scope: !14221)
!14240 = !DILocalVariable(name: "sinks", scope: !14221, file: !3, line: 3172, type: !5839)
!14241 = !DILocation(line: 3172, column: 5, scope: !14221)
!14242 = !DILocalVariable(name: "i", scope: !14221, file: !3, line: 3173, type: !115)
!14243 = !DILocation(line: 3173, column: 6, scope: !14221)
!14244 = !DILocation(line: 3175, column: 13, scope: !14221)
!14245 = !DILocation(line: 3175, column: 19, scope: !14221)
!14246 = !DILocation(line: 3175, column: 11, scope: !14221)
!14247 = !DILocation(line: 3176, column: 48, scope: !14221)
!14248 = !DILocation(line: 3176, column: 53, scope: !14221)
!14249 = !DILocation(line: 3176, column: 59, scope: !14221)
!14250 = !DILocation(line: 3176, column: 9, scope: !14221)
!14251 = !DILocation(line: 3176, column: 7, scope: !14221)
!14252 = !DILocation(line: 3177, column: 7, scope: !14253)
!14253 = distinct !DILexicalBlock(scope: !14221, file: !3, line: 3177, column: 6)
!14254 = !DILocation(line: 3177, column: 6, scope: !14221)
!14255 = !DILocation(line: 3178, column: 50, scope: !14256)
!14256 = distinct !DILexicalBlock(scope: !14253, file: !3, line: 3177, column: 13)
!14257 = !DILocation(line: 3179, column: 15, scope: !14256)
!14258 = !DILocation(line: 3179, column: 21, scope: !14256)
!14259 = !DILocation(line: 3178, column: 10, scope: !14256)
!14260 = !DILocation(line: 3178, column: 8, scope: !14256)
!14261 = !DILocation(line: 3182, column: 8, scope: !14262)
!14262 = distinct !DILexicalBlock(scope: !14256, file: !3, line: 3182, column: 7)
!14263 = !DILocation(line: 3182, column: 7, scope: !14256)
!14264 = !DILocation(line: 3183, column: 4, scope: !14262)
!14265 = !DILocation(line: 3184, column: 2, scope: !14256)
!14266 = !DILocation(line: 3186, column: 10, scope: !14221)
!14267 = !DILocation(line: 3186, column: 8, scope: !14221)
!14268 = !DILocation(line: 3187, column: 7, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14221, file: !3, line: 3187, column: 6)
!14270 = !DILocation(line: 3187, column: 6, scope: !14221)
!14271 = !DILocation(line: 3188, column: 7, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14269, file: !3, line: 3187, column: 14)
!14273 = !DILocation(line: 3189, column: 3, scope: !14272)
!14274 = !DILocation(line: 3192, column: 9, scope: !14275)
!14275 = distinct !DILexicalBlock(scope: !14221, file: !3, line: 3192, column: 2)
!14276 = !DILocation(line: 3192, column: 7, scope: !14275)
!14277 = !DILocation(line: 3192, column: 14, scope: !14278)
!14278 = distinct !DILexicalBlock(scope: !14275, file: !3, line: 3192, column: 2)
!14279 = !DILocation(line: 3192, column: 18, scope: !14278)
!14280 = !DILocation(line: 3192, column: 24, scope: !14278)
!14281 = !DILocation(line: 3192, column: 16, scope: !14278)
!14282 = !DILocation(line: 3192, column: 2, scope: !14275)
!14283 = !DILocation(line: 3193, column: 14, scope: !14278)
!14284 = !DILocation(line: 3193, column: 9, scope: !14278)
!14285 = !DILocation(line: 3193, column: 3, scope: !14278)
!14286 = !DILocation(line: 3193, column: 12, scope: !14278)
!14287 = !DILocation(line: 3192, column: 42, scope: !14278)
!14288 = !DILocation(line: 3192, column: 2, scope: !14278)
!14289 = distinct !{!14289, !14282, !14290}
!14290 = !DILocation(line: 3193, column: 14, scope: !14275)
!14291 = !DILocation(line: 3195, column: 15, scope: !14221)
!14292 = !DILocation(line: 3195, column: 2, scope: !14221)
!14293 = !DILocation(line: 3195, column: 9, scope: !14221)
!14294 = !DILocation(line: 3195, column: 13, scope: !14221)
!14295 = !DILocation(line: 3196, column: 25, scope: !14221)
!14296 = !DILocation(line: 3196, column: 32, scope: !14221)
!14297 = !DILocation(line: 3197, column: 11, scope: !14221)
!14298 = !DILocation(line: 3198, column: 11, scope: !14221)
!14299 = !DILocation(line: 3198, column: 16, scope: !14221)
!14300 = !DILocation(line: 3198, column: 22, scope: !14221)
!14301 = !DILocation(line: 3198, column: 39, scope: !14221)
!14302 = !DILocation(line: 3196, column: 2, scope: !14221)
!14303 = !DILocation(line: 3200, column: 23, scope: !14221)
!14304 = !DILocation(line: 3200, column: 28, scope: !14221)
!14305 = !DILocation(line: 3200, column: 2, scope: !14221)
!14306 = !DILocation(line: 3210, column: 33, scope: !14221)
!14307 = !DILocation(line: 3210, column: 39, scope: !14221)
!14308 = !DILocation(line: 3210, column: 8, scope: !14221)
!14309 = !DILocation(line: 3210, column: 6, scope: !14221)
!14310 = !DILocation(line: 3211, column: 6, scope: !14311)
!14311 = distinct !DILexicalBlock(scope: !14221, file: !3, line: 3211, column: 6)
!14312 = !DILocation(line: 3211, column: 10, scope: !14311)
!14313 = !DILocation(line: 3211, column: 6, scope: !14221)
!14314 = !DILocation(line: 3212, column: 7, scope: !14315)
!14315 = distinct !DILexicalBlock(scope: !14316, file: !3, line: 3212, column: 7)
!14316 = distinct !DILexicalBlock(scope: !14311, file: !3, line: 3211, column: 15)
!14317 = !DILocation(line: 3212, column: 14, scope: !14315)
!14318 = !DILocation(line: 3212, column: 20, scope: !14315)
!14319 = !DILocation(line: 3212, column: 31, scope: !14315)
!14320 = !DILocation(line: 3212, column: 7, scope: !14316)
!14321 = !DILocation(line: 3213, column: 8, scope: !14315)
!14322 = !DILocation(line: 3213, column: 4, scope: !14315)
!14323 = !DILocation(line: 3215, column: 8, scope: !14315)
!14324 = !DILocation(line: 3216, column: 2, scope: !14316)
!14325 = !DILocation(line: 3217, column: 8, scope: !14221)
!14326 = !DILocation(line: 3217, column: 2, scope: !14221)
!14327 = !DILabel(scope: !14221, name: "fail_put", file: !3, line: 3218)
!14328 = !DILocation(line: 3218, column: 1, scope: !14221)
!14329 = !DILocation(line: 3219, column: 31, scope: !14221)
!14330 = !DILocation(line: 3219, column: 2, scope: !14221)
!14331 = !DILocation(line: 3220, column: 9, scope: !14221)
!14332 = !DILocation(line: 3220, column: 2, scope: !14221)
!14333 = !DILocation(line: 3221, column: 1, scope: !14221)
!14334 = distinct !DISubprogram(name: "drm_dp_mst_topology_get_mstb_validated", scope: !3, file: !3, line: 1976, type: !14335, scopeLine: 1978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14335 = !DISubroutineType(types: !14336)
!14336 = !{!391, !406, !391}
!14337 = !DILocalVariable(name: "mgr", arg: 1, scope: !14334, file: !3, line: 1976, type: !406)
!14338 = !DILocation(line: 1976, column: 72, scope: !14334)
!14339 = !DILocalVariable(name: "mstb", arg: 2, scope: !14334, file: !3, line: 1977, type: !391)
!14340 = !DILocation(line: 1977, column: 38, scope: !14334)
!14341 = !DILocalVariable(name: "rmstb", scope: !14334, file: !3, line: 1979, type: !391)
!14342 = !DILocation(line: 1979, column: 28, scope: !14334)
!14343 = !DILocation(line: 1981, column: 14, scope: !14334)
!14344 = !DILocation(line: 1981, column: 19, scope: !14334)
!14345 = !DILocation(line: 1981, column: 2, scope: !14334)
!14346 = !DILocation(line: 1982, column: 6, scope: !14347)
!14347 = distinct !DILexicalBlock(scope: !14334, file: !3, line: 1982, column: 6)
!14348 = !DILocation(line: 1982, column: 11, scope: !14347)
!14349 = !DILocation(line: 1982, column: 6, scope: !14334)
!14350 = !DILocation(line: 1984, column: 7, scope: !14351)
!14351 = distinct !DILexicalBlock(scope: !14347, file: !3, line: 1982, column: 24)
!14352 = !DILocation(line: 1984, column: 12, scope: !14351)
!14353 = !DILocation(line: 1984, column: 25, scope: !14351)
!14354 = !DILocation(line: 1983, column: 11, scope: !14351)
!14355 = !DILocation(line: 1983, column: 9, scope: !14351)
!14356 = !DILocation(line: 1986, column: 7, scope: !14357)
!14357 = distinct !DILexicalBlock(scope: !14351, file: !3, line: 1986, column: 7)
!14358 = !DILocation(line: 1986, column: 13, scope: !14357)
!14359 = !DILocation(line: 1986, column: 50, scope: !14357)
!14360 = !DILocation(line: 1986, column: 17, scope: !14357)
!14361 = !DILocation(line: 1986, column: 7, scope: !14351)
!14362 = !DILocation(line: 1987, column: 10, scope: !14357)
!14363 = !DILocation(line: 1987, column: 4, scope: !14357)
!14364 = !DILocation(line: 1988, column: 2, scope: !14351)
!14365 = !DILocation(line: 1989, column: 16, scope: !14334)
!14366 = !DILocation(line: 1989, column: 21, scope: !14334)
!14367 = !DILocation(line: 1989, column: 2, scope: !14334)
!14368 = !DILocation(line: 1990, column: 9, scope: !14334)
!14369 = !DILocation(line: 1990, column: 2, scope: !14334)
!14370 = distinct !DISubprogram(name: "drm_dp_get_last_connected_port_and_mstb", scope: !3, file: !3, line: 3135, type: !14371, scopeLine: 3138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14371 = !DISubroutineType(types: !14372)
!14372 = !{!391, !406, !391, !1011}
!14373 = !DILocalVariable(name: "mgr", arg: 1, scope: !14370, file: !3, line: 3135, type: !406)
!14374 = !DILocation(line: 3135, column: 73, scope: !14370)
!14375 = !DILocalVariable(name: "mstb", arg: 2, scope: !14370, file: !3, line: 3136, type: !391)
!14376 = !DILocation(line: 3136, column: 32, scope: !14370)
!14377 = !DILocalVariable(name: "port_num", arg: 3, scope: !14370, file: !3, line: 3137, type: !1011)
!14378 = !DILocation(line: 3137, column: 11, scope: !14370)
!14379 = !DILocalVariable(name: "rmstb", scope: !14370, file: !3, line: 3139, type: !391)
!14380 = !DILocation(line: 3139, column: 28, scope: !14370)
!14381 = !DILocalVariable(name: "found_port", scope: !14370, file: !3, line: 3140, type: !345)
!14382 = !DILocation(line: 3140, column: 26, scope: !14370)
!14383 = !DILocation(line: 3142, column: 14, scope: !14370)
!14384 = !DILocation(line: 3142, column: 19, scope: !14370)
!14385 = !DILocation(line: 3142, column: 2, scope: !14370)
!14386 = !DILocation(line: 3143, column: 7, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14370, file: !3, line: 3143, column: 6)
!14388 = !DILocation(line: 3143, column: 12, scope: !14387)
!14389 = !DILocation(line: 3143, column: 6, scope: !14370)
!14390 = !DILocation(line: 3144, column: 3, scope: !14387)
!14391 = !DILocation(line: 3146, column: 2, scope: !14370)
!14392 = !DILocation(line: 3147, column: 55, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14370, file: !3, line: 3146, column: 5)
!14394 = !DILocation(line: 3147, column: 16, scope: !14393)
!14395 = !DILocation(line: 3147, column: 14, scope: !14393)
!14396 = !DILocation(line: 3148, column: 8, scope: !14397)
!14397 = distinct !DILexicalBlock(scope: !14393, file: !3, line: 3148, column: 7)
!14398 = !DILocation(line: 3148, column: 7, scope: !14393)
!14399 = !DILocation(line: 3149, column: 4, scope: !14397)
!14400 = !DILocation(line: 3151, column: 40, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14393, file: !3, line: 3151, column: 7)
!14402 = !DILocation(line: 3151, column: 52, scope: !14401)
!14403 = !DILocation(line: 3151, column: 7, scope: !14401)
!14404 = !DILocation(line: 3151, column: 7, scope: !14393)
!14405 = !DILocation(line: 3152, column: 12, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14401, file: !3, line: 3151, column: 61)
!14407 = !DILocation(line: 3152, column: 24, scope: !14406)
!14408 = !DILocation(line: 3152, column: 10, scope: !14406)
!14409 = !DILocation(line: 3153, column: 16, scope: !14406)
!14410 = !DILocation(line: 3153, column: 28, scope: !14406)
!14411 = !DILocation(line: 3153, column: 5, scope: !14406)
!14412 = !DILocation(line: 3153, column: 14, scope: !14406)
!14413 = !DILocation(line: 3154, column: 3, scope: !14406)
!14414 = !DILocation(line: 3156, column: 11, scope: !14415)
!14415 = distinct !DILexicalBlock(scope: !14401, file: !3, line: 3154, column: 10)
!14416 = !DILocation(line: 3156, column: 23, scope: !14415)
!14417 = !DILocation(line: 3156, column: 9, scope: !14415)
!14418 = !DILocation(line: 3158, column: 2, scope: !14393)
!14419 = !DILocation(line: 3158, column: 12, scope: !14370)
!14420 = !DILocation(line: 3158, column: 11, scope: !14370)
!14421 = distinct !{!14421, !14391, !14422}
!14422 = !DILocation(line: 3158, column: 17, scope: !14370)
!14423 = !DILabel(scope: !14370, name: "out", file: !3, line: 3159)
!14424 = !DILocation(line: 3159, column: 1, scope: !14370)
!14425 = !DILocation(line: 3160, column: 16, scope: !14370)
!14426 = !DILocation(line: 3160, column: 21, scope: !14370)
!14427 = !DILocation(line: 3160, column: 2, scope: !14370)
!14428 = !DILocation(line: 3161, column: 9, scope: !14370)
!14429 = !DILocation(line: 3161, column: 2, scope: !14370)
!14430 = distinct !DISubprogram(name: "build_allocate_payload", scope: !3, file: !3, line: 1171, type: !14431, scopeLine: 1176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14431 = !DISubroutineType(types: !14432)
!14432 = !{null, !6003, !115, !364, !380, !364, !6180}
!14433 = !DILocalVariable(name: "msg", arg: 1, scope: !14430, file: !3, line: 1171, type: !6003)
!14434 = !DILocation(line: 1171, column: 67, scope: !14430)
!14435 = !DILocalVariable(name: "port_num", arg: 2, scope: !14430, file: !3, line: 1172, type: !115)
!14436 = !DILocation(line: 1172, column: 12, scope: !14430)
!14437 = !DILocalVariable(name: "vcpi", arg: 3, scope: !14430, file: !3, line: 1173, type: !364)
!14438 = !DILocation(line: 1173, column: 11, scope: !14430)
!14439 = !DILocalVariable(name: "pbn", arg: 4, scope: !14430, file: !3, line: 1173, type: !380)
!14440 = !DILocation(line: 1173, column: 26, scope: !14430)
!14441 = !DILocalVariable(name: "number_sdp_streams", arg: 5, scope: !14430, file: !3, line: 1174, type: !364)
!14442 = !DILocation(line: 1174, column: 11, scope: !14430)
!14443 = !DILocalVariable(name: "sdp_stream_sink", arg: 6, scope: !14430, file: !3, line: 1175, type: !6180)
!14444 = !DILocation(line: 1175, column: 12, scope: !14430)
!14445 = !DILocalVariable(name: "req", scope: !14430, file: !3, line: 1177, type: !6128)
!14446 = !DILocation(line: 1177, column: 38, scope: !14430)
!14447 = !DILocation(line: 1179, column: 2, scope: !14430)
!14448 = !DILocation(line: 1180, column: 6, scope: !14430)
!14449 = !DILocation(line: 1180, column: 15, scope: !14430)
!14450 = !DILocation(line: 1181, column: 39, scope: !14430)
!14451 = !DILocation(line: 1181, column: 6, scope: !14430)
!14452 = !DILocation(line: 1181, column: 8, scope: !14430)
!14453 = !DILocation(line: 1181, column: 25, scope: !14430)
!14454 = !DILocation(line: 1181, column: 37, scope: !14430)
!14455 = !DILocation(line: 1182, column: 32, scope: !14430)
!14456 = !DILocation(line: 1182, column: 6, scope: !14430)
!14457 = !DILocation(line: 1182, column: 8, scope: !14430)
!14458 = !DILocation(line: 1182, column: 25, scope: !14430)
!14459 = !DILocation(line: 1182, column: 30, scope: !14430)
!14460 = !DILocation(line: 1183, column: 31, scope: !14430)
!14461 = !DILocation(line: 1183, column: 6, scope: !14430)
!14462 = !DILocation(line: 1183, column: 8, scope: !14430)
!14463 = !DILocation(line: 1183, column: 25, scope: !14430)
!14464 = !DILocation(line: 1183, column: 29, scope: !14430)
!14465 = !DILocation(line: 1184, column: 46, scope: !14430)
!14466 = !DILocation(line: 1184, column: 6, scope: !14430)
!14467 = !DILocation(line: 1184, column: 8, scope: !14430)
!14468 = !DILocation(line: 1184, column: 25, scope: !14430)
!14469 = !DILocation(line: 1184, column: 44, scope: !14430)
!14470 = !DILocation(line: 1185, column: 13, scope: !14430)
!14471 = !DILocation(line: 1185, column: 15, scope: !14430)
!14472 = !DILocation(line: 1185, column: 32, scope: !14430)
!14473 = !DILocation(line: 1185, column: 2, scope: !14430)
!14474 = !DILocation(line: 1185, column: 49, scope: !14430)
!14475 = !DILocation(line: 1186, column: 6, scope: !14430)
!14476 = !DILocation(line: 1187, column: 35, scope: !14430)
!14477 = !DILocation(line: 1187, column: 2, scope: !14430)
!14478 = !DILocation(line: 1188, column: 2, scope: !14430)
!14479 = !DILocation(line: 1188, column: 7, scope: !14430)
!14480 = !DILocation(line: 1188, column: 16, scope: !14430)
!14481 = !DILocation(line: 1189, column: 1, scope: !14430)
!14482 = distinct !DISubprogram(name: "drm_dp_mst_topology_get_mstb_validated_locked", scope: !3, file: !3, line: 1955, type: !14483, scopeLine: 1957, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14483 = !DISubroutineType(types: !14484)
!14484 = !{!391, !391, !391}
!14485 = !DILocalVariable(name: "mstb", arg: 1, scope: !14482, file: !3, line: 1955, type: !391)
!14486 = !DILocation(line: 1955, column: 73, scope: !14482)
!14487 = !DILocalVariable(name: "to_find", arg: 2, scope: !14482, file: !3, line: 1956, type: !391)
!14488 = !DILocation(line: 1956, column: 38, scope: !14482)
!14489 = !DILocalVariable(name: "port", scope: !14482, file: !3, line: 1958, type: !345)
!14490 = !DILocation(line: 1958, column: 26, scope: !14482)
!14491 = !DILocalVariable(name: "rmstb", scope: !14482, file: !3, line: 1959, type: !391)
!14492 = !DILocation(line: 1959, column: 28, scope: !14482)
!14493 = !DILocation(line: 1961, column: 6, scope: !14494)
!14494 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 1961, column: 6)
!14495 = !DILocation(line: 1961, column: 17, scope: !14494)
!14496 = !DILocation(line: 1961, column: 14, scope: !14494)
!14497 = !DILocation(line: 1961, column: 6, scope: !14482)
!14498 = !DILocation(line: 1962, column: 10, scope: !14494)
!14499 = !DILocation(line: 1962, column: 3, scope: !14494)
!14500 = !DILocalVariable(name: "__mptr", scope: !14501, file: !3, line: 1964, type: !344)
!14501 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 1964, column: 2)
!14502 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 1964, column: 2)
!14503 = !DILocation(line: 1964, column: 2, scope: !14501)
!14504 = !DILocation(line: 1964, column: 2, scope: !14505)
!14505 = distinct !DILexicalBlock(scope: !14501, file: !3, line: 1964, column: 2)
!14506 = !DILocation(line: 1964, column: 2, scope: !14502)
!14507 = !DILocation(line: 1964, column: 2, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 1964, column: 2)
!14509 = !DILocation(line: 1965, column: 7, scope: !14510)
!14510 = distinct !DILexicalBlock(scope: !14511, file: !3, line: 1965, column: 7)
!14511 = distinct !DILexicalBlock(scope: !14508, file: !3, line: 1964, column: 48)
!14512 = !DILocation(line: 1965, column: 13, scope: !14510)
!14513 = !DILocation(line: 1965, column: 7, scope: !14511)
!14514 = !DILocation(line: 1967, column: 8, scope: !14515)
!14515 = distinct !DILexicalBlock(scope: !14510, file: !3, line: 1965, column: 19)
!14516 = !DILocation(line: 1967, column: 14, scope: !14515)
!14517 = !DILocation(line: 1967, column: 20, scope: !14515)
!14518 = !DILocation(line: 1966, column: 12, scope: !14515)
!14519 = !DILocation(line: 1966, column: 10, scope: !14515)
!14520 = !DILocation(line: 1968, column: 8, scope: !14521)
!14521 = distinct !DILexicalBlock(scope: !14515, file: !3, line: 1968, column: 8)
!14522 = !DILocation(line: 1968, column: 8, scope: !14515)
!14523 = !DILocation(line: 1969, column: 12, scope: !14521)
!14524 = !DILocation(line: 1969, column: 5, scope: !14521)
!14525 = !DILocation(line: 1970, column: 3, scope: !14515)
!14526 = !DILocation(line: 1971, column: 2, scope: !14511)
!14527 = !DILocalVariable(name: "__mptr", scope: !14528, file: !3, line: 1964, type: !344)
!14528 = distinct !DILexicalBlock(scope: !14508, file: !3, line: 1964, column: 2)
!14529 = !DILocation(line: 1964, column: 2, scope: !14528)
!14530 = !DILocation(line: 1964, column: 2, scope: !14531)
!14531 = distinct !DILexicalBlock(scope: !14528, file: !3, line: 1964, column: 2)
!14532 = distinct !{!14532, !14506, !14533}
!14533 = !DILocation(line: 1971, column: 2, scope: !14502)
!14534 = !DILocation(line: 1972, column: 2, scope: !14482)
!14535 = !DILocation(line: 1973, column: 1, scope: !14482)
!14536 = distinct !DISubprogram(name: "drm_dp_mst_topology_try_get_mstb", scope: !3, file: !3, line: 1773, type: !14537, scopeLine: 1774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14537 = !DISubroutineType(types: !14538)
!14538 = !{!115, !391}
!14539 = !DILocalVariable(name: "mstb", arg: 1, scope: !14536, file: !3, line: 1773, type: !391)
!14540 = !DILocation(line: 1773, column: 60, scope: !14536)
!14541 = !DILocalVariable(name: "ret", scope: !14536, file: !3, line: 1775, type: !115)
!14542 = !DILocation(line: 1775, column: 6, scope: !14536)
!14543 = !DILocation(line: 1777, column: 28, scope: !14536)
!14544 = !DILocation(line: 1777, column: 34, scope: !14536)
!14545 = !DILocation(line: 1777, column: 2, scope: !14536)
!14546 = !DILocation(line: 1778, column: 30, scope: !14536)
!14547 = !DILocation(line: 1778, column: 36, scope: !14536)
!14548 = !DILocation(line: 1778, column: 8, scope: !14536)
!14549 = !DILocation(line: 1778, column: 6, scope: !14536)
!14550 = !DILocation(line: 1779, column: 6, scope: !14551)
!14551 = distinct !DILexicalBlock(scope: !14536, file: !3, line: 1779, column: 6)
!14552 = !DILocation(line: 1779, column: 6, scope: !14536)
!14553 = !DILocation(line: 1780, column: 3, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 1779, column: 11)
!14555 = !DILocation(line: 1783, column: 2, scope: !14554)
!14556 = !DILocation(line: 1785, column: 30, scope: !14536)
!14557 = !DILocation(line: 1785, column: 36, scope: !14536)
!14558 = !DILocation(line: 1785, column: 2, scope: !14536)
!14559 = !DILocation(line: 1787, column: 9, scope: !14536)
!14560 = !DILocation(line: 1787, column: 2, scope: !14536)
!14561 = distinct !DISubprogram(name: "drm_dp_get_last_connected_port_to_mstb", scope: !3, file: !3, line: 3115, type: !14562, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14562 = !DISubroutineType(types: !14563)
!14563 = !{!345, !391}
!14564 = !DILocalVariable(name: "mstb", arg: 1, scope: !14561, file: !3, line: 3115, type: !391)
!14565 = !DILocation(line: 3115, column: 97, scope: !14561)
!14566 = !DILocation(line: 3117, column: 7, scope: !14567)
!14567 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 3117, column: 6)
!14568 = !DILocation(line: 3117, column: 13, scope: !14567)
!14569 = !DILocation(line: 3117, column: 6, scope: !14561)
!14570 = !DILocation(line: 3118, column: 3, scope: !14567)
!14571 = !DILocation(line: 3120, column: 6, scope: !14572)
!14572 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 3120, column: 6)
!14573 = !DILocation(line: 3120, column: 12, scope: !14572)
!14574 = !DILocation(line: 3120, column: 25, scope: !14572)
!14575 = !DILocation(line: 3120, column: 33, scope: !14572)
!14576 = !DILocation(line: 3120, column: 30, scope: !14572)
!14577 = !DILocation(line: 3120, column: 6, scope: !14561)
!14578 = !DILocation(line: 3121, column: 10, scope: !14572)
!14579 = !DILocation(line: 3121, column: 16, scope: !14572)
!14580 = !DILocation(line: 3121, column: 3, scope: !14572)
!14581 = !DILocation(line: 3123, column: 48, scope: !14561)
!14582 = !DILocation(line: 3123, column: 54, scope: !14561)
!14583 = !DILocation(line: 3123, column: 67, scope: !14561)
!14584 = !DILocation(line: 3123, column: 9, scope: !14561)
!14585 = !DILocation(line: 3123, column: 2, scope: !14561)
!14586 = !DILocation(line: 3124, column: 1, scope: !14561)
!14587 = distinct !DISubprogram(name: "build_dpcd_read", scope: !3, file: !3, line: 2774, type: !14588, scopeLine: 2776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14588 = !DISubroutineType(types: !14589)
!14589 = !{null, !6003, !364, !468, !364}
!14590 = !DILocalVariable(name: "msg", arg: 1, scope: !14587, file: !3, line: 2774, type: !6003)
!14591 = !DILocation(line: 2774, column: 60, scope: !14587)
!14592 = !DILocalVariable(name: "port_num", arg: 2, scope: !14587, file: !3, line: 2775, type: !364)
!14593 = !DILocation(line: 2775, column: 11, scope: !14587)
!14594 = !DILocalVariable(name: "offset", arg: 3, scope: !14587, file: !3, line: 2775, type: !468)
!14595 = !DILocation(line: 2775, column: 25, scope: !14587)
!14596 = !DILocalVariable(name: "num_bytes", arg: 4, scope: !14587, file: !3, line: 2775, type: !364)
!14597 = !DILocation(line: 2775, column: 36, scope: !14587)
!14598 = !DILocalVariable(name: "req", scope: !14587, file: !3, line: 2777, type: !6128)
!14599 = !DILocation(line: 2777, column: 38, scope: !14587)
!14600 = !DILocation(line: 2779, column: 6, scope: !14587)
!14601 = !DILocation(line: 2779, column: 15, scope: !14587)
!14602 = !DILocation(line: 2780, column: 32, scope: !14587)
!14603 = !DILocation(line: 2780, column: 6, scope: !14587)
!14604 = !DILocation(line: 2780, column: 8, scope: !14587)
!14605 = !DILocation(line: 2780, column: 18, scope: !14587)
!14606 = !DILocation(line: 2780, column: 30, scope: !14587)
!14607 = !DILocation(line: 2781, column: 33, scope: !14587)
!14608 = !DILocation(line: 2781, column: 6, scope: !14587)
!14609 = !DILocation(line: 2781, column: 8, scope: !14587)
!14610 = !DILocation(line: 2781, column: 18, scope: !14587)
!14611 = !DILocation(line: 2781, column: 31, scope: !14587)
!14612 = !DILocation(line: 2782, column: 30, scope: !14587)
!14613 = !DILocation(line: 2782, column: 6, scope: !14587)
!14614 = !DILocation(line: 2782, column: 8, scope: !14587)
!14615 = !DILocation(line: 2782, column: 18, scope: !14587)
!14616 = !DILocation(line: 2782, column: 28, scope: !14587)
!14617 = !DILocation(line: 2783, column: 35, scope: !14587)
!14618 = !DILocation(line: 2783, column: 2, scope: !14587)
!14619 = !DILocation(line: 2784, column: 1, scope: !14587)
!14620 = distinct !DISubprogram(name: "build_dpcd_write", scope: !3, file: !3, line: 1130, type: !14621, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14621 = !DISubroutineType(types: !14622)
!14622 = !{null, !6003, !364, !468, !364, !6180}
!14623 = !DILocalVariable(name: "msg", arg: 1, scope: !14620, file: !3, line: 1130, type: !6003)
!14624 = !DILocation(line: 1130, column: 61, scope: !14620)
!14625 = !DILocalVariable(name: "port_num", arg: 2, scope: !14620, file: !3, line: 1131, type: !364)
!14626 = !DILocation(line: 1131, column: 12, scope: !14620)
!14627 = !DILocalVariable(name: "offset", arg: 3, scope: !14620, file: !3, line: 1131, type: !468)
!14628 = !DILocation(line: 1131, column: 26, scope: !14620)
!14629 = !DILocalVariable(name: "num_bytes", arg: 4, scope: !14620, file: !3, line: 1131, type: !364)
!14630 = !DILocation(line: 1131, column: 37, scope: !14620)
!14631 = !DILocalVariable(name: "bytes", arg: 5, scope: !14620, file: !3, line: 1131, type: !6180)
!14632 = !DILocation(line: 1131, column: 52, scope: !14620)
!14633 = !DILocalVariable(name: "req", scope: !14620, file: !3, line: 1133, type: !6128)
!14634 = !DILocation(line: 1133, column: 38, scope: !14620)
!14635 = !DILocation(line: 1135, column: 6, scope: !14620)
!14636 = !DILocation(line: 1135, column: 15, scope: !14620)
!14637 = !DILocation(line: 1136, column: 33, scope: !14620)
!14638 = !DILocation(line: 1136, column: 6, scope: !14620)
!14639 = !DILocation(line: 1136, column: 8, scope: !14620)
!14640 = !DILocation(line: 1136, column: 19, scope: !14620)
!14641 = !DILocation(line: 1136, column: 31, scope: !14620)
!14642 = !DILocation(line: 1137, column: 34, scope: !14620)
!14643 = !DILocation(line: 1137, column: 6, scope: !14620)
!14644 = !DILocation(line: 1137, column: 8, scope: !14620)
!14645 = !DILocation(line: 1137, column: 19, scope: !14620)
!14646 = !DILocation(line: 1137, column: 32, scope: !14620)
!14647 = !DILocation(line: 1138, column: 31, scope: !14620)
!14648 = !DILocation(line: 1138, column: 6, scope: !14620)
!14649 = !DILocation(line: 1138, column: 8, scope: !14620)
!14650 = !DILocation(line: 1138, column: 19, scope: !14620)
!14651 = !DILocation(line: 1138, column: 29, scope: !14620)
!14652 = !DILocation(line: 1139, column: 27, scope: !14620)
!14653 = !DILocation(line: 1139, column: 6, scope: !14620)
!14654 = !DILocation(line: 1139, column: 8, scope: !14620)
!14655 = !DILocation(line: 1139, column: 19, scope: !14620)
!14656 = !DILocation(line: 1139, column: 25, scope: !14620)
!14657 = !DILocation(line: 1140, column: 35, scope: !14620)
!14658 = !DILocation(line: 1140, column: 2, scope: !14620)
!14659 = !DILocation(line: 1141, column: 1, scope: !14620)
!14660 = distinct !DISubprogram(name: "kref_init", scope: !351, file: !351, line: 29, type: !4517, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14661 = !DILocalVariable(name: "kref", arg: 1, scope: !14660, file: !351, line: 29, type: !4519)
!14662 = !DILocation(line: 29, column: 43, scope: !14660)
!14663 = !DILocation(line: 31, column: 16, scope: !14660)
!14664 = !DILocation(line: 31, column: 22, scope: !14660)
!14665 = !DILocation(line: 31, column: 2, scope: !14660)
!14666 = !DILocation(line: 32, column: 1, scope: !14660)
!14667 = distinct !DISubprogram(name: "refcount_set", scope: !320, file: !320, line: 134, type: !14668, scopeLine: 135, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14668 = !DISubroutineType(types: !14669)
!14669 = !{null, !12714, !115}
!14670 = !DILocalVariable(name: "v", arg: 1, scope: !14671, file: !12736, line: 39, type: !12739)
!14671 = distinct !DISubprogram(name: "arch_atomic_set", scope: !12736, file: !12736, line: 39, type: !14672, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14672 = !DISubroutineType(types: !14673)
!14673 = !{null, !12739, !115}
!14674 = !DILocation(line: 39, column: 55, scope: !14671, inlinedAt: !14675)
!14675 = distinct !DILocation(line: 46, column: 2, scope: !14676, inlinedAt: !14677)
!14676 = distinct !DISubprogram(name: "atomic_set", scope: !12743, file: !12743, line: 43, type: !14672, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14677 = distinct !DILocation(line: 136, column: 2, scope: !14667)
!14678 = !DILocalVariable(name: "i", arg: 2, scope: !14671, file: !12736, line: 39, type: !115)
!14679 = !DILocation(line: 39, column: 62, scope: !14671, inlinedAt: !14675)
!14680 = !DILocation(line: 84, column: 74, scope: !8890, inlinedAt: !14681)
!14681 = distinct !DILocation(line: 45, column: 2, scope: !14676, inlinedAt: !14677)
!14682 = !DILocation(line: 84, column: 84, scope: !8890, inlinedAt: !14681)
!14683 = !DILocalVariable(name: "v", arg: 1, scope: !14676, file: !12743, line: 43, type: !12739)
!14684 = !DILocation(line: 43, column: 22, scope: !14676, inlinedAt: !14677)
!14685 = !DILocalVariable(name: "i", arg: 2, scope: !14676, file: !12743, line: 43, type: !115)
!14686 = !DILocation(line: 43, column: 29, scope: !14676, inlinedAt: !14677)
!14687 = !DILocalVariable(name: "r", arg: 1, scope: !14667, file: !320, line: 134, type: !12714)
!14688 = !DILocation(line: 134, column: 45, scope: !14667)
!14689 = !DILocalVariable(name: "n", arg: 2, scope: !14667, file: !320, line: 134, type: !115)
!14690 = !DILocation(line: 134, column: 52, scope: !14667)
!14691 = !DILocation(line: 136, column: 14, scope: !14667)
!14692 = !DILocation(line: 136, column: 17, scope: !14667)
!14693 = !DILocation(line: 136, column: 23, scope: !14667)
!14694 = !DILocation(line: 45, column: 26, scope: !14676, inlinedAt: !14677)
!14695 = !DILocation(line: 86, column: 20, scope: !8890, inlinedAt: !14681)
!14696 = !DILocation(line: 86, column: 23, scope: !8890, inlinedAt: !14681)
!14697 = !DILocation(line: 86, column: 2, scope: !8890, inlinedAt: !14681)
!14698 = !DILocation(line: 87, column: 2, scope: !8890, inlinedAt: !14681)
!14699 = !DILocation(line: 46, column: 18, scope: !14676, inlinedAt: !14677)
!14700 = !DILocation(line: 46, column: 21, scope: !14676, inlinedAt: !14677)
!14701 = !DILocation(line: 41, column: 2, scope: !14702, inlinedAt: !14675)
!14702 = distinct !DILexicalBlock(scope: !14671, file: !12736, line: 41, column: 2)
!14703 = !DILocation(line: 137, column: 1, scope: !14667)
!14704 = distinct !DISubprogram(name: "drm_dp_destroy_mst_branch_device", scope: !3, file: !3, line: 1730, type: !4517, scopeLine: 1731, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14705 = !DILocalVariable(name: "kref", arg: 1, scope: !14704, file: !3, line: 1730, type: !4519)
!14706 = !DILocation(line: 1730, column: 59, scope: !14704)
!14707 = !DILocalVariable(name: "mstb", scope: !14704, file: !3, line: 1732, type: !391)
!14708 = !DILocation(line: 1732, column: 28, scope: !14704)
!14709 = !DILocalVariable(name: "__mptr", scope: !14710, file: !3, line: 1733, type: !344)
!14710 = distinct !DILexicalBlock(scope: !14704, file: !3, line: 1733, column: 3)
!14711 = !DILocation(line: 1733, column: 3, scope: !14710)
!14712 = !DILocation(line: 1733, column: 3, scope: !14713)
!14713 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 1733, column: 3)
!14714 = !DILocalVariable(name: "mgr", scope: !14704, file: !3, line: 1734, type: !406)
!14715 = !DILocation(line: 1734, column: 34, scope: !14704)
!14716 = !DILocation(line: 1734, column: 40, scope: !14704)
!14717 = !DILocation(line: 1734, column: 46, scope: !14704)
!14718 = !DILocation(line: 1736, column: 40, scope: !14704)
!14719 = !DILocation(line: 1736, column: 2, scope: !14704)
!14720 = !DILocation(line: 1738, column: 18, scope: !14704)
!14721 = !DILocation(line: 1738, column: 24, scope: !14704)
!14722 = !DILocation(line: 1738, column: 2, scope: !14704)
!14723 = !DILocation(line: 1744, column: 14, scope: !14704)
!14724 = !DILocation(line: 1744, column: 19, scope: !14704)
!14725 = !DILocation(line: 1744, column: 2, scope: !14704)
!14726 = !DILocation(line: 1745, column: 12, scope: !14704)
!14727 = !DILocation(line: 1745, column: 18, scope: !14704)
!14728 = !DILocation(line: 1745, column: 33, scope: !14704)
!14729 = !DILocation(line: 1745, column: 38, scope: !14704)
!14730 = !DILocation(line: 1745, column: 2, scope: !14704)
!14731 = !DILocation(line: 1746, column: 16, scope: !14704)
!14732 = !DILocation(line: 1746, column: 21, scope: !14704)
!14733 = !DILocation(line: 1746, column: 2, scope: !14704)
!14734 = !DILocation(line: 1747, column: 13, scope: !14704)
!14735 = !DILocation(line: 1747, column: 18, scope: !14704)
!14736 = !DILocation(line: 1747, column: 39, scope: !14704)
!14737 = !DILocation(line: 1747, column: 44, scope: !14704)
!14738 = !DILocation(line: 1747, column: 2, scope: !14704)
!14739 = !DILocation(line: 1748, column: 1, scope: !14704)
!14740 = distinct !DISubprogram(name: "drm_dp_mst_dump_mstb_topology_history", scope: !3, file: !3, line: 1723, type: !9377, scopeLine: 1723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14741 = !DILocalVariable(name: "mstb", arg: 1, scope: !14740, file: !3, line: 1723, type: !391)
!14742 = !DILocation(line: 1723, column: 65, scope: !14740)
!14743 = !DILocation(line: 1723, column: 72, scope: !14740)
!14744 = distinct !DISubprogram(name: "drm_dp_validate_guid", scope: !3, file: !3, line: 2758, type: !14745, scopeLine: 2760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14745 = !DISubroutineType(types: !14746)
!14746 = !{!370, !406, !6180}
!14747 = !DILocalVariable(name: "mgr", arg: 1, scope: !14744, file: !3, line: 2758, type: !406)
!14748 = !DILocation(line: 2758, column: 66, scope: !14744)
!14749 = !DILocalVariable(name: "guid", arg: 2, scope: !14744, file: !3, line: 2759, type: !6180)
!14750 = !DILocation(line: 2759, column: 10, scope: !14744)
!14751 = !DILocalVariable(name: "salt", scope: !14744, file: !3, line: 2761, type: !504)
!14752 = !DILocation(line: 2761, column: 6, scope: !14744)
!14753 = !DILocation(line: 2763, column: 17, scope: !14754)
!14754 = distinct !DILexicalBlock(scope: !14744, file: !3, line: 2763, column: 6)
!14755 = !DILocation(line: 2763, column: 6, scope: !14754)
!14756 = !DILocation(line: 2763, column: 6, scope: !14744)
!14757 = !DILocation(line: 2764, column: 3, scope: !14754)
!14758 = !DILocation(line: 2766, column: 9, scope: !14744)
!14759 = !DILocation(line: 2766, column: 7, scope: !14744)
!14760 = !DILocation(line: 2768, column: 10, scope: !14744)
!14761 = !DILocation(line: 2768, column: 2, scope: !14744)
!14762 = !DILocation(line: 2769, column: 10, scope: !14744)
!14763 = !DILocation(line: 2769, column: 2, scope: !14744)
!14764 = !DILocation(line: 2771, column: 2, scope: !14744)
!14765 = !DILocation(line: 2772, column: 1, scope: !14744)
!14766 = distinct !DISubprogram(name: "get_jiffies_64", scope: !8231, file: !8231, line: 85, type: !14767, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14767 = !DISubroutineType(types: !14768)
!14768 = !{!504}
!14769 = !DILocation(line: 87, column: 14, scope: !14766)
!14770 = !DILocation(line: 87, column: 2, scope: !14766)
!14771 = distinct !DISubprogram(name: "drm_dp_get_one_sb_msg", scope: !3, file: !3, line: 3873, type: !14772, scopeLine: 3875, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14772 = !DISubroutineType(types: !14773)
!14773 = !{!370, !406, !370, !14774}
!14774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !391, size: 64)
!14775 = !DILocalVariable(name: "mgr", arg: 1, scope: !14771, file: !3, line: 3873, type: !406)
!14776 = !DILocation(line: 3873, column: 55, scope: !14771)
!14777 = !DILocalVariable(name: "up", arg: 2, scope: !14771, file: !3, line: 3873, type: !370)
!14778 = !DILocation(line: 3873, column: 65, scope: !14771)
!14779 = !DILocalVariable(name: "mstb", arg: 3, scope: !14771, file: !3, line: 3874, type: !14774)
!14780 = !DILocation(line: 3874, column: 36, scope: !14771)
!14781 = !DILocalVariable(name: "len", scope: !14771, file: !3, line: 3876, type: !115)
!14782 = !DILocation(line: 3876, column: 6, scope: !14771)
!14783 = !DILocalVariable(name: "replyblock", scope: !14771, file: !3, line: 3877, type: !14784)
!14784 = !DICompositeType(tag: DW_TAG_array_type, baseType: !364, size: 256, elements: !809)
!14785 = !DILocation(line: 3877, column: 5, scope: !14771)
!14786 = !DILocalVariable(name: "replylen", scope: !14771, file: !3, line: 3878, type: !115)
!14787 = !DILocation(line: 3878, column: 6, scope: !14771)
!14788 = !DILocalVariable(name: "curreply", scope: !14771, file: !3, line: 3878, type: !115)
!14789 = !DILocation(line: 3878, column: 16, scope: !14771)
!14790 = !DILocalVariable(name: "ret", scope: !14771, file: !3, line: 3879, type: !115)
!14791 = !DILocation(line: 3879, column: 6, scope: !14771)
!14792 = !DILocalVariable(name: "hdrlen", scope: !14771, file: !3, line: 3880, type: !364)
!14793 = !DILocation(line: 3880, column: 5, scope: !14771)
!14794 = !DILocalVariable(name: "hdr", scope: !14771, file: !3, line: 3881, type: !5780)
!14795 = !DILocation(line: 3881, column: 33, scope: !14771)
!14796 = !DILocalVariable(name: "msg", scope: !14771, file: !3, line: 3882, type: !9805)
!14797 = !DILocation(line: 3882, column: 33, scope: !14771)
!14798 = !DILocation(line: 3883, column: 3, scope: !14771)
!14799 = !DILocation(line: 3883, column: 9, scope: !14771)
!14800 = !DILocation(line: 3883, column: 14, scope: !14771)
!14801 = !DILocation(line: 3883, column: 29, scope: !14771)
!14802 = !DILocation(line: 3883, column: 34, scope: !14771)
!14803 = !DILocalVariable(name: "basereg", scope: !14771, file: !3, line: 3884, type: !115)
!14804 = !DILocation(line: 3884, column: 6, scope: !14771)
!14805 = !DILocation(line: 3884, column: 16, scope: !14771)
!14806 = !DILocation(line: 3887, column: 7, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3887, column: 6)
!14808 = !DILocation(line: 3887, column: 6, scope: !14771)
!14809 = !DILocation(line: 3888, column: 4, scope: !14807)
!14810 = !DILocation(line: 3888, column: 9, scope: !14807)
!14811 = !DILocation(line: 3888, column: 3, scope: !14807)
!14812 = !DILocalVariable(name: "__UNIQUE_ID___x332", scope: !14813, file: !3, line: 3890, type: !115)
!14813 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3890, column: 8)
!14814 = !DILocation(line: 3890, column: 8, scope: !14813)
!14815 = !DILocalVariable(name: "__UNIQUE_ID___y333", scope: !14813, file: !3, line: 3890, type: !115)
!14816 = !DILocation(line: 3890, column: 6, scope: !14771)
!14817 = !DILocation(line: 3891, column: 25, scope: !14771)
!14818 = !DILocation(line: 3891, column: 30, scope: !14771)
!14819 = !DILocation(line: 3891, column: 35, scope: !14771)
!14820 = !DILocation(line: 3891, column: 44, scope: !14771)
!14821 = !DILocation(line: 3891, column: 56, scope: !14771)
!14822 = !DILocation(line: 3891, column: 8, scope: !14771)
!14823 = !DILocation(line: 3891, column: 6, scope: !14771)
!14824 = !DILocation(line: 3892, column: 6, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3892, column: 6)
!14826 = !DILocation(line: 3892, column: 13, scope: !14825)
!14827 = !DILocation(line: 3892, column: 10, scope: !14825)
!14828 = !DILocation(line: 3892, column: 6, scope: !14771)
!14829 = !DILocation(line: 3893, column: 3, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14825, file: !3, line: 3892, column: 18)
!14831 = !DILocation(line: 3894, column: 3, scope: !14830)
!14832 = !DILocation(line: 3897, column: 45, scope: !14771)
!14833 = !DILocation(line: 3897, column: 57, scope: !14771)
!14834 = !DILocation(line: 3897, column: 8, scope: !14771)
!14835 = !DILocation(line: 3897, column: 6, scope: !14771)
!14836 = !DILocation(line: 3898, column: 6, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3898, column: 6)
!14838 = !DILocation(line: 3898, column: 10, scope: !14837)
!14839 = !DILocation(line: 3898, column: 6, scope: !14771)
!14840 = !DILocation(line: 3900, column: 14, scope: !14841)
!14841 = distinct !DILexicalBlock(scope: !14837, file: !3, line: 3898, column: 20)
!14842 = !DILocation(line: 3900, column: 26, scope: !14841)
!14843 = !DILocation(line: 3899, column: 3, scope: !14841)
!14844 = !DILocation(line: 3901, column: 3, scope: !14841)
!14845 = !DILocation(line: 3902, column: 3, scope: !14841)
!14846 = !DILocation(line: 3905, column: 7, scope: !14847)
!14847 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3905, column: 6)
!14848 = !DILocation(line: 3905, column: 6, scope: !14771)
!14849 = !DILocation(line: 3907, column: 40, scope: !14850)
!14850 = distinct !DILexicalBlock(scope: !14847, file: !3, line: 3905, column: 11)
!14851 = !DILocation(line: 3907, column: 49, scope: !14850)
!14852 = !DILocation(line: 3907, column: 58, scope: !14850)
!14853 = !DILocation(line: 3907, column: 54, scope: !14850)
!14854 = !DILocation(line: 3907, column: 11, scope: !14850)
!14855 = !DILocation(line: 3907, column: 4, scope: !14850)
!14856 = !DILocation(line: 3907, column: 9, scope: !14850)
!14857 = !DILocation(line: 3908, column: 9, scope: !14858)
!14858 = distinct !DILexicalBlock(scope: !14850, file: !3, line: 3908, column: 7)
!14859 = !DILocation(line: 3908, column: 8, scope: !14858)
!14860 = !DILocation(line: 3908, column: 7, scope: !14850)
!14861 = !DILocation(line: 3909, column: 4, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14858, file: !3, line: 3908, column: 15)
!14863 = !DILocation(line: 3911, column: 4, scope: !14862)
!14864 = !DILocation(line: 3913, column: 2, scope: !14850)
!14865 = !DILocation(line: 3915, column: 38, scope: !14866)
!14866 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3915, column: 6)
!14867 = !DILocation(line: 3915, column: 49, scope: !14866)
!14868 = !DILocation(line: 3915, column: 7, scope: !14866)
!14869 = !DILocation(line: 3915, column: 6, scope: !14771)
!14870 = !DILocation(line: 3916, column: 3, scope: !14871)
!14871 = distinct !DILexicalBlock(scope: !14866, file: !3, line: 3915, column: 58)
!14872 = !DILocation(line: 3918, column: 3, scope: !14871)
!14873 = !DILocalVariable(name: "__UNIQUE_ID___x334", scope: !14874, file: !3, line: 3921, type: !364)
!14874 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3921, column: 13)
!14875 = !DILocation(line: 3921, column: 13, scope: !14874)
!14876 = !DILocalVariable(name: "__UNIQUE_ID___y335", scope: !14874, file: !3, line: 3921, type: !364)
!14877 = !DILocation(line: 3921, column: 11, scope: !14771)
!14878 = !DILocation(line: 3922, column: 39, scope: !14771)
!14879 = !DILocation(line: 3922, column: 44, scope: !14771)
!14880 = !DILocation(line: 3922, column: 57, scope: !14771)
!14881 = !DILocation(line: 3922, column: 55, scope: !14771)
!14882 = !DILocation(line: 3922, column: 65, scope: !14771)
!14883 = !DILocation(line: 3922, column: 8, scope: !14771)
!14884 = !DILocation(line: 3922, column: 6, scope: !14771)
!14885 = !DILocation(line: 3923, column: 7, scope: !14886)
!14886 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3923, column: 6)
!14887 = !DILocation(line: 3923, column: 6, scope: !14771)
!14888 = !DILocation(line: 3924, column: 3, scope: !14889)
!14889 = distinct !DILexicalBlock(scope: !14886, file: !3, line: 3923, column: 12)
!14890 = !DILocation(line: 3925, column: 3, scope: !14889)
!14891 = !DILocation(line: 3928, column: 13, scope: !14771)
!14892 = !DILocation(line: 3928, column: 18, scope: !14771)
!14893 = !DILocation(line: 3928, column: 33, scope: !14771)
!14894 = !DILocation(line: 3928, column: 38, scope: !14771)
!14895 = !DILocation(line: 3928, column: 31, scope: !14771)
!14896 = !DILocation(line: 3928, column: 56, scope: !14771)
!14897 = !DILocation(line: 3928, column: 54, scope: !14771)
!14898 = !DILocation(line: 3928, column: 11, scope: !14771)
!14899 = !DILocation(line: 3929, column: 13, scope: !14771)
!14900 = !DILocation(line: 3929, column: 11, scope: !14771)
!14901 = !DILocation(line: 3930, column: 2, scope: !14771)
!14902 = !DILocation(line: 3930, column: 9, scope: !14771)
!14903 = !DILocation(line: 3930, column: 18, scope: !14771)
!14904 = !DILocalVariable(name: "__UNIQUE_ID___x338", scope: !14905, file: !3, line: 3931, type: !115)
!14905 = distinct !DILexicalBlock(scope: !14906, file: !3, line: 3931, column: 9)
!14906 = distinct !DILexicalBlock(scope: !14771, file: !3, line: 3930, column: 23)
!14907 = !DILocation(line: 3931, column: 9, scope: !14905)
!14908 = !DILocalVariable(name: "__UNIQUE_ID___x336", scope: !14909, file: !3, line: 3931, type: !115)
!14909 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 3931, column: 9)
!14910 = !DILocation(line: 3931, column: 9, scope: !14909)
!14911 = !DILocalVariable(name: "__UNIQUE_ID___y337", scope: !14909, file: !3, line: 3931, type: !115)
!14912 = !DILocalVariable(name: "__UNIQUE_ID___y339", scope: !14905, file: !3, line: 3931, type: !115)
!14913 = !DILocation(line: 3931, column: 7, scope: !14906)
!14914 = !DILocation(line: 3932, column: 26, scope: !14906)
!14915 = !DILocation(line: 3932, column: 31, scope: !14906)
!14916 = !DILocation(line: 3932, column: 36, scope: !14906)
!14917 = !DILocation(line: 3932, column: 46, scope: !14906)
!14918 = !DILocation(line: 3932, column: 44, scope: !14906)
!14919 = !DILocation(line: 3933, column: 9, scope: !14906)
!14920 = !DILocation(line: 3933, column: 21, scope: !14906)
!14921 = !DILocation(line: 3932, column: 9, scope: !14906)
!14922 = !DILocation(line: 3932, column: 7, scope: !14906)
!14923 = !DILocation(line: 3934, column: 7, scope: !14924)
!14924 = distinct !DILexicalBlock(scope: !14906, file: !3, line: 3934, column: 7)
!14925 = !DILocation(line: 3934, column: 14, scope: !14924)
!14926 = !DILocation(line: 3934, column: 11, scope: !14924)
!14927 = !DILocation(line: 3934, column: 7, scope: !14906)
!14928 = !DILocation(line: 3935, column: 4, scope: !14929)
!14929 = distinct !DILexicalBlock(scope: !14924, file: !3, line: 3934, column: 19)
!14930 = !DILocation(line: 3937, column: 4, scope: !14929)
!14931 = !DILocation(line: 3940, column: 40, scope: !14906)
!14932 = !DILocation(line: 3940, column: 45, scope: !14906)
!14933 = !DILocation(line: 3940, column: 57, scope: !14906)
!14934 = !DILocation(line: 3940, column: 9, scope: !14906)
!14935 = !DILocation(line: 3940, column: 7, scope: !14906)
!14936 = !DILocation(line: 3941, column: 8, scope: !14937)
!14937 = distinct !DILexicalBlock(scope: !14906, file: !3, line: 3941, column: 7)
!14938 = !DILocation(line: 3941, column: 7, scope: !14906)
!14939 = !DILocation(line: 3942, column: 4, scope: !14940)
!14940 = distinct !DILexicalBlock(scope: !14937, file: !3, line: 3941, column: 13)
!14941 = !DILocation(line: 3943, column: 4, scope: !14940)
!14942 = !DILocation(line: 3946, column: 15, scope: !14906)
!14943 = !DILocation(line: 3946, column: 12, scope: !14906)
!14944 = !DILocation(line: 3947, column: 15, scope: !14906)
!14945 = !DILocation(line: 3947, column: 12, scope: !14906)
!14946 = distinct !{!14946, !14901, !14947}
!14947 = !DILocation(line: 3948, column: 2, scope: !14771)
!14948 = !DILocation(line: 3949, column: 2, scope: !14771)
!14949 = !DILocation(line: 3950, column: 1, scope: !14771)
!14950 = distinct !DISubprogram(name: "drm_dp_sideband_parse_reply", scope: !3, file: !3, line: 1017, type: !14951, scopeLine: 1019, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!14951 = !DISubroutineType(types: !14952)
!14952 = !{!370, !9805, !14953}
!14953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6016, size: 64)
!14954 = !DILocalVariable(name: "raw", arg: 1, scope: !14950, file: !3, line: 1017, type: !9805)
!14955 = !DILocation(line: 1017, column: 72, scope: !14950)
!14956 = !DILocalVariable(name: "msg", arg: 2, scope: !14950, file: !3, line: 1018, type: !14953)
!14957 = !DILocation(line: 1018, column: 45, scope: !14950)
!14958 = !DILocation(line: 1020, column: 9, scope: !14950)
!14959 = !DILocation(line: 1020, column: 2, scope: !14950)
!14960 = !DILocation(line: 1021, column: 21, scope: !14950)
!14961 = !DILocation(line: 1021, column: 26, scope: !14950)
!14962 = !DILocation(line: 1021, column: 33, scope: !14950)
!14963 = !DILocation(line: 1021, column: 41, scope: !14950)
!14964 = !DILocation(line: 1021, column: 20, scope: !14950)
!14965 = !DILocation(line: 1021, column: 2, scope: !14950)
!14966 = !DILocation(line: 1021, column: 7, scope: !14950)
!14967 = !DILocation(line: 1021, column: 18, scope: !14950)
!14968 = !DILocation(line: 1022, column: 19, scope: !14950)
!14969 = !DILocation(line: 1022, column: 24, scope: !14950)
!14970 = !DILocation(line: 1022, column: 31, scope: !14950)
!14971 = !DILocation(line: 1022, column: 18, scope: !14950)
!14972 = !DILocation(line: 1022, column: 2, scope: !14950)
!14973 = !DILocation(line: 1022, column: 7, scope: !14950)
!14974 = !DILocation(line: 1022, column: 16, scope: !14950)
!14975 = !DILocation(line: 1024, column: 6, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1024, column: 6)
!14977 = !DILocation(line: 1024, column: 11, scope: !14976)
!14978 = !DILocation(line: 1024, column: 22, scope: !14976)
!14979 = !DILocation(line: 1024, column: 6, scope: !14950)
!14980 = !DILocation(line: 1025, column: 10, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14976, file: !3, line: 1024, column: 48)
!14982 = !DILocation(line: 1025, column: 15, scope: !14981)
!14983 = !DILocation(line: 1025, column: 17, scope: !14981)
!14984 = !DILocation(line: 1025, column: 21, scope: !14981)
!14985 = !DILocation(line: 1025, column: 3, scope: !14981)
!14986 = !DILocation(line: 1025, column: 28, scope: !14981)
!14987 = !DILocation(line: 1025, column: 33, scope: !14981)
!14988 = !DILocation(line: 1026, column: 23, scope: !14981)
!14989 = !DILocation(line: 1026, column: 28, scope: !14981)
!14990 = !DILocation(line: 1026, column: 3, scope: !14981)
!14991 = !DILocation(line: 1026, column: 8, scope: !14981)
!14992 = !DILocation(line: 1026, column: 10, scope: !14981)
!14993 = !DILocation(line: 1026, column: 14, scope: !14981)
!14994 = !DILocation(line: 1026, column: 21, scope: !14981)
!14995 = !DILocation(line: 1027, column: 25, scope: !14981)
!14996 = !DILocation(line: 1027, column: 30, scope: !14981)
!14997 = !DILocation(line: 1027, column: 3, scope: !14981)
!14998 = !DILocation(line: 1027, column: 8, scope: !14981)
!14999 = !DILocation(line: 1027, column: 10, scope: !14981)
!15000 = !DILocation(line: 1027, column: 14, scope: !14981)
!15001 = !DILocation(line: 1027, column: 23, scope: !14981)
!15002 = !DILocation(line: 1028, column: 3, scope: !14981)
!15003 = !DILocation(line: 1031, column: 10, scope: !14950)
!15004 = !DILocation(line: 1031, column: 15, scope: !14950)
!15005 = !DILocation(line: 1031, column: 2, scope: !14950)
!15006 = !DILocation(line: 1033, column: 45, scope: !15007)
!15007 = distinct !DILexicalBlock(scope: !14950, file: !3, line: 1031, column: 25)
!15008 = !DILocation(line: 1033, column: 50, scope: !15007)
!15009 = !DILocation(line: 1033, column: 10, scope: !15007)
!15010 = !DILocation(line: 1033, column: 3, scope: !15007)
!15011 = !DILocation(line: 1035, column: 50, scope: !15007)
!15012 = !DILocation(line: 1035, column: 55, scope: !15007)
!15013 = !DILocation(line: 1035, column: 10, scope: !15007)
!15014 = !DILocation(line: 1035, column: 3, scope: !15007)
!15015 = !DILocation(line: 1037, column: 49, scope: !15007)
!15016 = !DILocation(line: 1037, column: 54, scope: !15007)
!15017 = !DILocation(line: 1037, column: 10, scope: !15007)
!15018 = !DILocation(line: 1037, column: 3, scope: !15007)
!15019 = !DILocation(line: 1039, column: 50, scope: !15007)
!15020 = !DILocation(line: 1039, column: 55, scope: !15007)
!15021 = !DILocation(line: 1039, column: 10, scope: !15007)
!15022 = !DILocation(line: 1039, column: 3, scope: !15007)
!15023 = !DILocation(line: 1041, column: 52, scope: !15007)
!15024 = !DILocation(line: 1041, column: 57, scope: !15007)
!15025 = !DILocation(line: 1041, column: 10, scope: !15007)
!15026 = !DILocation(line: 1041, column: 3, scope: !15007)
!15027 = !DILocation(line: 1043, column: 3, scope: !15007)
!15028 = !DILocation(line: 1045, column: 56, scope: !15007)
!15029 = !DILocation(line: 1045, column: 61, scope: !15007)
!15030 = !DILocation(line: 1045, column: 10, scope: !15007)
!15031 = !DILocation(line: 1045, column: 3, scope: !15007)
!15032 = !DILocation(line: 1047, column: 53, scope: !15007)
!15033 = !DILocation(line: 1047, column: 58, scope: !15007)
!15034 = !DILocation(line: 1047, column: 10, scope: !15007)
!15035 = !DILocation(line: 1047, column: 3, scope: !15007)
!15036 = !DILocation(line: 1050, column: 53, scope: !15007)
!15037 = !DILocation(line: 1050, column: 58, scope: !15007)
!15038 = !DILocation(line: 1050, column: 10, scope: !15007)
!15039 = !DILocation(line: 1050, column: 3, scope: !15007)
!15040 = !DILocation(line: 1052, column: 3, scope: !15007)
!15041 = !DILocation(line: 1054, column: 56, scope: !15007)
!15042 = !DILocation(line: 1054, column: 61, scope: !15007)
!15043 = !DILocation(line: 1054, column: 10, scope: !15007)
!15044 = !DILocation(line: 1054, column: 3, scope: !15007)
!15045 = !DILocation(line: 1056, column: 3, scope: !15007)
!15046 = !DILocation(line: 1058, column: 3, scope: !15007)
!15047 = !DILocation(line: 1060, column: 1, scope: !14950)
!15048 = !DILocalVariable(name: "nak_reason", arg: 1, scope: !6253, file: !3, line: 132, type: !364)
!15049 = !DILocation(line: 132, column: 49, scope: !6253)
!15050 = !DILocation(line: 147, column: 6, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !6253, file: !3, line: 147, column: 6)
!15052 = !DILocation(line: 147, column: 17, scope: !15051)
!15053 = !DILocation(line: 147, column: 47, scope: !15051)
!15054 = !DILocation(line: 148, column: 22, scope: !15051)
!15055 = !DILocation(line: 148, column: 7, scope: !15051)
!15056 = !DILocation(line: 147, column: 6, scope: !6253)
!15057 = !DILocation(line: 149, column: 3, scope: !15051)
!15058 = !DILocation(line: 151, column: 24, scope: !6253)
!15059 = !DILocation(line: 151, column: 9, scope: !6253)
!15060 = !DILocation(line: 151, column: 2, scope: !6253)
!15061 = !DILocation(line: 152, column: 1, scope: !6253)
!15062 = distinct !DISubprogram(name: "drm_dp_decode_sideband_msg_hdr", scope: !3, file: !3, line: 289, type: !15063, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15063 = !DISubroutineType(types: !15064)
!15064 = !{!370, !9849, !6180, !115, !6180}
!15065 = !DILocalVariable(name: "hdr", arg: 1, scope: !15062, file: !3, line: 289, type: !9849)
!15066 = !DILocation(line: 289, column: 76, scope: !15062)
!15067 = !DILocalVariable(name: "buf", arg: 2, scope: !15062, file: !3, line: 290, type: !6180)
!15068 = !DILocation(line: 290, column: 13, scope: !15062)
!15069 = !DILocalVariable(name: "buflen", arg: 3, scope: !15062, file: !3, line: 290, type: !115)
!15070 = !DILocation(line: 290, column: 22, scope: !15062)
!15071 = !DILocalVariable(name: "hdrlen", arg: 4, scope: !15062, file: !3, line: 290, type: !6180)
!15072 = !DILocation(line: 290, column: 34, scope: !15062)
!15073 = !DILocalVariable(name: "crc4", scope: !15062, file: !3, line: 292, type: !364)
!15074 = !DILocation(line: 292, column: 5, scope: !15062)
!15075 = !DILocalVariable(name: "len", scope: !15062, file: !3, line: 293, type: !364)
!15076 = !DILocation(line: 293, column: 5, scope: !15062)
!15077 = !DILocalVariable(name: "i", scope: !15062, file: !3, line: 294, type: !115)
!15078 = !DILocation(line: 294, column: 6, scope: !15062)
!15079 = !DILocalVariable(name: "idx", scope: !15062, file: !3, line: 295, type: !364)
!15080 = !DILocation(line: 295, column: 5, scope: !15062)
!15081 = !DILocation(line: 297, column: 6, scope: !15082)
!15082 = distinct !DILexicalBlock(scope: !15062, file: !3, line: 297, column: 6)
!15083 = !DILocation(line: 297, column: 13, scope: !15082)
!15084 = !DILocation(line: 297, column: 6, scope: !15062)
!15085 = !DILocation(line: 298, column: 3, scope: !15082)
!15086 = !DILocation(line: 299, column: 6, scope: !15062)
!15087 = !DILocation(line: 300, column: 11, scope: !15062)
!15088 = !DILocation(line: 300, column: 18, scope: !15062)
!15089 = !DILocation(line: 300, column: 26, scope: !15062)
!15090 = !DILocation(line: 300, column: 32, scope: !15062)
!15091 = !DILocation(line: 300, column: 6, scope: !15062)
!15092 = !DILocation(line: 301, column: 6, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15062, file: !3, line: 301, column: 6)
!15094 = !DILocation(line: 301, column: 12, scope: !15093)
!15095 = !DILocation(line: 301, column: 10, scope: !15093)
!15096 = !DILocation(line: 301, column: 6, scope: !15062)
!15097 = !DILocation(line: 302, column: 3, scope: !15093)
!15098 = !DILocation(line: 303, column: 32, scope: !15062)
!15099 = !DILocation(line: 303, column: 38, scope: !15062)
!15100 = !DILocation(line: 303, column: 42, scope: !15062)
!15101 = !DILocation(line: 303, column: 47, scope: !15062)
!15102 = !DILocation(line: 303, column: 37, scope: !15062)
!15103 = !DILocation(line: 303, column: 9, scope: !15062)
!15104 = !DILocation(line: 303, column: 7, scope: !15062)
!15105 = !DILocation(line: 305, column: 7, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15062, file: !3, line: 305, column: 6)
!15107 = !DILocation(line: 305, column: 12, scope: !15106)
!15108 = !DILocation(line: 305, column: 23, scope: !15106)
!15109 = !DILocation(line: 305, column: 27, scope: !15106)
!15110 = !DILocation(line: 305, column: 31, scope: !15106)
!15111 = !DILocation(line: 305, column: 36, scope: !15106)
!15112 = !DILocation(line: 305, column: 19, scope: !15106)
!15113 = !DILocation(line: 305, column: 6, scope: !15062)
!15114 = !DILocation(line: 306, column: 3, scope: !15115)
!15115 = distinct !DILexicalBlock(scope: !15106, file: !3, line: 305, column: 44)
!15116 = !DILocation(line: 307, column: 3, scope: !15115)
!15117 = !DILocation(line: 310, column: 14, scope: !15062)
!15118 = !DILocation(line: 310, column: 21, scope: !15062)
!15119 = !DILocation(line: 310, column: 29, scope: !15062)
!15120 = !DILocation(line: 310, column: 13, scope: !15062)
!15121 = !DILocation(line: 310, column: 2, scope: !15062)
!15122 = !DILocation(line: 310, column: 7, scope: !15062)
!15123 = !DILocation(line: 310, column: 11, scope: !15062)
!15124 = !DILocation(line: 311, column: 14, scope: !15062)
!15125 = !DILocation(line: 311, column: 21, scope: !15062)
!15126 = !DILocation(line: 311, column: 13, scope: !15062)
!15127 = !DILocation(line: 311, column: 2, scope: !15062)
!15128 = !DILocation(line: 311, column: 7, scope: !15062)
!15129 = !DILocation(line: 311, column: 11, scope: !15062)
!15130 = !DILocation(line: 312, column: 6, scope: !15062)
!15131 = !DILocation(line: 313, column: 9, scope: !15132)
!15132 = distinct !DILexicalBlock(scope: !15062, file: !3, line: 313, column: 2)
!15133 = !DILocation(line: 313, column: 7, scope: !15132)
!15134 = !DILocation(line: 313, column: 14, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 313, column: 2)
!15136 = !DILocation(line: 313, column: 19, scope: !15135)
!15137 = !DILocation(line: 313, column: 24, scope: !15135)
!15138 = !DILocation(line: 313, column: 28, scope: !15135)
!15139 = !DILocation(line: 313, column: 16, scope: !15135)
!15140 = !DILocation(line: 313, column: 2, scope: !15132)
!15141 = !DILocation(line: 314, column: 17, scope: !15135)
!15142 = !DILocation(line: 314, column: 24, scope: !15135)
!15143 = !DILocation(line: 314, column: 3, scope: !15135)
!15144 = !DILocation(line: 314, column: 8, scope: !15135)
!15145 = !DILocation(line: 314, column: 12, scope: !15135)
!15146 = !DILocation(line: 314, column: 15, scope: !15135)
!15147 = !DILocation(line: 313, column: 35, scope: !15135)
!15148 = !DILocation(line: 313, column: 2, scope: !15135)
!15149 = distinct !{!15149, !15140, !15150}
!15150 = !DILocation(line: 314, column: 26, scope: !15132)
!15151 = !DILocation(line: 315, column: 20, scope: !15062)
!15152 = !DILocation(line: 315, column: 24, scope: !15062)
!15153 = !DILocation(line: 315, column: 29, scope: !15062)
!15154 = !DILocation(line: 315, column: 35, scope: !15062)
!15155 = !DILocation(line: 315, column: 19, scope: !15062)
!15156 = !DILocation(line: 315, column: 2, scope: !15062)
!15157 = !DILocation(line: 315, column: 7, scope: !15062)
!15158 = !DILocation(line: 315, column: 17, scope: !15062)
!15159 = !DILocation(line: 316, column: 19, scope: !15062)
!15160 = !DILocation(line: 316, column: 23, scope: !15062)
!15161 = !DILocation(line: 316, column: 28, scope: !15062)
!15162 = !DILocation(line: 316, column: 34, scope: !15062)
!15163 = !DILocation(line: 316, column: 18, scope: !15062)
!15164 = !DILocation(line: 316, column: 2, scope: !15062)
!15165 = !DILocation(line: 316, column: 7, scope: !15062)
!15166 = !DILocation(line: 316, column: 16, scope: !15062)
!15167 = !DILocation(line: 317, column: 17, scope: !15062)
!15168 = !DILocation(line: 317, column: 21, scope: !15062)
!15169 = !DILocation(line: 317, column: 26, scope: !15062)
!15170 = !DILocation(line: 317, column: 2, scope: !15062)
!15171 = !DILocation(line: 317, column: 7, scope: !15062)
!15172 = !DILocation(line: 317, column: 15, scope: !15062)
!15173 = !DILocation(line: 318, column: 5, scope: !15062)
!15174 = !DILocation(line: 319, column: 15, scope: !15062)
!15175 = !DILocation(line: 319, column: 19, scope: !15062)
!15176 = !DILocation(line: 319, column: 24, scope: !15062)
!15177 = !DILocation(line: 319, column: 30, scope: !15062)
!15178 = !DILocation(line: 319, column: 14, scope: !15062)
!15179 = !DILocation(line: 319, column: 2, scope: !15062)
!15180 = !DILocation(line: 319, column: 7, scope: !15062)
!15181 = !DILocation(line: 319, column: 12, scope: !15062)
!15182 = !DILocation(line: 320, column: 15, scope: !15062)
!15183 = !DILocation(line: 320, column: 19, scope: !15062)
!15184 = !DILocation(line: 320, column: 24, scope: !15062)
!15185 = !DILocation(line: 320, column: 30, scope: !15062)
!15186 = !DILocation(line: 320, column: 14, scope: !15062)
!15187 = !DILocation(line: 320, column: 2, scope: !15062)
!15188 = !DILocation(line: 320, column: 7, scope: !15062)
!15189 = !DILocation(line: 320, column: 12, scope: !15062)
!15190 = !DILocation(line: 321, column: 16, scope: !15062)
!15191 = !DILocation(line: 321, column: 20, scope: !15062)
!15192 = !DILocation(line: 321, column: 25, scope: !15062)
!15193 = !DILocation(line: 321, column: 31, scope: !15062)
!15194 = !DILocation(line: 321, column: 15, scope: !15062)
!15195 = !DILocation(line: 321, column: 2, scope: !15062)
!15196 = !DILocation(line: 321, column: 7, scope: !15062)
!15197 = !DILocation(line: 321, column: 13, scope: !15062)
!15198 = !DILocation(line: 322, column: 5, scope: !15062)
!15199 = !DILocation(line: 323, column: 12, scope: !15062)
!15200 = !DILocation(line: 323, column: 3, scope: !15062)
!15201 = !DILocation(line: 323, column: 10, scope: !15062)
!15202 = !DILocation(line: 324, column: 2, scope: !15062)
!15203 = !DILocation(line: 325, column: 1, scope: !15062)
!15204 = distinct !DISubprogram(name: "drm_dp_get_mst_branch_device", scope: !3, file: !3, line: 2588, type: !15205, scopeLine: 2590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15205 = !DISubroutineType(types: !15206)
!15206 = !{!391, !406, !364, !6180}
!15207 = !DILocalVariable(name: "mgr", arg: 1, scope: !15204, file: !3, line: 2588, type: !406)
!15208 = !DILocation(line: 2588, column: 95, scope: !15204)
!15209 = !DILocalVariable(name: "lct", arg: 2, scope: !15204, file: !3, line: 2589, type: !364)
!15210 = !DILocation(line: 2589, column: 18, scope: !15204)
!15211 = !DILocalVariable(name: "rad", arg: 3, scope: !15204, file: !3, line: 2589, type: !6180)
!15212 = !DILocation(line: 2589, column: 27, scope: !15204)
!15213 = !DILocalVariable(name: "mstb", scope: !15204, file: !3, line: 2591, type: !391)
!15214 = !DILocation(line: 2591, column: 28, scope: !15204)
!15215 = !DILocalVariable(name: "port", scope: !15204, file: !3, line: 2592, type: !345)
!15216 = !DILocation(line: 2592, column: 26, scope: !15204)
!15217 = !DILocalVariable(name: "i", scope: !15204, file: !3, line: 2593, type: !115)
!15218 = !DILocation(line: 2593, column: 6, scope: !15204)
!15219 = !DILocalVariable(name: "ret", scope: !15204, file: !3, line: 2593, type: !115)
!15220 = !DILocation(line: 2593, column: 9, scope: !15204)
!15221 = !DILocation(line: 2596, column: 14, scope: !15204)
!15222 = !DILocation(line: 2596, column: 19, scope: !15204)
!15223 = !DILocation(line: 2596, column: 2, scope: !15204)
!15224 = !DILocation(line: 2597, column: 9, scope: !15204)
!15225 = !DILocation(line: 2597, column: 14, scope: !15204)
!15226 = !DILocation(line: 2597, column: 7, scope: !15204)
!15227 = !DILocation(line: 2599, column: 7, scope: !15228)
!15228 = distinct !DILexicalBlock(scope: !15204, file: !3, line: 2599, column: 6)
!15229 = !DILocation(line: 2599, column: 6, scope: !15204)
!15230 = !DILocation(line: 2600, column: 3, scope: !15228)
!15231 = !DILocation(line: 2602, column: 9, scope: !15232)
!15232 = distinct !DILexicalBlock(scope: !15204, file: !3, line: 2602, column: 2)
!15233 = !DILocation(line: 2602, column: 7, scope: !15232)
!15234 = !DILocation(line: 2602, column: 14, scope: !15235)
!15235 = distinct !DILexicalBlock(scope: !15232, file: !3, line: 2602, column: 2)
!15236 = !DILocation(line: 2602, column: 18, scope: !15235)
!15237 = !DILocation(line: 2602, column: 22, scope: !15235)
!15238 = !DILocation(line: 2602, column: 16, scope: !15235)
!15239 = !DILocation(line: 2602, column: 2, scope: !15232)
!15240 = !DILocalVariable(name: "shift", scope: !15241, file: !3, line: 2603, type: !115)
!15241 = distinct !DILexicalBlock(scope: !15235, file: !3, line: 2602, column: 32)
!15242 = !DILocation(line: 2603, column: 7, scope: !15241)
!15243 = !DILocation(line: 2603, column: 16, scope: !15241)
!15244 = !DILocation(line: 2603, column: 18, scope: !15241)
!15245 = !DILocation(line: 2603, column: 15, scope: !15241)
!15246 = !DILocalVariable(name: "port_num", scope: !15241, file: !3, line: 2604, type: !115)
!15247 = !DILocation(line: 2604, column: 7, scope: !15241)
!15248 = !DILocation(line: 2604, column: 19, scope: !15241)
!15249 = !DILocation(line: 2604, column: 23, scope: !15241)
!15250 = !DILocation(line: 2604, column: 25, scope: !15241)
!15251 = !DILocation(line: 2604, column: 33, scope: !15241)
!15252 = !DILocation(line: 2604, column: 30, scope: !15241)
!15253 = !DILocation(line: 2604, column: 40, scope: !15241)
!15254 = !DILocalVariable(name: "__mptr", scope: !15255, file: !3, line: 2606, type: !344)
!15255 = distinct !DILexicalBlock(scope: !15256, file: !3, line: 2606, column: 3)
!15256 = distinct !DILexicalBlock(scope: !15241, file: !3, line: 2606, column: 3)
!15257 = !DILocation(line: 2606, column: 3, scope: !15255)
!15258 = !DILocation(line: 2606, column: 3, scope: !15259)
!15259 = distinct !DILexicalBlock(scope: !15255, file: !3, line: 2606, column: 3)
!15260 = !DILocation(line: 2606, column: 3, scope: !15256)
!15261 = !DILocation(line: 2606, column: 3, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15256, file: !3, line: 2606, column: 3)
!15263 = !DILocation(line: 2607, column: 8, scope: !15264)
!15264 = distinct !DILexicalBlock(scope: !15265, file: !3, line: 2607, column: 8)
!15265 = distinct !DILexicalBlock(scope: !15262, file: !3, line: 2606, column: 49)
!15266 = !DILocation(line: 2607, column: 14, scope: !15264)
!15267 = !DILocation(line: 2607, column: 26, scope: !15264)
!15268 = !DILocation(line: 2607, column: 23, scope: !15264)
!15269 = !DILocation(line: 2607, column: 8, scope: !15265)
!15270 = !DILocation(line: 2608, column: 12, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15264, file: !3, line: 2607, column: 36)
!15272 = !DILocation(line: 2608, column: 18, scope: !15271)
!15273 = !DILocation(line: 2608, column: 10, scope: !15271)
!15274 = !DILocation(line: 2609, column: 10, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15271, file: !3, line: 2609, column: 9)
!15276 = !DILocation(line: 2609, column: 9, scope: !15271)
!15277 = !DILocation(line: 2610, column: 6, scope: !15278)
!15278 = distinct !DILexicalBlock(scope: !15275, file: !3, line: 2609, column: 16)
!15279 = !DILocation(line: 2611, column: 6, scope: !15278)
!15280 = !DILocation(line: 2614, column: 5, scope: !15271)
!15281 = !DILocation(line: 2616, column: 3, scope: !15265)
!15282 = !DILocalVariable(name: "__mptr", scope: !15283, file: !3, line: 2606, type: !344)
!15283 = distinct !DILexicalBlock(scope: !15262, file: !3, line: 2606, column: 3)
!15284 = !DILocation(line: 2606, column: 3, scope: !15283)
!15285 = !DILocation(line: 2606, column: 3, scope: !15286)
!15286 = distinct !DILexicalBlock(scope: !15283, file: !3, line: 2606, column: 3)
!15287 = distinct !{!15287, !15260, !15288}
!15288 = !DILocation(line: 2616, column: 3, scope: !15256)
!15289 = !DILocation(line: 2617, column: 2, scope: !15241)
!15290 = !DILocation(line: 2602, column: 28, scope: !15235)
!15291 = !DILocation(line: 2602, column: 2, scope: !15235)
!15292 = distinct !{!15292, !15239, !15293}
!15293 = !DILocation(line: 2617, column: 2, scope: !15232)
!15294 = !DILocation(line: 2618, column: 41, scope: !15204)
!15295 = !DILocation(line: 2618, column: 8, scope: !15204)
!15296 = !DILocation(line: 2618, column: 6, scope: !15204)
!15297 = !DILocation(line: 2619, column: 7, scope: !15298)
!15298 = distinct !DILexicalBlock(scope: !15204, file: !3, line: 2619, column: 6)
!15299 = !DILocation(line: 2619, column: 6, scope: !15204)
!15300 = !DILocation(line: 2620, column: 8, scope: !15298)
!15301 = !DILocation(line: 2620, column: 3, scope: !15298)
!15302 = !DILabel(scope: !15204, name: "out", file: !3, line: 2621)
!15303 = !DILocation(line: 2621, column: 1, scope: !15204)
!15304 = !DILocation(line: 2622, column: 16, scope: !15204)
!15305 = !DILocation(line: 2622, column: 21, scope: !15204)
!15306 = !DILocation(line: 2622, column: 2, scope: !15204)
!15307 = !DILocation(line: 2623, column: 9, scope: !15204)
!15308 = !DILocation(line: 2623, column: 2, scope: !15204)
!15309 = distinct !DISubprogram(name: "drm_dp_sideband_msg_set_header", scope: !3, file: !3, line: 738, type: !15310, scopeLine: 741, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15310 = !DISubroutineType(types: !15311)
!15311 = !{!115, !9805, !9849, !364}
!15312 = !DILocalVariable(name: "msg", arg: 1, scope: !15309, file: !3, line: 738, type: !9805)
!15313 = !DILocation(line: 738, column: 74, scope: !15309)
!15314 = !DILocalVariable(name: "hdr", arg: 2, scope: !15309, file: !3, line: 739, type: !9849)
!15315 = !DILocation(line: 739, column: 40, scope: !15309)
!15316 = !DILocalVariable(name: "hdrlen", arg: 3, scope: !15309, file: !3, line: 740, type: !364)
!15317 = !DILocation(line: 740, column: 11, scope: !15309)
!15318 = !DILocation(line: 746, column: 7, scope: !15319)
!15319 = distinct !DILexicalBlock(scope: !15309, file: !3, line: 746, column: 6)
!15320 = !DILocation(line: 746, column: 12, scope: !15319)
!15321 = !DILocation(line: 746, column: 17, scope: !15319)
!15322 = !DILocation(line: 746, column: 21, scope: !15319)
!15323 = !DILocation(line: 746, column: 26, scope: !15319)
!15324 = !DILocation(line: 746, column: 6, scope: !15309)
!15325 = !DILocation(line: 747, column: 3, scope: !15319)
!15326 = !DILocation(line: 750, column: 2, scope: !15309)
!15327 = !DILocation(line: 750, column: 7, scope: !15309)
!15328 = !DILocation(line: 750, column: 20, scope: !15309)
!15329 = !DILocation(line: 751, column: 22, scope: !15309)
!15330 = !DILocation(line: 751, column: 27, scope: !15309)
!15331 = !DILocation(line: 751, column: 2, scope: !15309)
!15332 = !DILocation(line: 751, column: 7, scope: !15309)
!15333 = !DILocation(line: 751, column: 20, scope: !15309)
!15334 = !DILocation(line: 752, column: 25, scope: !15309)
!15335 = !DILocation(line: 752, column: 2, scope: !15309)
!15336 = !DILocation(line: 752, column: 7, scope: !15309)
!15337 = !DILocation(line: 752, column: 23, scope: !15309)
!15338 = !DILocation(line: 755, column: 6, scope: !15339)
!15339 = distinct !DILexicalBlock(scope: !15309, file: !3, line: 755, column: 6)
!15340 = !DILocation(line: 755, column: 11, scope: !15339)
!15341 = !DILocation(line: 755, column: 16, scope: !15339)
!15342 = !DILocation(line: 755, column: 19, scope: !15339)
!15343 = !DILocation(line: 755, column: 24, scope: !15339)
!15344 = !DILocation(line: 755, column: 6, scope: !15309)
!15345 = !DILocation(line: 756, column: 3, scope: !15339)
!15346 = !DILocation(line: 758, column: 6, scope: !15347)
!15347 = distinct !DILexicalBlock(scope: !15309, file: !3, line: 758, column: 6)
!15348 = !DILocation(line: 758, column: 11, scope: !15347)
!15349 = !DILocation(line: 758, column: 6, scope: !15309)
!15350 = !DILocation(line: 759, column: 11, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15347, file: !3, line: 758, column: 17)
!15352 = !DILocation(line: 759, column: 16, scope: !15351)
!15353 = !DILocation(line: 759, column: 3, scope: !15351)
!15354 = !DILocation(line: 759, column: 29, scope: !15351)
!15355 = !DILocation(line: 761, column: 3, scope: !15351)
!15356 = !DILocation(line: 761, column: 8, scope: !15351)
!15357 = !DILocation(line: 761, column: 18, scope: !15351)
!15358 = !DILocation(line: 762, column: 2, scope: !15351)
!15359 = !DILocation(line: 763, column: 6, scope: !15360)
!15360 = distinct !DILexicalBlock(scope: !15309, file: !3, line: 763, column: 6)
!15361 = !DILocation(line: 763, column: 11, scope: !15360)
!15362 = !DILocation(line: 763, column: 6, scope: !15309)
!15363 = !DILocation(line: 764, column: 3, scope: !15360)
!15364 = !DILocation(line: 764, column: 8, scope: !15360)
!15365 = !DILocation(line: 764, column: 18, scope: !15360)
!15366 = !DILocation(line: 766, column: 2, scope: !15309)
!15367 = !DILocation(line: 767, column: 1, scope: !15309)
!15368 = distinct !DISubprogram(name: "drm_dp_sideband_append_payload", scope: !3, file: !3, line: 770, type: !15369, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15369 = !DISubroutineType(types: !15370)
!15370 = !{!370, !9805, !6180, !364}
!15371 = !DILocalVariable(name: "msg", arg: 1, scope: !15368, file: !3, line: 770, type: !9805)
!15372 = !DILocation(line: 770, column: 75, scope: !15368)
!15373 = !DILocalVariable(name: "replybuf", arg: 2, scope: !15368, file: !3, line: 771, type: !6180)
!15374 = !DILocation(line: 771, column: 13, scope: !15368)
!15375 = !DILocalVariable(name: "replybuflen", arg: 3, scope: !15368, file: !3, line: 771, type: !364)
!15376 = !DILocation(line: 771, column: 26, scope: !15368)
!15377 = !DILocalVariable(name: "crc4", scope: !15368, file: !3, line: 773, type: !364)
!15378 = !DILocation(line: 773, column: 5, scope: !15368)
!15379 = !DILocation(line: 775, column: 10, scope: !15368)
!15380 = !DILocation(line: 775, column: 15, scope: !15368)
!15381 = !DILocation(line: 775, column: 21, scope: !15368)
!15382 = !DILocation(line: 775, column: 26, scope: !15368)
!15383 = !DILocation(line: 775, column: 41, scope: !15368)
!15384 = !DILocation(line: 775, column: 51, scope: !15368)
!15385 = !DILocation(line: 775, column: 2, scope: !15368)
!15386 = !DILocation(line: 776, column: 23, scope: !15368)
!15387 = !DILocation(line: 776, column: 2, scope: !15368)
!15388 = !DILocation(line: 776, column: 7, scope: !15368)
!15389 = !DILocation(line: 776, column: 20, scope: !15368)
!15390 = !DILocation(line: 778, column: 6, scope: !15391)
!15391 = distinct !DILexicalBlock(scope: !15368, file: !3, line: 778, column: 6)
!15392 = !DILocation(line: 778, column: 11, scope: !15391)
!15393 = !DILocation(line: 778, column: 27, scope: !15391)
!15394 = !DILocation(line: 778, column: 32, scope: !15391)
!15395 = !DILocation(line: 778, column: 24, scope: !15391)
!15396 = !DILocation(line: 778, column: 6, scope: !15368)
!15397 = !DILocation(line: 780, column: 31, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15391, file: !3, line: 778, column: 46)
!15399 = !DILocation(line: 780, column: 36, scope: !15398)
!15400 = !DILocation(line: 780, column: 43, scope: !15398)
!15401 = !DILocation(line: 780, column: 48, scope: !15398)
!15402 = !DILocation(line: 780, column: 61, scope: !15398)
!15403 = !DILocation(line: 780, column: 10, scope: !15398)
!15404 = !DILocation(line: 780, column: 8, scope: !15398)
!15405 = !DILocation(line: 781, column: 7, scope: !15406)
!15406 = distinct !DILexicalBlock(scope: !15398, file: !3, line: 781, column: 7)
!15407 = !DILocation(line: 781, column: 15, scope: !15406)
!15408 = !DILocation(line: 781, column: 20, scope: !15406)
!15409 = !DILocation(line: 781, column: 26, scope: !15406)
!15410 = !DILocation(line: 781, column: 31, scope: !15406)
!15411 = !DILocation(line: 781, column: 44, scope: !15406)
!15412 = !DILocation(line: 781, column: 12, scope: !15406)
!15413 = !DILocation(line: 781, column: 7, scope: !15398)
!15414 = !DILocation(line: 784, column: 12, scope: !15406)
!15415 = !DILocation(line: 784, column: 17, scope: !15406)
!15416 = !DILocation(line: 784, column: 25, scope: !15406)
!15417 = !DILocation(line: 784, column: 30, scope: !15406)
!15418 = !DILocation(line: 782, column: 4, scope: !15406)
!15419 = !DILocation(line: 786, column: 11, scope: !15398)
!15420 = !DILocation(line: 786, column: 16, scope: !15398)
!15421 = !DILocation(line: 786, column: 20, scope: !15398)
!15422 = !DILocation(line: 786, column: 25, scope: !15398)
!15423 = !DILocation(line: 786, column: 34, scope: !15398)
!15424 = !DILocation(line: 786, column: 39, scope: !15398)
!15425 = !DILocation(line: 786, column: 3, scope: !15398)
!15426 = !DILocation(line: 786, column: 46, scope: !15398)
!15427 = !DILocation(line: 786, column: 51, scope: !15398)
!15428 = !DILocation(line: 786, column: 64, scope: !15398)
!15429 = !DILocation(line: 787, column: 18, scope: !15398)
!15430 = !DILocation(line: 787, column: 23, scope: !15398)
!15431 = !DILocation(line: 787, column: 36, scope: !15398)
!15432 = !DILocation(line: 787, column: 3, scope: !15398)
!15433 = !DILocation(line: 787, column: 8, scope: !15398)
!15434 = !DILocation(line: 787, column: 15, scope: !15398)
!15435 = !DILocation(line: 788, column: 2, scope: !15398)
!15436 = !DILocation(line: 789, column: 2, scope: !15368)
!15437 = distinct !DISubprogram(name: "drm_dp_sideband_parse_link_address", scope: !3, file: !3, line: 792, type: !14951, scopeLine: 794, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15438 = !DILocalVariable(name: "raw", arg: 1, scope: !15437, file: !3, line: 792, type: !9805)
!15439 = !DILocation(line: 792, column: 79, scope: !15437)
!15440 = !DILocalVariable(name: "repmsg", arg: 2, scope: !15437, file: !3, line: 793, type: !14953)
!15441 = !DILocation(line: 793, column: 52, scope: !15437)
!15442 = !DILocalVariable(name: "idx", scope: !15437, file: !3, line: 795, type: !115)
!15443 = !DILocation(line: 795, column: 6, scope: !15437)
!15444 = !DILocalVariable(name: "i", scope: !15437, file: !3, line: 796, type: !115)
!15445 = !DILocation(line: 796, column: 6, scope: !15437)
!15446 = !DILocation(line: 798, column: 9, scope: !15437)
!15447 = !DILocation(line: 798, column: 17, scope: !15437)
!15448 = !DILocation(line: 798, column: 19, scope: !15437)
!15449 = !DILocation(line: 798, column: 29, scope: !15437)
!15450 = !DILocation(line: 798, column: 2, scope: !15437)
!15451 = !DILocation(line: 798, column: 36, scope: !15437)
!15452 = !DILocation(line: 798, column: 41, scope: !15437)
!15453 = !DILocation(line: 798, column: 45, scope: !15437)
!15454 = !DILocation(line: 799, column: 6, scope: !15437)
!15455 = !DILocation(line: 800, column: 31, scope: !15437)
!15456 = !DILocation(line: 800, column: 36, scope: !15437)
!15457 = !DILocation(line: 800, column: 40, scope: !15437)
!15458 = !DILocation(line: 800, column: 45, scope: !15437)
!15459 = !DILocation(line: 800, column: 2, scope: !15437)
!15460 = !DILocation(line: 800, column: 10, scope: !15437)
!15461 = !DILocation(line: 800, column: 12, scope: !15437)
!15462 = !DILocation(line: 800, column: 22, scope: !15437)
!15463 = !DILocation(line: 800, column: 29, scope: !15437)
!15464 = !DILocation(line: 801, column: 5, scope: !15437)
!15465 = !DILocation(line: 802, column: 6, scope: !15466)
!15466 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 802, column: 6)
!15467 = !DILocation(line: 802, column: 12, scope: !15466)
!15468 = !DILocation(line: 802, column: 17, scope: !15466)
!15469 = !DILocation(line: 802, column: 10, scope: !15466)
!15470 = !DILocation(line: 802, column: 6, scope: !15437)
!15471 = !DILocation(line: 803, column: 3, scope: !15466)
!15472 = !DILocation(line: 804, column: 9, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15437, file: !3, line: 804, column: 2)
!15474 = !DILocation(line: 804, column: 7, scope: !15473)
!15475 = !DILocation(line: 804, column: 14, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15473, file: !3, line: 804, column: 2)
!15477 = !DILocation(line: 804, column: 18, scope: !15476)
!15478 = !DILocation(line: 804, column: 26, scope: !15476)
!15479 = !DILocation(line: 804, column: 28, scope: !15476)
!15480 = !DILocation(line: 804, column: 38, scope: !15476)
!15481 = !DILocation(line: 804, column: 16, scope: !15476)
!15482 = !DILocation(line: 804, column: 2, scope: !15473)
!15483 = !DILocation(line: 805, column: 7, scope: !15484)
!15484 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 805, column: 7)
!15485 = distinct !DILexicalBlock(scope: !15476, file: !3, line: 804, column: 51)
!15486 = !DILocation(line: 805, column: 12, scope: !15484)
!15487 = !DILocation(line: 805, column: 16, scope: !15484)
!15488 = !DILocation(line: 805, column: 21, scope: !15484)
!15489 = !DILocation(line: 805, column: 7, scope: !15485)
!15490 = !DILocation(line: 806, column: 4, scope: !15484)
!15491 = !DILocation(line: 806, column: 12, scope: !15484)
!15492 = !DILocation(line: 806, column: 14, scope: !15484)
!15493 = !DILocation(line: 806, column: 24, scope: !15484)
!15494 = !DILocation(line: 806, column: 30, scope: !15484)
!15495 = !DILocation(line: 806, column: 33, scope: !15484)
!15496 = !DILocation(line: 806, column: 44, scope: !15484)
!15497 = !DILocation(line: 808, column: 52, scope: !15485)
!15498 = !DILocation(line: 808, column: 57, scope: !15485)
!15499 = !DILocation(line: 808, column: 61, scope: !15485)
!15500 = !DILocation(line: 808, column: 66, scope: !15485)
!15501 = !DILocation(line: 808, column: 72, scope: !15485)
!15502 = !DILocation(line: 808, column: 51, scope: !15485)
!15503 = !DILocation(line: 808, column: 3, scope: !15485)
!15504 = !DILocation(line: 808, column: 11, scope: !15485)
!15505 = !DILocation(line: 808, column: 13, scope: !15485)
!15506 = !DILocation(line: 808, column: 23, scope: !15485)
!15507 = !DILocation(line: 808, column: 29, scope: !15485)
!15508 = !DILocation(line: 808, column: 32, scope: !15485)
!15509 = !DILocation(line: 808, column: 49, scope: !15485)
!15510 = !DILocation(line: 809, column: 47, scope: !15485)
!15511 = !DILocation(line: 809, column: 52, scope: !15485)
!15512 = !DILocation(line: 809, column: 56, scope: !15485)
!15513 = !DILocation(line: 809, column: 61, scope: !15485)
!15514 = !DILocation(line: 809, column: 46, scope: !15485)
!15515 = !DILocation(line: 809, column: 3, scope: !15485)
!15516 = !DILocation(line: 809, column: 11, scope: !15485)
!15517 = !DILocation(line: 809, column: 13, scope: !15485)
!15518 = !DILocation(line: 809, column: 23, scope: !15485)
!15519 = !DILocation(line: 809, column: 29, scope: !15485)
!15520 = !DILocation(line: 809, column: 32, scope: !15485)
!15521 = !DILocation(line: 809, column: 44, scope: !15485)
!15522 = !DILocation(line: 811, column: 6, scope: !15485)
!15523 = !DILocation(line: 812, column: 7, scope: !15524)
!15524 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 812, column: 7)
!15525 = !DILocation(line: 812, column: 13, scope: !15524)
!15526 = !DILocation(line: 812, column: 18, scope: !15524)
!15527 = !DILocation(line: 812, column: 11, scope: !15524)
!15528 = !DILocation(line: 812, column: 7, scope: !15485)
!15529 = !DILocation(line: 813, column: 4, scope: !15524)
!15530 = !DILocation(line: 814, column: 39, scope: !15485)
!15531 = !DILocation(line: 814, column: 44, scope: !15485)
!15532 = !DILocation(line: 814, column: 48, scope: !15485)
!15533 = !DILocation(line: 814, column: 53, scope: !15485)
!15534 = !DILocation(line: 814, column: 59, scope: !15485)
!15535 = !DILocation(line: 814, column: 38, scope: !15485)
!15536 = !DILocation(line: 814, column: 3, scope: !15485)
!15537 = !DILocation(line: 814, column: 11, scope: !15485)
!15538 = !DILocation(line: 814, column: 13, scope: !15485)
!15539 = !DILocation(line: 814, column: 23, scope: !15485)
!15540 = !DILocation(line: 814, column: 29, scope: !15485)
!15541 = !DILocation(line: 814, column: 32, scope: !15485)
!15542 = !DILocation(line: 814, column: 36, scope: !15485)
!15543 = !DILocation(line: 815, column: 40, scope: !15485)
!15544 = !DILocation(line: 815, column: 45, scope: !15485)
!15545 = !DILocation(line: 815, column: 49, scope: !15485)
!15546 = !DILocation(line: 815, column: 54, scope: !15485)
!15547 = !DILocation(line: 815, column: 60, scope: !15485)
!15548 = !DILocation(line: 815, column: 39, scope: !15485)
!15549 = !DILocation(line: 815, column: 3, scope: !15485)
!15550 = !DILocation(line: 815, column: 11, scope: !15485)
!15551 = !DILocation(line: 815, column: 13, scope: !15485)
!15552 = !DILocation(line: 815, column: 23, scope: !15485)
!15553 = !DILocation(line: 815, column: 29, scope: !15485)
!15554 = !DILocation(line: 815, column: 32, scope: !15485)
!15555 = !DILocation(line: 815, column: 37, scope: !15485)
!15556 = !DILocation(line: 816, column: 7, scope: !15557)
!15557 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 816, column: 7)
!15558 = !DILocation(line: 816, column: 15, scope: !15557)
!15559 = !DILocation(line: 816, column: 17, scope: !15557)
!15560 = !DILocation(line: 816, column: 27, scope: !15557)
!15561 = !DILocation(line: 816, column: 33, scope: !15557)
!15562 = !DILocation(line: 816, column: 36, scope: !15557)
!15563 = !DILocation(line: 816, column: 47, scope: !15557)
!15564 = !DILocation(line: 816, column: 7, scope: !15485)
!15565 = !DILocation(line: 817, column: 62, scope: !15557)
!15566 = !DILocation(line: 817, column: 67, scope: !15557)
!15567 = !DILocation(line: 817, column: 71, scope: !15557)
!15568 = !DILocation(line: 817, column: 76, scope: !15557)
!15569 = !DILocation(line: 817, column: 82, scope: !15557)
!15570 = !DILocation(line: 817, column: 61, scope: !15557)
!15571 = !DILocation(line: 817, column: 4, scope: !15557)
!15572 = !DILocation(line: 817, column: 12, scope: !15557)
!15573 = !DILocation(line: 817, column: 14, scope: !15557)
!15574 = !DILocation(line: 817, column: 24, scope: !15557)
!15575 = !DILocation(line: 817, column: 30, scope: !15557)
!15576 = !DILocation(line: 817, column: 33, scope: !15557)
!15577 = !DILocation(line: 817, column: 59, scope: !15557)
!15578 = !DILocation(line: 818, column: 6, scope: !15485)
!15579 = !DILocation(line: 819, column: 7, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 819, column: 7)
!15581 = !DILocation(line: 819, column: 13, scope: !15580)
!15582 = !DILocation(line: 819, column: 18, scope: !15580)
!15583 = !DILocation(line: 819, column: 11, scope: !15580)
!15584 = !DILocation(line: 819, column: 7, scope: !15485)
!15585 = !DILocation(line: 820, column: 4, scope: !15580)
!15586 = !DILocation(line: 821, column: 7, scope: !15587)
!15587 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 821, column: 7)
!15588 = !DILocation(line: 821, column: 15, scope: !15587)
!15589 = !DILocation(line: 821, column: 17, scope: !15587)
!15590 = !DILocation(line: 821, column: 27, scope: !15587)
!15591 = !DILocation(line: 821, column: 33, scope: !15587)
!15592 = !DILocation(line: 821, column: 36, scope: !15587)
!15593 = !DILocation(line: 821, column: 47, scope: !15587)
!15594 = !DILocation(line: 821, column: 7, scope: !15485)
!15595 = !DILocation(line: 822, column: 50, scope: !15596)
!15596 = distinct !DILexicalBlock(scope: !15587, file: !3, line: 821, column: 53)
!15597 = !DILocation(line: 822, column: 55, scope: !15596)
!15598 = !DILocation(line: 822, column: 59, scope: !15596)
!15599 = !DILocation(line: 822, column: 4, scope: !15596)
!15600 = !DILocation(line: 822, column: 12, scope: !15596)
!15601 = !DILocation(line: 822, column: 14, scope: !15596)
!15602 = !DILocation(line: 822, column: 24, scope: !15596)
!15603 = !DILocation(line: 822, column: 30, scope: !15596)
!15604 = !DILocation(line: 822, column: 33, scope: !15596)
!15605 = !DILocation(line: 822, column: 47, scope: !15596)
!15606 = !DILocation(line: 823, column: 7, scope: !15596)
!15607 = !DILocation(line: 824, column: 8, scope: !15608)
!15608 = distinct !DILexicalBlock(scope: !15596, file: !3, line: 824, column: 8)
!15609 = !DILocation(line: 824, column: 14, scope: !15608)
!15610 = !DILocation(line: 824, column: 19, scope: !15608)
!15611 = !DILocation(line: 824, column: 12, scope: !15608)
!15612 = !DILocation(line: 824, column: 8, scope: !15596)
!15613 = !DILocation(line: 825, column: 5, scope: !15608)
!15614 = !DILocation(line: 826, column: 11, scope: !15596)
!15615 = !DILocation(line: 826, column: 19, scope: !15596)
!15616 = !DILocation(line: 826, column: 21, scope: !15596)
!15617 = !DILocation(line: 826, column: 31, scope: !15596)
!15618 = !DILocation(line: 826, column: 37, scope: !15596)
!15619 = !DILocation(line: 826, column: 40, scope: !15596)
!15620 = !DILocation(line: 826, column: 4, scope: !15596)
!15621 = !DILocation(line: 826, column: 52, scope: !15596)
!15622 = !DILocation(line: 826, column: 57, scope: !15596)
!15623 = !DILocation(line: 826, column: 61, scope: !15596)
!15624 = !DILocation(line: 827, column: 8, scope: !15596)
!15625 = !DILocation(line: 828, column: 8, scope: !15626)
!15626 = distinct !DILexicalBlock(scope: !15596, file: !3, line: 828, column: 8)
!15627 = !DILocation(line: 828, column: 14, scope: !15626)
!15628 = !DILocation(line: 828, column: 19, scope: !15626)
!15629 = !DILocation(line: 828, column: 12, scope: !15626)
!15630 = !DILocation(line: 828, column: 8, scope: !15596)
!15631 = !DILocation(line: 829, column: 5, scope: !15626)
!15632 = !DILocation(line: 830, column: 52, scope: !15596)
!15633 = !DILocation(line: 830, column: 57, scope: !15596)
!15634 = !DILocation(line: 830, column: 61, scope: !15596)
!15635 = !DILocation(line: 830, column: 66, scope: !15596)
!15636 = !DILocation(line: 830, column: 72, scope: !15596)
!15637 = !DILocation(line: 830, column: 51, scope: !15596)
!15638 = !DILocation(line: 830, column: 4, scope: !15596)
!15639 = !DILocation(line: 830, column: 12, scope: !15596)
!15640 = !DILocation(line: 830, column: 14, scope: !15596)
!15641 = !DILocation(line: 830, column: 24, scope: !15596)
!15642 = !DILocation(line: 830, column: 30, scope: !15596)
!15643 = !DILocation(line: 830, column: 33, scope: !15596)
!15644 = !DILocation(line: 830, column: 49, scope: !15596)
!15645 = !DILocation(line: 831, column: 57, scope: !15596)
!15646 = !DILocation(line: 831, column: 62, scope: !15596)
!15647 = !DILocation(line: 831, column: 66, scope: !15596)
!15648 = !DILocation(line: 831, column: 71, scope: !15596)
!15649 = !DILocation(line: 831, column: 56, scope: !15596)
!15650 = !DILocation(line: 831, column: 4, scope: !15596)
!15651 = !DILocation(line: 831, column: 12, scope: !15596)
!15652 = !DILocation(line: 831, column: 14, scope: !15596)
!15653 = !DILocation(line: 831, column: 24, scope: !15596)
!15654 = !DILocation(line: 831, column: 30, scope: !15596)
!15655 = !DILocation(line: 831, column: 33, scope: !15596)
!15656 = !DILocation(line: 831, column: 54, scope: !15596)
!15657 = !DILocation(line: 832, column: 7, scope: !15596)
!15658 = !DILocation(line: 834, column: 3, scope: !15596)
!15659 = !DILocation(line: 835, column: 7, scope: !15660)
!15660 = distinct !DILexicalBlock(scope: !15485, file: !3, line: 835, column: 7)
!15661 = !DILocation(line: 835, column: 13, scope: !15660)
!15662 = !DILocation(line: 835, column: 18, scope: !15660)
!15663 = !DILocation(line: 835, column: 11, scope: !15660)
!15664 = !DILocation(line: 835, column: 7, scope: !15485)
!15665 = !DILocation(line: 836, column: 4, scope: !15660)
!15666 = !DILocation(line: 837, column: 2, scope: !15485)
!15667 = !DILocation(line: 804, column: 47, scope: !15476)
!15668 = !DILocation(line: 804, column: 2, scope: !15476)
!15669 = distinct !{!15669, !15482, !15670}
!15670 = !DILocation(line: 837, column: 2, scope: !15473)
!15671 = !DILocation(line: 839, column: 2, scope: !15437)
!15672 = !DILabel(scope: !15437, name: "fail_len", file: !3, line: 840)
!15673 = !DILocation(line: 840, column: 1, scope: !15437)
!15674 = !DILocation(line: 841, column: 2, scope: !15437)
!15675 = !DILocation(line: 842, column: 2, scope: !15437)
!15676 = !DILocation(line: 843, column: 1, scope: !15437)
!15677 = distinct !DISubprogram(name: "drm_dp_sideband_parse_query_payload_ack", scope: !3, file: !3, line: 947, type: !14951, scopeLine: 949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15678 = !DILocalVariable(name: "raw", arg: 1, scope: !15677, file: !3, line: 947, type: !9805)
!15679 = !DILocation(line: 947, column: 84, scope: !15677)
!15680 = !DILocalVariable(name: "repmsg", arg: 2, scope: !15677, file: !3, line: 948, type: !14953)
!15681 = !DILocation(line: 948, column: 50, scope: !15677)
!15682 = !DILocalVariable(name: "idx", scope: !15677, file: !3, line: 950, type: !115)
!15683 = !DILocation(line: 950, column: 6, scope: !15677)
!15684 = !DILocation(line: 952, column: 41, scope: !15677)
!15685 = !DILocation(line: 952, column: 46, scope: !15677)
!15686 = !DILocation(line: 952, column: 50, scope: !15677)
!15687 = !DILocation(line: 952, column: 55, scope: !15677)
!15688 = !DILocation(line: 952, column: 61, scope: !15677)
!15689 = !DILocation(line: 952, column: 40, scope: !15677)
!15690 = !DILocation(line: 952, column: 2, scope: !15677)
!15691 = !DILocation(line: 952, column: 10, scope: !15677)
!15692 = !DILocation(line: 952, column: 12, scope: !15677)
!15693 = !DILocation(line: 952, column: 26, scope: !15677)
!15694 = !DILocation(line: 952, column: 38, scope: !15677)
!15695 = !DILocation(line: 953, column: 5, scope: !15677)
!15696 = !DILocation(line: 954, column: 6, scope: !15697)
!15697 = distinct !DILexicalBlock(scope: !15677, file: !3, line: 954, column: 6)
!15698 = !DILocation(line: 954, column: 12, scope: !15697)
!15699 = !DILocation(line: 954, column: 17, scope: !15697)
!15700 = !DILocation(line: 954, column: 10, scope: !15697)
!15701 = !DILocation(line: 954, column: 6, scope: !15677)
!15702 = !DILocation(line: 955, column: 3, scope: !15697)
!15703 = !DILocation(line: 956, column: 43, scope: !15677)
!15704 = !DILocation(line: 956, column: 48, scope: !15677)
!15705 = !DILocation(line: 956, column: 52, scope: !15677)
!15706 = !DILocation(line: 956, column: 57, scope: !15677)
!15707 = !DILocation(line: 956, column: 66, scope: !15677)
!15708 = !DILocation(line: 956, column: 71, scope: !15677)
!15709 = !DILocation(line: 956, column: 75, scope: !15677)
!15710 = !DILocation(line: 956, column: 79, scope: !15677)
!15711 = !DILocation(line: 956, column: 65, scope: !15677)
!15712 = !DILocation(line: 956, column: 63, scope: !15677)
!15713 = !DILocation(line: 956, column: 42, scope: !15677)
!15714 = !DILocation(line: 956, column: 2, scope: !15677)
!15715 = !DILocation(line: 956, column: 10, scope: !15677)
!15716 = !DILocation(line: 956, column: 12, scope: !15677)
!15717 = !DILocation(line: 956, column: 26, scope: !15677)
!15718 = !DILocation(line: 956, column: 40, scope: !15677)
!15719 = !DILocation(line: 957, column: 6, scope: !15677)
!15720 = !DILocation(line: 958, column: 6, scope: !15721)
!15721 = distinct !DILexicalBlock(scope: !15677, file: !3, line: 958, column: 6)
!15722 = !DILocation(line: 958, column: 12, scope: !15721)
!15723 = !DILocation(line: 958, column: 17, scope: !15721)
!15724 = !DILocation(line: 958, column: 10, scope: !15721)
!15725 = !DILocation(line: 958, column: 6, scope: !15677)
!15726 = !DILocation(line: 959, column: 3, scope: !15721)
!15727 = !DILocation(line: 960, column: 2, scope: !15677)
!15728 = !DILabel(scope: !15677, name: "fail_len", file: !3, line: 961)
!15729 = !DILocation(line: 961, column: 1, scope: !15677)
!15730 = !DILocation(line: 962, column: 2, scope: !15677)
!15731 = !DILocation(line: 963, column: 2, scope: !15677)
!15732 = !DILocation(line: 964, column: 1, scope: !15677)
!15733 = distinct !DISubprogram(name: "drm_dp_sideband_parse_remote_dpcd_read", scope: !3, file: !3, line: 845, type: !14951, scopeLine: 847, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15734 = !DILocalVariable(name: "raw", arg: 1, scope: !15733, file: !3, line: 845, type: !9805)
!15735 = !DILocation(line: 845, column: 83, scope: !15733)
!15736 = !DILocalVariable(name: "repmsg", arg: 2, scope: !15733, file: !3, line: 846, type: !14953)
!15737 = !DILocation(line: 846, column: 49, scope: !15733)
!15738 = !DILocalVariable(name: "idx", scope: !15733, file: !3, line: 848, type: !115)
!15739 = !DILocation(line: 848, column: 6, scope: !15733)
!15740 = !DILocation(line: 850, column: 47, scope: !15733)
!15741 = !DILocation(line: 850, column: 52, scope: !15733)
!15742 = !DILocation(line: 850, column: 56, scope: !15733)
!15743 = !DILocation(line: 850, column: 61, scope: !15733)
!15744 = !DILocation(line: 850, column: 2, scope: !15733)
!15745 = !DILocation(line: 850, column: 10, scope: !15733)
!15746 = !DILocation(line: 850, column: 12, scope: !15733)
!15747 = !DILocation(line: 850, column: 33, scope: !15733)
!15748 = !DILocation(line: 850, column: 45, scope: !15733)
!15749 = !DILocation(line: 851, column: 5, scope: !15733)
!15750 = !DILocation(line: 852, column: 6, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 852, column: 6)
!15752 = !DILocation(line: 852, column: 12, scope: !15751)
!15753 = !DILocation(line: 852, column: 17, scope: !15751)
!15754 = !DILocation(line: 852, column: 10, scope: !15751)
!15755 = !DILocation(line: 852, column: 6, scope: !15733)
!15756 = !DILocation(line: 853, column: 3, scope: !15751)
!15757 = !DILocation(line: 854, column: 45, scope: !15733)
!15758 = !DILocation(line: 854, column: 50, scope: !15733)
!15759 = !DILocation(line: 854, column: 54, scope: !15733)
!15760 = !DILocation(line: 854, column: 2, scope: !15733)
!15761 = !DILocation(line: 854, column: 10, scope: !15733)
!15762 = !DILocation(line: 854, column: 12, scope: !15733)
!15763 = !DILocation(line: 854, column: 33, scope: !15733)
!15764 = !DILocation(line: 854, column: 43, scope: !15733)
!15765 = !DILocation(line: 855, column: 5, scope: !15733)
!15766 = !DILocation(line: 856, column: 6, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15733, file: !3, line: 856, column: 6)
!15768 = !DILocation(line: 856, column: 12, scope: !15767)
!15769 = !DILocation(line: 856, column: 17, scope: !15767)
!15770 = !DILocation(line: 856, column: 10, scope: !15767)
!15771 = !DILocation(line: 856, column: 6, scope: !15733)
!15772 = !DILocation(line: 857, column: 3, scope: !15767)
!15773 = !DILocation(line: 859, column: 9, scope: !15733)
!15774 = !DILocation(line: 859, column: 17, scope: !15733)
!15775 = !DILocation(line: 859, column: 19, scope: !15733)
!15776 = !DILocation(line: 859, column: 40, scope: !15733)
!15777 = !DILocation(line: 859, column: 2, scope: !15733)
!15778 = !DILocation(line: 859, column: 48, scope: !15733)
!15779 = !DILocation(line: 859, column: 53, scope: !15733)
!15780 = !DILocation(line: 859, column: 57, scope: !15733)
!15781 = !DILocation(line: 859, column: 63, scope: !15733)
!15782 = !DILocation(line: 859, column: 71, scope: !15733)
!15783 = !DILocation(line: 859, column: 73, scope: !15733)
!15784 = !DILocation(line: 859, column: 94, scope: !15733)
!15785 = !DILocation(line: 860, column: 2, scope: !15733)
!15786 = !DILabel(scope: !15733, name: "fail_len", file: !3, line: 861)
!15787 = !DILocation(line: 861, column: 1, scope: !15733)
!15788 = !DILocation(line: 862, column: 2, scope: !15733)
!15789 = !DILocation(line: 863, column: 2, scope: !15733)
!15790 = !DILocation(line: 864, column: 1, scope: !15733)
!15791 = distinct !DISubprogram(name: "drm_dp_sideband_parse_remote_dpcd_write", scope: !3, file: !3, line: 866, type: !14951, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15792 = !DILocalVariable(name: "raw", arg: 1, scope: !15791, file: !3, line: 866, type: !9805)
!15793 = !DILocation(line: 866, column: 84, scope: !15791)
!15794 = !DILocalVariable(name: "repmsg", arg: 2, scope: !15791, file: !3, line: 867, type: !14953)
!15795 = !DILocation(line: 867, column: 52, scope: !15791)
!15796 = !DILocalVariable(name: "idx", scope: !15791, file: !3, line: 869, type: !115)
!15797 = !DILocation(line: 869, column: 6, scope: !15791)
!15798 = !DILocation(line: 871, column: 48, scope: !15791)
!15799 = !DILocation(line: 871, column: 53, scope: !15791)
!15800 = !DILocation(line: 871, column: 57, scope: !15791)
!15801 = !DILocation(line: 871, column: 62, scope: !15791)
!15802 = !DILocation(line: 871, column: 2, scope: !15791)
!15803 = !DILocation(line: 871, column: 10, scope: !15791)
!15804 = !DILocation(line: 871, column: 12, scope: !15791)
!15805 = !DILocation(line: 871, column: 34, scope: !15791)
!15806 = !DILocation(line: 871, column: 46, scope: !15791)
!15807 = !DILocation(line: 872, column: 5, scope: !15791)
!15808 = !DILocation(line: 873, column: 6, scope: !15809)
!15809 = distinct !DILexicalBlock(scope: !15791, file: !3, line: 873, column: 6)
!15810 = !DILocation(line: 873, column: 12, scope: !15809)
!15811 = !DILocation(line: 873, column: 17, scope: !15809)
!15812 = !DILocation(line: 873, column: 10, scope: !15809)
!15813 = !DILocation(line: 873, column: 6, scope: !15791)
!15814 = !DILocation(line: 874, column: 3, scope: !15809)
!15815 = !DILocation(line: 875, column: 2, scope: !15791)
!15816 = !DILabel(scope: !15791, name: "fail_len", file: !3, line: 876)
!15817 = !DILocation(line: 876, column: 1, scope: !15791)
!15818 = !DILocation(line: 877, column: 2, scope: !15791)
!15819 = !DILocation(line: 878, column: 2, scope: !15791)
!15820 = !DILocation(line: 879, column: 1, scope: !15791)
!15821 = distinct !DISubprogram(name: "drm_dp_sideband_parse_remote_i2c_read_ack", scope: !3, file: !3, line: 881, type: !14951, scopeLine: 883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15822 = !DILocalVariable(name: "raw", arg: 1, scope: !15821, file: !3, line: 881, type: !9805)
!15823 = !DILocation(line: 881, column: 86, scope: !15821)
!15824 = !DILocalVariable(name: "repmsg", arg: 2, scope: !15821, file: !3, line: 882, type: !14953)
!15825 = !DILocation(line: 882, column: 52, scope: !15821)
!15826 = !DILocalVariable(name: "idx", scope: !15821, file: !3, line: 884, type: !115)
!15827 = !DILocation(line: 884, column: 6, scope: !15821)
!15828 = !DILocation(line: 886, column: 47, scope: !15821)
!15829 = !DILocation(line: 886, column: 52, scope: !15821)
!15830 = !DILocation(line: 886, column: 56, scope: !15821)
!15831 = !DILocation(line: 886, column: 61, scope: !15821)
!15832 = !DILocation(line: 886, column: 46, scope: !15821)
!15833 = !DILocation(line: 886, column: 2, scope: !15821)
!15834 = !DILocation(line: 886, column: 10, scope: !15821)
!15835 = !DILocation(line: 886, column: 12, scope: !15821)
!15836 = !DILocation(line: 886, column: 32, scope: !15821)
!15837 = !DILocation(line: 886, column: 44, scope: !15821)
!15838 = !DILocation(line: 887, column: 5, scope: !15821)
!15839 = !DILocation(line: 888, column: 6, scope: !15840)
!15840 = distinct !DILexicalBlock(scope: !15821, file: !3, line: 888, column: 6)
!15841 = !DILocation(line: 888, column: 12, scope: !15840)
!15842 = !DILocation(line: 888, column: 17, scope: !15840)
!15843 = !DILocation(line: 888, column: 10, scope: !15840)
!15844 = !DILocation(line: 888, column: 6, scope: !15821)
!15845 = !DILocation(line: 889, column: 3, scope: !15840)
!15846 = !DILocation(line: 890, column: 44, scope: !15821)
!15847 = !DILocation(line: 890, column: 49, scope: !15821)
!15848 = !DILocation(line: 890, column: 53, scope: !15821)
!15849 = !DILocation(line: 890, column: 2, scope: !15821)
!15850 = !DILocation(line: 890, column: 10, scope: !15821)
!15851 = !DILocation(line: 890, column: 12, scope: !15821)
!15852 = !DILocation(line: 890, column: 32, scope: !15821)
!15853 = !DILocation(line: 890, column: 42, scope: !15821)
!15854 = !DILocation(line: 891, column: 5, scope: !15821)
!15855 = !DILocation(line: 893, column: 9, scope: !15821)
!15856 = !DILocation(line: 893, column: 17, scope: !15821)
!15857 = !DILocation(line: 893, column: 19, scope: !15821)
!15858 = !DILocation(line: 893, column: 39, scope: !15821)
!15859 = !DILocation(line: 893, column: 2, scope: !15821)
!15860 = !DILocation(line: 893, column: 47, scope: !15821)
!15861 = !DILocation(line: 893, column: 52, scope: !15821)
!15862 = !DILocation(line: 893, column: 56, scope: !15821)
!15863 = !DILocation(line: 893, column: 62, scope: !15821)
!15864 = !DILocation(line: 893, column: 70, scope: !15821)
!15865 = !DILocation(line: 893, column: 72, scope: !15821)
!15866 = !DILocation(line: 893, column: 92, scope: !15821)
!15867 = !DILocation(line: 894, column: 2, scope: !15821)
!15868 = !DILabel(scope: !15821, name: "fail_len", file: !3, line: 895)
!15869 = !DILocation(line: 895, column: 1, scope: !15821)
!15870 = !DILocation(line: 896, column: 2, scope: !15821)
!15871 = !DILocation(line: 897, column: 2, scope: !15821)
!15872 = !DILocation(line: 898, column: 1, scope: !15821)
!15873 = distinct !DISubprogram(name: "drm_dp_sideband_parse_enum_path_resources_ack", scope: !3, file: !3, line: 900, type: !14951, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15874 = !DILocalVariable(name: "raw", arg: 1, scope: !15873, file: !3, line: 900, type: !9805)
!15875 = !DILocation(line: 900, column: 90, scope: !15873)
!15876 = !DILocalVariable(name: "repmsg", arg: 2, scope: !15873, file: !3, line: 901, type: !14953)
!15877 = !DILocation(line: 901, column: 49, scope: !15873)
!15878 = !DILocalVariable(name: "idx", scope: !15873, file: !3, line: 903, type: !115)
!15879 = !DILocation(line: 903, column: 6, scope: !15873)
!15880 = !DILocation(line: 905, column: 42, scope: !15873)
!15881 = !DILocation(line: 905, column: 47, scope: !15873)
!15882 = !DILocation(line: 905, column: 51, scope: !15873)
!15883 = !DILocation(line: 905, column: 56, scope: !15873)
!15884 = !DILocation(line: 905, column: 62, scope: !15873)
!15885 = !DILocation(line: 905, column: 41, scope: !15873)
!15886 = !DILocation(line: 905, column: 2, scope: !15873)
!15887 = !DILocation(line: 905, column: 10, scope: !15873)
!15888 = !DILocation(line: 905, column: 12, scope: !15873)
!15889 = !DILocation(line: 905, column: 27, scope: !15873)
!15890 = !DILocation(line: 905, column: 39, scope: !15873)
!15891 = !DILocation(line: 906, column: 41, scope: !15873)
!15892 = !DILocation(line: 906, column: 46, scope: !15873)
!15893 = !DILocation(line: 906, column: 50, scope: !15873)
!15894 = !DILocation(line: 906, column: 55, scope: !15873)
!15895 = !DILocation(line: 906, column: 2, scope: !15873)
!15896 = !DILocation(line: 906, column: 10, scope: !15873)
!15897 = !DILocation(line: 906, column: 12, scope: !15873)
!15898 = !DILocation(line: 906, column: 27, scope: !15873)
!15899 = !DILocation(line: 906, column: 39, scope: !15873)
!15900 = !DILocation(line: 907, column: 5, scope: !15873)
!15901 = !DILocation(line: 908, column: 6, scope: !15902)
!15902 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 908, column: 6)
!15903 = !DILocation(line: 908, column: 12, scope: !15902)
!15904 = !DILocation(line: 908, column: 17, scope: !15902)
!15905 = !DILocation(line: 908, column: 10, scope: !15902)
!15906 = !DILocation(line: 908, column: 6, scope: !15873)
!15907 = !DILocation(line: 909, column: 3, scope: !15902)
!15908 = !DILocation(line: 910, column: 53, scope: !15873)
!15909 = !DILocation(line: 910, column: 58, scope: !15873)
!15910 = !DILocation(line: 910, column: 62, scope: !15873)
!15911 = !DILocation(line: 910, column: 67, scope: !15873)
!15912 = !DILocation(line: 910, column: 76, scope: !15873)
!15913 = !DILocation(line: 910, column: 81, scope: !15873)
!15914 = !DILocation(line: 910, column: 85, scope: !15873)
!15915 = !DILocation(line: 910, column: 88, scope: !15873)
!15916 = !DILocation(line: 910, column: 75, scope: !15873)
!15917 = !DILocation(line: 910, column: 73, scope: !15873)
!15918 = !DILocation(line: 910, column: 52, scope: !15873)
!15919 = !DILocation(line: 910, column: 2, scope: !15873)
!15920 = !DILocation(line: 910, column: 10, scope: !15873)
!15921 = !DILocation(line: 910, column: 12, scope: !15873)
!15922 = !DILocation(line: 910, column: 27, scope: !15873)
!15923 = !DILocation(line: 910, column: 50, scope: !15873)
!15924 = !DILocation(line: 911, column: 6, scope: !15873)
!15925 = !DILocation(line: 912, column: 6, scope: !15926)
!15926 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 912, column: 6)
!15927 = !DILocation(line: 912, column: 12, scope: !15926)
!15928 = !DILocation(line: 912, column: 17, scope: !15926)
!15929 = !DILocation(line: 912, column: 10, scope: !15926)
!15930 = !DILocation(line: 912, column: 6, scope: !15873)
!15931 = !DILocation(line: 913, column: 3, scope: !15926)
!15932 = !DILocation(line: 914, column: 54, scope: !15873)
!15933 = !DILocation(line: 914, column: 59, scope: !15873)
!15934 = !DILocation(line: 914, column: 63, scope: !15873)
!15935 = !DILocation(line: 914, column: 68, scope: !15873)
!15936 = !DILocation(line: 914, column: 77, scope: !15873)
!15937 = !DILocation(line: 914, column: 82, scope: !15873)
!15938 = !DILocation(line: 914, column: 86, scope: !15873)
!15939 = !DILocation(line: 914, column: 89, scope: !15873)
!15940 = !DILocation(line: 914, column: 76, scope: !15873)
!15941 = !DILocation(line: 914, column: 74, scope: !15873)
!15942 = !DILocation(line: 914, column: 53, scope: !15873)
!15943 = !DILocation(line: 914, column: 2, scope: !15873)
!15944 = !DILocation(line: 914, column: 10, scope: !15873)
!15945 = !DILocation(line: 914, column: 12, scope: !15873)
!15946 = !DILocation(line: 914, column: 27, scope: !15873)
!15947 = !DILocation(line: 914, column: 51, scope: !15873)
!15948 = !DILocation(line: 915, column: 6, scope: !15873)
!15949 = !DILocation(line: 916, column: 6, scope: !15950)
!15950 = distinct !DILexicalBlock(scope: !15873, file: !3, line: 916, column: 6)
!15951 = !DILocation(line: 916, column: 12, scope: !15950)
!15952 = !DILocation(line: 916, column: 17, scope: !15950)
!15953 = !DILocation(line: 916, column: 10, scope: !15950)
!15954 = !DILocation(line: 916, column: 6, scope: !15873)
!15955 = !DILocation(line: 917, column: 3, scope: !15950)
!15956 = !DILocation(line: 918, column: 2, scope: !15873)
!15957 = !DILabel(scope: !15873, name: "fail_len", file: !3, line: 919)
!15958 = !DILocation(line: 919, column: 1, scope: !15873)
!15959 = !DILocation(line: 920, column: 2, scope: !15873)
!15960 = !DILocation(line: 921, column: 2, scope: !15873)
!15961 = !DILocation(line: 922, column: 1, scope: !15873)
!15962 = distinct !DISubprogram(name: "drm_dp_sideband_parse_allocate_payload_ack", scope: !3, file: !3, line: 924, type: !14951, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!15963 = !DILocalVariable(name: "raw", arg: 1, scope: !15962, file: !3, line: 924, type: !9805)
!15964 = !DILocation(line: 924, column: 87, scope: !15962)
!15965 = !DILocalVariable(name: "repmsg", arg: 2, scope: !15962, file: !3, line: 925, type: !14953)
!15966 = !DILocation(line: 925, column: 49, scope: !15962)
!15967 = !DILocalVariable(name: "idx", scope: !15962, file: !3, line: 927, type: !115)
!15968 = !DILocation(line: 927, column: 6, scope: !15962)
!15969 = !DILocation(line: 929, column: 44, scope: !15962)
!15970 = !DILocation(line: 929, column: 49, scope: !15962)
!15971 = !DILocation(line: 929, column: 53, scope: !15962)
!15972 = !DILocation(line: 929, column: 58, scope: !15962)
!15973 = !DILocation(line: 929, column: 64, scope: !15962)
!15974 = !DILocation(line: 929, column: 43, scope: !15962)
!15975 = !DILocation(line: 929, column: 2, scope: !15962)
!15976 = !DILocation(line: 929, column: 10, scope: !15962)
!15977 = !DILocation(line: 929, column: 12, scope: !15962)
!15978 = !DILocation(line: 929, column: 29, scope: !15962)
!15979 = !DILocation(line: 929, column: 41, scope: !15962)
!15980 = !DILocation(line: 930, column: 5, scope: !15962)
!15981 = !DILocation(line: 931, column: 6, scope: !15982)
!15982 = distinct !DILexicalBlock(scope: !15962, file: !3, line: 931, column: 6)
!15983 = !DILocation(line: 931, column: 12, scope: !15982)
!15984 = !DILocation(line: 931, column: 17, scope: !15982)
!15985 = !DILocation(line: 931, column: 10, scope: !15982)
!15986 = !DILocation(line: 931, column: 6, scope: !15962)
!15987 = !DILocation(line: 932, column: 3, scope: !15982)
!15988 = !DILocation(line: 933, column: 36, scope: !15962)
!15989 = !DILocation(line: 933, column: 41, scope: !15962)
!15990 = !DILocation(line: 933, column: 45, scope: !15962)
!15991 = !DILocation(line: 933, column: 2, scope: !15962)
!15992 = !DILocation(line: 933, column: 10, scope: !15962)
!15993 = !DILocation(line: 933, column: 12, scope: !15962)
!15994 = !DILocation(line: 933, column: 29, scope: !15962)
!15995 = !DILocation(line: 933, column: 34, scope: !15962)
!15996 = !DILocation(line: 934, column: 5, scope: !15962)
!15997 = !DILocation(line: 935, column: 6, scope: !15998)
!15998 = distinct !DILexicalBlock(scope: !15962, file: !3, line: 935, column: 6)
!15999 = !DILocation(line: 935, column: 12, scope: !15998)
!16000 = !DILocation(line: 935, column: 17, scope: !15998)
!16001 = !DILocation(line: 935, column: 10, scope: !15998)
!16002 = !DILocation(line: 935, column: 6, scope: !15962)
!16003 = !DILocation(line: 936, column: 3, scope: !15998)
!16004 = !DILocation(line: 937, column: 46, scope: !15962)
!16005 = !DILocation(line: 937, column: 51, scope: !15962)
!16006 = !DILocation(line: 937, column: 55, scope: !15962)
!16007 = !DILocation(line: 937, column: 60, scope: !15962)
!16008 = !DILocation(line: 937, column: 69, scope: !15962)
!16009 = !DILocation(line: 937, column: 74, scope: !15962)
!16010 = !DILocation(line: 937, column: 78, scope: !15962)
!16011 = !DILocation(line: 937, column: 81, scope: !15962)
!16012 = !DILocation(line: 937, column: 68, scope: !15962)
!16013 = !DILocation(line: 937, column: 66, scope: !15962)
!16014 = !DILocation(line: 937, column: 45, scope: !15962)
!16015 = !DILocation(line: 937, column: 2, scope: !15962)
!16016 = !DILocation(line: 937, column: 10, scope: !15962)
!16017 = !DILocation(line: 937, column: 12, scope: !15962)
!16018 = !DILocation(line: 937, column: 29, scope: !15962)
!16019 = !DILocation(line: 937, column: 43, scope: !15962)
!16020 = !DILocation(line: 938, column: 6, scope: !15962)
!16021 = !DILocation(line: 939, column: 6, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !15962, file: !3, line: 939, column: 6)
!16023 = !DILocation(line: 939, column: 12, scope: !16022)
!16024 = !DILocation(line: 939, column: 17, scope: !16022)
!16025 = !DILocation(line: 939, column: 10, scope: !16022)
!16026 = !DILocation(line: 939, column: 6, scope: !15962)
!16027 = !DILocation(line: 940, column: 3, scope: !16022)
!16028 = !DILocation(line: 941, column: 2, scope: !15962)
!16029 = !DILabel(scope: !15962, name: "fail_len", file: !3, line: 942)
!16030 = !DILocation(line: 942, column: 1, scope: !15962)
!16031 = !DILocation(line: 943, column: 2, scope: !15962)
!16032 = !DILocation(line: 944, column: 2, scope: !15962)
!16033 = !DILocation(line: 945, column: 1, scope: !15962)
!16034 = distinct !DISubprogram(name: "drm_dp_sideband_parse_power_updown_phy_ack", scope: !3, file: !3, line: 966, type: !14951, scopeLine: 968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16035 = !DILocalVariable(name: "raw", arg: 1, scope: !16034, file: !3, line: 966, type: !9805)
!16036 = !DILocation(line: 966, column: 87, scope: !16034)
!16037 = !DILocalVariable(name: "repmsg", arg: 2, scope: !16034, file: !3, line: 967, type: !14953)
!16038 = !DILocation(line: 967, column: 53, scope: !16034)
!16039 = !DILocalVariable(name: "idx", scope: !16034, file: !3, line: 969, type: !115)
!16040 = !DILocation(line: 969, column: 6, scope: !16034)
!16041 = !DILocation(line: 971, column: 39, scope: !16034)
!16042 = !DILocation(line: 971, column: 44, scope: !16034)
!16043 = !DILocation(line: 971, column: 48, scope: !16034)
!16044 = !DILocation(line: 971, column: 53, scope: !16034)
!16045 = !DILocation(line: 971, column: 59, scope: !16034)
!16046 = !DILocation(line: 971, column: 38, scope: !16034)
!16047 = !DILocation(line: 971, column: 2, scope: !16034)
!16048 = !DILocation(line: 971, column: 10, scope: !16034)
!16049 = !DILocation(line: 971, column: 12, scope: !16034)
!16050 = !DILocation(line: 971, column: 24, scope: !16034)
!16051 = !DILocation(line: 971, column: 36, scope: !16034)
!16052 = !DILocation(line: 972, column: 5, scope: !16034)
!16053 = !DILocation(line: 973, column: 6, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16034, file: !3, line: 973, column: 6)
!16055 = !DILocation(line: 973, column: 12, scope: !16054)
!16056 = !DILocation(line: 973, column: 17, scope: !16054)
!16057 = !DILocation(line: 973, column: 10, scope: !16054)
!16058 = !DILocation(line: 973, column: 6, scope: !16034)
!16059 = !DILocation(line: 974, column: 3, scope: !16060)
!16060 = distinct !DILexicalBlock(scope: !16054, file: !3, line: 973, column: 25)
!16061 = !DILocation(line: 976, column: 3, scope: !16060)
!16062 = !DILocation(line: 978, column: 2, scope: !16034)
!16063 = !DILocation(line: 979, column: 1, scope: !16034)
!16064 = distinct !DISubprogram(name: "drm_dp_sideband_parse_query_stream_enc_status", scope: !3, file: !3, line: 982, type: !14951, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16065 = !DILocalVariable(name: "raw", arg: 1, scope: !16064, file: !3, line: 983, type: !9805)
!16066 = !DILocation(line: 983, column: 36, scope: !16064)
!16067 = !DILocalVariable(name: "repmsg", arg: 2, scope: !16064, file: !3, line: 984, type: !14953)
!16068 = !DILocation(line: 984, column: 44, scope: !16064)
!16069 = !DILocalVariable(name: "reply", scope: !16064, file: !3, line: 986, type: !8433)
!16070 = !DILocation(line: 986, column: 51, scope: !16064)
!16071 = !DILocation(line: 988, column: 11, scope: !16064)
!16072 = !DILocation(line: 988, column: 19, scope: !16064)
!16073 = !DILocation(line: 988, column: 21, scope: !16064)
!16074 = !DILocation(line: 988, column: 8, scope: !16064)
!16075 = !DILocation(line: 990, column: 21, scope: !16064)
!16076 = !DILocation(line: 990, column: 26, scope: !16064)
!16077 = !DILocation(line: 990, column: 2, scope: !16064)
!16078 = !DILocation(line: 990, column: 9, scope: !16064)
!16079 = !DILocation(line: 990, column: 19, scope: !16064)
!16080 = !DILocation(line: 992, column: 24, scope: !16064)
!16081 = !DILocation(line: 992, column: 29, scope: !16064)
!16082 = !DILocation(line: 992, column: 36, scope: !16064)
!16083 = !DILocation(line: 992, column: 2, scope: !16064)
!16084 = !DILocation(line: 992, column: 9, scope: !16064)
!16085 = !DILocation(line: 992, column: 22, scope: !16064)
!16086 = !DILocation(line: 1002, column: 34, scope: !16064)
!16087 = !DILocation(line: 1002, column: 39, scope: !16064)
!16088 = !DILocation(line: 1002, column: 46, scope: !16064)
!16089 = !DILocation(line: 1002, column: 2, scope: !16064)
!16090 = !DILocation(line: 1002, column: 9, scope: !16064)
!16091 = !DILocation(line: 1002, column: 32, scope: !16064)
!16092 = !DILocation(line: 1003, column: 34, scope: !16064)
!16093 = !DILocation(line: 1003, column: 39, scope: !16064)
!16094 = !DILocation(line: 1003, column: 46, scope: !16064)
!16095 = !DILocation(line: 1003, column: 2, scope: !16064)
!16096 = !DILocation(line: 1003, column: 9, scope: !16064)
!16097 = !DILocation(line: 1003, column: 32, scope: !16064)
!16098 = !DILocation(line: 1005, column: 40, scope: !16064)
!16099 = !DILocation(line: 1005, column: 45, scope: !16064)
!16100 = !DILocation(line: 1005, column: 52, scope: !16064)
!16101 = !DILocation(line: 1005, column: 2, scope: !16064)
!16102 = !DILocation(line: 1005, column: 9, scope: !16064)
!16103 = !DILocation(line: 1005, column: 38, scope: !16064)
!16104 = !DILocation(line: 1006, column: 33, scope: !16064)
!16105 = !DILocation(line: 1006, column: 38, scope: !16064)
!16106 = !DILocation(line: 1006, column: 45, scope: !16064)
!16107 = !DILocation(line: 1006, column: 2, scope: !16064)
!16108 = !DILocation(line: 1006, column: 9, scope: !16064)
!16109 = !DILocation(line: 1006, column: 31, scope: !16064)
!16110 = !DILocation(line: 1007, column: 41, scope: !16064)
!16111 = !DILocation(line: 1007, column: 46, scope: !16064)
!16112 = !DILocation(line: 1007, column: 53, scope: !16064)
!16113 = !DILocation(line: 1007, column: 2, scope: !16064)
!16114 = !DILocation(line: 1007, column: 9, scope: !16064)
!16115 = !DILocation(line: 1007, column: 39, scope: !16064)
!16116 = !DILocation(line: 1009, column: 29, scope: !16064)
!16117 = !DILocation(line: 1009, column: 34, scope: !16064)
!16118 = !DILocation(line: 1009, column: 41, scope: !16064)
!16119 = !DILocation(line: 1009, column: 27, scope: !16064)
!16120 = !DILocation(line: 1009, column: 26, scope: !16064)
!16121 = !DILocation(line: 1009, column: 2, scope: !16064)
!16122 = !DILocation(line: 1009, column: 9, scope: !16064)
!16123 = !DILocation(line: 1009, column: 24, scope: !16064)
!16124 = !DILocation(line: 1010, column: 33, scope: !16064)
!16125 = !DILocation(line: 1010, column: 38, scope: !16064)
!16126 = !DILocation(line: 1010, column: 45, scope: !16064)
!16127 = !DILocation(line: 1010, column: 31, scope: !16064)
!16128 = !DILocation(line: 1010, column: 30, scope: !16064)
!16129 = !DILocation(line: 1010, column: 2, scope: !16064)
!16130 = !DILocation(line: 1010, column: 9, scope: !16064)
!16131 = !DILocation(line: 1010, column: 28, scope: !16064)
!16132 = !DILocation(line: 1011, column: 31, scope: !16064)
!16133 = !DILocation(line: 1011, column: 36, scope: !16064)
!16134 = !DILocation(line: 1011, column: 43, scope: !16064)
!16135 = !DILocation(line: 1011, column: 29, scope: !16064)
!16136 = !DILocation(line: 1011, column: 28, scope: !16064)
!16137 = !DILocation(line: 1011, column: 2, scope: !16064)
!16138 = !DILocation(line: 1011, column: 9, scope: !16064)
!16139 = !DILocation(line: 1011, column: 26, scope: !16064)
!16140 = !DILocation(line: 1012, column: 18, scope: !16064)
!16141 = !DILocation(line: 1012, column: 23, scope: !16064)
!16142 = !DILocation(line: 1012, column: 30, scope: !16064)
!16143 = !DILocation(line: 1012, column: 47, scope: !16064)
!16144 = !DILocation(line: 1012, column: 17, scope: !16064)
!16145 = !DILocation(line: 1012, column: 2, scope: !16064)
!16146 = !DILocation(line: 1012, column: 9, scope: !16064)
!16147 = !DILocation(line: 1012, column: 15, scope: !16064)
!16148 = !DILocation(line: 1014, column: 2, scope: !16064)
!16149 = distinct !DISubprogram(name: "drm_dp_sideband_parse_req", scope: !3, file: !3, line: 1112, type: !16150, scopeLine: 1114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16150 = !DISubroutineType(types: !16151)
!16151 = !{!370, !9805, !6806}
!16152 = !DILocalVariable(name: "raw", arg: 1, scope: !16149, file: !3, line: 1112, type: !9805)
!16153 = !DILocation(line: 1112, column: 70, scope: !16149)
!16154 = !DILocalVariable(name: "msg", arg: 2, scope: !16149, file: !3, line: 1113, type: !6806)
!16155 = !DILocation(line: 1113, column: 48, scope: !16149)
!16156 = !DILocation(line: 1115, column: 9, scope: !16149)
!16157 = !DILocation(line: 1115, column: 2, scope: !16149)
!16158 = !DILocation(line: 1116, column: 19, scope: !16149)
!16159 = !DILocation(line: 1116, column: 24, scope: !16149)
!16160 = !DILocation(line: 1116, column: 31, scope: !16149)
!16161 = !DILocation(line: 1116, column: 18, scope: !16149)
!16162 = !DILocation(line: 1116, column: 2, scope: !16149)
!16163 = !DILocation(line: 1116, column: 7, scope: !16149)
!16164 = !DILocation(line: 1116, column: 16, scope: !16149)
!16165 = !DILocation(line: 1118, column: 10, scope: !16149)
!16166 = !DILocation(line: 1118, column: 15, scope: !16149)
!16167 = !DILocation(line: 1118, column: 2, scope: !16149)
!16168 = !DILocation(line: 1120, column: 57, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16149, file: !3, line: 1118, column: 25)
!16170 = !DILocation(line: 1120, column: 62, scope: !16169)
!16171 = !DILocation(line: 1120, column: 10, scope: !16169)
!16172 = !DILocation(line: 1120, column: 3, scope: !16169)
!16173 = !DILocation(line: 1122, column: 55, scope: !16169)
!16174 = !DILocation(line: 1122, column: 60, scope: !16169)
!16175 = !DILocation(line: 1122, column: 10, scope: !16169)
!16176 = !DILocation(line: 1122, column: 3, scope: !16169)
!16177 = !DILocation(line: 1124, column: 3, scope: !16169)
!16178 = !DILocation(line: 1126, column: 3, scope: !16169)
!16179 = !DILocation(line: 1128, column: 1, scope: !16149)
!16180 = distinct !DISubprogram(name: "drm_dp_send_up_ack_reply", scope: !3, file: !3, line: 3610, type: !16181, scopeLine: 3613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16181 = !DISubroutineType(types: !16182)
!16182 = !{!115, !406, !391, !115, !370}
!16183 = !DILocalVariable(name: "mgr", arg: 1, scope: !16180, file: !3, line: 3610, type: !406)
!16184 = !DILocation(line: 3610, column: 69, scope: !16180)
!16185 = !DILocalVariable(name: "mstb", arg: 2, scope: !16180, file: !3, line: 3611, type: !391)
!16186 = !DILocation(line: 3611, column: 35, scope: !16180)
!16187 = !DILocalVariable(name: "req_type", arg: 3, scope: !16180, file: !3, line: 3612, type: !115)
!16188 = !DILocation(line: 3612, column: 13, scope: !16180)
!16189 = !DILocalVariable(name: "broadcast", arg: 4, scope: !16180, file: !3, line: 3612, type: !370)
!16190 = !DILocation(line: 3612, column: 28, scope: !16180)
!16191 = !DILocalVariable(name: "txmsg", scope: !16180, file: !3, line: 3614, type: !6003)
!16192 = !DILocation(line: 3614, column: 33, scope: !16180)
!16193 = !DILocation(line: 3616, column: 10, scope: !16180)
!16194 = !DILocation(line: 3616, column: 8, scope: !16180)
!16195 = !DILocation(line: 3617, column: 7, scope: !16196)
!16196 = distinct !DILexicalBlock(scope: !16180, file: !3, line: 3617, column: 6)
!16197 = !DILocation(line: 3617, column: 6, scope: !16180)
!16198 = !DILocation(line: 3618, column: 3, scope: !16196)
!16199 = !DILocation(line: 3620, column: 15, scope: !16180)
!16200 = !DILocation(line: 3620, column: 2, scope: !16180)
!16201 = !DILocation(line: 3620, column: 9, scope: !16180)
!16202 = !DILocation(line: 3620, column: 13, scope: !16180)
!16203 = !DILocation(line: 3621, column: 29, scope: !16180)
!16204 = !DILocation(line: 3621, column: 36, scope: !16180)
!16205 = !DILocation(line: 3621, column: 2, scope: !16180)
!16206 = !DILocation(line: 3623, column: 14, scope: !16180)
!16207 = !DILocation(line: 3623, column: 19, scope: !16180)
!16208 = !DILocation(line: 3623, column: 2, scope: !16180)
!16209 = !DILocation(line: 3625, column: 26, scope: !16180)
!16210 = !DILocation(line: 3625, column: 31, scope: !16180)
!16211 = !DILocation(line: 3625, column: 2, scope: !16180)
!16212 = !DILocation(line: 3626, column: 16, scope: !16180)
!16213 = !DILocation(line: 3626, column: 21, scope: !16180)
!16214 = !DILocation(line: 3626, column: 2, scope: !16180)
!16215 = !DILocation(line: 3628, column: 8, scope: !16180)
!16216 = !DILocation(line: 3628, column: 2, scope: !16180)
!16217 = !DILocation(line: 3629, column: 2, scope: !16180)
!16218 = !DILocation(line: 3630, column: 1, scope: !16180)
!16219 = distinct !DISubprogram(name: "drm_dp_sideband_parse_connection_status_notify", scope: !3, file: !3, line: 1062, type: !16150, scopeLine: 1064, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16220 = !DILocalVariable(name: "raw", arg: 1, scope: !16219, file: !3, line: 1062, type: !9805)
!16221 = !DILocation(line: 1062, column: 91, scope: !16219)
!16222 = !DILocalVariable(name: "msg", arg: 2, scope: !16219, file: !3, line: 1063, type: !6806)
!16223 = !DILocation(line: 1063, column: 48, scope: !16219)
!16224 = !DILocalVariable(name: "idx", scope: !16219, file: !3, line: 1065, type: !115)
!16225 = !DILocation(line: 1065, column: 6, scope: !16219)
!16226 = !DILocation(line: 1067, column: 34, scope: !16219)
!16227 = !DILocation(line: 1067, column: 39, scope: !16219)
!16228 = !DILocation(line: 1067, column: 43, scope: !16219)
!16229 = !DILocation(line: 1067, column: 48, scope: !16219)
!16230 = !DILocation(line: 1067, column: 56, scope: !16219)
!16231 = !DILocation(line: 1067, column: 33, scope: !16219)
!16232 = !DILocation(line: 1067, column: 2, scope: !16219)
!16233 = !DILocation(line: 1067, column: 7, scope: !16219)
!16234 = !DILocation(line: 1067, column: 9, scope: !16219)
!16235 = !DILocation(line: 1067, column: 19, scope: !16219)
!16236 = !DILocation(line: 1067, column: 31, scope: !16219)
!16237 = !DILocation(line: 1068, column: 5, scope: !16219)
!16238 = !DILocation(line: 1069, column: 6, scope: !16239)
!16239 = distinct !DILexicalBlock(scope: !16219, file: !3, line: 1069, column: 6)
!16240 = !DILocation(line: 1069, column: 12, scope: !16239)
!16241 = !DILocation(line: 1069, column: 17, scope: !16239)
!16242 = !DILocation(line: 1069, column: 10, scope: !16239)
!16243 = !DILocation(line: 1069, column: 6, scope: !16219)
!16244 = !DILocation(line: 1070, column: 3, scope: !16239)
!16245 = !DILocation(line: 1072, column: 9, scope: !16219)
!16246 = !DILocation(line: 1072, column: 14, scope: !16219)
!16247 = !DILocation(line: 1072, column: 16, scope: !16219)
!16248 = !DILocation(line: 1072, column: 26, scope: !16219)
!16249 = !DILocation(line: 1072, column: 2, scope: !16219)
!16250 = !DILocation(line: 1072, column: 33, scope: !16219)
!16251 = !DILocation(line: 1072, column: 38, scope: !16219)
!16252 = !DILocation(line: 1072, column: 42, scope: !16219)
!16253 = !DILocation(line: 1073, column: 6, scope: !16219)
!16254 = !DILocation(line: 1074, column: 6, scope: !16255)
!16255 = distinct !DILexicalBlock(scope: !16219, file: !3, line: 1074, column: 6)
!16256 = !DILocation(line: 1074, column: 12, scope: !16255)
!16257 = !DILocation(line: 1074, column: 17, scope: !16255)
!16258 = !DILocation(line: 1074, column: 10, scope: !16255)
!16259 = !DILocation(line: 1074, column: 6, scope: !16219)
!16260 = !DILocation(line: 1075, column: 3, scope: !16255)
!16261 = !DILocation(line: 1077, column: 48, scope: !16219)
!16262 = !DILocation(line: 1077, column: 53, scope: !16219)
!16263 = !DILocation(line: 1077, column: 57, scope: !16219)
!16264 = !DILocation(line: 1077, column: 62, scope: !16219)
!16265 = !DILocation(line: 1077, column: 68, scope: !16219)
!16266 = !DILocation(line: 1077, column: 47, scope: !16219)
!16267 = !DILocation(line: 1077, column: 2, scope: !16219)
!16268 = !DILocation(line: 1077, column: 7, scope: !16219)
!16269 = !DILocation(line: 1077, column: 9, scope: !16219)
!16270 = !DILocation(line: 1077, column: 19, scope: !16219)
!16271 = !DILocation(line: 1077, column: 45, scope: !16219)
!16272 = !DILocation(line: 1078, column: 53, scope: !16219)
!16273 = !DILocation(line: 1078, column: 58, scope: !16219)
!16274 = !DILocation(line: 1078, column: 62, scope: !16219)
!16275 = !DILocation(line: 1078, column: 67, scope: !16219)
!16276 = !DILocation(line: 1078, column: 73, scope: !16219)
!16277 = !DILocation(line: 1078, column: 52, scope: !16219)
!16278 = !DILocation(line: 1078, column: 2, scope: !16219)
!16279 = !DILocation(line: 1078, column: 7, scope: !16219)
!16280 = !DILocation(line: 1078, column: 9, scope: !16219)
!16281 = !DILocation(line: 1078, column: 19, scope: !16219)
!16282 = !DILocation(line: 1078, column: 50, scope: !16219)
!16283 = !DILocation(line: 1079, column: 48, scope: !16219)
!16284 = !DILocation(line: 1079, column: 53, scope: !16219)
!16285 = !DILocation(line: 1079, column: 57, scope: !16219)
!16286 = !DILocation(line: 1079, column: 62, scope: !16219)
!16287 = !DILocation(line: 1079, column: 68, scope: !16219)
!16288 = !DILocation(line: 1079, column: 47, scope: !16219)
!16289 = !DILocation(line: 1079, column: 2, scope: !16219)
!16290 = !DILocation(line: 1079, column: 7, scope: !16219)
!16291 = !DILocation(line: 1079, column: 9, scope: !16219)
!16292 = !DILocation(line: 1079, column: 19, scope: !16219)
!16293 = !DILocation(line: 1079, column: 45, scope: !16219)
!16294 = !DILocation(line: 1080, column: 33, scope: !16219)
!16295 = !DILocation(line: 1080, column: 38, scope: !16219)
!16296 = !DILocation(line: 1080, column: 42, scope: !16219)
!16297 = !DILocation(line: 1080, column: 47, scope: !16219)
!16298 = !DILocation(line: 1080, column: 53, scope: !16219)
!16299 = !DILocation(line: 1080, column: 32, scope: !16219)
!16300 = !DILocation(line: 1080, column: 2, scope: !16219)
!16301 = !DILocation(line: 1080, column: 7, scope: !16219)
!16302 = !DILocation(line: 1080, column: 9, scope: !16219)
!16303 = !DILocation(line: 1080, column: 19, scope: !16219)
!16304 = !DILocation(line: 1080, column: 30, scope: !16219)
!16305 = !DILocation(line: 1081, column: 39, scope: !16219)
!16306 = !DILocation(line: 1081, column: 44, scope: !16219)
!16307 = !DILocation(line: 1081, column: 48, scope: !16219)
!16308 = !DILocation(line: 1081, column: 53, scope: !16219)
!16309 = !DILocation(line: 1081, column: 38, scope: !16219)
!16310 = !DILocation(line: 1081, column: 2, scope: !16219)
!16311 = !DILocation(line: 1081, column: 7, scope: !16219)
!16312 = !DILocation(line: 1081, column: 9, scope: !16219)
!16313 = !DILocation(line: 1081, column: 19, scope: !16219)
!16314 = !DILocation(line: 1081, column: 36, scope: !16219)
!16315 = !DILocation(line: 1082, column: 5, scope: !16219)
!16316 = !DILocation(line: 1083, column: 2, scope: !16219)
!16317 = !DILabel(scope: !16219, name: "fail_len", file: !3, line: 1084)
!16318 = !DILocation(line: 1084, column: 1, scope: !16219)
!16319 = !DILocation(line: 1085, column: 2, scope: !16219)
!16320 = !DILocation(line: 1086, column: 2, scope: !16219)
!16321 = !DILocation(line: 1087, column: 1, scope: !16219)
!16322 = distinct !DISubprogram(name: "drm_dp_sideband_parse_resource_status_notify", scope: !3, file: !3, line: 1089, type: !16150, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16323 = !DILocalVariable(name: "raw", arg: 1, scope: !16322, file: !3, line: 1089, type: !9805)
!16324 = !DILocation(line: 1089, column: 89, scope: !16322)
!16325 = !DILocalVariable(name: "msg", arg: 2, scope: !16322, file: !3, line: 1090, type: !6806)
!16326 = !DILocation(line: 1090, column: 48, scope: !16322)
!16327 = !DILocalVariable(name: "idx", scope: !16322, file: !3, line: 1092, type: !115)
!16328 = !DILocation(line: 1092, column: 6, scope: !16322)
!16329 = !DILocation(line: 1094, column: 38, scope: !16322)
!16330 = !DILocation(line: 1094, column: 43, scope: !16322)
!16331 = !DILocation(line: 1094, column: 47, scope: !16322)
!16332 = !DILocation(line: 1094, column: 52, scope: !16322)
!16333 = !DILocation(line: 1094, column: 60, scope: !16322)
!16334 = !DILocation(line: 1094, column: 37, scope: !16322)
!16335 = !DILocation(line: 1094, column: 2, scope: !16322)
!16336 = !DILocation(line: 1094, column: 7, scope: !16322)
!16337 = !DILocation(line: 1094, column: 9, scope: !16322)
!16338 = !DILocation(line: 1094, column: 23, scope: !16322)
!16339 = !DILocation(line: 1094, column: 35, scope: !16322)
!16340 = !DILocation(line: 1095, column: 5, scope: !16322)
!16341 = !DILocation(line: 1096, column: 6, scope: !16342)
!16342 = distinct !DILexicalBlock(scope: !16322, file: !3, line: 1096, column: 6)
!16343 = !DILocation(line: 1096, column: 12, scope: !16342)
!16344 = !DILocation(line: 1096, column: 17, scope: !16342)
!16345 = !DILocation(line: 1096, column: 10, scope: !16342)
!16346 = !DILocation(line: 1096, column: 6, scope: !16322)
!16347 = !DILocation(line: 1097, column: 3, scope: !16342)
!16348 = !DILocation(line: 1099, column: 9, scope: !16322)
!16349 = !DILocation(line: 1099, column: 14, scope: !16322)
!16350 = !DILocation(line: 1099, column: 16, scope: !16322)
!16351 = !DILocation(line: 1099, column: 30, scope: !16322)
!16352 = !DILocation(line: 1099, column: 2, scope: !16322)
!16353 = !DILocation(line: 1099, column: 37, scope: !16322)
!16354 = !DILocation(line: 1099, column: 42, scope: !16322)
!16355 = !DILocation(line: 1099, column: 46, scope: !16322)
!16356 = !DILocation(line: 1100, column: 6, scope: !16322)
!16357 = !DILocation(line: 1101, column: 6, scope: !16358)
!16358 = distinct !DILexicalBlock(scope: !16322, file: !3, line: 1101, column: 6)
!16359 = !DILocation(line: 1101, column: 12, scope: !16358)
!16360 = !DILocation(line: 1101, column: 17, scope: !16358)
!16361 = !DILocation(line: 1101, column: 10, scope: !16358)
!16362 = !DILocation(line: 1101, column: 6, scope: !16322)
!16363 = !DILocation(line: 1102, column: 3, scope: !16358)
!16364 = !DILocation(line: 1104, column: 40, scope: !16322)
!16365 = !DILocation(line: 1104, column: 45, scope: !16322)
!16366 = !DILocation(line: 1104, column: 49, scope: !16322)
!16367 = !DILocation(line: 1104, column: 54, scope: !16322)
!16368 = !DILocation(line: 1104, column: 63, scope: !16322)
!16369 = !DILocation(line: 1104, column: 68, scope: !16322)
!16370 = !DILocation(line: 1104, column: 72, scope: !16322)
!16371 = !DILocation(line: 1104, column: 76, scope: !16322)
!16372 = !DILocation(line: 1104, column: 62, scope: !16322)
!16373 = !DILocation(line: 1104, column: 60, scope: !16322)
!16374 = !DILocation(line: 1104, column: 39, scope: !16322)
!16375 = !DILocation(line: 1104, column: 2, scope: !16322)
!16376 = !DILocation(line: 1104, column: 7, scope: !16322)
!16377 = !DILocation(line: 1104, column: 9, scope: !16322)
!16378 = !DILocation(line: 1104, column: 23, scope: !16322)
!16379 = !DILocation(line: 1104, column: 37, scope: !16322)
!16380 = !DILocation(line: 1105, column: 5, scope: !16322)
!16381 = !DILocation(line: 1106, column: 2, scope: !16322)
!16382 = !DILabel(scope: !16322, name: "fail_len", file: !3, line: 1107)
!16383 = !DILocation(line: 1107, column: 1, scope: !16322)
!16384 = !DILocation(line: 1108, column: 2, scope: !16322)
!16385 = !DILocation(line: 1109, column: 2, scope: !16322)
!16386 = !DILocation(line: 1110, column: 1, scope: !16322)
!16387 = distinct !DISubprogram(name: "drm_dp_encode_up_ack_reply", scope: !3, file: !3, line: 3600, type: !16388, scopeLine: 3601, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16388 = !DISubroutineType(types: !16389)
!16389 = !{!115, !6003, !364}
!16390 = !DILocalVariable(name: "msg", arg: 1, scope: !16387, file: !3, line: 3600, type: !6003)
!16391 = !DILocation(line: 3600, column: 70, scope: !16387)
!16392 = !DILocalVariable(name: "req_type", arg: 2, scope: !16387, file: !3, line: 3600, type: !364)
!16393 = !DILocation(line: 3600, column: 78, scope: !16387)
!16394 = !DILocalVariable(name: "reply", scope: !16387, file: !3, line: 3602, type: !6016)
!16395 = !DILocation(line: 3602, column: 40, scope: !16387)
!16396 = !DILocation(line: 3604, column: 8, scope: !16387)
!16397 = !DILocation(line: 3604, column: 19, scope: !16387)
!16398 = !DILocation(line: 3605, column: 19, scope: !16387)
!16399 = !DILocation(line: 3605, column: 8, scope: !16387)
!16400 = !DILocation(line: 3605, column: 17, scope: !16387)
!16401 = !DILocation(line: 3606, column: 39, scope: !16387)
!16402 = !DILocation(line: 3606, column: 2, scope: !16387)
!16403 = !DILocation(line: 3607, column: 2, scope: !16387)
!16404 = distinct !DISubprogram(name: "drm_dp_encode_sideband_reply", scope: !3, file: !3, line: 727, type: !16405, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16405 = !DISubroutineType(types: !16406)
!16406 = !{null, !14953, !6003}
!16407 = !DILocalVariable(name: "rep", arg: 1, scope: !16404, file: !3, line: 727, type: !14953)
!16408 = !DILocation(line: 727, column: 81, scope: !16404)
!16409 = !DILocalVariable(name: "raw", arg: 2, scope: !16404, file: !3, line: 728, type: !6003)
!16410 = !DILocation(line: 728, column: 38, scope: !16404)
!16411 = !DILocalVariable(name: "idx", scope: !16404, file: !3, line: 730, type: !115)
!16412 = !DILocation(line: 730, column: 6, scope: !16404)
!16413 = !DILocalVariable(name: "buf", scope: !16404, file: !3, line: 731, type: !6180)
!16414 = !DILocation(line: 731, column: 6, scope: !16404)
!16415 = !DILocation(line: 731, column: 12, scope: !16404)
!16416 = !DILocation(line: 731, column: 17, scope: !16404)
!16417 = !DILocation(line: 733, column: 16, scope: !16404)
!16418 = !DILocation(line: 733, column: 21, scope: !16404)
!16419 = !DILocation(line: 733, column: 32, scope: !16404)
!16420 = !DILocation(line: 733, column: 39, scope: !16404)
!16421 = !DILocation(line: 733, column: 47, scope: !16404)
!16422 = !DILocation(line: 733, column: 52, scope: !16404)
!16423 = !DILocation(line: 733, column: 61, scope: !16404)
!16424 = !DILocation(line: 733, column: 44, scope: !16404)
!16425 = !DILocation(line: 733, column: 15, scope: !16404)
!16426 = !DILocation(line: 733, column: 2, scope: !16404)
!16427 = !DILocation(line: 733, column: 9, scope: !16404)
!16428 = !DILocation(line: 733, column: 13, scope: !16404)
!16429 = !DILocation(line: 735, column: 17, scope: !16404)
!16430 = !DILocation(line: 735, column: 2, scope: !16404)
!16431 = !DILocation(line: 735, column: 7, scope: !16404)
!16432 = !DILocation(line: 735, column: 15, scope: !16404)
!16433 = !DILocation(line: 736, column: 1, scope: !16404)
!16434 = distinct !DISubprogram(name: "drm_dp_mst_assign_payload_id", scope: !3, file: !3, line: 1225, type: !16435, scopeLine: 1227, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16435 = !DISubroutineType(types: !16436)
!16436 = !{!115, !406, !5809}
!16437 = !DILocalVariable(name: "mgr", arg: 1, scope: !16434, file: !3, line: 1225, type: !406)
!16438 = !DILocation(line: 1225, column: 73, scope: !16434)
!16439 = !DILocalVariable(name: "vcpi", arg: 2, scope: !16434, file: !3, line: 1226, type: !5809)
!16440 = !DILocation(line: 1226, column: 26, scope: !16434)
!16441 = !DILocalVariable(name: "ret", scope: !16434, file: !3, line: 1228, type: !115)
!16442 = !DILocation(line: 1228, column: 6, scope: !16434)
!16443 = !DILocalVariable(name: "vcpi_ret", scope: !16434, file: !3, line: 1228, type: !115)
!16444 = !DILocation(line: 1228, column: 11, scope: !16434)
!16445 = !DILocation(line: 1230, column: 14, scope: !16434)
!16446 = !DILocation(line: 1230, column: 19, scope: !16434)
!16447 = !DILocation(line: 1230, column: 2, scope: !16434)
!16448 = !DILocation(line: 1231, column: 29, scope: !16434)
!16449 = !DILocation(line: 1231, column: 34, scope: !16434)
!16450 = !DILocation(line: 1231, column: 48, scope: !16434)
!16451 = !DILocation(line: 1231, column: 53, scope: !16434)
!16452 = !DILocation(line: 1231, column: 66, scope: !16434)
!16453 = !DILocation(line: 1231, column: 8, scope: !16434)
!16454 = !DILocation(line: 1231, column: 6, scope: !16434)
!16455 = !DILocation(line: 1232, column: 6, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 1232, column: 6)
!16457 = !DILocation(line: 1232, column: 12, scope: !16456)
!16458 = !DILocation(line: 1232, column: 17, scope: !16456)
!16459 = !DILocation(line: 1232, column: 10, scope: !16456)
!16460 = !DILocation(line: 1232, column: 6, scope: !16434)
!16461 = !DILocation(line: 1233, column: 7, scope: !16462)
!16462 = distinct !DILexicalBlock(scope: !16456, file: !3, line: 1232, column: 31)
!16463 = !DILocation(line: 1234, column: 3, scope: !16462)
!16464 = !DILocation(line: 1235, column: 3, scope: !16462)
!16465 = !DILocation(line: 1238, column: 34, scope: !16434)
!16466 = !DILocation(line: 1238, column: 39, scope: !16434)
!16467 = !DILocation(line: 1238, column: 50, scope: !16434)
!16468 = !DILocation(line: 1238, column: 55, scope: !16434)
!16469 = !DILocation(line: 1238, column: 68, scope: !16434)
!16470 = !DILocation(line: 1238, column: 13, scope: !16434)
!16471 = !DILocation(line: 1238, column: 11, scope: !16434)
!16472 = !DILocation(line: 1239, column: 6, scope: !16473)
!16473 = distinct !DILexicalBlock(scope: !16434, file: !3, line: 1239, column: 6)
!16474 = !DILocation(line: 1239, column: 17, scope: !16473)
!16475 = !DILocation(line: 1239, column: 22, scope: !16473)
!16476 = !DILocation(line: 1239, column: 15, scope: !16473)
!16477 = !DILocation(line: 1239, column: 6, scope: !16434)
!16478 = !DILocation(line: 1240, column: 7, scope: !16479)
!16479 = distinct !DILexicalBlock(scope: !16473, file: !3, line: 1239, column: 36)
!16480 = !DILocation(line: 1241, column: 3, scope: !16479)
!16481 = !DILocation(line: 1242, column: 3, scope: !16479)
!16482 = !DILocation(line: 1245, column: 10, scope: !16434)
!16483 = !DILocation(line: 1245, column: 16, scope: !16434)
!16484 = !DILocation(line: 1245, column: 21, scope: !16434)
!16485 = !DILocation(line: 1245, column: 2, scope: !16434)
!16486 = !DILocation(line: 1246, column: 10, scope: !16434)
!16487 = !DILocation(line: 1246, column: 21, scope: !16434)
!16488 = !DILocation(line: 1246, column: 26, scope: !16434)
!16489 = !DILocation(line: 1246, column: 2, scope: !16434)
!16490 = !DILocation(line: 1247, column: 15, scope: !16434)
!16491 = !DILocation(line: 1247, column: 24, scope: !16434)
!16492 = !DILocation(line: 1247, column: 2, scope: !16434)
!16493 = !DILocation(line: 1247, column: 8, scope: !16434)
!16494 = !DILocation(line: 1247, column: 13, scope: !16434)
!16495 = !DILocation(line: 1248, column: 33, scope: !16434)
!16496 = !DILocation(line: 1248, column: 2, scope: !16434)
!16497 = !DILocation(line: 1248, column: 7, scope: !16434)
!16498 = !DILocation(line: 1248, column: 22, scope: !16434)
!16499 = !DILocation(line: 1248, column: 26, scope: !16434)
!16500 = !DILocation(line: 1248, column: 31, scope: !16434)
!16501 = !DILabel(scope: !16434, name: "out_unlock", file: !3, line: 1249)
!16502 = !DILocation(line: 1249, column: 1, scope: !16434)
!16503 = !DILocation(line: 1250, column: 16, scope: !16434)
!16504 = !DILocation(line: 1250, column: 21, scope: !16434)
!16505 = !DILocation(line: 1250, column: 2, scope: !16434)
!16506 = !DILocation(line: 1251, column: 9, scope: !16434)
!16507 = !DILocation(line: 1251, column: 2, scope: !16434)
!16508 = distinct !DISubprogram(name: "drm_dp_mst_port_downstream_of_branch", scope: !3, file: !3, line: 5024, type: !16509, scopeLine: 5026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16509 = !DISubroutineType(types: !16510)
!16510 = !{!370, !345, !391}
!16511 = !DILocalVariable(name: "port", arg: 1, scope: !16508, file: !3, line: 5024, type: !345)
!16512 = !DILocation(line: 5024, column: 74, scope: !16508)
!16513 = !DILocalVariable(name: "branch", arg: 2, scope: !16508, file: !3, line: 5025, type: !391)
!16514 = !DILocation(line: 5025, column: 34, scope: !16508)
!16515 = !DILocation(line: 5027, column: 2, scope: !16508)
!16516 = !DILocation(line: 5027, column: 9, scope: !16508)
!16517 = !DILocation(line: 5027, column: 15, scope: !16508)
!16518 = !DILocation(line: 5028, column: 7, scope: !16519)
!16519 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 5028, column: 7)
!16520 = distinct !DILexicalBlock(scope: !16508, file: !3, line: 5027, column: 23)
!16521 = !DILocation(line: 5028, column: 13, scope: !16519)
!16522 = !DILocation(line: 5028, column: 23, scope: !16519)
!16523 = !DILocation(line: 5028, column: 20, scope: !16519)
!16524 = !DILocation(line: 5028, column: 7, scope: !16520)
!16525 = !DILocation(line: 5029, column: 4, scope: !16519)
!16526 = !DILocation(line: 5031, column: 7, scope: !16527)
!16527 = distinct !DILexicalBlock(scope: !16520, file: !3, line: 5031, column: 7)
!16528 = !DILocation(line: 5031, column: 13, scope: !16527)
!16529 = !DILocation(line: 5031, column: 21, scope: !16527)
!16530 = !DILocation(line: 5031, column: 7, scope: !16520)
!16531 = !DILocation(line: 5032, column: 11, scope: !16527)
!16532 = !DILocation(line: 5032, column: 17, scope: !16527)
!16533 = !DILocation(line: 5032, column: 25, scope: !16527)
!16534 = !DILocation(line: 5032, column: 9, scope: !16527)
!16535 = !DILocation(line: 5032, column: 4, scope: !16527)
!16536 = !DILocation(line: 5034, column: 4, scope: !16527)
!16537 = distinct !{!16537, !16515, !16538}
!16538 = !DILocation(line: 5035, column: 2, scope: !16508)
!16539 = !DILocation(line: 5036, column: 2, scope: !16508)
!16540 = !DILocation(line: 5037, column: 1, scope: !16508)
!16541 = distinct !DISubprogram(name: "drm_dp_mst_atomic_check_port_bw_limit", scope: !3, file: !3, line: 5086, type: !16542, scopeLine: 5088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16542 = !DISubroutineType(types: !16543)
!16543 = !{!115, !345, !5988}
!16544 = !DILocalVariable(name: "port", arg: 1, scope: !16541, file: !3, line: 5086, type: !345)
!16545 = !DILocation(line: 5086, column: 63, scope: !16541)
!16546 = !DILocalVariable(name: "state", arg: 2, scope: !16541, file: !3, line: 5087, type: !5988)
!16547 = !DILocation(line: 5087, column: 45, scope: !16541)
!16548 = !DILocalVariable(name: "vcpi", scope: !16541, file: !3, line: 5089, type: !5980)
!16549 = !DILocation(line: 5089, column: 33, scope: !16541)
!16550 = !DILocalVariable(name: "pbn_used", scope: !16541, file: !3, line: 5090, type: !115)
!16551 = !DILocation(line: 5090, column: 6, scope: !16541)
!16552 = !DILocation(line: 5092, column: 6, scope: !16553)
!16553 = distinct !DILexicalBlock(scope: !16541, file: !3, line: 5092, column: 6)
!16554 = !DILocation(line: 5092, column: 12, scope: !16553)
!16555 = !DILocation(line: 5092, column: 16, scope: !16553)
!16556 = !DILocation(line: 5092, column: 6, scope: !16541)
!16557 = !DILocation(line: 5093, column: 3, scope: !16553)
!16558 = !DILocation(line: 5095, column: 31, scope: !16559)
!16559 = distinct !DILexicalBlock(scope: !16541, file: !3, line: 5095, column: 6)
!16560 = !DILocation(line: 5095, column: 37, scope: !16559)
!16561 = !DILocation(line: 5095, column: 42, scope: !16559)
!16562 = !DILocation(line: 5095, column: 48, scope: !16559)
!16563 = !DILocation(line: 5095, column: 6, scope: !16559)
!16564 = !DILocation(line: 5095, column: 6, scope: !16541)
!16565 = !DILocalVariable(name: "found", scope: !16566, file: !3, line: 5096, type: !370)
!16566 = distinct !DILexicalBlock(scope: !16559, file: !3, line: 5095, column: 54)
!16567 = !DILocation(line: 5096, column: 8, scope: !16566)
!16568 = !DILocalVariable(name: "__mptr", scope: !16569, file: !3, line: 5098, type: !344)
!16569 = distinct !DILexicalBlock(scope: !16570, file: !3, line: 5098, column: 3)
!16570 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 5098, column: 3)
!16571 = !DILocation(line: 5098, column: 3, scope: !16569)
!16572 = !DILocation(line: 5098, column: 3, scope: !16573)
!16573 = distinct !DILexicalBlock(scope: !16569, file: !3, line: 5098, column: 3)
!16574 = !DILocation(line: 5098, column: 3, scope: !16570)
!16575 = !DILocation(line: 5098, column: 3, scope: !16576)
!16576 = distinct !DILexicalBlock(scope: !16570, file: !3, line: 5098, column: 3)
!16577 = !DILocation(line: 5099, column: 8, scope: !16578)
!16578 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 5099, column: 8)
!16579 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 5098, column: 50)
!16580 = !DILocation(line: 5099, column: 14, scope: !16578)
!16581 = !DILocation(line: 5099, column: 22, scope: !16578)
!16582 = !DILocation(line: 5099, column: 19, scope: !16578)
!16583 = !DILocation(line: 5099, column: 8, scope: !16579)
!16584 = !DILocation(line: 5100, column: 5, scope: !16578)
!16585 = !DILocation(line: 5101, column: 9, scope: !16586)
!16586 = distinct !DILexicalBlock(scope: !16579, file: !3, line: 5101, column: 8)
!16587 = !DILocation(line: 5101, column: 15, scope: !16586)
!16588 = !DILocation(line: 5101, column: 8, scope: !16579)
!16589 = !DILocation(line: 5102, column: 5, scope: !16586)
!16590 = !DILocation(line: 5104, column: 10, scope: !16579)
!16591 = !DILocation(line: 5105, column: 4, scope: !16579)
!16592 = !DILocalVariable(name: "__mptr", scope: !16593, file: !3, line: 5098, type: !344)
!16593 = distinct !DILexicalBlock(scope: !16576, file: !3, line: 5098, column: 3)
!16594 = !DILocation(line: 5098, column: 3, scope: !16593)
!16595 = !DILocation(line: 5098, column: 3, scope: !16596)
!16596 = distinct !DILexicalBlock(scope: !16593, file: !3, line: 5098, column: 3)
!16597 = distinct !{!16597, !16574, !16598}
!16598 = !DILocation(line: 5106, column: 3, scope: !16570)
!16599 = !DILocation(line: 5107, column: 8, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 5107, column: 7)
!16601 = !DILocation(line: 5107, column: 7, scope: !16566)
!16602 = !DILocation(line: 5108, column: 4, scope: !16600)
!16603 = !DILocalVariable(name: "__ret_warn_on", scope: !16604, file: !3, line: 5113, type: !115)
!16604 = distinct !DILexicalBlock(scope: !16605, file: !3, line: 5113, column: 7)
!16605 = distinct !DILexicalBlock(scope: !16566, file: !3, line: 5113, column: 7)
!16606 = !DILocation(line: 5113, column: 7, scope: !16604)
!16607 = !DILocation(line: 5113, column: 7, scope: !16608)
!16608 = distinct !DILexicalBlock(scope: !16604, file: !3, line: 5113, column: 7)
!16609 = !DILocation(line: 5113, column: 7, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16608, file: !3, line: 5113, column: 7)
!16611 = !DILocation(line: 5113, column: 7, scope: !16612)
!16612 = distinct !DILexicalBlock(scope: !16610, file: !3, line: 5113, column: 7)
!16613 = !DILocation(line: 5113, column: 7, scope: !16614)
!16614 = distinct !DILexicalBlock(scope: !16610, file: !3, line: 5113, column: 7)
!16615 = !{i32 -2139892629, i32 -2139892600, i32 -2139892554, i32 -2139892496, i32 -2139892442, i32 -2139892388, i32 -2139892333, i32 -2139892302}
!16616 = !DILocation(line: 5113, column: 7, scope: !16617)
!16617 = distinct !DILexicalBlock(scope: !16610, file: !3, line: 5113, column: 7)
!16618 = !{i32 -2139891882, i32 -2139891875, i32 -2139891823, i32 -2139891792, i32 -2139891762}
!16619 = !DILocation(line: 5113, column: 7, scope: !16620)
!16620 = distinct !DILexicalBlock(scope: !16610, file: !3, line: 5113, column: 7)
!16621 = !DILocation(line: 5113, column: 7, scope: !16605)
!16622 = !DILocation(line: 5113, column: 7, scope: !16566)
!16623 = !DILocation(line: 5114, column: 4, scope: !16605)
!16624 = !DILocation(line: 5116, column: 14, scope: !16566)
!16625 = !DILocation(line: 5116, column: 20, scope: !16566)
!16626 = !DILocation(line: 5116, column: 12, scope: !16566)
!16627 = !DILocation(line: 5117, column: 2, scope: !16566)
!16628 = !DILocation(line: 5118, column: 52, scope: !16629)
!16629 = distinct !DILexicalBlock(scope: !16559, file: !3, line: 5117, column: 9)
!16630 = !DILocation(line: 5118, column: 58, scope: !16629)
!16631 = !DILocation(line: 5119, column: 10, scope: !16629)
!16632 = !DILocation(line: 5118, column: 14, scope: !16629)
!16633 = !DILocation(line: 5118, column: 12, scope: !16629)
!16634 = !DILocation(line: 5120, column: 7, scope: !16635)
!16635 = distinct !DILexicalBlock(scope: !16629, file: !3, line: 5120, column: 7)
!16636 = !DILocation(line: 5120, column: 16, scope: !16635)
!16637 = !DILocation(line: 5120, column: 7, scope: !16629)
!16638 = !DILocation(line: 5121, column: 11, scope: !16635)
!16639 = !DILocation(line: 5121, column: 4, scope: !16635)
!16640 = !DILocation(line: 5124, column: 6, scope: !16641)
!16641 = distinct !DILexicalBlock(scope: !16541, file: !3, line: 5124, column: 6)
!16642 = !DILocation(line: 5124, column: 17, scope: !16641)
!16643 = !DILocation(line: 5124, column: 23, scope: !16641)
!16644 = !DILocation(line: 5124, column: 15, scope: !16641)
!16645 = !DILocation(line: 5124, column: 6, scope: !16541)
!16646 = !DILocation(line: 5125, column: 3, scope: !16647)
!16647 = distinct !DILexicalBlock(scope: !16641, file: !3, line: 5124, column: 33)
!16648 = !DILocation(line: 5128, column: 3, scope: !16647)
!16649 = !DILocation(line: 5131, column: 2, scope: !16541)
!16650 = !DILocation(line: 5134, column: 9, scope: !16541)
!16651 = !DILocation(line: 5134, column: 2, scope: !16541)
!16652 = !DILocation(line: 5135, column: 1, scope: !16541)
!16653 = distinct !DISubprogram(name: "drm_dp_mst_is_end_device", scope: !3, file: !3, line: 2068, type: !16654, scopeLine: 2069, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16654 = !DISubroutineType(types: !16655)
!16655 = !{!370, !364, !370}
!16656 = !DILocalVariable(name: "pdt", arg: 1, scope: !16653, file: !3, line: 2068, type: !364)
!16657 = !DILocation(line: 2068, column: 41, scope: !16653)
!16658 = !DILocalVariable(name: "mcs", arg: 2, scope: !16653, file: !3, line: 2068, type: !370)
!16659 = !DILocation(line: 2068, column: 51, scope: !16653)
!16660 = !DILocation(line: 2070, column: 10, scope: !16653)
!16661 = !DILocation(line: 2070, column: 2, scope: !16653)
!16662 = !DILocation(line: 2073, column: 3, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16653, file: !3, line: 2070, column: 15)
!16664 = !DILocation(line: 2076, column: 8, scope: !16665)
!16665 = distinct !DILexicalBlock(scope: !16663, file: !3, line: 2076, column: 7)
!16666 = !DILocation(line: 2076, column: 7, scope: !16663)
!16667 = !DILocation(line: 2077, column: 4, scope: !16665)
!16668 = !DILocation(line: 2079, column: 3, scope: !16663)
!16669 = !DILocation(line: 2081, column: 2, scope: !16653)
!16670 = !DILocation(line: 2082, column: 1, scope: !16653)
!16671 = distinct !DISubprogram(name: "drm_dp_send_clear_payload_id_table", scope: !3, file: !3, line: 3042, type: !16672, scopeLine: 3044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16672 = !DISubroutineType(types: !16673)
!16673 = !{null, !406, !391}
!16674 = !DILocalVariable(name: "mgr", arg: 1, scope: !16671, file: !3, line: 3042, type: !406)
!16675 = !DILocation(line: 3042, column: 68, scope: !16671)
!16676 = !DILocalVariable(name: "mstb", arg: 2, scope: !16671, file: !3, line: 3043, type: !391)
!16677 = !DILocation(line: 3043, column: 34, scope: !16671)
!16678 = !DILocalVariable(name: "txmsg", scope: !16671, file: !3, line: 3045, type: !6003)
!16679 = !DILocation(line: 3045, column: 33, scope: !16671)
!16680 = !DILocalVariable(name: "ret", scope: !16671, file: !3, line: 3046, type: !115)
!16681 = !DILocation(line: 3046, column: 6, scope: !16671)
!16682 = !DILocation(line: 3048, column: 10, scope: !16671)
!16683 = !DILocation(line: 3048, column: 8, scope: !16671)
!16684 = !DILocation(line: 3049, column: 7, scope: !16685)
!16685 = distinct !DILexicalBlock(scope: !16671, file: !3, line: 3049, column: 6)
!16686 = !DILocation(line: 3049, column: 6, scope: !16671)
!16687 = !DILocation(line: 3050, column: 3, scope: !16685)
!16688 = !DILocation(line: 3052, column: 15, scope: !16671)
!16689 = !DILocation(line: 3052, column: 2, scope: !16671)
!16690 = !DILocation(line: 3052, column: 9, scope: !16671)
!16691 = !DILocation(line: 3052, column: 13, scope: !16671)
!16692 = !DILocation(line: 3053, column: 31, scope: !16671)
!16693 = !DILocation(line: 3053, column: 2, scope: !16671)
!16694 = !DILocation(line: 3055, column: 23, scope: !16671)
!16695 = !DILocation(line: 3055, column: 28, scope: !16671)
!16696 = !DILocation(line: 3055, column: 2, scope: !16671)
!16697 = !DILocation(line: 3057, column: 33, scope: !16671)
!16698 = !DILocation(line: 3057, column: 39, scope: !16671)
!16699 = !DILocation(line: 3057, column: 8, scope: !16671)
!16700 = !DILocation(line: 3057, column: 6, scope: !16671)
!16701 = !DILocation(line: 3058, column: 6, scope: !16702)
!16702 = distinct !DILexicalBlock(scope: !16671, file: !3, line: 3058, column: 6)
!16703 = !DILocation(line: 3058, column: 10, scope: !16702)
!16704 = !DILocation(line: 3058, column: 14, scope: !16702)
!16705 = !DILocation(line: 3058, column: 17, scope: !16702)
!16706 = !DILocation(line: 3058, column: 24, scope: !16702)
!16707 = !DILocation(line: 3058, column: 30, scope: !16702)
!16708 = !DILocation(line: 3058, column: 41, scope: !16702)
!16709 = !DILocation(line: 3058, column: 6, scope: !16671)
!16710 = !DILocation(line: 3059, column: 3, scope: !16702)
!16711 = !DILocation(line: 3061, column: 8, scope: !16671)
!16712 = !DILocation(line: 3061, column: 2, scope: !16671)
!16713 = !DILocation(line: 3062, column: 1, scope: !16671)
!16714 = distinct !DISubprogram(name: "drm_dp_check_and_send_link_address", scope: !3, file: !3, line: 2671, type: !16715, scopeLine: 2673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16715 = !DISubroutineType(types: !16716)
!16716 = !{!115, !406, !391}
!16717 = !DILocalVariable(name: "mgr", arg: 1, scope: !16714, file: !3, line: 2671, type: !406)
!16718 = !DILocation(line: 2671, column: 79, scope: !16714)
!16719 = !DILocalVariable(name: "mstb", arg: 2, scope: !16714, file: !3, line: 2672, type: !391)
!16720 = !DILocation(line: 2672, column: 39, scope: !16714)
!16721 = !DILocalVariable(name: "port", scope: !16714, file: !3, line: 2674, type: !345)
!16722 = !DILocation(line: 2674, column: 26, scope: !16714)
!16723 = !DILocalVariable(name: "ret", scope: !16714, file: !3, line: 2675, type: !115)
!16724 = !DILocation(line: 2675, column: 6, scope: !16714)
!16725 = !DILocalVariable(name: "changed", scope: !16714, file: !3, line: 2676, type: !370)
!16726 = !DILocation(line: 2676, column: 7, scope: !16714)
!16727 = !DILocation(line: 2678, column: 7, scope: !16728)
!16728 = distinct !DILexicalBlock(scope: !16714, file: !3, line: 2678, column: 6)
!16729 = !DILocation(line: 2678, column: 13, scope: !16728)
!16730 = !DILocation(line: 2678, column: 6, scope: !16714)
!16731 = !DILocation(line: 2679, column: 34, scope: !16732)
!16732 = distinct !DILexicalBlock(scope: !16728, file: !3, line: 2678, column: 32)
!16733 = !DILocation(line: 2679, column: 39, scope: !16732)
!16734 = !DILocation(line: 2679, column: 9, scope: !16732)
!16735 = !DILocation(line: 2679, column: 7, scope: !16732)
!16736 = !DILocation(line: 2680, column: 7, scope: !16737)
!16737 = distinct !DILexicalBlock(scope: !16732, file: !3, line: 2680, column: 7)
!16738 = !DILocation(line: 2680, column: 11, scope: !16737)
!16739 = !DILocation(line: 2680, column: 7, scope: !16732)
!16740 = !DILocation(line: 2681, column: 12, scope: !16737)
!16741 = !DILocation(line: 2681, column: 4, scope: !16737)
!16742 = !DILocation(line: 2682, column: 12, scope: !16743)
!16743 = distinct !DILexicalBlock(scope: !16737, file: !3, line: 2682, column: 12)
!16744 = !DILocation(line: 2682, column: 16, scope: !16743)
!16745 = !DILocation(line: 2682, column: 12, scope: !16737)
!16746 = !DILocation(line: 2683, column: 11, scope: !16743)
!16747 = !DILocation(line: 2683, column: 4, scope: !16743)
!16748 = !DILocation(line: 2684, column: 2, scope: !16732)
!16749 = !DILocalVariable(name: "__mptr", scope: !16750, file: !3, line: 2686, type: !344)
!16750 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 2686, column: 2)
!16751 = distinct !DILexicalBlock(scope: !16714, file: !3, line: 2686, column: 2)
!16752 = !DILocation(line: 2686, column: 2, scope: !16750)
!16753 = !DILocation(line: 2686, column: 2, scope: !16754)
!16754 = distinct !DILexicalBlock(scope: !16750, file: !3, line: 2686, column: 2)
!16755 = !DILocation(line: 2686, column: 2, scope: !16751)
!16756 = !DILocation(line: 2686, column: 2, scope: !16757)
!16757 = distinct !DILexicalBlock(scope: !16751, file: !3, line: 2686, column: 2)
!16758 = !DILocalVariable(name: "mstb_child", scope: !16759, file: !3, line: 2687, type: !391)
!16759 = distinct !DILexicalBlock(scope: !16757, file: !3, line: 2686, column: 48)
!16760 = !DILocation(line: 2687, column: 29, scope: !16759)
!16761 = !DILocation(line: 2689, column: 7, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16759, file: !3, line: 2689, column: 7)
!16763 = !DILocation(line: 2689, column: 13, scope: !16762)
!16764 = !DILocation(line: 2689, column: 19, scope: !16762)
!16765 = !DILocation(line: 2689, column: 23, scope: !16762)
!16766 = !DILocation(line: 2689, column: 29, scope: !16762)
!16767 = !DILocation(line: 2689, column: 7, scope: !16759)
!16768 = !DILocation(line: 2690, column: 4, scope: !16762)
!16769 = !DILocation(line: 2692, column: 7, scope: !16770)
!16770 = distinct !DILexicalBlock(scope: !16759, file: !3, line: 2692, column: 7)
!16771 = !DILocation(line: 2692, column: 13, scope: !16770)
!16772 = !DILocation(line: 2692, column: 7, scope: !16759)
!16773 = !DILocation(line: 2694, column: 8, scope: !16770)
!16774 = !DILocation(line: 2694, column: 13, scope: !16770)
!16775 = !DILocation(line: 2694, column: 19, scope: !16770)
!16776 = !DILocation(line: 2693, column: 17, scope: !16770)
!16777 = !DILocation(line: 2693, column: 15, scope: !16770)
!16778 = !DILocation(line: 2693, column: 4, scope: !16770)
!16779 = !DILocation(line: 2696, column: 7, scope: !16780)
!16780 = distinct !DILexicalBlock(scope: !16759, file: !3, line: 2696, column: 7)
!16781 = !DILocation(line: 2696, column: 7, scope: !16759)
!16782 = !DILocation(line: 2697, column: 45, scope: !16783)
!16783 = distinct !DILexicalBlock(scope: !16780, file: !3, line: 2696, column: 19)
!16784 = !DILocation(line: 2698, column: 10, scope: !16783)
!16785 = !DILocation(line: 2697, column: 10, scope: !16783)
!16786 = !DILocation(line: 2697, column: 8, scope: !16783)
!16787 = !DILocation(line: 2699, column: 33, scope: !16783)
!16788 = !DILocation(line: 2699, column: 4, scope: !16783)
!16789 = !DILocation(line: 2700, column: 8, scope: !16790)
!16790 = distinct !DILexicalBlock(scope: !16783, file: !3, line: 2700, column: 8)
!16791 = !DILocation(line: 2700, column: 12, scope: !16790)
!16792 = !DILocation(line: 2700, column: 8, scope: !16783)
!16793 = !DILocation(line: 2701, column: 13, scope: !16790)
!16794 = !DILocation(line: 2701, column: 5, scope: !16790)
!16795 = !DILocation(line: 2702, column: 13, scope: !16796)
!16796 = distinct !DILexicalBlock(scope: !16790, file: !3, line: 2702, column: 13)
!16797 = !DILocation(line: 2702, column: 17, scope: !16796)
!16798 = !DILocation(line: 2702, column: 13, scope: !16790)
!16799 = !DILocation(line: 2703, column: 12, scope: !16796)
!16800 = !DILocation(line: 2703, column: 5, scope: !16796)
!16801 = !DILocation(line: 2704, column: 3, scope: !16783)
!16802 = !DILocation(line: 2705, column: 2, scope: !16759)
!16803 = !DILocalVariable(name: "__mptr", scope: !16804, file: !3, line: 2686, type: !344)
!16804 = distinct !DILexicalBlock(scope: !16757, file: !3, line: 2686, column: 2)
!16805 = !DILocation(line: 2686, column: 2, scope: !16804)
!16806 = !DILocation(line: 2686, column: 2, scope: !16807)
!16807 = distinct !DILexicalBlock(scope: !16804, file: !3, line: 2686, column: 2)
!16808 = distinct !{!16808, !16755, !16809}
!16809 = !DILocation(line: 2705, column: 2, scope: !16751)
!16810 = !DILocation(line: 2707, column: 9, scope: !16714)
!16811 = !DILocation(line: 2707, column: 2, scope: !16714)
!16812 = !DILocation(line: 2708, column: 1, scope: !16714)
!16813 = distinct !DISubprogram(name: "build_clear_payload_id_table", scope: !3, file: !3, line: 1151, type: !16814, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16814 = !DISubroutineType(types: !16815)
!16815 = !{null, !6003}
!16816 = !DILocalVariable(name: "msg", arg: 1, scope: !16813, file: !3, line: 1151, type: !6003)
!16817 = !DILocation(line: 1151, column: 73, scope: !16813)
!16818 = !DILocalVariable(name: "req", scope: !16813, file: !3, line: 1153, type: !6128)
!16819 = !DILocation(line: 1153, column: 38, scope: !16813)
!16820 = !DILocation(line: 1155, column: 6, scope: !16813)
!16821 = !DILocation(line: 1155, column: 15, scope: !16813)
!16822 = !DILocation(line: 1156, column: 35, scope: !16813)
!16823 = !DILocation(line: 1156, column: 2, scope: !16813)
!16824 = !DILocation(line: 1157, column: 1, scope: !16813)
!16825 = distinct !DISubprogram(name: "drm_dp_send_link_address", scope: !3, file: !3, line: 2961, type: !16715, scopeLine: 2963, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!16826 = !DILocalVariable(name: "mgr", arg: 1, scope: !16825, file: !3, line: 2961, type: !406)
!16827 = !DILocation(line: 2961, column: 69, scope: !16825)
!16828 = !DILocalVariable(name: "mstb", arg: 2, scope: !16825, file: !3, line: 2962, type: !391)
!16829 = !DILocation(line: 2962, column: 36, scope: !16825)
!16830 = !DILocalVariable(name: "txmsg", scope: !16825, file: !3, line: 2964, type: !6003)
!16831 = !DILocation(line: 2964, column: 33, scope: !16825)
!16832 = !DILocalVariable(name: "reply", scope: !16825, file: !3, line: 2965, type: !16833)
!16833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6030, size: 64)
!16834 = !DILocation(line: 2965, column: 40, scope: !16825)
!16835 = !DILocalVariable(name: "port", scope: !16825, file: !3, line: 2966, type: !345)
!16836 = !DILocation(line: 2966, column: 26, scope: !16825)
!16837 = !DILocalVariable(name: "tmp", scope: !16825, file: !3, line: 2966, type: !345)
!16838 = !DILocation(line: 2966, column: 33, scope: !16825)
!16839 = !DILocalVariable(name: "i", scope: !16825, file: !3, line: 2967, type: !115)
!16840 = !DILocation(line: 2967, column: 6, scope: !16825)
!16841 = !DILocalVariable(name: "ret", scope: !16825, file: !3, line: 2967, type: !115)
!16842 = !DILocation(line: 2967, column: 9, scope: !16825)
!16843 = !DILocalVariable(name: "port_mask", scope: !16825, file: !3, line: 2967, type: !115)
!16844 = !DILocation(line: 2967, column: 14, scope: !16825)
!16845 = !DILocalVariable(name: "changed", scope: !16825, file: !3, line: 2968, type: !370)
!16846 = !DILocation(line: 2968, column: 7, scope: !16825)
!16847 = !DILocation(line: 2970, column: 10, scope: !16825)
!16848 = !DILocation(line: 2970, column: 8, scope: !16825)
!16849 = !DILocation(line: 2971, column: 7, scope: !16850)
!16850 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 2971, column: 6)
!16851 = !DILocation(line: 2971, column: 6, scope: !16825)
!16852 = !DILocation(line: 2972, column: 3, scope: !16850)
!16853 = !DILocation(line: 2974, column: 15, scope: !16825)
!16854 = !DILocation(line: 2974, column: 2, scope: !16825)
!16855 = !DILocation(line: 2974, column: 9, scope: !16825)
!16856 = !DILocation(line: 2974, column: 13, scope: !16825)
!16857 = !DILocation(line: 2975, column: 21, scope: !16825)
!16858 = !DILocation(line: 2975, column: 2, scope: !16825)
!16859 = !DILocation(line: 2977, column: 2, scope: !16825)
!16860 = !DILocation(line: 2977, column: 8, scope: !16825)
!16861 = !DILocation(line: 2977, column: 26, scope: !16825)
!16862 = !DILocation(line: 2978, column: 23, scope: !16825)
!16863 = !DILocation(line: 2978, column: 28, scope: !16825)
!16864 = !DILocation(line: 2978, column: 2, scope: !16825)
!16865 = !DILocation(line: 2981, column: 33, scope: !16825)
!16866 = !DILocation(line: 2981, column: 39, scope: !16825)
!16867 = !DILocation(line: 2981, column: 8, scope: !16825)
!16868 = !DILocation(line: 2981, column: 6, scope: !16825)
!16869 = !DILocation(line: 2982, column: 6, scope: !16870)
!16870 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 2982, column: 6)
!16871 = !DILocation(line: 2982, column: 10, scope: !16870)
!16872 = !DILocation(line: 2982, column: 6, scope: !16825)
!16873 = !DILocation(line: 2983, column: 3, scope: !16874)
!16874 = distinct !DILexicalBlock(scope: !16870, file: !3, line: 2982, column: 16)
!16875 = !DILocation(line: 2984, column: 3, scope: !16874)
!16876 = !DILocation(line: 2986, column: 6, scope: !16877)
!16877 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 2986, column: 6)
!16878 = !DILocation(line: 2986, column: 13, scope: !16877)
!16879 = !DILocation(line: 2986, column: 19, scope: !16877)
!16880 = !DILocation(line: 2986, column: 30, scope: !16877)
!16881 = !DILocation(line: 2986, column: 6, scope: !16825)
!16882 = !DILocation(line: 2987, column: 3, scope: !16883)
!16883 = distinct !DILexicalBlock(scope: !16877, file: !3, line: 2986, column: 56)
!16884 = !DILocation(line: 2988, column: 7, scope: !16883)
!16885 = !DILocation(line: 2989, column: 3, scope: !16883)
!16886 = !DILocation(line: 2992, column: 11, scope: !16825)
!16887 = !DILocation(line: 2992, column: 18, scope: !16825)
!16888 = !DILocation(line: 2992, column: 24, scope: !16825)
!16889 = !DILocation(line: 2992, column: 26, scope: !16825)
!16890 = !DILocation(line: 2992, column: 8, scope: !16825)
!16891 = !DILocation(line: 2993, column: 2, scope: !16825)
!16892 = !DILocation(line: 2994, column: 27, scope: !16825)
!16893 = !DILocation(line: 2994, column: 2, scope: !16825)
!16894 = !DILocation(line: 2996, column: 31, scope: !16825)
!16895 = !DILocation(line: 2996, column: 37, scope: !16825)
!16896 = !DILocation(line: 2996, column: 44, scope: !16825)
!16897 = !DILocation(line: 2996, column: 8, scope: !16825)
!16898 = !DILocation(line: 2996, column: 6, scope: !16825)
!16899 = !DILocation(line: 2997, column: 6, scope: !16900)
!16900 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 2997, column: 6)
!16901 = !DILocation(line: 2997, column: 6, scope: !16825)
!16902 = !DILocalVariable(name: "buf", scope: !16903, file: !3, line: 2998, type: !13325)
!16903 = distinct !DILexicalBlock(scope: !16900, file: !3, line: 2997, column: 11)
!16904 = !DILocation(line: 2998, column: 8, scope: !16903)
!16905 = !DILocation(line: 3000, column: 25, scope: !16903)
!16906 = !DILocation(line: 3000, column: 31, scope: !16903)
!16907 = !DILocation(line: 3000, column: 36, scope: !16903)
!16908 = !DILocation(line: 3000, column: 42, scope: !16903)
!16909 = !DILocation(line: 3000, column: 47, scope: !16903)
!16910 = !DILocation(line: 3000, column: 3, scope: !16903)
!16911 = !DILocation(line: 3001, column: 3, scope: !16903)
!16912 = !DILocation(line: 3003, column: 3, scope: !16903)
!16913 = !DILocation(line: 3006, column: 9, scope: !16914)
!16914 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 3006, column: 2)
!16915 = !DILocation(line: 3006, column: 7, scope: !16914)
!16916 = !DILocation(line: 3006, column: 14, scope: !16917)
!16917 = distinct !DILexicalBlock(scope: !16914, file: !3, line: 3006, column: 2)
!16918 = !DILocation(line: 3006, column: 18, scope: !16917)
!16919 = !DILocation(line: 3006, column: 25, scope: !16917)
!16920 = !DILocation(line: 3006, column: 16, scope: !16917)
!16921 = !DILocation(line: 3006, column: 2, scope: !16914)
!16922 = !DILocation(line: 3007, column: 16, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16917, file: !3, line: 3006, column: 38)
!16924 = !DILocation(line: 3007, column: 13, scope: !16923)
!16925 = !DILocation(line: 3008, column: 45, scope: !16923)
!16926 = !DILocation(line: 3008, column: 51, scope: !16923)
!16927 = !DILocation(line: 3008, column: 56, scope: !16923)
!16928 = !DILocation(line: 3009, column: 11, scope: !16923)
!16929 = !DILocation(line: 3009, column: 18, scope: !16923)
!16930 = !DILocation(line: 3009, column: 24, scope: !16923)
!16931 = !DILocation(line: 3008, column: 9, scope: !16923)
!16932 = !DILocation(line: 3008, column: 7, scope: !16923)
!16933 = !DILocation(line: 3010, column: 7, scope: !16934)
!16934 = distinct !DILexicalBlock(scope: !16923, file: !3, line: 3010, column: 7)
!16935 = !DILocation(line: 3010, column: 11, scope: !16934)
!16936 = !DILocation(line: 3010, column: 7, scope: !16923)
!16937 = !DILocation(line: 3011, column: 12, scope: !16934)
!16938 = !DILocation(line: 3011, column: 4, scope: !16934)
!16939 = !DILocation(line: 3012, column: 12, scope: !16940)
!16940 = distinct !DILexicalBlock(scope: !16934, file: !3, line: 3012, column: 12)
!16941 = !DILocation(line: 3012, column: 16, scope: !16940)
!16942 = !DILocation(line: 3012, column: 12, scope: !16934)
!16943 = !DILocation(line: 3013, column: 4, scope: !16940)
!16944 = !DILocation(line: 3014, column: 2, scope: !16923)
!16945 = !DILocation(line: 3006, column: 34, scope: !16917)
!16946 = !DILocation(line: 3006, column: 2, scope: !16917)
!16947 = distinct !{!16947, !16921, !16948}
!16948 = !DILocation(line: 3014, column: 2, scope: !16914)
!16949 = !DILocation(line: 3021, column: 14, scope: !16825)
!16950 = !DILocation(line: 3021, column: 19, scope: !16825)
!16951 = !DILocation(line: 3021, column: 2, scope: !16825)
!16952 = !DILocalVariable(name: "__mptr", scope: !16953, file: !3, line: 3022, type: !344)
!16953 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 3022, column: 2)
!16954 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 3022, column: 2)
!16955 = !DILocation(line: 3022, column: 2, scope: !16953)
!16956 = !DILocation(line: 3022, column: 2, scope: !16957)
!16957 = distinct !DILexicalBlock(scope: !16953, file: !3, line: 3022, column: 2)
!16958 = !DILocation(line: 3022, column: 2, scope: !16954)
!16959 = !DILocalVariable(name: "__mptr", scope: !16960, file: !3, line: 3022, type: !344)
!16960 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 3022, column: 2)
!16961 = !DILocation(line: 3022, column: 2, scope: !16960)
!16962 = !DILocation(line: 3022, column: 2, scope: !16963)
!16963 = distinct !DILexicalBlock(scope: !16960, file: !3, line: 3022, column: 2)
!16964 = !DILocation(line: 3022, column: 2, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 3022, column: 2)
!16966 = !DILocation(line: 3023, column: 7, scope: !16967)
!16967 = distinct !DILexicalBlock(scope: !16968, file: !3, line: 3023, column: 7)
!16968 = distinct !DILexicalBlock(scope: !16965, file: !3, line: 3022, column: 58)
!16969 = !DILocation(line: 3023, column: 19, scope: !16967)
!16970 = !DILocation(line: 3023, column: 17, scope: !16967)
!16971 = !DILocation(line: 3023, column: 7, scope: !16968)
!16972 = !DILocation(line: 3024, column: 4, scope: !16967)
!16973 = !DILocation(line: 3026, column: 3, scope: !16968)
!16974 = !DILocation(line: 3028, column: 13, scope: !16968)
!16975 = !DILocation(line: 3028, column: 19, scope: !16968)
!16976 = !DILocation(line: 3028, column: 3, scope: !16968)
!16977 = !DILocation(line: 3029, column: 32, scope: !16968)
!16978 = !DILocation(line: 3029, column: 3, scope: !16968)
!16979 = !DILocation(line: 3030, column: 11, scope: !16968)
!16980 = !DILocation(line: 3031, column: 2, scope: !16968)
!16981 = !DILocalVariable(name: "__mptr", scope: !16982, file: !3, line: 3022, type: !344)
!16982 = distinct !DILexicalBlock(scope: !16965, file: !3, line: 3022, column: 2)
!16983 = !DILocation(line: 3022, column: 2, scope: !16982)
!16984 = !DILocation(line: 3022, column: 2, scope: !16985)
!16985 = distinct !DILexicalBlock(scope: !16982, file: !3, line: 3022, column: 2)
!16986 = distinct !{!16986, !16958, !16987}
!16987 = !DILocation(line: 3031, column: 2, scope: !16954)
!16988 = !DILocation(line: 3032, column: 16, scope: !16825)
!16989 = !DILocation(line: 3032, column: 21, scope: !16825)
!16990 = !DILocation(line: 3032, column: 2, scope: !16825)
!16991 = !DILabel(scope: !16825, name: "out", file: !3, line: 3034)
!16992 = !DILocation(line: 3034, column: 1, scope: !16825)
!16993 = !DILocation(line: 3035, column: 6, scope: !16994)
!16994 = distinct !DILexicalBlock(scope: !16825, file: !3, line: 3035, column: 6)
!16995 = !DILocation(line: 3035, column: 10, scope: !16994)
!16996 = !DILocation(line: 3035, column: 6, scope: !16825)
!16997 = !DILocation(line: 3036, column: 3, scope: !16994)
!16998 = !DILocation(line: 3036, column: 9, scope: !16994)
!16999 = !DILocation(line: 3036, column: 27, scope: !16994)
!17000 = !DILocation(line: 3037, column: 8, scope: !16825)
!17001 = !DILocation(line: 3037, column: 2, scope: !16825)
!17002 = !DILocation(line: 3038, column: 9, scope: !16825)
!17003 = !DILocation(line: 3038, column: 13, scope: !16825)
!17004 = !DILocation(line: 3038, column: 19, scope: !16825)
!17005 = !DILocation(line: 3038, column: 25, scope: !16825)
!17006 = !DILocation(line: 3038, column: 2, scope: !16825)
!17007 = !DILocation(line: 3039, column: 1, scope: !16825)
!17008 = distinct !DISubprogram(name: "build_link_address", scope: !3, file: !3, line: 1143, type: !16814, scopeLine: 1144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17009 = !DILocalVariable(name: "msg", arg: 1, scope: !17008, file: !3, line: 1143, type: !6003)
!17010 = !DILocation(line: 1143, column: 63, scope: !17008)
!17011 = !DILocalVariable(name: "req", scope: !17008, file: !3, line: 1145, type: !6128)
!17012 = !DILocation(line: 1145, column: 38, scope: !17008)
!17013 = !DILocation(line: 1147, column: 6, scope: !17008)
!17014 = !DILocation(line: 1147, column: 15, scope: !17008)
!17015 = !DILocation(line: 1148, column: 35, scope: !17008)
!17016 = !DILocation(line: 1148, column: 2, scope: !17008)
!17017 = !DILocation(line: 1149, column: 1, scope: !17008)
!17018 = distinct !DISubprogram(name: "drm_dp_dump_link_address", scope: !3, file: !3, line: 2940, type: !17019, scopeLine: 2941, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17019 = !DISubroutineType(types: !17020)
!17020 = !{null, !16833}
!17021 = !DILocalVariable(name: "reply", arg: 1, scope: !17018, file: !3, line: 2940, type: !16833)
!17022 = !DILocation(line: 2940, column: 64, scope: !17018)
!17023 = !DILocalVariable(name: "port_reply", scope: !17018, file: !3, line: 2942, type: !17024)
!17024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6036, size: 64)
!17025 = !DILocation(line: 2942, column: 38, scope: !17018)
!17026 = !DILocalVariable(name: "i", scope: !17018, file: !3, line: 2943, type: !115)
!17027 = !DILocation(line: 2943, column: 6, scope: !17018)
!17028 = !DILocation(line: 2945, column: 9, scope: !17029)
!17029 = distinct !DILexicalBlock(scope: !17018, file: !3, line: 2945, column: 2)
!17030 = !DILocation(line: 2945, column: 7, scope: !17029)
!17031 = !DILocation(line: 2945, column: 14, scope: !17032)
!17032 = distinct !DILexicalBlock(scope: !17029, file: !3, line: 2945, column: 2)
!17033 = !DILocation(line: 2945, column: 18, scope: !17032)
!17034 = !DILocation(line: 2945, column: 25, scope: !17032)
!17035 = !DILocation(line: 2945, column: 16, scope: !17032)
!17036 = !DILocation(line: 2945, column: 2, scope: !17029)
!17037 = !DILocation(line: 2946, column: 17, scope: !17038)
!17038 = distinct !DILexicalBlock(scope: !17032, file: !3, line: 2945, column: 38)
!17039 = !DILocation(line: 2946, column: 24, scope: !17038)
!17040 = !DILocation(line: 2946, column: 30, scope: !17038)
!17041 = !DILocation(line: 2946, column: 14, scope: !17038)
!17042 = !DILocation(line: 2947, column: 3, scope: !17038)
!17043 = !DILocation(line: 2958, column: 2, scope: !17038)
!17044 = !DILocation(line: 2945, column: 34, scope: !17032)
!17045 = !DILocation(line: 2945, column: 2, scope: !17032)
!17046 = distinct !{!17046, !17036, !17047}
!17047 = !DILocation(line: 2958, column: 2, scope: !17029)
!17048 = !DILocation(line: 2959, column: 1, scope: !17018)
!17049 = distinct !DISubprogram(name: "drm_dp_mst_handle_link_address_port", scope: !3, file: !3, line: 2365, type: !17050, scopeLine: 2368, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17050 = !DISubroutineType(types: !17051)
!17051 = !{!115, !391, !3372, !17024}
!17052 = !DILocalVariable(name: "mstb", arg: 1, scope: !17049, file: !3, line: 2365, type: !391)
!17053 = !DILocation(line: 2365, column: 63, scope: !17049)
!17054 = !DILocalVariable(name: "dev", arg: 2, scope: !17049, file: !3, line: 2366, type: !3372)
!17055 = !DILocation(line: 2366, column: 28, scope: !17049)
!17056 = !DILocalVariable(name: "port_msg", arg: 3, scope: !17049, file: !3, line: 2367, type: !17024)
!17057 = !DILocation(line: 2367, column: 45, scope: !17049)
!17058 = !DILocalVariable(name: "mgr", scope: !17049, file: !3, line: 2369, type: !406)
!17059 = !DILocation(line: 2369, column: 34, scope: !17049)
!17060 = !DILocation(line: 2369, column: 40, scope: !17049)
!17061 = !DILocation(line: 2369, column: 46, scope: !17049)
!17062 = !DILocalVariable(name: "port", scope: !17049, file: !3, line: 2370, type: !345)
!17063 = !DILocation(line: 2370, column: 26, scope: !17049)
!17064 = !DILocalVariable(name: "old_ddps", scope: !17049, file: !3, line: 2371, type: !115)
!17065 = !DILocation(line: 2371, column: 6, scope: !17049)
!17066 = !DILocalVariable(name: "ret", scope: !17049, file: !3, line: 2371, type: !115)
!17067 = !DILocation(line: 2371, column: 20, scope: !17049)
!17068 = !DILocalVariable(name: "new_pdt", scope: !17049, file: !3, line: 2372, type: !364)
!17069 = !DILocation(line: 2372, column: 5, scope: !17049)
!17070 = !DILocalVariable(name: "new_mcs", scope: !17049, file: !3, line: 2373, type: !370)
!17071 = !DILocation(line: 2373, column: 7, scope: !17049)
!17072 = !DILocalVariable(name: "created", scope: !17049, file: !3, line: 2374, type: !370)
!17073 = !DILocation(line: 2374, column: 7, scope: !17049)
!17074 = !DILocalVariable(name: "send_link_addr", scope: !17049, file: !3, line: 2374, type: !370)
!17075 = !DILocation(line: 2374, column: 24, scope: !17049)
!17076 = !DILocalVariable(name: "changed", scope: !17049, file: !3, line: 2374, type: !370)
!17077 = !DILocation(line: 2374, column: 48, scope: !17049)
!17078 = !DILocation(line: 2376, column: 25, scope: !17049)
!17079 = !DILocation(line: 2376, column: 31, scope: !17049)
!17080 = !DILocation(line: 2376, column: 41, scope: !17049)
!17081 = !DILocation(line: 2376, column: 9, scope: !17049)
!17082 = !DILocation(line: 2376, column: 7, scope: !17049)
!17083 = !DILocation(line: 2377, column: 7, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2377, column: 6)
!17085 = !DILocation(line: 2377, column: 6, scope: !17049)
!17086 = !DILocation(line: 2378, column: 30, scope: !17087)
!17087 = distinct !DILexicalBlock(scope: !17084, file: !3, line: 2377, column: 13)
!17088 = !DILocation(line: 2378, column: 35, scope: !17087)
!17089 = !DILocation(line: 2378, column: 40, scope: !17087)
!17090 = !DILocation(line: 2379, column: 9, scope: !17087)
!17091 = !DILocation(line: 2379, column: 19, scope: !17087)
!17092 = !DILocation(line: 2378, column: 10, scope: !17087)
!17093 = !DILocation(line: 2378, column: 8, scope: !17087)
!17094 = !DILocation(line: 2380, column: 8, scope: !17095)
!17095 = distinct !DILexicalBlock(scope: !17087, file: !3, line: 2380, column: 7)
!17096 = !DILocation(line: 2380, column: 7, scope: !17087)
!17097 = !DILocation(line: 2381, column: 4, scope: !17095)
!17098 = !DILocation(line: 2382, column: 11, scope: !17087)
!17099 = !DILocation(line: 2383, column: 11, scope: !17087)
!17100 = !DILocation(line: 2384, column: 2, scope: !17087)
!17101 = !DILocation(line: 2384, column: 14, scope: !17102)
!17102 = distinct !DILexicalBlock(scope: !17084, file: !3, line: 2384, column: 13)
!17103 = !DILocation(line: 2384, column: 20, scope: !17102)
!17104 = !DILocation(line: 2384, column: 26, scope: !17102)
!17105 = !DILocation(line: 2384, column: 29, scope: !17102)
!17106 = !DILocation(line: 2384, column: 39, scope: !17102)
!17107 = !DILocation(line: 2384, column: 50, scope: !17102)
!17108 = !DILocation(line: 2384, column: 53, scope: !17102)
!17109 = !DILocation(line: 2384, column: 59, scope: !17102)
!17110 = !DILocation(line: 2384, column: 13, scope: !17084)
!17111 = !DILocation(line: 2388, column: 35, scope: !17112)
!17112 = distinct !DILexicalBlock(scope: !17102, file: !3, line: 2384, column: 70)
!17113 = !DILocation(line: 2388, column: 40, scope: !17112)
!17114 = !DILocation(line: 2388, column: 3, scope: !17112)
!17115 = !DILocation(line: 2389, column: 32, scope: !17112)
!17116 = !DILocation(line: 2389, column: 3, scope: !17112)
!17117 = !DILocation(line: 2390, column: 30, scope: !17112)
!17118 = !DILocation(line: 2390, column: 35, scope: !17112)
!17119 = !DILocation(line: 2390, column: 40, scope: !17112)
!17120 = !DILocation(line: 2391, column: 9, scope: !17112)
!17121 = !DILocation(line: 2391, column: 19, scope: !17112)
!17122 = !DILocation(line: 2390, column: 10, scope: !17112)
!17123 = !DILocation(line: 2390, column: 8, scope: !17112)
!17124 = !DILocation(line: 2392, column: 8, scope: !17125)
!17125 = distinct !DILexicalBlock(scope: !17112, file: !3, line: 2392, column: 7)
!17126 = !DILocation(line: 2392, column: 7, scope: !17112)
!17127 = !DILocation(line: 2393, column: 4, scope: !17125)
!17128 = !DILocation(line: 2394, column: 11, scope: !17112)
!17129 = !DILocation(line: 2395, column: 11, scope: !17112)
!17130 = !DILocation(line: 2396, column: 2, scope: !17112)
!17131 = !DILocation(line: 2396, column: 13, scope: !17132)
!17132 = distinct !DILexicalBlock(scope: !17102, file: !3, line: 2396, column: 13)
!17133 = !DILocation(line: 2396, column: 19, scope: !17132)
!17134 = !DILocation(line: 2396, column: 25, scope: !17132)
!17135 = !DILocation(line: 2396, column: 29, scope: !17132)
!17136 = !DILocation(line: 2396, column: 39, scope: !17132)
!17137 = !DILocation(line: 2396, column: 13, scope: !17102)
!17138 = !DILocation(line: 2397, column: 11, scope: !17139)
!17139 = distinct !DILexicalBlock(scope: !17132, file: !3, line: 2396, column: 51)
!17140 = !DILocation(line: 2398, column: 2, scope: !17139)
!17141 = !DILocation(line: 2398, column: 13, scope: !17142)
!17142 = distinct !DILexicalBlock(scope: !17132, file: !3, line: 2398, column: 13)
!17143 = !DILocation(line: 2398, column: 19, scope: !17142)
!17144 = !DILocation(line: 2398, column: 13, scope: !17132)
!17145 = !DILocation(line: 2402, column: 21, scope: !17146)
!17146 = distinct !DILexicalBlock(scope: !17142, file: !3, line: 2398, column: 30)
!17147 = !DILocation(line: 2402, column: 26, scope: !17146)
!17148 = !DILocation(line: 2402, column: 31, scope: !17146)
!17149 = !DILocation(line: 2402, column: 3, scope: !17146)
!17150 = !DILocation(line: 2404, column: 14, scope: !17146)
!17151 = !DILocation(line: 2404, column: 20, scope: !17146)
!17152 = !DILocation(line: 2404, column: 12, scope: !17146)
!17153 = !DILocation(line: 2405, column: 13, scope: !17146)
!17154 = !DILocation(line: 2405, column: 19, scope: !17146)
!17155 = !DILocation(line: 2405, column: 27, scope: !17146)
!17156 = !DILocation(line: 2405, column: 37, scope: !17146)
!17157 = !DILocation(line: 2405, column: 24, scope: !17146)
!17158 = !DILocation(line: 2405, column: 42, scope: !17146)
!17159 = !DILocation(line: 2406, column: 5, scope: !17146)
!17160 = !DILocation(line: 2406, column: 11, scope: !17146)
!17161 = !DILocation(line: 2406, column: 16, scope: !17146)
!17162 = !DILocation(line: 2407, column: 6, scope: !17146)
!17163 = !DILocation(line: 2407, column: 12, scope: !17146)
!17164 = !DILocation(line: 2407, column: 20, scope: !17146)
!17165 = !DILocation(line: 2407, column: 30, scope: !17146)
!17166 = !DILocation(line: 2407, column: 17, scope: !17146)
!17167 = !DILocation(line: 2407, column: 56, scope: !17146)
!17168 = !DILocation(line: 2408, column: 6, scope: !17146)
!17169 = !DILocation(line: 2408, column: 12, scope: !17146)
!17170 = !DILocation(line: 2408, column: 24, scope: !17146)
!17171 = !DILocation(line: 2408, column: 34, scope: !17146)
!17172 = !DILocation(line: 2408, column: 21, scope: !17146)
!17173 = !DILocation(line: 2408, column: 48, scope: !17146)
!17174 = !DILocation(line: 2409, column: 6, scope: !17146)
!17175 = !DILocation(line: 2409, column: 12, scope: !17146)
!17176 = !DILocation(line: 2409, column: 19, scope: !17146)
!17177 = !DILocation(line: 2409, column: 29, scope: !17146)
!17178 = !DILocation(line: 2409, column: 16, scope: !17146)
!17179 = !DILocation(line: 2409, column: 33, scope: !17146)
!17180 = !DILocation(line: 2410, column: 6, scope: !17146)
!17181 = !DILocation(line: 2410, column: 12, scope: !17146)
!17182 = !DILocation(line: 2410, column: 19, scope: !17146)
!17183 = !DILocation(line: 2410, column: 29, scope: !17146)
!17184 = !DILocation(line: 2410, column: 16, scope: !17146)
!17185 = !DILocation(line: 2410, column: 46, scope: !17146)
!17186 = !DILocation(line: 2411, column: 6, scope: !17146)
!17187 = !DILocation(line: 2411, column: 12, scope: !17146)
!17188 = !DILocation(line: 2412, column: 6, scope: !17146)
!17189 = !DILocation(line: 2412, column: 16, scope: !17146)
!17190 = !DILocation(line: 2411, column: 33, scope: !17146)
!17191 = !DILocation(line: 0, scope: !17146)
!17192 = !DILocation(line: 2405, column: 11, scope: !17146)
!17193 = !DILocation(line: 2413, column: 2, scope: !17146)
!17194 = !DILocation(line: 2415, column: 16, scope: !17049)
!17195 = !DILocation(line: 2415, column: 26, scope: !17049)
!17196 = !DILocation(line: 2415, column: 2, scope: !17049)
!17197 = !DILocation(line: 2415, column: 8, scope: !17049)
!17198 = !DILocation(line: 2415, column: 14, scope: !17049)
!17199 = !DILocation(line: 2416, column: 7, scope: !17200)
!17200 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2416, column: 6)
!17201 = !DILocation(line: 2416, column: 13, scope: !17200)
!17202 = !DILocation(line: 2416, column: 6, scope: !17049)
!17203 = !DILocation(line: 2417, column: 13, scope: !17200)
!17204 = !DILocation(line: 2417, column: 23, scope: !17200)
!17205 = !DILocation(line: 2417, column: 11, scope: !17200)
!17206 = !DILocation(line: 2417, column: 3, scope: !17200)
!17207 = !DILocation(line: 2418, column: 12, scope: !17049)
!17208 = !DILocation(line: 2418, column: 22, scope: !17049)
!17209 = !DILocation(line: 2418, column: 10, scope: !17049)
!17210 = !DILocation(line: 2419, column: 15, scope: !17049)
!17211 = !DILocation(line: 2419, column: 25, scope: !17049)
!17212 = !DILocation(line: 2419, column: 2, scope: !17049)
!17213 = !DILocation(line: 2419, column: 8, scope: !17049)
!17214 = !DILocation(line: 2419, column: 13, scope: !17049)
!17215 = !DILocation(line: 2420, column: 15, scope: !17049)
!17216 = !DILocation(line: 2420, column: 25, scope: !17049)
!17217 = !DILocation(line: 2420, column: 2, scope: !17049)
!17218 = !DILocation(line: 2420, column: 8, scope: !17049)
!17219 = !DILocation(line: 2420, column: 13, scope: !17049)
!17220 = !DILocation(line: 2421, column: 19, scope: !17049)
!17221 = !DILocation(line: 2421, column: 29, scope: !17049)
!17222 = !DILocation(line: 2421, column: 2, scope: !17049)
!17223 = !DILocation(line: 2421, column: 8, scope: !17049)
!17224 = !DILocation(line: 2421, column: 17, scope: !17049)
!17225 = !DILocation(line: 2422, column: 26, scope: !17049)
!17226 = !DILocation(line: 2422, column: 36, scope: !17049)
!17227 = !DILocation(line: 2422, column: 2, scope: !17049)
!17228 = !DILocation(line: 2422, column: 8, scope: !17049)
!17229 = !DILocation(line: 2422, column: 24, scope: !17049)
!17230 = !DILocation(line: 2423, column: 31, scope: !17049)
!17231 = !DILocation(line: 2423, column: 41, scope: !17049)
!17232 = !DILocation(line: 2423, column: 2, scope: !17049)
!17233 = !DILocation(line: 2423, column: 8, scope: !17049)
!17234 = !DILocation(line: 2423, column: 29, scope: !17049)
!17235 = !DILocation(line: 2427, column: 6, scope: !17236)
!17236 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2427, column: 6)
!17237 = !DILocation(line: 2427, column: 6, scope: !17049)
!17238 = !DILocation(line: 2428, column: 15, scope: !17239)
!17239 = distinct !DILexicalBlock(scope: !17236, file: !3, line: 2427, column: 15)
!17240 = !DILocation(line: 2428, column: 20, scope: !17239)
!17241 = !DILocation(line: 2428, column: 3, scope: !17239)
!17242 = !DILocation(line: 2429, column: 32, scope: !17239)
!17243 = !DILocation(line: 2429, column: 3, scope: !17239)
!17244 = !DILocation(line: 2430, column: 13, scope: !17239)
!17245 = !DILocation(line: 2430, column: 19, scope: !17239)
!17246 = !DILocation(line: 2430, column: 26, scope: !17239)
!17247 = !DILocation(line: 2430, column: 32, scope: !17239)
!17248 = !DILocation(line: 2430, column: 3, scope: !17239)
!17249 = !DILocation(line: 2431, column: 3, scope: !17239)
!17250 = !DILocation(line: 2431, column: 9, scope: !17239)
!17251 = !DILocation(line: 2431, column: 18, scope: !17239)
!17252 = !DILocation(line: 2432, column: 17, scope: !17239)
!17253 = !DILocation(line: 2432, column: 22, scope: !17239)
!17254 = !DILocation(line: 2432, column: 3, scope: !17239)
!17255 = !DILocation(line: 2433, column: 2, scope: !17239)
!17256 = !DILocation(line: 2439, column: 6, scope: !17257)
!17257 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2439, column: 6)
!17258 = !DILocation(line: 2439, column: 18, scope: !17257)
!17259 = !DILocation(line: 2439, column: 24, scope: !17257)
!17260 = !DILocation(line: 2439, column: 15, scope: !17257)
!17261 = !DILocation(line: 2439, column: 29, scope: !17257)
!17262 = !DILocation(line: 2439, column: 33, scope: !17257)
!17263 = !DILocation(line: 2439, column: 6, scope: !17049)
!17264 = !DILocation(line: 2440, column: 7, scope: !17265)
!17265 = distinct !DILexicalBlock(scope: !17266, file: !3, line: 2440, column: 7)
!17266 = distinct !DILexicalBlock(scope: !17257, file: !3, line: 2439, column: 42)
!17267 = !DILocation(line: 2440, column: 13, scope: !17265)
!17268 = !DILocation(line: 2440, column: 18, scope: !17265)
!17269 = !DILocation(line: 2440, column: 22, scope: !17265)
!17270 = !DILocation(line: 2440, column: 28, scope: !17265)
!17271 = !DILocation(line: 2440, column: 7, scope: !17266)
!17272 = !DILocation(line: 2441, column: 42, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17265, file: !3, line: 2440, column: 35)
!17274 = !DILocation(line: 2441, column: 47, scope: !17273)
!17275 = !DILocation(line: 2442, column: 14, scope: !17273)
!17276 = !DILocation(line: 2441, column: 10, scope: !17273)
!17277 = !DILocation(line: 2441, column: 8, scope: !17273)
!17278 = !DILocation(line: 2443, column: 8, scope: !17279)
!17279 = distinct !DILexicalBlock(scope: !17273, file: !3, line: 2443, column: 8)
!17280 = !DILocation(line: 2443, column: 12, scope: !17279)
!17281 = !DILocation(line: 2443, column: 8, scope: !17273)
!17282 = !DILocation(line: 2444, column: 13, scope: !17279)
!17283 = !DILocation(line: 2444, column: 5, scope: !17279)
!17284 = !DILocation(line: 2445, column: 3, scope: !17273)
!17285 = !DILocation(line: 2446, column: 4, scope: !17286)
!17286 = distinct !DILexicalBlock(scope: !17265, file: !3, line: 2445, column: 10)
!17287 = !DILocation(line: 2446, column: 10, scope: !17286)
!17288 = !DILocation(line: 2446, column: 19, scope: !17286)
!17289 = !DILocation(line: 2448, column: 2, scope: !17266)
!17290 = !DILocation(line: 2450, column: 28, scope: !17049)
!17291 = !DILocation(line: 2450, column: 34, scope: !17049)
!17292 = !DILocation(line: 2450, column: 43, scope: !17049)
!17293 = !DILocation(line: 2450, column: 8, scope: !17049)
!17294 = !DILocation(line: 2450, column: 6, scope: !17049)
!17295 = !DILocation(line: 2451, column: 6, scope: !17296)
!17296 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2451, column: 6)
!17297 = !DILocation(line: 2451, column: 10, scope: !17296)
!17298 = !DILocation(line: 2451, column: 6, scope: !17049)
!17299 = !DILocation(line: 2452, column: 18, scope: !17300)
!17300 = distinct !DILexicalBlock(scope: !17296, file: !3, line: 2451, column: 16)
!17301 = !DILocation(line: 2453, column: 2, scope: !17300)
!17302 = !DILocation(line: 2453, column: 13, scope: !17303)
!17303 = distinct !DILexicalBlock(scope: !17296, file: !3, line: 2453, column: 13)
!17304 = !DILocation(line: 2453, column: 17, scope: !17303)
!17305 = !DILocation(line: 2453, column: 13, scope: !17296)
!17306 = !DILocation(line: 2454, column: 3, scope: !17307)
!17307 = distinct !DILexicalBlock(scope: !17303, file: !3, line: 2453, column: 22)
!17308 = !DILocation(line: 2456, column: 3, scope: !17307)
!17309 = !DILocation(line: 2464, column: 7, scope: !17310)
!17310 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2464, column: 6)
!17311 = !DILocation(line: 2464, column: 15, scope: !17310)
!17312 = !DILocation(line: 2464, column: 18, scope: !17310)
!17313 = !DILocation(line: 2464, column: 24, scope: !17310)
!17314 = !DILocation(line: 2464, column: 28, scope: !17310)
!17315 = !DILocation(line: 2464, column: 60, scope: !17310)
!17316 = !DILocation(line: 2465, column: 6, scope: !17310)
!17317 = !DILocation(line: 2465, column: 12, scope: !17310)
!17318 = !DILocation(line: 2464, column: 6, scope: !17049)
!17319 = !DILocation(line: 2466, column: 18, scope: !17310)
!17320 = !DILocation(line: 2466, column: 3, scope: !17310)
!17321 = !DILocation(line: 2468, column: 6, scope: !17322)
!17322 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2468, column: 6)
!17323 = !DILocation(line: 2468, column: 12, scope: !17322)
!17324 = !DILocation(line: 2468, column: 6, scope: !17049)
!17325 = !DILocation(line: 2469, column: 23, scope: !17322)
!17326 = !DILocation(line: 2469, column: 28, scope: !17322)
!17327 = !DILocation(line: 2469, column: 33, scope: !17322)
!17328 = !DILocation(line: 2469, column: 3, scope: !17322)
!17329 = !DILocation(line: 2470, column: 12, scope: !17330)
!17330 = distinct !DILexicalBlock(scope: !17322, file: !3, line: 2470, column: 11)
!17331 = !DILocation(line: 2470, column: 18, scope: !17330)
!17332 = !DILocation(line: 2470, column: 11, scope: !17322)
!17333 = !DILocation(line: 2471, column: 33, scope: !17330)
!17334 = !DILocation(line: 2471, column: 39, scope: !17330)
!17335 = !DILocation(line: 2471, column: 3, scope: !17330)
!17336 = !DILocation(line: 2473, column: 6, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2473, column: 6)
!17338 = !DILocation(line: 2473, column: 21, scope: !17337)
!17339 = !DILocation(line: 2473, column: 24, scope: !17337)
!17340 = !DILocation(line: 2473, column: 30, scope: !17337)
!17341 = !DILocation(line: 2473, column: 6, scope: !17049)
!17342 = !DILocation(line: 2474, column: 34, scope: !17343)
!17343 = distinct !DILexicalBlock(scope: !17337, file: !3, line: 2473, column: 36)
!17344 = !DILocation(line: 2474, column: 39, scope: !17343)
!17345 = !DILocation(line: 2474, column: 45, scope: !17343)
!17346 = !DILocation(line: 2474, column: 9, scope: !17343)
!17347 = !DILocation(line: 2474, column: 7, scope: !17343)
!17348 = !DILocation(line: 2475, column: 7, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17343, file: !3, line: 2475, column: 7)
!17350 = !DILocation(line: 2475, column: 11, scope: !17349)
!17351 = !DILocation(line: 2475, column: 7, scope: !17343)
!17352 = !DILocation(line: 2476, column: 12, scope: !17349)
!17353 = !DILocation(line: 2476, column: 4, scope: !17349)
!17354 = !DILocation(line: 2477, column: 12, scope: !17355)
!17355 = distinct !DILexicalBlock(scope: !17349, file: !3, line: 2477, column: 12)
!17356 = !DILocation(line: 2477, column: 16, scope: !17355)
!17357 = !DILocation(line: 2477, column: 12, scope: !17349)
!17358 = !DILocation(line: 2478, column: 4, scope: !17355)
!17359 = !DILocation(line: 2479, column: 2, scope: !17343)
!17360 = !DILocation(line: 2482, column: 31, scope: !17049)
!17361 = !DILocation(line: 2482, column: 2, scope: !17049)
!17362 = !DILocation(line: 2483, column: 9, scope: !17049)
!17363 = !DILocation(line: 2483, column: 2, scope: !17049)
!17364 = !DILabel(scope: !17049, name: "fail", file: !3, line: 2485)
!17365 = !DILocation(line: 2485, column: 1, scope: !17049)
!17366 = !DILocation(line: 2486, column: 34, scope: !17049)
!17367 = !DILocation(line: 2486, column: 39, scope: !17049)
!17368 = !DILocation(line: 2486, column: 2, scope: !17049)
!17369 = !DILocation(line: 2487, column: 6, scope: !17370)
!17370 = distinct !DILexicalBlock(scope: !17049, file: !3, line: 2487, column: 6)
!17371 = !DILocation(line: 2487, column: 12, scope: !17370)
!17372 = !DILocation(line: 2487, column: 6, scope: !17049)
!17373 = !DILocation(line: 2488, column: 23, scope: !17370)
!17374 = !DILocation(line: 2488, column: 28, scope: !17370)
!17375 = !DILocation(line: 2488, column: 33, scope: !17370)
!17376 = !DILocation(line: 2488, column: 3, scope: !17370)
!17377 = !DILabel(scope: !17049, name: "fail_put", file: !3, line: 2489)
!17378 = !DILocation(line: 2489, column: 1, scope: !17049)
!17379 = !DILocation(line: 2490, column: 31, scope: !17049)
!17380 = !DILocation(line: 2490, column: 2, scope: !17049)
!17381 = !DILocation(line: 2491, column: 9, scope: !17049)
!17382 = !DILocation(line: 2491, column: 2, scope: !17049)
!17383 = !DILocation(line: 2492, column: 1, scope: !17049)
!17384 = distinct !DISubprogram(name: "drm_dp_get_port", scope: !3, file: !3, line: 2031, type: !17385, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17385 = !DISubroutineType(types: !17386)
!17386 = !{!345, !391, !364}
!17387 = !DILocalVariable(name: "mstb", arg: 1, scope: !17384, file: !3, line: 2031, type: !391)
!17388 = !DILocation(line: 2031, column: 74, scope: !17384)
!17389 = !DILocalVariable(name: "port_num", arg: 2, scope: !17384, file: !3, line: 2031, type: !364)
!17390 = !DILocation(line: 2031, column: 83, scope: !17384)
!17391 = !DILocalVariable(name: "port", scope: !17384, file: !3, line: 2033, type: !345)
!17392 = !DILocation(line: 2033, column: 26, scope: !17384)
!17393 = !DILocalVariable(name: "ret", scope: !17384, file: !3, line: 2034, type: !115)
!17394 = !DILocation(line: 2034, column: 6, scope: !17384)
!17395 = !DILocalVariable(name: "__mptr", scope: !17396, file: !3, line: 2036, type: !344)
!17396 = distinct !DILexicalBlock(scope: !17397, file: !3, line: 2036, column: 2)
!17397 = distinct !DILexicalBlock(scope: !17384, file: !3, line: 2036, column: 2)
!17398 = !DILocation(line: 2036, column: 2, scope: !17396)
!17399 = !DILocation(line: 2036, column: 2, scope: !17400)
!17400 = distinct !DILexicalBlock(scope: !17396, file: !3, line: 2036, column: 2)
!17401 = !DILocation(line: 2036, column: 2, scope: !17397)
!17402 = !DILocation(line: 2036, column: 2, scope: !17403)
!17403 = distinct !DILexicalBlock(scope: !17397, file: !3, line: 2036, column: 2)
!17404 = !DILocation(line: 2037, column: 7, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17406, file: !3, line: 2037, column: 7)
!17406 = distinct !DILexicalBlock(scope: !17403, file: !3, line: 2036, column: 48)
!17407 = !DILocation(line: 2037, column: 13, scope: !17405)
!17408 = !DILocation(line: 2037, column: 25, scope: !17405)
!17409 = !DILocation(line: 2037, column: 22, scope: !17405)
!17410 = !DILocation(line: 2037, column: 7, scope: !17406)
!17411 = !DILocation(line: 2038, column: 43, scope: !17412)
!17412 = distinct !DILexicalBlock(scope: !17405, file: !3, line: 2037, column: 35)
!17413 = !DILocation(line: 2038, column: 10, scope: !17412)
!17414 = !DILocation(line: 2038, column: 8, scope: !17412)
!17415 = !DILocation(line: 2039, column: 11, scope: !17412)
!17416 = !DILocation(line: 2039, column: 17, scope: !17412)
!17417 = !DILocation(line: 2039, column: 4, scope: !17412)
!17418 = !DILocation(line: 2041, column: 2, scope: !17406)
!17419 = !DILocalVariable(name: "__mptr", scope: !17420, file: !3, line: 2036, type: !344)
!17420 = distinct !DILexicalBlock(scope: !17403, file: !3, line: 2036, column: 2)
!17421 = !DILocation(line: 2036, column: 2, scope: !17420)
!17422 = !DILocation(line: 2036, column: 2, scope: !17423)
!17423 = distinct !DILexicalBlock(scope: !17420, file: !3, line: 2036, column: 2)
!17424 = distinct !{!17424, !17401, !17425}
!17425 = !DILocation(line: 2041, column: 2, scope: !17397)
!17426 = !DILocation(line: 2043, column: 2, scope: !17384)
!17427 = !DILocation(line: 2044, column: 1, scope: !17384)
!17428 = distinct !DISubprogram(name: "drm_dp_mst_add_port", scope: !3, file: !3, line: 2334, type: !17429, scopeLine: 2337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17429 = !DISubroutineType(types: !17430)
!17430 = !{!345, !3372, !406, !391, !364}
!17431 = !DILocalVariable(name: "dev", arg: 1, scope: !17428, file: !3, line: 2334, type: !3372)
!17432 = !DILocation(line: 2334, column: 40, scope: !17428)
!17433 = !DILocalVariable(name: "mgr", arg: 2, scope: !17428, file: !3, line: 2335, type: !406)
!17434 = !DILocation(line: 2335, column: 39, scope: !17428)
!17435 = !DILocalVariable(name: "mstb", arg: 3, scope: !17428, file: !3, line: 2336, type: !391)
!17436 = !DILocation(line: 2336, column: 33, scope: !17428)
!17437 = !DILocalVariable(name: "port_number", arg: 4, scope: !17428, file: !3, line: 2336, type: !364)
!17438 = !DILocation(line: 2336, column: 42, scope: !17428)
!17439 = !DILocalVariable(name: "port", scope: !17428, file: !3, line: 2338, type: !345)
!17440 = !DILocation(line: 2338, column: 26, scope: !17428)
!17441 = !DILocation(line: 2338, column: 33, scope: !17428)
!17442 = !DILocation(line: 2340, column: 7, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17428, file: !3, line: 2340, column: 6)
!17444 = !DILocation(line: 2340, column: 6, scope: !17428)
!17445 = !DILocation(line: 2341, column: 3, scope: !17443)
!17446 = !DILocation(line: 2343, column: 13, scope: !17428)
!17447 = !DILocation(line: 2343, column: 19, scope: !17428)
!17448 = !DILocation(line: 2343, column: 2, scope: !17428)
!17449 = !DILocation(line: 2344, column: 13, scope: !17428)
!17450 = !DILocation(line: 2344, column: 19, scope: !17428)
!17451 = !DILocation(line: 2344, column: 2, scope: !17428)
!17452 = !DILocation(line: 2345, column: 17, scope: !17428)
!17453 = !DILocation(line: 2345, column: 2, scope: !17428)
!17454 = !DILocation(line: 2345, column: 8, scope: !17428)
!17455 = !DILocation(line: 2345, column: 15, scope: !17428)
!17456 = !DILocation(line: 2346, column: 19, scope: !17428)
!17457 = !DILocation(line: 2346, column: 2, scope: !17428)
!17458 = !DILocation(line: 2346, column: 8, scope: !17428)
!17459 = !DILocation(line: 2346, column: 17, scope: !17428)
!17460 = !DILocation(line: 2347, column: 14, scope: !17428)
!17461 = !DILocation(line: 2347, column: 2, scope: !17428)
!17462 = !DILocation(line: 2347, column: 8, scope: !17428)
!17463 = !DILocation(line: 2347, column: 12, scope: !17428)
!17464 = !DILocation(line: 2348, column: 2, scope: !17428)
!17465 = !DILocation(line: 2348, column: 8, scope: !17428)
!17466 = !DILocation(line: 2348, column: 12, scope: !17428)
!17467 = !DILocation(line: 2348, column: 17, scope: !17428)
!17468 = !DILocation(line: 2349, column: 18, scope: !17428)
!17469 = !DILocation(line: 2349, column: 23, scope: !17428)
!17470 = !DILocation(line: 2349, column: 2, scope: !17428)
!17471 = !DILocation(line: 2349, column: 8, scope: !17428)
!17472 = !DILocation(line: 2349, column: 12, scope: !17428)
!17473 = !DILocation(line: 2349, column: 16, scope: !17428)
!17474 = !DILocation(line: 2350, column: 2, scope: !17428)
!17475 = !DILocation(line: 2350, column: 8, scope: !17428)
!17476 = !DILocation(line: 2350, column: 12, scope: !17428)
!17477 = !DILocation(line: 2350, column: 22, scope: !17428)
!17478 = !DILocation(line: 2353, column: 26, scope: !17428)
!17479 = !DILocation(line: 2353, column: 32, scope: !17428)
!17480 = !DILocation(line: 2353, column: 2, scope: !17428)
!17481 = !DILocation(line: 2359, column: 29, scope: !17428)
!17482 = !DILocation(line: 2359, column: 2, scope: !17428)
!17483 = !DILocation(line: 2361, column: 9, scope: !17428)
!17484 = !DILocation(line: 2361, column: 2, scope: !17428)
!17485 = !DILocation(line: 2362, column: 1, scope: !17428)
!17486 = distinct !DISubprogram(name: "drm_dp_mst_topology_unlink_port", scope: !3, file: !3, line: 2323, type: !10596, scopeLine: 2325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17487 = !DILocalVariable(name: "mgr", arg: 1, scope: !17486, file: !3, line: 2323, type: !406)
!17488 = !DILocation(line: 2323, column: 65, scope: !17486)
!17489 = !DILocalVariable(name: "port", arg: 2, scope: !17486, file: !3, line: 2324, type: !345)
!17490 = !DILocation(line: 2324, column: 29, scope: !17486)
!17491 = !DILocation(line: 2326, column: 14, scope: !17486)
!17492 = !DILocation(line: 2326, column: 19, scope: !17486)
!17493 = !DILocation(line: 2326, column: 2, scope: !17486)
!17494 = !DILocation(line: 2327, column: 2, scope: !17486)
!17495 = !DILocation(line: 2327, column: 8, scope: !17486)
!17496 = !DILocation(line: 2327, column: 16, scope: !17486)
!17497 = !DILocation(line: 2327, column: 25, scope: !17486)
!17498 = !DILocation(line: 2328, column: 12, scope: !17486)
!17499 = !DILocation(line: 2328, column: 18, scope: !17486)
!17500 = !DILocation(line: 2328, column: 2, scope: !17486)
!17501 = !DILocation(line: 2329, column: 16, scope: !17486)
!17502 = !DILocation(line: 2329, column: 21, scope: !17486)
!17503 = !DILocation(line: 2329, column: 2, scope: !17486)
!17504 = !DILocation(line: 2330, column: 31, scope: !17486)
!17505 = !DILocation(line: 2330, column: 2, scope: !17486)
!17506 = !DILocation(line: 2331, column: 1, scope: !17486)
!17507 = distinct !DISubprogram(name: "drm_dp_mst_topology_get_port", scope: !3, file: !3, line: 1919, type: !7423, scopeLine: 1920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17508 = !DILocalVariable(name: "port", arg: 1, scope: !17507, file: !3, line: 1919, type: !345)
!17509 = !DILocation(line: 1919, column: 66, scope: !17507)
!17510 = !DILocation(line: 1921, column: 28, scope: !17507)
!17511 = !DILocation(line: 1921, column: 34, scope: !17507)
!17512 = !DILocation(line: 1921, column: 2, scope: !17507)
!17513 = !DILocalVariable(name: "__ret_warn_on", scope: !17514, file: !3, line: 1923, type: !115)
!17514 = distinct !DILexicalBlock(scope: !17507, file: !3, line: 1923, column: 2)
!17515 = !DILocation(line: 1923, column: 2, scope: !17514)
!17516 = !DILocation(line: 1923, column: 2, scope: !17517)
!17517 = distinct !DILexicalBlock(scope: !17514, file: !3, line: 1923, column: 2)
!17518 = !DILocation(line: 1923, column: 2, scope: !17519)
!17519 = distinct !DILexicalBlock(scope: !17517, file: !3, line: 1923, column: 2)
!17520 = !DILocation(line: 1923, column: 2, scope: !17521)
!17521 = distinct !DILexicalBlock(scope: !17519, file: !3, line: 1923, column: 2)
!17522 = !DILocation(line: 1923, column: 2, scope: !17523)
!17523 = distinct !DILexicalBlock(scope: !17519, file: !3, line: 1923, column: 2)
!17524 = !{i32 -2140066685, i32 -2140066656, i32 -2140066610, i32 -2140066552, i32 -2140066498, i32 -2140066444, i32 -2140066389, i32 -2140066358}
!17525 = !DILocation(line: 1923, column: 2, scope: !17526)
!17526 = distinct !DILexicalBlock(scope: !17519, file: !3, line: 1923, column: 2)
!17527 = !{i32 -2140065938, i32 -2140065931, i32 -2140065879, i32 -2140065848, i32 -2140065818}
!17528 = !DILocation(line: 1923, column: 2, scope: !17529)
!17529 = distinct !DILexicalBlock(scope: !17519, file: !3, line: 1923, column: 2)
!17530 = !DILocation(line: 1924, column: 12, scope: !17507)
!17531 = !DILocation(line: 1924, column: 18, scope: !17507)
!17532 = !DILocation(line: 1924, column: 2, scope: !17507)
!17533 = !DILocation(line: 1925, column: 2, scope: !17507)
!17534 = !DILocation(line: 1928, column: 30, scope: !17507)
!17535 = !DILocation(line: 1928, column: 36, scope: !17507)
!17536 = !DILocation(line: 1928, column: 2, scope: !17507)
!17537 = !DILocation(line: 1929, column: 1, scope: !17507)
!17538 = distinct !DISubprogram(name: "drm_dp_send_enum_path_resources", scope: !3, file: !3, line: 3065, type: !17539, scopeLine: 3068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17539 = !DISubroutineType(types: !17540)
!17540 = !{!115, !406, !391, !345}
!17541 = !DILocalVariable(name: "mgr", arg: 1, scope: !17538, file: !3, line: 3065, type: !406)
!17542 = !DILocation(line: 3065, column: 65, scope: !17538)
!17543 = !DILocalVariable(name: "mstb", arg: 2, scope: !17538, file: !3, line: 3066, type: !391)
!17544 = !DILocation(line: 3066, column: 31, scope: !17538)
!17545 = !DILocalVariable(name: "port", arg: 3, scope: !17538, file: !3, line: 3067, type: !345)
!17546 = !DILocation(line: 3067, column: 29, scope: !17538)
!17547 = !DILocalVariable(name: "path_res", scope: !17538, file: !3, line: 3069, type: !17548)
!17548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6053, size: 64)
!17549 = !DILocation(line: 3069, column: 47, scope: !17538)
!17550 = !DILocalVariable(name: "txmsg", scope: !17538, file: !3, line: 3070, type: !6003)
!17551 = !DILocation(line: 3070, column: 33, scope: !17538)
!17552 = !DILocalVariable(name: "ret", scope: !17538, file: !3, line: 3071, type: !115)
!17553 = !DILocation(line: 3071, column: 6, scope: !17538)
!17554 = !DILocation(line: 3073, column: 10, scope: !17538)
!17555 = !DILocation(line: 3073, column: 8, scope: !17538)
!17556 = !DILocation(line: 3074, column: 7, scope: !17557)
!17557 = distinct !DILexicalBlock(scope: !17538, file: !3, line: 3074, column: 6)
!17558 = !DILocation(line: 3074, column: 6, scope: !17538)
!17559 = !DILocation(line: 3075, column: 3, scope: !17557)
!17560 = !DILocation(line: 3077, column: 15, scope: !17538)
!17561 = !DILocation(line: 3077, column: 2, scope: !17538)
!17562 = !DILocation(line: 3077, column: 9, scope: !17538)
!17563 = !DILocation(line: 3077, column: 13, scope: !17538)
!17564 = !DILocation(line: 3078, column: 28, scope: !17538)
!17565 = !DILocation(line: 3078, column: 35, scope: !17538)
!17566 = !DILocation(line: 3078, column: 41, scope: !17538)
!17567 = !DILocation(line: 3078, column: 2, scope: !17538)
!17568 = !DILocation(line: 3080, column: 23, scope: !17538)
!17569 = !DILocation(line: 3080, column: 28, scope: !17538)
!17570 = !DILocation(line: 3080, column: 2, scope: !17538)
!17571 = !DILocation(line: 3082, column: 33, scope: !17538)
!17572 = !DILocation(line: 3082, column: 39, scope: !17538)
!17573 = !DILocation(line: 3082, column: 8, scope: !17538)
!17574 = !DILocation(line: 3082, column: 6, scope: !17538)
!17575 = !DILocation(line: 3083, column: 6, scope: !17576)
!17576 = distinct !DILexicalBlock(scope: !17538, file: !3, line: 3083, column: 6)
!17577 = !DILocation(line: 3083, column: 10, scope: !17576)
!17578 = !DILocation(line: 3083, column: 6, scope: !17538)
!17579 = !DILocation(line: 3084, column: 7, scope: !17580)
!17580 = distinct !DILexicalBlock(scope: !17576, file: !3, line: 3083, column: 15)
!17581 = !DILocation(line: 3085, column: 15, scope: !17580)
!17582 = !DILocation(line: 3085, column: 22, scope: !17580)
!17583 = !DILocation(line: 3085, column: 28, scope: !17580)
!17584 = !DILocation(line: 3085, column: 30, scope: !17580)
!17585 = !DILocation(line: 3085, column: 12, scope: !17580)
!17586 = !DILocation(line: 3087, column: 7, scope: !17587)
!17587 = distinct !DILexicalBlock(scope: !17580, file: !3, line: 3087, column: 7)
!17588 = !DILocation(line: 3087, column: 14, scope: !17587)
!17589 = !DILocation(line: 3087, column: 20, scope: !17587)
!17590 = !DILocation(line: 3087, column: 31, scope: !17587)
!17591 = !DILocation(line: 3087, column: 7, scope: !17580)
!17592 = !DILocation(line: 3088, column: 4, scope: !17593)
!17593 = distinct !DILexicalBlock(scope: !17587, file: !3, line: 3087, column: 57)
!17594 = !DILocation(line: 3089, column: 3, scope: !17593)
!17595 = !DILocation(line: 3090, column: 8, scope: !17596)
!17596 = distinct !DILexicalBlock(scope: !17597, file: !3, line: 3090, column: 8)
!17597 = distinct !DILexicalBlock(scope: !17587, file: !3, line: 3089, column: 10)
!17598 = !DILocation(line: 3090, column: 14, scope: !17596)
!17599 = !DILocation(line: 3090, column: 26, scope: !17596)
!17600 = !DILocation(line: 3090, column: 36, scope: !17596)
!17601 = !DILocation(line: 3090, column: 23, scope: !17596)
!17602 = !DILocation(line: 3090, column: 8, scope: !17597)
!17603 = !DILocation(line: 3091, column: 5, scope: !17596)
!17604 = !DILocation(line: 3093, column: 4, scope: !17597)
!17605 = !DILocation(line: 3102, column: 8, scope: !17606)
!17606 = distinct !DILexicalBlock(scope: !17597, file: !3, line: 3102, column: 8)
!17607 = !DILocation(line: 3102, column: 14, scope: !17606)
!17608 = !DILocation(line: 3102, column: 26, scope: !17606)
!17609 = !DILocation(line: 3102, column: 36, scope: !17606)
!17610 = !DILocation(line: 3102, column: 23, scope: !17606)
!17611 = !DILocation(line: 3102, column: 59, scope: !17606)
!17612 = !DILocation(line: 3103, column: 8, scope: !17606)
!17613 = !DILocation(line: 3103, column: 14, scope: !17606)
!17614 = !DILocation(line: 3103, column: 29, scope: !17606)
!17615 = !DILocation(line: 3103, column: 39, scope: !17606)
!17616 = !DILocation(line: 3103, column: 26, scope: !17606)
!17617 = !DILocation(line: 3102, column: 8, scope: !17597)
!17618 = !DILocation(line: 3104, column: 9, scope: !17606)
!17619 = !DILocation(line: 3104, column: 5, scope: !17606)
!17620 = !DILocation(line: 3106, column: 21, scope: !17597)
!17621 = !DILocation(line: 3106, column: 31, scope: !17597)
!17622 = !DILocation(line: 3106, column: 4, scope: !17597)
!17623 = !DILocation(line: 3106, column: 10, scope: !17597)
!17624 = !DILocation(line: 3106, column: 19, scope: !17597)
!17625 = !DILocation(line: 3107, column: 24, scope: !17597)
!17626 = !DILocation(line: 3107, column: 34, scope: !17597)
!17627 = !DILocation(line: 3107, column: 4, scope: !17597)
!17628 = !DILocation(line: 3107, column: 10, scope: !17597)
!17629 = !DILocation(line: 3107, column: 22, scope: !17597)
!17630 = !DILocation(line: 3109, column: 2, scope: !17580)
!17631 = !DILocation(line: 3111, column: 8, scope: !17538)
!17632 = !DILocation(line: 3111, column: 2, scope: !17538)
!17633 = !DILocation(line: 3112, column: 9, scope: !17538)
!17634 = !DILocation(line: 3112, column: 2, scope: !17538)
!17635 = !DILocation(line: 3113, column: 1, scope: !17538)
!17636 = distinct !DISubprogram(name: "drm_dp_port_set_pdt", scope: !3, file: !3, line: 2085, type: !17637, scopeLine: 2087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17637 = !DISubroutineType(types: !17638)
!17638 = !{!115, !345, !364, !370}
!17639 = !DILocalVariable(name: "port", arg: 1, scope: !17636, file: !3, line: 2085, type: !345)
!17640 = !DILocation(line: 2085, column: 45, scope: !17636)
!17641 = !DILocalVariable(name: "new_pdt", arg: 2, scope: !17636, file: !3, line: 2085, type: !364)
!17642 = !DILocation(line: 2085, column: 54, scope: !17636)
!17643 = !DILocalVariable(name: "new_mcs", arg: 3, scope: !17636, file: !3, line: 2086, type: !370)
!17644 = !DILocation(line: 2086, column: 12, scope: !17636)
!17645 = !DILocalVariable(name: "mgr", scope: !17636, file: !3, line: 2088, type: !406)
!17646 = !DILocation(line: 2088, column: 34, scope: !17636)
!17647 = !DILocation(line: 2088, column: 40, scope: !17636)
!17648 = !DILocation(line: 2088, column: 46, scope: !17636)
!17649 = !DILocalVariable(name: "mstb", scope: !17636, file: !3, line: 2089, type: !391)
!17650 = !DILocation(line: 2089, column: 28, scope: !17636)
!17651 = !DILocalVariable(name: "rad", scope: !17636, file: !3, line: 2090, type: !398)
!17652 = !DILocation(line: 2090, column: 5, scope: !17636)
!17653 = !DILocalVariable(name: "lct", scope: !17636, file: !3, line: 2090, type: !364)
!17654 = !DILocation(line: 2090, column: 13, scope: !17636)
!17655 = !DILocalVariable(name: "ret", scope: !17636, file: !3, line: 2091, type: !115)
!17656 = !DILocation(line: 2091, column: 6, scope: !17636)
!17657 = !DILocation(line: 2093, column: 6, scope: !17658)
!17658 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 2093, column: 6)
!17659 = !DILocation(line: 2093, column: 12, scope: !17658)
!17660 = !DILocation(line: 2093, column: 19, scope: !17658)
!17661 = !DILocation(line: 2093, column: 16, scope: !17658)
!17662 = !DILocation(line: 2093, column: 27, scope: !17658)
!17663 = !DILocation(line: 2093, column: 30, scope: !17658)
!17664 = !DILocation(line: 2093, column: 36, scope: !17658)
!17665 = !DILocation(line: 2093, column: 43, scope: !17658)
!17666 = !DILocation(line: 2093, column: 40, scope: !17658)
!17667 = !DILocation(line: 2093, column: 6, scope: !17636)
!17668 = !DILocation(line: 2094, column: 3, scope: !17658)
!17669 = !DILocation(line: 2097, column: 6, scope: !17670)
!17670 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 2097, column: 6)
!17671 = !DILocation(line: 2097, column: 12, scope: !17670)
!17672 = !DILocation(line: 2097, column: 16, scope: !17670)
!17673 = !DILocation(line: 2097, column: 6, scope: !17636)
!17674 = !DILocation(line: 2098, column: 32, scope: !17675)
!17675 = distinct !DILexicalBlock(scope: !17676, file: !3, line: 2098, column: 7)
!17676 = distinct !DILexicalBlock(scope: !17670, file: !3, line: 2097, column: 40)
!17677 = !DILocation(line: 2098, column: 38, scope: !17675)
!17678 = !DILocation(line: 2098, column: 43, scope: !17675)
!17679 = !DILocation(line: 2098, column: 49, scope: !17675)
!17680 = !DILocation(line: 2098, column: 7, scope: !17675)
!17681 = !DILocation(line: 2098, column: 7, scope: !17676)
!17682 = !DILocation(line: 2103, column: 8, scope: !17683)
!17683 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 2103, column: 8)
!17684 = distinct !DILexicalBlock(scope: !17675, file: !3, line: 2098, column: 55)
!17685 = !DILocation(line: 2103, column: 16, scope: !17683)
!17686 = !DILocation(line: 2103, column: 39, scope: !17683)
!17687 = !DILocation(line: 2104, column: 33, scope: !17683)
!17688 = !DILocation(line: 2104, column: 42, scope: !17683)
!17689 = !DILocation(line: 2104, column: 8, scope: !17683)
!17690 = !DILocation(line: 2103, column: 8, scope: !17684)
!17691 = !DILocation(line: 2105, column: 17, scope: !17692)
!17692 = distinct !DILexicalBlock(scope: !17683, file: !3, line: 2104, column: 52)
!17693 = !DILocation(line: 2105, column: 5, scope: !17692)
!17694 = !DILocation(line: 2105, column: 11, scope: !17692)
!17695 = !DILocation(line: 2105, column: 15, scope: !17692)
!17696 = !DILocation(line: 2106, column: 17, scope: !17692)
!17697 = !DILocation(line: 2106, column: 5, scope: !17692)
!17698 = !DILocation(line: 2106, column: 11, scope: !17692)
!17699 = !DILocation(line: 2106, column: 15, scope: !17692)
!17700 = !DILocation(line: 2107, column: 5, scope: !17692)
!17701 = !DILocation(line: 2111, column: 34, scope: !17684)
!17702 = !DILocation(line: 2111, column: 4, scope: !17684)
!17703 = !DILocation(line: 2112, column: 3, scope: !17684)
!17704 = !DILocation(line: 2113, column: 16, scope: !17705)
!17705 = distinct !DILexicalBlock(scope: !17675, file: !3, line: 2112, column: 10)
!17706 = !DILocation(line: 2113, column: 21, scope: !17705)
!17707 = !DILocation(line: 2113, column: 4, scope: !17705)
!17708 = !DILocation(line: 2114, column: 33, scope: !17705)
!17709 = !DILocation(line: 2114, column: 39, scope: !17705)
!17710 = !DILocation(line: 2114, column: 4, scope: !17705)
!17711 = !DILocation(line: 2115, column: 4, scope: !17705)
!17712 = !DILocation(line: 2115, column: 10, scope: !17705)
!17713 = !DILocation(line: 2115, column: 15, scope: !17705)
!17714 = !DILocation(line: 2116, column: 18, scope: !17705)
!17715 = !DILocation(line: 2116, column: 23, scope: !17705)
!17716 = !DILocation(line: 2116, column: 4, scope: !17705)
!17717 = !DILocation(line: 2118, column: 2, scope: !17676)
!17718 = !DILocation(line: 2120, column: 14, scope: !17636)
!17719 = !DILocation(line: 2120, column: 2, scope: !17636)
!17720 = !DILocation(line: 2120, column: 8, scope: !17636)
!17721 = !DILocation(line: 2120, column: 12, scope: !17636)
!17722 = !DILocation(line: 2121, column: 14, scope: !17636)
!17723 = !DILocation(line: 2121, column: 2, scope: !17636)
!17724 = !DILocation(line: 2121, column: 8, scope: !17636)
!17725 = !DILocation(line: 2121, column: 12, scope: !17636)
!17726 = !DILocation(line: 2123, column: 6, scope: !17727)
!17727 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 2123, column: 6)
!17728 = !DILocation(line: 2123, column: 12, scope: !17727)
!17729 = !DILocation(line: 2123, column: 16, scope: !17727)
!17730 = !DILocation(line: 2123, column: 6, scope: !17636)
!17731 = !DILocation(line: 2124, column: 32, scope: !17732)
!17732 = distinct !DILexicalBlock(scope: !17733, file: !3, line: 2124, column: 7)
!17733 = distinct !DILexicalBlock(scope: !17727, file: !3, line: 2123, column: 40)
!17734 = !DILocation(line: 2124, column: 38, scope: !17732)
!17735 = !DILocation(line: 2124, column: 43, scope: !17732)
!17736 = !DILocation(line: 2124, column: 49, scope: !17732)
!17737 = !DILocation(line: 2124, column: 7, scope: !17732)
!17738 = !DILocation(line: 2124, column: 7, scope: !17733)
!17739 = !DILocation(line: 2126, column: 38, scope: !17740)
!17740 = distinct !DILexicalBlock(scope: !17732, file: !3, line: 2124, column: 55)
!17741 = !DILocation(line: 2126, column: 10, scope: !17740)
!17742 = !DILocation(line: 2126, column: 8, scope: !17740)
!17743 = !DILocation(line: 2127, column: 3, scope: !17740)
!17744 = !DILocation(line: 2128, column: 31, scope: !17745)
!17745 = distinct !DILexicalBlock(scope: !17732, file: !3, line: 2127, column: 10)
!17746 = !DILocation(line: 2128, column: 37, scope: !17745)
!17747 = !DILocation(line: 2128, column: 10, scope: !17745)
!17748 = !DILocation(line: 2128, column: 8, scope: !17745)
!17749 = !DILocation(line: 2129, column: 40, scope: !17745)
!17750 = !DILocation(line: 2129, column: 45, scope: !17745)
!17751 = !DILocation(line: 2129, column: 11, scope: !17745)
!17752 = !DILocation(line: 2129, column: 9, scope: !17745)
!17753 = !DILocation(line: 2130, column: 9, scope: !17754)
!17754 = distinct !DILexicalBlock(scope: !17745, file: !3, line: 2130, column: 8)
!17755 = !DILocation(line: 2130, column: 8, scope: !17745)
!17756 = !DILocation(line: 2131, column: 9, scope: !17757)
!17757 = distinct !DILexicalBlock(scope: !17754, file: !3, line: 2130, column: 15)
!17758 = !DILocation(line: 2132, column: 5, scope: !17757)
!17759 = !DILocation(line: 2134, column: 5, scope: !17757)
!17760 = !DILocation(line: 2137, column: 16, scope: !17745)
!17761 = !DILocation(line: 2137, column: 21, scope: !17745)
!17762 = !DILocation(line: 2137, column: 4, scope: !17745)
!17763 = !DILocation(line: 2138, column: 17, scope: !17745)
!17764 = !DILocation(line: 2138, column: 4, scope: !17745)
!17765 = !DILocation(line: 2138, column: 10, scope: !17745)
!17766 = !DILocation(line: 2138, column: 15, scope: !17745)
!17767 = !DILocation(line: 2139, column: 16, scope: !17745)
!17768 = !DILocation(line: 2139, column: 22, scope: !17745)
!17769 = !DILocation(line: 2139, column: 4, scope: !17745)
!17770 = !DILocation(line: 2139, column: 10, scope: !17745)
!17771 = !DILocation(line: 2139, column: 14, scope: !17745)
!17772 = !DILocation(line: 2140, column: 24, scope: !17745)
!17773 = !DILocation(line: 2140, column: 4, scope: !17745)
!17774 = !DILocation(line: 2140, column: 10, scope: !17745)
!17775 = !DILocation(line: 2140, column: 22, scope: !17745)
!17776 = !DILocation(line: 2146, column: 31, scope: !17745)
!17777 = !DILocation(line: 2146, column: 4, scope: !17745)
!17778 = !DILocation(line: 2147, column: 18, scope: !17745)
!17779 = !DILocation(line: 2147, column: 23, scope: !17745)
!17780 = !DILocation(line: 2147, column: 4, scope: !17745)
!17781 = !DILocation(line: 2150, column: 8, scope: !17745)
!17782 = !DILocation(line: 2152, column: 2, scope: !17733)
!17783 = !DILocation(line: 2123, column: 19, scope: !17727)
!17784 = !DILabel(scope: !17636, name: "out", file: !3, line: 2154)
!17785 = !DILocation(line: 2154, column: 1, scope: !17636)
!17786 = !DILocation(line: 2155, column: 6, scope: !17787)
!17787 = distinct !DILexicalBlock(scope: !17636, file: !3, line: 2155, column: 6)
!17788 = !DILocation(line: 2155, column: 10, scope: !17787)
!17789 = !DILocation(line: 2155, column: 6, scope: !17636)
!17790 = !DILocation(line: 2156, column: 3, scope: !17787)
!17791 = !DILocation(line: 2156, column: 9, scope: !17787)
!17792 = !DILocation(line: 2156, column: 13, scope: !17787)
!17793 = !DILocation(line: 2157, column: 9, scope: !17636)
!17794 = !DILocation(line: 2157, column: 2, scope: !17636)
!17795 = !DILocation(line: 2158, column: 1, scope: !17636)
!17796 = distinct !DISubprogram(name: "drm_dp_mst_port_add_connector", scope: !3, file: !3, line: 2290, type: !17797, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17797 = !DISubroutineType(types: !17798)
!17798 = !{null, !391, !345}
!17799 = !DILocalVariable(name: "mstb", arg: 1, scope: !17796, file: !3, line: 2290, type: !391)
!17800 = !DILocation(line: 2290, column: 57, scope: !17796)
!17801 = !DILocalVariable(name: "port", arg: 2, scope: !17796, file: !3, line: 2291, type: !345)
!17802 = !DILocation(line: 2291, column: 34, scope: !17796)
!17803 = !DILocalVariable(name: "mgr", scope: !17796, file: !3, line: 2293, type: !406)
!17804 = !DILocation(line: 2293, column: 34, scope: !17796)
!17805 = !DILocation(line: 2293, column: 40, scope: !17796)
!17806 = !DILocation(line: 2293, column: 46, scope: !17796)
!17807 = !DILocalVariable(name: "proppath", scope: !17796, file: !3, line: 2294, type: !17808)
!17808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !846, size: 2040, elements: !6077)
!17809 = !DILocation(line: 2294, column: 7, scope: !17796)
!17810 = !DILocalVariable(name: "ret", scope: !17796, file: !3, line: 2295, type: !115)
!17811 = !DILocation(line: 2295, column: 6, scope: !17796)
!17812 = !DILocation(line: 2297, column: 22, scope: !17796)
!17813 = !DILocation(line: 2297, column: 28, scope: !17796)
!17814 = !DILocation(line: 2297, column: 34, scope: !17796)
!17815 = !DILocation(line: 2297, column: 44, scope: !17796)
!17816 = !DILocation(line: 2297, column: 2, scope: !17796)
!17817 = !DILocation(line: 2298, column: 20, scope: !17796)
!17818 = !DILocation(line: 2298, column: 25, scope: !17796)
!17819 = !DILocation(line: 2298, column: 30, scope: !17796)
!17820 = !DILocation(line: 2298, column: 44, scope: !17796)
!17821 = !DILocation(line: 2298, column: 49, scope: !17796)
!17822 = !DILocation(line: 2298, column: 55, scope: !17796)
!17823 = !DILocation(line: 2298, column: 2, scope: !17796)
!17824 = !DILocation(line: 2298, column: 8, scope: !17796)
!17825 = !DILocation(line: 2298, column: 18, scope: !17796)
!17826 = !DILocation(line: 2299, column: 7, scope: !17827)
!17827 = distinct !DILexicalBlock(scope: !17796, file: !3, line: 2299, column: 6)
!17828 = !DILocation(line: 2299, column: 13, scope: !17827)
!17829 = !DILocation(line: 2299, column: 6, scope: !17796)
!17830 = !DILocation(line: 2300, column: 7, scope: !17831)
!17831 = distinct !DILexicalBlock(scope: !17827, file: !3, line: 2299, column: 24)
!17832 = !DILocation(line: 2301, column: 3, scope: !17831)
!17833 = !DILocation(line: 2304, column: 6, scope: !17834)
!17834 = distinct !DILexicalBlock(scope: !17796, file: !3, line: 2304, column: 6)
!17835 = !DILocation(line: 2304, column: 12, scope: !17834)
!17836 = !DILocation(line: 2304, column: 16, scope: !17834)
!17837 = !DILocation(line: 2304, column: 39, scope: !17834)
!17838 = !DILocation(line: 2305, column: 31, scope: !17834)
!17839 = !DILocation(line: 2305, column: 37, scope: !17834)
!17840 = !DILocation(line: 2305, column: 42, scope: !17834)
!17841 = !DILocation(line: 2305, column: 48, scope: !17834)
!17842 = !DILocation(line: 2305, column: 6, scope: !17834)
!17843 = !DILocation(line: 2304, column: 6, scope: !17796)
!17844 = !DILocation(line: 2306, column: 36, scope: !17845)
!17845 = distinct !DILexicalBlock(scope: !17834, file: !3, line: 2305, column: 54)
!17846 = !DILocation(line: 2306, column: 42, scope: !17845)
!17847 = !DILocation(line: 2307, column: 9, scope: !17845)
!17848 = !DILocation(line: 2307, column: 15, scope: !17845)
!17849 = !DILocation(line: 2307, column: 19, scope: !17845)
!17850 = !DILocation(line: 2306, column: 23, scope: !17845)
!17851 = !DILocation(line: 2306, column: 3, scope: !17845)
!17852 = !DILocation(line: 2306, column: 9, scope: !17845)
!17853 = !DILocation(line: 2306, column: 21, scope: !17845)
!17854 = !DILocation(line: 2308, column: 35, scope: !17845)
!17855 = !DILocation(line: 2308, column: 41, scope: !17845)
!17856 = !DILocation(line: 2308, column: 3, scope: !17845)
!17857 = !DILocation(line: 2309, column: 2, scope: !17845)
!17858 = !DILocation(line: 2311, column: 25, scope: !17796)
!17859 = !DILocation(line: 2311, column: 31, scope: !17796)
!17860 = !DILocation(line: 2311, column: 2, scope: !17796)
!17861 = !DILocation(line: 2312, column: 2, scope: !17796)
!17862 = !DILabel(scope: !17796, name: "error", file: !3, line: 2314)
!17863 = !DILocation(line: 2314, column: 1, scope: !17796)
!17864 = !DILocation(line: 2315, column: 2, scope: !17796)
!17865 = !DILocation(line: 2316, column: 1, scope: !17796)
!17866 = distinct !DISubprogram(name: "drm_dp_mst_get_mstb_malloc", scope: !3, file: !3, line: 1484, type: !9377, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17867 = !DILocalVariable(name: "mstb", arg: 1, scope: !17866, file: !3, line: 1484, type: !391)
!17868 = !DILocation(line: 1484, column: 54, scope: !17866)
!17869 = !DILocation(line: 1486, column: 12, scope: !17866)
!17870 = !DILocation(line: 1486, column: 18, scope: !17866)
!17871 = !DILocation(line: 1486, column: 2, scope: !17866)
!17872 = !DILocation(line: 1487, column: 2, scope: !17866)
!17873 = !DILocation(line: 1488, column: 1, scope: !17866)
!17874 = distinct !DISubprogram(name: "build_enum_path_resources", scope: !3, file: !3, line: 1159, type: !17875, scopeLine: 1161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17875 = !DISubroutineType(types: !17876)
!17876 = !{!115, !6003, !115}
!17877 = !DILocalVariable(name: "msg", arg: 1, scope: !17874, file: !3, line: 1159, type: !6003)
!17878 = !DILocation(line: 1159, column: 69, scope: !17874)
!17879 = !DILocalVariable(name: "port_num", arg: 2, scope: !17874, file: !3, line: 1160, type: !115)
!17880 = !DILocation(line: 1160, column: 14, scope: !17874)
!17881 = !DILocalVariable(name: "req", scope: !17874, file: !3, line: 1162, type: !6128)
!17882 = !DILocation(line: 1162, column: 38, scope: !17874)
!17883 = !DILocation(line: 1164, column: 6, scope: !17874)
!17884 = !DILocation(line: 1164, column: 15, scope: !17874)
!17885 = !DILocation(line: 1165, column: 31, scope: !17874)
!17886 = !DILocation(line: 1165, column: 6, scope: !17874)
!17887 = !DILocation(line: 1165, column: 8, scope: !17874)
!17888 = !DILocation(line: 1165, column: 17, scope: !17874)
!17889 = !DILocation(line: 1165, column: 29, scope: !17874)
!17890 = !DILocation(line: 1166, column: 35, scope: !17874)
!17891 = !DILocation(line: 1166, column: 2, scope: !17874)
!17892 = !DILocation(line: 1167, column: 2, scope: !17874)
!17893 = !DILocation(line: 1167, column: 7, scope: !17874)
!17894 = !DILocation(line: 1167, column: 16, scope: !17874)
!17895 = !DILocation(line: 1168, column: 2, scope: !17874)
!17896 = distinct !DISubprogram(name: "drm_dp_mst_unregister_i2c_bus", scope: !3, file: !3, line: 5687, type: !7423, scopeLine: 5688, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17897 = !DILocalVariable(name: "port", arg: 1, scope: !17896, file: !3, line: 5687, type: !345)
!17898 = !DILocation(line: 5687, column: 67, scope: !17896)
!17899 = !DILocation(line: 5689, column: 19, scope: !17896)
!17900 = !DILocation(line: 5689, column: 25, scope: !17896)
!17901 = !DILocation(line: 5689, column: 29, scope: !17896)
!17902 = !DILocation(line: 5689, column: 2, scope: !17896)
!17903 = !DILocation(line: 5690, column: 1, scope: !17896)
!17904 = distinct !DISubprogram(name: "drm_dp_mst_register_i2c_bus", scope: !3, file: !3, line: 5662, type: !13023, scopeLine: 5663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17905 = !DILocalVariable(name: "port", arg: 1, scope: !17904, file: !3, line: 5662, type: !345)
!17906 = !DILocation(line: 5662, column: 64, scope: !17904)
!17907 = !DILocalVariable(name: "aux", scope: !17904, file: !3, line: 5664, type: !5728)
!17908 = !DILocation(line: 5664, column: 21, scope: !17904)
!17909 = !DILocation(line: 5664, column: 28, scope: !17904)
!17910 = !DILocation(line: 5664, column: 34, scope: !17904)
!17911 = !DILocalVariable(name: "parent_dev", scope: !17904, file: !3, line: 5665, type: !3379)
!17912 = !DILocation(line: 5665, column: 17, scope: !17904)
!17913 = !DILocation(line: 5665, column: 30, scope: !17904)
!17914 = !DILocation(line: 5665, column: 36, scope: !17904)
!17915 = !DILocation(line: 5665, column: 41, scope: !17904)
!17916 = !DILocation(line: 5665, column: 46, scope: !17904)
!17917 = !DILocation(line: 5667, column: 2, scope: !17904)
!17918 = !DILocation(line: 5667, column: 7, scope: !17904)
!17919 = !DILocation(line: 5667, column: 11, scope: !17904)
!17920 = !DILocation(line: 5667, column: 16, scope: !17904)
!17921 = !DILocation(line: 5668, column: 23, scope: !17904)
!17922 = !DILocation(line: 5668, column: 2, scope: !17904)
!17923 = !DILocation(line: 5668, column: 7, scope: !17904)
!17924 = !DILocation(line: 5668, column: 11, scope: !17904)
!17925 = !DILocation(line: 5668, column: 21, scope: !17904)
!17926 = !DILocation(line: 5669, column: 2, scope: !17904)
!17927 = !DILocation(line: 5669, column: 7, scope: !17904)
!17928 = !DILocation(line: 5669, column: 11, scope: !17904)
!17929 = !DILocation(line: 5669, column: 19, scope: !17904)
!17930 = !DILocation(line: 5671, column: 2, scope: !17904)
!17931 = !DILocation(line: 5671, column: 7, scope: !17904)
!17932 = !DILocation(line: 5671, column: 11, scope: !17904)
!17933 = !DILocation(line: 5671, column: 17, scope: !17904)
!17934 = !DILocation(line: 5672, column: 2, scope: !17904)
!17935 = !DILocation(line: 5672, column: 7, scope: !17904)
!17936 = !DILocation(line: 5672, column: 11, scope: !17904)
!17937 = !DILocation(line: 5672, column: 17, scope: !17904)
!17938 = !DILocation(line: 5674, column: 24, scope: !17904)
!17939 = !DILocation(line: 5674, column: 2, scope: !17904)
!17940 = !DILocation(line: 5674, column: 7, scope: !17904)
!17941 = !DILocation(line: 5674, column: 11, scope: !17904)
!17942 = !DILocation(line: 5674, column: 15, scope: !17904)
!17943 = !DILocation(line: 5674, column: 22, scope: !17904)
!17944 = !DILocation(line: 5675, column: 25, scope: !17904)
!17945 = !DILocation(line: 5675, column: 37, scope: !17904)
!17946 = !DILocation(line: 5675, column: 2, scope: !17904)
!17947 = !DILocation(line: 5675, column: 7, scope: !17904)
!17948 = !DILocation(line: 5675, column: 11, scope: !17904)
!17949 = !DILocation(line: 5675, column: 15, scope: !17904)
!17950 = !DILocation(line: 5675, column: 23, scope: !17904)
!17951 = !DILocation(line: 5677, column: 10, scope: !17904)
!17952 = !DILocation(line: 5677, column: 15, scope: !17904)
!17953 = !DILocation(line: 5677, column: 19, scope: !17904)
!17954 = !DILocation(line: 5677, column: 25, scope: !17904)
!17955 = !DILocation(line: 5677, column: 30, scope: !17904)
!17956 = !DILocation(line: 5677, column: 37, scope: !17904)
!17957 = !DILocation(line: 5677, column: 42, scope: !17904)
!17958 = !DILocation(line: 5677, column: 58, scope: !17904)
!17959 = !DILocation(line: 5677, column: 49, scope: !17904)
!17960 = !DILocation(line: 5677, column: 2, scope: !17904)
!17961 = !DILocation(line: 5680, column: 26, scope: !17904)
!17962 = !DILocation(line: 5680, column: 31, scope: !17904)
!17963 = !DILocation(line: 5680, column: 9, scope: !17904)
!17964 = !DILocation(line: 5680, column: 2, scope: !17904)
!17965 = distinct !DISubprogram(name: "drm_dp_calculate_rad", scope: !3, file: !3, line: 2051, type: !17966, scopeLine: 2053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!17966 = !DISubroutineType(types: !17967)
!17967 = !{!364, !345, !6180}
!17968 = !DILocalVariable(name: "port", arg: 1, scope: !17965, file: !3, line: 2051, type: !345)
!17969 = !DILocation(line: 2051, column: 56, scope: !17965)
!17970 = !DILocalVariable(name: "rad", arg: 2, scope: !17965, file: !3, line: 2052, type: !6180)
!17971 = !DILocation(line: 2052, column: 10, scope: !17965)
!17972 = !DILocalVariable(name: "parent_lct", scope: !17965, file: !3, line: 2054, type: !115)
!17973 = !DILocation(line: 2054, column: 6, scope: !17965)
!17974 = !DILocation(line: 2054, column: 19, scope: !17965)
!17975 = !DILocation(line: 2054, column: 25, scope: !17965)
!17976 = !DILocation(line: 2054, column: 33, scope: !17965)
!17977 = !DILocalVariable(name: "shift", scope: !17965, file: !3, line: 2055, type: !115)
!17978 = !DILocation(line: 2055, column: 6, scope: !17965)
!17979 = !DILocalVariable(name: "idx", scope: !17965, file: !3, line: 2056, type: !115)
!17980 = !DILocation(line: 2056, column: 6, scope: !17965)
!17981 = !DILocation(line: 2056, column: 13, scope: !17965)
!17982 = !DILocation(line: 2056, column: 24, scope: !17965)
!17983 = !DILocation(line: 2056, column: 29, scope: !17965)
!17984 = !DILocation(line: 2058, column: 6, scope: !17985)
!17985 = distinct !DILexicalBlock(scope: !17965, file: !3, line: 2058, column: 6)
!17986 = !DILocation(line: 2058, column: 17, scope: !17985)
!17987 = !DILocation(line: 2058, column: 6, scope: !17965)
!17988 = !DILocation(line: 2059, column: 10, scope: !17989)
!17989 = distinct !DILexicalBlock(scope: !17985, file: !3, line: 2058, column: 22)
!17990 = !DILocation(line: 2059, column: 15, scope: !17989)
!17991 = !DILocation(line: 2059, column: 21, scope: !17989)
!17992 = !DILocation(line: 2059, column: 29, scope: !17989)
!17993 = !DILocation(line: 2059, column: 3, scope: !17989)
!17994 = !DILocation(line: 2059, column: 34, scope: !17989)
!17995 = !DILocation(line: 2059, column: 38, scope: !17989)
!17996 = !DILocation(line: 2060, column: 12, scope: !17989)
!17997 = !DILocation(line: 2060, column: 23, scope: !17989)
!17998 = !DILocation(line: 2060, column: 11, scope: !17989)
!17999 = !DILocation(line: 2060, column: 9, scope: !17989)
!18000 = !DILocation(line: 2061, column: 2, scope: !17989)
!18001 = !DILocation(line: 2062, column: 3, scope: !17985)
!18002 = !DILocation(line: 2062, column: 10, scope: !17985)
!18003 = !DILocation(line: 2064, column: 14, scope: !17965)
!18004 = !DILocation(line: 2064, column: 20, scope: !17965)
!18005 = !DILocation(line: 2064, column: 32, scope: !17965)
!18006 = !DILocation(line: 2064, column: 29, scope: !17965)
!18007 = !DILocation(line: 2064, column: 2, scope: !17965)
!18008 = !DILocation(line: 2064, column: 6, scope: !17965)
!18009 = !DILocation(line: 2064, column: 11, scope: !17965)
!18010 = !DILocation(line: 2065, column: 9, scope: !17965)
!18011 = !DILocation(line: 2065, column: 20, scope: !17965)
!18012 = !DILocation(line: 2065, column: 2, scope: !17965)
!18013 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !18014, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18014 = !DISubroutineType(types: !18015)
!18015 = !{!844, !3987}
!18016 = !DILocalVariable(name: "dev", arg: 1, scope: !18013, file: !73, line: 609, type: !3987)
!18017 = !DILocation(line: 609, column: 57, scope: !18013)
!18018 = !DILocation(line: 612, column: 6, scope: !18019)
!18019 = distinct !DILexicalBlock(scope: !18013, file: !73, line: 612, column: 6)
!18020 = !DILocation(line: 612, column: 11, scope: !18019)
!18021 = !DILocation(line: 612, column: 6, scope: !18013)
!18022 = !DILocation(line: 613, column: 10, scope: !18019)
!18023 = !DILocation(line: 613, column: 15, scope: !18019)
!18024 = !DILocation(line: 613, column: 3, scope: !18019)
!18025 = !DILocation(line: 615, column: 23, scope: !18013)
!18026 = !DILocation(line: 615, column: 28, scope: !18013)
!18027 = !DILocation(line: 615, column: 9, scope: !18013)
!18028 = !DILocation(line: 615, column: 2, scope: !18013)
!18029 = !DILocation(line: 616, column: 1, scope: !18013)
!18030 = distinct !DISubprogram(name: "drm_dp_mst_i2c_xfer", scope: !3, file: !3, line: 5616, type: !5248, scopeLine: 5618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18031 = !DILocalVariable(name: "adapter", arg: 1, scope: !18030, file: !3, line: 5616, type: !5235)
!18032 = !DILocation(line: 5616, column: 52, scope: !18030)
!18033 = !DILocalVariable(name: "msgs", arg: 2, scope: !18030, file: !3, line: 5617, type: !5250)
!18034 = !DILocation(line: 5617, column: 27, scope: !18030)
!18035 = !DILocalVariable(name: "num", arg: 3, scope: !18030, file: !3, line: 5617, type: !115)
!18036 = !DILocation(line: 5617, column: 37, scope: !18030)
!18037 = !DILocalVariable(name: "aux", scope: !18030, file: !3, line: 5619, type: !5728)
!18038 = !DILocation(line: 5619, column: 21, scope: !18030)
!18039 = !DILocation(line: 5619, column: 27, scope: !18030)
!18040 = !DILocation(line: 5619, column: 36, scope: !18030)
!18041 = !DILocalVariable(name: "port", scope: !18030, file: !3, line: 5620, type: !345)
!18042 = !DILocation(line: 5620, column: 26, scope: !18030)
!18043 = !DILocalVariable(name: "__mptr", scope: !18044, file: !3, line: 5621, type: !344)
!18044 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 5621, column: 3)
!18045 = !DILocation(line: 5621, column: 3, scope: !18044)
!18046 = !DILocation(line: 5621, column: 3, scope: !18047)
!18047 = distinct !DILexicalBlock(scope: !18044, file: !3, line: 5621, column: 3)
!18048 = !DILocalVariable(name: "mstb", scope: !18030, file: !3, line: 5622, type: !391)
!18049 = !DILocation(line: 5622, column: 28, scope: !18030)
!18050 = !DILocalVariable(name: "mgr", scope: !18030, file: !3, line: 5623, type: !406)
!18051 = !DILocation(line: 5623, column: 34, scope: !18030)
!18052 = !DILocation(line: 5623, column: 40, scope: !18030)
!18053 = !DILocation(line: 5623, column: 46, scope: !18030)
!18054 = !DILocalVariable(name: "ret", scope: !18030, file: !3, line: 5624, type: !115)
!18055 = !DILocation(line: 5624, column: 6, scope: !18030)
!18056 = !DILocation(line: 5626, column: 48, scope: !18030)
!18057 = !DILocation(line: 5626, column: 53, scope: !18030)
!18058 = !DILocation(line: 5626, column: 59, scope: !18030)
!18059 = !DILocation(line: 5626, column: 9, scope: !18030)
!18060 = !DILocation(line: 5626, column: 7, scope: !18030)
!18061 = !DILocation(line: 5627, column: 7, scope: !18062)
!18062 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 5627, column: 6)
!18063 = !DILocation(line: 5627, column: 6, scope: !18030)
!18064 = !DILocation(line: 5628, column: 3, scope: !18062)
!18065 = !DILocation(line: 5630, column: 25, scope: !18066)
!18066 = distinct !DILexicalBlock(scope: !18030, file: !3, line: 5630, column: 6)
!18067 = !DILocation(line: 5630, column: 31, scope: !18066)
!18068 = !DILocation(line: 5630, column: 6, scope: !18066)
!18069 = !DILocation(line: 5630, column: 6, scope: !18030)
!18070 = !DILocation(line: 5631, column: 29, scope: !18071)
!18071 = distinct !DILexicalBlock(scope: !18066, file: !3, line: 5630, column: 37)
!18072 = !DILocation(line: 5631, column: 35, scope: !18071)
!18073 = !DILocation(line: 5631, column: 41, scope: !18071)
!18074 = !DILocation(line: 5631, column: 47, scope: !18071)
!18075 = !DILocation(line: 5631, column: 9, scope: !18071)
!18076 = !DILocation(line: 5631, column: 7, scope: !18071)
!18077 = !DILocation(line: 5632, column: 2, scope: !18071)
!18078 = !DILocation(line: 5632, column: 33, scope: !18079)
!18079 = distinct !DILexicalBlock(scope: !18066, file: !3, line: 5632, column: 13)
!18080 = !DILocation(line: 5632, column: 39, scope: !18079)
!18081 = !DILocation(line: 5632, column: 13, scope: !18079)
!18082 = !DILocation(line: 5632, column: 13, scope: !18066)
!18083 = !DILocation(line: 5633, column: 30, scope: !18084)
!18084 = distinct !DILexicalBlock(scope: !18079, file: !3, line: 5632, column: 45)
!18085 = !DILocation(line: 5633, column: 36, scope: !18084)
!18086 = !DILocation(line: 5633, column: 42, scope: !18084)
!18087 = !DILocation(line: 5633, column: 48, scope: !18084)
!18088 = !DILocation(line: 5633, column: 9, scope: !18084)
!18089 = !DILocation(line: 5633, column: 7, scope: !18084)
!18090 = !DILocation(line: 5634, column: 2, scope: !18084)
!18091 = !DILocation(line: 5635, column: 3, scope: !18092)
!18092 = distinct !DILexicalBlock(scope: !18079, file: !3, line: 5634, column: 9)
!18093 = !DILocation(line: 5636, column: 7, scope: !18092)
!18094 = !DILocation(line: 5639, column: 31, scope: !18030)
!18095 = !DILocation(line: 5639, column: 2, scope: !18030)
!18096 = !DILocation(line: 5640, column: 9, scope: !18030)
!18097 = !DILocation(line: 5640, column: 2, scope: !18030)
!18098 = !DILocation(line: 5641, column: 1, scope: !18030)
!18099 = distinct !DISubprogram(name: "drm_dp_mst_i2c_functionality", scope: !3, file: !3, line: 5643, type: !5276, scopeLine: 5644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18100 = !DILocalVariable(name: "adapter", arg: 1, scope: !18099, file: !3, line: 5643, type: !5235)
!18101 = !DILocation(line: 5643, column: 61, scope: !18099)
!18102 = !DILocation(line: 5645, column: 2, scope: !18099)
!18103 = distinct !DISubprogram(name: "remote_i2c_read_ok", scope: !3, file: !3, line: 5487, type: !18104, scopeLine: 5488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18104 = !DISubroutineType(types: !18105)
!18105 = !{!370, !18106, !115}
!18106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18107, size: 64)
!18107 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5251)
!18108 = !DILocalVariable(name: "msgs", arg: 1, scope: !18103, file: !3, line: 5487, type: !18106)
!18109 = !DILocation(line: 5487, column: 53, scope: !18103)
!18110 = !DILocalVariable(name: "num", arg: 2, scope: !18103, file: !3, line: 5487, type: !115)
!18111 = !DILocation(line: 5487, column: 65, scope: !18103)
!18112 = !DILocalVariable(name: "i", scope: !18103, file: !3, line: 5489, type: !115)
!18113 = !DILocation(line: 5489, column: 6, scope: !18103)
!18114 = !DILocation(line: 5491, column: 6, scope: !18115)
!18115 = distinct !DILexicalBlock(scope: !18103, file: !3, line: 5491, column: 6)
!18116 = !DILocation(line: 5491, column: 10, scope: !18115)
!18117 = !DILocation(line: 5491, column: 14, scope: !18115)
!18118 = !DILocation(line: 5491, column: 6, scope: !18103)
!18119 = !DILocation(line: 5492, column: 3, scope: !18115)
!18120 = !DILocation(line: 5494, column: 9, scope: !18121)
!18121 = distinct !DILexicalBlock(scope: !18103, file: !3, line: 5494, column: 2)
!18122 = !DILocation(line: 5494, column: 7, scope: !18121)
!18123 = !DILocation(line: 5494, column: 14, scope: !18124)
!18124 = distinct !DILexicalBlock(scope: !18121, file: !3, line: 5494, column: 2)
!18125 = !DILocation(line: 5494, column: 18, scope: !18124)
!18126 = !DILocation(line: 5494, column: 22, scope: !18124)
!18127 = !DILocation(line: 5494, column: 16, scope: !18124)
!18128 = !DILocation(line: 5494, column: 2, scope: !18121)
!18129 = !DILocation(line: 5495, column: 7, scope: !18130)
!18130 = distinct !DILexicalBlock(scope: !18131, file: !3, line: 5495, column: 7)
!18131 = distinct !DILexicalBlock(scope: !18124, file: !3, line: 5494, column: 32)
!18132 = !DILocation(line: 5495, column: 12, scope: !18130)
!18133 = !DILocation(line: 5495, column: 15, scope: !18130)
!18134 = !DILocation(line: 5495, column: 21, scope: !18130)
!18135 = !DILocation(line: 5495, column: 32, scope: !18130)
!18136 = !DILocation(line: 5496, column: 7, scope: !18130)
!18137 = !DILocation(line: 5496, column: 12, scope: !18130)
!18138 = !DILocation(line: 5496, column: 15, scope: !18130)
!18139 = !DILocation(line: 5496, column: 19, scope: !18130)
!18140 = !DILocation(line: 5495, column: 7, scope: !18131)
!18141 = !DILocation(line: 5497, column: 4, scope: !18130)
!18142 = !DILocation(line: 5498, column: 2, scope: !18131)
!18143 = !DILocation(line: 5494, column: 28, scope: !18124)
!18144 = !DILocation(line: 5494, column: 2, scope: !18124)
!18145 = distinct !{!18145, !18128, !18146}
!18146 = !DILocation(line: 5498, column: 2, scope: !18121)
!18147 = !DILocation(line: 5500, column: 9, scope: !18103)
!18148 = !DILocation(line: 5500, column: 14, scope: !18103)
!18149 = !DILocation(line: 5500, column: 18, scope: !18103)
!18150 = !DILocation(line: 5500, column: 23, scope: !18103)
!18151 = !DILocation(line: 5500, column: 29, scope: !18103)
!18152 = !DILocation(line: 5500, column: 40, scope: !18103)
!18153 = !DILocation(line: 5501, column: 3, scope: !18103)
!18154 = !DILocation(line: 5501, column: 8, scope: !18103)
!18155 = !DILocation(line: 5501, column: 12, scope: !18103)
!18156 = !DILocation(line: 5501, column: 17, scope: !18103)
!18157 = !DILocation(line: 5501, column: 21, scope: !18103)
!18158 = !DILocation(line: 0, scope: !18103)
!18159 = !DILocation(line: 5500, column: 2, scope: !18103)
!18160 = !DILocation(line: 5502, column: 1, scope: !18103)
!18161 = distinct !DISubprogram(name: "drm_dp_mst_i2c_read", scope: !3, file: !3, line: 5517, type: !18162, scopeLine: 5520, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18162 = !DISubroutineType(types: !18163)
!18163 = !{!115, !391, !345, !5250, !115}
!18164 = !DILocalVariable(name: "mstb", arg: 1, scope: !18161, file: !3, line: 5517, type: !391)
!18165 = !DILocation(line: 5517, column: 58, scope: !18161)
!18166 = !DILocalVariable(name: "port", arg: 2, scope: !18161, file: !3, line: 5518, type: !345)
!18167 = !DILocation(line: 5518, column: 35, scope: !18161)
!18168 = !DILocalVariable(name: "msgs", arg: 3, scope: !18161, file: !3, line: 5519, type: !5250)
!18169 = !DILocation(line: 5519, column: 27, scope: !18161)
!18170 = !DILocalVariable(name: "num", arg: 4, scope: !18161, file: !3, line: 5519, type: !115)
!18171 = !DILocation(line: 5519, column: 37, scope: !18161)
!18172 = !DILocalVariable(name: "mgr", scope: !18161, file: !3, line: 5521, type: !406)
!18173 = !DILocation(line: 5521, column: 34, scope: !18161)
!18174 = !DILocation(line: 5521, column: 40, scope: !18161)
!18175 = !DILocation(line: 5521, column: 46, scope: !18161)
!18176 = !DILocalVariable(name: "i", scope: !18161, file: !3, line: 5522, type: !7)
!18177 = !DILocation(line: 5522, column: 15, scope: !18161)
!18178 = !DILocalVariable(name: "msg", scope: !18161, file: !3, line: 5523, type: !6128)
!18179 = !DILocation(line: 5523, column: 38, scope: !18161)
!18180 = !DILocalVariable(name: "txmsg", scope: !18161, file: !3, line: 5524, type: !6003)
!18181 = !DILocation(line: 5524, column: 33, scope: !18161)
!18182 = !DILocalVariable(name: "ret", scope: !18161, file: !3, line: 5525, type: !115)
!18183 = !DILocation(line: 5525, column: 6, scope: !18161)
!18184 = !DILocation(line: 5527, column: 2, scope: !18161)
!18185 = !DILocation(line: 5528, column: 6, scope: !18161)
!18186 = !DILocation(line: 5528, column: 15, scope: !18161)
!18187 = !DILocation(line: 5529, column: 36, scope: !18161)
!18188 = !DILocation(line: 5529, column: 40, scope: !18161)
!18189 = !DILocation(line: 5529, column: 6, scope: !18161)
!18190 = !DILocation(line: 5529, column: 8, scope: !18161)
!18191 = !DILocation(line: 5529, column: 17, scope: !18161)
!18192 = !DILocation(line: 5529, column: 34, scope: !18161)
!18193 = !DILocation(line: 5530, column: 31, scope: !18161)
!18194 = !DILocation(line: 5530, column: 37, scope: !18161)
!18195 = !DILocation(line: 5530, column: 6, scope: !18161)
!18196 = !DILocation(line: 5530, column: 8, scope: !18161)
!18197 = !DILocation(line: 5530, column: 17, scope: !18161)
!18198 = !DILocation(line: 5530, column: 29, scope: !18161)
!18199 = !DILocation(line: 5531, column: 9, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !18161, file: !3, line: 5531, column: 2)
!18201 = !DILocation(line: 5531, column: 7, scope: !18200)
!18202 = !DILocation(line: 5531, column: 14, scope: !18203)
!18203 = distinct !DILexicalBlock(scope: !18200, file: !3, line: 5531, column: 2)
!18204 = !DILocation(line: 5531, column: 18, scope: !18203)
!18205 = !DILocation(line: 5531, column: 22, scope: !18203)
!18206 = !DILocation(line: 5531, column: 16, scope: !18203)
!18207 = !DILocation(line: 5531, column: 2, scope: !18200)
!18208 = !DILocation(line: 5532, column: 47, scope: !18209)
!18209 = distinct !DILexicalBlock(scope: !18203, file: !3, line: 5531, column: 32)
!18210 = !DILocation(line: 5532, column: 52, scope: !18209)
!18211 = !DILocation(line: 5532, column: 55, scope: !18209)
!18212 = !DILocation(line: 5532, column: 7, scope: !18209)
!18213 = !DILocation(line: 5532, column: 9, scope: !18209)
!18214 = !DILocation(line: 5532, column: 18, scope: !18209)
!18215 = !DILocation(line: 5532, column: 31, scope: !18209)
!18216 = !DILocation(line: 5532, column: 3, scope: !18209)
!18217 = !DILocation(line: 5532, column: 34, scope: !18209)
!18218 = !DILocation(line: 5532, column: 45, scope: !18209)
!18219 = !DILocation(line: 5533, column: 46, scope: !18209)
!18220 = !DILocation(line: 5533, column: 51, scope: !18209)
!18221 = !DILocation(line: 5533, column: 54, scope: !18209)
!18222 = !DILocation(line: 5533, column: 7, scope: !18209)
!18223 = !DILocation(line: 5533, column: 9, scope: !18209)
!18224 = !DILocation(line: 5533, column: 18, scope: !18209)
!18225 = !DILocation(line: 5533, column: 31, scope: !18209)
!18226 = !DILocation(line: 5533, column: 3, scope: !18209)
!18227 = !DILocation(line: 5533, column: 34, scope: !18209)
!18228 = !DILocation(line: 5533, column: 44, scope: !18209)
!18229 = !DILocation(line: 5534, column: 42, scope: !18209)
!18230 = !DILocation(line: 5534, column: 47, scope: !18209)
!18231 = !DILocation(line: 5534, column: 50, scope: !18209)
!18232 = !DILocation(line: 5534, column: 7, scope: !18209)
!18233 = !DILocation(line: 5534, column: 9, scope: !18209)
!18234 = !DILocation(line: 5534, column: 18, scope: !18209)
!18235 = !DILocation(line: 5534, column: 31, scope: !18209)
!18236 = !DILocation(line: 5534, column: 3, scope: !18209)
!18237 = !DILocation(line: 5534, column: 34, scope: !18209)
!18238 = !DILocation(line: 5534, column: 40, scope: !18209)
!18239 = !DILocation(line: 5535, column: 50, scope: !18209)
!18240 = !DILocation(line: 5535, column: 55, scope: !18209)
!18241 = !DILocation(line: 5535, column: 58, scope: !18209)
!18242 = !DILocation(line: 5535, column: 64, scope: !18209)
!18243 = !DILocation(line: 5535, column: 48, scope: !18209)
!18244 = !DILocation(line: 5535, column: 7, scope: !18209)
!18245 = !DILocation(line: 5535, column: 9, scope: !18209)
!18246 = !DILocation(line: 5535, column: 18, scope: !18209)
!18247 = !DILocation(line: 5535, column: 31, scope: !18209)
!18248 = !DILocation(line: 5535, column: 3, scope: !18209)
!18249 = !DILocation(line: 5535, column: 34, scope: !18209)
!18250 = !DILocation(line: 5535, column: 46, scope: !18209)
!18251 = !DILocation(line: 5536, column: 2, scope: !18209)
!18252 = !DILocation(line: 5531, column: 28, scope: !18203)
!18253 = !DILocation(line: 5531, column: 2, scope: !18203)
!18254 = distinct !{!18254, !18207, !18255}
!18255 = !DILocation(line: 5536, column: 2, scope: !18200)
!18256 = !DILocation(line: 5537, column: 38, scope: !18161)
!18257 = !DILocation(line: 5537, column: 43, scope: !18161)
!18258 = !DILocation(line: 5537, column: 47, scope: !18161)
!18259 = !DILocation(line: 5537, column: 52, scope: !18161)
!18260 = !DILocation(line: 5537, column: 6, scope: !18161)
!18261 = !DILocation(line: 5537, column: 8, scope: !18161)
!18262 = !DILocation(line: 5537, column: 17, scope: !18161)
!18263 = !DILocation(line: 5537, column: 36, scope: !18161)
!18264 = !DILocation(line: 5538, column: 34, scope: !18161)
!18265 = !DILocation(line: 5538, column: 39, scope: !18161)
!18266 = !DILocation(line: 5538, column: 43, scope: !18161)
!18267 = !DILocation(line: 5538, column: 48, scope: !18161)
!18268 = !DILocation(line: 5538, column: 6, scope: !18161)
!18269 = !DILocation(line: 5538, column: 8, scope: !18161)
!18270 = !DILocation(line: 5538, column: 17, scope: !18161)
!18271 = !DILocation(line: 5538, column: 32, scope: !18161)
!18272 = !DILocation(line: 5540, column: 10, scope: !18161)
!18273 = !DILocation(line: 5540, column: 8, scope: !18161)
!18274 = !DILocation(line: 5541, column: 7, scope: !18275)
!18275 = distinct !DILexicalBlock(scope: !18161, file: !3, line: 5541, column: 6)
!18276 = !DILocation(line: 5541, column: 6, scope: !18161)
!18277 = !DILocation(line: 5542, column: 7, scope: !18278)
!18278 = distinct !DILexicalBlock(scope: !18275, file: !3, line: 5541, column: 14)
!18279 = !DILocation(line: 5543, column: 3, scope: !18278)
!18280 = !DILocation(line: 5546, column: 15, scope: !18161)
!18281 = !DILocation(line: 5546, column: 2, scope: !18161)
!18282 = !DILocation(line: 5546, column: 9, scope: !18161)
!18283 = !DILocation(line: 5546, column: 13, scope: !18161)
!18284 = !DILocation(line: 5547, column: 35, scope: !18161)
!18285 = !DILocation(line: 5547, column: 2, scope: !18161)
!18286 = !DILocation(line: 5549, column: 23, scope: !18161)
!18287 = !DILocation(line: 5549, column: 28, scope: !18161)
!18288 = !DILocation(line: 5549, column: 2, scope: !18161)
!18289 = !DILocation(line: 5551, column: 33, scope: !18161)
!18290 = !DILocation(line: 5551, column: 39, scope: !18161)
!18291 = !DILocation(line: 5551, column: 8, scope: !18161)
!18292 = !DILocation(line: 5551, column: 6, scope: !18161)
!18293 = !DILocation(line: 5552, column: 6, scope: !18294)
!18294 = distinct !DILexicalBlock(scope: !18161, file: !3, line: 5552, column: 6)
!18295 = !DILocation(line: 5552, column: 10, scope: !18294)
!18296 = !DILocation(line: 5552, column: 6, scope: !18161)
!18297 = !DILocation(line: 5554, column: 7, scope: !18298)
!18298 = distinct !DILexicalBlock(scope: !18299, file: !3, line: 5554, column: 7)
!18299 = distinct !DILexicalBlock(scope: !18294, file: !3, line: 5552, column: 15)
!18300 = !DILocation(line: 5554, column: 14, scope: !18298)
!18301 = !DILocation(line: 5554, column: 20, scope: !18298)
!18302 = !DILocation(line: 5554, column: 31, scope: !18298)
!18303 = !DILocation(line: 5554, column: 7, scope: !18299)
!18304 = !DILocation(line: 5555, column: 8, scope: !18305)
!18305 = distinct !DILexicalBlock(scope: !18298, file: !3, line: 5554, column: 57)
!18306 = !DILocation(line: 5556, column: 4, scope: !18305)
!18307 = !DILocation(line: 5558, column: 7, scope: !18308)
!18308 = distinct !DILexicalBlock(scope: !18299, file: !3, line: 5558, column: 7)
!18309 = !DILocation(line: 5558, column: 14, scope: !18308)
!18310 = !DILocation(line: 5558, column: 20, scope: !18308)
!18311 = !DILocation(line: 5558, column: 22, scope: !18308)
!18312 = !DILocation(line: 5558, column: 42, scope: !18308)
!18313 = !DILocation(line: 5558, column: 55, scope: !18308)
!18314 = !DILocation(line: 5558, column: 60, scope: !18308)
!18315 = !DILocation(line: 5558, column: 64, scope: !18308)
!18316 = !DILocation(line: 5558, column: 69, scope: !18308)
!18317 = !DILocation(line: 5558, column: 52, scope: !18308)
!18318 = !DILocation(line: 5558, column: 7, scope: !18299)
!18319 = !DILocation(line: 5559, column: 8, scope: !18320)
!18320 = distinct !DILexicalBlock(scope: !18308, file: !3, line: 5558, column: 74)
!18321 = !DILocation(line: 5560, column: 4, scope: !18320)
!18322 = !DILocation(line: 5562, column: 10, scope: !18299)
!18323 = !DILocation(line: 5562, column: 15, scope: !18299)
!18324 = !DILocation(line: 5562, column: 19, scope: !18299)
!18325 = !DILocation(line: 5562, column: 24, scope: !18299)
!18326 = !DILocation(line: 5562, column: 29, scope: !18299)
!18327 = !DILocation(line: 5562, column: 36, scope: !18299)
!18328 = !DILocation(line: 5562, column: 42, scope: !18299)
!18329 = !DILocation(line: 5562, column: 44, scope: !18299)
!18330 = !DILocation(line: 5562, column: 64, scope: !18299)
!18331 = !DILocation(line: 5562, column: 3, scope: !18299)
!18332 = !DILocation(line: 5562, column: 71, scope: !18299)
!18333 = !DILocation(line: 5562, column: 76, scope: !18299)
!18334 = !DILocation(line: 5562, column: 80, scope: !18299)
!18335 = !DILocation(line: 5562, column: 85, scope: !18299)
!18336 = !DILocation(line: 5563, column: 9, scope: !18299)
!18337 = !DILocation(line: 5563, column: 7, scope: !18299)
!18338 = !DILocation(line: 5564, column: 2, scope: !18299)
!18339 = !DILocation(line: 5552, column: 12, scope: !18294)
!18340 = !DILabel(scope: !18161, name: "out", file: !3, line: 5565)
!18341 = !DILocation(line: 5565, column: 1, scope: !18161)
!18342 = !DILocation(line: 5566, column: 8, scope: !18161)
!18343 = !DILocation(line: 5566, column: 2, scope: !18161)
!18344 = !DILocation(line: 5567, column: 9, scope: !18161)
!18345 = !DILocation(line: 5567, column: 2, scope: !18161)
!18346 = distinct !DISubprogram(name: "remote_i2c_write_ok", scope: !3, file: !3, line: 5504, type: !18104, scopeLine: 5505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18347 = !DILocalVariable(name: "msgs", arg: 1, scope: !18346, file: !3, line: 5504, type: !18106)
!18348 = !DILocation(line: 5504, column: 54, scope: !18346)
!18349 = !DILocalVariable(name: "num", arg: 2, scope: !18346, file: !3, line: 5504, type: !115)
!18350 = !DILocation(line: 5504, column: 66, scope: !18346)
!18351 = !DILocalVariable(name: "i", scope: !18346, file: !3, line: 5506, type: !115)
!18352 = !DILocation(line: 5506, column: 6, scope: !18346)
!18353 = !DILocation(line: 5508, column: 9, scope: !18354)
!18354 = distinct !DILexicalBlock(scope: !18346, file: !3, line: 5508, column: 2)
!18355 = !DILocation(line: 5508, column: 7, scope: !18354)
!18356 = !DILocation(line: 5508, column: 14, scope: !18357)
!18357 = distinct !DILexicalBlock(scope: !18354, file: !3, line: 5508, column: 2)
!18358 = !DILocation(line: 5508, column: 18, scope: !18357)
!18359 = !DILocation(line: 5508, column: 22, scope: !18357)
!18360 = !DILocation(line: 5508, column: 16, scope: !18357)
!18361 = !DILocation(line: 5508, column: 2, scope: !18354)
!18362 = !DILocation(line: 5509, column: 7, scope: !18363)
!18363 = distinct !DILexicalBlock(scope: !18364, file: !3, line: 5509, column: 7)
!18364 = distinct !DILexicalBlock(scope: !18357, file: !3, line: 5508, column: 32)
!18365 = !DILocation(line: 5509, column: 12, scope: !18363)
!18366 = !DILocation(line: 5509, column: 15, scope: !18363)
!18367 = !DILocation(line: 5509, column: 21, scope: !18363)
!18368 = !DILocation(line: 5509, column: 32, scope: !18363)
!18369 = !DILocation(line: 5509, column: 37, scope: !18363)
!18370 = !DILocation(line: 5509, column: 42, scope: !18363)
!18371 = !DILocation(line: 5509, column: 45, scope: !18363)
!18372 = !DILocation(line: 5509, column: 51, scope: !18363)
!18373 = !DILocation(line: 5509, column: 65, scope: !18363)
!18374 = !DILocation(line: 5510, column: 7, scope: !18363)
!18375 = !DILocation(line: 5510, column: 12, scope: !18363)
!18376 = !DILocation(line: 5510, column: 15, scope: !18363)
!18377 = !DILocation(line: 5510, column: 19, scope: !18363)
!18378 = !DILocation(line: 5509, column: 7, scope: !18364)
!18379 = !DILocation(line: 5511, column: 4, scope: !18363)
!18380 = !DILocation(line: 5512, column: 2, scope: !18364)
!18381 = !DILocation(line: 5508, column: 28, scope: !18357)
!18382 = !DILocation(line: 5508, column: 2, scope: !18357)
!18383 = distinct !{!18383, !18361, !18384}
!18384 = !DILocation(line: 5512, column: 2, scope: !18354)
!18385 = !DILocation(line: 5514, column: 11, scope: !18346)
!18386 = !DILocation(line: 5514, column: 16, scope: !18346)
!18387 = !DILocation(line: 5514, column: 20, scope: !18346)
!18388 = !DILocation(line: 5514, column: 25, scope: !18346)
!18389 = !DILocation(line: 5514, column: 31, scope: !18346)
!18390 = !DILocation(line: 5514, column: 43, scope: !18346)
!18391 = !DILocation(line: 5514, column: 46, scope: !18346)
!18392 = !DILocation(line: 5514, column: 51, scope: !18346)
!18393 = !DILocation(line: 5514, column: 55, scope: !18346)
!18394 = !DILocation(line: 5514, column: 60, scope: !18346)
!18395 = !DILocation(line: 5514, column: 64, scope: !18346)
!18396 = !DILocation(line: 0, scope: !18346)
!18397 = !DILocation(line: 5514, column: 2, scope: !18346)
!18398 = !DILocation(line: 5515, column: 1, scope: !18346)
!18399 = distinct !DISubprogram(name: "drm_dp_mst_i2c_write", scope: !3, file: !3, line: 5570, type: !18162, scopeLine: 5573, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18400 = !DILocalVariable(name: "mstb", arg: 1, scope: !18399, file: !3, line: 5570, type: !391)
!18401 = !DILocation(line: 5570, column: 59, scope: !18399)
!18402 = !DILocalVariable(name: "port", arg: 2, scope: !18399, file: !3, line: 5571, type: !345)
!18403 = !DILocation(line: 5571, column: 29, scope: !18399)
!18404 = !DILocalVariable(name: "msgs", arg: 3, scope: !18399, file: !3, line: 5572, type: !5250)
!18405 = !DILocation(line: 5572, column: 21, scope: !18399)
!18406 = !DILocalVariable(name: "num", arg: 4, scope: !18399, file: !3, line: 5572, type: !115)
!18407 = !DILocation(line: 5572, column: 31, scope: !18399)
!18408 = !DILocalVariable(name: "mgr", scope: !18399, file: !3, line: 5574, type: !406)
!18409 = !DILocation(line: 5574, column: 34, scope: !18399)
!18410 = !DILocation(line: 5574, column: 40, scope: !18399)
!18411 = !DILocation(line: 5574, column: 46, scope: !18399)
!18412 = !DILocalVariable(name: "i", scope: !18399, file: !3, line: 5575, type: !7)
!18413 = !DILocation(line: 5575, column: 15, scope: !18399)
!18414 = !DILocalVariable(name: "msg", scope: !18399, file: !3, line: 5576, type: !6128)
!18415 = !DILocation(line: 5576, column: 38, scope: !18399)
!18416 = !DILocalVariable(name: "txmsg", scope: !18399, file: !3, line: 5577, type: !6003)
!18417 = !DILocation(line: 5577, column: 33, scope: !18399)
!18418 = !DILocalVariable(name: "ret", scope: !18399, file: !3, line: 5578, type: !115)
!18419 = !DILocation(line: 5578, column: 6, scope: !18399)
!18420 = !DILocation(line: 5580, column: 10, scope: !18399)
!18421 = !DILocation(line: 5580, column: 8, scope: !18399)
!18422 = !DILocation(line: 5581, column: 7, scope: !18423)
!18423 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 5581, column: 6)
!18424 = !DILocation(line: 5581, column: 6, scope: !18399)
!18425 = !DILocation(line: 5582, column: 7, scope: !18426)
!18426 = distinct !DILexicalBlock(scope: !18423, file: !3, line: 5581, column: 14)
!18427 = !DILocation(line: 5583, column: 3, scope: !18426)
!18428 = !DILocation(line: 5585, column: 9, scope: !18429)
!18429 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 5585, column: 2)
!18430 = !DILocation(line: 5585, column: 7, scope: !18429)
!18431 = !DILocation(line: 5585, column: 14, scope: !18432)
!18432 = distinct !DILexicalBlock(scope: !18429, file: !3, line: 5585, column: 2)
!18433 = !DILocation(line: 5585, column: 18, scope: !18432)
!18434 = !DILocation(line: 5585, column: 16, scope: !18432)
!18435 = !DILocation(line: 5585, column: 2, scope: !18429)
!18436 = !DILocation(line: 5586, column: 3, scope: !18437)
!18437 = distinct !DILexicalBlock(scope: !18432, file: !3, line: 5585, column: 28)
!18438 = !DILocation(line: 5587, column: 7, scope: !18437)
!18439 = !DILocation(line: 5587, column: 16, scope: !18437)
!18440 = !DILocation(line: 5588, column: 33, scope: !18437)
!18441 = !DILocation(line: 5588, column: 39, scope: !18437)
!18442 = !DILocation(line: 5588, column: 7, scope: !18437)
!18443 = !DILocation(line: 5588, column: 9, scope: !18437)
!18444 = !DILocation(line: 5588, column: 19, scope: !18437)
!18445 = !DILocation(line: 5588, column: 31, scope: !18437)
!18446 = !DILocation(line: 5589, column: 41, scope: !18437)
!18447 = !DILocation(line: 5589, column: 46, scope: !18437)
!18448 = !DILocation(line: 5589, column: 49, scope: !18437)
!18449 = !DILocation(line: 5589, column: 7, scope: !18437)
!18450 = !DILocation(line: 5589, column: 9, scope: !18437)
!18451 = !DILocation(line: 5589, column: 19, scope: !18437)
!18452 = !DILocation(line: 5589, column: 39, scope: !18437)
!18453 = !DILocation(line: 5590, column: 31, scope: !18437)
!18454 = !DILocation(line: 5590, column: 36, scope: !18437)
!18455 = !DILocation(line: 5590, column: 39, scope: !18437)
!18456 = !DILocation(line: 5590, column: 7, scope: !18437)
!18457 = !DILocation(line: 5590, column: 9, scope: !18437)
!18458 = !DILocation(line: 5590, column: 19, scope: !18437)
!18459 = !DILocation(line: 5590, column: 29, scope: !18437)
!18460 = !DILocation(line: 5591, column: 27, scope: !18437)
!18461 = !DILocation(line: 5591, column: 32, scope: !18437)
!18462 = !DILocation(line: 5591, column: 35, scope: !18437)
!18463 = !DILocation(line: 5591, column: 7, scope: !18437)
!18464 = !DILocation(line: 5591, column: 9, scope: !18437)
!18465 = !DILocation(line: 5591, column: 19, scope: !18437)
!18466 = !DILocation(line: 5591, column: 25, scope: !18437)
!18467 = !DILocation(line: 5593, column: 10, scope: !18437)
!18468 = !DILocation(line: 5593, column: 3, scope: !18437)
!18469 = !DILocation(line: 5594, column: 16, scope: !18437)
!18470 = !DILocation(line: 5594, column: 3, scope: !18437)
!18471 = !DILocation(line: 5594, column: 10, scope: !18437)
!18472 = !DILocation(line: 5594, column: 14, scope: !18437)
!18473 = !DILocation(line: 5596, column: 36, scope: !18437)
!18474 = !DILocation(line: 5596, column: 3, scope: !18437)
!18475 = !DILocation(line: 5597, column: 24, scope: !18437)
!18476 = !DILocation(line: 5597, column: 29, scope: !18437)
!18477 = !DILocation(line: 5597, column: 3, scope: !18437)
!18478 = !DILocation(line: 5599, column: 34, scope: !18437)
!18479 = !DILocation(line: 5599, column: 40, scope: !18437)
!18480 = !DILocation(line: 5599, column: 9, scope: !18437)
!18481 = !DILocation(line: 5599, column: 7, scope: !18437)
!18482 = !DILocation(line: 5600, column: 7, scope: !18483)
!18483 = distinct !DILexicalBlock(scope: !18437, file: !3, line: 5600, column: 7)
!18484 = !DILocation(line: 5600, column: 11, scope: !18483)
!18485 = !DILocation(line: 5600, column: 7, scope: !18437)
!18486 = !DILocation(line: 5601, column: 8, scope: !18487)
!18487 = distinct !DILexicalBlock(scope: !18488, file: !3, line: 5601, column: 8)
!18488 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 5600, column: 16)
!18489 = !DILocation(line: 5601, column: 15, scope: !18487)
!18490 = !DILocation(line: 5601, column: 21, scope: !18487)
!18491 = !DILocation(line: 5601, column: 32, scope: !18487)
!18492 = !DILocation(line: 5601, column: 8, scope: !18488)
!18493 = !DILocation(line: 5602, column: 9, scope: !18494)
!18494 = distinct !DILexicalBlock(scope: !18487, file: !3, line: 5601, column: 58)
!18495 = !DILocation(line: 5603, column: 5, scope: !18494)
!18496 = !DILocation(line: 5605, column: 3, scope: !18488)
!18497 = !DILocation(line: 5606, column: 4, scope: !18498)
!18498 = distinct !DILexicalBlock(scope: !18483, file: !3, line: 5605, column: 10)
!18499 = !DILocation(line: 5608, column: 2, scope: !18437)
!18500 = !DILocation(line: 5585, column: 24, scope: !18432)
!18501 = !DILocation(line: 5585, column: 2, scope: !18432)
!18502 = distinct !{!18502, !18435, !18503}
!18503 = !DILocation(line: 5608, column: 2, scope: !18429)
!18504 = !DILocation(line: 5609, column: 8, scope: !18399)
!18505 = !DILocation(line: 5609, column: 6, scope: !18399)
!18506 = !DILocation(line: 5609, column: 2, scope: !18399)
!18507 = !DILabel(scope: !18399, name: "out", file: !3, line: 5610)
!18508 = !DILocation(line: 5610, column: 1, scope: !18399)
!18509 = !DILocation(line: 5611, column: 8, scope: !18399)
!18510 = !DILocation(line: 5611, column: 2, scope: !18399)
!18511 = !DILocation(line: 5612, column: 9, scope: !18399)
!18512 = !DILocation(line: 5612, column: 2, scope: !18399)
!18513 = distinct !DISubprogram(name: "kobject_name", scope: !3384, file: !3384, line: 88, type: !18514, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18514 = !DISubroutineType(types: !18515)
!18515 = !{!844, !18516}
!18516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18517, size: 64)
!18517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3383)
!18518 = !DILocalVariable(name: "kobj", arg: 1, scope: !18513, file: !3384, line: 88, type: !18516)
!18519 = !DILocation(line: 88, column: 62, scope: !18513)
!18520 = !DILocation(line: 90, column: 9, scope: !18513)
!18521 = !DILocation(line: 90, column: 15, scope: !18513)
!18522 = !DILocation(line: 90, column: 2, scope: !18513)
!18523 = distinct !DISubprogram(name: "build_mst_prop_path", scope: !3, file: !3, line: 2229, type: !18524, scopeLine: 2233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18524 = !DISubroutineType(types: !18525)
!18525 = !{null, !18526, !115, !870, !1023}
!18526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18527, size: 64)
!18527 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !392)
!18528 = !DILocalVariable(name: "mstb", arg: 1, scope: !18523, file: !3, line: 2229, type: !18526)
!18529 = !DILocation(line: 2229, column: 65, scope: !18523)
!18530 = !DILocalVariable(name: "pnum", arg: 2, scope: !18523, file: !3, line: 2230, type: !115)
!18531 = !DILocation(line: 2230, column: 9, scope: !18523)
!18532 = !DILocalVariable(name: "proppath", arg: 3, scope: !18523, file: !3, line: 2231, type: !870)
!18533 = !DILocation(line: 2231, column: 11, scope: !18523)
!18534 = !DILocalVariable(name: "proppath_size", arg: 4, scope: !18523, file: !3, line: 2232, type: !1023)
!18535 = !DILocation(line: 2232, column: 12, scope: !18523)
!18536 = !DILocalVariable(name: "i", scope: !18523, file: !3, line: 2234, type: !115)
!18537 = !DILocation(line: 2234, column: 6, scope: !18523)
!18538 = !DILocalVariable(name: "temp", scope: !18523, file: !3, line: 2235, type: !3083)
!18539 = !DILocation(line: 2235, column: 7, scope: !18523)
!18540 = !DILocation(line: 2237, column: 11, scope: !18523)
!18541 = !DILocation(line: 2237, column: 21, scope: !18523)
!18542 = !DILocation(line: 2237, column: 46, scope: !18523)
!18543 = !DILocation(line: 2237, column: 52, scope: !18523)
!18544 = !DILocation(line: 2237, column: 57, scope: !18523)
!18545 = !DILocation(line: 2237, column: 2, scope: !18523)
!18546 = !DILocation(line: 2238, column: 9, scope: !18547)
!18547 = distinct !DILexicalBlock(scope: !18523, file: !3, line: 2238, column: 2)
!18548 = !DILocation(line: 2238, column: 7, scope: !18547)
!18549 = !DILocation(line: 2238, column: 14, scope: !18550)
!18550 = distinct !DILexicalBlock(scope: !18547, file: !3, line: 2238, column: 2)
!18551 = !DILocation(line: 2238, column: 19, scope: !18550)
!18552 = !DILocation(line: 2238, column: 25, scope: !18550)
!18553 = !DILocation(line: 2238, column: 29, scope: !18550)
!18554 = !DILocation(line: 2238, column: 16, scope: !18550)
!18555 = !DILocation(line: 2238, column: 2, scope: !18547)
!18556 = !DILocalVariable(name: "shift", scope: !18557, file: !3, line: 2239, type: !115)
!18557 = distinct !DILexicalBlock(scope: !18550, file: !3, line: 2238, column: 40)
!18558 = !DILocation(line: 2239, column: 7, scope: !18557)
!18559 = !DILocation(line: 2239, column: 16, scope: !18557)
!18560 = !DILocation(line: 2239, column: 18, scope: !18557)
!18561 = !DILocation(line: 2239, column: 15, scope: !18557)
!18562 = !DILocalVariable(name: "port_num", scope: !18557, file: !3, line: 2240, type: !115)
!18563 = !DILocation(line: 2240, column: 7, scope: !18557)
!18564 = !DILocation(line: 2240, column: 19, scope: !18557)
!18565 = !DILocation(line: 2240, column: 25, scope: !18557)
!18566 = !DILocation(line: 2240, column: 29, scope: !18557)
!18567 = !DILocation(line: 2240, column: 31, scope: !18557)
!18568 = !DILocation(line: 2240, column: 39, scope: !18557)
!18569 = !DILocation(line: 2240, column: 36, scope: !18557)
!18570 = !DILocation(line: 2240, column: 46, scope: !18557)
!18571 = !DILocation(line: 2242, column: 12, scope: !18557)
!18572 = !DILocation(line: 2242, column: 39, scope: !18557)
!18573 = !DILocation(line: 2242, column: 3, scope: !18557)
!18574 = !DILocation(line: 2243, column: 11, scope: !18557)
!18575 = !DILocation(line: 2243, column: 21, scope: !18557)
!18576 = !DILocation(line: 2243, column: 27, scope: !18557)
!18577 = !DILocation(line: 2243, column: 3, scope: !18557)
!18578 = !DILocation(line: 2244, column: 2, scope: !18557)
!18579 = !DILocation(line: 2238, column: 36, scope: !18550)
!18580 = !DILocation(line: 2238, column: 2, scope: !18550)
!18581 = distinct !{!18581, !18555, !18582}
!18582 = !DILocation(line: 2244, column: 2, scope: !18547)
!18583 = !DILocation(line: 2245, column: 11, scope: !18523)
!18584 = !DILocation(line: 2245, column: 38, scope: !18523)
!18585 = !DILocation(line: 2245, column: 2, scope: !18523)
!18586 = !DILocation(line: 2246, column: 10, scope: !18523)
!18587 = !DILocation(line: 2246, column: 20, scope: !18523)
!18588 = !DILocation(line: 2246, column: 26, scope: !18523)
!18589 = !DILocation(line: 2246, column: 2, scope: !18523)
!18590 = !DILocation(line: 2247, column: 1, scope: !18523)
!18591 = distinct !DISubprogram(name: "drm_dp_delayed_destroy_mstb", scope: !3, file: !3, line: 4878, type: !9377, scopeLine: 4879, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18592 = !DILocalVariable(name: "mstb", arg: 1, scope: !18591, file: !3, line: 4878, type: !391)
!18593 = !DILocation(line: 4878, column: 55, scope: !18591)
!18594 = !DILocalVariable(name: "mgr", scope: !18591, file: !3, line: 4880, type: !406)
!18595 = !DILocation(line: 4880, column: 34, scope: !18591)
!18596 = !DILocation(line: 4880, column: 40, scope: !18591)
!18597 = !DILocation(line: 4880, column: 46, scope: !18591)
!18598 = !DILocalVariable(name: "port", scope: !18591, file: !3, line: 4881, type: !345)
!18599 = !DILocation(line: 4881, column: 26, scope: !18591)
!18600 = !DILocalVariable(name: "port_tmp", scope: !18591, file: !3, line: 4881, type: !345)
!18601 = !DILocation(line: 4881, column: 33, scope: !18591)
!18602 = !DILocalVariable(name: "txmsg", scope: !18591, file: !3, line: 4882, type: !6003)
!18603 = !DILocation(line: 4882, column: 33, scope: !18591)
!18604 = !DILocalVariable(name: "txmsg_tmp", scope: !18591, file: !3, line: 4882, type: !6003)
!18605 = !DILocation(line: 4882, column: 41, scope: !18591)
!18606 = !DILocalVariable(name: "wake_tx", scope: !18591, file: !3, line: 4883, type: !370)
!18607 = !DILocation(line: 4883, column: 7, scope: !18591)
!18608 = !DILocation(line: 4885, column: 14, scope: !18591)
!18609 = !DILocation(line: 4885, column: 19, scope: !18591)
!18610 = !DILocation(line: 4885, column: 2, scope: !18591)
!18611 = !DILocalVariable(name: "__mptr", scope: !18612, file: !3, line: 4886, type: !344)
!18612 = distinct !DILexicalBlock(scope: !18613, file: !3, line: 4886, column: 2)
!18613 = distinct !DILexicalBlock(scope: !18591, file: !3, line: 4886, column: 2)
!18614 = !DILocation(line: 4886, column: 2, scope: !18612)
!18615 = !DILocation(line: 4886, column: 2, scope: !18616)
!18616 = distinct !DILexicalBlock(scope: !18612, file: !3, line: 4886, column: 2)
!18617 = !DILocation(line: 4886, column: 2, scope: !18613)
!18618 = !DILocalVariable(name: "__mptr", scope: !18619, file: !3, line: 4886, type: !344)
!18619 = distinct !DILexicalBlock(scope: !18613, file: !3, line: 4886, column: 2)
!18620 = !DILocation(line: 4886, column: 2, scope: !18619)
!18621 = !DILocation(line: 4886, column: 2, scope: !18622)
!18622 = distinct !DILexicalBlock(scope: !18619, file: !3, line: 4886, column: 2)
!18623 = !DILocation(line: 4886, column: 2, scope: !18624)
!18624 = distinct !DILexicalBlock(scope: !18613, file: !3, line: 4886, column: 2)
!18625 = !DILocation(line: 4887, column: 13, scope: !18626)
!18626 = distinct !DILexicalBlock(scope: !18624, file: !3, line: 4886, column: 63)
!18627 = !DILocation(line: 4887, column: 19, scope: !18626)
!18628 = !DILocation(line: 4887, column: 3, scope: !18626)
!18629 = !DILocation(line: 4888, column: 32, scope: !18626)
!18630 = !DILocation(line: 4888, column: 3, scope: !18626)
!18631 = !DILocation(line: 4889, column: 2, scope: !18626)
!18632 = !DILocalVariable(name: "__mptr", scope: !18633, file: !3, line: 4886, type: !344)
!18633 = distinct !DILexicalBlock(scope: !18624, file: !3, line: 4886, column: 2)
!18634 = !DILocation(line: 4886, column: 2, scope: !18633)
!18635 = !DILocation(line: 4886, column: 2, scope: !18636)
!18636 = distinct !DILexicalBlock(scope: !18633, file: !3, line: 4886, column: 2)
!18637 = distinct !{!18637, !18617, !18638}
!18638 = !DILocation(line: 4889, column: 2, scope: !18613)
!18639 = !DILocation(line: 4890, column: 16, scope: !18591)
!18640 = !DILocation(line: 4890, column: 21, scope: !18591)
!18641 = !DILocation(line: 4890, column: 2, scope: !18591)
!18642 = !DILocation(line: 4893, column: 14, scope: !18591)
!18643 = !DILocation(line: 4893, column: 20, scope: !18591)
!18644 = !DILocation(line: 4893, column: 25, scope: !18591)
!18645 = !DILocation(line: 4893, column: 2, scope: !18591)
!18646 = !DILocalVariable(name: "__mptr", scope: !18647, file: !3, line: 4894, type: !344)
!18647 = distinct !DILexicalBlock(scope: !18648, file: !3, line: 4894, column: 2)
!18648 = distinct !DILexicalBlock(scope: !18591, file: !3, line: 4894, column: 2)
!18649 = !DILocation(line: 4894, column: 2, scope: !18647)
!18650 = !DILocation(line: 4894, column: 2, scope: !18651)
!18651 = distinct !DILexicalBlock(scope: !18647, file: !3, line: 4894, column: 2)
!18652 = !DILocation(line: 4894, column: 2, scope: !18648)
!18653 = !DILocalVariable(name: "__mptr", scope: !18654, file: !3, line: 4894, type: !344)
!18654 = distinct !DILexicalBlock(scope: !18648, file: !3, line: 4894, column: 2)
!18655 = !DILocation(line: 4894, column: 2, scope: !18654)
!18656 = !DILocation(line: 4894, column: 2, scope: !18657)
!18657 = distinct !DILexicalBlock(scope: !18654, file: !3, line: 4894, column: 2)
!18658 = !DILocation(line: 4894, column: 2, scope: !18659)
!18659 = distinct !DILexicalBlock(scope: !18648, file: !3, line: 4894, column: 2)
!18660 = !DILocation(line: 4895, column: 7, scope: !18661)
!18661 = distinct !DILexicalBlock(scope: !18662, file: !3, line: 4895, column: 7)
!18662 = distinct !DILexicalBlock(scope: !18659, file: !3, line: 4894, column: 71)
!18663 = !DILocation(line: 4895, column: 14, scope: !18661)
!18664 = !DILocation(line: 4895, column: 21, scope: !18661)
!18665 = !DILocation(line: 4895, column: 18, scope: !18661)
!18666 = !DILocation(line: 4895, column: 7, scope: !18662)
!18667 = !DILocation(line: 4896, column: 4, scope: !18661)
!18668 = !DILocation(line: 4898, column: 3, scope: !18662)
!18669 = !DILocation(line: 4898, column: 10, scope: !18662)
!18670 = !DILocation(line: 4898, column: 16, scope: !18662)
!18671 = !DILocation(line: 4899, column: 13, scope: !18662)
!18672 = !DILocation(line: 4899, column: 20, scope: !18662)
!18673 = !DILocation(line: 4899, column: 3, scope: !18662)
!18674 = !DILocation(line: 4900, column: 11, scope: !18662)
!18675 = !DILocation(line: 4901, column: 2, scope: !18662)
!18676 = !DILocalVariable(name: "__mptr", scope: !18677, file: !3, line: 4894, type: !344)
!18677 = distinct !DILexicalBlock(scope: !18659, file: !3, line: 4894, column: 2)
!18678 = !DILocation(line: 4894, column: 2, scope: !18677)
!18679 = !DILocation(line: 4894, column: 2, scope: !18680)
!18680 = distinct !DILexicalBlock(scope: !18677, file: !3, line: 4894, column: 2)
!18681 = distinct !{!18681, !18652, !18682}
!18682 = !DILocation(line: 4901, column: 2, scope: !18648)
!18683 = !DILocation(line: 4902, column: 16, scope: !18591)
!18684 = !DILocation(line: 4902, column: 22, scope: !18591)
!18685 = !DILocation(line: 4902, column: 27, scope: !18591)
!18686 = !DILocation(line: 4902, column: 2, scope: !18591)
!18687 = !DILocation(line: 4904, column: 6, scope: !18688)
!18688 = distinct !DILexicalBlock(scope: !18591, file: !3, line: 4904, column: 6)
!18689 = !DILocation(line: 4904, column: 6, scope: !18591)
!18690 = !DILocation(line: 4905, column: 3, scope: !18688)
!18691 = !DILocation(line: 4907, column: 29, scope: !18591)
!18692 = !DILocation(line: 4907, column: 2, scope: !18591)
!18693 = !DILocation(line: 4908, column: 1, scope: !18591)
!18694 = distinct !DISubprogram(name: "drm_dp_delayed_destroy_port", scope: !3, file: !3, line: 4865, type: !7423, scopeLine: 4866, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18695 = !DILocalVariable(name: "port", arg: 1, scope: !18694, file: !3, line: 4865, type: !345)
!18696 = !DILocation(line: 4865, column: 53, scope: !18694)
!18697 = !DILocation(line: 4867, column: 22, scope: !18694)
!18698 = !DILocation(line: 4867, column: 49, scope: !18694)
!18699 = !DILocation(line: 4867, column: 55, scope: !18694)
!18700 = !DILocation(line: 4867, column: 2, scope: !18694)
!18701 = !DILocation(line: 4869, column: 6, scope: !18702)
!18702 = distinct !DILexicalBlock(scope: !18694, file: !3, line: 4869, column: 6)
!18703 = !DILocation(line: 4869, column: 12, scope: !18702)
!18704 = !DILocation(line: 4869, column: 6, scope: !18694)
!18705 = !DILocation(line: 4870, column: 28, scope: !18706)
!18706 = distinct !DILexicalBlock(scope: !18702, file: !3, line: 4869, column: 23)
!18707 = !DILocation(line: 4870, column: 34, scope: !18706)
!18708 = !DILocation(line: 4870, column: 3, scope: !18706)
!18709 = !DILocation(line: 4871, column: 21, scope: !18706)
!18710 = !DILocation(line: 4871, column: 27, scope: !18706)
!18711 = !DILocation(line: 4871, column: 3, scope: !18706)
!18712 = !DILocation(line: 4872, column: 2, scope: !18706)
!18713 = !DILocation(line: 4874, column: 29, scope: !18694)
!18714 = !DILocation(line: 4874, column: 2, scope: !18694)
!18715 = !DILocation(line: 4875, column: 1, scope: !18694)
!18716 = distinct !DISubprogram(name: "drm_connector_put", scope: !185, file: !185, line: 1576, type: !4916, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18717 = !DILocalVariable(name: "connector", arg: 1, scope: !18716, file: !185, line: 1576, type: !4829)
!18718 = !DILocation(line: 1576, column: 60, scope: !18716)
!18719 = !DILocation(line: 1578, column: 23, scope: !18716)
!18720 = !DILocation(line: 1578, column: 34, scope: !18716)
!18721 = !DILocation(line: 1578, column: 2, scope: !18716)
!18722 = !DILocation(line: 1579, column: 1, scope: !18716)
!18723 = distinct !DISubprogram(name: "drm_dp_mst_process_up_req", scope: !3, file: !3, line: 4015, type: !18724, scopeLine: 4017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18724 = !DISubroutineType(types: !18725)
!18725 = !{!370, !406, !6123}
!18726 = !DILocalVariable(name: "mgr", arg: 1, scope: !18723, file: !3, line: 4015, type: !406)
!18727 = !DILocation(line: 4015, column: 59, scope: !18723)
!18728 = !DILocalVariable(name: "up_req", arg: 2, scope: !18723, file: !3, line: 4016, type: !6123)
!18729 = !DILocation(line: 4016, column: 36, scope: !18723)
!18730 = !DILocalVariable(name: "mstb", scope: !18723, file: !3, line: 4018, type: !391)
!18731 = !DILocation(line: 4018, column: 28, scope: !18723)
!18732 = !DILocalVariable(name: "msg", scope: !18723, file: !3, line: 4019, type: !6806)
!18733 = !DILocation(line: 4019, column: 39, scope: !18723)
!18734 = !DILocation(line: 4019, column: 46, scope: !18723)
!18735 = !DILocation(line: 4019, column: 54, scope: !18723)
!18736 = !DILocalVariable(name: "hdr", scope: !18723, file: !3, line: 4020, type: !9849)
!18737 = !DILocation(line: 4020, column: 34, scope: !18723)
!18738 = !DILocation(line: 4020, column: 41, scope: !18723)
!18739 = !DILocation(line: 4020, column: 49, scope: !18723)
!18740 = !DILocalVariable(name: "hotplug", scope: !18723, file: !3, line: 4021, type: !370)
!18741 = !DILocation(line: 4021, column: 7, scope: !18723)
!18742 = !DILocation(line: 4023, column: 6, scope: !18743)
!18743 = distinct !DILexicalBlock(scope: !18723, file: !3, line: 4023, column: 6)
!18744 = !DILocation(line: 4023, column: 11, scope: !18743)
!18745 = !DILocation(line: 4023, column: 6, scope: !18723)
!18746 = !DILocalVariable(name: "guid", scope: !18747, file: !3, line: 4024, type: !6812)
!18747 = distinct !DILexicalBlock(scope: !18743, file: !3, line: 4023, column: 22)
!18748 = !DILocation(line: 4024, column: 13, scope: !18747)
!18749 = !DILocation(line: 4026, column: 7, scope: !18750)
!18750 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 4026, column: 7)
!18751 = !DILocation(line: 4026, column: 12, scope: !18750)
!18752 = !DILocation(line: 4026, column: 21, scope: !18750)
!18753 = !DILocation(line: 4026, column: 7, scope: !18747)
!18754 = !DILocation(line: 4027, column: 11, scope: !18750)
!18755 = !DILocation(line: 4027, column: 16, scope: !18750)
!18756 = !DILocation(line: 4027, column: 18, scope: !18750)
!18757 = !DILocation(line: 4027, column: 28, scope: !18750)
!18758 = !DILocation(line: 4027, column: 9, scope: !18750)
!18759 = !DILocation(line: 4027, column: 4, scope: !18750)
!18760 = !DILocation(line: 4028, column: 12, scope: !18761)
!18761 = distinct !DILexicalBlock(scope: !18750, file: !3, line: 4028, column: 12)
!18762 = !DILocation(line: 4028, column: 17, scope: !18761)
!18763 = !DILocation(line: 4028, column: 26, scope: !18761)
!18764 = !DILocation(line: 4028, column: 12, scope: !18750)
!18765 = !DILocation(line: 4029, column: 11, scope: !18761)
!18766 = !DILocation(line: 4029, column: 16, scope: !18761)
!18767 = !DILocation(line: 4029, column: 18, scope: !18761)
!18768 = !DILocation(line: 4029, column: 32, scope: !18761)
!18769 = !DILocation(line: 4029, column: 9, scope: !18761)
!18770 = !DILocation(line: 4029, column: 4, scope: !18761)
!18771 = !DILocation(line: 4031, column: 7, scope: !18772)
!18772 = distinct !DILexicalBlock(scope: !18747, file: !3, line: 4031, column: 7)
!18773 = !DILocation(line: 4031, column: 7, scope: !18747)
!18774 = !DILocation(line: 4032, column: 48, scope: !18772)
!18775 = !DILocation(line: 4032, column: 53, scope: !18772)
!18776 = !DILocation(line: 4032, column: 11, scope: !18772)
!18777 = !DILocation(line: 4032, column: 9, scope: !18772)
!18778 = !DILocation(line: 4032, column: 4, scope: !18772)
!18779 = !DILocation(line: 4033, column: 2, scope: !18747)
!18780 = !DILocation(line: 4034, column: 39, scope: !18781)
!18781 = distinct !DILexicalBlock(scope: !18743, file: !3, line: 4033, column: 9)
!18782 = !DILocation(line: 4034, column: 44, scope: !18781)
!18783 = !DILocation(line: 4034, column: 49, scope: !18781)
!18784 = !DILocation(line: 4034, column: 54, scope: !18781)
!18785 = !DILocation(line: 4034, column: 59, scope: !18781)
!18786 = !DILocation(line: 4034, column: 10, scope: !18781)
!18787 = !DILocation(line: 4034, column: 8, scope: !18781)
!18788 = !DILocation(line: 4037, column: 7, scope: !18789)
!18789 = distinct !DILexicalBlock(scope: !18723, file: !3, line: 4037, column: 6)
!18790 = !DILocation(line: 4037, column: 6, scope: !18723)
!18791 = !DILocation(line: 4038, column: 3, scope: !18792)
!18792 = distinct !DILexicalBlock(scope: !18789, file: !3, line: 4037, column: 13)
!18793 = !DILocation(line: 4040, column: 3, scope: !18792)
!18794 = !DILocation(line: 4044, column: 6, scope: !18795)
!18795 = distinct !DILexicalBlock(scope: !18723, file: !3, line: 4044, column: 6)
!18796 = !DILocation(line: 4044, column: 11, scope: !18795)
!18797 = !DILocation(line: 4044, column: 20, scope: !18795)
!18798 = !DILocation(line: 4044, column: 6, scope: !18723)
!18799 = !DILocation(line: 4045, column: 31, scope: !18800)
!18800 = distinct !DILexicalBlock(scope: !18795, file: !3, line: 4044, column: 52)
!18801 = !DILocation(line: 4045, column: 38, scope: !18800)
!18802 = !DILocation(line: 4045, column: 43, scope: !18800)
!18803 = !DILocation(line: 4045, column: 45, scope: !18800)
!18804 = !DILocation(line: 4045, column: 3, scope: !18800)
!18805 = !DILocation(line: 4046, column: 11, scope: !18800)
!18806 = !DILocation(line: 4047, column: 2, scope: !18800)
!18807 = !DILocation(line: 4049, column: 31, scope: !18723)
!18808 = !DILocation(line: 4049, column: 2, scope: !18723)
!18809 = !DILocation(line: 4050, column: 9, scope: !18723)
!18810 = !DILocation(line: 4050, column: 2, scope: !18723)
!18811 = !DILocation(line: 4051, column: 1, scope: !18723)
!18812 = distinct !DISubprogram(name: "drm_dp_get_mst_branch_device_by_guid", scope: !3, file: !3, line: 2651, type: !18813, scopeLine: 2653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18813 = !DISubroutineType(types: !18814)
!18814 = !{!391, !406, !14016}
!18815 = !DILocalVariable(name: "mgr", arg: 1, scope: !18812, file: !3, line: 2651, type: !406)
!18816 = !DILocation(line: 2651, column: 70, scope: !18812)
!18817 = !DILocalVariable(name: "guid", arg: 2, scope: !18812, file: !3, line: 2652, type: !14016)
!18818 = !DILocation(line: 2652, column: 25, scope: !18812)
!18819 = !DILocalVariable(name: "mstb", scope: !18812, file: !3, line: 2654, type: !391)
!18820 = !DILocation(line: 2654, column: 28, scope: !18812)
!18821 = !DILocalVariable(name: "ret", scope: !18812, file: !3, line: 2655, type: !115)
!18822 = !DILocation(line: 2655, column: 6, scope: !18812)
!18823 = !DILocation(line: 2658, column: 14, scope: !18812)
!18824 = !DILocation(line: 2658, column: 19, scope: !18812)
!18825 = !DILocation(line: 2658, column: 2, scope: !18812)
!18826 = !DILocation(line: 2660, column: 46, scope: !18812)
!18827 = !DILocation(line: 2660, column: 51, scope: !18812)
!18828 = !DILocation(line: 2660, column: 64, scope: !18812)
!18829 = !DILocation(line: 2660, column: 9, scope: !18812)
!18830 = !DILocation(line: 2660, column: 7, scope: !18812)
!18831 = !DILocation(line: 2661, column: 6, scope: !18832)
!18832 = distinct !DILexicalBlock(scope: !18812, file: !3, line: 2661, column: 6)
!18833 = !DILocation(line: 2661, column: 6, scope: !18812)
!18834 = !DILocation(line: 2662, column: 42, scope: !18835)
!18835 = distinct !DILexicalBlock(scope: !18832, file: !3, line: 2661, column: 12)
!18836 = !DILocation(line: 2662, column: 9, scope: !18835)
!18837 = !DILocation(line: 2662, column: 7, scope: !18835)
!18838 = !DILocation(line: 2663, column: 8, scope: !18839)
!18839 = distinct !DILexicalBlock(scope: !18835, file: !3, line: 2663, column: 7)
!18840 = !DILocation(line: 2663, column: 7, scope: !18835)
!18841 = !DILocation(line: 2664, column: 9, scope: !18839)
!18842 = !DILocation(line: 2664, column: 4, scope: !18839)
!18843 = !DILocation(line: 2665, column: 2, scope: !18835)
!18844 = !DILocation(line: 2667, column: 16, scope: !18812)
!18845 = !DILocation(line: 2667, column: 21, scope: !18812)
!18846 = !DILocation(line: 2667, column: 2, scope: !18812)
!18847 = !DILocation(line: 2668, column: 9, scope: !18812)
!18848 = !DILocation(line: 2668, column: 2, scope: !18812)
!18849 = distinct !DISubprogram(name: "drm_dp_mst_handle_conn_stat", scope: !3, file: !3, line: 2495, type: !18850, scopeLine: 2497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!18850 = !DISubroutineType(types: !18851)
!18851 = !{null, !391, !18852}
!18852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6135, size: 64)
!18853 = !DILocalVariable(name: "mstb", arg: 1, scope: !18849, file: !3, line: 2495, type: !391)
!18854 = !DILocation(line: 2495, column: 55, scope: !18849)
!18855 = !DILocalVariable(name: "conn_stat", arg: 2, scope: !18849, file: !3, line: 2496, type: !18852)
!18856 = !DILocation(line: 2496, column: 48, scope: !18849)
!18857 = !DILocalVariable(name: "mgr", scope: !18849, file: !3, line: 2498, type: !406)
!18858 = !DILocation(line: 2498, column: 34, scope: !18849)
!18859 = !DILocation(line: 2498, column: 40, scope: !18849)
!18860 = !DILocation(line: 2498, column: 46, scope: !18849)
!18861 = !DILocalVariable(name: "port", scope: !18849, file: !3, line: 2499, type: !345)
!18862 = !DILocation(line: 2499, column: 26, scope: !18849)
!18863 = !DILocalVariable(name: "old_ddps", scope: !18849, file: !3, line: 2500, type: !115)
!18864 = !DILocation(line: 2500, column: 6, scope: !18849)
!18865 = !DILocalVariable(name: "old_input", scope: !18849, file: !3, line: 2500, type: !115)
!18866 = !DILocation(line: 2500, column: 16, scope: !18849)
!18867 = !DILocalVariable(name: "ret", scope: !18849, file: !3, line: 2500, type: !115)
!18868 = !DILocation(line: 2500, column: 27, scope: !18849)
!18869 = !DILocalVariable(name: "i", scope: !18849, file: !3, line: 2500, type: !115)
!18870 = !DILocation(line: 2500, column: 32, scope: !18849)
!18871 = !DILocalVariable(name: "new_pdt", scope: !18849, file: !3, line: 2501, type: !364)
!18872 = !DILocation(line: 2501, column: 5, scope: !18849)
!18873 = !DILocalVariable(name: "new_mcs", scope: !18849, file: !3, line: 2502, type: !370)
!18874 = !DILocation(line: 2502, column: 7, scope: !18849)
!18875 = !DILocalVariable(name: "dowork", scope: !18849, file: !3, line: 2503, type: !370)
!18876 = !DILocation(line: 2503, column: 7, scope: !18849)
!18877 = !DILocalVariable(name: "create_connector", scope: !18849, file: !3, line: 2503, type: !370)
!18878 = !DILocation(line: 2503, column: 23, scope: !18849)
!18879 = !DILocation(line: 2505, column: 25, scope: !18849)
!18880 = !DILocation(line: 2505, column: 31, scope: !18849)
!18881 = !DILocation(line: 2505, column: 42, scope: !18849)
!18882 = !DILocation(line: 2505, column: 9, scope: !18849)
!18883 = !DILocation(line: 2505, column: 7, scope: !18849)
!18884 = !DILocation(line: 2506, column: 7, scope: !18885)
!18885 = distinct !DILexicalBlock(scope: !18849, file: !3, line: 2506, column: 6)
!18886 = !DILocation(line: 2506, column: 6, scope: !18849)
!18887 = !DILocation(line: 2507, column: 3, scope: !18885)
!18888 = !DILocation(line: 2509, column: 6, scope: !18889)
!18889 = distinct !DILexicalBlock(scope: !18849, file: !3, line: 2509, column: 6)
!18890 = !DILocation(line: 2509, column: 12, scope: !18889)
!18891 = !DILocation(line: 2509, column: 6, scope: !18849)
!18892 = !DILocation(line: 2510, column: 8, scope: !18893)
!18893 = distinct !DILexicalBlock(scope: !18894, file: !3, line: 2510, column: 7)
!18894 = distinct !DILexicalBlock(scope: !18889, file: !3, line: 2509, column: 23)
!18895 = !DILocation(line: 2510, column: 14, scope: !18893)
!18896 = !DILocation(line: 2510, column: 20, scope: !18893)
!18897 = !DILocation(line: 2510, column: 23, scope: !18893)
!18898 = !DILocation(line: 2510, column: 34, scope: !18893)
!18899 = !DILocation(line: 2510, column: 7, scope: !18894)
!18900 = !DILocation(line: 2516, column: 36, scope: !18901)
!18901 = distinct !DILexicalBlock(scope: !18893, file: !3, line: 2510, column: 46)
!18902 = !DILocation(line: 2516, column: 41, scope: !18901)
!18903 = !DILocation(line: 2516, column: 4, scope: !18901)
!18904 = !DILocation(line: 2517, column: 4, scope: !18901)
!18905 = !DILocation(line: 2517, column: 10, scope: !18901)
!18906 = !DILocation(line: 2517, column: 28, scope: !18901)
!18907 = !DILocation(line: 2518, column: 11, scope: !18901)
!18908 = !DILocation(line: 2519, column: 4, scope: !18901)
!18909 = !DILocation(line: 2523, column: 21, scope: !18894)
!18910 = !DILocation(line: 2523, column: 26, scope: !18894)
!18911 = !DILocation(line: 2523, column: 31, scope: !18894)
!18912 = !DILocation(line: 2523, column: 3, scope: !18894)
!18913 = !DILocation(line: 2524, column: 2, scope: !18894)
!18914 = !DILocation(line: 2524, column: 13, scope: !18915)
!18915 = distinct !DILexicalBlock(scope: !18889, file: !3, line: 2524, column: 13)
!18916 = !DILocation(line: 2524, column: 19, scope: !18915)
!18917 = !DILocation(line: 2524, column: 25, scope: !18915)
!18918 = !DILocation(line: 2524, column: 29, scope: !18915)
!18919 = !DILocation(line: 2524, column: 40, scope: !18915)
!18920 = !DILocation(line: 2524, column: 13, scope: !18889)
!18921 = !DILocation(line: 2525, column: 20, scope: !18922)
!18922 = distinct !DILexicalBlock(scope: !18915, file: !3, line: 2524, column: 52)
!18923 = !DILocation(line: 2527, column: 3, scope: !18922)
!18924 = !DILocation(line: 2527, column: 9, scope: !18922)
!18925 = !DILocation(line: 2527, column: 27, scope: !18922)
!18926 = !DILocation(line: 2528, column: 10, scope: !18922)
!18927 = !DILocation(line: 2529, column: 2, scope: !18922)
!18928 = !DILocation(line: 2531, column: 13, scope: !18849)
!18929 = !DILocation(line: 2531, column: 19, scope: !18849)
!18930 = !DILocation(line: 2531, column: 11, scope: !18849)
!18931 = !DILocation(line: 2532, column: 14, scope: !18849)
!18932 = !DILocation(line: 2532, column: 20, scope: !18849)
!18933 = !DILocation(line: 2532, column: 12, scope: !18849)
!18934 = !DILocation(line: 2533, column: 16, scope: !18849)
!18935 = !DILocation(line: 2533, column: 27, scope: !18849)
!18936 = !DILocation(line: 2533, column: 2, scope: !18849)
!18937 = !DILocation(line: 2533, column: 8, scope: !18849)
!18938 = !DILocation(line: 2533, column: 14, scope: !18849)
!18939 = !DILocation(line: 2534, column: 15, scope: !18849)
!18940 = !DILocation(line: 2534, column: 26, scope: !18849)
!18941 = !DILocation(line: 2534, column: 2, scope: !18849)
!18942 = !DILocation(line: 2534, column: 8, scope: !18849)
!18943 = !DILocation(line: 2534, column: 13, scope: !18849)
!18944 = !DILocation(line: 2535, column: 15, scope: !18849)
!18945 = !DILocation(line: 2535, column: 26, scope: !18849)
!18946 = !DILocation(line: 2535, column: 2, scope: !18849)
!18947 = !DILocation(line: 2535, column: 8, scope: !18849)
!18948 = !DILocation(line: 2535, column: 13, scope: !18849)
!18949 = !DILocation(line: 2537, column: 6, scope: !18950)
!18950 = distinct !DILexicalBlock(scope: !18849, file: !3, line: 2537, column: 6)
!18951 = !DILocation(line: 2537, column: 18, scope: !18950)
!18952 = !DILocation(line: 2537, column: 24, scope: !18950)
!18953 = !DILocation(line: 2537, column: 15, scope: !18950)
!18954 = !DILocation(line: 2537, column: 6, scope: !18849)
!18955 = !DILocation(line: 2538, column: 7, scope: !18956)
!18956 = distinct !DILexicalBlock(scope: !18957, file: !3, line: 2538, column: 7)
!18957 = distinct !DILexicalBlock(scope: !18950, file: !3, line: 2537, column: 30)
!18958 = !DILocation(line: 2538, column: 13, scope: !18956)
!18959 = !DILocation(line: 2538, column: 18, scope: !18956)
!18960 = !DILocation(line: 2538, column: 22, scope: !18956)
!18961 = !DILocation(line: 2538, column: 28, scope: !18956)
!18962 = !DILocation(line: 2538, column: 7, scope: !18957)
!18963 = !DILocation(line: 2539, column: 36, scope: !18956)
!18964 = !DILocation(line: 2539, column: 41, scope: !18956)
!18965 = !DILocation(line: 2539, column: 47, scope: !18956)
!18966 = !DILocation(line: 2539, column: 4, scope: !18956)
!18967 = !DILocation(line: 2541, column: 4, scope: !18956)
!18968 = !DILocation(line: 2541, column: 10, scope: !18956)
!18969 = !DILocation(line: 2541, column: 19, scope: !18956)
!18970 = !DILocation(line: 2542, column: 2, scope: !18957)
!18971 = !DILocation(line: 2544, column: 12, scope: !18849)
!18972 = !DILocation(line: 2544, column: 18, scope: !18849)
!18973 = !DILocation(line: 2544, column: 48, scope: !18849)
!18974 = !DILocation(line: 2544, column: 59, scope: !18849)
!18975 = !DILocation(line: 2544, column: 10, scope: !18849)
!18976 = !DILocation(line: 2545, column: 12, scope: !18849)
!18977 = !DILocation(line: 2545, column: 23, scope: !18849)
!18978 = !DILocation(line: 2545, column: 10, scope: !18849)
!18979 = !DILocation(line: 2546, column: 28, scope: !18849)
!18980 = !DILocation(line: 2546, column: 34, scope: !18849)
!18981 = !DILocation(line: 2546, column: 43, scope: !18849)
!18982 = !DILocation(line: 2546, column: 8, scope: !18849)
!18983 = !DILocation(line: 2546, column: 6, scope: !18849)
!18984 = !DILocation(line: 2547, column: 6, scope: !18985)
!18985 = distinct !DILexicalBlock(scope: !18849, file: !3, line: 2547, column: 6)
!18986 = !DILocation(line: 2547, column: 10, scope: !18985)
!18987 = !DILocation(line: 2547, column: 6, scope: !18849)
!18988 = !DILocation(line: 2548, column: 10, scope: !18989)
!18989 = distinct !DILexicalBlock(scope: !18985, file: !3, line: 2547, column: 16)
!18990 = !DILocation(line: 2549, column: 2, scope: !18989)
!18991 = !DILocation(line: 2549, column: 13, scope: !18992)
!18992 = distinct !DILexicalBlock(scope: !18985, file: !3, line: 2549, column: 13)
!18993 = !DILocation(line: 2549, column: 17, scope: !18992)
!18994 = !DILocation(line: 2549, column: 13, scope: !18985)
!18995 = !DILocation(line: 2550, column: 3, scope: !18996)
!18996 = distinct !DILexicalBlock(scope: !18992, file: !3, line: 2549, column: 22)
!18997 = !DILocation(line: 2552, column: 10, scope: !18996)
!18998 = !DILocation(line: 2553, column: 2, scope: !18996)
!18999 = !DILocation(line: 2555, column: 7, scope: !19000)
!19000 = distinct !DILexicalBlock(scope: !18849, file: !3, line: 2555, column: 6)
!19001 = !DILocation(line: 2555, column: 17, scope: !19000)
!19002 = !DILocation(line: 2555, column: 20, scope: !19000)
!19003 = !DILocation(line: 2555, column: 32, scope: !19000)
!19004 = !DILocation(line: 2555, column: 38, scope: !19000)
!19005 = !DILocation(line: 2555, column: 29, scope: !19000)
!19006 = !DILocation(line: 2555, column: 43, scope: !19000)
!19007 = !DILocation(line: 2555, column: 47, scope: !19000)
!19008 = !DILocation(line: 2555, column: 53, scope: !19000)
!19009 = !DILocation(line: 2555, column: 6, scope: !18849)
!19010 = !DILocation(line: 2556, column: 10, scope: !19011)
!19011 = distinct !DILexicalBlock(scope: !19012, file: !3, line: 2556, column: 3)
!19012 = distinct !DILexicalBlock(scope: !19000, file: !3, line: 2555, column: 59)
!19013 = !DILocation(line: 2556, column: 8, scope: !19011)
!19014 = !DILocation(line: 2556, column: 15, scope: !19015)
!19015 = distinct !DILexicalBlock(scope: !19011, file: !3, line: 2556, column: 3)
!19016 = !DILocation(line: 2556, column: 19, scope: !19015)
!19017 = !DILocation(line: 2556, column: 24, scope: !19015)
!19018 = !DILocation(line: 2556, column: 17, scope: !19015)
!19019 = !DILocation(line: 2556, column: 3, scope: !19011)
!19020 = !DILocalVariable(name: "vcpi", scope: !19021, file: !3, line: 2557, type: !5809)
!19021 = distinct !DILexicalBlock(scope: !19015, file: !3, line: 2556, column: 43)
!19022 = !DILocation(line: 2557, column: 24, scope: !19021)
!19023 = !DILocation(line: 2557, column: 31, scope: !19021)
!19024 = !DILocation(line: 2557, column: 36, scope: !19021)
!19025 = !DILocation(line: 2557, column: 51, scope: !19021)
!19026 = !DILocalVariable(name: "port_validated", scope: !19021, file: !3, line: 2558, type: !345)
!19027 = !DILocation(line: 2558, column: 28, scope: !19021)
!19028 = !DILocation(line: 2560, column: 9, scope: !19029)
!19029 = distinct !DILexicalBlock(scope: !19021, file: !3, line: 2560, column: 8)
!19030 = !DILocation(line: 2560, column: 8, scope: !19021)
!19031 = !DILocation(line: 2561, column: 5, scope: !19029)
!19032 = !DILocalVariable(name: "__mptr", scope: !19033, file: !3, line: 2564, type: !344)
!19033 = distinct !DILexicalBlock(scope: !19021, file: !3, line: 2564, column: 5)
!19034 = !DILocation(line: 2564, column: 5, scope: !19033)
!19035 = !DILocation(line: 2564, column: 5, scope: !19036)
!19036 = distinct !DILexicalBlock(scope: !19033, file: !3, line: 2564, column: 5)
!19037 = !DILocation(line: 2563, column: 19, scope: !19021)
!19038 = !DILocation(line: 2566, column: 44, scope: !19021)
!19039 = !DILocation(line: 2566, column: 49, scope: !19021)
!19040 = !DILocation(line: 2566, column: 5, scope: !19021)
!19041 = !DILocation(line: 2565, column: 19, scope: !19021)
!19042 = !DILocation(line: 2567, column: 9, scope: !19043)
!19043 = distinct !DILexicalBlock(scope: !19021, file: !3, line: 2567, column: 8)
!19044 = !DILocation(line: 2567, column: 8, scope: !19021)
!19045 = !DILocation(line: 2568, column: 17, scope: !19046)
!19046 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 2567, column: 25)
!19047 = !DILocation(line: 2568, column: 22, scope: !19046)
!19048 = !DILocation(line: 2568, column: 5, scope: !19046)
!19049 = !DILocation(line: 2569, column: 5, scope: !19046)
!19050 = !DILocation(line: 2569, column: 11, scope: !19046)
!19051 = !DILocation(line: 2569, column: 21, scope: !19046)
!19052 = !DILocation(line: 2570, column: 19, scope: !19046)
!19053 = !DILocation(line: 2570, column: 24, scope: !19046)
!19054 = !DILocation(line: 2570, column: 5, scope: !19046)
!19055 = !DILocation(line: 2571, column: 4, scope: !19046)
!19056 = !DILocation(line: 2572, column: 34, scope: !19057)
!19057 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 2571, column: 11)
!19058 = !DILocation(line: 2572, column: 5, scope: !19057)
!19059 = !DILocation(line: 2574, column: 3, scope: !19021)
!19060 = !DILocation(line: 2556, column: 39, scope: !19015)
!19061 = !DILocation(line: 2556, column: 3, scope: !19015)
!19062 = distinct !{!19062, !19019, !19063}
!19063 = !DILocation(line: 2574, column: 3, scope: !19011)
!19064 = !DILocation(line: 2575, column: 2, scope: !19012)
!19065 = !DILocation(line: 2577, column: 6, scope: !19066)
!19066 = distinct !DILexicalBlock(scope: !18849, file: !3, line: 2577, column: 6)
!19067 = !DILocation(line: 2577, column: 12, scope: !19066)
!19068 = !DILocation(line: 2577, column: 6, scope: !18849)
!19069 = !DILocation(line: 2578, column: 23, scope: !19066)
!19070 = !DILocation(line: 2578, column: 28, scope: !19066)
!19071 = !DILocation(line: 2578, column: 33, scope: !19066)
!19072 = !DILocation(line: 2578, column: 3, scope: !19066)
!19073 = !DILocation(line: 2579, column: 11, scope: !19074)
!19074 = distinct !DILexicalBlock(scope: !19066, file: !3, line: 2579, column: 11)
!19075 = !DILocation(line: 2579, column: 11, scope: !19066)
!19076 = !DILocation(line: 2580, column: 33, scope: !19074)
!19077 = !DILocation(line: 2580, column: 39, scope: !19074)
!19078 = !DILocation(line: 2580, column: 3, scope: !19074)
!19079 = !DILabel(scope: !18849, name: "out", file: !3, line: 2582)
!19080 = !DILocation(line: 2582, column: 1, scope: !18849)
!19081 = !DILocation(line: 2583, column: 31, scope: !18849)
!19082 = !DILocation(line: 2583, column: 2, scope: !18849)
!19083 = !DILocation(line: 2584, column: 6, scope: !19084)
!19084 = distinct !DILexicalBlock(scope: !18849, file: !3, line: 2584, column: 6)
!19085 = !DILocation(line: 2584, column: 6, scope: !18849)
!19086 = !DILocation(line: 2585, column: 14, scope: !19084)
!19087 = !DILocation(line: 2585, column: 31, scope: !19084)
!19088 = !DILocation(line: 2585, column: 37, scope: !19084)
!19089 = !DILocation(line: 2585, column: 42, scope: !19084)
!19090 = !DILocation(line: 2585, column: 3, scope: !19084)
!19091 = !DILocation(line: 2586, column: 1, scope: !18849)
!19092 = distinct !DISubprogram(name: "get_mst_branch_device_by_guid_helper", scope: !3, file: !3, line: 2626, type: !19093, scopeLine: 2629, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!19093 = !DISubroutineType(types: !19094)
!19094 = !{!391, !391, !14016}
!19095 = !DILocalVariable(name: "mstb", arg: 1, scope: !19092, file: !3, line: 2627, type: !391)
!19096 = !DILocation(line: 2627, column: 28, scope: !19092)
!19097 = !DILocalVariable(name: "guid", arg: 2, scope: !19092, file: !3, line: 2628, type: !14016)
!19098 = !DILocation(line: 2628, column: 17, scope: !19092)
!19099 = !DILocalVariable(name: "found_mstb", scope: !19092, file: !3, line: 2630, type: !391)
!19100 = !DILocation(line: 2630, column: 28, scope: !19092)
!19101 = !DILocalVariable(name: "port", scope: !19092, file: !3, line: 2631, type: !345)
!19102 = !DILocation(line: 2631, column: 26, scope: !19092)
!19103 = !DILocation(line: 2633, column: 13, scope: !19104)
!19104 = distinct !DILexicalBlock(scope: !19092, file: !3, line: 2633, column: 6)
!19105 = !DILocation(line: 2633, column: 19, scope: !19104)
!19106 = !DILocation(line: 2633, column: 25, scope: !19104)
!19107 = !DILocation(line: 2633, column: 6, scope: !19104)
!19108 = !DILocation(line: 2633, column: 35, scope: !19104)
!19109 = !DILocation(line: 2633, column: 6, scope: !19092)
!19110 = !DILocation(line: 2634, column: 10, scope: !19104)
!19111 = !DILocation(line: 2634, column: 3, scope: !19104)
!19112 = !DILocalVariable(name: "__mptr", scope: !19113, file: !3, line: 2637, type: !344)
!19113 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 2637, column: 2)
!19114 = distinct !DILexicalBlock(scope: !19092, file: !3, line: 2637, column: 2)
!19115 = !DILocation(line: 2637, column: 2, scope: !19113)
!19116 = !DILocation(line: 2637, column: 2, scope: !19117)
!19117 = distinct !DILexicalBlock(scope: !19113, file: !3, line: 2637, column: 2)
!19118 = !DILocation(line: 2637, column: 2, scope: !19114)
!19119 = !DILocation(line: 2637, column: 2, scope: !19120)
!19120 = distinct !DILexicalBlock(scope: !19114, file: !3, line: 2637, column: 2)
!19121 = !DILocation(line: 2638, column: 8, scope: !19122)
!19122 = distinct !DILexicalBlock(scope: !19123, file: !3, line: 2638, column: 7)
!19123 = distinct !DILexicalBlock(scope: !19120, file: !3, line: 2637, column: 48)
!19124 = !DILocation(line: 2638, column: 14, scope: !19122)
!19125 = !DILocation(line: 2638, column: 7, scope: !19123)
!19126 = !DILocation(line: 2639, column: 4, scope: !19122)
!19127 = !DILocation(line: 2641, column: 53, scope: !19123)
!19128 = !DILocation(line: 2641, column: 59, scope: !19123)
!19129 = !DILocation(line: 2641, column: 65, scope: !19123)
!19130 = !DILocation(line: 2641, column: 16, scope: !19123)
!19131 = !DILocation(line: 2641, column: 14, scope: !19123)
!19132 = !DILocation(line: 2643, column: 7, scope: !19133)
!19133 = distinct !DILexicalBlock(scope: !19123, file: !3, line: 2643, column: 7)
!19134 = !DILocation(line: 2643, column: 7, scope: !19123)
!19135 = !DILocation(line: 2644, column: 11, scope: !19133)
!19136 = !DILocation(line: 2644, column: 4, scope: !19133)
!19137 = !DILocation(line: 2645, column: 2, scope: !19123)
!19138 = !DILocalVariable(name: "__mptr", scope: !19139, file: !3, line: 2637, type: !344)
!19139 = distinct !DILexicalBlock(scope: !19120, file: !3, line: 2637, column: 2)
!19140 = !DILocation(line: 2637, column: 2, scope: !19139)
!19141 = !DILocation(line: 2637, column: 2, scope: !19142)
!19142 = distinct !DILexicalBlock(scope: !19139, file: !3, line: 2637, column: 2)
!19143 = distinct !{!19143, !19118, !19144}
!19144 = !DILocation(line: 2645, column: 2, scope: !19114)
!19145 = !DILocation(line: 2647, column: 2, scope: !19092)
!19146 = !DILocation(line: 2648, column: 1, scope: !19092)
!19147 = distinct !DISubprogram(name: "kmalloc_array", scope: !328, file: !328, line: 584, type: !12512, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!19148 = !DILocation(line: 445, column: 72, scope: !7878, inlinedAt: !19149)
!19149 = distinct !DILocation(line: 552, column: 10, scope: !7883, inlinedAt: !19150)
!19150 = distinct !DILocation(line: 591, column: 10, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19147, file: !328, line: 590, column: 6)
!19152 = !DILocation(line: 446, column: 9, scope: !7878, inlinedAt: !19149)
!19153 = !DILocation(line: 446, column: 23, scope: !7878, inlinedAt: !19149)
!19154 = !DILocation(line: 448, column: 8, scope: !7878, inlinedAt: !19149)
!19155 = !DILocation(line: 318, column: 67, scope: !7894, inlinedAt: !19156)
!19156 = distinct !DILocation(line: 553, column: 20, scope: !7883, inlinedAt: !19150)
!19157 = !DILocation(line: 346, column: 58, scope: !7900, inlinedAt: !19158)
!19158 = distinct !DILocation(line: 547, column: 11, scope: !7883, inlinedAt: !19150)
!19159 = !DILocation(line: 472, column: 28, scope: !7906, inlinedAt: !19160)
!19160 = distinct !DILocation(line: 481, column: 9, scope: !7911, inlinedAt: !19161)
!19161 = distinct !DILocation(line: 545, column: 11, scope: !7913, inlinedAt: !19150)
!19162 = !DILocation(line: 472, column: 40, scope: !7906, inlinedAt: !19160)
!19163 = !DILocation(line: 472, column: 60, scope: !7906, inlinedAt: !19160)
!19164 = !DILocation(line: 478, column: 51, scope: !7911, inlinedAt: !19161)
!19165 = !DILocation(line: 478, column: 63, scope: !7911, inlinedAt: !19161)
!19166 = !DILocation(line: 480, column: 15, scope: !7911, inlinedAt: !19161)
!19167 = !DILocation(line: 538, column: 45, scope: !7885, inlinedAt: !19150)
!19168 = !DILocation(line: 538, column: 57, scope: !7885, inlinedAt: !19150)
!19169 = !DILocation(line: 542, column: 16, scope: !7883, inlinedAt: !19150)
!19170 = !DILocalVariable(name: "n", arg: 1, scope: !19147, file: !328, line: 584, type: !1023)
!19171 = !DILocation(line: 584, column: 42, scope: !19147)
!19172 = !DILocalVariable(name: "size", arg: 2, scope: !19147, file: !328, line: 584, type: !1023)
!19173 = !DILocation(line: 584, column: 52, scope: !19147)
!19174 = !DILocalVariable(name: "flags", arg: 3, scope: !19147, file: !328, line: 584, type: !342)
!19175 = !DILocation(line: 584, column: 64, scope: !19147)
!19176 = !DILocalVariable(name: "bytes", scope: !19147, file: !328, line: 586, type: !1023)
!19177 = !DILocation(line: 586, column: 9, scope: !19147)
!19178 = !DILocalVariable(name: "__a", scope: !19179, file: !328, line: 588, type: !1023)
!19179 = distinct !DILexicalBlock(scope: !19180, file: !328, line: 588, column: 6)
!19180 = distinct !DILexicalBlock(scope: !19147, file: !328, line: 588, column: 6)
!19181 = !DILocation(line: 588, column: 6, scope: !19179)
!19182 = !DILocalVariable(name: "__b", scope: !19179, file: !328, line: 588, type: !1023)
!19183 = !DILocalVariable(name: "__d", scope: !19179, file: !328, line: 588, type: !5440)
!19184 = !DILocation(line: 588, column: 6, scope: !19180)
!19185 = !DILocation(line: 588, column: 6, scope: !19147)
!19186 = !DILocation(line: 589, column: 3, scope: !19180)
!19187 = !DILocation(line: 590, column: 27, scope: !19151)
!19188 = !DILocation(line: 590, column: 6, scope: !19151)
!19189 = !DILocation(line: 590, column: 30, scope: !19151)
!19190 = !DILocation(line: 590, column: 54, scope: !19151)
!19191 = !DILocation(line: 590, column: 33, scope: !19151)
!19192 = !DILocation(line: 590, column: 6, scope: !19147)
!19193 = !DILocation(line: 591, column: 18, scope: !19151)
!19194 = !DILocation(line: 591, column: 25, scope: !19151)
!19195 = !DILocation(line: 540, column: 27, scope: !7884, inlinedAt: !19150)
!19196 = !DILocation(line: 540, column: 6, scope: !7884, inlinedAt: !19150)
!19197 = !DILocation(line: 540, column: 6, scope: !7885, inlinedAt: !19150)
!19198 = !DILocation(line: 544, column: 7, scope: !7913, inlinedAt: !19150)
!19199 = !DILocation(line: 544, column: 12, scope: !7913, inlinedAt: !19150)
!19200 = !DILocation(line: 544, column: 7, scope: !7883, inlinedAt: !19150)
!19201 = !DILocation(line: 545, column: 25, scope: !7913, inlinedAt: !19150)
!19202 = !DILocation(line: 545, column: 31, scope: !7913, inlinedAt: !19150)
!19203 = !DILocation(line: 480, column: 33, scope: !7911, inlinedAt: !19161)
!19204 = !DILocation(line: 480, column: 23, scope: !7911, inlinedAt: !19161)
!19205 = !DILocation(line: 481, column: 29, scope: !7911, inlinedAt: !19161)
!19206 = !DILocation(line: 481, column: 35, scope: !7911, inlinedAt: !19161)
!19207 = !DILocation(line: 481, column: 42, scope: !7911, inlinedAt: !19161)
!19208 = !DILocation(line: 474, column: 23, scope: !7906, inlinedAt: !19160)
!19209 = !DILocation(line: 474, column: 29, scope: !7906, inlinedAt: !19160)
!19210 = !DILocation(line: 474, column: 36, scope: !7906, inlinedAt: !19160)
!19211 = !DILocation(line: 474, column: 9, scope: !7906, inlinedAt: !19160)
!19212 = !DILocation(line: 545, column: 4, scope: !7913, inlinedAt: !19150)
!19213 = !DILocation(line: 547, column: 25, scope: !7883, inlinedAt: !19150)
!19214 = !DILocation(line: 348, column: 7, scope: !7957, inlinedAt: !19158)
!19215 = !DILocation(line: 348, column: 6, scope: !7900, inlinedAt: !19158)
!19216 = !DILocation(line: 349, column: 3, scope: !7957, inlinedAt: !19158)
!19217 = !DILocation(line: 351, column: 6, scope: !7961, inlinedAt: !19158)
!19218 = !DILocation(line: 351, column: 11, scope: !7961, inlinedAt: !19158)
!19219 = !DILocation(line: 351, column: 6, scope: !7900, inlinedAt: !19158)
!19220 = !DILocation(line: 352, column: 3, scope: !7961, inlinedAt: !19158)
!19221 = !DILocation(line: 354, column: 32, scope: !7966, inlinedAt: !19158)
!19222 = !DILocation(line: 354, column: 37, scope: !7966, inlinedAt: !19158)
!19223 = !DILocation(line: 354, column: 42, scope: !7966, inlinedAt: !19158)
!19224 = !DILocation(line: 354, column: 45, scope: !7966, inlinedAt: !19158)
!19225 = !DILocation(line: 354, column: 50, scope: !7966, inlinedAt: !19158)
!19226 = !DILocation(line: 354, column: 6, scope: !7900, inlinedAt: !19158)
!19227 = !DILocation(line: 355, column: 3, scope: !7966, inlinedAt: !19158)
!19228 = !DILocation(line: 356, column: 32, scope: !7974, inlinedAt: !19158)
!19229 = !DILocation(line: 356, column: 37, scope: !7974, inlinedAt: !19158)
!19230 = !DILocation(line: 356, column: 43, scope: !7974, inlinedAt: !19158)
!19231 = !DILocation(line: 356, column: 46, scope: !7974, inlinedAt: !19158)
!19232 = !DILocation(line: 356, column: 51, scope: !7974, inlinedAt: !19158)
!19233 = !DILocation(line: 356, column: 6, scope: !7900, inlinedAt: !19158)
!19234 = !DILocation(line: 357, column: 3, scope: !7974, inlinedAt: !19158)
!19235 = !DILocation(line: 358, column: 6, scope: !7982, inlinedAt: !19158)
!19236 = !DILocation(line: 358, column: 11, scope: !7982, inlinedAt: !19158)
!19237 = !DILocation(line: 358, column: 6, scope: !7900, inlinedAt: !19158)
!19238 = !DILocation(line: 358, column: 26, scope: !7982, inlinedAt: !19158)
!19239 = !DILocation(line: 359, column: 6, scope: !7987, inlinedAt: !19158)
!19240 = !DILocation(line: 359, column: 11, scope: !7987, inlinedAt: !19158)
!19241 = !DILocation(line: 359, column: 6, scope: !7900, inlinedAt: !19158)
!19242 = !DILocation(line: 359, column: 26, scope: !7987, inlinedAt: !19158)
!19243 = !DILocation(line: 360, column: 6, scope: !7992, inlinedAt: !19158)
!19244 = !DILocation(line: 360, column: 11, scope: !7992, inlinedAt: !19158)
!19245 = !DILocation(line: 360, column: 6, scope: !7900, inlinedAt: !19158)
!19246 = !DILocation(line: 360, column: 26, scope: !7992, inlinedAt: !19158)
!19247 = !DILocation(line: 361, column: 6, scope: !7997, inlinedAt: !19158)
!19248 = !DILocation(line: 361, column: 11, scope: !7997, inlinedAt: !19158)
!19249 = !DILocation(line: 361, column: 6, scope: !7900, inlinedAt: !19158)
!19250 = !DILocation(line: 361, column: 26, scope: !7997, inlinedAt: !19158)
!19251 = !DILocation(line: 362, column: 6, scope: !8002, inlinedAt: !19158)
!19252 = !DILocation(line: 362, column: 11, scope: !8002, inlinedAt: !19158)
!19253 = !DILocation(line: 362, column: 6, scope: !7900, inlinedAt: !19158)
!19254 = !DILocation(line: 362, column: 26, scope: !8002, inlinedAt: !19158)
!19255 = !DILocation(line: 363, column: 6, scope: !8007, inlinedAt: !19158)
!19256 = !DILocation(line: 363, column: 11, scope: !8007, inlinedAt: !19158)
!19257 = !DILocation(line: 363, column: 6, scope: !7900, inlinedAt: !19158)
!19258 = !DILocation(line: 363, column: 26, scope: !8007, inlinedAt: !19158)
!19259 = !DILocation(line: 364, column: 6, scope: !8012, inlinedAt: !19158)
!19260 = !DILocation(line: 364, column: 11, scope: !8012, inlinedAt: !19158)
!19261 = !DILocation(line: 364, column: 6, scope: !7900, inlinedAt: !19158)
!19262 = !DILocation(line: 364, column: 26, scope: !8012, inlinedAt: !19158)
!19263 = !DILocation(line: 365, column: 6, scope: !8017, inlinedAt: !19158)
!19264 = !DILocation(line: 365, column: 11, scope: !8017, inlinedAt: !19158)
!19265 = !DILocation(line: 365, column: 6, scope: !7900, inlinedAt: !19158)
!19266 = !DILocation(line: 365, column: 26, scope: !8017, inlinedAt: !19158)
!19267 = !DILocation(line: 366, column: 6, scope: !8022, inlinedAt: !19158)
!19268 = !DILocation(line: 366, column: 11, scope: !8022, inlinedAt: !19158)
!19269 = !DILocation(line: 366, column: 6, scope: !7900, inlinedAt: !19158)
!19270 = !DILocation(line: 366, column: 26, scope: !8022, inlinedAt: !19158)
!19271 = !DILocation(line: 367, column: 6, scope: !8027, inlinedAt: !19158)
!19272 = !DILocation(line: 367, column: 11, scope: !8027, inlinedAt: !19158)
!19273 = !DILocation(line: 367, column: 6, scope: !7900, inlinedAt: !19158)
!19274 = !DILocation(line: 367, column: 26, scope: !8027, inlinedAt: !19158)
!19275 = !DILocation(line: 368, column: 6, scope: !8032, inlinedAt: !19158)
!19276 = !DILocation(line: 368, column: 11, scope: !8032, inlinedAt: !19158)
!19277 = !DILocation(line: 368, column: 6, scope: !7900, inlinedAt: !19158)
!19278 = !DILocation(line: 368, column: 26, scope: !8032, inlinedAt: !19158)
!19279 = !DILocation(line: 369, column: 6, scope: !8037, inlinedAt: !19158)
!19280 = !DILocation(line: 369, column: 11, scope: !8037, inlinedAt: !19158)
!19281 = !DILocation(line: 369, column: 6, scope: !7900, inlinedAt: !19158)
!19282 = !DILocation(line: 369, column: 26, scope: !8037, inlinedAt: !19158)
!19283 = !DILocation(line: 370, column: 6, scope: !8042, inlinedAt: !19158)
!19284 = !DILocation(line: 370, column: 11, scope: !8042, inlinedAt: !19158)
!19285 = !DILocation(line: 370, column: 6, scope: !7900, inlinedAt: !19158)
!19286 = !DILocation(line: 370, column: 26, scope: !8042, inlinedAt: !19158)
!19287 = !DILocation(line: 371, column: 6, scope: !8047, inlinedAt: !19158)
!19288 = !DILocation(line: 371, column: 11, scope: !8047, inlinedAt: !19158)
!19289 = !DILocation(line: 371, column: 6, scope: !7900, inlinedAt: !19158)
!19290 = !DILocation(line: 371, column: 26, scope: !8047, inlinedAt: !19158)
!19291 = !DILocation(line: 372, column: 6, scope: !8052, inlinedAt: !19158)
!19292 = !DILocation(line: 372, column: 11, scope: !8052, inlinedAt: !19158)
!19293 = !DILocation(line: 372, column: 6, scope: !7900, inlinedAt: !19158)
!19294 = !DILocation(line: 372, column: 26, scope: !8052, inlinedAt: !19158)
!19295 = !DILocation(line: 373, column: 6, scope: !8057, inlinedAt: !19158)
!19296 = !DILocation(line: 373, column: 11, scope: !8057, inlinedAt: !19158)
!19297 = !DILocation(line: 373, column: 6, scope: !7900, inlinedAt: !19158)
!19298 = !DILocation(line: 373, column: 26, scope: !8057, inlinedAt: !19158)
!19299 = !DILocation(line: 374, column: 6, scope: !8062, inlinedAt: !19158)
!19300 = !DILocation(line: 374, column: 11, scope: !8062, inlinedAt: !19158)
!19301 = !DILocation(line: 374, column: 6, scope: !7900, inlinedAt: !19158)
!19302 = !DILocation(line: 374, column: 26, scope: !8062, inlinedAt: !19158)
!19303 = !DILocation(line: 375, column: 6, scope: !8067, inlinedAt: !19158)
!19304 = !DILocation(line: 375, column: 11, scope: !8067, inlinedAt: !19158)
!19305 = !DILocation(line: 375, column: 6, scope: !7900, inlinedAt: !19158)
!19306 = !DILocation(line: 375, column: 27, scope: !8067, inlinedAt: !19158)
!19307 = !DILocation(line: 376, column: 6, scope: !8072, inlinedAt: !19158)
!19308 = !DILocation(line: 376, column: 11, scope: !8072, inlinedAt: !19158)
!19309 = !DILocation(line: 376, column: 6, scope: !7900, inlinedAt: !19158)
!19310 = !DILocation(line: 376, column: 32, scope: !8072, inlinedAt: !19158)
!19311 = !DILocation(line: 377, column: 6, scope: !8077, inlinedAt: !19158)
!19312 = !DILocation(line: 377, column: 11, scope: !8077, inlinedAt: !19158)
!19313 = !DILocation(line: 377, column: 6, scope: !7900, inlinedAt: !19158)
!19314 = !DILocation(line: 377, column: 32, scope: !8077, inlinedAt: !19158)
!19315 = !DILocation(line: 378, column: 6, scope: !8082, inlinedAt: !19158)
!19316 = !DILocation(line: 378, column: 11, scope: !8082, inlinedAt: !19158)
!19317 = !DILocation(line: 378, column: 6, scope: !7900, inlinedAt: !19158)
!19318 = !DILocation(line: 378, column: 32, scope: !8082, inlinedAt: !19158)
!19319 = !DILocation(line: 379, column: 6, scope: !8087, inlinedAt: !19158)
!19320 = !DILocation(line: 379, column: 11, scope: !8087, inlinedAt: !19158)
!19321 = !DILocation(line: 379, column: 6, scope: !7900, inlinedAt: !19158)
!19322 = !DILocation(line: 379, column: 33, scope: !8087, inlinedAt: !19158)
!19323 = !DILocation(line: 380, column: 6, scope: !8092, inlinedAt: !19158)
!19324 = !DILocation(line: 380, column: 11, scope: !8092, inlinedAt: !19158)
!19325 = !DILocation(line: 380, column: 6, scope: !7900, inlinedAt: !19158)
!19326 = !DILocation(line: 380, column: 33, scope: !8092, inlinedAt: !19158)
!19327 = !DILocation(line: 381, column: 6, scope: !8097, inlinedAt: !19158)
!19328 = !DILocation(line: 381, column: 11, scope: !8097, inlinedAt: !19158)
!19329 = !DILocation(line: 381, column: 6, scope: !7900, inlinedAt: !19158)
!19330 = !DILocation(line: 381, column: 33, scope: !8097, inlinedAt: !19158)
!19331 = !DILocation(line: 382, column: 2, scope: !8102, inlinedAt: !19158)
!19332 = !DILocation(line: 382, column: 2, scope: !8106, inlinedAt: !19158)
!19333 = !DILocation(line: 382, column: 2, scope: !8107, inlinedAt: !19158)
!19334 = !DILocation(line: 386, column: 1, scope: !7900, inlinedAt: !19158)
!19335 = !DILocation(line: 547, column: 9, scope: !7883, inlinedAt: !19150)
!19336 = !DILocation(line: 549, column: 8, scope: !8113, inlinedAt: !19150)
!19337 = !DILocation(line: 549, column: 7, scope: !7883, inlinedAt: !19150)
!19338 = !DILocation(line: 550, column: 4, scope: !8113, inlinedAt: !19150)
!19339 = !DILocation(line: 553, column: 33, scope: !7883, inlinedAt: !19150)
!19340 = !DILocation(line: 325, column: 6, scope: !8118, inlinedAt: !19156)
!19341 = !DILocation(line: 325, column: 6, scope: !7894, inlinedAt: !19156)
!19342 = !DILocation(line: 326, column: 3, scope: !8118, inlinedAt: !19156)
!19343 = !DILocation(line: 332, column: 9, scope: !7894, inlinedAt: !19156)
!19344 = !DILocation(line: 332, column: 15, scope: !7894, inlinedAt: !19156)
!19345 = !DILocation(line: 332, column: 2, scope: !7894, inlinedAt: !19156)
!19346 = !DILocation(line: 336, column: 1, scope: !7894, inlinedAt: !19156)
!19347 = !DILocation(line: 553, column: 5, scope: !7883, inlinedAt: !19150)
!19348 = !DILocation(line: 553, column: 41, scope: !7883, inlinedAt: !19150)
!19349 = !DILocation(line: 554, column: 5, scope: !7883, inlinedAt: !19150)
!19350 = !DILocation(line: 554, column: 12, scope: !7883, inlinedAt: !19150)
!19351 = !DILocation(line: 448, column: 31, scope: !7878, inlinedAt: !19149)
!19352 = !DILocation(line: 448, column: 34, scope: !7878, inlinedAt: !19149)
!19353 = !DILocation(line: 448, column: 14, scope: !7878, inlinedAt: !19149)
!19354 = !DILocation(line: 450, column: 22, scope: !7878, inlinedAt: !19149)
!19355 = !DILocation(line: 450, column: 25, scope: !7878, inlinedAt: !19149)
!19356 = !DILocation(line: 450, column: 30, scope: !7878, inlinedAt: !19149)
!19357 = !DILocation(line: 450, column: 36, scope: !7878, inlinedAt: !19149)
!19358 = !DILocation(line: 450, column: 8, scope: !7878, inlinedAt: !19149)
!19359 = !DILocation(line: 450, column: 6, scope: !7878, inlinedAt: !19149)
!19360 = !DILocation(line: 451, column: 9, scope: !7878, inlinedAt: !19149)
!19361 = !DILocation(line: 552, column: 3, scope: !7883, inlinedAt: !19150)
!19362 = !DILocation(line: 557, column: 19, scope: !7885, inlinedAt: !19150)
!19363 = !DILocation(line: 557, column: 25, scope: !7885, inlinedAt: !19150)
!19364 = !DILocation(line: 557, column: 9, scope: !7885, inlinedAt: !19150)
!19365 = !DILocation(line: 557, column: 2, scope: !7885, inlinedAt: !19150)
!19366 = !DILocation(line: 558, column: 1, scope: !7885, inlinedAt: !19150)
!19367 = !DILocation(line: 591, column: 3, scope: !19151)
!19368 = !DILocation(line: 592, column: 19, scope: !19147)
!19369 = !DILocation(line: 592, column: 26, scope: !19147)
!19370 = !DILocation(line: 592, column: 9, scope: !19147)
!19371 = !DILocation(line: 592, column: 2, scope: !19147)
!19372 = !DILocation(line: 593, column: 1, scope: !19147)
!19373 = distinct !DISubprogram(name: "__must_check_overflow", scope: !19374, file: !19374, line: 52, type: !19375, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !450)
!19374 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!19375 = !DISubroutineType(types: !19376)
!19376 = !{!370, !370}
!19377 = !DILocalVariable(name: "overflow", arg: 1, scope: !19373, file: !19374, line: 52, type: !370)
!19378 = !DILocation(line: 52, column: 60, scope: !19373)
!19379 = !DILocation(line: 54, column: 9, scope: !19373)
!19380 = !DILocation(line: 54, column: 2, scope: !19373)
