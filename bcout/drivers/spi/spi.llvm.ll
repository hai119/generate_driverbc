; ModuleID = '../bcout/drivers/spi/spi.llvm.bc'
source_filename = "drivers/spi/spi.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64"

module asm ".section\09\22.initcall2.init\22, \22a\22\09"
module asm "__initcall_spi_init2:\09\09\09"
module asm ".long\09spi_init - .\09\09\09"
module asm ".previous\09\09\09\09\09"

%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.arch_spinlock_t }
%struct.arch_spinlock_t = type {}
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [64 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.attribute_group**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)*, void (%struct.kobject*, %struct.kuid_t*, %struct.kgid_t*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kuid_t = type { i32 }
%struct.kgid_t = type { i32 }
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.67, i8*, i64, i16, i16, %struct.kernfs_iattrs* }
%struct.atomic_t = type { i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.67 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.poll_table_struct*)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.0, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i32, i32 }
%union.anon.0 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount_spinlock, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.65, %struct.list_head, %struct.list_head, %union.anon.66 }
%struct.seqcount_spinlock = type { %struct.seqcount }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.1, i8* }
%union.anon.1 = type { i64 }
%struct.lockref = type { %union.anon.63 }
%union.anon.63 = type { %struct.anon.64 }
%struct.anon.64 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, %struct.xattr_handler**, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, i8*, i32, i64, i64, i32, %struct.fsnotify_mark_connector*, [32 x i8], %struct.uuid_t, i32, i32, %struct.mutex, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, %struct.atomic64_t, i32, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head }
%struct.file_system_type = type { i8*, i32, i32 (%struct.fs_context*)*, %struct.fs_parameter_spec*, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.fs_context = type opaque
%struct.fs_parameter_spec = type opaque
%struct.module = type opaque
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.page = type { i64, %union.anon.2, %union.anon.55, %struct.atomic_t, [8 x i8] }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { %struct.list_head, %struct.address_space*, i64, i64 }
%union.anon.55 = type { %struct.atomic_t }
%struct.shrink_control = type { i32, i32, i64, i64, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.inode*, i64*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.spinlock, %struct.atomic_t, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.56, i32 }
%union.anon.56 = type { %struct.kuid_t }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.atomic64_t, %struct.raw_spinlock, %struct.list_head }
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.rw_semaphore, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rcuwait, %struct.wait_queue_head, %struct.atomic_t }
%struct.rcu_sync = type { i32, i32, %struct.wait_queue_head, %struct.callback_head }
%struct.rcuwait = type { %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.refcount_struct, i32, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.sched_dl_entity, i32, i32, %struct.cpumask*, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.pid*, [4 x %struct.hlist_node], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.posix_cputimers, %struct.posix_cputimers_work, %struct.cred*, %struct.cred*, %struct.cred*, %struct.key*, [16 x i8], %struct.nameidata*, %struct.fs_struct*, %struct.files_struct*, %struct.io_uring_task*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.seccomp, i64, i64, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root_cached, %struct.task_struct*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, %struct.capture_control*, i64, %struct.kernel_siginfo*, %struct.task_io_accounting, %struct.robust_list_head*, %struct.list_head, %struct.futex_pi_state*, %struct.mutex, i32, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.rseq*, i32, i64, %struct.tlbflush_unmap_batch, %union.anon.48, %struct.pipe_inode_info*, %struct.page_frag, i32, i32, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.refcount_struct, i8*, i64, i64, i64, %struct.callback_head, [24 x i8], %struct.thread_struct }
%struct.thread_info = type { i64, i32 }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type {}
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i64, i32, i8, %struct.hrtimer, %struct.hrtimer, %struct.sched_dl_entity* }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.seqcount_raw_spinlock, %struct.hrtimer*, %struct.timerqueue_head, i64 ()*, i64 }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, i32, i8, i64, %struct.hrtimer*, i64, %struct.hrtimer*, [16 x i8], [8 x %struct.hrtimer_clock_base] }
%struct.seqcount_raw_spinlock = type { %struct.seqcount }
%struct.timerqueue_head = type { %struct.rb_root_cached }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type {}
%struct.mm_struct = type { %struct.anon.18, [0 x i64] }
%struct.anon.18 = type { %struct.vm_area_struct*, %struct.rb_root, i64, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, %struct.atomic64_t, i64, i64, i64, i64, %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_subscriptions*, %struct.atomic_t, i8, %struct.uprobes_state, %struct.work_struct, i32 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.19, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.atomic64_t, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.19 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.rb_root = type { %struct.rb_node* }
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i64, %struct.atomic64_t, %struct.rw_semaphore, %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.swait_queue_head }
%struct.swait_queue_head = type { %struct.raw_spinlock, %struct.list_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_subscriptions = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i64, [4 x %struct.vm_area_struct*] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.20 }
%union.anon.20 = type { %struct.anon.21 }
%struct.anon.21 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid = type { %struct.refcount_struct, i32, %struct.spinlock, [4 x %struct.hlist_head], %struct.hlist_head, %struct.wait_queue_head, %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace* }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.posix_cputimers = type { [3 x %struct.posix_cputimer_base], i32, i32 }
%struct.posix_cputimer_base = type { i64, %struct.timerqueue_head }
%struct.posix_cputimers_work = type { %struct.callback_head, i32 }
%struct.key = type { %struct.refcount_struct, i32, %union.anon.25, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.26, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i16, i64, %union.anon.27, %union.anon.31, %struct.key_restriction* }
%union.anon.25 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.26 = type { i64 }
%union.anon.27 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { i64, %union.anon.28, %struct.key_type*, %struct.key_tag*, i8* }
%union.anon.28 = type { i64 }
%struct.key_type = type opaque
%struct.key_tag = type { %struct.callback_head, %struct.refcount_struct, i8 }
%union.anon.31 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.key_restriction = type { i32 (%struct.key*, %struct.key_type*, %union.key_payload*, %struct.key*)*, %struct.key*, %struct.key_type* }
%struct.nameidata = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.io_uring_task = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.refcount_struct, %struct.atomic_t, i32, %struct.list_head, %struct.wait_queue_head, %struct.task_struct*, %struct.sigpending, %struct.hlist_head, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.posix_cputimers, [4 x %struct.pid*], %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], i8, i16, i16, %struct.mm_struct*, %struct.mutex, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount_spinlock, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.sighand_struct = type { %struct.spinlock, %struct.refcount_struct, %struct.wait_queue_head, [64 x %struct.k_sigaction] }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.seccomp = type { i32, %struct.atomic_t, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root_cached = type { %struct.rb_root, %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type { %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.spinlock, i16, %struct.xarray, %struct.io_cq*, %struct.hlist_head, %struct.work_struct }
%struct.xarray = type { %struct.spinlock, i32, i8* }
%struct.io_cq = type { %struct.request_queue*, %struct.io_context*, %union.anon.34, %union.anon.35, i32 }
%struct.request_queue = type opaque
%union.anon.34 = type { %struct.list_head }
%union.anon.35 = type { %struct.hlist_node }
%struct.capture_control = type opaque
%struct.kernel_siginfo = type { %struct.anon.36 }
%struct.anon.36 = type { i32, i32, i32, %union.__sifields }
%union.__sifields = type { %struct.anon.40 }
%struct.anon.40 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type {}
%struct.robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.rseq = type { i32, i32, %union.anon.47, i32, [12 x i8] }
%union.anon.47 = type { i64 }
%struct.tlbflush_unmap_batch = type { %struct.arch_tlbflush_unmap_batch, i8, i8 }
%struct.arch_tlbflush_unmap_batch = type { %struct.cpumask }
%union.anon.48 = type { %struct.callback_head }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.vm_struct = type { %struct.vm_struct*, i8*, i64, i64, %struct.page**, i32, i64, i8* }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.io_bitmap*, i64, i8, [47 x i8], %struct.fpu }
%struct.desc_struct = type { i16, i16, i32 }
%struct.perf_event = type opaque
%struct.io_bitmap = type opaque
%struct.fpu = type { i32, i64, [48 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.49, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.52 }
%union.anon.49 = type { %struct.anon.50 }
%struct.anon.50 = type { i64, i64 }
%union.anon.52 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.fsnotify_mark_connector = type opaque
%struct.uuid_t = type { [16 x i8] }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i64, i32, i32, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, i64 }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.65 = type { %struct.list_head }
%union.anon.66 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i64, %union.anon.57, i32, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.spinlock, i16, i8, i8, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.58, %struct.atomic64_t, %struct.atomic64_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.59, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.62, i32, i32, %struct.fsnotify_mark_connector*, i8* }
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec64*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.posix_acl = type opaque
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec64, %struct.timespec64, %struct.timespec64, %struct.timespec64, i64, i64 }
%struct.fiemap_extent_info = type opaque
%union.anon.57 = type { i32 }
%struct.timespec64 = type { i64, i64 }
%union.anon.58 = type { %struct.callback_head }
%union.anon.59 = type { %struct.file_operations* }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.xarray, i32, %struct.atomic_t, %struct.rb_root_cached, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, i32, %struct.spinlock, %struct.list_head, i8* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, void (%struct.readahead_control*)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.readahead_control = type opaque
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32, i16, i16, %union.anon.4 }
%union.anon.4 = type { %struct.wait_page_queue* }
%struct.wait_page_queue = type opaque
%struct.iov_iter = type { i32, i64, i64, %union.anon.5, %union.anon.6 }
%union.anon.5 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.6 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.62 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.kiocb*, i1)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i64, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, i64, i32)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, %struct.list_head, i8*, i32, i8, i32, i32, %struct.wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.60 }
%struct.fasync_struct = type { %struct.rwlock_t, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.rwlock_t = type { %struct.arch_rwlock_t }
%struct.arch_rwlock_t = type {}
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)*, i1 (%struct.file_lock*)* }
%union.anon.60 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.atomic64_t = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %union.anon.33 }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.user_struct = type { %struct.refcount_struct, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, %struct.atomic64_t, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t, %struct.ratelimit_state }
%struct.ratelimit_state = type { %struct.raw_spinlock, i32, i32, i32, i32, i64, i64 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%union.anon.33 = type { %struct.callback_head }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.list_head }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i64 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.attribute = type { i8*, i16 }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key, i8 }
%struct.device = type { %struct.kobject, %struct.device*, %struct.device_private*, i8*, %struct.device_type*, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.mutex, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, %struct.dma_map_ops*, i64*, i64, i64, %struct.bus_dma_region*, %struct.device_dma_parameters*, %struct.list_head, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.dev_iommu*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.attribute_group**, %struct.dev_pm_ops*, void (%struct.device*)*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, i8, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, i32, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.hrtimer, i64, %struct.work_struct, %struct.wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, i32, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.device*, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (%struct.timer_list*)*, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type { %struct.list_head, %struct.device* }
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, i32 (%struct.device*)*, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.xarray, %struct.mutex, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, i32 (%struct.irq_domain*, %struct.irq_data*, i1)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i8*, %struct.msi_desc*, [1 x %struct.cpumask] }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, {}*, {}*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.irq_chip_regs, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.irq_chip_regs = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, i64, %struct.atomic_t, %struct.wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, %struct.mutex, i32, %struct.module*, i8* }
%struct.irqaction = type opaque
%struct.proc_dir_entry = type opaque
%struct.dma_map_ops = type opaque
%struct.bus_dma_region = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.dev_archdata = type {}
%struct.device_node = type { i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { %struct.fwnode_handle*, %struct.fwnode_operations*, %struct.device* }
%struct.fwnode_operations = type { %struct.fwnode_handle* (%struct.fwnode_handle*)*, void (%struct.fwnode_handle*)*, i1 (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*, %struct.device*)*, i1 (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i32, i8*, i64)*, i32 (%struct.fwnode_handle*, i8*, i8**, i64)*, i8* (%struct.fwnode_handle*)*, i8* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, i8*)*, i32 (%struct.fwnode_handle*, i8*, i8*, i32, i32, %struct.fwnode_reference_args*)*, %struct.fwnode_handle* (%struct.fwnode_handle*, %struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, %struct.fwnode_handle* (%struct.fwnode_handle*)*, i32 (%struct.fwnode_handle*, %struct.fwnode_endpoint*)*, i32 (%struct.fwnode_handle*, %struct.device*)* }
%struct.fwnode_reference_args = type { %struct.fwnode_handle*, i32, [8 x i64] }
%struct.fwnode_endpoint = type { i32, i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, %struct.bin_attribute }
%struct.class = type { i8*, %struct.module*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.iommu_group = type opaque
%struct.dev_iommu = type opaque
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.idr = type { %struct.xarray, i32, i32 }
%struct.paravirt_patch_template = type { %struct.pv_init_ops, %struct.pv_time_ops, %struct.pv_cpu_ops, %struct.pv_irq_ops, %struct.pv_mmu_ops, %struct.pv_lock_ops }
%struct.pv_init_ops = type { i32 (i8, i8*, i64, i32)* }
%struct.pv_time_ops = type { i64 ()*, i64 (i32)* }
%struct.pv_cpu_ops = type { void ()*, i64 (i32)*, void (i32, i64)*, i64 ()*, void (i64)*, void (i64)*, void ()*, void (%struct.desc_ptr*)*, void (%struct.desc_ptr*)*, void (i8*, i32)*, i64 ()*, void (%struct.thread_struct*, i32)*, void (i32)*, void (%struct.desc_struct*, i32, i8*)*, void (%struct.desc_struct*, i32, i8*, i32)*, void (%struct.gate_struct*, i32, %struct.gate_struct*)*, void (%struct.desc_struct*, i32)*, void (%struct.desc_struct*, i32)*, void (i64)*, void ()*, void ()*, void ()*, void (i32*, i32*, i32*, i32*)*, i64 (i32)*, void (i32, i32, i32)*, i64 (i32, i32*)*, i32 (i32, i32, i32)*, i64 (i32)*, void ()*, void ()*, void ()*, void (%struct.task_struct*)*, void (%struct.task_struct*)* }
%struct.desc_ptr = type <{ i16, i64 }>
%struct.gate_struct = type { i16, i16, %struct.idt_bits, i16, i32, i32 }
%struct.idt_bits = type { i16 }
%struct.pv_irq_ops = type { %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void ()*, void ()* }
%struct.paravirt_callee_save = type { i8* }
%struct.pv_mmu_ops = type { void ()*, void ()*, void (i64)*, void (%struct.cpumask*, %struct.flush_tlb_info*)*, void (%struct.mmu_gather*, i8*)*, void (%struct.mm_struct*)*, %struct.paravirt_callee_save, void (i64)*, i64 ()*, void (i64)*, void (%struct.mm_struct*, %struct.mm_struct*)*, void (%struct.mm_struct*, %struct.mm_struct*)*, i32 (%struct.mm_struct*)*, void (%struct.mm_struct*, %struct.pgd_t*)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (%struct.mm_struct*, i64)*, void (i64)*, void (i64)*, void (i64)*, void (i64)*, void (%struct.pte_t*, i64)*, void (%struct.pmd_t*, i64)*, i64 (%struct.vm_area_struct*, i64, %struct.pte_t*)*, void (%struct.vm_area_struct*, i64, %struct.pte_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pud_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.p4d_t*, i64)*, %struct.paravirt_callee_save, %struct.paravirt_callee_save, void (%struct.pgd_t*, i64)*, %struct.pv_lazy_ops, void (i32, i64, i64)* }
%struct.flush_tlb_info = type opaque
%struct.mmu_gather = type opaque
%struct.p4d_t = type { i64 }
%struct.pv_lazy_ops = type { void ()*, void ()*, void ()* }
%struct.pv_lock_ops = type { void (%struct.qspinlock*, i32)*, %struct.paravirt_callee_save, void (i8*, i8)*, void (i32)*, %struct.paravirt_callee_save }
%struct.qspinlock = type opaque
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.kmem_cache = type opaque
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.spi_statistics = type { %struct.spinlock, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [17 x i64], i64 }
%struct.spi_transfer = type { i8*, i8*, i32, i64, i64, %struct.sg_table, %struct.sg_table, i8, i8, i16, %struct.spi_delay, %struct.spi_delay, %struct.spi_delay, i32, i32, i32, i32, %struct.ptp_system_timestamp*, i8, %struct.list_head, i16 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.spi_delay = type { i16, i8 }
%struct.ptp_system_timestamp = type { %struct.timespec64, %struct.timespec64 }
%struct.spi_controller = type { %struct.device, %struct.list_head, i16, i16, i16, i32, i32, i32, i32, i32, i16, i8, i64 (%struct.spi_device*)*, i64 (%struct.spi_device*)*, %struct.mutex, %struct.spinlock, %struct.mutex, i8, i32 (%struct.spi_device*)*, i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)*, i32 (%struct.spi_device*, %struct.spi_message*)*, void (%struct.spi_device*)*, i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i8, %struct.kthread_worker*, %struct.kthread_work, %struct.spinlock, %struct.list_head, %struct.spi_message*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %struct.completion, i64, i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*)*, void (%struct.spi_device*, i1)*, i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, void (%struct.spi_controller*, %struct.spi_message*)*, %struct.spi_controller_mem_ops*, %struct.spi_delay, %struct.spi_delay, %struct.spi_delay, i32*, %struct.gpio_desc**, i8, i8, i8, %struct.spi_statistics, %struct.dma_chan*, %struct.dma_chan*, i8*, i8*, i32 (%struct.spi_controller*, i32)*, i8, i64 }
%struct.spi_device = type { %struct.device, %struct.spi_controller*, %struct.spi_controller*, i32, i8, i8, i8, i32, i32, i8*, i8*, [32 x i8], i8*, i32, %struct.gpio_desc*, %struct.spi_delay, %struct.spi_statistics }
%struct.gpio_desc = type opaque
%struct.kthread_worker = type { i32, %struct.raw_spinlock, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.kthread_work* }
%struct.kthread_work = type { %struct.list_head, void (%struct.kthread_work*)*, %struct.kthread_worker*, i32 }
%struct.spi_message = type { %struct.list_head, %struct.spi_device*, i8, void (i8*)*, i8*, i32, i32, i32, %struct.list_head, i8*, %struct.list_head }
%struct.spi_controller_mem_ops = type { i32 (%struct.spi_mem*, %struct.spi_mem_op*)*, i1 (%struct.spi_mem*, %struct.spi_mem_op*)*, i32 (%struct.spi_mem*, %struct.spi_mem_op*)*, i8* (%struct.spi_mem*)*, i32 (%struct.spi_mem_dirmap_desc*)*, void (%struct.spi_mem_dirmap_desc*)*, i64 (%struct.spi_mem_dirmap_desc*, i64, i64, i8*)*, i64 (%struct.spi_mem_dirmap_desc*, i64, i64, i8*)* }
%struct.spi_mem = type { %struct.spi_device*, i8*, i8* }
%struct.spi_mem_op = type { %struct.anon.68, %struct.anon.69, %struct.anon.70, %struct.anon.71 }
%struct.anon.68 = type { i8, i8, i8, i16 }
%struct.anon.69 = type { i8, i8, i8, i64 }
%struct.anon.70 = type { i8, i8, i8 }
%struct.anon.71 = type { i8, i8, i32, i32, %union.anon.72 }
%union.anon.72 = type { i8* }
%struct.spi_mem_dirmap_desc = type { %struct.spi_mem*, %struct.spi_mem_dirmap_info, i32, i8* }
%struct.spi_mem_dirmap_info = type { %struct.spi_mem_op, i64, i64 }
%struct.dma_chan = type { %struct.dma_device*, %struct.device*, i32, i32, i32, %struct.dma_chan_dev*, i8*, %struct.list_head, %struct.dma_chan_percpu*, i32, i32, %struct.dma_router*, i8*, i8* }
%struct.dma_device = type { %struct.kref, i32, i32, %struct.list_head, %struct.list_head, %struct.dma_filter, %struct.dma_cap_mask_t, i32, i16, i16, i32, i32, i32, i32, i32, %struct.device*, %struct.module*, %struct.ida, %struct.mutex, i32, i32, i32, i32, i32, i32, i8, i32, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64*, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i32, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64*, i64*, i32, i8*, i64, i32*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i32, i64, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.scatterlist*, i32, i32, i64, i8*)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64, i32, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, %struct.dma_interleaved_template*, i64)*, %struct.dma_async_tx_descriptor* (%struct.dma_chan*, i64, i64, i64)*, void (%struct.dma_chan*, %struct.dma_slave_caps*)*, i32 (%struct.dma_chan*, %struct.dma_slave_config*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, i32 (%struct.dma_chan*)*, void (%struct.dma_chan*)*, i32 (%struct.dma_chan*, i32, %struct.dma_tx_state*)*, void (%struct.dma_chan*)*, void (%struct.dma_device*)* }
%struct.dma_filter = type { i1 (%struct.dma_chan*, i8*)*, i32, %struct.dma_slave_map* }
%struct.dma_slave_map = type { i8*, i8*, i8* }
%struct.dma_cap_mask_t = type { [1 x i64] }
%struct.ida = type { %struct.xarray }
%struct.dma_async_tx_descriptor = type { i32, i32, i64, %struct.dma_chan*, i32 (%struct.dma_async_tx_descriptor*)*, i32 (%struct.dma_async_tx_descriptor*)*, void (i8*)*, void (i8*, %struct.dmaengine_result*)*, i8*, %struct.dmaengine_unmap_data*, i32, %struct.dma_descriptor_metadata_ops* }
%struct.dmaengine_result = type { i32, i32 }
%struct.dmaengine_unmap_data = type { i8, i8, i8, i8, %struct.device*, %struct.kref, i64, [0 x i64] }
%struct.dma_descriptor_metadata_ops = type { i32 (%struct.dma_async_tx_descriptor*, i8*, i64)*, i8* (%struct.dma_async_tx_descriptor*, i64*, i64*)*, i32 (%struct.dma_async_tx_descriptor*, i64)* }
%struct.dma_interleaved_template = type { i64, i64, i32, i8, i8, i8, i8, i64, i64, [0 x %struct.data_chunk] }
%struct.data_chunk = type { i64, i64, i64, i64 }
%struct.dma_slave_caps = type { i32, i32, i32, i32, i32, i32, i8, i8, i8, i32, i8 }
%struct.dma_slave_config = type { i32, i64, i64, i32, i32, i32, i32, i32, i32, i8, i32 }
%struct.dma_tx_state = type { i32, i32, i32, i32 }
%struct.dma_chan_dev = type { %struct.dma_chan*, %struct.device, i32 }
%struct.dma_chan_percpu = type { i64, i64 }
%struct.dma_router = type { %struct.device*, void (%struct.device*, i8*)* }
%struct.spi_device_id = type { [32 x i8], i64 }
%struct.spi_driver = type { %struct.spi_device_id*, i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)*, void (%struct.spi_device*)*, %struct.device_driver }
%struct.acpi_device = type { i32, i8*, %struct.fwnode_handle, %struct.acpi_device*, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.acpi_device_status, %struct.acpi_device_flags, %struct.acpi_device_pnp, %struct.acpi_device_power, %struct.acpi_device_wakeup, %struct.acpi_device_perf, %struct.acpi_device_dir, %struct.acpi_device_data, %struct.acpi_scan_handler*, %struct.acpi_hotplug_context*, %struct.acpi_driver*, %struct.acpi_gpio_mapping*, i8*, %struct.device, i32, i32, %struct.list_head, %struct.mutex, void (%struct.acpi_device*)* }
%struct.acpi_device_status = type { i32 }
%struct.acpi_device_flags = type { i32 }
%struct.acpi_device_pnp = type { [8 x i8], %struct.acpi_pnp_type, i64, i8*, %struct.list_head, [40 x i8], [20 x i8], %union.acpi_object* }
%struct.acpi_pnp_type = type { i32 }
%union.acpi_object = type { %struct.anon.80 }
%struct.anon.80 = type { i32, i32, i64, i32 }
%struct.acpi_device_power = type { i32, %struct.acpi_device_power_flags, [5 x %struct.acpi_device_power_state] }
%struct.acpi_device_power_flags = type { i32 }
%struct.acpi_device_power_state = type { %struct.anon.82, i32, i32, %struct.list_head }
%struct.anon.82 = type { i8 }
%struct.acpi_device_wakeup = type { i8*, i64, i64, %struct.list_head, %struct.acpi_device_wakeup_flags, %struct.acpi_device_wakeup_context, %struct.wakeup_source*, i32, i32 }
%struct.acpi_device_wakeup_flags = type { i8 }
%struct.acpi_device_wakeup_context = type { void (%struct.acpi_device_wakeup_context*)*, %struct.device* }
%struct.acpi_device_perf = type { i32, %struct.acpi_device_perf_flags, i32, %struct.acpi_device_perf_state* }
%struct.acpi_device_perf_flags = type { i8 }
%struct.acpi_device_perf_state = type { %struct.anon.83, i8, i8, i32 }
%struct.anon.83 = type { i8 }
%struct.acpi_device_dir = type { %struct.proc_dir_entry* }
%struct.acpi_device_data = type { %union.acpi_object*, %struct.list_head, %union.acpi_object*, %struct.list_head }
%struct.acpi_scan_handler = type { %struct.acpi_device_id*, %struct.list_head, i1 (i8*, %struct.acpi_device_id**)*, i32 (%struct.acpi_device*, %struct.acpi_device_id*)*, void (%struct.acpi_device*)*, void (%struct.device*)*, void (%struct.device*)*, %struct.acpi_hotplug_profile }
%struct.acpi_hotplug_profile = type { %struct.kobject, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*)*, i8 }
%struct.acpi_hotplug_context = type { %struct.acpi_device*, i32 (%struct.acpi_device*, i32)*, void (%struct.acpi_device*, i32)*, void (%struct.acpi_device*)* }
%struct.acpi_driver = type { [80 x i8], [80 x i8], %struct.acpi_device_id*, i32, %struct.acpi_device_ops, %struct.device_driver, %struct.module* }
%struct.acpi_device_ops = type { i32 (%struct.acpi_device*)*, i32 (%struct.acpi_device*)*, void (%struct.acpi_device*, i32)* }
%struct.acpi_gpio_mapping = type { i8*, %struct.acpi_gpio_params*, i32, i32 }
%struct.acpi_gpio_params = type { i32, i32, i8 }
%struct.spi_board_info = type { [32 x i8], i8*, %struct.property_entry*, i8*, i32, i32, i16, i16, i32 }
%struct.property_entry = type { i8*, i64, i8, i32, %union.anon.73 }
%union.anon.73 = type { i8* }
%struct.boardinfo = type { %struct.list_head, %struct.spi_board_info }
%struct.spi_res = type { %struct.list_head, void (%struct.spi_controller*, %struct.spi_message*, i8*)*, [0 x i64] }
%struct.spi_replaced_transfers = type { void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)*, i8*, %struct.list_head, %struct.list_head*, i64, [0 x %struct.spi_transfer] }
%struct.acpi_spi_lookup = type { %struct.spi_controller*, i32, i32, i32, i8, i8 }
%struct.acpi_resource = type { i32, i32, %union.acpi_resource_data }
%union.acpi_resource_data = type { %struct.acpi_resource_vendor_typed, [40 x i8] }
%struct.acpi_resource_vendor_typed = type { i16, i8, [16 x i8], [1 x i8] }
%struct.acpi_resource_spi_serialbus = type <{ i8, i8, i8, i8, i8, i8, i16, i16, %struct.acpi_resource_source, i8*, i8, i8, i8, i8, i8, i16, i32 }>
%struct.acpi_resource_source = type <{ i8, i16, i8* }>
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.anon.77 = type { i32, i32, i8* }

@.str = private unnamed_addr constant [4 x i8] c"spi\00", align 1
@spi_dev_groups = internal global [3 x %struct.attribute_group*] [%struct.attribute_group* @spi_dev_group, %struct.attribute_group* @spi_device_statistics_group, %struct.attribute_group* null], align 16, !dbg !0
@spi_bus_type = dso_local global %struct.bus_type { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i32 0, i32 0), i8* null, %struct.device* null, %struct.attribute_group** null, %struct.attribute_group** getelementptr inbounds ([3 x %struct.attribute_group*], [3 x %struct.attribute_group*]* @spi_dev_groups, i32 0, i32 0), %struct.attribute_group** null, i32 (%struct.device*, %struct.device_driver*)* @spi_match_device, i32 (%struct.device*, %struct.kobj_uevent_env*)* @spi_uevent, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, void (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*, i32)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, i32 (%struct.device*)* null, %struct.dev_pm_ops* null, %struct.iommu_ops* null, %struct.subsys_private* null, %struct.lock_class_key zeroinitializer, i8 0 }, align 8, !dbg !5206
@.str.1 = private unnamed_addr constant [16 x i8] c"cs%d >= max %d\0A\00", align 1
@spi_add_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @spi_add_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @spi_add_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !5306
@.str.2 = private unnamed_addr constant [30 x i8] c"chipselect %d already in use\0A\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"can't setup %s, status %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [25 x i8] c"can't add %s, status %d\0A\00", align 1
@.str.5 = private unnamed_addr constant [18 x i8] c"drivers/spi/spi.c\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"failed to add properties to '%s': %d\0A\00", align 1
@board_lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @board_lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @board_lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !5308
@board_list = internal global %struct.list_head { %struct.list_head* @board_list, %struct.list_head* @board_list }, align 8, !dbg !5310
@spi_controller_list = internal global %struct.list_head { %struct.list_head* @spi_controller_list, %struct.list_head* @spi_controller_list }, align 8, !dbg !5312
@.str.7 = private unnamed_addr constant [33 x i8] c"failed to unprepare message: %d\0A\00", align 1
@spi_master_class = internal global %struct.class { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.69, i32 0, i32 0), %struct.module* null, %struct.attribute_group** null, %struct.attribute_group** getelementptr inbounds ([2 x %struct.attribute_group*], [2 x %struct.attribute_group*]* @spi_master_groups, i32 0, i32 0), %struct.kobject* null, i32 (%struct.device*, %struct.kobj_uevent_env*)* null, i8* (%struct.device*, i16*)* null, void (%struct.class*)* null, void (%struct.device*)* @spi_controller_release, i32 (%struct.device*)* null, %struct.kobj_ns_type_operations* null, i8* (%struct.device*)* null, void (%struct.device*, %struct.kuid_t*, %struct.kgid_t*)* null, %struct.dev_pm_ops* null, %struct.subsys_private* null }, align 8, !dbg !5314
@spi_master_idr = internal global %struct.idr { %struct.xarray { %struct.spinlock undef, i32 8388612, i8* null }, i32 0, i32 0 }, align 8, !dbg !5379
@.str.8 = private unnamed_addr constant [17 x i8] c"couldn't get idr\00", align 1
@spi_register_controller.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5208
@.str.9 = private unnamed_addr constant [22 x i8] c"&ctlr->bus_lock_mutex\00", align 1
@spi_register_controller.__key.10 = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5211
@.str.11 = private unnamed_addr constant [16 x i8] c"&ctlr->io_mutex\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"spi%u\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"controller is unqueued, this is deprecated\0A\00", align 1
@.str.14 = private unnamed_addr constant [21 x i8] c"queue remove failed\0A\00", align 1
@.str.15 = private unnamed_addr constant [19 x i8] c"queue stop failed\0A\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"queue restart failed\0A\00", align 1
@.str.17 = private unnamed_addr constant [59 x i8] c"requested to remove more spi_transfers than are available\0A\00", align 1
@.str.18 = private unnamed_addr constant [54 x i8] c"setup: can not select dual and quad at the same time\0A\00", align 1
@.str.19 = private unnamed_addr constant [42 x i8] c"setup: ignoring unsupported mode bits %x\0A\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"setup: unsupported mode bits %x\0A\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"Failed to power device: %d\0A\00", align 1
@.str.22 = private unnamed_addr constant [52 x i8] c"Clock-cycle delays for CS not supported in SW mode\0A\00", align 1
@spi_write_then_read.lock = internal global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock undef, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @spi_write_then_read.lock to i8*), i64 8) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @spi_write_then_read.lock to i8*), i64 8) to %struct.list_head*) } }, align 8, !dbg !5213
@buf = internal global i8* null, align 8, !dbg !5220
@__UNIQUE_ID___addressable_spi_init383 = internal global i8* bitcast (i32 ()* @spi_init to i8*), section ".discard.addressable", align 8, !dbg !5218
@pv_ops = external dso_local global %struct.paravirt_patch_template, align 8
@spi_dev_group = internal constant %struct.attribute_group { i8* null, i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([3 x %struct.attribute*], [3 x %struct.attribute*]* @spi_dev_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !5222
@spi_device_statistics_group = internal constant %struct.attribute_group { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([29 x %struct.attribute*], [29 x %struct.attribute*]* @spi_device_statistics_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !5243
@spi_dev_attrs = internal global [3 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_modalias, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_driver_override, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !5224
@dev_attr_modalias = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @modalias_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5227
@dev_attr_driver_override = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.26, i32 0, i32 0), i16 420 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @driver_override_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* @driver_override_store }, align 8, !dbg !5241
@.str.23 = private unnamed_addr constant [9 x i8] c"modalias\00", align 1
@.str.24 = private unnamed_addr constant [6 x i8] c"%s%s\0A\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"spi:\00", align 1
@.str.26 = private unnamed_addr constant [16 x i8] c"driver_override\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@.str.28 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"statistics\00", align 1
@spi_device_statistics_attrs = internal global [29 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_messages, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfers, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_errors, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_timedout, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_spi_sync, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_spi_sync_immediate, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_spi_async, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_bytes, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_bytes_rx, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_bytes_tx, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo0, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo1, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo2, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo3, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo4, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo5, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo6, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo7, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo8, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo9, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo10, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo11, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo12, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo13, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo14, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo15, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfer_bytes_histo16, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_device_transfers_split_maxsize, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !5245
@dev_attr_spi_device_messages = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_messages_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5250
@dev_attr_spi_device_transfers = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfers_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5252
@dev_attr_spi_device_errors = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_errors_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5254
@dev_attr_spi_device_timedout = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_timedout_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5256
@dev_attr_spi_device_spi_sync = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_spi_sync_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5258
@dev_attr_spi_device_spi_sync_immediate = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_spi_sync_immediate_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5260
@dev_attr_spi_device_spi_async = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_spi_async_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5262
@dev_attr_spi_device_bytes = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_bytes_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5264
@dev_attr_spi_device_bytes_rx = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_bytes_rx_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5266
@dev_attr_spi_device_bytes_tx = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_bytes_tx_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5268
@dev_attr_spi_device_transfer_bytes_histo0 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo0_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5270
@dev_attr_spi_device_transfer_bytes_histo1 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo1_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5272
@dev_attr_spi_device_transfer_bytes_histo2 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo2_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5274
@dev_attr_spi_device_transfer_bytes_histo3 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.45, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo3_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5276
@dev_attr_spi_device_transfer_bytes_histo4 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo4_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5278
@dev_attr_spi_device_transfer_bytes_histo5 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo5_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5280
@dev_attr_spi_device_transfer_bytes_histo6 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo6_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5282
@dev_attr_spi_device_transfer_bytes_histo7 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo7_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5284
@dev_attr_spi_device_transfer_bytes_histo8 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo8_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5286
@dev_attr_spi_device_transfer_bytes_histo9 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo9_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5288
@dev_attr_spi_device_transfer_bytes_histo10 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.52, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo10_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5290
@dev_attr_spi_device_transfer_bytes_histo11 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo11_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5292
@dev_attr_spi_device_transfer_bytes_histo12 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.54, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo12_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5294
@dev_attr_spi_device_transfer_bytes_histo13 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo13_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5296
@dev_attr_spi_device_transfer_bytes_histo14 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.56, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo14_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5298
@dev_attr_spi_device_transfer_bytes_histo15 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo15_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5300
@dev_attr_spi_device_transfer_bytes_histo16 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.58, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfer_bytes_histo16_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5302
@dev_attr_spi_device_transfers_split_maxsize = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_device_transfers_split_maxsize_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5304
@.str.30 = private unnamed_addr constant [9 x i8] c"messages\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c"%lu\00", align 1
@.str.32 = private unnamed_addr constant [10 x i8] c"transfers\00", align 1
@.str.33 = private unnamed_addr constant [7 x i8] c"errors\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"timedout\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"spi_sync\00", align 1
@.str.36 = private unnamed_addr constant [19 x i8] c"spi_sync_immediate\00", align 1
@.str.37 = private unnamed_addr constant [10 x i8] c"spi_async\00", align 1
@.str.38 = private unnamed_addr constant [6 x i8] c"bytes\00", align 1
@.str.39 = private unnamed_addr constant [5 x i8] c"%llu\00", align 1
@.str.40 = private unnamed_addr constant [9 x i8] c"bytes_rx\00", align 1
@.str.41 = private unnamed_addr constant [9 x i8] c"bytes_tx\00", align 1
@.str.42 = private unnamed_addr constant [25 x i8] c"transfer_bytes_histo_0-1\00", align 1
@.str.43 = private unnamed_addr constant [25 x i8] c"transfer_bytes_histo_2-3\00", align 1
@.str.44 = private unnamed_addr constant [25 x i8] c"transfer_bytes_histo_4-7\00", align 1
@.str.45 = private unnamed_addr constant [26 x i8] c"transfer_bytes_histo_8-15\00", align 1
@.str.46 = private unnamed_addr constant [27 x i8] c"transfer_bytes_histo_16-31\00", align 1
@.str.47 = private unnamed_addr constant [27 x i8] c"transfer_bytes_histo_32-63\00", align 1
@.str.48 = private unnamed_addr constant [28 x i8] c"transfer_bytes_histo_64-127\00", align 1
@.str.49 = private unnamed_addr constant [29 x i8] c"transfer_bytes_histo_128-255\00", align 1
@.str.50 = private unnamed_addr constant [29 x i8] c"transfer_bytes_histo_256-511\00", align 1
@.str.51 = private unnamed_addr constant [30 x i8] c"transfer_bytes_histo_512-1023\00", align 1
@.str.52 = private unnamed_addr constant [31 x i8] c"transfer_bytes_histo_1024-2047\00", align 1
@.str.53 = private unnamed_addr constant [31 x i8] c"transfer_bytes_histo_2048-4095\00", align 1
@.str.54 = private unnamed_addr constant [31 x i8] c"transfer_bytes_histo_4096-8191\00", align 1
@.str.55 = private unnamed_addr constant [32 x i8] c"transfer_bytes_histo_8192-16383\00", align 1
@.str.56 = private unnamed_addr constant [33 x i8] c"transfer_bytes_histo_16384-32767\00", align 1
@.str.57 = private unnamed_addr constant [33 x i8] c"transfer_bytes_histo_32768-65535\00", align 1
@.str.58 = private unnamed_addr constant [28 x i8] c"transfer_bytes_histo_65536+\00", align 1
@.str.59 = private unnamed_addr constant [24 x i8] c"transfers_split_maxsize\00", align 1
@.str.60 = private unnamed_addr constant [14 x i8] c"MODALIAS=%s%s\00", align 1
@.str.61 = private unnamed_addr constant [7 x i8] c"spi-%s\00", align 1
@.str.62 = private unnamed_addr constant [6 x i8] c"%s.%u\00", align 1
@.str.63 = private unnamed_addr constant [32 x i8] c"can't create new device for %s\0A\00", align 1
@vmemmap_base = external dso_local global i64, align 8
@phys_base = external dso_local global i64, align 8
@page_offset_base = external dso_local global i64, align 8
@.str.64 = private unnamed_addr constant [28 x i8] c"include/linux/scatterlist.h\00", align 1
@.str.65 = private unnamed_addr constant [39 x i8] c"failed to unprepare transfer hardware\0A\00", align 1
@.str.66 = private unnamed_addr constant [41 x i8] c"failed to prepare transfer hardware: %d\0A\00", align 1
@.str.67 = private unnamed_addr constant [31 x i8] c"failed to prepare message: %d\0A\00", align 1
@.str.68 = private unnamed_addr constant [43 x i8] c"failed to transfer one message from queue\0A\00", align 1
@.str.69 = private unnamed_addr constant [11 x i8] c"spi_master\00", align 1
@spi_master_groups = internal global [2 x %struct.attribute_group*] [%struct.attribute_group* @spi_controller_statistics_group, %struct.attribute_group* null], align 16, !dbg !5316
@spi_controller_statistics_group = internal constant %struct.attribute_group { i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i16 (%struct.kobject*, %struct.attribute*, i32)* null, i16 (%struct.kobject*, %struct.bin_attribute*, i32)* null, %struct.attribute** getelementptr inbounds ([29 x %struct.attribute*], [29 x %struct.attribute*]* @spi_controller_statistics_attrs, i32 0, i32 0), %struct.bin_attribute** null }, align 8, !dbg !5319
@spi_controller_statistics_attrs = internal global [29 x %struct.attribute*] [%struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_messages, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfers, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_errors, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_timedout, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_spi_sync, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_spi_sync_immediate, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_spi_async, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_bytes, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_bytes_rx, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_bytes_tx, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo0, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo1, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo2, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo3, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo4, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo5, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo6, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo7, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo8, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo9, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo10, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo11, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo12, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo13, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo14, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo15, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfer_bytes_histo16, i32 0, i32 0), %struct.attribute* getelementptr inbounds (%struct.device_attribute, %struct.device_attribute* @dev_attr_spi_controller_transfers_split_maxsize, i32 0, i32 0), %struct.attribute* null], align 16, !dbg !5321
@dev_attr_spi_controller_messages = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.30, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_messages_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5323
@dev_attr_spi_controller_transfers = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.32, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfers_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5325
@dev_attr_spi_controller_errors = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.33, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_errors_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5327
@dev_attr_spi_controller_timedout = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_timedout_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5329
@dev_attr_spi_controller_spi_sync = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_spi_sync_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5331
@dev_attr_spi_controller_spi_sync_immediate = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_spi_sync_immediate_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5333
@dev_attr_spi_controller_spi_async = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.37, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_spi_async_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5335
@dev_attr_spi_controller_bytes = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.38, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_bytes_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5337
@dev_attr_spi_controller_bytes_rx = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.40, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_bytes_rx_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5339
@dev_attr_spi_controller_bytes_tx = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.41, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_bytes_tx_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5341
@dev_attr_spi_controller_transfer_bytes_histo0 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.42, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo0_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5343
@dev_attr_spi_controller_transfer_bytes_histo1 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.43, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo1_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5345
@dev_attr_spi_controller_transfer_bytes_histo2 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.44, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo2_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5347
@dev_attr_spi_controller_transfer_bytes_histo3 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.45, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo3_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5349
@dev_attr_spi_controller_transfer_bytes_histo4 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.46, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo4_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5351
@dev_attr_spi_controller_transfer_bytes_histo5 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo5_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5353
@dev_attr_spi_controller_transfer_bytes_histo6 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.48, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo6_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5355
@dev_attr_spi_controller_transfer_bytes_histo7 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.49, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo7_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5357
@dev_attr_spi_controller_transfer_bytes_histo8 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.50, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo8_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5359
@dev_attr_spi_controller_transfer_bytes_histo9 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.51, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo9_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5361
@dev_attr_spi_controller_transfer_bytes_histo10 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.52, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo10_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5363
@dev_attr_spi_controller_transfer_bytes_histo11 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.53, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo11_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5365
@dev_attr_spi_controller_transfer_bytes_histo12 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.54, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo12_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5367
@dev_attr_spi_controller_transfer_bytes_histo13 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.55, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo13_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5369
@dev_attr_spi_controller_transfer_bytes_histo14 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.56, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo14_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5371
@dev_attr_spi_controller_transfer_bytes_histo15 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.57, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo15_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5373
@dev_attr_spi_controller_transfer_bytes_histo16 = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.58, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfer_bytes_histo16_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5375
@dev_attr_spi_controller_transfers_split_maxsize = internal global %struct.device_attribute { %struct.attribute { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.59, i32 0, i32 0), i16 292 }, i64 (%struct.device*, %struct.device_attribute*, i8*)* @spi_controller_transfers_split_maxsize_show, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* null }, align 8, !dbg !5377
@__init_completion.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5381
@.str.70 = private unnamed_addr constant [9 x i8] c"&x->wait\00", align 1
@.str.71 = private unnamed_addr constant [3 x i8] c"cs\00", align 1
@.str.72 = private unnamed_addr constant [8 x i8] c"%s CS%d\00", align 1
@.str.73 = private unnamed_addr constant [31 x i8] c"Invalid native chip select %d\0A\00", align 1
@.str.74 = private unnamed_addr constant [40 x i8] c"No unused native chip select available\0A\00", align 1
@.str.75 = private unnamed_addr constant [9 x i8] c"cs-gpios\00", align 1
@.str.76 = private unnamed_addr constant [12 x i8] c"#gpio-cells\00", align 1
@.str.77 = private unnamed_addr constant [28 x i8] c"problem initializing queue\0A\00", align 1
@.str.78 = private unnamed_addr constant [24 x i8] c"problem starting queue\0A\00", align 1
@.str.79 = private unnamed_addr constant [25 x i8] c"SPI transfer failed: %d\0A\00", align 1
@.str.80 = private unnamed_addr constant [35 x i8] c"Bufferless transfer has length %u\0A\00", align 1
@.str.81 = private unnamed_addr constant [24 x i8] c"SPI transfer timed out\0A\00", align 1
@_spi_transfer_cs_change_delay.__print_once = internal global i8 0, section ".data..read_mostly", align 1, !dbg !5386
@.str.82 = private unnamed_addr constant [57 x i8] c"Use of unsupported delay unit %i, using default of 10us\0A\00", align 1
@.str.83 = private unnamed_addr constant [39 x i8] c"failed to create message pump kworker\0A\00", align 1
@.str.84 = private unnamed_addr constant [38 x i8] c"Failed to create SPI device for %pOF\0A\00", align 1
@.str.85 = private unnamed_addr constant [33 x i8] c"spi_device alloc error for %pOF\0A\00", align 1
@.str.86 = private unnamed_addr constant [31 x i8] c"cannot find modalias for %pOF\0A\00", align 1
@.str.87 = private unnamed_addr constant [32 x i8] c"spi_device register error %pOF\0A\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"spi-cpha\00", align 1
@.str.89 = private unnamed_addr constant [9 x i8] c"spi-cpol\00", align 1
@.str.90 = private unnamed_addr constant [10 x i8] c"spi-3wire\00", align 1
@.str.91 = private unnamed_addr constant [14 x i8] c"spi-lsb-first\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"spi-cs-high\00", align 1
@.str.93 = private unnamed_addr constant [17 x i8] c"spi-tx-bus-width\00", align 1
@.str.94 = private unnamed_addr constant [35 x i8] c"spi-tx-bus-width %d not supported\0A\00", align 1
@.str.95 = private unnamed_addr constant [17 x i8] c"spi-rx-bus-width\00", align 1
@.str.96 = private unnamed_addr constant [35 x i8] c"spi-rx-bus-width %d not supported\0A\00", align 1
@.str.97 = private unnamed_addr constant [6 x i8] c"slave\00", align 1
@.str.98 = private unnamed_addr constant [28 x i8] c"%pOF is not called 'slave'\0A\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"reg\00", align 1
@.str.100 = private unnamed_addr constant [39 x i8] c"%pOF has no valid 'reg' property (%d)\0A\00", align 1
@.str.101 = private unnamed_addr constant [18 x i8] c"spi-max-frequency\00", align 1
@.str.102 = private unnamed_addr constant [32 x i8] c"failed to enumerate SPI slaves\0A\00", align 1
@.str.103 = private unnamed_addr constant [38 x i8] c"failed to allocate SPI device for %s\0A\00", align 1
@.str.104 = private unnamed_addr constant [39 x i8] c"failed to add SPI device %s from ACPI\0A\00", align 1
@x86_apple_machine = external dso_local global i8, align 1
@.str.105 = private unnamed_addr constant [14 x i8] c"spiSclkPeriod\00", align 1
@.str.106 = private unnamed_addr constant [12 x i8] c"spiWordSize\00", align 1
@.str.107 = private unnamed_addr constant [12 x i8] c"spiBitOrder\00", align 1
@.str.108 = private unnamed_addr constant [7 x i8] c"spiSPO\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"spiSPH\00", align 1
@.str.110 = private unnamed_addr constant [26 x i8] c"problem destroying queue\0A\00", align 1
@.str.111 = private unnamed_addr constant [30 x i8] c"could not stop message queue\0A\00", align 1
@.str.112 = private unnamed_addr constant [46 x i8] c"will run message pump with realtime priority\0A\00", align 1
@kmalloc_caches = external dso_local global [3 x [14 x %struct.kmem_cache*]], align 16
@.str.113 = private unnamed_addr constant [21 x i8] c"include/linux/slab.h\00", align 1
@spi_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1, !dbg !5391
@spi_acpi_notifier = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @acpi_spi_notify, %struct.notifier_block* null, i32 0 }, align 8, !dbg !5396
@spi_slave_class = external dso_local global %struct.class, align 8
@llvm.used = appending global [1 x i8*] [i8* bitcast (i8** @__UNIQUE_ID___addressable_spi_init383 to i8*)], section "llvm.metadata"

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_statistics_add_transfer_stats(%struct.spi_statistics* %stats, %struct.spi_transfer* %xfer, %struct.spi_controller* %ctlr) #0 !dbg !5416 {
entry:
  %lock.addr.i45 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i45, metadata !5420, metadata !DIExpression()), !dbg !5425
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !5428
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !5434
  %x.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr.i, metadata !5441, metadata !DIExpression()), !dbg !5446
  %r.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %r.i, metadata !5449, metadata !DIExpression()), !dbg !5450
  %stats.addr = alloca %struct.spi_statistics*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %flags = alloca i64, align 8
  %l2len = alloca i32, align 4
  %__UNIQUE_ID___x290 = alloca i32, align 4
  %__UNIQUE_ID___y291 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp4 = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  store %struct.spi_statistics* %stats, %struct.spi_statistics** %stats.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stats.addr, metadata !5451, metadata !DIExpression()), !dbg !5452
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !5453, metadata !DIExpression()), !dbg !5454
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !5455, metadata !DIExpression()), !dbg !5456
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !5457, metadata !DIExpression()), !dbg !5458
  call void @llvm.dbg.declare(metadata i32* %l2len, metadata !5459, metadata !DIExpression()), !dbg !5460
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x290, metadata !5461, metadata !DIExpression()), !dbg !5462
  %0 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5462
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %0, i32 0, i32 2, !dbg !5462
  %1 = load i32, i32* %len, align 8, !dbg !5462
  store i32 %1, i32* %x.addr.i, align 4
  %2 = load i32, i32* %x.addr.i, align 4, !dbg !5463
  %3 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %2, i32 -1) #6, !dbg !5464, !srcloc !5465
  store i32 %3, i32* %r.i, align 4, !dbg !5464
  %4 = load i32, i32* %r.i, align 4, !dbg !5466
  %add.i = add i32 %4, 1, !dbg !5467
  store i32 %add.i, i32* %__UNIQUE_ID___x290, align 4, !dbg !5462
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y291, metadata !5468, metadata !DIExpression()), !dbg !5462
  store i32 17, i32* %__UNIQUE_ID___y291, align 4, !dbg !5462
  %5 = load i32, i32* %__UNIQUE_ID___x290, align 4, !dbg !5462
  %6 = load i32, i32* %__UNIQUE_ID___y291, align 4, !dbg !5462
  %cmp = icmp slt i32 %5, %6, !dbg !5462
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !5462

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %__UNIQUE_ID___x290, align 4, !dbg !5462
  br label %cond.end, !dbg !5462

cond.false:                                       ; preds = %entry
  %8 = load i32, i32* %__UNIQUE_ID___y291, align 4, !dbg !5462
  br label %cond.end, !dbg !5462

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !5462
  store i32 %cond, i32* %tmp, align 4, !dbg !5462
  %9 = load i32, i32* %tmp, align 4, !dbg !5462
  %sub = sub i32 %9, 1, !dbg !5469
  store i32 %sub, i32* %l2len, align 4, !dbg !5460
  %10 = load i32, i32* %l2len, align 4, !dbg !5470
  %cmp1 = icmp slt i32 %10, 0, !dbg !5472
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5473

if.then:                                          ; preds = %cond.end
  store i32 0, i32* %l2len, align 4, !dbg !5474
  br label %if.end, !dbg !5475

if.end:                                           ; preds = %if.then, %cond.end
  br label %do.body, !dbg !5476

do.body:                                          ; preds = %if.end
  br label %do.body2, !dbg !5477

do.body2:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !5478, metadata !DIExpression()), !dbg !5480
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !5481, metadata !DIExpression()), !dbg !5480
  %cmp3 = icmp eq i64* %__dummy, %__dummy2, !dbg !5480
  %conv = zext i1 %cmp3 to i32, !dbg !5480
  store i32 1, i32* %tmp4, align 4, !dbg !5480
  %11 = load i32, i32* %tmp4, align 4, !dbg !5480
  br label %do.body5, !dbg !5482

do.body5:                                         ; preds = %do.body2
  br label %do.body6, !dbg !5483

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !5484

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !5486, metadata !DIExpression()), !dbg !5489
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !5490, metadata !DIExpression()), !dbg !5489
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !5489
  %conv11 = zext i1 %cmp10 to i32, !dbg !5489
  store i32 1, i32* %tmp12, align 4, !dbg !5489
  %12 = load i32, i32* %tmp12, align 4, !dbg !5489
  %call13 = call i64 @arch_local_irq_save() #11, !dbg !5491
  store i64 %call13, i64* %flags, align 8, !dbg !5491
  br label %do.end, !dbg !5491

do.end:                                           ; preds = %do.body7
  br label %do.end14, !dbg !5484

do.end14:                                         ; preds = %do.end
  br label %do.body15, !dbg !5483

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5492, !srcloc !5493
  br label %do.body16, !dbg !5492

do.body16:                                        ; preds = %do.body15
  %13 = load %struct.spi_statistics*, %struct.spi_statistics** %stats.addr, align 8, !dbg !5494
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %13, i32 0, i32 0, !dbg !5494
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5495
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !5496
  %rlock.i = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !5496
  br label %do.end18, !dbg !5494

do.end18:                                         ; preds = %do.body16
  br label %do.end19, !dbg !5492

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !5483

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !5482

do.end21:                                         ; preds = %do.end20
  br label %do.end22, !dbg !5477

do.end22:                                         ; preds = %do.end21
  %16 = load %struct.spi_statistics*, %struct.spi_statistics** %stats.addr, align 8, !dbg !5497
  %transfers = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %16, i32 0, i32 2, !dbg !5498
  %17 = load i64, i64* %transfers, align 8, !dbg !5499
  %inc = add i64 %17, 1, !dbg !5499
  store i64 %inc, i64* %transfers, align 8, !dbg !5499
  %18 = load %struct.spi_statistics*, %struct.spi_statistics** %stats.addr, align 8, !dbg !5500
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %18, i32 0, i32 11, !dbg !5501
  %19 = load i32, i32* %l2len, align 4, !dbg !5502
  %idxprom = sext i32 %19 to i64, !dbg !5500
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 %idxprom, !dbg !5500
  %20 = load i64, i64* %arrayidx, align 8, !dbg !5503
  %inc23 = add i64 %20, 1, !dbg !5503
  store i64 %inc23, i64* %arrayidx, align 8, !dbg !5503
  %21 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5504
  %len24 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %21, i32 0, i32 2, !dbg !5505
  %22 = load i32, i32* %len24, align 8, !dbg !5505
  %conv25 = zext i32 %22 to i64, !dbg !5504
  %23 = load %struct.spi_statistics*, %struct.spi_statistics** %stats.addr, align 8, !dbg !5506
  %bytes = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %23, i32 0, i32 8, !dbg !5507
  %24 = load i64, i64* %bytes, align 8, !dbg !5508
  %add = add i64 %24, %conv25, !dbg !5508
  store i64 %add, i64* %bytes, align 8, !dbg !5508
  %25 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5509
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %25, i32 0, i32 0, !dbg !5511
  %26 = load i8*, i8** %tx_buf, align 8, !dbg !5511
  %tobool = icmp ne i8* %26, null, !dbg !5512
  br i1 %tobool, label %land.lhs.true, label %if.end33, !dbg !5513

land.lhs.true:                                    ; preds = %do.end22
  %27 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5514
  %tx_buf26 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %27, i32 0, i32 0, !dbg !5515
  %28 = load i8*, i8** %tx_buf26, align 8, !dbg !5515
  %29 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5516
  %dummy_tx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %29, i32 0, i32 63, !dbg !5517
  %30 = load i8*, i8** %dummy_tx, align 8, !dbg !5517
  %cmp27 = icmp ne i8* %28, %30, !dbg !5518
  br i1 %cmp27, label %if.then29, label %if.end33, !dbg !5519

if.then29:                                        ; preds = %land.lhs.true
  %31 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5520
  %len30 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %31, i32 0, i32 2, !dbg !5521
  %32 = load i32, i32* %len30, align 8, !dbg !5521
  %conv31 = zext i32 %32 to i64, !dbg !5520
  %33 = load %struct.spi_statistics*, %struct.spi_statistics** %stats.addr, align 8, !dbg !5522
  %bytes_tx = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %33, i32 0, i32 10, !dbg !5523
  %34 = load i64, i64* %bytes_tx, align 8, !dbg !5524
  %add32 = add i64 %34, %conv31, !dbg !5524
  store i64 %add32, i64* %bytes_tx, align 8, !dbg !5524
  br label %if.end33, !dbg !5522

if.end33:                                         ; preds = %if.then29, %land.lhs.true, %do.end22
  %35 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5525
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %35, i32 0, i32 1, !dbg !5527
  %36 = load i8*, i8** %rx_buf, align 8, !dbg !5527
  %tobool34 = icmp ne i8* %36, null, !dbg !5528
  br i1 %tobool34, label %land.lhs.true35, label %if.end43, !dbg !5529

land.lhs.true35:                                  ; preds = %if.end33
  %37 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5530
  %rx_buf36 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %37, i32 0, i32 1, !dbg !5531
  %38 = load i8*, i8** %rx_buf36, align 8, !dbg !5531
  %39 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5532
  %dummy_rx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %39, i32 0, i32 62, !dbg !5533
  %40 = load i8*, i8** %dummy_rx, align 8, !dbg !5533
  %cmp37 = icmp ne i8* %38, %40, !dbg !5534
  br i1 %cmp37, label %if.then39, label %if.end43, !dbg !5535

if.then39:                                        ; preds = %land.lhs.true35
  %41 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !5536
  %len40 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %41, i32 0, i32 2, !dbg !5537
  %42 = load i32, i32* %len40, align 8, !dbg !5537
  %conv41 = zext i32 %42 to i64, !dbg !5536
  %43 = load %struct.spi_statistics*, %struct.spi_statistics** %stats.addr, align 8, !dbg !5538
  %bytes_rx = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %43, i32 0, i32 9, !dbg !5539
  %44 = load i64, i64* %bytes_rx, align 8, !dbg !5540
  %add42 = add i64 %44, %conv41, !dbg !5540
  store i64 %add42, i64* %bytes_rx, align 8, !dbg !5540
  br label %if.end43, !dbg !5538

if.end43:                                         ; preds = %if.then39, %land.lhs.true35, %if.end33
  %45 = load %struct.spi_statistics*, %struct.spi_statistics** %stats.addr, align 8, !dbg !5541
  %lock44 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %45, i32 0, i32 0, !dbg !5542
  %46 = load i64, i64* %flags, align 8, !dbg !5543
  store %struct.spinlock* %lock44, %struct.spinlock** %lock.addr.i45, align 8
  store i64 %46, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !5547
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !5547
  store i32 1, i32* %tmp.i, align 4, !dbg !5547
  %47 = load i32, i32* %tmp.i, align 4, !dbg !5547
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !5554
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !5554
  store i32 1, i32* %tmp8.i, align 4, !dbg !5554
  %48 = load i32, i32* %tmp8.i, align 4, !dbg !5554
  %49 = load i64, i64* %flags.addr.i, align 8, !dbg !5556
  call void @arch_local_irq_restore(i64 %49) #12, !dbg !5556
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !5557, !srcloc !5559
  %50 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i45, align 8, !dbg !5560
  %51 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %50, i32 0, i32 0, !dbg !5560
  %rlock.i46 = bitcast %union.anon* %51 to %struct.raw_spinlock*, !dbg !5560
  ret void, !dbg !5562
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_irq_save() #0 !dbg !5563 {
entry:
  %f = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %f, metadata !5567, metadata !DIExpression()), !dbg !5568
  %call = call i64 @arch_local_save_flags() #11, !dbg !5569
  store i64 %call, i64* %f, align 8, !dbg !5570
  call void @arch_local_irq_disable() #11, !dbg !5571
  %0 = load i64, i64* %f, align 8, !dbg !5572
  ret i64 %0, !dbg !5573
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_device_id* @spi_get_device_id(%struct.spi_device* %sdev) #0 !dbg !5574 {
entry:
  %sdev.addr = alloca %struct.spi_device*, align 8
  %sdrv = alloca %struct.spi_driver*, align 8
  store %struct.spi_device* %sdev, %struct.spi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %sdev.addr, metadata !5579, metadata !DIExpression()), !dbg !5580
  call void @llvm.dbg.declare(metadata %struct.spi_driver** %sdrv, metadata !5581, metadata !DIExpression()), !dbg !5584
  %0 = load %struct.spi_device*, %struct.spi_device** %sdev.addr, align 8, !dbg !5585
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 0, !dbg !5586
  %driver = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6, !dbg !5587
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !5587
  %call = call %struct.spi_driver* @to_spi_driver(%struct.device_driver* %1) #11, !dbg !5588
  store %struct.spi_driver* %call, %struct.spi_driver** %sdrv, align 8, !dbg !5584
  %2 = load %struct.spi_driver*, %struct.spi_driver** %sdrv, align 8, !dbg !5589
  %id_table = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %2, i32 0, i32 0, !dbg !5590
  %3 = load %struct.spi_device_id*, %struct.spi_device_id** %id_table, align 8, !dbg !5590
  %4 = load %struct.spi_device*, %struct.spi_device** %sdev.addr, align 8, !dbg !5591
  %call1 = call %struct.spi_device_id* @spi_match_id(%struct.spi_device_id* %3, %struct.spi_device* %4) #11, !dbg !5592
  ret %struct.spi_device_id* %call1, !dbg !5593
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_driver* @to_spi_driver(%struct.device_driver* %drv) #0 !dbg !5594 {
entry:
  %drv.addr = alloca %struct.device_driver*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_driver*, align 8
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !5597, metadata !DIExpression()), !dbg !5598
  %0 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !5599
  %tobool = icmp ne %struct.device_driver* %0, null, !dbg !5599
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5599

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !5600, metadata !DIExpression()), !dbg !5602
  %1 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !5602
  %2 = bitcast %struct.device_driver* %1 to i8*, !dbg !5602
  store i8* %2, i8** %__mptr, align 8, !dbg !5602
  br label %do.body, !dbg !5602

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !5603

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !5602
  %add.ptr = getelementptr i8, i8* %3, i64 -32, !dbg !5602
  %4 = bitcast i8* %add.ptr to %struct.spi_driver*, !dbg !5602
  store %struct.spi_driver* %4, %struct.spi_driver** %tmp, align 8, !dbg !5603
  %5 = load %struct.spi_driver*, %struct.spi_driver** %tmp, align 8, !dbg !5602
  br label %cond.end, !dbg !5599

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5599

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.spi_driver* [ %5, %do.end ], [ null, %cond.false ], !dbg !5599
  ret %struct.spi_driver* %cond, !dbg !5605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_device_id* @spi_match_id(%struct.spi_device_id* %id, %struct.spi_device* %sdev) #0 !dbg !5606 {
entry:
  %retval = alloca %struct.spi_device_id*, align 8
  %id.addr = alloca %struct.spi_device_id*, align 8
  %sdev.addr = alloca %struct.spi_device*, align 8
  store %struct.spi_device_id* %id, %struct.spi_device_id** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device_id** %id.addr, metadata !5609, metadata !DIExpression()), !dbg !5610
  store %struct.spi_device* %sdev, %struct.spi_device** %sdev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %sdev.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  br label %while.cond, !dbg !5613

while.cond:                                       ; preds = %if.end, %entry
  %0 = load %struct.spi_device_id*, %struct.spi_device_id** %id.addr, align 8, !dbg !5614
  %name = getelementptr inbounds %struct.spi_device_id, %struct.spi_device_id* %0, i32 0, i32 0, !dbg !5615
  %arrayidx = getelementptr [32 x i8], [32 x i8]* %name, i64 0, i64 0, !dbg !5614
  %1 = load i8, i8* %arrayidx, align 8, !dbg !5614
  %tobool = icmp ne i8 %1, 0, !dbg !5613
  br i1 %tobool, label %while.body, label %while.end, !dbg !5613

while.body:                                       ; preds = %while.cond
  %2 = load %struct.spi_device*, %struct.spi_device** %sdev.addr, align 8, !dbg !5616
  %modalias = getelementptr inbounds %struct.spi_device, %struct.spi_device* %2, i32 0, i32 11, !dbg !5619
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !5616
  %3 = load %struct.spi_device_id*, %struct.spi_device_id** %id.addr, align 8, !dbg !5620
  %name1 = getelementptr inbounds %struct.spi_device_id, %struct.spi_device_id* %3, i32 0, i32 0, !dbg !5621
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %name1, i64 0, i64 0, !dbg !5620
  %call = call i32 @strcmp(i8* %arraydecay, i8* %arraydecay2) #11, !dbg !5622
  %tobool3 = icmp ne i32 %call, 0, !dbg !5622
  br i1 %tobool3, label %if.end, label %if.then, !dbg !5623

if.then:                                          ; preds = %while.body
  %4 = load %struct.spi_device_id*, %struct.spi_device_id** %id.addr, align 8, !dbg !5624
  store %struct.spi_device_id* %4, %struct.spi_device_id** %retval, align 8, !dbg !5625
  br label %return, !dbg !5625

if.end:                                           ; preds = %while.body
  %5 = load %struct.spi_device_id*, %struct.spi_device_id** %id.addr, align 8, !dbg !5626
  %incdec.ptr = getelementptr %struct.spi_device_id, %struct.spi_device_id* %5, i32 1, !dbg !5626
  store %struct.spi_device_id* %incdec.ptr, %struct.spi_device_id** %id.addr, align 8, !dbg !5626
  br label %while.cond, !dbg !5613, !llvm.loop !5627

while.end:                                        ; preds = %while.cond
  store %struct.spi_device_id* null, %struct.spi_device_id** %retval, align 8, !dbg !5629
  br label %return, !dbg !5629

return:                                           ; preds = %while.end, %if.then
  %6 = load %struct.spi_device_id*, %struct.spi_device_id** %retval, align 8, !dbg !5630
  ret %struct.spi_device_id* %6, !dbg !5630
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_match_device(%struct.device* %dev, %struct.device_driver* %drv) #0 !dbg !5631 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %drv.addr = alloca %struct.device_driver*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %sdrv = alloca %struct.spi_driver*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5632, metadata !DIExpression()), !dbg !5633
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !5636, metadata !DIExpression()), !dbg !5637
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5638
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !5639
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !5637
  call void @llvm.dbg.declare(metadata %struct.spi_driver** %sdrv, metadata !5640, metadata !DIExpression()), !dbg !5641
  %1 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !5642
  %call1 = call %struct.spi_driver* @to_spi_driver(%struct.device_driver* %1) #11, !dbg !5643
  store %struct.spi_driver* %call1, %struct.spi_driver** %sdrv, align 8, !dbg !5641
  %2 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5644
  %driver_override = getelementptr inbounds %struct.spi_device, %struct.spi_device* %2, i32 0, i32 12, !dbg !5646
  %3 = load i8*, i8** %driver_override, align 8, !dbg !5646
  %tobool = icmp ne i8* %3, null, !dbg !5644
  br i1 %tobool, label %if.then, label %if.end, !dbg !5647

if.then:                                          ; preds = %entry
  %4 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5648
  %driver_override2 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %4, i32 0, i32 12, !dbg !5649
  %5 = load i8*, i8** %driver_override2, align 8, !dbg !5649
  %6 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !5650
  %name = getelementptr inbounds %struct.device_driver, %struct.device_driver* %6, i32 0, i32 0, !dbg !5651
  %7 = load i8*, i8** %name, align 8, !dbg !5651
  %call3 = call i32 @strcmp(i8* %5, i8* %7) #11, !dbg !5652
  %cmp = icmp eq i32 %call3, 0, !dbg !5653
  %conv = zext i1 %cmp to i32, !dbg !5653
  store i32 %conv, i32* %retval, align 4, !dbg !5654
  br label %return, !dbg !5654

if.end:                                           ; preds = %entry
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5655
  %9 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !5657
  %call4 = call i32 @of_driver_match_device(%struct.device* %8, %struct.device_driver* %9) #11, !dbg !5658
  %tobool5 = icmp ne i32 %call4, 0, !dbg !5658
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !5659

if.then6:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !5660
  br label %return, !dbg !5660

if.end7:                                          ; preds = %if.end
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5661
  %11 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !5663
  %call8 = call zeroext i1 @acpi_driver_match_device(%struct.device* %10, %struct.device_driver* %11) #11, !dbg !5664
  br i1 %call8, label %if.then9, label %if.end10, !dbg !5665

if.then9:                                         ; preds = %if.end7
  store i32 1, i32* %retval, align 4, !dbg !5666
  br label %return, !dbg !5666

if.end10:                                         ; preds = %if.end7
  %12 = load %struct.spi_driver*, %struct.spi_driver** %sdrv, align 8, !dbg !5667
  %id_table = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %12, i32 0, i32 0, !dbg !5669
  %13 = load %struct.spi_device_id*, %struct.spi_device_id** %id_table, align 8, !dbg !5669
  %tobool11 = icmp ne %struct.spi_device_id* %13, null, !dbg !5667
  br i1 %tobool11, label %if.then12, label %if.end17, !dbg !5670

if.then12:                                        ; preds = %if.end10
  %14 = load %struct.spi_driver*, %struct.spi_driver** %sdrv, align 8, !dbg !5671
  %id_table13 = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %14, i32 0, i32 0, !dbg !5672
  %15 = load %struct.spi_device_id*, %struct.spi_device_id** %id_table13, align 8, !dbg !5672
  %16 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5673
  %call14 = call %struct.spi_device_id* @spi_match_id(%struct.spi_device_id* %15, %struct.spi_device* %16) #11, !dbg !5674
  %tobool15 = icmp ne %struct.spi_device_id* %call14, null, !dbg !5675
  %lnot = xor i1 %tobool15, true, !dbg !5675
  %lnot16 = xor i1 %lnot, true, !dbg !5676
  %lnot.ext = zext i1 %lnot16 to i32, !dbg !5676
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !5677
  br label %return, !dbg !5677

if.end17:                                         ; preds = %if.end10
  %17 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5678
  %modalias = getelementptr inbounds %struct.spi_device, %struct.spi_device* %17, i32 0, i32 11, !dbg !5679
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !5678
  %18 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !5680
  %name18 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %18, i32 0, i32 0, !dbg !5681
  %19 = load i8*, i8** %name18, align 8, !dbg !5681
  %call19 = call i32 @strcmp(i8* %arraydecay, i8* %19) #11, !dbg !5682
  %cmp20 = icmp eq i32 %call19, 0, !dbg !5683
  %conv21 = zext i1 %cmp20 to i32, !dbg !5683
  store i32 %conv21, i32* %retval, align 4, !dbg !5684
  br label %return, !dbg !5684

return:                                           ; preds = %if.end17, %if.then12, %if.then9, %if.then6, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !5685
  ret i32 %20, !dbg !5685
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_uevent(%struct.device* %dev, %struct.kobj_uevent_env* %env) #0 !dbg !5686 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %env.addr = alloca %struct.kobj_uevent_env*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %rc = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  store %struct.kobj_uevent_env* %env, %struct.kobj_uevent_env** %env.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobj_uevent_env** %env.addr, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !5691, metadata !DIExpression()), !dbg !5692
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5693
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !5694
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !5692
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !5695, metadata !DIExpression()), !dbg !5696
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5697
  %2 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !5698
  %call1 = call i32 @acpi_device_uevent_modalias(%struct.device* %1, %struct.kobj_uevent_env* %2) #11, !dbg !5699
  store i32 %call1, i32* %rc, align 4, !dbg !5700
  %3 = load i32, i32* %rc, align 4, !dbg !5701
  %cmp = icmp ne i32 %3, -19, !dbg !5703
  br i1 %cmp, label %if.then, label %if.end, !dbg !5704

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %rc, align 4, !dbg !5705
  store i32 %4, i32* %retval, align 4, !dbg !5706
  br label %return, !dbg !5706

if.end:                                           ; preds = %entry
  %5 = load %struct.kobj_uevent_env*, %struct.kobj_uevent_env** %env.addr, align 8, !dbg !5707
  %6 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5708
  %modalias = getelementptr inbounds %struct.spi_device, %struct.spi_device* %6, i32 0, i32 11, !dbg !5709
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !5708
  %call2 = call i32 (%struct.kobj_uevent_env*, i8*, ...) @add_uevent_var(%struct.kobj_uevent_env* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay) #11, !dbg !5710
  store i32 %call2, i32* %retval, align 4, !dbg !5711
  br label %return, !dbg !5711

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5712
  ret i32 %7, !dbg !5712
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @__spi_register_driver(%struct.module* %owner, %struct.spi_driver* %sdrv) #0 !dbg !5713 {
entry:
  %owner.addr = alloca %struct.module*, align 8
  %sdrv.addr = alloca %struct.spi_driver*, align 8
  store %struct.module* %owner, %struct.module** %owner.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.module** %owner.addr, metadata !5716, metadata !DIExpression()), !dbg !5717
  store %struct.spi_driver* %sdrv, %struct.spi_driver** %sdrv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_driver** %sdrv.addr, metadata !5718, metadata !DIExpression()), !dbg !5719
  %0 = load %struct.module*, %struct.module** %owner.addr, align 8, !dbg !5720
  %1 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5721
  %driver = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %1, i32 0, i32 4, !dbg !5722
  %owner1 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver, i32 0, i32 2, !dbg !5723
  store %struct.module* %0, %struct.module** %owner1, align 8, !dbg !5724
  %2 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5725
  %driver2 = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %2, i32 0, i32 4, !dbg !5726
  %bus = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver2, i32 0, i32 1, !dbg !5727
  store %struct.bus_type* @spi_bus_type, %struct.bus_type** %bus, align 8, !dbg !5728
  %3 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5729
  %probe = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %3, i32 0, i32 1, !dbg !5731
  %4 = load i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)** %probe, align 8, !dbg !5731
  %tobool = icmp ne i32 (%struct.spi_device*)* %4, null, !dbg !5729
  br i1 %tobool, label %if.then, label %if.end, !dbg !5732

if.then:                                          ; preds = %entry
  %5 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5733
  %driver3 = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %5, i32 0, i32 4, !dbg !5734
  %probe4 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver3, i32 0, i32 8, !dbg !5735
  store i32 (%struct.device*)* @spi_drv_probe, i32 (%struct.device*)** %probe4, align 8, !dbg !5736
  br label %if.end, !dbg !5733

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5737
  %remove = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %6, i32 0, i32 2, !dbg !5739
  %7 = load i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)** %remove, align 8, !dbg !5739
  %tobool5 = icmp ne i32 (%struct.spi_device*)* %7, null, !dbg !5737
  br i1 %tobool5, label %if.then6, label %if.end9, !dbg !5740

if.then6:                                         ; preds = %if.end
  %8 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5741
  %driver7 = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %8, i32 0, i32 4, !dbg !5742
  %remove8 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver7, i32 0, i32 10, !dbg !5743
  store i32 (%struct.device*)* @spi_drv_remove, i32 (%struct.device*)** %remove8, align 8, !dbg !5744
  br label %if.end9, !dbg !5741

if.end9:                                          ; preds = %if.then6, %if.end
  %9 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5745
  %shutdown = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %9, i32 0, i32 3, !dbg !5747
  %10 = load void (%struct.spi_device*)*, void (%struct.spi_device*)** %shutdown, align 8, !dbg !5747
  %tobool10 = icmp ne void (%struct.spi_device*)* %10, null, !dbg !5745
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !5748

if.then11:                                        ; preds = %if.end9
  %11 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5749
  %driver12 = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %11, i32 0, i32 4, !dbg !5750
  %shutdown13 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %driver12, i32 0, i32 11, !dbg !5751
  store void (%struct.device*)* @spi_drv_shutdown, void (%struct.device*)** %shutdown13, align 8, !dbg !5752
  br label %if.end14, !dbg !5749

if.end14:                                         ; preds = %if.then11, %if.end9
  %12 = load %struct.spi_driver*, %struct.spi_driver** %sdrv.addr, align 8, !dbg !5753
  %driver15 = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %12, i32 0, i32 4, !dbg !5754
  %call = call i32 @driver_register(%struct.device_driver* %driver15) #11, !dbg !5755
  ret i32 %call, !dbg !5756
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_drv_probe(%struct.device* %dev) #0 !dbg !5757 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %sdrv = alloca %struct.spi_driver*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5758, metadata !DIExpression()), !dbg !5759
  call void @llvm.dbg.declare(metadata %struct.spi_driver** %sdrv, metadata !5760, metadata !DIExpression()), !dbg !5761
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5762
  %driver = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 6, !dbg !5763
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !5763
  %call = call %struct.spi_driver* @to_spi_driver(%struct.device_driver* %1) #11, !dbg !5764
  store %struct.spi_driver* %call, %struct.spi_driver** %sdrv, align 8, !dbg !5761
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !5765, metadata !DIExpression()), !dbg !5766
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5767
  %call1 = call %struct.spi_device* @to_spi_device(%struct.device* %2) #11, !dbg !5768
  store %struct.spi_device* %call1, %struct.spi_device** %spi, align 8, !dbg !5766
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5769, metadata !DIExpression()), !dbg !5770
  %3 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5771
  %of_node = getelementptr inbounds %struct.device, %struct.device* %3, i32 0, i32 23, !dbg !5772
  %4 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !5772
  %call2 = call i32 @of_clk_set_defaults(%struct.device_node* %4, i1 zeroext false) #11, !dbg !5773
  store i32 %call2, i32* %ret, align 4, !dbg !5774
  %5 = load i32, i32* %ret, align 4, !dbg !5775
  %tobool = icmp ne i32 %5, 0, !dbg !5775
  br i1 %tobool, label %if.then, label %if.end, !dbg !5777

if.then:                                          ; preds = %entry
  %6 = load i32, i32* %ret, align 4, !dbg !5778
  store i32 %6, i32* %retval, align 4, !dbg !5779
  br label %return, !dbg !5779

if.end:                                           ; preds = %entry
  %7 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5780
  %of_node3 = getelementptr inbounds %struct.device, %struct.device* %7, i32 0, i32 23, !dbg !5782
  %8 = load %struct.device_node*, %struct.device_node** %of_node3, align 8, !dbg !5782
  %tobool4 = icmp ne %struct.device_node* %8, null, !dbg !5780
  br i1 %tobool4, label %if.then5, label %if.end16, !dbg !5783

if.then5:                                         ; preds = %if.end
  %9 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5784
  %of_node6 = getelementptr inbounds %struct.device, %struct.device* %9, i32 0, i32 23, !dbg !5786
  %10 = load %struct.device_node*, %struct.device_node** %of_node6, align 8, !dbg !5786
  %call7 = call i32 @of_irq_get(%struct.device_node* %10, i32 0) #11, !dbg !5787
  %11 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5788
  %irq = getelementptr inbounds %struct.spi_device, %struct.spi_device* %11, i32 0, i32 8, !dbg !5789
  store i32 %call7, i32* %irq, align 4, !dbg !5790
  %12 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5791
  %irq8 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %12, i32 0, i32 8, !dbg !5793
  %13 = load i32, i32* %irq8, align 4, !dbg !5793
  %cmp = icmp eq i32 %13, -517, !dbg !5794
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !5795

if.then9:                                         ; preds = %if.then5
  store i32 -517, i32* %retval, align 4, !dbg !5796
  br label %return, !dbg !5796

if.end10:                                         ; preds = %if.then5
  %14 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5797
  %irq11 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %14, i32 0, i32 8, !dbg !5799
  %15 = load i32, i32* %irq11, align 4, !dbg !5799
  %cmp12 = icmp slt i32 %15, 0, !dbg !5800
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !5801

if.then13:                                        ; preds = %if.end10
  %16 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5802
  %irq14 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %16, i32 0, i32 8, !dbg !5803
  store i32 0, i32* %irq14, align 4, !dbg !5804
  br label %if.end15, !dbg !5802

if.end15:                                         ; preds = %if.then13, %if.end10
  br label %if.end16, !dbg !5805

if.end16:                                         ; preds = %if.end15, %if.end
  %17 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5806
  %call17 = call i32 @dev_pm_domain_attach(%struct.device* %17, i1 zeroext true) #11, !dbg !5807
  store i32 %call17, i32* %ret, align 4, !dbg !5808
  %18 = load i32, i32* %ret, align 4, !dbg !5809
  %tobool18 = icmp ne i32 %18, 0, !dbg !5809
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !5811

if.then19:                                        ; preds = %if.end16
  %19 = load i32, i32* %ret, align 4, !dbg !5812
  store i32 %19, i32* %retval, align 4, !dbg !5813
  br label %return, !dbg !5813

if.end20:                                         ; preds = %if.end16
  %20 = load %struct.spi_driver*, %struct.spi_driver** %sdrv, align 8, !dbg !5814
  %probe = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %20, i32 0, i32 1, !dbg !5815
  %21 = load i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)** %probe, align 8, !dbg !5815
  %22 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5816
  %call21 = call i32 %21(%struct.spi_device* %22) #11, !dbg !5814
  store i32 %call21, i32* %ret, align 4, !dbg !5817
  %23 = load i32, i32* %ret, align 4, !dbg !5818
  %tobool22 = icmp ne i32 %23, 0, !dbg !5818
  br i1 %tobool22, label %if.then23, label %if.end24, !dbg !5820

if.then23:                                        ; preds = %if.end20
  %24 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5821
  call void @dev_pm_domain_detach(%struct.device* %24, i1 zeroext true) #11, !dbg !5822
  br label %if.end24, !dbg !5822

if.end24:                                         ; preds = %if.then23, %if.end20
  %25 = load i32, i32* %ret, align 4, !dbg !5823
  store i32 %25, i32* %retval, align 4, !dbg !5824
  br label %return, !dbg !5824

return:                                           ; preds = %if.end24, %if.then19, %if.then9, %if.then
  %26 = load i32, i32* %retval, align 4, !dbg !5825
  ret i32 %26, !dbg !5825
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_drv_remove(%struct.device* %dev) #0 !dbg !5826 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %sdrv = alloca %struct.spi_driver*, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5827, metadata !DIExpression()), !dbg !5828
  call void @llvm.dbg.declare(metadata %struct.spi_driver** %sdrv, metadata !5829, metadata !DIExpression()), !dbg !5830
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5831
  %driver = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 6, !dbg !5832
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !5832
  %call = call %struct.spi_driver* @to_spi_driver(%struct.device_driver* %1) #11, !dbg !5833
  store %struct.spi_driver* %call, %struct.spi_driver** %sdrv, align 8, !dbg !5830
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !5834, metadata !DIExpression()), !dbg !5835
  %2 = load %struct.spi_driver*, %struct.spi_driver** %sdrv, align 8, !dbg !5836
  %remove = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %2, i32 0, i32 2, !dbg !5837
  %3 = load i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)** %remove, align 8, !dbg !5837
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5838
  %call1 = call %struct.spi_device* @to_spi_device(%struct.device* %4) #11, !dbg !5839
  %call2 = call i32 %3(%struct.spi_device* %call1) #11, !dbg !5836
  store i32 %call2, i32* %ret, align 4, !dbg !5840
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5841
  call void @dev_pm_domain_detach(%struct.device* %5, i1 zeroext true) #11, !dbg !5842
  %6 = load i32, i32* %ret, align 4, !dbg !5843
  ret i32 %6, !dbg !5844
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_drv_shutdown(%struct.device* %dev) #0 !dbg !5845 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %sdrv = alloca %struct.spi_driver*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !5846, metadata !DIExpression()), !dbg !5847
  call void @llvm.dbg.declare(metadata %struct.spi_driver** %sdrv, metadata !5848, metadata !DIExpression()), !dbg !5849
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5850
  %driver = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 6, !dbg !5851
  %1 = load %struct.device_driver*, %struct.device_driver** %driver, align 8, !dbg !5851
  %call = call %struct.spi_driver* @to_spi_driver(%struct.device_driver* %1) #11, !dbg !5852
  store %struct.spi_driver* %call, %struct.spi_driver** %sdrv, align 8, !dbg !5849
  %2 = load %struct.spi_driver*, %struct.spi_driver** %sdrv, align 8, !dbg !5853
  %shutdown = getelementptr inbounds %struct.spi_driver, %struct.spi_driver* %2, i32 0, i32 3, !dbg !5854
  %3 = load void (%struct.spi_device*)*, void (%struct.spi_device*)** %shutdown, align 8, !dbg !5854
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !5855
  %call1 = call %struct.spi_device* @to_spi_device(%struct.device* %4) #11, !dbg !5856
  call void %3(%struct.spi_device* %call1) #11, !dbg !5853
  ret void, !dbg !5857
}

; Function Attrs: noredzone
declare dso_local i32 @driver_register(%struct.device_driver*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_device* @spi_alloc_device(%struct.spi_controller* %ctlr) #0 !dbg !5858 {
entry:
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !5861
  %retval = alloca %struct.spi_device*, align 8
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !5864, metadata !DIExpression()), !dbg !5865
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !5866, metadata !DIExpression()), !dbg !5867
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5868
  %call = call %struct.spi_controller* @spi_controller_get(%struct.spi_controller* %0) #11, !dbg !5870
  %tobool = icmp ne %struct.spi_controller* %call, null, !dbg !5870
  br i1 %tobool, label %if.end, label %if.then, !dbg !5871

if.then:                                          ; preds = %entry
  store %struct.spi_device* null, %struct.spi_device** %retval, align 8, !dbg !5872
  br label %return, !dbg !5872

if.end:                                           ; preds = %entry
  %call1 = call i8* @kzalloc(i64 1032, i32 3264) #11, !dbg !5873
  %1 = bitcast i8* %call1 to %struct.spi_device*, !dbg !5873
  store %struct.spi_device* %1, %struct.spi_device** %spi, align 8, !dbg !5874
  %2 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5875
  %tobool2 = icmp ne %struct.spi_device* %2, null, !dbg !5875
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5877

if.then3:                                         ; preds = %if.end
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5878
  call void @spi_controller_put(%struct.spi_controller* %3) #11, !dbg !5880
  store %struct.spi_device* null, %struct.spi_device** %retval, align 8, !dbg !5881
  br label %return, !dbg !5881

if.end4:                                          ; preds = %if.end
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5882
  %5 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5883
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %5, i32 0, i32 1, !dbg !5884
  store %struct.spi_controller* %4, %struct.spi_controller** %controller, align 8, !dbg !5885
  %6 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5886
  %master = getelementptr inbounds %struct.spi_device, %struct.spi_device* %6, i32 0, i32 2, !dbg !5887
  store %struct.spi_controller* %4, %struct.spi_controller** %master, align 8, !dbg !5888
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5889
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 0, !dbg !5890
  %8 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5891
  %dev5 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %8, i32 0, i32 0, !dbg !5892
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !5893
  store %struct.device* %dev, %struct.device** %parent, align 8, !dbg !5894
  %9 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5895
  %dev6 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %9, i32 0, i32 0, !dbg !5896
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev6, i32 0, i32 5, !dbg !5897
  store %struct.bus_type* @spi_bus_type, %struct.bus_type** %bus, align 8, !dbg !5898
  %10 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5899
  %dev7 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %10, i32 0, i32 0, !dbg !5900
  %release = getelementptr inbounds %struct.device, %struct.device* %dev7, i32 0, i32 31, !dbg !5901
  store void (%struct.device*)* @spidev_release, void (%struct.device*)** %release, align 8, !dbg !5902
  %11 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5903
  %cs_gpio = getelementptr inbounds %struct.spi_device, %struct.spi_device* %11, i32 0, i32 13, !dbg !5904
  store i32 -2, i32* %cs_gpio, align 8, !dbg !5905
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5906
  %buswidth_override_bits = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 6, !dbg !5907
  %13 = load i32, i32* %buswidth_override_bits, align 4, !dbg !5907
  %14 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5908
  %mode = getelementptr inbounds %struct.spi_device, %struct.spi_device* %14, i32 0, i32 7, !dbg !5909
  store i32 %13, i32* %mode, align 8, !dbg !5910
  br label %do.body, !dbg !5911

do.body:                                          ; preds = %if.end4
  %15 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5912
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %15, i32 0, i32 16, !dbg !5912
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics, i32 0, i32 0, !dbg !5912
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %16 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !5913
  %17 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %16, i32 0, i32 0, !dbg !5914
  %rlock.i = bitcast %union.anon* %17 to %struct.raw_spinlock*, !dbg !5914
  %18 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5912
  %statistics9 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %18, i32 0, i32 16, !dbg !5912
  %lock10 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics9, i32 0, i32 0, !dbg !5912
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !5912
  %rlock = bitcast %union.anon* %19 to %struct.raw_spinlock*, !dbg !5912
  %20 = bitcast %struct.spinlock* %lock10 to i8*, !dbg !5912
  %21 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !5912
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 1 %21, i64 0, i1 false), !dbg !5912
  br label %do.end, !dbg !5912

do.end:                                           ; preds = %do.body
  %22 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5915
  %dev11 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %22, i32 0, i32 0, !dbg !5916
  call void @device_initialize(%struct.device* %dev11) #11, !dbg !5917
  %23 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !5918
  store %struct.spi_device* %23, %struct.spi_device** %retval, align 8, !dbg !5919
  br label %return, !dbg !5919

return:                                           ; preds = %do.end, %if.then3, %if.then
  %24 = load %struct.spi_device*, %struct.spi_device** %retval, align 8, !dbg !5920
  ret %struct.spi_device* %24, !dbg !5920
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_controller* @spi_controller_get(%struct.spi_controller* %ctlr) #0 !dbg !5921 {
entry:
  %retval = alloca %struct.spi_controller*, align 8
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !5924, metadata !DIExpression()), !dbg !5925
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5926
  %tobool = icmp ne %struct.spi_controller* %0, null, !dbg !5926
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !5928

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5929
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 0, !dbg !5930
  %call = call %struct.device* @get_device(%struct.device* %dev) #11, !dbg !5931
  %tobool1 = icmp ne %struct.device* %call, null, !dbg !5931
  br i1 %tobool1, label %if.end, label %if.then, !dbg !5932

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.spi_controller* null, %struct.spi_controller** %retval, align 8, !dbg !5933
  br label %return, !dbg !5933

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !5934
  store %struct.spi_controller* %2, %struct.spi_controller** %retval, align 8, !dbg !5935
  br label %return, !dbg !5935

return:                                           ; preds = %if.end, %if.then
  %3 = load %struct.spi_controller*, %struct.spi_controller** %retval, align 8, !dbg !5936
  ret %struct.spi_controller* %3, !dbg !5936
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kzalloc(i64 %size, i32 %flags) #0 !dbg !5937 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5940, metadata !DIExpression()), !dbg !5944
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5950, metadata !DIExpression()), !dbg !5951
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5952, metadata !DIExpression()), !dbg !5953
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5954, metadata !DIExpression()), !dbg !5955
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5956, metadata !DIExpression()), !dbg !5960
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5962, metadata !DIExpression()), !dbg !5966
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5968, metadata !DIExpression()), !dbg !5972
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5977, metadata !DIExpression()), !dbg !5978
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5979, metadata !DIExpression()), !dbg !5980
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5981, metadata !DIExpression()), !dbg !5982
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5983, metadata !DIExpression()), !dbg !5984
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5985, metadata !DIExpression()), !dbg !5986
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5987, metadata !DIExpression()), !dbg !5988
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5989, metadata !DIExpression()), !dbg !5990
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5991, metadata !DIExpression()), !dbg !5992
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !5993, metadata !DIExpression()), !dbg !5994
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !5995, metadata !DIExpression()), !dbg !5996
  %0 = load i64, i64* %size.addr, align 8, !dbg !5997
  %1 = load i32, i32* %flags.addr, align 4, !dbg !5998
  %or = or i32 %1, 256, !dbg !5999
  store i64 %0, i64* %size.addr.i, align 8
  store i32 %or, i32* %flags.addr.i, align 4
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !6000
  %3 = call i1 @llvm.is.constant.i64(i64 %2) #7, !dbg !6001
  br i1 %3, label %if.then.i, label %if.end9.i, !dbg !6002

if.then.i:                                        ; preds = %entry
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !6003
  %cmp.i = icmp ugt i64 %4, 8192, !dbg !6004
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !6005

if.then1.i:                                       ; preds = %if.then.i
  %5 = load i64, i64* %size.addr.i, align 8, !dbg !6006
  %6 = load i32, i32* %flags.addr.i, align 4, !dbg !6007
  store i64 %5, i64* %size.addr.i.i, align 8
  store i32 %6, i32* %flags.addr.i.i, align 4
  %7 = load i64, i64* %size.addr.i.i, align 8, !dbg !6008
  %call.i.i = call i32 @get_order(i64 %7) #13, !dbg !6009
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !5986
  %8 = load i64, i64* %size.addr.i.i, align 8, !dbg !6010
  %9 = load i32, i32* %flags.addr.i.i, align 4, !dbg !6011
  %10 = load i32, i32* %order.i.i, align 4, !dbg !6012
  store i64 %8, i64* %size.addr.i.i.i, align 8
  store i32 %9, i32* %flags.addr.i.i.i, align 4
  store i32 %10, i32* %order.addr.i.i.i, align 4
  %11 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !6013
  %12 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !6014
  %13 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !6015
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %11, i32 %12, i32 %13) #12, !dbg !6016
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !6016
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !6016
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !6016
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !6016
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !6017
  br label %kmalloc.exit, !dbg !6017

if.end.i:                                         ; preds = %if.then.i
  %14 = load i64, i64* %size.addr.i, align 8, !dbg !6018
  store i64 %14, i64* %size.addr.i11.i, align 8
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6019
  %tobool.i.i = icmp ne i64 %15, 0, !dbg !6019
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !6021

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !6022
  br label %kmalloc_index.exit.i, !dbg !6022

if.end.i.i:                                       ; preds = %if.end.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6023
  %cmp.i.i = icmp ule i64 %16, 8, !dbg !6025
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !6026

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6027
  br label %kmalloc_index.exit.i, !dbg !6027

if.end2.i.i:                                      ; preds = %if.end.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6028
  %cmp3.i.i = icmp ugt i64 %17, 64, !dbg !6030
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !6031

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6032
  %cmp4.i.i = icmp ule i64 %18, 96, !dbg !6033
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !6034

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !6035
  br label %kmalloc_index.exit.i, !dbg !6035

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6036
  %cmp7.i.i = icmp ugt i64 %19, 128, !dbg !6038
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !6039

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6040
  %cmp9.i.i = icmp ule i64 %20, 192, !dbg !6041
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !6042

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !6043
  br label %kmalloc_index.exit.i, !dbg !6043

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6044
  %cmp12.i.i = icmp ule i64 %21, 8, !dbg !6046
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !6047

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !6048
  br label %kmalloc_index.exit.i, !dbg !6048

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6049
  %cmp15.i.i = icmp ule i64 %22, 16, !dbg !6051
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !6052

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !6053
  br label %kmalloc_index.exit.i, !dbg !6053

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6054
  %cmp18.i.i = icmp ule i64 %23, 32, !dbg !6056
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !6057

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !6058
  br label %kmalloc_index.exit.i, !dbg !6058

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6059
  %cmp21.i.i = icmp ule i64 %24, 64, !dbg !6061
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !6062

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !6063
  br label %kmalloc_index.exit.i, !dbg !6063

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6064
  %cmp24.i.i = icmp ule i64 %25, 128, !dbg !6066
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !6067

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !6068
  br label %kmalloc_index.exit.i, !dbg !6068

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6069
  %cmp27.i.i = icmp ule i64 %26, 256, !dbg !6071
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !6072

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !6073
  br label %kmalloc_index.exit.i, !dbg !6073

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6074
  %cmp30.i.i = icmp ule i64 %27, 512, !dbg !6076
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !6077

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !6078
  br label %kmalloc_index.exit.i, !dbg !6078

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6079
  %cmp33.i.i = icmp ule i64 %28, 1024, !dbg !6081
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !6082

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !6083
  br label %kmalloc_index.exit.i, !dbg !6083

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6084
  %cmp36.i.i = icmp ule i64 %29, 2048, !dbg !6086
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !6087

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !6088
  br label %kmalloc_index.exit.i, !dbg !6088

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6089
  %cmp39.i.i = icmp ule i64 %30, 4096, !dbg !6091
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !6092

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !6093
  br label %kmalloc_index.exit.i, !dbg !6093

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6094
  %cmp42.i.i = icmp ule i64 %31, 8192, !dbg !6096
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !6097

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !6098
  br label %kmalloc_index.exit.i, !dbg !6098

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6099
  %cmp45.i.i = icmp ule i64 %32, 16384, !dbg !6101
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !6102

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !6103
  br label %kmalloc_index.exit.i, !dbg !6103

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6104
  %cmp48.i.i = icmp ule i64 %33, 32768, !dbg !6106
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !6107

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !6108
  br label %kmalloc_index.exit.i, !dbg !6108

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6109
  %cmp51.i.i = icmp ule i64 %34, 65536, !dbg !6111
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !6112

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !6113
  br label %kmalloc_index.exit.i, !dbg !6113

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6114
  %cmp54.i.i = icmp ule i64 %35, 131072, !dbg !6116
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !6117

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !6118
  br label %kmalloc_index.exit.i, !dbg !6118

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6119
  %cmp57.i.i = icmp ule i64 %36, 262144, !dbg !6121
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !6122

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !6123
  br label %kmalloc_index.exit.i, !dbg !6123

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6124
  %cmp60.i.i = icmp ule i64 %37, 524288, !dbg !6126
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !6127

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !6128
  br label %kmalloc_index.exit.i, !dbg !6128

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6129
  %cmp63.i.i = icmp ule i64 %38, 1048576, !dbg !6131
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !6132

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !6133
  br label %kmalloc_index.exit.i, !dbg !6133

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6134
  %cmp66.i.i = icmp ule i64 %39, 2097152, !dbg !6136
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !6137

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !6138
  br label %kmalloc_index.exit.i, !dbg !6138

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6139
  %cmp69.i.i = icmp ule i64 %40, 4194304, !dbg !6141
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !6142

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !6143
  br label %kmalloc_index.exit.i, !dbg !6143

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6144
  %cmp72.i.i = icmp ule i64 %41, 8388608, !dbg !6146
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !6147

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !6148
  br label %kmalloc_index.exit.i, !dbg !6148

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6149
  %cmp75.i.i = icmp ule i64 %42, 16777216, !dbg !6151
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !6152

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !6153
  br label %kmalloc_index.exit.i, !dbg !6153

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6154
  %cmp78.i.i = icmp ule i64 %43, 33554432, !dbg !6156
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !6157

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !6158
  br label %kmalloc_index.exit.i, !dbg !6158

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !6159
  %cmp81.i.i = icmp ule i64 %44, 67108864, !dbg !6161
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !6162

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !6163
  br label %kmalloc_index.exit.i, !dbg !6163

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.113, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !6164, !srcloc !6167
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 230) #7, !dbg !6168, !srcloc !6171
  unreachable, !dbg !6172

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %45 = load i32, i32* %retval.i.i, align 4, !dbg !6173
  store i32 %45, i32* %index.i, align 4, !dbg !6174
  %46 = load i32, i32* %index.i, align 4, !dbg !6175
  %tobool.i = icmp ne i32 %46, 0, !dbg !6175
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !6177

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !6178
  br label %kmalloc.exit, !dbg !6178

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %47 = load i32, i32* %flags.addr.i, align 4, !dbg !6179
  store i32 %47, i32* %flags.addr.i13.i, align 4
  %48 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6180
  %and.i.i = and i32 %48, 17, !dbg !6180
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !6180
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !6180
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !6180
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !6180
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !6182

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !6183
  br label %kmalloc_type.exit.i, !dbg !6183

if.end.i16.i:                                     ; preds = %if.end4.i
  %49 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !6184
  %and2.i.i = and i32 %49, 1, !dbg !6185
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !6184
  %50 = zext i1 %tobool3.i.i to i64, !dbg !6184
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !6184
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !6186
  br label %kmalloc_type.exit.i, !dbg !6186

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %51 = load i32, i32* %retval.i12.i, align 4, !dbg !6187
  %idxprom.i = zext i32 %51 to i64, !dbg !6188
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !6188
  %52 = load i32, i32* %index.i, align 4, !dbg !6189
  %idxprom6.i = zext i32 %52 to i64, !dbg !6188
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !6188
  %53 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !6188
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !6190
  %55 = load i64, i64* %size.addr.i, align 8, !dbg !6191
  store %struct.kmem_cache* %53, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %54, i32* %flags.addr.i17.i, align 4
  store i64 %55, i64* %size.addr.i18.i, align 8
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6192
  %57 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6193
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %56, i32 %57) #12, !dbg !6194
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !6194
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !6194
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !6194
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !6194
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !5955
  %58 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !6195
  %59 = load i8*, i8** %ret.i.i, align 8, !dbg !6196
  %60 = load i64, i64* %size.addr.i18.i, align 8, !dbg !6197
  %61 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !6198
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %58, i8* %59, i64 %60, i32 %61) #12, !dbg !6199
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !6200
  %62 = load i8*, i8** %ret.i.i, align 8, !dbg !6201
  store i8* %62, i8** %retval.i, align 8, !dbg !6202
  br label %kmalloc.exit, !dbg !6202

if.end9.i:                                        ; preds = %entry
  %63 = load i64, i64* %size.addr.i, align 8, !dbg !6203
  %64 = load i32, i32* %flags.addr.i, align 4, !dbg !6204
  %call10.i = call noalias i8* @__kmalloc(i64 %63, i32 %64) #12, !dbg !6205
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !6205
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !6205
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !6205
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !6205
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !6206
  br label %kmalloc.exit, !dbg !6206

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %65 = load i8*, i8** %retval.i, align 8, !dbg !6207
  ret i8* %65, !dbg !6208
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_controller_put(%struct.spi_controller* %ctlr) #0 !dbg !6209 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !6214
  %tobool = icmp ne %struct.spi_controller* %0, null, !dbg !6214
  br i1 %tobool, label %if.then, label %if.end, !dbg !6216

if.then:                                          ; preds = %entry
  %1 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !6217
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 0, !dbg !6218
  call void @put_device(%struct.device* %dev) #11, !dbg !6219
  br label %if.end, !dbg !6219

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6220
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spidev_release(%struct.device* %dev) #0 !dbg !6221 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6222, metadata !DIExpression()), !dbg !6223
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !6224, metadata !DIExpression()), !dbg !6225
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6226
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !6227
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !6225
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6228
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 1, !dbg !6230
  %2 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !6230
  %cleanup = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 21, !dbg !6231
  %3 = load void (%struct.spi_device*)*, void (%struct.spi_device*)** %cleanup, align 8, !dbg !6231
  %tobool = icmp ne void (%struct.spi_device*)* %3, null, !dbg !6228
  br i1 %tobool, label %if.then, label %if.end, !dbg !6232

if.then:                                          ; preds = %entry
  %4 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6233
  %controller1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %4, i32 0, i32 1, !dbg !6234
  %5 = load %struct.spi_controller*, %struct.spi_controller** %controller1, align 8, !dbg !6234
  %cleanup2 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 21, !dbg !6235
  %6 = load void (%struct.spi_device*)*, void (%struct.spi_device*)** %cleanup2, align 8, !dbg !6235
  %7 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6236
  call void %6(%struct.spi_device* %7) #11, !dbg !6233
  br label %if.end, !dbg !6233

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6237
  %controller3 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %8, i32 0, i32 1, !dbg !6238
  %9 = load %struct.spi_controller*, %struct.spi_controller** %controller3, align 8, !dbg !6238
  call void @spi_controller_put(%struct.spi_controller* %9) #11, !dbg !6239
  %10 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6240
  %driver_override = getelementptr inbounds %struct.spi_device, %struct.spi_device* %10, i32 0, i32 12, !dbg !6241
  %11 = load i8*, i8** %driver_override, align 8, !dbg !6241
  call void @kfree(i8* %11) #11, !dbg !6242
  %12 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6243
  %13 = bitcast %struct.spi_device* %12 to i8*, !dbg !6243
  call void @kfree(i8* %13) #11, !dbg !6244
  ret void, !dbg !6245
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noredzone
declare dso_local void @device_initialize(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_add_device(%struct.spi_device* %spi) #0 !dbg !6246 {
entry:
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %dev = alloca %struct.device*, align 8
  %status = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !6247, metadata !DIExpression()), !dbg !6248
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !6249, metadata !DIExpression()), !dbg !6250
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6251
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !6252
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !6252
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !6250
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !6253, metadata !DIExpression()), !dbg !6254
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6255
  %dev1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 0, !dbg !6256
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !6257
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6257
  store %struct.device* %3, %struct.device** %dev, align 8, !dbg !6254
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6258, metadata !DIExpression()), !dbg !6259
  %4 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6260
  %chip_select = getelementptr inbounds %struct.spi_device, %struct.spi_device* %4, i32 0, i32 4, !dbg !6262
  %5 = load i8, i8* %chip_select, align 4, !dbg !6262
  %conv = zext i8 %5 to i32, !dbg !6260
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6263
  %num_chipselect = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 3, !dbg !6264
  %7 = load i16, i16* %num_chipselect, align 2, !dbg !6264
  %conv2 = zext i16 %7 to i32, !dbg !6263
  %cmp = icmp sge i32 %conv, %conv2, !dbg !6265
  br i1 %cmp, label %if.then, label %if.end, !dbg !6266

if.then:                                          ; preds = %entry
  %8 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6267
  %9 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6267
  %chip_select4 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %9, i32 0, i32 4, !dbg !6267
  %10 = load i8, i8* %chip_select4, align 4, !dbg !6267
  %conv5 = zext i8 %10 to i32, !dbg !6267
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6267
  %num_chipselect6 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %11, i32 0, i32 3, !dbg !6267
  %12 = load i16, i16* %num_chipselect6, align 2, !dbg !6267
  %conv7 = zext i16 %12 to i32, !dbg !6267
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i32 %conv5, i32 %conv7) #14, !dbg !6267
  store i32 -22, i32* %retval, align 4, !dbg !6269
  br label %return, !dbg !6269

if.end:                                           ; preds = %entry
  %13 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6270
  call void @spi_dev_set_name(%struct.spi_device* %13) #11, !dbg !6271
  call void @mutex_lock(%struct.mutex* @spi_add_lock) #11, !dbg !6272
  %14 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6273
  %15 = bitcast %struct.spi_device* %14 to i8*, !dbg !6273
  %call = call i32 @bus_for_each_dev(%struct.bus_type* @spi_bus_type, %struct.device* null, i8* %15, i32 (%struct.device*, i8*)* @spi_dev_check) #11, !dbg !6274
  store i32 %call, i32* %status, align 4, !dbg !6275
  %16 = load i32, i32* %status, align 4, !dbg !6276
  %tobool = icmp ne i32 %16, 0, !dbg !6276
  br i1 %tobool, label %if.then8, label %if.end11, !dbg !6278

if.then8:                                         ; preds = %if.end
  %17 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6279
  %18 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6279
  %chip_select9 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %18, i32 0, i32 4, !dbg !6279
  %19 = load i8, i8* %chip_select9, align 4, !dbg !6279
  %conv10 = zext i8 %19 to i32, !dbg !6279
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %17, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i32 %conv10) #14, !dbg !6279
  br label %done, !dbg !6281

if.end11:                                         ; preds = %if.end
  %20 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6282
  %dev12 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %20, i32 0, i32 0, !dbg !6284
  %call13 = call i32 @device_is_registered(%struct.device* %dev12) #11, !dbg !6285
  %tobool14 = icmp ne i32 %call13, 0, !dbg !6285
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !6286

if.then15:                                        ; preds = %if.end11
  store i32 -19, i32* %status, align 4, !dbg !6287
  br label %done, !dbg !6289

if.end16:                                         ; preds = %if.end11
  %21 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6290
  %cs_gpiods = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %21, i32 0, i32 55, !dbg !6292
  %22 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs_gpiods, align 8, !dbg !6292
  %tobool17 = icmp ne %struct.gpio_desc** %22, null, !dbg !6290
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !6293

if.then18:                                        ; preds = %if.end16
  %23 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6294
  %cs_gpiods19 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %23, i32 0, i32 55, !dbg !6295
  %24 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs_gpiods19, align 8, !dbg !6295
  %25 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6296
  %chip_select20 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %25, i32 0, i32 4, !dbg !6297
  %26 = load i8, i8* %chip_select20, align 4, !dbg !6297
  %idxprom = zext i8 %26 to i64, !dbg !6294
  %arrayidx = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %24, i64 %idxprom, !dbg !6294
  %27 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx, align 8, !dbg !6294
  %28 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6298
  %cs_gpiod = getelementptr inbounds %struct.spi_device, %struct.spi_device* %28, i32 0, i32 14, !dbg !6299
  store %struct.gpio_desc* %27, %struct.gpio_desc** %cs_gpiod, align 8, !dbg !6300
  br label %if.end28, !dbg !6298

if.else:                                          ; preds = %if.end16
  %29 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6301
  %cs_gpios = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %29, i32 0, i32 54, !dbg !6303
  %30 = load i32*, i32** %cs_gpios, align 8, !dbg !6303
  %tobool21 = icmp ne i32* %30, null, !dbg !6301
  br i1 %tobool21, label %if.then22, label %if.end27, !dbg !6304

if.then22:                                        ; preds = %if.else
  %31 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6305
  %cs_gpios23 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %31, i32 0, i32 54, !dbg !6306
  %32 = load i32*, i32** %cs_gpios23, align 8, !dbg !6306
  %33 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6307
  %chip_select24 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %33, i32 0, i32 4, !dbg !6308
  %34 = load i8, i8* %chip_select24, align 4, !dbg !6308
  %idxprom25 = zext i8 %34 to i64, !dbg !6305
  %arrayidx26 = getelementptr i32, i32* %32, i64 %idxprom25, !dbg !6305
  %35 = load i32, i32* %arrayidx26, align 4, !dbg !6305
  %36 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6309
  %cs_gpio = getelementptr inbounds %struct.spi_device, %struct.spi_device* %36, i32 0, i32 13, !dbg !6310
  store i32 %35, i32* %cs_gpio, align 8, !dbg !6311
  br label %if.end27, !dbg !6309

if.end27:                                         ; preds = %if.then22, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.then18
  %37 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6312
  %call29 = call i32 @spi_setup(%struct.spi_device* %37) #11, !dbg !6313
  store i32 %call29, i32* %status, align 4, !dbg !6314
  %38 = load i32, i32* %status, align 4, !dbg !6315
  %cmp30 = icmp slt i32 %38, 0, !dbg !6317
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !6318

if.then32:                                        ; preds = %if.end28
  %39 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6319
  %40 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6319
  %dev33 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %40, i32 0, i32 0, !dbg !6319
  %call34 = call i8* @dev_name(%struct.device* %dev33) #11, !dbg !6319
  %41 = load i32, i32* %status, align 4, !dbg !6319
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %39, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* %call34, i32 %41) #14, !dbg !6319
  br label %done, !dbg !6321

if.end35:                                         ; preds = %if.end28
  %42 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6322
  %dev36 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %42, i32 0, i32 0, !dbg !6323
  %call37 = call i32 @device_add(%struct.device* %dev36) #11, !dbg !6324
  store i32 %call37, i32* %status, align 4, !dbg !6325
  %43 = load i32, i32* %status, align 4, !dbg !6326
  %cmp38 = icmp slt i32 %43, 0, !dbg !6328
  br i1 %cmp38, label %if.then40, label %if.else43, !dbg !6329

if.then40:                                        ; preds = %if.end35
  %44 = load %struct.device*, %struct.device** %dev, align 8, !dbg !6330
  %45 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6330
  %dev41 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %45, i32 0, i32 0, !dbg !6330
  %call42 = call i8* @dev_name(%struct.device* %dev41) #11, !dbg !6330
  %46 = load i32, i32* %status, align 4, !dbg !6330
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %44, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i64 0, i64 0), i8* %call42, i32 %46) #14, !dbg !6330
  br label %if.end44, !dbg !6330

if.else43:                                        ; preds = %if.end35
  br label %if.end44

if.end44:                                         ; preds = %if.else43, %if.then40
  br label %done, !dbg !6331

done:                                             ; preds = %if.end44, %if.then32, %if.then15, %if.then8
  call void @llvm.dbg.label(metadata !6332), !dbg !6333
  call void @mutex_unlock(%struct.mutex* @spi_add_lock) #11, !dbg !6334
  %47 = load i32, i32* %status, align 4, !dbg !6335
  store i32 %47, i32* %retval, align 4, !dbg !6336
  br label %return, !dbg !6336

return:                                           ; preds = %done, %if.then
  %48 = load i32, i32* %retval, align 4, !dbg !6337
  ret i32 %48, !dbg !6337
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_err(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_dev_set_name(%struct.spi_device* %spi) #0 !dbg !6338 {
entry:
  %spi.addr = alloca %struct.spi_device*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.acpi_device*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !6341, metadata !DIExpression()), !dbg !6342
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !6343, metadata !DIExpression()), !dbg !6345
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6345
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 0, !dbg !6345
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 24, !dbg !6345
  %1 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !6345
  store %struct.fwnode_handle* %1, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6345
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6345
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %2) #11, !dbg !6345
  br i1 %call, label %cond.true, label %cond.false, !dbg !6345

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6346, metadata !DIExpression()), !dbg !6348
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6348
  %4 = bitcast %struct.fwnode_handle* %3 to i8*, !dbg !6348
  store i8* %4, i8** %__mptr, align 8, !dbg !6348
  br label %do.body, !dbg !6348

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !6349

do.end:                                           ; preds = %do.body
  %5 = load i8*, i8** %__mptr, align 8, !dbg !6348
  %add.ptr = getelementptr i8, i8* %5, i64 -16, !dbg !6348
  %6 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !6348
  store %struct.acpi_device* %6, %struct.acpi_device** %tmp1, align 8, !dbg !6349
  %7 = load %struct.acpi_device*, %struct.acpi_device** %tmp1, align 8, !dbg !6348
  br label %cond.end, !dbg !6345

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6345

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %7, %do.end ], [ null, %cond.false ], !dbg !6345
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !6345
  %8 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !6345
  store %struct.acpi_device* %8, %struct.acpi_device** %adev, align 8, !dbg !6342
  %9 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !6351
  %tobool = icmp ne %struct.acpi_device* %9, null, !dbg !6351
  br i1 %tobool, label %if.then, label %if.end, !dbg !6353

if.then:                                          ; preds = %cond.end
  %10 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6354
  %dev2 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %10, i32 0, i32 0, !dbg !6356
  %11 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !6357
  %call3 = call i8* @acpi_dev_name(%struct.acpi_device* %11) #11, !dbg !6358
  %call4 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.61, i64 0, i64 0), i8* %call3) #11, !dbg !6359
  br label %return, !dbg !6360

if.end:                                           ; preds = %cond.end
  %12 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6361
  %dev5 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %12, i32 0, i32 0, !dbg !6362
  %13 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6363
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %13, i32 0, i32 1, !dbg !6364
  %14 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !6364
  %dev6 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %14, i32 0, i32 0, !dbg !6365
  %call7 = call i8* @dev_name(%struct.device* %dev6) #11, !dbg !6366
  %15 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6367
  %chip_select = getelementptr inbounds %struct.spi_device, %struct.spi_device* %15, i32 0, i32 4, !dbg !6368
  %16 = load i8, i8* %chip_select, align 4, !dbg !6368
  %conv = zext i8 %16 to i32, !dbg !6367
  %call8 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.62, i64 0, i64 0), i8* %call7, i32 %conv) #11, !dbg !6369
  br label %return, !dbg !6370

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !6370
}

; Function Attrs: noredzone
declare dso_local void @mutex_lock(%struct.mutex*) #2

; Function Attrs: noredzone
declare dso_local i32 @bus_for_each_dev(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_dev_check(%struct.device* %dev, i8* %data) #0 !dbg !6371 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %new_spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6374, metadata !DIExpression()), !dbg !6375
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !6378, metadata !DIExpression()), !dbg !6379
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6380
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !6381
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !6379
  call void @llvm.dbg.declare(metadata %struct.spi_device** %new_spi, metadata !6382, metadata !DIExpression()), !dbg !6383
  %1 = load i8*, i8** %data.addr, align 8, !dbg !6384
  %2 = bitcast i8* %1 to %struct.spi_device*, !dbg !6384
  store %struct.spi_device* %2, %struct.spi_device** %new_spi, align 8, !dbg !6383
  %3 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6385
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %3, i32 0, i32 1, !dbg !6387
  %4 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !6387
  %5 = load %struct.spi_device*, %struct.spi_device** %new_spi, align 8, !dbg !6388
  %controller1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %5, i32 0, i32 1, !dbg !6389
  %6 = load %struct.spi_controller*, %struct.spi_controller** %controller1, align 8, !dbg !6389
  %cmp = icmp eq %struct.spi_controller* %4, %6, !dbg !6390
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6391

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !6392
  %chip_select = getelementptr inbounds %struct.spi_device, %struct.spi_device* %7, i32 0, i32 4, !dbg !6393
  %8 = load i8, i8* %chip_select, align 4, !dbg !6393
  %conv = zext i8 %8 to i32, !dbg !6392
  %9 = load %struct.spi_device*, %struct.spi_device** %new_spi, align 8, !dbg !6394
  %chip_select2 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %9, i32 0, i32 4, !dbg !6395
  %10 = load i8, i8* %chip_select2, align 4, !dbg !6395
  %conv3 = zext i8 %10 to i32, !dbg !6394
  %cmp4 = icmp eq i32 %conv, %conv3, !dbg !6396
  br i1 %cmp4, label %if.then, label %if.end, !dbg !6397

if.then:                                          ; preds = %land.lhs.true
  store i32 -16, i32* %retval, align 4, !dbg !6398
  br label %return, !dbg !6398

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !6399
  br label %return, !dbg !6399

return:                                           ; preds = %if.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !6400
  ret i32 %11, !dbg !6400
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @device_is_registered(%struct.device* %dev) #0 !dbg !6401 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6402, metadata !DIExpression()), !dbg !6403
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6404
  %kobj = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 0, !dbg !6405
  %state_in_sysfs = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 7, !dbg !6406
  %bf.load = load i8, i8* %state_in_sysfs, align 4, !dbg !6406
  %bf.lshr = lshr i8 %bf.load, 1, !dbg !6406
  %bf.clear = and i8 %bf.lshr, 1, !dbg !6406
  %bf.cast = zext i8 %bf.clear to i32, !dbg !6406
  ret i32 %bf.cast, !dbg !6407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_setup(%struct.spi_device* %spi) #0 !dbg !6408 {
entry:
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %bad_bits = alloca i32, align 4
  %ugly_bits = alloca i32, align 4
  %status = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !6409, metadata !DIExpression()), !dbg !6410
  call void @llvm.dbg.declare(metadata i32* %bad_bits, metadata !6411, metadata !DIExpression()), !dbg !6412
  call void @llvm.dbg.declare(metadata i32* %ugly_bits, metadata !6413, metadata !DIExpression()), !dbg !6414
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6415, metadata !DIExpression()), !dbg !6416
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6417
  %mode = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 7, !dbg !6419
  %1 = load i32, i32* %mode, align 8, !dbg !6419
  %and = and i32 %1, 256, !dbg !6420
  %tobool = icmp ne i32 %and, 0, !dbg !6420
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !6421

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6422
  %mode1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %2, i32 0, i32 7, !dbg !6423
  %3 = load i32, i32* %mode1, align 8, !dbg !6423
  %and2 = and i32 %3, 512, !dbg !6424
  %tobool3 = icmp ne i32 %and2, 0, !dbg !6424
  br i1 %tobool3, label %if.then, label %lor.lhs.false, !dbg !6425

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6426
  %mode4 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %4, i32 0, i32 7, !dbg !6427
  %5 = load i32, i32* %mode4, align 8, !dbg !6427
  %and5 = and i32 %5, 1024, !dbg !6428
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6428
  br i1 %tobool6, label %land.lhs.true7, label %if.end, !dbg !6429

land.lhs.true7:                                   ; preds = %lor.lhs.false
  %6 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6430
  %mode8 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %6, i32 0, i32 7, !dbg !6431
  %7 = load i32, i32* %mode8, align 8, !dbg !6431
  %and9 = and i32 %7, 2048, !dbg !6432
  %tobool10 = icmp ne i32 %and9, 0, !dbg !6432
  br i1 %tobool10, label %if.then, label %if.end, !dbg !6433

if.then:                                          ; preds = %land.lhs.true7, %land.lhs.true
  %8 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6434
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %8, i32 0, i32 0, !dbg !6434
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.18, i64 0, i64 0)) #14, !dbg !6434
  store i32 -22, i32* %retval, align 4, !dbg !6436
  br label %return, !dbg !6436

if.end:                                           ; preds = %land.lhs.true7, %lor.lhs.false
  %9 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6437
  %mode11 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %9, i32 0, i32 7, !dbg !6439
  %10 = load i32, i32* %mode11, align 8, !dbg !6439
  %and12 = and i32 %10, 16, !dbg !6440
  %tobool13 = icmp ne i32 %and12, 0, !dbg !6440
  br i1 %tobool13, label %land.lhs.true14, label %if.end19, !dbg !6441

land.lhs.true14:                                  ; preds = %if.end
  %11 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6442
  %mode15 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %11, i32 0, i32 7, !dbg !6443
  %12 = load i32, i32* %mode15, align 8, !dbg !6443
  %and16 = and i32 %12, 28416, !dbg !6444
  %tobool17 = icmp ne i32 %and16, 0, !dbg !6444
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !6445

if.then18:                                        ; preds = %land.lhs.true14
  store i32 -22, i32* %retval, align 4, !dbg !6446
  br label %return, !dbg !6446

if.end19:                                         ; preds = %land.lhs.true14, %if.end
  %13 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6447
  %mode20 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %13, i32 0, i32 7, !dbg !6448
  %14 = load i32, i32* %mode20, align 8, !dbg !6448
  %15 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6449
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %15, i32 0, i32 1, !dbg !6450
  %16 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !6450
  %mode_bits = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 5, !dbg !6451
  %17 = load i32, i32* %mode_bits, align 8, !dbg !6451
  %or = or i32 %17, 4096, !dbg !6452
  %neg = xor i32 %or, -1, !dbg !6453
  %and21 = and i32 %14, %neg, !dbg !6454
  store i32 %and21, i32* %bad_bits, align 4, !dbg !6455
  %18 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6456
  %cs_gpio = getelementptr inbounds %struct.spi_device, %struct.spi_device* %18, i32 0, i32 13, !dbg !6458
  %19 = load i32, i32* %cs_gpio, align 8, !dbg !6458
  %call = call zeroext i1 @gpio_is_valid(i32 %19) #11, !dbg !6459
  br i1 %call, label %if.then22, label %if.end24, !dbg !6460

if.then22:                                        ; preds = %if.end19
  %20 = load i32, i32* %bad_bits, align 4, !dbg !6461
  %and23 = and i32 %20, -5, !dbg !6461
  store i32 %and23, i32* %bad_bits, align 4, !dbg !6461
  br label %if.end24, !dbg !6462

if.end24:                                         ; preds = %if.then22, %if.end19
  %21 = load i32, i32* %bad_bits, align 4, !dbg !6463
  %and25 = and i32 %21, 28416, !dbg !6464
  store i32 %and25, i32* %ugly_bits, align 4, !dbg !6465
  %22 = load i32, i32* %ugly_bits, align 4, !dbg !6466
  %tobool26 = icmp ne i32 %22, 0, !dbg !6466
  br i1 %tobool26, label %if.then27, label %if.end34, !dbg !6468

if.then27:                                        ; preds = %if.end24
  %23 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6469
  %dev28 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %23, i32 0, i32 0, !dbg !6469
  %24 = load i32, i32* %ugly_bits, align 4, !dbg !6469
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev28, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.19, i64 0, i64 0), i32 %24) #14, !dbg !6469
  %25 = load i32, i32* %ugly_bits, align 4, !dbg !6471
  %neg29 = xor i32 %25, -1, !dbg !6472
  %26 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6473
  %mode30 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %26, i32 0, i32 7, !dbg !6474
  %27 = load i32, i32* %mode30, align 8, !dbg !6475
  %and31 = and i32 %27, %neg29, !dbg !6475
  store i32 %and31, i32* %mode30, align 8, !dbg !6475
  %28 = load i32, i32* %ugly_bits, align 4, !dbg !6476
  %neg32 = xor i32 %28, -1, !dbg !6477
  %29 = load i32, i32* %bad_bits, align 4, !dbg !6478
  %and33 = and i32 %29, %neg32, !dbg !6478
  store i32 %and33, i32* %bad_bits, align 4, !dbg !6478
  br label %if.end34, !dbg !6479

if.end34:                                         ; preds = %if.then27, %if.end24
  %30 = load i32, i32* %bad_bits, align 4, !dbg !6480
  %tobool35 = icmp ne i32 %30, 0, !dbg !6480
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !6482

if.then36:                                        ; preds = %if.end34
  %31 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6483
  %dev37 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %31, i32 0, i32 0, !dbg !6483
  %32 = load i32, i32* %bad_bits, align 4, !dbg !6483
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev37, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0), i32 %32) #14, !dbg !6483
  store i32 -22, i32* %retval, align 4, !dbg !6485
  br label %return, !dbg !6485

if.end38:                                         ; preds = %if.end34
  %33 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6486
  %bits_per_word = getelementptr inbounds %struct.spi_device, %struct.spi_device* %33, i32 0, i32 5, !dbg !6488
  %34 = load i8, i8* %bits_per_word, align 1, !dbg !6488
  %tobool39 = icmp ne i8 %34, 0, !dbg !6486
  br i1 %tobool39, label %if.end42, label %if.then40, !dbg !6489

if.then40:                                        ; preds = %if.end38
  %35 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6490
  %bits_per_word41 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %35, i32 0, i32 5, !dbg !6491
  store i8 8, i8* %bits_per_word41, align 1, !dbg !6492
  br label %if.end42, !dbg !6490

if.end42:                                         ; preds = %if.then40, %if.end38
  %36 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6493
  %controller43 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %36, i32 0, i32 1, !dbg !6494
  %37 = load %struct.spi_controller*, %struct.spi_controller** %controller43, align 8, !dbg !6494
  %38 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6495
  %bits_per_word44 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %38, i32 0, i32 5, !dbg !6496
  %39 = load i8, i8* %bits_per_word44, align 1, !dbg !6496
  %call45 = call i32 @__spi_validate_bits_per_word(%struct.spi_controller* %37, i8 zeroext %39) #11, !dbg !6497
  store i32 %call45, i32* %status, align 4, !dbg !6498
  %40 = load i32, i32* %status, align 4, !dbg !6499
  %tobool46 = icmp ne i32 %40, 0, !dbg !6499
  br i1 %tobool46, label %if.then47, label %if.end48, !dbg !6501

if.then47:                                        ; preds = %if.end42
  %41 = load i32, i32* %status, align 4, !dbg !6502
  store i32 %41, i32* %retval, align 4, !dbg !6503
  br label %return, !dbg !6503

if.end48:                                         ; preds = %if.end42
  %42 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6504
  %max_speed_hz = getelementptr inbounds %struct.spi_device, %struct.spi_device* %42, i32 0, i32 3, !dbg !6506
  %43 = load i32, i32* %max_speed_hz, align 8, !dbg !6506
  %tobool49 = icmp ne i32 %43, 0, !dbg !6504
  br i1 %tobool49, label %if.end54, label %if.then50, !dbg !6507

if.then50:                                        ; preds = %if.end48
  %44 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6508
  %controller51 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %44, i32 0, i32 1, !dbg !6509
  %45 = load %struct.spi_controller*, %struct.spi_controller** %controller51, align 8, !dbg !6509
  %max_speed_hz52 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %45, i32 0, i32 9, !dbg !6510
  %46 = load i32, i32* %max_speed_hz52, align 8, !dbg !6510
  %47 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6511
  %max_speed_hz53 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %47, i32 0, i32 3, !dbg !6512
  store i32 %46, i32* %max_speed_hz53, align 8, !dbg !6513
  br label %if.end54, !dbg !6511

if.end54:                                         ; preds = %if.then50, %if.end48
  %48 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6514
  %controller55 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %48, i32 0, i32 1, !dbg !6515
  %49 = load %struct.spi_controller*, %struct.spi_controller** %controller55, align 8, !dbg !6515
  %io_mutex = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %49, i32 0, i32 14, !dbg !6516
  call void @mutex_lock(%struct.mutex* %io_mutex) #11, !dbg !6517
  %50 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6518
  %controller56 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %50, i32 0, i32 1, !dbg !6520
  %51 = load %struct.spi_controller*, %struct.spi_controller** %controller56, align 8, !dbg !6520
  %setup = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %51, i32 0, i32 18, !dbg !6521
  %52 = load i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)** %setup, align 8, !dbg !6521
  %tobool57 = icmp ne i32 (%struct.spi_device*)* %52, null, !dbg !6518
  br i1 %tobool57, label %if.then58, label %if.end62, !dbg !6522

if.then58:                                        ; preds = %if.end54
  %53 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6523
  %controller59 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %53, i32 0, i32 1, !dbg !6524
  %54 = load %struct.spi_controller*, %struct.spi_controller** %controller59, align 8, !dbg !6524
  %setup60 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %54, i32 0, i32 18, !dbg !6525
  %55 = load i32 (%struct.spi_device*)*, i32 (%struct.spi_device*)** %setup60, align 8, !dbg !6525
  %56 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6526
  %call61 = call i32 %55(%struct.spi_device* %56) #11, !dbg !6523
  store i32 %call61, i32* %status, align 4, !dbg !6527
  br label %if.end62, !dbg !6528

if.end62:                                         ; preds = %if.then58, %if.end54
  %57 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6529
  %controller63 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %57, i32 0, i32 1, !dbg !6531
  %58 = load %struct.spi_controller*, %struct.spi_controller** %controller63, align 8, !dbg !6531
  %auto_runtime_pm = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %58, i32 0, i32 33, !dbg !6532
  %59 = load i8, i8* %auto_runtime_pm, align 4, !dbg !6532
  %tobool64 = trunc i8 %59 to i1, !dbg !6532
  br i1 %tobool64, label %land.lhs.true65, label %if.else, !dbg !6533

land.lhs.true65:                                  ; preds = %if.end62
  %60 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6534
  %controller66 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %60, i32 0, i32 1, !dbg !6535
  %61 = load %struct.spi_controller*, %struct.spi_controller** %controller66, align 8, !dbg !6535
  %set_cs = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %61, i32 0, i32 47, !dbg !6536
  %62 = load void (%struct.spi_device*, i1)*, void (%struct.spi_device*, i1)** %set_cs, align 8, !dbg !6536
  %tobool67 = icmp ne void (%struct.spi_device*, i1)* %62, null, !dbg !6534
  br i1 %tobool67, label %if.then68, label %if.else, !dbg !6537

if.then68:                                        ; preds = %land.lhs.true65
  %63 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6538
  %controller69 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %63, i32 0, i32 1, !dbg !6540
  %64 = load %struct.spi_controller*, %struct.spi_controller** %controller69, align 8, !dbg !6540
  %dev70 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %64, i32 0, i32 0, !dbg !6541
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev70, i32 0, i32 1, !dbg !6542
  %65 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6542
  %call71 = call i32 @pm_runtime_get_sync(%struct.device* %65) #11, !dbg !6543
  store i32 %call71, i32* %status, align 4, !dbg !6544
  %66 = load i32, i32* %status, align 4, !dbg !6545
  %cmp = icmp slt i32 %66, 0, !dbg !6547
  br i1 %cmp, label %if.then72, label %if.end80, !dbg !6548

if.then72:                                        ; preds = %if.then68
  %67 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6549
  %controller73 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %67, i32 0, i32 1, !dbg !6551
  %68 = load %struct.spi_controller*, %struct.spi_controller** %controller73, align 8, !dbg !6551
  %io_mutex74 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %68, i32 0, i32 14, !dbg !6552
  call void @mutex_unlock(%struct.mutex* %io_mutex74) #11, !dbg !6553
  %69 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6554
  %controller75 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %69, i32 0, i32 1, !dbg !6555
  %70 = load %struct.spi_controller*, %struct.spi_controller** %controller75, align 8, !dbg !6555
  %dev76 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %70, i32 0, i32 0, !dbg !6556
  %parent77 = getelementptr inbounds %struct.device, %struct.device* %dev76, i32 0, i32 1, !dbg !6557
  %71 = load %struct.device*, %struct.device** %parent77, align 8, !dbg !6557
  call void @pm_runtime_put_noidle(%struct.device* %71) #11, !dbg !6558
  %72 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6559
  %controller78 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %72, i32 0, i32 1, !dbg !6559
  %73 = load %struct.spi_controller*, %struct.spi_controller** %controller78, align 8, !dbg !6559
  %dev79 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %73, i32 0, i32 0, !dbg !6559
  %74 = load i32, i32* %status, align 4, !dbg !6559
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev79, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 %74) #14, !dbg !6559
  %75 = load i32, i32* %status, align 4, !dbg !6560
  store i32 %75, i32* %retval, align 4, !dbg !6561
  br label %return, !dbg !6561

if.end80:                                         ; preds = %if.then68
  store i32 0, i32* %status, align 4, !dbg !6562
  %76 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6563
  call void @spi_set_cs(%struct.spi_device* %76, i1 zeroext false) #11, !dbg !6564
  %77 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6565
  %controller81 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %77, i32 0, i32 1, !dbg !6566
  %78 = load %struct.spi_controller*, %struct.spi_controller** %controller81, align 8, !dbg !6566
  %dev82 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %78, i32 0, i32 0, !dbg !6567
  %parent83 = getelementptr inbounds %struct.device, %struct.device* %dev82, i32 0, i32 1, !dbg !6568
  %79 = load %struct.device*, %struct.device** %parent83, align 8, !dbg !6568
  call void @pm_runtime_mark_last_busy(%struct.device* %79) #11, !dbg !6569
  %80 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6570
  %controller84 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %80, i32 0, i32 1, !dbg !6571
  %81 = load %struct.spi_controller*, %struct.spi_controller** %controller84, align 8, !dbg !6571
  %dev85 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %81, i32 0, i32 0, !dbg !6572
  %parent86 = getelementptr inbounds %struct.device, %struct.device* %dev85, i32 0, i32 1, !dbg !6573
  %82 = load %struct.device*, %struct.device** %parent86, align 8, !dbg !6573
  %call87 = call i32 @pm_runtime_put_autosuspend(%struct.device* %82) #11, !dbg !6574
  br label %if.end88, !dbg !6575

if.else:                                          ; preds = %land.lhs.true65, %if.end62
  %83 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6576
  call void @spi_set_cs(%struct.spi_device* %83, i1 zeroext false) #11, !dbg !6578
  br label %if.end88

if.end88:                                         ; preds = %if.else, %if.end80
  %84 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6579
  %controller89 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %84, i32 0, i32 1, !dbg !6580
  %85 = load %struct.spi_controller*, %struct.spi_controller** %controller89, align 8, !dbg !6580
  %io_mutex90 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %85, i32 0, i32 14, !dbg !6581
  call void @mutex_unlock(%struct.mutex* %io_mutex90) #11, !dbg !6582
  %86 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6583
  %rt = getelementptr inbounds %struct.spi_device, %struct.spi_device* %86, i32 0, i32 6, !dbg !6585
  %87 = load i8, i8* %rt, align 2, !dbg !6585
  %tobool91 = trunc i8 %87 to i1, !dbg !6585
  br i1 %tobool91, label %land.lhs.true92, label %if.end100, !dbg !6586

land.lhs.true92:                                  ; preds = %if.end88
  %88 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6587
  %controller93 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %88, i32 0, i32 1, !dbg !6588
  %89 = load %struct.spi_controller*, %struct.spi_controller** %controller93, align 8, !dbg !6588
  %rt94 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %89, i32 0, i32 32, !dbg !6589
  %90 = load i8, i8* %rt94, align 1, !dbg !6589
  %tobool95 = trunc i8 %90 to i1, !dbg !6589
  br i1 %tobool95, label %if.end100, label %if.then96, !dbg !6590

if.then96:                                        ; preds = %land.lhs.true92
  %91 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6591
  %controller97 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %91, i32 0, i32 1, !dbg !6593
  %92 = load %struct.spi_controller*, %struct.spi_controller** %controller97, align 8, !dbg !6593
  %rt98 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %92, i32 0, i32 32, !dbg !6594
  store i8 1, i8* %rt98, align 1, !dbg !6595
  %93 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6596
  %controller99 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %93, i32 0, i32 1, !dbg !6597
  %94 = load %struct.spi_controller*, %struct.spi_controller** %controller99, align 8, !dbg !6597
  call void @spi_set_thread_rt(%struct.spi_controller* %94) #11, !dbg !6598
  br label %if.end100, !dbg !6599

if.end100:                                        ; preds = %if.then96, %land.lhs.true92, %if.end88
  %95 = load i32, i32* %status, align 4, !dbg !6600
  store i32 %95, i32* %retval, align 4, !dbg !6601
  br label %return, !dbg !6601

return:                                           ; preds = %if.end100, %if.then72, %if.then47, %if.then36, %if.then18, %if.then
  %96 = load i32, i32* %retval, align 4, !dbg !6602
  ret i32 %96, !dbg !6602
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @dev_name(%struct.device* %dev) #0 !dbg !6603 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6606, metadata !DIExpression()), !dbg !6607
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6608
  %init_name = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 3, !dbg !6610
  %1 = load i8*, i8** %init_name, align 8, !dbg !6610
  %tobool = icmp ne i8* %1, null, !dbg !6608
  br i1 %tobool, label %if.then, label %if.end, !dbg !6611

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6612
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 3, !dbg !6613
  %3 = load i8*, i8** %init_name1, align 8, !dbg !6613
  store i8* %3, i8** %retval, align 8, !dbg !6614
  br label %return, !dbg !6614

if.end:                                           ; preds = %entry
  %4 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !6615
  %kobj = getelementptr inbounds %struct.device, %struct.device* %4, i32 0, i32 0, !dbg !6616
  %call = call i8* @kobject_name(%struct.kobject* %kobj) #11, !dbg !6617
  store i8* %call, i8** %retval, align 8, !dbg !6618
  br label %return, !dbg !6618

return:                                           ; preds = %if.end, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !6619
  ret i8* %5, !dbg !6619
}

; Function Attrs: noredzone
declare dso_local i32 @device_add(%struct.device*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noredzone
declare dso_local void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_device* @spi_new_device(%struct.spi_controller* %ctlr, %struct.spi_board_info* %chip) #0 !dbg !6620 {
entry:
  %retval = alloca %struct.spi_device*, align 8
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %chip.addr = alloca %struct.spi_board_info*, align 8
  %proxy = alloca %struct.spi_device*, align 8
  %status = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !6624, metadata !DIExpression()), !dbg !6625
  store %struct.spi_board_info* %chip, %struct.spi_board_info** %chip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_board_info** %chip.addr, metadata !6626, metadata !DIExpression()), !dbg !6627
  call void @llvm.dbg.declare(metadata %struct.spi_device** %proxy, metadata !6628, metadata !DIExpression()), !dbg !6629
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6630, metadata !DIExpression()), !dbg !6631
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !6632
  %call = call %struct.spi_device* @spi_alloc_device(%struct.spi_controller* %0) #11, !dbg !6633
  store %struct.spi_device* %call, %struct.spi_device** %proxy, align 8, !dbg !6634
  %1 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6635
  %tobool = icmp ne %struct.spi_device* %1, null, !dbg !6635
  br i1 %tobool, label %if.end, label %if.then, !dbg !6637

if.then:                                          ; preds = %entry
  store %struct.spi_device* null, %struct.spi_device** %retval, align 8, !dbg !6638
  br label %return, !dbg !6638

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !6639, metadata !DIExpression()), !dbg !6641
  %2 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6641
  %modalias = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %2, i32 0, i32 0, !dbg !6641
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !6641
  %call1 = call i64 @strlen(i8* %arraydecay) #11, !dbg !6641
  %cmp = icmp uge i64 %call1, 32, !dbg !6641
  %lnot = xor i1 %cmp, true, !dbg !6641
  %lnot2 = xor i1 %lnot, true, !dbg !6641
  %lnot.ext = zext i1 %lnot2 to i32, !dbg !6641
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !6641
  %3 = load i32, i32* %__ret_warn_on, align 4, !dbg !6642
  %tobool3 = icmp ne i32 %3, 0, !dbg !6642
  %lnot4 = xor i1 %tobool3, true, !dbg !6642
  %lnot6 = xor i1 %lnot4, true, !dbg !6642
  %lnot.ext7 = zext i1 %lnot6 to i32, !dbg !6642
  %conv = sext i32 %lnot.ext7 to i64, !dbg !6642
  %tobool8 = icmp ne i64 %conv, 0, !dbg !6642
  br i1 %tobool8, label %if.then9, label %if.end16, !dbg !6641

if.then9:                                         ; preds = %if.end
  br label %do.body, !dbg !6642

do.body:                                          ; preds = %if.then9
  br label %do.body10, !dbg !6644

do.body10:                                        ; preds = %do.body
  br label %do.end, !dbg !6646

do.end:                                           ; preds = %do.body10
  br label %do.body11, !dbg !6644

do.body11:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 659, i32 2305, i64 12) #7, !dbg !6648, !srcloc !6650
  br label %do.end12, !dbg !6648

do.end12:                                         ; preds = %do.body11
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 293) #7, !dbg !6651, !srcloc !6653
  br label %do.body13, !dbg !6644

do.body13:                                        ; preds = %do.end12
  br label %do.end14, !dbg !6654

do.end14:                                         ; preds = %do.body13
  br label %do.end15, !dbg !6644

do.end15:                                         ; preds = %do.end14
  br label %if.end16, !dbg !6644

if.end16:                                         ; preds = %do.end15, %if.end
  %4 = load i32, i32* %__ret_warn_on, align 4, !dbg !6641
  %tobool17 = icmp ne i32 %4, 0, !dbg !6641
  %lnot18 = xor i1 %tobool17, true, !dbg !6641
  %lnot20 = xor i1 %lnot18, true, !dbg !6641
  %lnot.ext21 = zext i1 %lnot20 to i32, !dbg !6641
  %conv22 = sext i32 %lnot.ext21 to i64, !dbg !6641
  store i64 %conv22, i64* %tmp, align 8, !dbg !6642
  %5 = load i64, i64* %tmp, align 8, !dbg !6641
  %6 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6656
  %chip_select = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %6, i32 0, i32 7, !dbg !6657
  %7 = load i16, i16* %chip_select, align 2, !dbg !6657
  %conv23 = trunc i16 %7 to i8, !dbg !6656
  %8 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6658
  %chip_select24 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %8, i32 0, i32 4, !dbg !6659
  store i8 %conv23, i8* %chip_select24, align 4, !dbg !6660
  %9 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6661
  %max_speed_hz = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %9, i32 0, i32 5, !dbg !6662
  %10 = load i32, i32* %max_speed_hz, align 4, !dbg !6662
  %11 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6663
  %max_speed_hz25 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %11, i32 0, i32 3, !dbg !6664
  store i32 %10, i32* %max_speed_hz25, align 8, !dbg !6665
  %12 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6666
  %mode = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %12, i32 0, i32 8, !dbg !6667
  %13 = load i32, i32* %mode, align 4, !dbg !6667
  %14 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6668
  %mode26 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %14, i32 0, i32 7, !dbg !6669
  store i32 %13, i32* %mode26, align 8, !dbg !6670
  %15 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6671
  %irq = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %15, i32 0, i32 4, !dbg !6672
  %16 = load i32, i32* %irq, align 8, !dbg !6672
  %17 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6673
  %irq27 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %17, i32 0, i32 8, !dbg !6674
  store i32 %16, i32* %irq27, align 4, !dbg !6675
  %18 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6676
  %modalias28 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %18, i32 0, i32 11, !dbg !6677
  %arraydecay29 = getelementptr inbounds [32 x i8], [32 x i8]* %modalias28, i64 0, i64 0, !dbg !6676
  %19 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6678
  %modalias30 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %19, i32 0, i32 0, !dbg !6679
  %arraydecay31 = getelementptr inbounds [32 x i8], [32 x i8]* %modalias30, i64 0, i64 0, !dbg !6678
  %call32 = call i64 @strlcpy(i8* %arraydecay29, i8* %arraydecay31, i64 32) #11, !dbg !6680
  %20 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6681
  %platform_data = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %20, i32 0, i32 1, !dbg !6682
  %21 = load i8*, i8** %platform_data, align 8, !dbg !6682
  %22 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6683
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %22, i32 0, i32 0, !dbg !6684
  %platform_data33 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 7, !dbg !6685
  store i8* %21, i8** %platform_data33, align 8, !dbg !6686
  %23 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6687
  %controller_data = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %23, i32 0, i32 3, !dbg !6688
  %24 = load i8*, i8** %controller_data, align 8, !dbg !6688
  %25 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6689
  %controller_data34 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %25, i32 0, i32 10, !dbg !6690
  store i8* %24, i8** %controller_data34, align 8, !dbg !6691
  %26 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6692
  %controller_state = getelementptr inbounds %struct.spi_device, %struct.spi_device* %26, i32 0, i32 9, !dbg !6693
  store i8* null, i8** %controller_state, align 8, !dbg !6694
  %27 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6695
  %properties = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %27, i32 0, i32 2, !dbg !6697
  %28 = load %struct.property_entry*, %struct.property_entry** %properties, align 8, !dbg !6697
  %tobool35 = icmp ne %struct.property_entry* %28, null, !dbg !6695
  br i1 %tobool35, label %if.then36, label %if.end46, !dbg !6698

if.then36:                                        ; preds = %if.end16
  %29 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6699
  %dev37 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %29, i32 0, i32 0, !dbg !6701
  %30 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6702
  %properties38 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %30, i32 0, i32 2, !dbg !6703
  %31 = load %struct.property_entry*, %struct.property_entry** %properties38, align 8, !dbg !6703
  %call39 = call i32 @device_add_properties(%struct.device* %dev37, %struct.property_entry* %31) #11, !dbg !6704
  store i32 %call39, i32* %status, align 4, !dbg !6705
  %32 = load i32, i32* %status, align 4, !dbg !6706
  %tobool40 = icmp ne i32 %32, 0, !dbg !6706
  br i1 %tobool40, label %if.then41, label %if.end45, !dbg !6708

if.then41:                                        ; preds = %if.then36
  %33 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !6709
  %dev42 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %33, i32 0, i32 0, !dbg !6709
  %34 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6709
  %modalias43 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %34, i32 0, i32 0, !dbg !6709
  %arraydecay44 = getelementptr inbounds [32 x i8], [32 x i8]* %modalias43, i64 0, i64 0, !dbg !6709
  %35 = load i32, i32* %status, align 4, !dbg !6709
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev42, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay44, i32 %35) #14, !dbg !6709
  br label %err_dev_put, !dbg !6711

if.end45:                                         ; preds = %if.then36
  br label %if.end46, !dbg !6712

if.end46:                                         ; preds = %if.end45, %if.end16
  %36 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6713
  %call47 = call i32 @spi_add_device(%struct.spi_device* %36) #11, !dbg !6714
  store i32 %call47, i32* %status, align 4, !dbg !6715
  %37 = load i32, i32* %status, align 4, !dbg !6716
  %cmp48 = icmp slt i32 %37, 0, !dbg !6718
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !6719

if.then50:                                        ; preds = %if.end46
  br label %err_remove_props, !dbg !6720

if.end51:                                         ; preds = %if.end46
  %38 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6721
  store %struct.spi_device* %38, %struct.spi_device** %retval, align 8, !dbg !6722
  br label %return, !dbg !6722

err_remove_props:                                 ; preds = %if.then50
  call void @llvm.dbg.label(metadata !6723), !dbg !6724
  %39 = load %struct.spi_board_info*, %struct.spi_board_info** %chip.addr, align 8, !dbg !6725
  %properties52 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %39, i32 0, i32 2, !dbg !6727
  %40 = load %struct.property_entry*, %struct.property_entry** %properties52, align 8, !dbg !6727
  %tobool53 = icmp ne %struct.property_entry* %40, null, !dbg !6725
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !6728

if.then54:                                        ; preds = %err_remove_props
  %41 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6729
  %dev55 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %41, i32 0, i32 0, !dbg !6730
  call void @device_remove_properties(%struct.device* %dev55) #11, !dbg !6731
  br label %if.end56, !dbg !6731

if.end56:                                         ; preds = %if.then54, %err_remove_props
  br label %err_dev_put, !dbg !6727

err_dev_put:                                      ; preds = %if.end56, %if.then41
  call void @llvm.dbg.label(metadata !6732), !dbg !6733
  %42 = load %struct.spi_device*, %struct.spi_device** %proxy, align 8, !dbg !6734
  call void @spi_dev_put(%struct.spi_device* %42) #11, !dbg !6735
  store %struct.spi_device* null, %struct.spi_device** %retval, align 8, !dbg !6736
  br label %return, !dbg !6736

return:                                           ; preds = %err_dev_put, %if.end51, %if.then
  %43 = load %struct.spi_device*, %struct.spi_device** %retval, align 8, !dbg !6737
  ret %struct.spi_device* %43, !dbg !6737
}

; Function Attrs: noredzone
declare dso_local i64 @strlen(i8*) #2

; Function Attrs: noredzone
declare dso_local i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i32 @device_add_properties(%struct.device*, %struct.property_entry*) #2

; Function Attrs: noredzone
declare dso_local void @device_remove_properties(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_dev_put(%struct.spi_device* %spi) #0 !dbg !6738 {
entry:
  %spi.addr = alloca %struct.spi_device*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !6739, metadata !DIExpression()), !dbg !6740
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6741
  %tobool = icmp ne %struct.spi_device* %0, null, !dbg !6741
  br i1 %tobool, label %if.then, label %if.end, !dbg !6743

if.then:                                          ; preds = %entry
  %1 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6744
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 0, !dbg !6745
  call void @put_device(%struct.device* %dev) #11, !dbg !6746
  br label %if.end, !dbg !6746

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6747
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_unregister_device(%struct.spi_device* %spi) #0 !dbg !6748 {
entry:
  %spi.addr = alloca %struct.spi_device*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp9 = alloca %struct.acpi_device*, align 8
  %__to_acpi_device_node_fwnode12 = alloca %struct.fwnode_handle*, align 8
  %tmp15 = alloca %struct.acpi_device*, align 8
  %__mptr18 = alloca i8*, align 8
  %tmp21 = alloca %struct.acpi_device*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !6749, metadata !DIExpression()), !dbg !6750
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6751
  %tobool = icmp ne %struct.spi_device* %0, null, !dbg !6751
  br i1 %tobool, label %if.end, label %if.then, !dbg !6753

if.then:                                          ; preds = %entry
  br label %return, !dbg !6754

if.end:                                           ; preds = %entry
  %1 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6755
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 0, !dbg !6757
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !6758
  %2 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !6758
  %tobool1 = icmp ne %struct.device_node* %2, null, !dbg !6755
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !6759

if.then2:                                         ; preds = %if.end
  %3 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6760
  %dev3 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %3, i32 0, i32 0, !dbg !6762
  %of_node4 = getelementptr inbounds %struct.device, %struct.device* %dev3, i32 0, i32 23, !dbg !6763
  %4 = load %struct.device_node*, %struct.device_node** %of_node4, align 8, !dbg !6763
  call void @of_node_clear_flag(%struct.device_node* %4, i64 3) #11, !dbg !6764
  %5 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6765
  %dev5 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %5, i32 0, i32 0, !dbg !6766
  %of_node6 = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 23, !dbg !6767
  %6 = load %struct.device_node*, %struct.device_node** %of_node6, align 8, !dbg !6767
  call void @of_node_put(%struct.device_node* %6) #11, !dbg !6768
  br label %if.end7, !dbg !6769

if.end7:                                          ; preds = %if.then2, %if.end
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !6770, metadata !DIExpression()), !dbg !6773
  %7 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6773
  %dev8 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %7, i32 0, i32 0, !dbg !6773
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %dev8, i32 0, i32 24, !dbg !6773
  %8 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !6773
  store %struct.fwnode_handle* %8, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6773
  %9 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6773
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %9) #11, !dbg !6773
  br i1 %call, label %cond.true, label %cond.false, !dbg !6773

cond.true:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6774, metadata !DIExpression()), !dbg !6776
  %10 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !6776
  %11 = bitcast %struct.fwnode_handle* %10 to i8*, !dbg !6776
  store i8* %11, i8** %__mptr, align 8, !dbg !6776
  br label %do.body, !dbg !6776

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !6777

do.end:                                           ; preds = %do.body
  %12 = load i8*, i8** %__mptr, align 8, !dbg !6776
  %add.ptr = getelementptr i8, i8* %12, i64 -16, !dbg !6776
  %13 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !6776
  store %struct.acpi_device* %13, %struct.acpi_device** %tmp9, align 8, !dbg !6777
  %14 = load %struct.acpi_device*, %struct.acpi_device** %tmp9, align 8, !dbg !6776
  br label %cond.end, !dbg !6773

cond.false:                                       ; preds = %if.end7
  br label %cond.end, !dbg !6773

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %14, %do.end ], [ null, %cond.false ], !dbg !6773
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !6773
  %15 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !6773
  %tobool10 = icmp ne %struct.acpi_device* %15, null, !dbg !6779
  br i1 %tobool10, label %if.then11, label %if.end26, !dbg !6780

if.then11:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode12, metadata !6781, metadata !DIExpression()), !dbg !6783
  %16 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6783
  %dev13 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %16, i32 0, i32 0, !dbg !6783
  %fwnode14 = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 24, !dbg !6783
  %17 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode14, align 8, !dbg !6783
  store %struct.fwnode_handle* %17, %struct.fwnode_handle** %__to_acpi_device_node_fwnode12, align 8, !dbg !6783
  %18 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode12, align 8, !dbg !6783
  %call16 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %18) #11, !dbg !6783
  br i1 %call16, label %cond.true17, label %cond.false23, !dbg !6783

cond.true17:                                      ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i8** %__mptr18, metadata !6784, metadata !DIExpression()), !dbg !6786
  %19 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode12, align 8, !dbg !6786
  %20 = bitcast %struct.fwnode_handle* %19 to i8*, !dbg !6786
  store i8* %20, i8** %__mptr18, align 8, !dbg !6786
  br label %do.body19, !dbg !6786

do.body19:                                        ; preds = %cond.true17
  br label %do.end20, !dbg !6787

do.end20:                                         ; preds = %do.body19
  %21 = load i8*, i8** %__mptr18, align 8, !dbg !6786
  %add.ptr22 = getelementptr i8, i8* %21, i64 -16, !dbg !6786
  %22 = bitcast i8* %add.ptr22 to %struct.acpi_device*, !dbg !6786
  store %struct.acpi_device* %22, %struct.acpi_device** %tmp21, align 8, !dbg !6787
  %23 = load %struct.acpi_device*, %struct.acpi_device** %tmp21, align 8, !dbg !6786
  br label %cond.end24, !dbg !6783

cond.false23:                                     ; preds = %if.then11
  br label %cond.end24, !dbg !6783

cond.end24:                                       ; preds = %cond.false23, %do.end20
  %cond25 = phi %struct.acpi_device* [ %23, %do.end20 ], [ null, %cond.false23 ], !dbg !6783
  store %struct.acpi_device* %cond25, %struct.acpi_device** %tmp15, align 8, !dbg !6783
  %24 = load %struct.acpi_device*, %struct.acpi_device** %tmp15, align 8, !dbg !6783
  call void @acpi_device_clear_enumerated(%struct.acpi_device* %24) #11, !dbg !6789
  br label %if.end26, !dbg !6789

if.end26:                                         ; preds = %cond.end24, %cond.end
  %25 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !6790
  %dev27 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %25, i32 0, i32 0, !dbg !6791
  call void @device_unregister(%struct.device* %dev27) #11, !dbg !6792
  br label %return, !dbg !6793

return:                                           ; preds = %if.end26, %if.then
  ret void, !dbg !6793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_clear_flag(%struct.device_node* %n, i64 %flag) #0 !dbg !6794 {
entry:
  %n.addr = alloca %struct.device_node*, align 8
  %flag.addr = alloca i64, align 8
  store %struct.device_node* %n, %struct.device_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %n.addr, metadata !6797, metadata !DIExpression()), !dbg !6798
  store i64 %flag, i64* %flag.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flag.addr, metadata !6799, metadata !DIExpression()), !dbg !6800
  %0 = load i64, i64* %flag.addr, align 8, !dbg !6801
  %1 = load %struct.device_node*, %struct.device_node** %n.addr, align 8, !dbg !6802
  %_flags = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 10, !dbg !6803
  call void @clear_bit(i64 %0, i64* %_flags) #11, !dbg !6804
  ret void, !dbg !6805
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_node_put(%struct.device_node* %node) #0 !dbg !6806 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !6809, metadata !DIExpression()), !dbg !6810
  ret void, !dbg !6811
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_acpi_device_node(%struct.fwnode_handle*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_clear_enumerated(%struct.acpi_device* %adev) #0 !dbg !6812 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !6814, metadata !DIExpression()), !dbg !6815
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !6816
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 9, !dbg !6817
  %1 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !6818
  %bf.load = load i32, i32* %1, align 4, !dbg !6819
  %bf.clear = and i32 %bf.load, -65, !dbg !6819
  store i32 %bf.clear, i32* %1, align 4, !dbg !6819
  ret void, !dbg !6820
}

; Function Attrs: noredzone
declare dso_local void @device_unregister(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_register_board_info(%struct.spi_board_info* %info, i32 %n) #0 !dbg !6821 {
entry:
  %retval = alloca i32, align 4
  %info.addr = alloca %struct.spi_board_info*, align 8
  %n.addr = alloca i32, align 4
  %bi = alloca %struct.boardinfo*, align 8
  %i = alloca i32, align 4
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  %__mptr27 = alloca i8*, align 8
  %tmp31 = alloca %struct.spi_controller*, align 8
  store %struct.spi_board_info* %info, %struct.spi_board_info** %info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_board_info** %info.addr, metadata !6826, metadata !DIExpression()), !dbg !6827
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata %struct.boardinfo** %bi, metadata !6830, metadata !DIExpression()), !dbg !6831
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6832, metadata !DIExpression()), !dbg !6833
  %0 = load i32, i32* %n.addr, align 4, !dbg !6834
  %tobool = icmp ne i32 %0, 0, !dbg !6834
  br i1 %tobool, label %if.end, label %if.then, !dbg !6836

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6837
  br label %return, !dbg !6837

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %n.addr, align 4, !dbg !6838
  %conv = zext i32 %1 to i64, !dbg !6838
  %call = call i8* @kcalloc(i64 %conv, i64 88, i32 3264) #11, !dbg !6839
  %2 = bitcast i8* %call to %struct.boardinfo*, !dbg !6839
  store %struct.boardinfo* %2, %struct.boardinfo** %bi, align 8, !dbg !6840
  %3 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6841
  %tobool1 = icmp ne %struct.boardinfo* %3, null, !dbg !6841
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !6843

if.then2:                                         ; preds = %if.end
  store i32 -12, i32* %retval, align 4, !dbg !6844
  br label %return, !dbg !6844

if.end3:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !6845
  br label %for.cond, !dbg !6847

for.cond:                                         ; preds = %for.inc33, %if.end3
  %4 = load i32, i32* %i, align 4, !dbg !6848
  %5 = load i32, i32* %n.addr, align 4, !dbg !6850
  %cmp = icmp ult i32 %4, %5, !dbg !6851
  br i1 %cmp, label %for.body, label %for.end35, !dbg !6852

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !6853, metadata !DIExpression()), !dbg !6855
  %6 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6856
  %board_info = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %6, i32 0, i32 1, !dbg !6857
  %7 = bitcast %struct.spi_board_info* %board_info to i8*, !dbg !6858
  %8 = load %struct.spi_board_info*, %struct.spi_board_info** %info.addr, align 8, !dbg !6859
  %9 = bitcast %struct.spi_board_info* %8 to i8*, !dbg !6858
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %9, i64 72, i1 false), !dbg !6858
  %10 = load %struct.spi_board_info*, %struct.spi_board_info** %info.addr, align 8, !dbg !6860
  %properties = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %10, i32 0, i32 2, !dbg !6862
  %11 = load %struct.property_entry*, %struct.property_entry** %properties, align 8, !dbg !6862
  %tobool5 = icmp ne %struct.property_entry* %11, null, !dbg !6860
  br i1 %tobool5, label %if.then6, label %if.end20, !dbg !6863

if.then6:                                         ; preds = %for.body
  %12 = load %struct.spi_board_info*, %struct.spi_board_info** %info.addr, align 8, !dbg !6864
  %properties7 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %12, i32 0, i32 2, !dbg !6866
  %13 = load %struct.property_entry*, %struct.property_entry** %properties7, align 8, !dbg !6866
  %call8 = call %struct.property_entry* @property_entries_dup(%struct.property_entry* %13) #11, !dbg !6867
  %14 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6868
  %board_info9 = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %14, i32 0, i32 1, !dbg !6869
  %properties10 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %board_info9, i32 0, i32 2, !dbg !6870
  store %struct.property_entry* %call8, %struct.property_entry** %properties10, align 8, !dbg !6871
  %15 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6872
  %board_info11 = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %15, i32 0, i32 1, !dbg !6874
  %properties12 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %board_info11, i32 0, i32 2, !dbg !6875
  %16 = load %struct.property_entry*, %struct.property_entry** %properties12, align 8, !dbg !6875
  %17 = bitcast %struct.property_entry* %16 to i8*, !dbg !6872
  %call13 = call zeroext i1 @IS_ERR(i8* %17) #11, !dbg !6876
  br i1 %call13, label %if.then14, label %if.end19, !dbg !6877

if.then14:                                        ; preds = %if.then6
  %18 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6878
  %board_info15 = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %18, i32 0, i32 1, !dbg !6879
  %properties16 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %board_info15, i32 0, i32 2, !dbg !6880
  %19 = load %struct.property_entry*, %struct.property_entry** %properties16, align 8, !dbg !6880
  %20 = bitcast %struct.property_entry* %19 to i8*, !dbg !6878
  %call17 = call i64 @PTR_ERR(i8* %20) #11, !dbg !6881
  %conv18 = trunc i64 %call17 to i32, !dbg !6881
  store i32 %conv18, i32* %retval, align 4, !dbg !6882
  br label %return, !dbg !6882

if.end19:                                         ; preds = %if.then6
  br label %if.end20, !dbg !6883

if.end20:                                         ; preds = %if.end19, %for.body
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !6884
  %21 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6885
  %list = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %21, i32 0, i32 0, !dbg !6886
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @board_list) #11, !dbg !6887
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !6888, metadata !DIExpression()), !dbg !6891
  %22 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @spi_controller_list, i32 0, i32 0), align 8, !dbg !6891
  %23 = bitcast %struct.list_head* %22 to i8*, !dbg !6891
  store i8* %23, i8** %__mptr, align 8, !dbg !6891
  br label %do.body, !dbg !6891

do.body:                                          ; preds = %if.end20
  br label %do.end, !dbg !6892

do.end:                                           ; preds = %do.body
  %24 = load i8*, i8** %__mptr, align 8, !dbg !6891
  %add.ptr = getelementptr i8, i8* %24, i64 -696, !dbg !6891
  %25 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !6891
  store %struct.spi_controller* %25, %struct.spi_controller** %tmp, align 8, !dbg !6892
  %26 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !6891
  store %struct.spi_controller* %26, %struct.spi_controller** %ctlr, align 8, !dbg !6894
  br label %for.cond21, !dbg !6894

for.cond21:                                       ; preds = %do.end30, %do.end
  %27 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6895
  %list22 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %27, i32 0, i32 1, !dbg !6895
  %cmp23 = icmp eq %struct.list_head* %list22, @spi_controller_list, !dbg !6895
  %lnot = xor i1 %cmp23, true, !dbg !6895
  br i1 %lnot, label %for.body25, label %for.end, !dbg !6894

for.body25:                                       ; preds = %for.cond21
  %28 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6897
  %29 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6898
  %board_info26 = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %29, i32 0, i32 1, !dbg !6899
  call void @spi_match_controller_to_boardinfo(%struct.spi_controller* %28, %struct.spi_board_info* %board_info26) #11, !dbg !6900
  br label %for.inc, !dbg !6900

for.inc:                                          ; preds = %for.body25
  call void @llvm.dbg.declare(metadata i8** %__mptr27, metadata !6901, metadata !DIExpression()), !dbg !6903
  %30 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !6903
  %list28 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %30, i32 0, i32 1, !dbg !6903
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list28, i32 0, i32 0, !dbg !6903
  %31 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !6903
  %32 = bitcast %struct.list_head* %31 to i8*, !dbg !6903
  store i8* %32, i8** %__mptr27, align 8, !dbg !6903
  br label %do.body29, !dbg !6903

do.body29:                                        ; preds = %for.inc
  br label %do.end30, !dbg !6904

do.end30:                                         ; preds = %do.body29
  %33 = load i8*, i8** %__mptr27, align 8, !dbg !6903
  %add.ptr32 = getelementptr i8, i8* %33, i64 -696, !dbg !6903
  %34 = bitcast i8* %add.ptr32 to %struct.spi_controller*, !dbg !6903
  store %struct.spi_controller* %34, %struct.spi_controller** %tmp31, align 8, !dbg !6904
  %35 = load %struct.spi_controller*, %struct.spi_controller** %tmp31, align 8, !dbg !6903
  store %struct.spi_controller* %35, %struct.spi_controller** %ctlr, align 8, !dbg !6895
  br label %for.cond21, !dbg !6895, !llvm.loop !6906

for.end:                                          ; preds = %for.cond21
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !6908
  br label %for.inc33, !dbg !6909

for.inc33:                                        ; preds = %for.end
  %36 = load i32, i32* %i, align 4, !dbg !6910
  %inc = add i32 %36, 1, !dbg !6910
  store i32 %inc, i32* %i, align 4, !dbg !6910
  %37 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !6911
  %incdec.ptr = getelementptr %struct.boardinfo, %struct.boardinfo* %37, i32 1, !dbg !6911
  store %struct.boardinfo* %incdec.ptr, %struct.boardinfo** %bi, align 8, !dbg !6911
  %38 = load %struct.spi_board_info*, %struct.spi_board_info** %info.addr, align 8, !dbg !6912
  %incdec.ptr34 = getelementptr %struct.spi_board_info, %struct.spi_board_info* %38, i32 1, !dbg !6912
  store %struct.spi_board_info* %incdec.ptr34, %struct.spi_board_info** %info.addr, align 8, !dbg !6912
  br label %for.cond, !dbg !6913, !llvm.loop !6914

for.end35:                                        ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6916
  br label %return, !dbg !6916

return:                                           ; preds = %for.end35, %if.then14, %if.then2, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !6917
  ret i32 %39, !dbg !6917
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #0 !dbg !6918 {
entry:
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !6923, metadata !DIExpression()), !dbg !6924
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !6925, metadata !DIExpression()), !dbg !6926
  %0 = load i64, i64* %n.addr, align 8, !dbg !6927
  %1 = load i64, i64* %size.addr, align 8, !dbg !6928
  %2 = load i32, i32* %flags.addr, align 4, !dbg !6929
  %or = or i32 %2, 256, !dbg !6930
  %call = call i8* @kmalloc_array(i64 %0, i64 %1, i32 %or) #11, !dbg !6931
  ret i8* %call, !dbg !6932
}

; Function Attrs: noredzone
declare dso_local %struct.property_entry* @property_entries_dup(%struct.property_entry*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @IS_ERR(i8* %ptr) #0 !dbg !6933 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6937, metadata !DIExpression()), !dbg !6938
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6939
  %1 = ptrtoint i8* %0 to i64, !dbg !6939
  %2 = inttoptr i64 %1 to i8*, !dbg !6939
  %3 = ptrtoint i8* %2 to i64, !dbg !6939
  %cmp = icmp uge i64 %3, -4095, !dbg !6939
  %lnot = xor i1 %cmp, true, !dbg !6939
  %lnot1 = xor i1 %lnot, true, !dbg !6939
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !6939
  %conv = sext i32 %lnot.ext to i64, !dbg !6939
  %tobool = icmp ne i64 %conv, 0, !dbg !6939
  ret i1 %tobool, !dbg !6940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @PTR_ERR(i8* %ptr) #0 !dbg !6941 {
entry:
  %ptr.addr = alloca i8*, align 8
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !6944, metadata !DIExpression()), !dbg !6945
  %0 = load i8*, i8** %ptr.addr, align 8, !dbg !6946
  %1 = ptrtoint i8* %0 to i64, !dbg !6947
  ret i64 %1, !dbg !6948
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !6949 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !6953, metadata !DIExpression()), !dbg !6954
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !6955, metadata !DIExpression()), !dbg !6956
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !6957
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6958
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !6959
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !6959
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !6960
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %2, %struct.list_head* %3) #11, !dbg !6961
  ret void, !dbg !6962
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_match_controller_to_boardinfo(%struct.spi_controller* %ctlr, %struct.spi_board_info* %bi) #0 !dbg !6963 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %bi.addr = alloca %struct.spi_board_info*, align 8
  %dev = alloca %struct.spi_device*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !6966, metadata !DIExpression()), !dbg !6967
  store %struct.spi_board_info* %bi, %struct.spi_board_info** %bi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_board_info** %bi.addr, metadata !6968, metadata !DIExpression()), !dbg !6969
  call void @llvm.dbg.declare(metadata %struct.spi_device** %dev, metadata !6970, metadata !DIExpression()), !dbg !6971
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !6972
  %bus_num = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 2, !dbg !6974
  %1 = load i16, i16* %bus_num, align 8, !dbg !6974
  %conv = sext i16 %1 to i32, !dbg !6972
  %2 = load %struct.spi_board_info*, %struct.spi_board_info** %bi.addr, align 8, !dbg !6975
  %bus_num1 = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %2, i32 0, i32 6, !dbg !6976
  %3 = load i16, i16* %bus_num1, align 8, !dbg !6976
  %conv2 = zext i16 %3 to i32, !dbg !6975
  %cmp = icmp ne i32 %conv, %conv2, !dbg !6977
  br i1 %cmp, label %if.then, label %if.end, !dbg !6978

if.then:                                          ; preds = %entry
  br label %if.end6, !dbg !6979

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !6980
  %5 = load %struct.spi_board_info*, %struct.spi_board_info** %bi.addr, align 8, !dbg !6981
  %call = call %struct.spi_device* @spi_new_device(%struct.spi_controller* %4, %struct.spi_board_info* %5) #11, !dbg !6982
  store %struct.spi_device* %call, %struct.spi_device** %dev, align 8, !dbg !6983
  %6 = load %struct.spi_device*, %struct.spi_device** %dev, align 8, !dbg !6984
  %tobool = icmp ne %struct.spi_device* %6, null, !dbg !6984
  br i1 %tobool, label %if.end6, label %if.then4, !dbg !6986

if.then4:                                         ; preds = %if.end
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !6987
  %dev5 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 0, !dbg !6987
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !6987
  %8 = load %struct.device*, %struct.device** %parent, align 8, !dbg !6987
  %9 = load %struct.spi_board_info*, %struct.spi_board_info** %bi.addr, align 8, !dbg !6987
  %modalias = getelementptr inbounds %struct.spi_board_info, %struct.spi_board_info* %9, i32 0, i32 0, !dbg !6987
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !6987
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %8, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.63, i64 0, i64 0), i8* %arraydecay) #14, !dbg !6987
  br label %if.end6, !dbg !6987

if.end6:                                          ; preds = %if.then, %if.then4, %if.end
  ret void, !dbg !6988
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_map_buf(%struct.spi_controller* %ctlr, %struct.device* %dev, %struct.sg_table* %sgt, i8* %buf, i64 %len, i32 %dir) #0 !dbg !6989 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %sgt.addr = alloca %struct.sg_table*, align 8
  %buf.addr = alloca i8*, align 8
  %len.addr = alloca i64, align 8
  %dir.addr = alloca i32, align 4
  %vmalloced_buf = alloca i8, align 1
  %max_seg_size = alloca i32, align 4
  %kmap_buf = alloca i8, align 1
  %desc_len = alloca i32, align 4
  %sgs = alloca i32, align 4
  %vm_page = alloca %struct.page*, align 8
  %sg = alloca %struct.scatterlist*, align 8
  %sg_buf = alloca i8*, align 8
  %min = alloca i64, align 8
  %i = alloca i32, align 4
  %ret = alloca i32, align 4
  %__UNIQUE_ID___x298 = alloca i32, align 4
  %__UNIQUE_ID___y299 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__UNIQUE_ID___x300 = alloca i32, align 4
  %__UNIQUE_ID___y301 = alloca i32, align 4
  %tmp8 = alloca i32, align 4
  %__UNIQUE_ID___x304 = alloca i64, align 8
  %__UNIQUE_ID___y305 = alloca i64, align 8
  %__UNIQUE_ID___x302 = alloca i64, align 8
  %__UNIQUE_ID___y303 = alloca i64, align 8
  %tmp36 = alloca i64, align 8
  %tmp43 = alloca i64, align 8
  %__UNIQUE_ID___x306 = alloca i64, align 8
  %__UNIQUE_ID___y307 = alloca i64, align 8
  %tmp64 = alloca i64, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !6993, metadata !DIExpression()), !dbg !6994
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !6995, metadata !DIExpression()), !dbg !6996
  store %struct.sg_table* %sgt, %struct.sg_table** %sgt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sg_table** %sgt.addr, metadata !6997, metadata !DIExpression()), !dbg !6998
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !6999, metadata !DIExpression()), !dbg !7000
  store i64 %len, i64* %len.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %len.addr, metadata !7001, metadata !DIExpression()), !dbg !7002
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !7003, metadata !DIExpression()), !dbg !7004
  call void @llvm.dbg.declare(metadata i8* %vmalloced_buf, metadata !7005, metadata !DIExpression()), !dbg !7007
  %0 = load i8*, i8** %buf.addr, align 8, !dbg !7008
  %call = call zeroext i1 @is_vmalloc_addr(i8* %0) #11, !dbg !7009
  %frombool = zext i1 %call to i8, !dbg !7007
  store i8 %frombool, i8* %vmalloced_buf, align 1, !dbg !7007
  call void @llvm.dbg.declare(metadata i32* %max_seg_size, metadata !7010, metadata !DIExpression()), !dbg !7011
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7012
  %call1 = call i32 @dma_get_max_seg_size(%struct.device* %1) #11, !dbg !7013
  store i32 %call1, i32* %max_seg_size, align 4, !dbg !7011
  call void @llvm.dbg.declare(metadata i8* %kmap_buf, metadata !7014, metadata !DIExpression()), !dbg !7015
  store i8 0, i8* %kmap_buf, align 1, !dbg !7015
  call void @llvm.dbg.declare(metadata i32* %desc_len, metadata !7016, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.declare(metadata i32* %sgs, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.declare(metadata %struct.page** %vm_page, metadata !7020, metadata !DIExpression()), !dbg !7021
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg, metadata !7022, metadata !DIExpression()), !dbg !7023
  call void @llvm.dbg.declare(metadata i8** %sg_buf, metadata !7024, metadata !DIExpression()), !dbg !7025
  call void @llvm.dbg.declare(metadata i64* %min, metadata !7026, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7028, metadata !DIExpression()), !dbg !7029
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7030, metadata !DIExpression()), !dbg !7031
  %2 = load i8, i8* %vmalloced_buf, align 1, !dbg !7032
  %tobool = trunc i8 %2 to i1, !dbg !7032
  br i1 %tobool, label %if.then, label %if.else, !dbg !7034

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x298, metadata !7035, metadata !DIExpression()), !dbg !7038
  %3 = load i32, i32* %max_seg_size, align 4, !dbg !7038
  store i32 %3, i32* %__UNIQUE_ID___x298, align 4, !dbg !7038
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y299, metadata !7039, metadata !DIExpression()), !dbg !7038
  store i32 4096, i32* %__UNIQUE_ID___y299, align 4, !dbg !7038
  %4 = load i32, i32* %__UNIQUE_ID___x298, align 4, !dbg !7038
  %5 = load i32, i32* %__UNIQUE_ID___y299, align 4, !dbg !7038
  %cmp = icmp slt i32 %4, %5, !dbg !7038
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7038

cond.true:                                        ; preds = %if.then
  %6 = load i32, i32* %__UNIQUE_ID___x298, align 4, !dbg !7038
  br label %cond.end, !dbg !7038

cond.false:                                       ; preds = %if.then
  %7 = load i32, i32* %__UNIQUE_ID___y299, align 4, !dbg !7038
  br label %cond.end, !dbg !7038

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !7038
  store i32 %cond, i32* %tmp, align 4, !dbg !7038
  %8 = load i32, i32* %tmp, align 4, !dbg !7038
  store i32 %8, i32* %desc_len, align 4, !dbg !7040
  %9 = load i64, i64* %len.addr, align 8, !dbg !7041
  %10 = load i8*, i8** %buf.addr, align 8, !dbg !7041
  %11 = ptrtoint i8* %10 to i64, !dbg !7041
  %and = and i64 %11, 4095, !dbg !7041
  %add = add i64 %9, %and, !dbg !7041
  %12 = load i32, i32* %desc_len, align 4, !dbg !7041
  %conv = sext i32 %12 to i64, !dbg !7041
  %add2 = add i64 %add, %conv, !dbg !7041
  %sub = sub i64 %add2, 1, !dbg !7041
  %13 = load i32, i32* %desc_len, align 4, !dbg !7041
  %conv3 = sext i32 %13 to i64, !dbg !7041
  %div = udiv i64 %sub, %conv3, !dbg !7041
  %conv4 = trunc i64 %div to i32, !dbg !7041
  store i32 %conv4, i32* %sgs, align 4, !dbg !7042
  br label %if.end22, !dbg !7043

if.else:                                          ; preds = %entry
  %14 = load i8*, i8** %buf.addr, align 8, !dbg !7044
  %15 = ptrtoint i8* %14 to i64, !dbg !7044
  %call5 = call zeroext i1 @__virt_addr_valid(i64 %15) #11, !dbg !7044
  br i1 %call5, label %if.then6, label %if.else21, !dbg !7046

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x300, metadata !7047, metadata !DIExpression()), !dbg !7050
  %16 = load i32, i32* %max_seg_size, align 4, !dbg !7050
  store i32 %16, i32* %__UNIQUE_ID___x300, align 4, !dbg !7050
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y301, metadata !7051, metadata !DIExpression()), !dbg !7050
  %17 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7050
  %max_dma_len = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %17, i32 0, i32 40, !dbg !7050
  %18 = load i64, i64* %max_dma_len, align 8, !dbg !7050
  %conv7 = trunc i64 %18 to i32, !dbg !7050
  store i32 %conv7, i32* %__UNIQUE_ID___y301, align 4, !dbg !7050
  %19 = load i32, i32* %__UNIQUE_ID___x300, align 4, !dbg !7050
  %20 = load i32, i32* %__UNIQUE_ID___y301, align 4, !dbg !7050
  %cmp9 = icmp slt i32 %19, %20, !dbg !7050
  br i1 %cmp9, label %cond.true11, label %cond.false12, !dbg !7050

cond.true11:                                      ; preds = %if.then6
  %21 = load i32, i32* %__UNIQUE_ID___x300, align 4, !dbg !7050
  br label %cond.end13, !dbg !7050

cond.false12:                                     ; preds = %if.then6
  %22 = load i32, i32* %__UNIQUE_ID___y301, align 4, !dbg !7050
  br label %cond.end13, !dbg !7050

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ %21, %cond.true11 ], [ %22, %cond.false12 ], !dbg !7050
  store i32 %cond14, i32* %tmp8, align 4, !dbg !7050
  %23 = load i32, i32* %tmp8, align 4, !dbg !7050
  store i32 %23, i32* %desc_len, align 4, !dbg !7052
  %24 = load i64, i64* %len.addr, align 8, !dbg !7053
  %25 = load i32, i32* %desc_len, align 4, !dbg !7053
  %conv15 = sext i32 %25 to i64, !dbg !7053
  %add16 = add i64 %24, %conv15, !dbg !7053
  %sub17 = sub i64 %add16, 1, !dbg !7053
  %26 = load i32, i32* %desc_len, align 4, !dbg !7053
  %conv18 = sext i32 %26 to i64, !dbg !7053
  %div19 = udiv i64 %sub17, %conv18, !dbg !7053
  %conv20 = trunc i64 %div19 to i32, !dbg !7053
  store i32 %conv20, i32* %sgs, align 4, !dbg !7054
  br label %if.end, !dbg !7055

if.else21:                                        ; preds = %if.else
  store i32 -22, i32* %retval, align 4, !dbg !7056
  br label %return, !dbg !7056

if.end:                                           ; preds = %cond.end13
  br label %if.end22

if.end22:                                         ; preds = %if.end, %cond.end
  %27 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7058
  %28 = load i32, i32* %sgs, align 4, !dbg !7059
  %call23 = call i32 @sg_alloc_table(%struct.sg_table* %27, i32 %28, i32 3264) #11, !dbg !7060
  store i32 %call23, i32* %ret, align 4, !dbg !7061
  %29 = load i32, i32* %ret, align 4, !dbg !7062
  %cmp24 = icmp ne i32 %29, 0, !dbg !7064
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !7065

if.then26:                                        ; preds = %if.end22
  %30 = load i32, i32* %ret, align 4, !dbg !7066
  store i32 %30, i32* %retval, align 4, !dbg !7067
  br label %return, !dbg !7067

if.end27:                                         ; preds = %if.end22
  %31 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7068
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %31, i32 0, i32 0, !dbg !7069
  %32 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !7069
  %arrayidx = getelementptr %struct.scatterlist, %struct.scatterlist* %32, i64 0, !dbg !7068
  store %struct.scatterlist* %arrayidx, %struct.scatterlist** %sg, align 8, !dbg !7070
  store i32 0, i32* %i, align 4, !dbg !7071
  br label %for.cond, !dbg !7073

for.cond:                                         ; preds = %for.inc, %if.end27
  %33 = load i32, i32* %i, align 4, !dbg !7074
  %34 = load i32, i32* %sgs, align 4, !dbg !7076
  %cmp28 = icmp slt i32 %33, %34, !dbg !7077
  br i1 %cmp28, label %for.body, label %for.end, !dbg !7078

for.body:                                         ; preds = %for.cond
  %35 = load i8, i8* %vmalloced_buf, align 1, !dbg !7079
  %tobool30 = trunc i8 %35 to i1, !dbg !7079
  br i1 %tobool30, label %if.then32, label %if.else62, !dbg !7082

if.then32:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x304, metadata !7083, metadata !DIExpression()), !dbg !7086
  %36 = load i32, i32* %desc_len, align 4, !dbg !7086
  %conv33 = sext i32 %36 to i64, !dbg !7086
  store i64 %conv33, i64* %__UNIQUE_ID___x304, align 8, !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y305, metadata !7087, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x302, metadata !7088, metadata !DIExpression()), !dbg !7090
  %37 = load i64, i64* %len.addr, align 8, !dbg !7090
  store i64 %37, i64* %__UNIQUE_ID___x302, align 8, !dbg !7090
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y303, metadata !7091, metadata !DIExpression()), !dbg !7090
  %38 = load i8*, i8** %buf.addr, align 8, !dbg !7090
  %39 = ptrtoint i8* %38 to i64, !dbg !7090
  %and34 = and i64 %39, 4095, !dbg !7090
  %sub35 = sub i64 4096, %and34, !dbg !7090
  store i64 %sub35, i64* %__UNIQUE_ID___y303, align 8, !dbg !7090
  %40 = load i64, i64* %__UNIQUE_ID___x302, align 8, !dbg !7090
  %41 = load i64, i64* %__UNIQUE_ID___y303, align 8, !dbg !7090
  %cmp37 = icmp ult i64 %40, %41, !dbg !7090
  br i1 %cmp37, label %cond.true39, label %cond.false40, !dbg !7090

cond.true39:                                      ; preds = %if.then32
  %42 = load i64, i64* %__UNIQUE_ID___x302, align 8, !dbg !7090
  br label %cond.end41, !dbg !7090

cond.false40:                                     ; preds = %if.then32
  %43 = load i64, i64* %__UNIQUE_ID___y303, align 8, !dbg !7090
  br label %cond.end41, !dbg !7090

cond.end41:                                       ; preds = %cond.false40, %cond.true39
  %cond42 = phi i64 [ %42, %cond.true39 ], [ %43, %cond.false40 ], !dbg !7090
  store i64 %cond42, i64* %tmp36, align 8, !dbg !7090
  %44 = load i64, i64* %tmp36, align 8, !dbg !7090
  store i64 %44, i64* %__UNIQUE_ID___y305, align 8, !dbg !7086
  %45 = load i64, i64* %__UNIQUE_ID___x304, align 8, !dbg !7086
  %46 = load i64, i64* %__UNIQUE_ID___y305, align 8, !dbg !7086
  %cmp44 = icmp ult i64 %45, %46, !dbg !7086
  br i1 %cmp44, label %cond.true46, label %cond.false47, !dbg !7086

cond.true46:                                      ; preds = %cond.end41
  %47 = load i64, i64* %__UNIQUE_ID___x304, align 8, !dbg !7086
  br label %cond.end48, !dbg !7086

cond.false47:                                     ; preds = %cond.end41
  %48 = load i64, i64* %__UNIQUE_ID___y305, align 8, !dbg !7086
  br label %cond.end48, !dbg !7086

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i64 [ %47, %cond.true46 ], [ %48, %cond.false47 ], !dbg !7086
  store i64 %cond49, i64* %tmp43, align 8, !dbg !7086
  %49 = load i64, i64* %tmp43, align 8, !dbg !7086
  store i64 %49, i64* %min, align 8, !dbg !7092
  %50 = load i8, i8* %vmalloced_buf, align 1, !dbg !7093
  %tobool50 = trunc i8 %50 to i1, !dbg !7093
  br i1 %tobool50, label %if.then51, label %if.else53, !dbg !7095

if.then51:                                        ; preds = %cond.end48
  %51 = load i8*, i8** %buf.addr, align 8, !dbg !7096
  %call52 = call %struct.page* @vmalloc_to_page(i8* %51) #11, !dbg !7097
  store %struct.page* %call52, %struct.page** %vm_page, align 8, !dbg !7098
  br label %if.end55, !dbg !7099

if.else53:                                        ; preds = %cond.end48
  %52 = load i8*, i8** %buf.addr, align 8, !dbg !7100
  %call54 = call %struct.page* @kmap_to_page(i8* %52) #11, !dbg !7101
  store %struct.page* %call54, %struct.page** %vm_page, align 8, !dbg !7102
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.then51
  %53 = load %struct.page*, %struct.page** %vm_page, align 8, !dbg !7103
  %tobool56 = icmp ne %struct.page* %53, null, !dbg !7103
  br i1 %tobool56, label %if.end58, label %if.then57, !dbg !7105

if.then57:                                        ; preds = %if.end55
  %54 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7106
  call void @sg_free_table(%struct.sg_table* %54) #11, !dbg !7108
  store i32 -12, i32* %retval, align 4, !dbg !7109
  br label %return, !dbg !7109

if.end58:                                         ; preds = %if.end55
  %55 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7110
  %56 = load %struct.page*, %struct.page** %vm_page, align 8, !dbg !7111
  %57 = load i64, i64* %min, align 8, !dbg !7112
  %conv59 = trunc i64 %57 to i32, !dbg !7112
  %58 = load i8*, i8** %buf.addr, align 8, !dbg !7113
  %59 = ptrtoint i8* %58 to i64, !dbg !7113
  %and60 = and i64 %59, 4095, !dbg !7113
  %conv61 = trunc i64 %and60 to i32, !dbg !7113
  call void @sg_set_page(%struct.scatterlist* %55, %struct.page* %56, i32 %conv59, i32 %conv61) #11, !dbg !7114
  br label %if.end72, !dbg !7115

if.else62:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x306, metadata !7116, metadata !DIExpression()), !dbg !7119
  %60 = load i64, i64* %len.addr, align 8, !dbg !7119
  store i64 %60, i64* %__UNIQUE_ID___x306, align 8, !dbg !7119
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y307, metadata !7120, metadata !DIExpression()), !dbg !7119
  %61 = load i32, i32* %desc_len, align 4, !dbg !7119
  %conv63 = sext i32 %61 to i64, !dbg !7119
  store i64 %conv63, i64* %__UNIQUE_ID___y307, align 8, !dbg !7119
  %62 = load i64, i64* %__UNIQUE_ID___x306, align 8, !dbg !7119
  %63 = load i64, i64* %__UNIQUE_ID___y307, align 8, !dbg !7119
  %cmp65 = icmp ult i64 %62, %63, !dbg !7119
  br i1 %cmp65, label %cond.true67, label %cond.false68, !dbg !7119

cond.true67:                                      ; preds = %if.else62
  %64 = load i64, i64* %__UNIQUE_ID___x306, align 8, !dbg !7119
  br label %cond.end69, !dbg !7119

cond.false68:                                     ; preds = %if.else62
  %65 = load i64, i64* %__UNIQUE_ID___y307, align 8, !dbg !7119
  br label %cond.end69, !dbg !7119

cond.end69:                                       ; preds = %cond.false68, %cond.true67
  %cond70 = phi i64 [ %64, %cond.true67 ], [ %65, %cond.false68 ], !dbg !7119
  store i64 %cond70, i64* %tmp64, align 8, !dbg !7119
  %66 = load i64, i64* %tmp64, align 8, !dbg !7119
  store i64 %66, i64* %min, align 8, !dbg !7121
  %67 = load i8*, i8** %buf.addr, align 8, !dbg !7122
  store i8* %67, i8** %sg_buf, align 8, !dbg !7123
  %68 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7124
  %69 = load i8*, i8** %sg_buf, align 8, !dbg !7125
  %70 = load i64, i64* %min, align 8, !dbg !7126
  %conv71 = trunc i64 %70 to i32, !dbg !7126
  call void @sg_set_buf(%struct.scatterlist* %68, i8* %69, i32 %conv71) #11, !dbg !7127
  br label %if.end72

if.end72:                                         ; preds = %cond.end69, %if.end58
  %71 = load i64, i64* %min, align 8, !dbg !7128
  %72 = load i8*, i8** %buf.addr, align 8, !dbg !7129
  %add.ptr = getelementptr i8, i8* %72, i64 %71, !dbg !7129
  store i8* %add.ptr, i8** %buf.addr, align 8, !dbg !7129
  %73 = load i64, i64* %min, align 8, !dbg !7130
  %74 = load i64, i64* %len.addr, align 8, !dbg !7131
  %sub73 = sub i64 %74, %73, !dbg !7131
  store i64 %sub73, i64* %len.addr, align 8, !dbg !7131
  %75 = load %struct.scatterlist*, %struct.scatterlist** %sg, align 8, !dbg !7132
  %call74 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %75) #11, !dbg !7133
  store %struct.scatterlist* %call74, %struct.scatterlist** %sg, align 8, !dbg !7134
  br label %for.inc, !dbg !7135

for.inc:                                          ; preds = %if.end72
  %76 = load i32, i32* %i, align 4, !dbg !7136
  %inc = add i32 %76, 1, !dbg !7136
  store i32 %inc, i32* %i, align 4, !dbg !7136
  br label %for.cond, !dbg !7137, !llvm.loop !7138

for.end:                                          ; preds = %for.cond
  %77 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7140
  %78 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7140
  %sgl75 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %78, i32 0, i32 0, !dbg !7140
  %79 = load %struct.scatterlist*, %struct.scatterlist** %sgl75, align 8, !dbg !7140
  %80 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7140
  %nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %80, i32 0, i32 1, !dbg !7140
  %81 = load i32, i32* %nents, align 8, !dbg !7140
  %82 = load i32, i32* %dir.addr, align 4, !dbg !7140
  %call76 = call i32 @dma_map_sg_attrs(%struct.device* %77, %struct.scatterlist* %79, i32 %81, i32 %82, i64 0) #11, !dbg !7140
  store i32 %call76, i32* %ret, align 4, !dbg !7141
  %83 = load i32, i32* %ret, align 4, !dbg !7142
  %tobool77 = icmp ne i32 %83, 0, !dbg !7142
  br i1 %tobool77, label %if.end79, label %if.then78, !dbg !7144

if.then78:                                        ; preds = %for.end
  store i32 -12, i32* %ret, align 4, !dbg !7145
  br label %if.end79, !dbg !7146

if.end79:                                         ; preds = %if.then78, %for.end
  %84 = load i32, i32* %ret, align 4, !dbg !7147
  %cmp80 = icmp slt i32 %84, 0, !dbg !7149
  br i1 %cmp80, label %if.then82, label %if.end83, !dbg !7150

if.then82:                                        ; preds = %if.end79
  %85 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7151
  call void @sg_free_table(%struct.sg_table* %85) #11, !dbg !7153
  %86 = load i32, i32* %ret, align 4, !dbg !7154
  store i32 %86, i32* %retval, align 4, !dbg !7155
  br label %return, !dbg !7155

if.end83:                                         ; preds = %if.end79
  %87 = load i32, i32* %ret, align 4, !dbg !7156
  %88 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7157
  %nents84 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %88, i32 0, i32 1, !dbg !7158
  store i32 %87, i32* %nents84, align 8, !dbg !7159
  store i32 0, i32* %retval, align 4, !dbg !7160
  br label %return, !dbg !7160

return:                                           ; preds = %if.end83, %if.then82, %if.then57, %if.then26, %if.else21
  %89 = load i32, i32* %retval, align 4, !dbg !7161
  ret i32 %89, !dbg !7161
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @is_vmalloc_addr(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_get_max_seg_size(%struct.device* %dev) #0 !dbg !7162 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7166, metadata !DIExpression()), !dbg !7167
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7168
  %dma_parms = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 20, !dbg !7170
  %1 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms, align 8, !dbg !7170
  %tobool = icmp ne %struct.device_dma_parameters* %1, null, !dbg !7168
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7171

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7172
  %dma_parms1 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 20, !dbg !7173
  %3 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms1, align 8, !dbg !7173
  %max_segment_size = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %3, i32 0, i32 0, !dbg !7174
  %4 = load i32, i32* %max_segment_size, align 8, !dbg !7174
  %tobool2 = icmp ne i32 %4, 0, !dbg !7172
  br i1 %tobool2, label %if.then, label %if.end, !dbg !7175

if.then:                                          ; preds = %land.lhs.true
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7176
  %dma_parms3 = getelementptr inbounds %struct.device, %struct.device* %5, i32 0, i32 20, !dbg !7177
  %6 = load %struct.device_dma_parameters*, %struct.device_dma_parameters** %dma_parms3, align 8, !dbg !7177
  %max_segment_size4 = getelementptr inbounds %struct.device_dma_parameters, %struct.device_dma_parameters* %6, i32 0, i32 0, !dbg !7178
  %7 = load i32, i32* %max_segment_size4, align 8, !dbg !7178
  store i32 %7, i32* %retval, align 4, !dbg !7179
  br label %return, !dbg !7179

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 65536, i32* %retval, align 4, !dbg !7180
  br label %return, !dbg !7180

return:                                           ; preds = %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !7181
  ret i32 %8, !dbg !7181
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @__virt_addr_valid(i64) #2

; Function Attrs: noredzone
declare dso_local i32 @sg_alloc_table(%struct.sg_table*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.page* @vmalloc_to_page(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.page* @kmap_to_page(i8* %addr) #0 !dbg !7182 {
entry:
  %addr.addr = alloca i8*, align 8
  store i8* %addr, i8** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %addr.addr, metadata !7186, metadata !DIExpression()), !dbg !7187
  %0 = load i64, i64* @vmemmap_base, align 8, !dbg !7188
  %1 = inttoptr i64 %0 to %struct.page*, !dbg !7188
  %2 = load i8*, i8** %addr.addr, align 8, !dbg !7188
  %3 = ptrtoint i8* %2 to i64, !dbg !7188
  %call = call i64 @__phys_addr_nodebug(i64 %3) #11, !dbg !7188
  %shr = lshr i64 %call, 12, !dbg !7188
  %add.ptr = getelementptr %struct.page, %struct.page* %1, i64 %shr, !dbg !7188
  ret %struct.page* %add.ptr, !dbg !7189
}

; Function Attrs: noredzone
declare dso_local void @sg_free_table(%struct.sg_table*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_page(%struct.scatterlist* %sg, %struct.page* %page, i32 %len, i32 %offset) #0 !dbg !7190 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %len.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !7193, metadata !DIExpression()), !dbg !7194
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !7195, metadata !DIExpression()), !dbg !7196
  store i32 %len, i32* %len.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %len.addr, metadata !7197, metadata !DIExpression()), !dbg !7198
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !7199, metadata !DIExpression()), !dbg !7200
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7201
  %1 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !7202
  call void @sg_assign_page(%struct.scatterlist* %0, %struct.page* %1) #11, !dbg !7203
  %2 = load i32, i32* %offset.addr, align 4, !dbg !7204
  %3 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7205
  %offset1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %3, i32 0, i32 1, !dbg !7206
  store i32 %2, i32* %offset1, align 8, !dbg !7207
  %4 = load i32, i32* %len.addr, align 4, !dbg !7208
  %5 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7209
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %5, i32 0, i32 2, !dbg !7210
  store i32 %4, i32* %length, align 4, !dbg !7211
  ret void, !dbg !7212
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_set_buf(%struct.scatterlist* %sg, i8* %buf, i32 %buflen) #0 !dbg !7213 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %buf.addr = alloca i8*, align 8
  %buflen.addr = alloca i32, align 4
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !7216, metadata !DIExpression()), !dbg !7217
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !7218, metadata !DIExpression()), !dbg !7219
  store i32 %buflen, i32* %buflen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %buflen.addr, metadata !7220, metadata !DIExpression()), !dbg !7221
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !7222
  %1 = load i64, i64* @vmemmap_base, align 8, !dbg !7223
  %2 = inttoptr i64 %1 to %struct.page*, !dbg !7223
  %3 = load i8*, i8** %buf.addr, align 8, !dbg !7223
  %4 = ptrtoint i8* %3 to i64, !dbg !7223
  %call = call i64 @__phys_addr_nodebug(i64 %4) #11, !dbg !7223
  %shr = lshr i64 %call, 12, !dbg !7223
  %add.ptr = getelementptr %struct.page, %struct.page* %2, i64 %shr, !dbg !7223
  %5 = load i32, i32* %buflen.addr, align 4, !dbg !7224
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !7225
  %7 = ptrtoint i8* %6 to i64, !dbg !7225
  %and = and i64 %7, 4095, !dbg !7225
  %conv = trunc i64 %and to i32, !dbg !7225
  call void @sg_set_page(%struct.scatterlist* %0, %struct.page* %add.ptr, i32 %5, i32 %conv) #11, !dbg !7226
  ret void, !dbg !7227
}

; Function Attrs: noredzone
declare dso_local %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: noredzone
declare dso_local i32 @dma_map_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_unmap_buf(%struct.spi_controller* %ctlr, %struct.device* %dev, %struct.sg_table* %sgt, i32 %dir) #0 !dbg !7228 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %sgt.addr = alloca %struct.sg_table*, align 8
  %dir.addr = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7231, metadata !DIExpression()), !dbg !7232
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !7233, metadata !DIExpression()), !dbg !7234
  store %struct.sg_table* %sgt, %struct.sg_table** %sgt.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.sg_table** %sgt.addr, metadata !7235, metadata !DIExpression()), !dbg !7236
  store i32 %dir, i32* %dir.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dir.addr, metadata !7237, metadata !DIExpression()), !dbg !7238
  %0 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7239
  %orig_nents = getelementptr inbounds %struct.sg_table, %struct.sg_table* %0, i32 0, i32 2, !dbg !7241
  %1 = load i32, i32* %orig_nents, align 4, !dbg !7241
  %tobool = icmp ne i32 %1, 0, !dbg !7239
  br i1 %tobool, label %if.then, label %if.end, !dbg !7242

if.then:                                          ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !7243
  %3 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7243
  %sgl = getelementptr inbounds %struct.sg_table, %struct.sg_table* %3, i32 0, i32 0, !dbg !7243
  %4 = load %struct.scatterlist*, %struct.scatterlist** %sgl, align 8, !dbg !7243
  %5 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7243
  %orig_nents1 = getelementptr inbounds %struct.sg_table, %struct.sg_table* %5, i32 0, i32 2, !dbg !7243
  %6 = load i32, i32* %orig_nents1, align 4, !dbg !7243
  %7 = load i32, i32* %dir.addr, align 4, !dbg !7243
  call void @dma_unmap_sg_attrs(%struct.device* %2, %struct.scatterlist* %4, i32 %6, i32 %7, i64 0) #11, !dbg !7243
  %8 = load %struct.sg_table*, %struct.sg_table** %sgt.addr, align 8, !dbg !7245
  call void @sg_free_table(%struct.sg_table* %8) #11, !dbg !7246
  br label %if.end, !dbg !7247

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7248
}

; Function Attrs: noredzone
declare dso_local void @dma_unmap_sg_attrs(%struct.device*, %struct.scatterlist*, i32, i32, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_delay_to_ns(%struct.spi_delay* %_delay, %struct.spi_transfer* %xfer) #0 !dbg !7249 {
entry:
  %retval = alloca i32, align 4
  %_delay.addr = alloca %struct.spi_delay*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %delay = alloca i32, align 4
  %unit = alloca i32, align 4
  %hz = alloca i32, align 4
  store %struct.spi_delay* %_delay, %struct.spi_delay** %_delay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_delay** %_delay.addr, metadata !7252, metadata !DIExpression()), !dbg !7253
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !7254, metadata !DIExpression()), !dbg !7255
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !7256, metadata !DIExpression()), !dbg !7257
  %0 = load %struct.spi_delay*, %struct.spi_delay** %_delay.addr, align 8, !dbg !7258
  %value = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %0, i32 0, i32 0, !dbg !7259
  %1 = load i16, i16* %value, align 2, !dbg !7259
  %conv = zext i16 %1 to i32, !dbg !7258
  store i32 %conv, i32* %delay, align 4, !dbg !7257
  call void @llvm.dbg.declare(metadata i32* %unit, metadata !7260, metadata !DIExpression()), !dbg !7261
  %2 = load %struct.spi_delay*, %struct.spi_delay** %_delay.addr, align 8, !dbg !7262
  %unit1 = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %2, i32 0, i32 1, !dbg !7263
  %3 = load i8, i8* %unit1, align 2, !dbg !7263
  %conv2 = zext i8 %3 to i32, !dbg !7262
  store i32 %conv2, i32* %unit, align 4, !dbg !7261
  call void @llvm.dbg.declare(metadata i32* %hz, metadata !7264, metadata !DIExpression()), !dbg !7265
  %4 = load i32, i32* %delay, align 4, !dbg !7266
  %tobool = icmp ne i32 %4, 0, !dbg !7266
  br i1 %tobool, label %if.end, label %if.then, !dbg !7268

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7269
  br label %return, !dbg !7269

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %unit, align 4, !dbg !7270
  switch i32 %5, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb3
    i32 2, label %sw.bb4
  ], !dbg !7271

sw.bb:                                            ; preds = %if.end
  %6 = load i32, i32* %delay, align 4, !dbg !7272
  %mul = mul i32 %6, 1000, !dbg !7272
  store i32 %mul, i32* %delay, align 4, !dbg !7272
  br label %sw.epilog, !dbg !7274

sw.bb3:                                           ; preds = %if.end
  br label %sw.epilog, !dbg !7275

sw.bb4:                                           ; preds = %if.end
  %7 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7276
  %tobool5 = icmp ne %struct.spi_transfer* %7, null, !dbg !7276
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !7278

if.then6:                                         ; preds = %sw.bb4
  store i32 -22, i32* %retval, align 4, !dbg !7279
  br label %return, !dbg !7279

if.end7:                                          ; preds = %sw.bb4
  %8 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7280
  %effective_speed_hz = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %8, i32 0, i32 14, !dbg !7281
  %9 = load i32, i32* %effective_speed_hz, align 4, !dbg !7281
  %tobool8 = icmp ne i32 %9, 0, !dbg !7280
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !7280

cond.true:                                        ; preds = %if.end7
  br label %cond.end, !dbg !7280

cond.false:                                       ; preds = %if.end7
  %10 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7282
  %speed_hz = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %10, i32 0, i32 13, !dbg !7283
  %11 = load i32, i32* %speed_hz, align 8, !dbg !7283
  %div = udiv i32 %11, 2, !dbg !7284
  br label %cond.end, !dbg !7280

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %div, %cond.false ], !dbg !7280
  store i32 %cond, i32* %hz, align 4, !dbg !7285
  %12 = load i32, i32* %hz, align 4, !dbg !7286
  %tobool9 = icmp ne i32 %12, 0, !dbg !7286
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !7288

if.then10:                                        ; preds = %cond.end
  store i32 -22, i32* %retval, align 4, !dbg !7289
  br label %return, !dbg !7289

if.end11:                                         ; preds = %cond.end
  %13 = load i32, i32* %hz, align 4, !dbg !7290
  %add = add i32 1000000000, %13, !dbg !7290
  %sub = sub i32 %add, 1, !dbg !7290
  %14 = load i32, i32* %hz, align 4, !dbg !7290
  %div12 = udiv i32 %sub, %14, !dbg !7290
  %15 = load i32, i32* %delay, align 4, !dbg !7291
  %mul13 = mul i32 %15, %div12, !dbg !7291
  store i32 %mul13, i32* %delay, align 4, !dbg !7291
  br label %sw.epilog, !dbg !7292

sw.default:                                       ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !7293
  br label %return, !dbg !7293

sw.epilog:                                        ; preds = %if.end11, %sw.bb3, %sw.bb
  %16 = load i32, i32* %delay, align 4, !dbg !7294
  store i32 %16, i32* %retval, align 4, !dbg !7295
  br label %return, !dbg !7295

return:                                           ; preds = %sw.epilog, %sw.default, %if.then10, %if.then6, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !7296
  ret i32 %17, !dbg !7296
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_delay_exec(%struct.spi_delay* %_delay, %struct.spi_transfer* %xfer) #0 !dbg !7297 {
entry:
  %retval = alloca i32, align 4
  %_delay.addr = alloca %struct.spi_delay*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %delay = alloca i32, align 4
  store %struct.spi_delay* %_delay, %struct.spi_delay** %_delay.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_delay** %_delay.addr, metadata !7298, metadata !DIExpression()), !dbg !7299
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !7300, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !7302, metadata !DIExpression()), !dbg !7303
  br label %do.body, !dbg !7304

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7305

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !7307

do.end:                                           ; preds = %do.body1
  br label %do.end2, !dbg !7305

do.end2:                                          ; preds = %do.end
  %0 = load %struct.spi_delay*, %struct.spi_delay** %_delay.addr, align 8, !dbg !7309
  %tobool = icmp ne %struct.spi_delay* %0, null, !dbg !7309
  br i1 %tobool, label %if.end, label %if.then, !dbg !7311

if.then:                                          ; preds = %do.end2
  store i32 -22, i32* %retval, align 4, !dbg !7312
  br label %return, !dbg !7312

if.end:                                           ; preds = %do.end2
  %1 = load %struct.spi_delay*, %struct.spi_delay** %_delay.addr, align 8, !dbg !7313
  %2 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7314
  %call = call i32 @spi_delay_to_ns(%struct.spi_delay* %1, %struct.spi_transfer* %2) #11, !dbg !7315
  store i32 %call, i32* %delay, align 4, !dbg !7316
  %3 = load i32, i32* %delay, align 4, !dbg !7317
  %cmp = icmp slt i32 %3, 0, !dbg !7319
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !7320

if.then3:                                         ; preds = %if.end
  %4 = load i32, i32* %delay, align 4, !dbg !7321
  store i32 %4, i32* %retval, align 4, !dbg !7322
  br label %return, !dbg !7322

if.end4:                                          ; preds = %if.end
  %5 = load i32, i32* %delay, align 4, !dbg !7323
  call void @_spi_transfer_delay_ns(i32 %5) #11, !dbg !7324
  store i32 0, i32* %retval, align 4, !dbg !7325
  br label %return, !dbg !7325

return:                                           ; preds = %if.end4, %if.then3, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !7326
  ret i32 %6, !dbg !7326
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_spi_transfer_delay_ns(i32 %ns) #0 !dbg !7327 {
entry:
  %ns.addr = alloca i32, align 4
  %us = alloca i32, align 4
  store i32 %ns, i32* %ns.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ns.addr, metadata !7330, metadata !DIExpression()), !dbg !7331
  %0 = load i32, i32* %ns.addr, align 4, !dbg !7332
  %tobool = icmp ne i32 %0, 0, !dbg !7332
  br i1 %tobool, label %if.end, label %if.then, !dbg !7334

if.then:                                          ; preds = %entry
  br label %if.end34, !dbg !7335

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %ns.addr, align 4, !dbg !7336
  %cmp = icmp ule i32 %1, 1000, !dbg !7338
  br i1 %cmp, label %if.then1, label %if.else9, !dbg !7339

if.then1:                                         ; preds = %if.end
  %2 = load i32, i32* %ns.addr, align 4, !dbg !7340
  %3 = call i1 @llvm.is.constant.i32(i32 %2), !dbg !7340
  br i1 %3, label %if.then2, label %if.else6, !dbg !7344

if.then2:                                         ; preds = %if.then1
  %4 = load i32, i32* %ns.addr, align 4, !dbg !7345
  %div = udiv i32 %4, 20000, !dbg !7345
  %cmp3 = icmp uge i32 %div, 1, !dbg !7345
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !7348

if.then4:                                         ; preds = %if.then2
  call void @__bad_ndelay() #11, !dbg !7345
  br label %if.end5, !dbg !7345

if.else:                                          ; preds = %if.then2
  %5 = load i32, i32* %ns.addr, align 4, !dbg !7345
  %conv = zext i32 %5 to i64, !dbg !7345
  %mul = mul i64 %conv, 5, !dbg !7345
  call void @__const_udelay(i64 %mul) #11, !dbg !7345
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  br label %if.end8, !dbg !7348

if.else6:                                         ; preds = %if.then1
  %6 = load i32, i32* %ns.addr, align 4, !dbg !7349
  %conv7 = zext i32 %6 to i64, !dbg !7349
  call void @__ndelay(i64 %conv7) #11, !dbg !7349
  br label %if.end8

if.end8:                                          ; preds = %if.else6, %if.end5
  br label %if.end34, !dbg !7351

if.else9:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %us, metadata !7352, metadata !DIExpression()), !dbg !7354
  %7 = load i32, i32* %ns.addr, align 4, !dbg !7355
  %add = add i32 %7, 1000, !dbg !7355
  %sub = sub i32 %add, 1, !dbg !7355
  %div10 = udiv i32 %sub, 1000, !dbg !7355
  store i32 %div10, i32* %us, align 4, !dbg !7354
  %8 = load i32, i32* %us, align 4, !dbg !7356
  %cmp11 = icmp ule i32 %8, 10, !dbg !7358
  br i1 %cmp11, label %if.then13, label %if.else26, !dbg !7359

if.then13:                                        ; preds = %if.else9
  %9 = load i32, i32* %us, align 4, !dbg !7360
  %10 = call i1 @llvm.is.constant.i32(i32 %9), !dbg !7360
  br i1 %10, label %if.then14, label %if.else23, !dbg !7363

if.then14:                                        ; preds = %if.then13
  %11 = load i32, i32* %us, align 4, !dbg !7364
  %div15 = udiv i32 %11, 20000, !dbg !7364
  %cmp16 = icmp uge i32 %div15, 1, !dbg !7364
  br i1 %cmp16, label %if.then18, label %if.else19, !dbg !7367

if.then18:                                        ; preds = %if.then14
  call void @__bad_udelay() #11, !dbg !7364
  br label %if.end22, !dbg !7364

if.else19:                                        ; preds = %if.then14
  %12 = load i32, i32* %us, align 4, !dbg !7364
  %conv20 = zext i32 %12 to i64, !dbg !7364
  %mul21 = mul i64 %conv20, 4295, !dbg !7364
  call void @__const_udelay(i64 %mul21) #11, !dbg !7364
  br label %if.end22

if.end22:                                         ; preds = %if.else19, %if.then18
  br label %if.end25, !dbg !7367

if.else23:                                        ; preds = %if.then13
  %13 = load i32, i32* %us, align 4, !dbg !7368
  %conv24 = zext i32 %13 to i64, !dbg !7368
  call void @__udelay(i64 %conv24) #11, !dbg !7368
  br label %if.end25

if.end25:                                         ; preds = %if.else23, %if.end22
  br label %if.end33, !dbg !7370

if.else26:                                        ; preds = %if.else9
  %14 = load i32, i32* %us, align 4, !dbg !7371
  %conv27 = zext i32 %14 to i64, !dbg !7371
  %15 = load i32, i32* %us, align 4, !dbg !7372
  %16 = load i32, i32* %us, align 4, !dbg !7373
  %add28 = add i32 %16, 10, !dbg !7373
  %sub29 = sub i32 %add28, 1, !dbg !7373
  %div30 = udiv i32 %sub29, 10, !dbg !7373
  %add31 = add i32 %15, %div30, !dbg !7374
  %conv32 = zext i32 %add31 to i64, !dbg !7372
  call void @usleep_range(i64 %conv27, i64 %conv32) #11, !dbg !7375
  br label %if.end33

if.end33:                                         ; preds = %if.else26, %if.end25
  br label %if.end34

if.end34:                                         ; preds = %if.then, %if.end33, %if.end8
  ret void, !dbg !7376
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_finalize_current_transfer(%struct.spi_controller* %ctlr) #0 !dbg !7377 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7378, metadata !DIExpression()), !dbg !7379
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7380
  %xfer_completion = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 39, !dbg !7381
  call void @complete(%struct.completion* %xfer_completion) #11, !dbg !7382
  ret void, !dbg !7383
}

; Function Attrs: noredzone
declare dso_local void @complete(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_take_timestamp_pre(%struct.spi_controller* %ctlr, %struct.spi_transfer* %xfer, i64 %progress, i1 zeroext %irqs_off) #0 !dbg !7384 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %progress.addr = alloca i64, align 8
  %irqs_off.addr = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7387, metadata !DIExpression()), !dbg !7388
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !7389, metadata !DIExpression()), !dbg !7390
  store i64 %progress, i64* %progress.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %progress.addr, metadata !7391, metadata !DIExpression()), !dbg !7392
  %frombool = zext i1 %irqs_off to i8
  store i8 %frombool, i8* %irqs_off.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %irqs_off.addr, metadata !7393, metadata !DIExpression()), !dbg !7394
  %0 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7395
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %0, i32 0, i32 17, !dbg !7397
  %1 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts, align 8, !dbg !7397
  %tobool = icmp ne %struct.ptp_system_timestamp* %1, null, !dbg !7395
  br i1 %tobool, label %if.end, label %if.then, !dbg !7398

if.then:                                          ; preds = %entry
  br label %return, !dbg !7399

if.end:                                           ; preds = %entry
  %2 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7400
  %timestamped = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %2, i32 0, i32 18, !dbg !7402
  %3 = load i8, i8* %timestamped, align 8, !dbg !7402
  %tobool1 = trunc i8 %3 to i1, !dbg !7402
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7403

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !7404

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %progress.addr, align 8, !dbg !7405
  %5 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7407
  %ptp_sts_word_pre = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %5, i32 0, i32 15, !dbg !7408
  %6 = load i32, i32* %ptp_sts_word_pre, align 8, !dbg !7408
  %conv = zext i32 %6 to i64, !dbg !7407
  %cmp = icmp ugt i64 %4, %conv, !dbg !7409
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7410

if.then5:                                         ; preds = %if.end3
  br label %return, !dbg !7411

if.end6:                                          ; preds = %if.end3
  %7 = load i64, i64* %progress.addr, align 8, !dbg !7412
  %conv7 = trunc i64 %7 to i32, !dbg !7412
  %8 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7413
  %ptp_sts_word_pre8 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %8, i32 0, i32 15, !dbg !7414
  store i32 %conv7, i32* %ptp_sts_word_pre8, align 8, !dbg !7415
  %9 = load i8, i8* %irqs_off.addr, align 1, !dbg !7416
  %tobool9 = trunc i8 %9 to i1, !dbg !7416
  br i1 %tobool9, label %if.then10, label %if.end15, !dbg !7418

if.then10:                                        ; preds = %if.end6
  br label %do.body, !dbg !7419

do.body:                                          ; preds = %if.then10
  br label %do.body11, !dbg !7421

do.body11:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7423, metadata !DIExpression()), !dbg !7426
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7427, metadata !DIExpression()), !dbg !7426
  %cmp12 = icmp eq i64* %__dummy, %__dummy2, !dbg !7426
  %conv13 = zext i1 %cmp12 to i32, !dbg !7426
  store i32 1, i32* %tmp, align 4, !dbg !7426
  %10 = load i32, i32* %tmp, align 4, !dbg !7426
  %call = call i64 @arch_local_irq_save() #11, !dbg !7428
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7428
  %irq_flags = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %11, i32 0, i32 66, !dbg !7428
  store i64 %call, i64* %irq_flags, align 8, !dbg !7428
  br label %do.end, !dbg !7428

do.end:                                           ; preds = %do.body11
  br label %do.end14, !dbg !7421

do.end14:                                         ; preds = %do.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7429, !srcloc !7430
  br label %if.end15, !dbg !7431

if.end15:                                         ; preds = %do.end14, %if.end6
  %12 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7432
  %ptp_sts16 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %12, i32 0, i32 17, !dbg !7433
  %13 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts16, align 8, !dbg !7433
  call void @ptp_read_system_prets(%struct.ptp_system_timestamp* %13) #11, !dbg !7434
  br label %return, !dbg !7435

return:                                           ; preds = %if.end15, %if.then5, %if.then2, %if.then
  ret void, !dbg !7435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ptp_read_system_prets(%struct.ptp_system_timestamp* %sts) #0 !dbg !7436 {
entry:
  %sts.addr = alloca %struct.ptp_system_timestamp*, align 8
  store %struct.ptp_system_timestamp* %sts, %struct.ptp_system_timestamp** %sts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ptp_system_timestamp** %sts.addr, metadata !7439, metadata !DIExpression()), !dbg !7440
  %0 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %sts.addr, align 8, !dbg !7441
  %tobool = icmp ne %struct.ptp_system_timestamp* %0, null, !dbg !7441
  br i1 %tobool, label %if.then, label %if.end, !dbg !7443

if.then:                                          ; preds = %entry
  %1 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %sts.addr, align 8, !dbg !7444
  %pre_ts = getelementptr inbounds %struct.ptp_system_timestamp, %struct.ptp_system_timestamp* %1, i32 0, i32 0, !dbg !7445
  call void @ktime_get_real_ts64(%struct.timespec64* %pre_ts) #11, !dbg !7446
  br label %if.end, !dbg !7446

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7447
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_take_timestamp_post(%struct.spi_controller* %ctlr, %struct.spi_transfer* %xfer, i64 %progress, i1 zeroext %irqs_off) #0 !dbg !7448 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %progress.addr = alloca i64, align 8
  %irqs_off.addr = alloca i8, align 1
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7449, metadata !DIExpression()), !dbg !7450
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !7451, metadata !DIExpression()), !dbg !7452
  store i64 %progress, i64* %progress.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %progress.addr, metadata !7453, metadata !DIExpression()), !dbg !7454
  %frombool = zext i1 %irqs_off to i8
  store i8 %frombool, i8* %irqs_off.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %irqs_off.addr, metadata !7455, metadata !DIExpression()), !dbg !7456
  %0 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7457
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %0, i32 0, i32 17, !dbg !7459
  %1 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts, align 8, !dbg !7459
  %tobool = icmp ne %struct.ptp_system_timestamp* %1, null, !dbg !7457
  br i1 %tobool, label %if.end, label %if.then, !dbg !7460

if.then:                                          ; preds = %entry
  br label %return, !dbg !7461

if.end:                                           ; preds = %entry
  %2 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7462
  %timestamped = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %2, i32 0, i32 18, !dbg !7464
  %3 = load i8, i8* %timestamped, align 8, !dbg !7464
  %tobool1 = trunc i8 %3 to i1, !dbg !7464
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !7465

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !7466

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %progress.addr, align 8, !dbg !7467
  %5 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7469
  %ptp_sts_word_post = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %5, i32 0, i32 16, !dbg !7470
  %6 = load i32, i32* %ptp_sts_word_post, align 4, !dbg !7470
  %conv = zext i32 %6 to i64, !dbg !7469
  %cmp = icmp ult i64 %4, %conv, !dbg !7471
  br i1 %cmp, label %if.then5, label %if.end6, !dbg !7472

if.then5:                                         ; preds = %if.end3
  br label %return, !dbg !7473

if.end6:                                          ; preds = %if.end3
  %7 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7474
  %ptp_sts7 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %7, i32 0, i32 17, !dbg !7475
  %8 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts7, align 8, !dbg !7475
  call void @ptp_read_system_postts(%struct.ptp_system_timestamp* %8) #11, !dbg !7476
  %9 = load i8, i8* %irqs_off.addr, align 1, !dbg !7477
  %tobool8 = trunc i8 %9 to i1, !dbg !7477
  br i1 %tobool8, label %if.then9, label %if.end14, !dbg !7479

if.then9:                                         ; preds = %if.end6
  br label %do.body, !dbg !7480

do.body:                                          ; preds = %if.then9
  br label %do.body10, !dbg !7482

do.body10:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7484, metadata !DIExpression()), !dbg !7487
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7488, metadata !DIExpression()), !dbg !7487
  %cmp11 = icmp eq i64* %__dummy, %__dummy2, !dbg !7487
  %conv12 = zext i1 %cmp11 to i32, !dbg !7487
  store i32 1, i32* %tmp, align 4, !dbg !7487
  %10 = load i32, i32* %tmp, align 4, !dbg !7487
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7489
  %irq_flags = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %11, i32 0, i32 66, !dbg !7489
  %12 = load i64, i64* %irq_flags, align 8, !dbg !7489
  call void @arch_local_irq_restore(i64 %12) #11, !dbg !7489
  br label %do.end, !dbg !7489

do.end:                                           ; preds = %do.body10
  br label %do.end13, !dbg !7482

do.end13:                                         ; preds = %do.end
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7490, !srcloc !7491
  br label %if.end14, !dbg !7492

if.end14:                                         ; preds = %do.end13, %if.end6
  %13 = load i64, i64* %progress.addr, align 8, !dbg !7493
  %conv15 = trunc i64 %13 to i32, !dbg !7493
  %14 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7494
  %ptp_sts_word_post16 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %14, i32 0, i32 16, !dbg !7495
  store i32 %conv15, i32* %ptp_sts_word_post16, align 4, !dbg !7496
  %15 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !7497
  %timestamped17 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %15, i32 0, i32 18, !dbg !7498
  store i8 1, i8* %timestamped17, align 8, !dbg !7499
  br label %return, !dbg !7500

return:                                           ; preds = %if.end14, %if.then5, %if.then2, %if.then
  ret void, !dbg !7500
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @ptp_read_system_postts(%struct.ptp_system_timestamp* %sts) #0 !dbg !7501 {
entry:
  %sts.addr = alloca %struct.ptp_system_timestamp*, align 8
  store %struct.ptp_system_timestamp* %sts, %struct.ptp_system_timestamp** %sts.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ptp_system_timestamp** %sts.addr, metadata !7502, metadata !DIExpression()), !dbg !7503
  %0 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %sts.addr, align 8, !dbg !7504
  %tobool = icmp ne %struct.ptp_system_timestamp* %0, null, !dbg !7504
  br i1 %tobool, label %if.then, label %if.end, !dbg !7506

if.then:                                          ; preds = %entry
  %1 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %sts.addr, align 8, !dbg !7507
  %post_ts = getelementptr inbounds %struct.ptp_system_timestamp, %struct.ptp_system_timestamp* %1, i32 0, i32 1, !dbg !7508
  call void @ktime_get_real_ts64(%struct.timespec64* %post_ts) #11, !dbg !7509
  br label %if.end, !dbg !7509

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_restore(i64 %f) #0 !dbg !7511 {
entry:
  %f.addr = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  store i64 %f, i64* %f.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %f.addr, metadata !7514, metadata !DIExpression()), !dbg !7515
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !7516, metadata !DIExpression()), !dbg !7518
  %0 = load i64, i64* %__edi, align 8, !dbg !7518
  store i64 %0, i64* %__edi, align 8, !dbg !7518
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !7519, metadata !DIExpression()), !dbg !7518
  %1 = load i64, i64* %__esi, align 8, !dbg !7518
  store i64 %1, i64* %__esi, align 8, !dbg !7518
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !7520, metadata !DIExpression()), !dbg !7518
  %2 = load i64, i64* %__edx, align 8, !dbg !7518
  store i64 %2, i64* %__edx, align 8, !dbg !7518
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !7521, metadata !DIExpression()), !dbg !7518
  %3 = load i64, i64* %__ecx, align 8, !dbg !7518
  store i64 %3, i64* %__ecx, align 8, !dbg !7518
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !7522, metadata !DIExpression()), !dbg !7518
  %4 = load i64, i64* %__eax, align 8, !dbg !7518
  store i64 %4, i64* %__eax, align 8, !dbg !7518
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), align 8, !dbg !7518
  %6 = call i64 @llvm.read_register.i64(metadata !5410), !dbg !7518
  %7 = load i64, i64* %f.addr, align 8, !dbg !7518
  %8 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 37, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 1, i32 0), i32 1, i64 %7, i64 %6) #7, !dbg !7518, !srcloc !7523
  %asmresult = extractvalue { i64, i64 } %8, 0, !dbg !7518
  %asmresult1 = extractvalue { i64, i64 } %8, 1, !dbg !7518
  store i64 %asmresult, i64* %__eax, align 8, !dbg !7518
  call void @llvm.write_register.i64(metadata !5410, i64 %asmresult1), !dbg !7518
  ret void, !dbg !7524
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_message* @spi_get_next_queued_message(%struct.spi_controller* %ctlr) #0 !dbg !7525 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !5420, metadata !DIExpression()), !dbg !7528
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !7530
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !7531
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %next = alloca %struct.spi_message*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %head__ = alloca %struct.list_head*, align 8
  %pos__ = alloca %struct.list_head*, align 8
  %tmp21 = alloca %struct.list_head*, align 8
  %tmp23 = alloca %struct.spi_message*, align 8
  %__mptr = alloca i8*, align 8
  %tmp28 = alloca %struct.spi_message*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata %struct.spi_message** %next, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7542, metadata !DIExpression()), !dbg !7543
  br label %do.body, !dbg !7544

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7545

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7546, metadata !DIExpression()), !dbg !7548
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7549, metadata !DIExpression()), !dbg !7548
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7548
  %conv = zext i1 %cmp to i32, !dbg !7548
  store i32 1, i32* %tmp, align 4, !dbg !7548
  %0 = load i32, i32* %tmp, align 4, !dbg !7548
  br label %do.body2, !dbg !7550

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7551

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7552

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7554, metadata !DIExpression()), !dbg !7557
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7558, metadata !DIExpression()), !dbg !7557
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7557
  %conv8 = zext i1 %cmp7 to i32, !dbg !7557
  store i32 1, i32* %tmp9, align 4, !dbg !7557
  %1 = load i32, i32* %tmp9, align 4, !dbg !7557
  %call = call i64 @arch_local_irq_save() #11, !dbg !7559
  store i64 %call, i64* %flags, align 8, !dbg !7559
  br label %do.end, !dbg !7559

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7552

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7551

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7560, !srcloc !7561
  br label %do.body12, !dbg !7560

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7562
  %queue_lock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 26, !dbg !7562
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7563
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7564
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !7564
  br label %do.end14, !dbg !7562

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7560

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7551

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7550

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7545

do.end18:                                         ; preds = %do.end17
  call void @llvm.dbg.declare(metadata %struct.list_head** %head__, metadata !7565, metadata !DIExpression()), !dbg !7567
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7567
  %queue = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 27, !dbg !7567
  store %struct.list_head* %queue, %struct.list_head** %head__, align 8, !dbg !7567
  call void @llvm.dbg.declare(metadata %struct.list_head** %pos__, metadata !7568, metadata !DIExpression()), !dbg !7567
  br label %do.body19, !dbg !7569

do.body19:                                        ; preds = %do.end18
  br label %do.end20, !dbg !7571

do.end20:                                         ; preds = %do.body19
  %6 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !7569
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !7569
  %7 = load volatile %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !7569
  store %struct.list_head* %7, %struct.list_head** %tmp21, align 8, !dbg !7571
  %8 = load %struct.list_head*, %struct.list_head** %tmp21, align 8, !dbg !7569
  store %struct.list_head* %8, %struct.list_head** %pos__, align 8, !dbg !7567
  %9 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !7567
  %10 = load %struct.list_head*, %struct.list_head** %head__, align 8, !dbg !7567
  %cmp24 = icmp ne %struct.list_head* %9, %10, !dbg !7567
  br i1 %cmp24, label %cond.true, label %cond.false, !dbg !7567

cond.true:                                        ; preds = %do.end20
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7573, metadata !DIExpression()), !dbg !7575
  %11 = load %struct.list_head*, %struct.list_head** %pos__, align 8, !dbg !7575
  %12 = bitcast %struct.list_head* %11 to i8*, !dbg !7575
  store i8* %12, i8** %__mptr, align 8, !dbg !7575
  br label %do.body26, !dbg !7575

do.body26:                                        ; preds = %cond.true
  br label %do.end27, !dbg !7576

do.end27:                                         ; preds = %do.body26
  %13 = load i8*, i8** %__mptr, align 8, !dbg !7575
  %add.ptr = getelementptr i8, i8* %13, i64 -64, !dbg !7575
  %14 = bitcast i8* %add.ptr to %struct.spi_message*, !dbg !7575
  store %struct.spi_message* %14, %struct.spi_message** %tmp28, align 8, !dbg !7576
  %15 = load %struct.spi_message*, %struct.spi_message** %tmp28, align 8, !dbg !7575
  br label %cond.end, !dbg !7567

cond.false:                                       ; preds = %do.end20
  br label %cond.end, !dbg !7567

cond.end:                                         ; preds = %cond.false, %do.end27
  %cond = phi %struct.spi_message* [ %15, %do.end27 ], [ null, %cond.false ], !dbg !7567
  store %struct.spi_message* %cond, %struct.spi_message** %tmp23, align 8, !dbg !7567
  %16 = load %struct.spi_message*, %struct.spi_message** %tmp23, align 8, !dbg !7567
  store %struct.spi_message* %16, %struct.spi_message** %next, align 8, !dbg !7578
  %17 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7579
  %queue_lock29 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %17, i32 0, i32 26, !dbg !7580
  %18 = load i64, i64* %flags, align 8, !dbg !7581
  store %struct.spinlock* %queue_lock29, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %18, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !7582
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !7582
  store i32 1, i32* %tmp.i, align 4, !dbg !7582
  %19 = load i32, i32* %tmp.i, align 4, !dbg !7582
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !7583
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !7583
  store i32 1, i32* %tmp8.i, align 4, !dbg !7583
  %20 = load i32, i32* %tmp8.i, align 4, !dbg !7583
  %21 = load i64, i64* %flags.addr.i, align 8, !dbg !7584
  call void @arch_local_irq_restore(i64 %21) #12, !dbg !7584
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7585, !srcloc !5559
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !7586
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !7586
  %rlock.i31 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !7586
  %24 = load %struct.spi_message*, %struct.spi_message** %next, align 8, !dbg !7587
  ret %struct.spi_message* %24, !dbg !7588
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_finalize_current_message(%struct.spi_controller* %ctlr) #0 !dbg !7589 {
entry:
  %lock.addr.i150 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i150, metadata !5420, metadata !DIExpression()), !dbg !7590
  %flags.addr.i151 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i151, metadata !5427, metadata !DIExpression()), !dbg !7592
  %tmp.i152 = alloca i32, align 4
  %tmp8.i153 = alloca i32, align 4
  %lock.addr.i148 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i148, metadata !5429, metadata !DIExpression()), !dbg !7593
  %lock.addr.i146 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i146, metadata !5420, metadata !DIExpression()), !dbg !7600
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !7602
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !7603
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %mesg = alloca %struct.spi_message*, align 8
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp23 = alloca %struct.spi_transfer*, align 8
  %__mptr27 = alloca i8*, align 8
  %tmp32 = alloca %struct.spi_transfer*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp46 = alloca %struct.spi_transfer*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp82 = alloca i64, align 8
  %__mptr90 = alloca i8*, align 8
  %tmp95 = alloca %struct.spi_transfer*, align 8
  %__dummy113 = alloca i64, align 8
  %__dummy2114 = alloca i64, align 8
  %tmp117 = alloca i32, align 4
  %__dummy121 = alloca i64, align 8
  %__dummy2122 = alloca i64, align 8
  %tmp125 = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7610, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !7612, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.declare(metadata %struct.spi_message** %mesg, metadata !7614, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7616, metadata !DIExpression()), !dbg !7617
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7618, metadata !DIExpression()), !dbg !7619
  br label %do.body, !dbg !7620

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7621

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7622, metadata !DIExpression()), !dbg !7624
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7625, metadata !DIExpression()), !dbg !7624
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7624
  %conv = zext i1 %cmp to i32, !dbg !7624
  store i32 1, i32* %tmp, align 4, !dbg !7624
  %0 = load i32, i32* %tmp, align 4, !dbg !7624
  br label %do.body2, !dbg !7626

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !7627

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !7628

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !7630, metadata !DIExpression()), !dbg !7633
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !7634, metadata !DIExpression()), !dbg !7633
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !7633
  %conv8 = zext i1 %cmp7 to i32, !dbg !7633
  store i32 1, i32* %tmp9, align 4, !dbg !7633
  %1 = load i32, i32* %tmp9, align 4, !dbg !7633
  %call = call i64 @arch_local_irq_save() #11, !dbg !7635
  store i64 %call, i64* %flags, align 8, !dbg !7635
  br label %do.end, !dbg !7635

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !7628

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !7627

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7636, !srcloc !7637
  br label %do.body12, !dbg !7636

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7638
  %queue_lock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 26, !dbg !7638
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !7639
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !7640
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !7640
  br label %do.end14, !dbg !7638

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !7636

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !7627

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7626

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7621

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7641
  %cur_msg = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 28, !dbg !7642
  %6 = load %struct.spi_message*, %struct.spi_message** %cur_msg, align 8, !dbg !7642
  store %struct.spi_message* %6, %struct.spi_message** %mesg, align 8, !dbg !7643
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7644
  %queue_lock19 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 26, !dbg !7645
  %8 = load i64, i64* %flags, align 8, !dbg !7646
  store %struct.spinlock* %queue_lock19, %struct.spinlock** %lock.addr.i146, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !7647
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !7647
  store i32 1, i32* %tmp.i, align 4, !dbg !7647
  %9 = load i32, i32* %tmp.i, align 4, !dbg !7647
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !7648
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !7648
  store i32 1, i32* %tmp8.i, align 4, !dbg !7648
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !7648
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !7649
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !7649
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7650, !srcloc !5559
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i146, align 8, !dbg !7651
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !7651
  %rlock.i147 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !7651
  %14 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7652
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %14, i32 0, i32 65, !dbg !7654
  %15 = load i8, i8* %ptp_sts_supported, align 8, !dbg !7654
  %tobool = trunc i8 %15 to i1, !dbg !7654
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !7655

land.lhs.true:                                    ; preds = %do.end18
  %16 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7656
  %transfer_one = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 48, !dbg !7657
  %17 = load i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %transfer_one, align 8, !dbg !7657
  %tobool20 = icmp ne i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)* %17, null, !dbg !7656
  br i1 %tobool20, label %if.end, label %if.then, !dbg !7658

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7659, metadata !DIExpression()), !dbg !7663
  %18 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7663
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %18, i32 0, i32 0, !dbg !7663
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !7663
  %19 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7663
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !7663
  store i8* %20, i8** %__mptr, align 8, !dbg !7663
  br label %do.body21, !dbg !7663

do.body21:                                        ; preds = %if.then
  br label %do.end22, !dbg !7664

do.end22:                                         ; preds = %do.body21
  %21 = load i8*, i8** %__mptr, align 8, !dbg !7663
  %add.ptr = getelementptr i8, i8* %21, i64 -120, !dbg !7663
  %22 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !7663
  store %struct.spi_transfer* %22, %struct.spi_transfer** %tmp23, align 8, !dbg !7664
  %23 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp23, align 8, !dbg !7663
  store %struct.spi_transfer* %23, %struct.spi_transfer** %xfer, align 8, !dbg !7666
  br label %for.cond, !dbg !7666

for.cond:                                         ; preds = %do.end31, %do.end22
  %24 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7667
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %24, i32 0, i32 19, !dbg !7667
  %25 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7667
  %transfers24 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %25, i32 0, i32 0, !dbg !7667
  %cmp25 = icmp eq %struct.list_head* %transfer_list, %transfers24, !dbg !7667
  %lnot = xor i1 %cmp25, true, !dbg !7667
  br i1 %lnot, label %for.body, label %for.end, !dbg !7666

for.body:                                         ; preds = %for.cond
  %26 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7669
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %26, i32 0, i32 17, !dbg !7671
  %27 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts, align 8, !dbg !7671
  call void @ptp_read_system_postts(%struct.ptp_system_timestamp* %27) #11, !dbg !7672
  %28 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7673
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %28, i32 0, i32 2, !dbg !7674
  %29 = load i32, i32* %len, align 8, !dbg !7674
  %30 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7675
  %ptp_sts_word_post = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %30, i32 0, i32 16, !dbg !7676
  store i32 %29, i32* %ptp_sts_word_post, align 4, !dbg !7677
  br label %for.inc, !dbg !7678

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr27, metadata !7679, metadata !DIExpression()), !dbg !7681
  %31 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7681
  %transfer_list28 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %31, i32 0, i32 19, !dbg !7681
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list28, i32 0, i32 0, !dbg !7681
  %32 = load %struct.list_head*, %struct.list_head** %next29, align 8, !dbg !7681
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !7681
  store i8* %33, i8** %__mptr27, align 8, !dbg !7681
  br label %do.body30, !dbg !7681

do.body30:                                        ; preds = %for.inc
  br label %do.end31, !dbg !7682

do.end31:                                         ; preds = %do.body30
  %34 = load i8*, i8** %__mptr27, align 8, !dbg !7681
  %add.ptr33 = getelementptr i8, i8* %34, i64 -120, !dbg !7681
  %35 = bitcast i8* %add.ptr33 to %struct.spi_transfer*, !dbg !7681
  store %struct.spi_transfer* %35, %struct.spi_transfer** %tmp32, align 8, !dbg !7682
  %36 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp32, align 8, !dbg !7681
  store %struct.spi_transfer* %36, %struct.spi_transfer** %xfer, align 8, !dbg !7667
  br label %for.cond, !dbg !7667, !llvm.loop !7684

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7686

if.end:                                           ; preds = %for.end, %land.lhs.true, %do.end18
  %37 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7687
  %ptp_sts_supported34 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %37, i32 0, i32 65, !dbg !7687
  %38 = load i8, i8* %ptp_sts_supported34, align 8, !dbg !7687
  %tobool35 = trunc i8 %38 to i1, !dbg !7687
  %lnot36 = xor i1 %tobool35, true, !dbg !7687
  %lnot37 = xor i1 %lnot36, true, !dbg !7687
  %lnot.ext = zext i1 %lnot37 to i32, !dbg !7687
  %conv38 = sext i32 %lnot.ext to i64, !dbg !7687
  %tobool39 = icmp ne i64 %conv38, 0, !dbg !7687
  br i1 %tobool39, label %if.then40, label %if.end98, !dbg !7689

if.then40:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !7690, metadata !DIExpression()), !dbg !7693
  %39 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7693
  %transfers42 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %39, i32 0, i32 0, !dbg !7693
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers42, i32 0, i32 0, !dbg !7693
  %40 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !7693
  %41 = bitcast %struct.list_head* %40 to i8*, !dbg !7693
  store i8* %41, i8** %__mptr41, align 8, !dbg !7693
  br label %do.body44, !dbg !7693

do.body44:                                        ; preds = %if.then40
  br label %do.end45, !dbg !7694

do.end45:                                         ; preds = %do.body44
  %42 = load i8*, i8** %__mptr41, align 8, !dbg !7693
  %add.ptr47 = getelementptr i8, i8* %42, i64 -120, !dbg !7693
  %43 = bitcast i8* %add.ptr47 to %struct.spi_transfer*, !dbg !7693
  store %struct.spi_transfer* %43, %struct.spi_transfer** %tmp46, align 8, !dbg !7694
  %44 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp46, align 8, !dbg !7693
  store %struct.spi_transfer* %44, %struct.spi_transfer** %xfer, align 8, !dbg !7696
  br label %for.cond48, !dbg !7696

for.cond48:                                       ; preds = %do.end94, %do.end45
  %45 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7697
  %transfer_list49 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %45, i32 0, i32 19, !dbg !7697
  %46 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7697
  %transfers50 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %46, i32 0, i32 0, !dbg !7697
  %cmp51 = icmp eq %struct.list_head* %transfer_list49, %transfers50, !dbg !7697
  %lnot53 = xor i1 %cmp51, true, !dbg !7697
  br i1 %lnot53, label %for.body55, label %for.end97, !dbg !7696

for.body55:                                       ; preds = %for.cond48
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !7699, metadata !DIExpression()), !dbg !7701
  %47 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7701
  %ptp_sts56 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %47, i32 0, i32 17, !dbg !7701
  %48 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts56, align 8, !dbg !7701
  %tobool57 = icmp ne %struct.ptp_system_timestamp* %48, null, !dbg !7701
  br i1 %tobool57, label %land.rhs, label %land.end, !dbg !7701

land.rhs:                                         ; preds = %for.body55
  %49 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7701
  %timestamped = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %49, i32 0, i32 18, !dbg !7701
  %50 = load i8, i8* %timestamped, align 8, !dbg !7701
  %tobool58 = trunc i8 %50 to i1, !dbg !7701
  %lnot59 = xor i1 %tobool58, true, !dbg !7701
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.body55
  %51 = phi i1 [ false, %for.body55 ], [ %lnot59, %land.rhs ], !dbg !7702
  %lnot61 = xor i1 %51, true, !dbg !7701
  %lnot63 = xor i1 %lnot61, true, !dbg !7701
  %lnot.ext64 = zext i1 %lnot63 to i32, !dbg !7701
  store i32 %lnot.ext64, i32* %__ret_warn_on, align 4, !dbg !7701
  %52 = load i32, i32* %__ret_warn_on, align 4, !dbg !7703
  %tobool65 = icmp ne i32 %52, 0, !dbg !7703
  %lnot66 = xor i1 %tobool65, true, !dbg !7703
  %lnot68 = xor i1 %lnot66, true, !dbg !7703
  %lnot.ext69 = zext i1 %lnot68 to i32, !dbg !7703
  %conv70 = sext i32 %lnot.ext69 to i64, !dbg !7703
  %tobool71 = icmp ne i64 %conv70, 0, !dbg !7703
  br i1 %tobool71, label %if.then72, label %if.end81, !dbg !7701

if.then72:                                        ; preds = %land.end
  br label %do.body73, !dbg !7703

do.body73:                                        ; preds = %if.then72
  br label %do.body74, !dbg !7705

do.body74:                                        ; preds = %do.body73
  br label %do.end75, !dbg !7707

do.end75:                                         ; preds = %do.body74
  br label %do.body76, !dbg !7705

do.body76:                                        ; preds = %do.end75
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 1720, i32 2307, i64 12) #7, !dbg !7709, !srcloc !7711
  br label %do.end77, !dbg !7709

do.end77:                                         ; preds = %do.body76
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 334) #7, !dbg !7712, !srcloc !7714
  br label %do.body78, !dbg !7705

do.body78:                                        ; preds = %do.end77
  br label %do.end79, !dbg !7715

do.end79:                                         ; preds = %do.body78
  br label %do.end80, !dbg !7705

do.end80:                                         ; preds = %do.end79
  br label %if.end81, !dbg !7705

if.end81:                                         ; preds = %do.end80, %land.end
  %53 = load i32, i32* %__ret_warn_on, align 4, !dbg !7701
  %tobool83 = icmp ne i32 %53, 0, !dbg !7701
  %lnot84 = xor i1 %tobool83, true, !dbg !7701
  %lnot86 = xor i1 %lnot84, true, !dbg !7701
  %lnot.ext87 = zext i1 %lnot86 to i32, !dbg !7701
  %conv88 = sext i32 %lnot.ext87 to i64, !dbg !7701
  store i64 %conv88, i64* %tmp82, align 8, !dbg !7703
  %54 = load i64, i64* %tmp82, align 8, !dbg !7701
  br label %for.inc89, !dbg !7717

for.inc89:                                        ; preds = %if.end81
  call void @llvm.dbg.declare(metadata i8** %__mptr90, metadata !7718, metadata !DIExpression()), !dbg !7720
  %55 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7720
  %transfer_list91 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %55, i32 0, i32 19, !dbg !7720
  %next92 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list91, i32 0, i32 0, !dbg !7720
  %56 = load %struct.list_head*, %struct.list_head** %next92, align 8, !dbg !7720
  %57 = bitcast %struct.list_head* %56 to i8*, !dbg !7720
  store i8* %57, i8** %__mptr90, align 8, !dbg !7720
  br label %do.body93, !dbg !7720

do.body93:                                        ; preds = %for.inc89
  br label %do.end94, !dbg !7721

do.end94:                                         ; preds = %do.body93
  %58 = load i8*, i8** %__mptr90, align 8, !dbg !7720
  %add.ptr96 = getelementptr i8, i8* %58, i64 -120, !dbg !7720
  %59 = bitcast i8* %add.ptr96 to %struct.spi_transfer*, !dbg !7720
  store %struct.spi_transfer* %59, %struct.spi_transfer** %tmp95, align 8, !dbg !7721
  %60 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp95, align 8, !dbg !7720
  store %struct.spi_transfer* %60, %struct.spi_transfer** %xfer, align 8, !dbg !7697
  br label %for.cond48, !dbg !7697, !llvm.loop !7723

for.end97:                                        ; preds = %for.cond48
  br label %if.end98, !dbg !7724

if.end98:                                         ; preds = %for.end97, %if.end
  %61 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7725
  %62 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7726
  %call99 = call i32 @spi_unmap_msg(%struct.spi_controller* %61, %struct.spi_message* %62) #11, !dbg !7727
  %63 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7728
  %64 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7729
  call void @spi_res_release(%struct.spi_controller* %63, %struct.spi_message* %64) #11, !dbg !7730
  %65 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7731
  %cur_msg_prepared = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %65, i32 0, i32 34, !dbg !7733
  %66 = load i8, i8* %cur_msg_prepared, align 1, !dbg !7733
  %tobool100 = trunc i8 %66 to i1, !dbg !7733
  br i1 %tobool100, label %land.lhs.true102, label %if.end110, !dbg !7734

land.lhs.true102:                                 ; preds = %if.end98
  %67 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7735
  %unprepare_message = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %67, i32 0, i32 45, !dbg !7736
  %68 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %unprepare_message, align 8, !dbg !7736
  %tobool103 = icmp ne i32 (%struct.spi_controller*, %struct.spi_message*)* %68, null, !dbg !7735
  br i1 %tobool103, label %if.then104, label %if.end110, !dbg !7737

if.then104:                                       ; preds = %land.lhs.true102
  %69 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7738
  %unprepare_message105 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %69, i32 0, i32 45, !dbg !7740
  %70 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %unprepare_message105, align 8, !dbg !7740
  %71 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7741
  %72 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7742
  %call106 = call i32 %70(%struct.spi_controller* %71, %struct.spi_message* %72) #11, !dbg !7738
  store i32 %call106, i32* %ret, align 4, !dbg !7743
  %73 = load i32, i32* %ret, align 4, !dbg !7744
  %tobool107 = icmp ne i32 %73, 0, !dbg !7744
  br i1 %tobool107, label %if.then108, label %if.end109, !dbg !7746

if.then108:                                       ; preds = %if.then104
  %74 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7747
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %74, i32 0, i32 0, !dbg !7747
  %75 = load i32, i32* %ret, align 4, !dbg !7747
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0), i32 %75) #14, !dbg !7747
  br label %if.end109, !dbg !7749

if.end109:                                        ; preds = %if.then108, %if.then104
  br label %if.end110, !dbg !7750

if.end110:                                        ; preds = %if.end109, %land.lhs.true102, %if.end98
  br label %do.body111, !dbg !7751

do.body111:                                       ; preds = %if.end110
  br label %do.body112, !dbg !7752

do.body112:                                       ; preds = %do.body111
  call void @llvm.dbg.declare(metadata i64* %__dummy113, metadata !7753, metadata !DIExpression()), !dbg !7755
  call void @llvm.dbg.declare(metadata i64* %__dummy2114, metadata !7756, metadata !DIExpression()), !dbg !7755
  %cmp115 = icmp eq i64* %__dummy113, %__dummy2114, !dbg !7755
  %conv116 = zext i1 %cmp115 to i32, !dbg !7755
  store i32 1, i32* %tmp117, align 4, !dbg !7755
  %76 = load i32, i32* %tmp117, align 4, !dbg !7755
  br label %do.body118, !dbg !7757

do.body118:                                       ; preds = %do.body112
  br label %do.body119, !dbg !7758

do.body119:                                       ; preds = %do.body118
  br label %do.body120, !dbg !7759

do.body120:                                       ; preds = %do.body119
  call void @llvm.dbg.declare(metadata i64* %__dummy121, metadata !7761, metadata !DIExpression()), !dbg !7764
  call void @llvm.dbg.declare(metadata i64* %__dummy2122, metadata !7765, metadata !DIExpression()), !dbg !7764
  %cmp123 = icmp eq i64* %__dummy121, %__dummy2122, !dbg !7764
  %conv124 = zext i1 %cmp123 to i32, !dbg !7764
  store i32 1, i32* %tmp125, align 4, !dbg !7764
  %77 = load i32, i32* %tmp125, align 4, !dbg !7764
  %call126 = call i64 @arch_local_irq_save() #11, !dbg !7766
  store i64 %call126, i64* %flags, align 8, !dbg !7766
  br label %do.end127, !dbg !7766

do.end127:                                        ; preds = %do.body120
  br label %do.end128, !dbg !7759

do.end128:                                        ; preds = %do.end127
  br label %do.body129, !dbg !7758

do.body129:                                       ; preds = %do.end128
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7767, !srcloc !7768
  br label %do.body130, !dbg !7767

do.body130:                                       ; preds = %do.body129
  %78 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7769
  %queue_lock131 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %78, i32 0, i32 26, !dbg !7769
  store %struct.spinlock* %queue_lock131, %struct.spinlock** %lock.addr.i148, align 8
  %79 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i148, align 8, !dbg !7770
  %80 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %79, i32 0, i32 0, !dbg !7771
  %rlock.i149 = bitcast %union.anon* %80 to %struct.raw_spinlock*, !dbg !7771
  br label %do.end133, !dbg !7769

do.end133:                                        ; preds = %do.body130
  br label %do.end134, !dbg !7767

do.end134:                                        ; preds = %do.end133
  br label %do.end135, !dbg !7758

do.end135:                                        ; preds = %do.end134
  br label %do.end136, !dbg !7757

do.end136:                                        ; preds = %do.end135
  br label %do.end137, !dbg !7752

do.end137:                                        ; preds = %do.end136
  %81 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7772
  %cur_msg138 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %81, i32 0, i32 28, !dbg !7773
  store %struct.spi_message* null, %struct.spi_message** %cur_msg138, align 8, !dbg !7774
  %82 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7775
  %cur_msg_prepared139 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %82, i32 0, i32 34, !dbg !7776
  store i8 0, i8* %cur_msg_prepared139, align 1, !dbg !7777
  %83 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7778
  %fallback = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %83, i32 0, i32 38, !dbg !7779
  store i8 0, i8* %fallback, align 1, !dbg !7780
  %84 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7781
  %kworker = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %84, i32 0, i32 24, !dbg !7782
  %85 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker, align 8, !dbg !7782
  %86 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7783
  %pump_messages = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %86, i32 0, i32 25, !dbg !7784
  %call140 = call zeroext i1 @kthread_queue_work(%struct.kthread_worker* %85, %struct.kthread_work* %pump_messages) #11, !dbg !7785
  %87 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7786
  %queue_lock141 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %87, i32 0, i32 26, !dbg !7787
  %88 = load i64, i64* %flags, align 8, !dbg !7788
  store %struct.spinlock* %queue_lock141, %struct.spinlock** %lock.addr.i150, align 8
  store i64 %88, i64* %flags.addr.i151, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !7789
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !7789
  store i32 1, i32* %tmp.i152, align 4, !dbg !7789
  %89 = load i32, i32* %tmp.i152, align 4, !dbg !7789
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !7790
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !7790
  store i32 1, i32* %tmp8.i153, align 4, !dbg !7790
  %90 = load i32, i32* %tmp8.i153, align 4, !dbg !7790
  %91 = load i64, i64* %flags.addr.i151, align 8, !dbg !7791
  call void @arch_local_irq_restore(i64 %91) #12, !dbg !7791
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !7792, !srcloc !5559
  %92 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i150, align 8, !dbg !7793
  %93 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %92, i32 0, i32 0, !dbg !7793
  %rlock.i154 = bitcast %union.anon* %93 to %struct.raw_spinlock*, !dbg !7793
  %94 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7794
  call void @trace_spi_message_done(%struct.spi_message* %94) #11, !dbg !7795
  %95 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7796
  %state = getelementptr inbounds %struct.spi_message, %struct.spi_message* %95, i32 0, i32 9, !dbg !7797
  store i8* null, i8** %state, align 8, !dbg !7798
  %96 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7799
  %complete = getelementptr inbounds %struct.spi_message, %struct.spi_message* %96, i32 0, i32 3, !dbg !7801
  %97 = load void (i8*)*, void (i8*)** %complete, align 8, !dbg !7801
  %tobool142 = icmp ne void (i8*)* %97, null, !dbg !7799
  br i1 %tobool142, label %if.then143, label %if.end145, !dbg !7802

if.then143:                                       ; preds = %do.end137
  %98 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7803
  %complete144 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %98, i32 0, i32 3, !dbg !7804
  %99 = load void (i8*)*, void (i8*)** %complete144, align 8, !dbg !7804
  %100 = load %struct.spi_message*, %struct.spi_message** %mesg, align 8, !dbg !7805
  %context = getelementptr inbounds %struct.spi_message, %struct.spi_message* %100, i32 0, i32 4, !dbg !7806
  %101 = load i8*, i8** %context, align 8, !dbg !7806
  call void %99(i8* %101) #11, !dbg !7803
  br label %if.end145, !dbg !7803

if.end145:                                        ; preds = %if.then143, %do.end137
  ret void, !dbg !7807
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_unmap_msg(%struct.spi_controller* %ctlr, %struct.spi_message* %msg) #0 !dbg !7808 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_transfer*, align 8
  %__mptr8 = alloca i8*, align 8
  %tmp13 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7809, metadata !DIExpression()), !dbg !7810
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !7811, metadata !DIExpression()), !dbg !7812
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !7813, metadata !DIExpression()), !dbg !7814
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7815, metadata !DIExpression()), !dbg !7818
  %0 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !7818
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %0, i32 0, i32 0, !dbg !7818
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !7818
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !7818
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7818
  store i8* %2, i8** %__mptr, align 8, !dbg !7818
  br label %do.body, !dbg !7818

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7819

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7818
  %add.ptr = getelementptr i8, i8* %3, i64 -120, !dbg !7818
  %4 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !7818
  store %struct.spi_transfer* %4, %struct.spi_transfer** %tmp, align 8, !dbg !7819
  %5 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp, align 8, !dbg !7818
  store %struct.spi_transfer* %5, %struct.spi_transfer** %xfer, align 8, !dbg !7821
  br label %for.cond, !dbg !7821

for.cond:                                         ; preds = %do.end12, %do.end
  %6 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7822
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %6, i32 0, i32 19, !dbg !7822
  %7 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !7822
  %transfers1 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %7, i32 0, i32 0, !dbg !7822
  %cmp = icmp eq %struct.list_head* %transfer_list, %transfers1, !dbg !7822
  %lnot = xor i1 %cmp, true, !dbg !7822
  br i1 %lnot, label %for.body, label %for.end, !dbg !7821

for.body:                                         ; preds = %for.cond
  %8 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7824
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %8, i32 0, i32 0, !dbg !7827
  %9 = load i8*, i8** %tx_buf, align 8, !dbg !7827
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7828
  %dummy_tx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 63, !dbg !7829
  %11 = load i8*, i8** %dummy_tx, align 8, !dbg !7829
  %cmp2 = icmp eq i8* %9, %11, !dbg !7830
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7831

if.then:                                          ; preds = %for.body
  %12 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7832
  %tx_buf3 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %12, i32 0, i32 0, !dbg !7833
  store i8* null, i8** %tx_buf3, align 8, !dbg !7834
  br label %if.end, !dbg !7832

if.end:                                           ; preds = %if.then, %for.body
  %13 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7835
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %13, i32 0, i32 1, !dbg !7837
  %14 = load i8*, i8** %rx_buf, align 8, !dbg !7837
  %15 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7838
  %dummy_rx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %15, i32 0, i32 62, !dbg !7839
  %16 = load i8*, i8** %dummy_rx, align 8, !dbg !7839
  %cmp4 = icmp eq i8* %14, %16, !dbg !7840
  br i1 %cmp4, label %if.then5, label %if.end7, !dbg !7841

if.then5:                                         ; preds = %if.end
  %17 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7842
  %rx_buf6 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %17, i32 0, i32 1, !dbg !7843
  store i8* null, i8** %rx_buf6, align 8, !dbg !7844
  br label %if.end7, !dbg !7842

if.end7:                                          ; preds = %if.then5, %if.end
  br label %for.inc, !dbg !7845

for.inc:                                          ; preds = %if.end7
  call void @llvm.dbg.declare(metadata i8** %__mptr8, metadata !7846, metadata !DIExpression()), !dbg !7848
  %18 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !7848
  %transfer_list9 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %18, i32 0, i32 19, !dbg !7848
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list9, i32 0, i32 0, !dbg !7848
  %19 = load %struct.list_head*, %struct.list_head** %next10, align 8, !dbg !7848
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !7848
  store i8* %20, i8** %__mptr8, align 8, !dbg !7848
  br label %do.body11, !dbg !7848

do.body11:                                        ; preds = %for.inc
  br label %do.end12, !dbg !7849

do.end12:                                         ; preds = %do.body11
  %21 = load i8*, i8** %__mptr8, align 8, !dbg !7848
  %add.ptr14 = getelementptr i8, i8* %21, i64 -120, !dbg !7848
  %22 = bitcast i8* %add.ptr14 to %struct.spi_transfer*, !dbg !7848
  store %struct.spi_transfer* %22, %struct.spi_transfer** %tmp13, align 8, !dbg !7849
  %23 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp13, align 8, !dbg !7848
  store %struct.spi_transfer* %23, %struct.spi_transfer** %xfer, align 8, !dbg !7822
  br label %for.cond, !dbg !7822, !llvm.loop !7851

for.end:                                          ; preds = %for.cond
  %24 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7853
  %25 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !7854
  %call = call i32 @__spi_unmap_msg(%struct.spi_controller* %24, %struct.spi_message* %25) #11, !dbg !7855
  ret i32 %call, !dbg !7856
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_res_release(%struct.spi_controller* %ctlr, %struct.spi_message* %message) #0 !dbg !7857 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  %res = alloca %struct.spi_res*, align 8
  %tmp = alloca %struct.spi_res*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.spi_res*, align 8
  %__mptr2 = alloca i8*, align 8
  %tmp7 = alloca %struct.spi_res*, align 8
  %__mptr13 = alloca i8*, align 8
  %tmp18 = alloca %struct.spi_res*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7858, metadata !DIExpression()), !dbg !7859
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !7860, metadata !DIExpression()), !dbg !7861
  call void @llvm.dbg.declare(metadata %struct.spi_res** %res, metadata !7862, metadata !DIExpression()), !dbg !7863
  call void @llvm.dbg.declare(metadata %struct.spi_res** %tmp, metadata !7864, metadata !DIExpression()), !dbg !7865
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !7866, metadata !DIExpression()), !dbg !7869
  %0 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !7869
  %resources = getelementptr inbounds %struct.spi_message, %struct.spi_message* %0, i32 0, i32 10, !dbg !7869
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %resources, i32 0, i32 1, !dbg !7869
  %1 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !7869
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !7869
  store i8* %2, i8** %__mptr, align 8, !dbg !7869
  br label %do.body, !dbg !7869

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !7870

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !7869
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !7869
  %4 = bitcast i8* %add.ptr to %struct.spi_res*, !dbg !7869
  store %struct.spi_res* %4, %struct.spi_res** %tmp1, align 8, !dbg !7870
  %5 = load %struct.spi_res*, %struct.spi_res** %tmp1, align 8, !dbg !7869
  store %struct.spi_res* %5, %struct.spi_res** %res, align 8, !dbg !7872
  call void @llvm.dbg.declare(metadata i8** %__mptr2, metadata !7873, metadata !DIExpression()), !dbg !7875
  %6 = load %struct.spi_res*, %struct.spi_res** %res, align 8, !dbg !7875
  %entry3 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %6, i32 0, i32 0, !dbg !7875
  %prev4 = getelementptr inbounds %struct.list_head, %struct.list_head* %entry3, i32 0, i32 1, !dbg !7875
  %7 = load %struct.list_head*, %struct.list_head** %prev4, align 8, !dbg !7875
  %8 = bitcast %struct.list_head* %7 to i8*, !dbg !7875
  store i8* %8, i8** %__mptr2, align 8, !dbg !7875
  br label %do.body5, !dbg !7875

do.body5:                                         ; preds = %do.end
  br label %do.end6, !dbg !7876

do.end6:                                          ; preds = %do.body5
  %9 = load i8*, i8** %__mptr2, align 8, !dbg !7875
  %add.ptr8 = getelementptr i8, i8* %9, i64 0, !dbg !7875
  %10 = bitcast i8* %add.ptr8 to %struct.spi_res*, !dbg !7875
  store %struct.spi_res* %10, %struct.spi_res** %tmp7, align 8, !dbg !7876
  %11 = load %struct.spi_res*, %struct.spi_res** %tmp7, align 8, !dbg !7875
  store %struct.spi_res* %11, %struct.spi_res** %tmp, align 8, !dbg !7872
  br label %for.cond, !dbg !7872

for.cond:                                         ; preds = %do.end17, %do.end6
  %12 = load %struct.spi_res*, %struct.spi_res** %res, align 8, !dbg !7878
  %entry9 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %12, i32 0, i32 0, !dbg !7878
  %13 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !7878
  %resources10 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %13, i32 0, i32 10, !dbg !7878
  %cmp = icmp eq %struct.list_head* %entry9, %resources10, !dbg !7878
  %lnot = xor i1 %cmp, true, !dbg !7878
  br i1 %lnot, label %for.body, label %for.end, !dbg !7872

for.body:                                         ; preds = %for.cond
  %14 = load %struct.spi_res*, %struct.spi_res** %res, align 8, !dbg !7880
  %release = getelementptr inbounds %struct.spi_res, %struct.spi_res* %14, i32 0, i32 1, !dbg !7883
  %15 = load void (%struct.spi_controller*, %struct.spi_message*, i8*)*, void (%struct.spi_controller*, %struct.spi_message*, i8*)** %release, align 8, !dbg !7883
  %tobool = icmp ne void (%struct.spi_controller*, %struct.spi_message*, i8*)* %15, null, !dbg !7880
  br i1 %tobool, label %if.then, label %if.end, !dbg !7884

if.then:                                          ; preds = %for.body
  %16 = load %struct.spi_res*, %struct.spi_res** %res, align 8, !dbg !7885
  %release11 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %16, i32 0, i32 1, !dbg !7886
  %17 = load void (%struct.spi_controller*, %struct.spi_message*, i8*)*, void (%struct.spi_controller*, %struct.spi_message*, i8*)** %release11, align 8, !dbg !7886
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7887
  %19 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !7888
  %20 = load %struct.spi_res*, %struct.spi_res** %res, align 8, !dbg !7889
  %data = getelementptr inbounds %struct.spi_res, %struct.spi_res* %20, i32 0, i32 2, !dbg !7890
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !7889
  %21 = bitcast i64* %arraydecay to i8*, !dbg !7889
  call void %17(%struct.spi_controller* %18, %struct.spi_message* %19, i8* %21) #11, !dbg !7885
  br label %if.end, !dbg !7885

if.end:                                           ; preds = %if.then, %for.body
  %22 = load %struct.spi_res*, %struct.spi_res** %res, align 8, !dbg !7891
  %entry12 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %22, i32 0, i32 0, !dbg !7892
  call void @list_del(%struct.list_head* %entry12) #11, !dbg !7893
  %23 = load %struct.spi_res*, %struct.spi_res** %res, align 8, !dbg !7894
  %24 = bitcast %struct.spi_res* %23 to i8*, !dbg !7894
  call void @kfree(i8* %24) #11, !dbg !7895
  br label %for.inc, !dbg !7896

for.inc:                                          ; preds = %if.end
  %25 = load %struct.spi_res*, %struct.spi_res** %tmp, align 8, !dbg !7878
  store %struct.spi_res* %25, %struct.spi_res** %res, align 8, !dbg !7878
  call void @llvm.dbg.declare(metadata i8** %__mptr13, metadata !7897, metadata !DIExpression()), !dbg !7899
  %26 = load %struct.spi_res*, %struct.spi_res** %tmp, align 8, !dbg !7899
  %entry14 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %26, i32 0, i32 0, !dbg !7899
  %prev15 = getelementptr inbounds %struct.list_head, %struct.list_head* %entry14, i32 0, i32 1, !dbg !7899
  %27 = load %struct.list_head*, %struct.list_head** %prev15, align 8, !dbg !7899
  %28 = bitcast %struct.list_head* %27 to i8*, !dbg !7899
  store i8* %28, i8** %__mptr13, align 8, !dbg !7899
  br label %do.body16, !dbg !7899

do.body16:                                        ; preds = %for.inc
  br label %do.end17, !dbg !7900

do.end17:                                         ; preds = %do.body16
  %29 = load i8*, i8** %__mptr13, align 8, !dbg !7899
  %add.ptr19 = getelementptr i8, i8* %29, i64 0, !dbg !7899
  %30 = bitcast i8* %add.ptr19 to %struct.spi_res*, !dbg !7899
  store %struct.spi_res* %30, %struct.spi_res** %tmp18, align 8, !dbg !7900
  %31 = load %struct.spi_res*, %struct.spi_res** %tmp18, align 8, !dbg !7899
  store %struct.spi_res* %31, %struct.spi_res** %tmp, align 8, !dbg !7878
  br label %for.cond, !dbg !7878, !llvm.loop !7902

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7904
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @kthread_queue_work(%struct.kthread_worker*, %struct.kthread_work*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_spi_message_done(%struct.spi_message* %msg) #0 !dbg !7905 {
entry:
  %msg.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !7909, metadata !DIExpression()), !dbg !7910
  ret void, !dbg !7910
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_flush_queue(%struct.spi_controller* %ctlr) #0 !dbg !7911 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7912, metadata !DIExpression()), !dbg !7913
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7914
  %transfer = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 20, !dbg !7916
  %1 = load i32 (%struct.spi_device*, %struct.spi_message*)*, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer, align 8, !dbg !7916
  %cmp = icmp eq i32 (%struct.spi_device*, %struct.spi_message*)* %1, @spi_queued_transfer, !dbg !7917
  br i1 %cmp, label %if.then, label %if.end, !dbg !7918

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !7919
  call void @__spi_pump_messages(%struct.spi_controller* %2, i1 zeroext false) #11, !dbg !7920
  br label %if.end, !dbg !7920

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7921
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_queued_transfer(%struct.spi_device* %spi, %struct.spi_message* %msg) #0 !dbg !7922 {
entry:
  %spi.addr = alloca %struct.spi_device*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !7925, metadata !DIExpression()), !dbg !7926
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !7927
  %1 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !7928
  %call = call i32 @__spi_queued_transfer(%struct.spi_device* %0, %struct.spi_message* %1, i1 zeroext true) #11, !dbg !7929
  ret i32 %call, !dbg !7930
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__spi_pump_messages(%struct.spi_controller* %ctlr, i1 zeroext %in_kthread) #0 !dbg !7931 {
entry:
  %lock.addr.i219 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i219, metadata !5420, metadata !DIExpression()), !dbg !7934
  %flags.addr.i220 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i220, metadata !5427, metadata !DIExpression()), !dbg !7936
  %tmp.i221 = alloca i32, align 4
  %tmp8.i222 = alloca i32, align 4
  %lock.addr.i214 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i214, metadata !5420, metadata !DIExpression()), !dbg !7937
  %flags.addr.i215 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i215, metadata !5427, metadata !DIExpression()), !dbg !7941
  %tmp.i216 = alloca i32, align 4
  %tmp8.i217 = alloca i32, align 4
  %lock.addr.i212 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i212, metadata !5429, metadata !DIExpression()), !dbg !7942
  %lock.addr.i207 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i207, metadata !5420, metadata !DIExpression()), !dbg !7949
  %flags.addr.i208 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i208, metadata !5427, metadata !DIExpression()), !dbg !7951
  %tmp.i209 = alloca i32, align 4
  %tmp8.i210 = alloca i32, align 4
  %lock.addr.i202 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i202, metadata !5420, metadata !DIExpression()), !dbg !7952
  %flags.addr.i203 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i203, metadata !5427, metadata !DIExpression()), !dbg !7956
  %tmp.i204 = alloca i32, align 4
  %tmp8.i205 = alloca i32, align 4
  %lock.addr.i197 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i197, metadata !5420, metadata !DIExpression()), !dbg !7957
  %flags.addr.i198 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i198, metadata !5427, metadata !DIExpression()), !dbg !7961
  %tmp.i199 = alloca i32, align 4
  %tmp8.i200 = alloca i32, align 4
  %lock.addr.i192 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i192, metadata !5420, metadata !DIExpression()), !dbg !7962
  %flags.addr.i193 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i193, metadata !5427, metadata !DIExpression()), !dbg !7966
  %tmp.i194 = alloca i32, align 4
  %tmp8.i195 = alloca i32, align 4
  %lock.addr.i190 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i190, metadata !5420, metadata !DIExpression()), !dbg !7967
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !7971
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !7972
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %in_kthread.addr = alloca i8, align 1
  %xfer = alloca %struct.spi_transfer*, align 8
  %msg = alloca %struct.spi_message*, align 8
  %was_busy = alloca i8, align 1
  %flags = alloca i64, align 8
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy64 = alloca i64, align 8
  %__dummy265 = alloca i64, align 8
  %tmp68 = alloca i32, align 4
  %__dummy72 = alloca i64, align 8
  %__dummy273 = alloca i64, align 8
  %tmp76 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp95 = alloca %struct.spi_message*, align 8
  %__mptr162 = alloca i8*, align 8
  %tmp166 = alloca %struct.spi_transfer*, align 8
  %__mptr171 = alloca i8*, align 8
  %tmp176 = alloca %struct.spi_transfer*, align 8
  %tmp187 = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !7979, metadata !DIExpression()), !dbg !7980
  %frombool = zext i1 %in_kthread to i8
  store i8 %frombool, i8* %in_kthread.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %in_kthread.addr, metadata !7981, metadata !DIExpression()), !dbg !7982
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !7983, metadata !DIExpression()), !dbg !7984
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.declare(metadata i8* %was_busy, metadata !7987, metadata !DIExpression()), !dbg !7988
  store i8 0, i8* %was_busy, align 1, !dbg !7988
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !7989, metadata !DIExpression()), !dbg !7990
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !7991, metadata !DIExpression()), !dbg !7992
  br label %do.body, !dbg !7993

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !7994

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !7995, metadata !DIExpression()), !dbg !7997
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !7998, metadata !DIExpression()), !dbg !7997
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !7997
  %conv = zext i1 %cmp to i32, !dbg !7997
  store i32 1, i32* %tmp, align 4, !dbg !7997
  %0 = load i32, i32* %tmp, align 4, !dbg !7997
  br label %do.body2, !dbg !7999

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !8000

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !8001

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !8003, metadata !DIExpression()), !dbg !8006
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !8007, metadata !DIExpression()), !dbg !8006
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !8006
  %conv8 = zext i1 %cmp7 to i32, !dbg !8006
  store i32 1, i32* %tmp9, align 4, !dbg !8006
  %1 = load i32, i32* %tmp9, align 4, !dbg !8006
  %call = call i64 @arch_local_irq_save() #11, !dbg !8008
  store i64 %call, i64* %flags, align 8, !dbg !8008
  br label %do.end, !dbg !8008

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !8001

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !8000

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8009, !srcloc !8010
  br label %do.body12, !dbg !8009

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8011
  %queue_lock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 26, !dbg !8011
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8012
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !8013
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !8013
  br label %do.end14, !dbg !8011

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !8009

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !8000

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !7999

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !7994

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8014
  %cur_msg = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 28, !dbg !8015
  %6 = load %struct.spi_message*, %struct.spi_message** %cur_msg, align 8, !dbg !8015
  %tobool = icmp ne %struct.spi_message* %6, null, !dbg !8014
  br i1 %tobool, label %if.then, label %if.end, !dbg !8016

if.then:                                          ; preds = %do.end18
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8017
  %queue_lock19 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 26, !dbg !8018
  %8 = load i64, i64* %flags, align 8, !dbg !8019
  store %struct.spinlock* %queue_lock19, %struct.spinlock** %lock.addr.i190, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !8020
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !8020
  store i32 1, i32* %tmp.i, align 4, !dbg !8020
  %9 = load i32, i32* %tmp.i, align 4, !dbg !8020
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !8021
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !8021
  store i32 1, i32* %tmp8.i, align 4, !dbg !8021
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !8021
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !8022
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !8022
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8023, !srcloc !5559
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i190, align 8, !dbg !8024
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !8024
  %rlock.i191 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !8024
  br label %if.end189, !dbg !8025

if.end:                                           ; preds = %do.end18
  %14 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8026
  %idling = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %14, i32 0, i32 29, !dbg !8027
  %15 = load i8, i8* %idling, align 8, !dbg !8027
  %tobool20 = trunc i8 %15 to i1, !dbg !8027
  br i1 %tobool20, label %if.then21, label %if.end24, !dbg !8028

if.then21:                                        ; preds = %if.end
  %16 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8029
  %kworker = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 24, !dbg !8030
  %17 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker, align 8, !dbg !8030
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8031
  %pump_messages = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 25, !dbg !8032
  %call22 = call zeroext i1 @kthread_queue_work(%struct.kthread_worker* %17, %struct.kthread_work* %pump_messages) #11, !dbg !8033
  %19 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8034
  %queue_lock23 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %19, i32 0, i32 26, !dbg !8035
  %20 = load i64, i64* %flags, align 8, !dbg !8036
  store %struct.spinlock* %queue_lock23, %struct.spinlock** %lock.addr.i192, align 8
  store i64 %20, i64* %flags.addr.i193, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !8037
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !8037
  store i32 1, i32* %tmp.i194, align 4, !dbg !8037
  %21 = load i32, i32* %tmp.i194, align 4, !dbg !8037
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !8038
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !8038
  store i32 1, i32* %tmp8.i195, align 4, !dbg !8038
  %22 = load i32, i32* %tmp8.i195, align 4, !dbg !8038
  %23 = load i64, i64* %flags.addr.i193, align 8, !dbg !8039
  call void @arch_local_irq_restore(i64 %23) #12, !dbg !8039
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8040, !srcloc !5559
  %24 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i192, align 8, !dbg !8041
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0, !dbg !8041
  %rlock.i196 = bitcast %union.anon* %25 to %struct.raw_spinlock*, !dbg !8041
  br label %if.end189, !dbg !8042

if.end24:                                         ; preds = %if.end
  %26 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8043
  %queue = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %26, i32 0, i32 27, !dbg !8044
  %call25 = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !8045
  %tobool26 = icmp ne i32 %call25, 0, !dbg !8045
  br i1 %tobool26, label %if.then28, label %lor.lhs.false, !dbg !8046

lor.lhs.false:                                    ; preds = %if.end24
  %27 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8047
  %running = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %27, i32 0, i32 31, !dbg !8048
  %28 = load i8, i8* %running, align 2, !dbg !8048
  %tobool27 = trunc i8 %28 to i1, !dbg !8048
  br i1 %tobool27, label %if.end91, label %if.then28, !dbg !8049

if.then28:                                        ; preds = %lor.lhs.false, %if.end24
  %29 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8050
  %busy = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %29, i32 0, i32 30, !dbg !8051
  %30 = load i8, i8* %busy, align 1, !dbg !8051
  %tobool29 = trunc i8 %30 to i1, !dbg !8051
  br i1 %tobool29, label %if.end32, label %if.then30, !dbg !8052

if.then30:                                        ; preds = %if.then28
  %31 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8053
  %queue_lock31 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %31, i32 0, i32 26, !dbg !8054
  %32 = load i64, i64* %flags, align 8, !dbg !8055
  store %struct.spinlock* %queue_lock31, %struct.spinlock** %lock.addr.i197, align 8
  store i64 %32, i64* %flags.addr.i198, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !8056
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !8056
  store i32 1, i32* %tmp.i199, align 4, !dbg !8056
  %33 = load i32, i32* %tmp.i199, align 4, !dbg !8056
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !8057
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !8057
  store i32 1, i32* %tmp8.i200, align 4, !dbg !8057
  %34 = load i32, i32* %tmp8.i200, align 4, !dbg !8057
  %35 = load i64, i64* %flags.addr.i198, align 8, !dbg !8058
  call void @arch_local_irq_restore(i64 %35) #12, !dbg !8058
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8059, !srcloc !5559
  %36 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i197, align 8, !dbg !8060
  %37 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %36, i32 0, i32 0, !dbg !8060
  %rlock.i201 = bitcast %union.anon* %37 to %struct.raw_spinlock*, !dbg !8060
  br label %if.end189, !dbg !8061

if.end32:                                         ; preds = %if.then28
  %38 = load i8, i8* %in_kthread.addr, align 1, !dbg !8062
  %tobool33 = trunc i8 %38 to i1, !dbg !8062
  br i1 %tobool33, label %if.end46, label %if.then34, !dbg !8063

if.then34:                                        ; preds = %if.end32
  %39 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8064
  %dummy_rx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %39, i32 0, i32 62, !dbg !8066
  %40 = load i8*, i8** %dummy_rx, align 8, !dbg !8066
  %tobool35 = icmp ne i8* %40, null, !dbg !8064
  br i1 %tobool35, label %if.else, label %land.lhs.true, !dbg !8067

land.lhs.true:                                    ; preds = %if.then34
  %41 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8068
  %dummy_tx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %41, i32 0, i32 63, !dbg !8069
  %42 = load i8*, i8** %dummy_tx, align 8, !dbg !8069
  %tobool36 = icmp ne i8* %42, null, !dbg !8068
  br i1 %tobool36, label %if.else, label %land.lhs.true37, !dbg !8070

land.lhs.true37:                                  ; preds = %land.lhs.true
  %43 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8071
  %unprepare_transfer_hardware = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %43, i32 0, i32 43, !dbg !8072
  %44 = load i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*)** %unprepare_transfer_hardware, align 8, !dbg !8072
  %tobool38 = icmp ne i32 (%struct.spi_controller*)* %44, null, !dbg !8071
  br i1 %tobool38, label %if.else, label %if.then39, !dbg !8073

if.then39:                                        ; preds = %land.lhs.true37
  %45 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8074
  call void @spi_idle_runtime_pm(%struct.spi_controller* %45) #11, !dbg !8076
  %46 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8077
  %busy40 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %46, i32 0, i32 30, !dbg !8078
  store i8 0, i8* %busy40, align 1, !dbg !8079
  %47 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8080
  call void @trace_spi_controller_idle(%struct.spi_controller* %47) #11, !dbg !8081
  br label %if.end44, !dbg !8082

if.else:                                          ; preds = %land.lhs.true37, %land.lhs.true, %if.then34
  %48 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8083
  %kworker41 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %48, i32 0, i32 24, !dbg !8085
  %49 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker41, align 8, !dbg !8085
  %50 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8086
  %pump_messages42 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %50, i32 0, i32 25, !dbg !8087
  %call43 = call zeroext i1 @kthread_queue_work(%struct.kthread_worker* %49, %struct.kthread_work* %pump_messages42) #11, !dbg !8088
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then39
  %51 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8089
  %queue_lock45 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %51, i32 0, i32 26, !dbg !8090
  %52 = load i64, i64* %flags, align 8, !dbg !8091
  store %struct.spinlock* %queue_lock45, %struct.spinlock** %lock.addr.i202, align 8
  store i64 %52, i64* %flags.addr.i203, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !8092
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !8092
  store i32 1, i32* %tmp.i204, align 4, !dbg !8092
  %53 = load i32, i32* %tmp.i204, align 4, !dbg !8092
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !8093
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !8093
  store i32 1, i32* %tmp8.i205, align 4, !dbg !8093
  %54 = load i32, i32* %tmp8.i205, align 4, !dbg !8093
  %55 = load i64, i64* %flags.addr.i203, align 8, !dbg !8094
  call void @arch_local_irq_restore(i64 %55) #12, !dbg !8094
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8095, !srcloc !5559
  %56 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i202, align 8, !dbg !8096
  %57 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %56, i32 0, i32 0, !dbg !8096
  %rlock.i206 = bitcast %union.anon* %57 to %struct.raw_spinlock*, !dbg !8096
  br label %if.end189, !dbg !8097

if.end46:                                         ; preds = %if.end32
  %58 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8098
  %busy47 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %58, i32 0, i32 30, !dbg !8099
  store i8 0, i8* %busy47, align 1, !dbg !8100
  %59 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8101
  %idling48 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %59, i32 0, i32 29, !dbg !8102
  store i8 1, i8* %idling48, align 8, !dbg !8103
  %60 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8104
  %queue_lock49 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %60, i32 0, i32 26, !dbg !8105
  %61 = load i64, i64* %flags, align 8, !dbg !8106
  store %struct.spinlock* %queue_lock49, %struct.spinlock** %lock.addr.i207, align 8
  store i64 %61, i64* %flags.addr.i208, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !8107
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !8107
  store i32 1, i32* %tmp.i209, align 4, !dbg !8107
  %62 = load i32, i32* %tmp.i209, align 4, !dbg !8107
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !8108
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !8108
  store i32 1, i32* %tmp8.i210, align 4, !dbg !8108
  %63 = load i32, i32* %tmp8.i210, align 4, !dbg !8108
  %64 = load i64, i64* %flags.addr.i208, align 8, !dbg !8109
  call void @arch_local_irq_restore(i64 %64) #12, !dbg !8109
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8110, !srcloc !5559
  %65 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i207, align 8, !dbg !8111
  %66 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %65, i32 0, i32 0, !dbg !8111
  %rlock.i211 = bitcast %union.anon* %66 to %struct.raw_spinlock*, !dbg !8111
  %67 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8112
  %dummy_rx50 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %67, i32 0, i32 62, !dbg !8113
  %68 = load i8*, i8** %dummy_rx50, align 8, !dbg !8113
  call void @kfree(i8* %68) #11, !dbg !8114
  %69 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8115
  %dummy_rx51 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %69, i32 0, i32 62, !dbg !8116
  store i8* null, i8** %dummy_rx51, align 8, !dbg !8117
  %70 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8118
  %dummy_tx52 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %70, i32 0, i32 63, !dbg !8119
  %71 = load i8*, i8** %dummy_tx52, align 8, !dbg !8119
  call void @kfree(i8* %71) #11, !dbg !8120
  %72 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8121
  %dummy_tx53 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %72, i32 0, i32 63, !dbg !8122
  store i8* null, i8** %dummy_tx53, align 8, !dbg !8123
  %73 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8124
  %unprepare_transfer_hardware54 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %73, i32 0, i32 43, !dbg !8126
  %74 = load i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*)** %unprepare_transfer_hardware54, align 8, !dbg !8126
  %tobool55 = icmp ne i32 (%struct.spi_controller*)* %74, null, !dbg !8124
  br i1 %tobool55, label %land.lhs.true56, label %if.end61, !dbg !8127

land.lhs.true56:                                  ; preds = %if.end46
  %75 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8128
  %unprepare_transfer_hardware57 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %75, i32 0, i32 43, !dbg !8129
  %76 = load i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*)** %unprepare_transfer_hardware57, align 8, !dbg !8129
  %77 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8130
  %call58 = call i32 %76(%struct.spi_controller* %77) #11, !dbg !8128
  %tobool59 = icmp ne i32 %call58, 0, !dbg !8128
  br i1 %tobool59, label %if.then60, label %if.end61, !dbg !8131

if.then60:                                        ; preds = %land.lhs.true56
  %78 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8132
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %78, i32 0, i32 0, !dbg !8132
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.65, i64 0, i64 0)) #14, !dbg !8132
  br label %if.end61, !dbg !8132

if.end61:                                         ; preds = %if.then60, %land.lhs.true56, %if.end46
  %79 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8133
  call void @spi_idle_runtime_pm(%struct.spi_controller* %79) #11, !dbg !8134
  %80 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8135
  call void @trace_spi_controller_idle(%struct.spi_controller* %80) #11, !dbg !8136
  br label %do.body62, !dbg !8137

do.body62:                                        ; preds = %if.end61
  br label %do.body63, !dbg !8138

do.body63:                                        ; preds = %do.body62
  call void @llvm.dbg.declare(metadata i64* %__dummy64, metadata !8139, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.declare(metadata i64* %__dummy265, metadata !8142, metadata !DIExpression()), !dbg !8141
  %cmp66 = icmp eq i64* %__dummy64, %__dummy265, !dbg !8141
  %conv67 = zext i1 %cmp66 to i32, !dbg !8141
  store i32 1, i32* %tmp68, align 4, !dbg !8141
  %81 = load i32, i32* %tmp68, align 4, !dbg !8141
  br label %do.body69, !dbg !8143

do.body69:                                        ; preds = %do.body63
  br label %do.body70, !dbg !8144

do.body70:                                        ; preds = %do.body69
  br label %do.body71, !dbg !8145

do.body71:                                        ; preds = %do.body70
  call void @llvm.dbg.declare(metadata i64* %__dummy72, metadata !8147, metadata !DIExpression()), !dbg !8150
  call void @llvm.dbg.declare(metadata i64* %__dummy273, metadata !8151, metadata !DIExpression()), !dbg !8150
  %cmp74 = icmp eq i64* %__dummy72, %__dummy273, !dbg !8150
  %conv75 = zext i1 %cmp74 to i32, !dbg !8150
  store i32 1, i32* %tmp76, align 4, !dbg !8150
  %82 = load i32, i32* %tmp76, align 4, !dbg !8150
  %call77 = call i64 @arch_local_irq_save() #11, !dbg !8152
  store i64 %call77, i64* %flags, align 8, !dbg !8152
  br label %do.end78, !dbg !8152

do.end78:                                         ; preds = %do.body71
  br label %do.end79, !dbg !8145

do.end79:                                         ; preds = %do.end78
  br label %do.body80, !dbg !8144

do.body80:                                        ; preds = %do.end79
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8153, !srcloc !8154
  br label %do.body81, !dbg !8153

do.body81:                                        ; preds = %do.body80
  %83 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8155
  %queue_lock82 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %83, i32 0, i32 26, !dbg !8155
  store %struct.spinlock* %queue_lock82, %struct.spinlock** %lock.addr.i212, align 8
  %84 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i212, align 8, !dbg !8156
  %85 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %84, i32 0, i32 0, !dbg !8157
  %rlock.i213 = bitcast %union.anon* %85 to %struct.raw_spinlock*, !dbg !8157
  br label %do.end84, !dbg !8155

do.end84:                                         ; preds = %do.body81
  br label %do.end85, !dbg !8153

do.end85:                                         ; preds = %do.end84
  br label %do.end86, !dbg !8144

do.end86:                                         ; preds = %do.end85
  br label %do.end87, !dbg !8143

do.end87:                                         ; preds = %do.end86
  br label %do.end88, !dbg !8138

do.end88:                                         ; preds = %do.end87
  %86 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8158
  %idling89 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %86, i32 0, i32 29, !dbg !8159
  store i8 0, i8* %idling89, align 8, !dbg !8160
  %87 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8161
  %queue_lock90 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %87, i32 0, i32 26, !dbg !8162
  %88 = load i64, i64* %flags, align 8, !dbg !8163
  store %struct.spinlock* %queue_lock90, %struct.spinlock** %lock.addr.i214, align 8
  store i64 %88, i64* %flags.addr.i215, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !8164
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !8164
  store i32 1, i32* %tmp.i216, align 4, !dbg !8164
  %89 = load i32, i32* %tmp.i216, align 4, !dbg !8164
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !8165
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !8165
  store i32 1, i32* %tmp8.i217, align 4, !dbg !8165
  %90 = load i32, i32* %tmp8.i217, align 4, !dbg !8165
  %91 = load i64, i64* %flags.addr.i215, align 8, !dbg !8166
  call void @arch_local_irq_restore(i64 %91) #12, !dbg !8166
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8167, !srcloc !5559
  %92 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i214, align 8, !dbg !8168
  %93 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %92, i32 0, i32 0, !dbg !8168
  %rlock.i218 = bitcast %union.anon* %93 to %struct.raw_spinlock*, !dbg !8168
  br label %if.end189, !dbg !8169

if.end91:                                         ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8170, metadata !DIExpression()), !dbg !8172
  %94 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8172
  %queue92 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %94, i32 0, i32 27, !dbg !8172
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %queue92, i32 0, i32 0, !dbg !8172
  %95 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8172
  %96 = bitcast %struct.list_head* %95 to i8*, !dbg !8172
  store i8* %96, i8** %__mptr, align 8, !dbg !8172
  br label %do.body93, !dbg !8172

do.body93:                                        ; preds = %if.end91
  br label %do.end94, !dbg !8173

do.end94:                                         ; preds = %do.body93
  %97 = load i8*, i8** %__mptr, align 8, !dbg !8172
  %add.ptr = getelementptr i8, i8* %97, i64 -64, !dbg !8172
  %98 = bitcast i8* %add.ptr to %struct.spi_message*, !dbg !8172
  store %struct.spi_message* %98, %struct.spi_message** %tmp95, align 8, !dbg !8173
  %99 = load %struct.spi_message*, %struct.spi_message** %tmp95, align 8, !dbg !8172
  store %struct.spi_message* %99, %struct.spi_message** %msg, align 8, !dbg !8175
  %100 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8176
  %101 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8177
  %cur_msg96 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %101, i32 0, i32 28, !dbg !8178
  store %struct.spi_message* %100, %struct.spi_message** %cur_msg96, align 8, !dbg !8179
  %102 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8180
  %queue97 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %102, i32 0, i32 8, !dbg !8181
  call void @list_del_init(%struct.list_head* %queue97) #11, !dbg !8182
  %103 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8183
  %busy98 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %103, i32 0, i32 30, !dbg !8185
  %104 = load i8, i8* %busy98, align 1, !dbg !8185
  %tobool99 = trunc i8 %104 to i1, !dbg !8185
  br i1 %tobool99, label %if.then100, label %if.else101, !dbg !8186

if.then100:                                       ; preds = %do.end94
  store i8 1, i8* %was_busy, align 1, !dbg !8187
  br label %if.end103, !dbg !8188

if.else101:                                       ; preds = %do.end94
  %105 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8189
  %busy102 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %105, i32 0, i32 30, !dbg !8190
  store i8 1, i8* %busy102, align 1, !dbg !8191
  br label %if.end103

if.end103:                                        ; preds = %if.else101, %if.then100
  %106 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8192
  %queue_lock104 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %106, i32 0, i32 26, !dbg !8193
  %107 = load i64, i64* %flags, align 8, !dbg !8194
  store %struct.spinlock* %queue_lock104, %struct.spinlock** %lock.addr.i219, align 8
  store i64 %107, i64* %flags.addr.i220, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !8195
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !8195
  store i32 1, i32* %tmp.i221, align 4, !dbg !8195
  %108 = load i32, i32* %tmp.i221, align 4, !dbg !8195
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !8196
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !8196
  store i32 1, i32* %tmp8.i222, align 4, !dbg !8196
  %109 = load i32, i32* %tmp8.i222, align 4, !dbg !8196
  %110 = load i64, i64* %flags.addr.i220, align 8, !dbg !8197
  call void @arch_local_irq_restore(i64 %110) #12, !dbg !8197
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !8198, !srcloc !5559
  %111 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i219, align 8, !dbg !8199
  %112 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %111, i32 0, i32 0, !dbg !8199
  %rlock.i223 = bitcast %union.anon* %112 to %struct.raw_spinlock*, !dbg !8199
  %113 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8200
  %io_mutex = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %113, i32 0, i32 14, !dbg !8201
  call void @mutex_lock(%struct.mutex* %io_mutex) #11, !dbg !8202
  %114 = load i8, i8* %was_busy, align 1, !dbg !8203
  %tobool105 = trunc i8 %114 to i1, !dbg !8203
  br i1 %tobool105, label %if.end120, label %land.lhs.true106, !dbg !8205

land.lhs.true106:                                 ; preds = %if.end103
  %115 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8206
  %auto_runtime_pm = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %115, i32 0, i32 33, !dbg !8207
  %116 = load i8, i8* %auto_runtime_pm, align 4, !dbg !8207
  %tobool107 = trunc i8 %116 to i1, !dbg !8207
  br i1 %tobool107, label %if.then109, label %if.end120, !dbg !8208

if.then109:                                       ; preds = %land.lhs.true106
  %117 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8209
  %dev110 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %117, i32 0, i32 0, !dbg !8211
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev110, i32 0, i32 1, !dbg !8212
  %118 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8212
  %call111 = call i32 @pm_runtime_get_sync(%struct.device* %118) #11, !dbg !8213
  store i32 %call111, i32* %ret, align 4, !dbg !8214
  %119 = load i32, i32* %ret, align 4, !dbg !8215
  %cmp112 = icmp slt i32 %119, 0, !dbg !8217
  br i1 %cmp112, label %if.then114, label %if.end119, !dbg !8218

if.then114:                                       ; preds = %if.then109
  %120 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8219
  %dev115 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %120, i32 0, i32 0, !dbg !8221
  %parent116 = getelementptr inbounds %struct.device, %struct.device* %dev115, i32 0, i32 1, !dbg !8222
  %121 = load %struct.device*, %struct.device** %parent116, align 8, !dbg !8222
  call void @pm_runtime_put_noidle(%struct.device* %121) #11, !dbg !8223
  %122 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8224
  %dev117 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %122, i32 0, i32 0, !dbg !8224
  %123 = load i32, i32* %ret, align 4, !dbg !8224
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev117, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0), i32 %123) #14, !dbg !8224
  %124 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8225
  %io_mutex118 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %124, i32 0, i32 14, !dbg !8226
  call void @mutex_unlock(%struct.mutex* %io_mutex118) #11, !dbg !8227
  br label %if.end189, !dbg !8228

if.end119:                                        ; preds = %if.then109
  br label %if.end120, !dbg !8229

if.end120:                                        ; preds = %if.end119, %land.lhs.true106, %if.end103
  %125 = load i8, i8* %was_busy, align 1, !dbg !8230
  %tobool121 = trunc i8 %125 to i1, !dbg !8230
  br i1 %tobool121, label %if.end123, label %if.then122, !dbg !8232

if.then122:                                       ; preds = %if.end120
  %126 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8233
  call void @trace_spi_controller_busy(%struct.spi_controller* %126) #11, !dbg !8234
  br label %if.end123, !dbg !8234

if.end123:                                        ; preds = %if.then122, %if.end120
  %127 = load i8, i8* %was_busy, align 1, !dbg !8235
  %tobool124 = trunc i8 %127 to i1, !dbg !8235
  br i1 %tobool124, label %if.end142, label %land.lhs.true125, !dbg !8237

land.lhs.true125:                                 ; preds = %if.end123
  %128 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8238
  %prepare_transfer_hardware = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %128, i32 0, i32 41, !dbg !8239
  %129 = load i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*)** %prepare_transfer_hardware, align 8, !dbg !8239
  %tobool126 = icmp ne i32 (%struct.spi_controller*)* %129, null, !dbg !8238
  br i1 %tobool126, label %if.then127, label %if.end142, !dbg !8240

if.then127:                                       ; preds = %land.lhs.true125
  %130 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8241
  %prepare_transfer_hardware128 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %130, i32 0, i32 41, !dbg !8243
  %131 = load i32 (%struct.spi_controller*)*, i32 (%struct.spi_controller*)** %prepare_transfer_hardware128, align 8, !dbg !8243
  %132 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8244
  %call129 = call i32 %131(%struct.spi_controller* %132) #11, !dbg !8241
  store i32 %call129, i32* %ret, align 4, !dbg !8245
  %133 = load i32, i32* %ret, align 4, !dbg !8246
  %tobool130 = icmp ne i32 %133, 0, !dbg !8246
  br i1 %tobool130, label %if.then131, label %if.end141, !dbg !8248

if.then131:                                       ; preds = %if.then127
  %134 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8249
  %dev132 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %134, i32 0, i32 0, !dbg !8249
  %135 = load i32, i32* %ret, align 4, !dbg !8249
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev132, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.66, i64 0, i64 0), i32 %135) #14, !dbg !8249
  %136 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8251
  %auto_runtime_pm133 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %136, i32 0, i32 33, !dbg !8253
  %137 = load i8, i8* %auto_runtime_pm133, align 4, !dbg !8253
  %tobool134 = trunc i8 %137 to i1, !dbg !8253
  br i1 %tobool134, label %if.then135, label %if.end139, !dbg !8254

if.then135:                                       ; preds = %if.then131
  %138 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8255
  %dev136 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %138, i32 0, i32 0, !dbg !8256
  %parent137 = getelementptr inbounds %struct.device, %struct.device* %dev136, i32 0, i32 1, !dbg !8257
  %139 = load %struct.device*, %struct.device** %parent137, align 8, !dbg !8257
  %call138 = call i32 @pm_runtime_put(%struct.device* %139) #11, !dbg !8258
  br label %if.end139, !dbg !8258

if.end139:                                        ; preds = %if.then135, %if.then131
  %140 = load i32, i32* %ret, align 4, !dbg !8259
  %141 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8260
  %status = getelementptr inbounds %struct.spi_message, %struct.spi_message* %141, i32 0, i32 7, !dbg !8261
  store i32 %140, i32* %status, align 8, !dbg !8262
  %142 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8263
  call void @spi_finalize_current_message(%struct.spi_controller* %142) #11, !dbg !8264
  %143 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8265
  %io_mutex140 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %143, i32 0, i32 14, !dbg !8266
  call void @mutex_unlock(%struct.mutex* %io_mutex140) #11, !dbg !8267
  br label %if.end189, !dbg !8268

if.end141:                                        ; preds = %if.then127
  br label %if.end142, !dbg !8269

if.end142:                                        ; preds = %if.end141, %land.lhs.true125, %if.end123
  %144 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8270
  call void @trace_spi_message_start(%struct.spi_message* %144) #11, !dbg !8271
  %145 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8272
  %prepare_message = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %145, i32 0, i32 44, !dbg !8274
  %146 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %prepare_message, align 8, !dbg !8274
  %tobool143 = icmp ne i32 (%struct.spi_controller*, %struct.spi_message*)* %146, null, !dbg !8272
  br i1 %tobool143, label %if.then144, label %if.end152, !dbg !8275

if.then144:                                       ; preds = %if.end142
  %147 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8276
  %prepare_message145 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %147, i32 0, i32 44, !dbg !8278
  %148 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %prepare_message145, align 8, !dbg !8278
  %149 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8279
  %150 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8280
  %call146 = call i32 %148(%struct.spi_controller* %149, %struct.spi_message* %150) #11, !dbg !8276
  store i32 %call146, i32* %ret, align 4, !dbg !8281
  %151 = load i32, i32* %ret, align 4, !dbg !8282
  %tobool147 = icmp ne i32 %151, 0, !dbg !8282
  br i1 %tobool147, label %if.then148, label %if.end151, !dbg !8284

if.then148:                                       ; preds = %if.then144
  %152 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8285
  %dev149 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %152, i32 0, i32 0, !dbg !8285
  %153 = load i32, i32* %ret, align 4, !dbg !8285
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev149, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.67, i64 0, i64 0), i32 %153) #14, !dbg !8285
  %154 = load i32, i32* %ret, align 4, !dbg !8287
  %155 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8288
  %status150 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %155, i32 0, i32 7, !dbg !8289
  store i32 %154, i32* %status150, align 8, !dbg !8290
  %156 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8291
  call void @spi_finalize_current_message(%struct.spi_controller* %156) #11, !dbg !8292
  br label %out, !dbg !8293

if.end151:                                        ; preds = %if.then144
  %157 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8294
  %cur_msg_prepared = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %157, i32 0, i32 34, !dbg !8295
  store i8 1, i8* %cur_msg_prepared, align 1, !dbg !8296
  br label %if.end152, !dbg !8297

if.end152:                                        ; preds = %if.end151, %if.end142
  %158 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8298
  %159 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8299
  %call153 = call i32 @spi_map_msg(%struct.spi_controller* %158, %struct.spi_message* %159) #11, !dbg !8300
  store i32 %call153, i32* %ret, align 4, !dbg !8301
  %160 = load i32, i32* %ret, align 4, !dbg !8302
  %tobool154 = icmp ne i32 %160, 0, !dbg !8302
  br i1 %tobool154, label %if.then155, label %if.end157, !dbg !8304

if.then155:                                       ; preds = %if.end152
  %161 = load i32, i32* %ret, align 4, !dbg !8305
  %162 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8307
  %status156 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %162, i32 0, i32 7, !dbg !8308
  store i32 %161, i32* %status156, align 8, !dbg !8309
  %163 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8310
  call void @spi_finalize_current_message(%struct.spi_controller* %163) #11, !dbg !8311
  br label %out, !dbg !8312

if.end157:                                        ; preds = %if.end152
  %164 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8313
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %164, i32 0, i32 65, !dbg !8315
  %165 = load i8, i8* %ptp_sts_supported, align 8, !dbg !8315
  %tobool158 = trunc i8 %165 to i1, !dbg !8315
  br i1 %tobool158, label %if.end178, label %land.lhs.true159, !dbg !8316

land.lhs.true159:                                 ; preds = %if.end157
  %166 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8317
  %transfer_one = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %166, i32 0, i32 48, !dbg !8318
  %167 = load i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %transfer_one, align 8, !dbg !8318
  %tobool160 = icmp ne i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)* %167, null, !dbg !8317
  br i1 %tobool160, label %if.end178, label %if.then161, !dbg !8319

if.then161:                                       ; preds = %land.lhs.true159
  call void @llvm.dbg.declare(metadata i8** %__mptr162, metadata !8320, metadata !DIExpression()), !dbg !8324
  %168 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8324
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %168, i32 0, i32 0, !dbg !8324
  %next163 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !8324
  %169 = load %struct.list_head*, %struct.list_head** %next163, align 8, !dbg !8324
  %170 = bitcast %struct.list_head* %169 to i8*, !dbg !8324
  store i8* %170, i8** %__mptr162, align 8, !dbg !8324
  br label %do.body164, !dbg !8324

do.body164:                                       ; preds = %if.then161
  br label %do.end165, !dbg !8325

do.end165:                                        ; preds = %do.body164
  %171 = load i8*, i8** %__mptr162, align 8, !dbg !8324
  %add.ptr167 = getelementptr i8, i8* %171, i64 -120, !dbg !8324
  %172 = bitcast i8* %add.ptr167 to %struct.spi_transfer*, !dbg !8324
  store %struct.spi_transfer* %172, %struct.spi_transfer** %tmp166, align 8, !dbg !8325
  %173 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp166, align 8, !dbg !8324
  store %struct.spi_transfer* %173, %struct.spi_transfer** %xfer, align 8, !dbg !8327
  br label %for.cond, !dbg !8327

for.cond:                                         ; preds = %do.end175, %do.end165
  %174 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !8328
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %174, i32 0, i32 19, !dbg !8328
  %175 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8328
  %transfers168 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %175, i32 0, i32 0, !dbg !8328
  %cmp169 = icmp eq %struct.list_head* %transfer_list, %transfers168, !dbg !8328
  %lnot = xor i1 %cmp169, true, !dbg !8328
  br i1 %lnot, label %for.body, label %for.end, !dbg !8327

for.body:                                         ; preds = %for.cond
  %176 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !8330
  %ptp_sts_word_pre = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %176, i32 0, i32 15, !dbg !8332
  store i32 0, i32* %ptp_sts_word_pre, align 8, !dbg !8333
  %177 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !8334
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %177, i32 0, i32 17, !dbg !8335
  %178 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts, align 8, !dbg !8335
  call void @ptp_read_system_prets(%struct.ptp_system_timestamp* %178) #11, !dbg !8336
  br label %for.inc, !dbg !8337

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr171, metadata !8338, metadata !DIExpression()), !dbg !8340
  %179 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !8340
  %transfer_list172 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %179, i32 0, i32 19, !dbg !8340
  %next173 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list172, i32 0, i32 0, !dbg !8340
  %180 = load %struct.list_head*, %struct.list_head** %next173, align 8, !dbg !8340
  %181 = bitcast %struct.list_head* %180 to i8*, !dbg !8340
  store i8* %181, i8** %__mptr171, align 8, !dbg !8340
  br label %do.body174, !dbg !8340

do.body174:                                       ; preds = %for.inc
  br label %do.end175, !dbg !8341

do.end175:                                        ; preds = %do.body174
  %182 = load i8*, i8** %__mptr171, align 8, !dbg !8340
  %add.ptr177 = getelementptr i8, i8* %182, i64 -120, !dbg !8340
  %183 = bitcast i8* %add.ptr177 to %struct.spi_transfer*, !dbg !8340
  store %struct.spi_transfer* %183, %struct.spi_transfer** %tmp176, align 8, !dbg !8341
  %184 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp176, align 8, !dbg !8340
  store %struct.spi_transfer* %184, %struct.spi_transfer** %xfer, align 8, !dbg !8328
  br label %for.cond, !dbg !8328, !llvm.loop !8343

for.end:                                          ; preds = %for.cond
  br label %if.end178, !dbg !8345

if.end178:                                        ; preds = %for.end, %land.lhs.true159, %if.end157
  %185 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8346
  %transfer_one_message = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %185, i32 0, i32 42, !dbg !8347
  %186 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %transfer_one_message, align 8, !dbg !8347
  %187 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8348
  %188 = load %struct.spi_message*, %struct.spi_message** %msg, align 8, !dbg !8349
  %call179 = call i32 %186(%struct.spi_controller* %187, %struct.spi_message* %188) #11, !dbg !8346
  store i32 %call179, i32* %ret, align 4, !dbg !8350
  %189 = load i32, i32* %ret, align 4, !dbg !8351
  %tobool180 = icmp ne i32 %189, 0, !dbg !8351
  br i1 %tobool180, label %if.then181, label %if.end183, !dbg !8353

if.then181:                                       ; preds = %if.end178
  %190 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8354
  %dev182 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %190, i32 0, i32 0, !dbg !8354
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev182, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.68, i64 0, i64 0)) #14, !dbg !8354
  br label %out, !dbg !8356

if.end183:                                        ; preds = %if.end178
  br label %out, !dbg !8351

out:                                              ; preds = %if.end183, %if.then181, %if.then155, %if.then148
  call void @llvm.dbg.label(metadata !8357), !dbg !8358
  %191 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8359
  %io_mutex184 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %191, i32 0, i32 14, !dbg !8360
  call void @mutex_unlock(%struct.mutex* %io_mutex184) #11, !dbg !8361
  %192 = load i32, i32* %ret, align 4, !dbg !8362
  %tobool185 = icmp ne i32 %192, 0, !dbg !8362
  br i1 %tobool185, label %if.end189, label %if.then186, !dbg !8364

if.then186:                                       ; preds = %out
  call void @___might_sleep(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 1520, i32 0) #11, !dbg !8365
  %call188 = call i32 @_cond_resched() #11, !dbg !8365
  store i32 %call188, i32* %tmp187, align 4, !dbg !8365
  %193 = load i32, i32* %tmp187, align 4, !dbg !8365
  br label %if.end189, !dbg !8367

if.end189:                                        ; preds = %if.then, %if.then21, %if.then30, %if.end44, %do.end88, %if.then114, %if.end139, %if.then186, %out
  ret void, !dbg !8368
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_controller* @__spi_alloc_controller(%struct.device* %dev, i32 %size, i1 zeroext %slave) #0 !dbg !8369 {
entry:
  %retval = alloca %struct.spi_controller*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i32, align 4
  %slave.addr = alloca i8, align 1
  %ctlr = alloca %struct.spi_controller*, align 8
  %ctlr_size = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8374, metadata !DIExpression()), !dbg !8375
  %frombool = zext i1 %slave to i8
  store i8 %frombool, i8* %slave.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %slave.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !8378, metadata !DIExpression()), !dbg !8379
  call void @llvm.dbg.declare(metadata i64* %ctlr_size, metadata !8380, metadata !DIExpression()), !dbg !8381
  %call = call i32 @dma_get_cache_alignment() #11, !dbg !8382
  %conv = sext i32 %call to i64, !dbg !8382
  %sub = sub i64 %conv, 1, !dbg !8382
  %add = add i64 1384, %sub, !dbg !8382
  %call1 = call i32 @dma_get_cache_alignment() #11, !dbg !8382
  %conv2 = sext i32 %call1 to i64, !dbg !8382
  %sub3 = sub i64 %conv2, 1, !dbg !8382
  %neg = xor i64 %sub3, -1, !dbg !8382
  %and = and i64 %add, %neg, !dbg !8382
  store i64 %and, i64* %ctlr_size, align 8, !dbg !8381
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8383
  %tobool = icmp ne %struct.device* %0, null, !dbg !8383
  br i1 %tobool, label %if.end, label %if.then, !dbg !8385

if.then:                                          ; preds = %entry
  store %struct.spi_controller* null, %struct.spi_controller** %retval, align 8, !dbg !8386
  br label %return, !dbg !8386

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %size.addr, align 4, !dbg !8387
  %conv4 = zext i32 %1 to i64, !dbg !8387
  %2 = load i64, i64* %ctlr_size, align 8, !dbg !8388
  %add5 = add i64 %conv4, %2, !dbg !8389
  %call6 = call i8* @kzalloc(i64 %add5, i32 3264) #11, !dbg !8390
  %3 = bitcast i8* %call6 to %struct.spi_controller*, !dbg !8390
  store %struct.spi_controller* %3, %struct.spi_controller** %ctlr, align 8, !dbg !8391
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8392
  %tobool7 = icmp ne %struct.spi_controller* %4, null, !dbg !8392
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8394

if.then8:                                         ; preds = %if.end
  store %struct.spi_controller* null, %struct.spi_controller** %retval, align 8, !dbg !8395
  br label %return, !dbg !8395

if.end9:                                          ; preds = %if.end
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8396
  %dev10 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 0, !dbg !8397
  call void @device_initialize(%struct.device* %dev10) #11, !dbg !8398
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8399
  %bus_num = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 2, !dbg !8400
  store i16 -1, i16* %bus_num, align 8, !dbg !8401
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8402
  %num_chipselect = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 3, !dbg !8403
  store i16 1, i16* %num_chipselect, align 2, !dbg !8404
  %8 = load i8, i8* %slave.addr, align 1, !dbg !8405
  %tobool11 = trunc i8 %8 to i1, !dbg !8405
  %9 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8406
  %slave12 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %9, i32 0, i32 11, !dbg !8407
  %frombool13 = zext i1 %tobool11 to i8, !dbg !8408
  store i8 %frombool13, i8* %slave12, align 2, !dbg !8408
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8409
  %dev14 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 0, !dbg !8411
  %class = getelementptr inbounds %struct.device, %struct.device* %dev14, i32 0, i32 29, !dbg !8412
  store %struct.class* @spi_master_class, %struct.class** %class, align 8, !dbg !8413
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8414
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8415
  %dev15 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 0, !dbg !8416
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev15, i32 0, i32 1, !dbg !8417
  store %struct.device* %11, %struct.device** %parent, align 8, !dbg !8418
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8419
  %dev16 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %13, i32 0, i32 0, !dbg !8420
  call void @pm_suspend_ignore_children(%struct.device* %dev16, i1 zeroext true) #11, !dbg !8421
  %14 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8422
  %15 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8423
  %16 = bitcast %struct.spi_controller* %15 to i8*, !dbg !8424
  %17 = load i64, i64* %ctlr_size, align 8, !dbg !8425
  %add.ptr = getelementptr i8, i8* %16, i64 %17, !dbg !8426
  call void @spi_controller_set_devdata(%struct.spi_controller* %14, i8* %add.ptr) #11, !dbg !8427
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8428
  store %struct.spi_controller* %18, %struct.spi_controller** %retval, align 8, !dbg !8429
  br label %return, !dbg !8429

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %19 = load %struct.spi_controller*, %struct.spi_controller** %retval, align 8, !dbg !8430
  ret %struct.spi_controller* %19, !dbg !8430
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @dma_get_cache_alignment() #0 !dbg !8431 {
entry:
  ret i32 1, !dbg !8432
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_suspend_ignore_children(%struct.device* %dev, i1 zeroext %enable) #0 !dbg !8433 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %enable.addr = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8435, metadata !DIExpression()), !dbg !8436
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !8437, metadata !DIExpression()), !dbg !8438
  %0 = load i8, i8* %enable.addr, align 1, !dbg !8439
  %tobool = trunc i8 %0 to i1, !dbg !8439
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8440
  %power = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 11, !dbg !8441
  %ignore_children = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 15, !dbg !8442
  %2 = zext i1 %tobool to i16, !dbg !8443
  %bf.load = load i16, i16* %ignore_children, align 8, !dbg !8443
  %bf.shl = shl i16 %2, 7, !dbg !8443
  %bf.clear = and i16 %bf.load, -129, !dbg !8443
  %bf.set = or i16 %bf.clear, %bf.shl, !dbg !8443
  store i16 %bf.set, i16* %ignore_children, align 8, !dbg !8443
  %bf.result.cast = trunc i16 %2 to i8, !dbg !8443
  %tobool1 = trunc i8 %bf.result.cast to i1, !dbg !8443
  ret void, !dbg !8444
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_controller_set_devdata(%struct.spi_controller* %ctlr, i8* %data) #0 !dbg !8445 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !8448, metadata !DIExpression()), !dbg !8449
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8450, metadata !DIExpression()), !dbg !8451
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8452
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 0, !dbg !8453
  %1 = load i8*, i8** %data.addr, align 8, !dbg !8454
  call void @dev_set_drvdata(%struct.device* %dev, i8* %1) #11, !dbg !8455
  ret void, !dbg !8456
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_controller* @__devm_spi_alloc_controller(%struct.device* %dev, i32 %size, i1 zeroext %slave) #0 !dbg !8457 {
entry:
  %retval = alloca %struct.spi_controller*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %size.addr = alloca i32, align 4
  %slave.addr = alloca i8, align 1
  %ptr = alloca %struct.spi_controller**, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !8460, metadata !DIExpression()), !dbg !8461
  %frombool = zext i1 %slave to i8
  store i8 %frombool, i8* %slave.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %slave.addr, metadata !8462, metadata !DIExpression()), !dbg !8463
  call void @llvm.dbg.declare(metadata %struct.spi_controller*** %ptr, metadata !8464, metadata !DIExpression()), !dbg !8465
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !8466, metadata !DIExpression()), !dbg !8467
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_spi_release_controller, i64 8, i32 3264) #11, !dbg !8468
  %0 = bitcast i8* %call to %struct.spi_controller**, !dbg !8468
  store %struct.spi_controller** %0, %struct.spi_controller*** %ptr, align 8, !dbg !8469
  %1 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !8470
  %tobool = icmp ne %struct.spi_controller** %1, null, !dbg !8470
  br i1 %tobool, label %if.end, label %if.then, !dbg !8472

if.then:                                          ; preds = %entry
  store %struct.spi_controller* null, %struct.spi_controller** %retval, align 8, !dbg !8473
  br label %return, !dbg !8473

if.end:                                           ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8474
  %3 = load i32, i32* %size.addr, align 4, !dbg !8475
  %4 = load i8, i8* %slave.addr, align 1, !dbg !8476
  %tobool1 = trunc i8 %4 to i1, !dbg !8476
  %call2 = call %struct.spi_controller* @__spi_alloc_controller(%struct.device* %2, i32 %3, i1 zeroext %tobool1) #11, !dbg !8477
  store %struct.spi_controller* %call2, %struct.spi_controller** %ctlr, align 8, !dbg !8478
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8479
  %tobool3 = icmp ne %struct.spi_controller* %5, null, !dbg !8479
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !8481

if.then4:                                         ; preds = %if.end
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8482
  %7 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !8484
  store %struct.spi_controller* %6, %struct.spi_controller** %7, align 8, !dbg !8485
  %8 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !8486
  %9 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !8487
  %10 = bitcast %struct.spi_controller** %9 to i8*, !dbg !8487
  call void @devres_add(%struct.device* %8, i8* %10) #11, !dbg !8488
  br label %if.end5, !dbg !8489

if.else:                                          ; preds = %if.end
  %11 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !8490
  %12 = bitcast %struct.spi_controller** %11 to i8*, !dbg !8490
  call void @devres_free(i8* %12) #11, !dbg !8492
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then4
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !8493
  store %struct.spi_controller* %13, %struct.spi_controller** %retval, align 8, !dbg !8494
  br label %return, !dbg !8494

return:                                           ; preds = %if.end5, %if.then
  %14 = load %struct.spi_controller*, %struct.spi_controller** %retval, align 8, !dbg !8495
  ret %struct.spi_controller* %14, !dbg !8495
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devres_alloc(void (%struct.device*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !8496 {
entry:
  %release.addr = alloca void (%struct.device*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  store void (%struct.device*, i8*)* %release, void (%struct.device*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.device*, i8*)** %release.addr, metadata !8500, metadata !DIExpression()), !dbg !8501
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !8502, metadata !DIExpression()), !dbg !8503
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  %0 = load void (%struct.device*, i8*)*, void (%struct.device*, i8*)** %release.addr, align 8, !dbg !8506
  %1 = load i64, i64* %size.addr, align 8, !dbg !8507
  %2 = load i32, i32* %gfp.addr, align 4, !dbg !8508
  %call = call noalias i8* @devres_alloc_node(void (%struct.device*, i8*)* %0, i64 %1, i32 %2, i32 -1) #11, !dbg !8509
  ret i8* %call, !dbg !8510
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_spi_release_controller(%struct.device* %dev, i8* %ctlr) #0 !dbg !8511 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ctlr.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !8512, metadata !DIExpression()), !dbg !8513
  store i8* %ctlr, i8** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctlr.addr, metadata !8514, metadata !DIExpression()), !dbg !8515
  %0 = load i8*, i8** %ctlr.addr, align 8, !dbg !8516
  %1 = bitcast i8* %0 to %struct.spi_controller**, !dbg !8517
  %2 = load %struct.spi_controller*, %struct.spi_controller** %1, align 8, !dbg !8518
  call void @spi_controller_put(%struct.spi_controller* %2) #11, !dbg !8519
  ret void, !dbg !8520
}

; Function Attrs: noredzone
declare dso_local void @devres_add(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local void @devres_free(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_register_controller(%struct.spi_controller* %ctlr) #0 !dbg !5210 {
entry:
  %lock.addr.i255 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i255, metadata !5429, metadata !DIExpression()), !dbg !8521
  %lock.addr.i253 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i253, metadata !5429, metadata !DIExpression()), !dbg !8524
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !8527
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %dev = alloca %struct.device*, align 8
  %bi = alloca %struct.boardinfo*, align 8
  %status = alloca i32, align 4
  %id = alloca i32, align 4
  %first_dynamic = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp = alloca i64, align 8
  %__ret_warn_on66 = alloca i32, align 4
  %tmp96 = alloca i64, align 8
  %__ret_warn_on127 = alloca i32, align 4
  %tmp157 = alloca i64, align 8
  %.compoundliteral = alloca %struct.spinlock, align 1
  %.compoundliteral177 = alloca %struct.spinlock, align 1
  %.compoundliteral233 = alloca %struct.spinlock, align 1
  %__mptr = alloca i8*, align 8
  %tmp238 = alloca %struct.boardinfo*, align 8
  %__mptr244 = alloca i8*, align 8
  %tmp248 = alloca %struct.boardinfo*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !8530, metadata !DIExpression()), !dbg !8531
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8532, metadata !DIExpression()), !dbg !8533
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8534
  %dev1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 0, !dbg !8535
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !8536
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !8536
  store %struct.device* %1, %struct.device** %dev, align 8, !dbg !8533
  call void @llvm.dbg.declare(metadata %struct.boardinfo** %bi, metadata !8537, metadata !DIExpression()), !dbg !8538
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8539, metadata !DIExpression()), !dbg !8540
  call void @llvm.dbg.declare(metadata i32* %id, metadata !8541, metadata !DIExpression()), !dbg !8542
  call void @llvm.dbg.declare(metadata i32* %first_dynamic, metadata !8543, metadata !DIExpression()), !dbg !8544
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8545
  %tobool = icmp ne %struct.device* %2, null, !dbg !8545
  br i1 %tobool, label %if.end, label %if.then, !dbg !8547

if.then:                                          ; preds = %entry
  store i32 -19, i32* %retval, align 4, !dbg !8548
  br label %return, !dbg !8548

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8549
  %call = call i32 @spi_controller_check_ops(%struct.spi_controller* %3) #11, !dbg !8550
  store i32 %call, i32* %status, align 4, !dbg !8551
  %4 = load i32, i32* %status, align 4, !dbg !8552
  %tobool2 = icmp ne i32 %4, 0, !dbg !8552
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !8554

if.then3:                                         ; preds = %if.end
  %5 = load i32, i32* %status, align 4, !dbg !8555
  store i32 %5, i32* %retval, align 4, !dbg !8556
  br label %return, !dbg !8556

if.end4:                                          ; preds = %if.end
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8557
  %bus_num = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 2, !dbg !8559
  %7 = load i16, i16* %bus_num, align 8, !dbg !8559
  %conv = sext i16 %7 to i32, !dbg !8557
  %cmp = icmp sge i32 %conv, 0, !dbg !8560
  br i1 %cmp, label %if.then6, label %if.else, !dbg !8561

if.then6:                                         ; preds = %if.end4
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !8562
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8564
  %9 = bitcast %struct.spi_controller* %8 to i8*, !dbg !8564
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8565
  %bus_num7 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 2, !dbg !8566
  %11 = load i16, i16* %bus_num7, align 8, !dbg !8566
  %conv8 = sext i16 %11 to i32, !dbg !8565
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8567
  %bus_num9 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 2, !dbg !8568
  %13 = load i16, i16* %bus_num9, align 8, !dbg !8568
  %conv10 = sext i16 %13 to i32, !dbg !8567
  %add = add i32 %conv10, 1, !dbg !8569
  %call11 = call i32 @idr_alloc(%struct.idr* @spi_master_idr, i8* %9, i32 %conv8, i32 %add, i32 3264) #11, !dbg !8570
  store i32 %call11, i32* %id, align 4, !dbg !8571
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !8572
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !8573, metadata !DIExpression()), !dbg !8576
  %14 = load i32, i32* %id, align 4, !dbg !8576
  %cmp12 = icmp slt i32 %14, 0, !dbg !8576
  %lnot = xor i1 %cmp12, true, !dbg !8576
  %lnot14 = xor i1 %lnot, true, !dbg !8576
  %lnot.ext = zext i1 %lnot14 to i32, !dbg !8576
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !8576
  %15 = load i32, i32* %__ret_warn_on, align 4, !dbg !8577
  %tobool15 = icmp ne i32 %15, 0, !dbg !8577
  %lnot16 = xor i1 %tobool15, true, !dbg !8577
  %lnot18 = xor i1 %lnot16, true, !dbg !8577
  %lnot.ext19 = zext i1 %lnot18 to i32, !dbg !8577
  %conv20 = sext i32 %lnot.ext19 to i64, !dbg !8577
  %tobool21 = icmp ne i64 %conv20, 0, !dbg !8577
  br i1 %tobool21, label %if.then22, label %if.end35, !dbg !8576

if.then22:                                        ; preds = %if.then6
  br label %do.body, !dbg !8577

do.body:                                          ; preds = %if.then22
  br label %do.body23, !dbg !8579

do.body23:                                        ; preds = %do.body
  br label %do.end, !dbg !8581

do.end:                                           ; preds = %do.body23
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !8579
  br label %do.body24, !dbg !8579

do.body24:                                        ; preds = %do.end
  br label %do.body25, !dbg !8583

do.body25:                                        ; preds = %do.body24
  br label %do.end26, !dbg !8585

do.end26:                                         ; preds = %do.body25
  br label %do.body27, !dbg !8583

do.body27:                                        ; preds = %do.end26
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 2668, i32 2313, i64 12) #7, !dbg !8587, !srcloc !8589
  br label %do.end28, !dbg !8587

do.end28:                                         ; preds = %do.body27
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 343) #7, !dbg !8590, !srcloc !8592
  br label %do.body29, !dbg !8583

do.body29:                                        ; preds = %do.end28
  br label %do.end30, !dbg !8593

do.end30:                                         ; preds = %do.body29
  br label %do.end31, !dbg !8583

do.end31:                                         ; preds = %do.end30
  br label %do.body32, !dbg !8579

do.body32:                                        ; preds = %do.end31
  br label %do.end33, !dbg !8595

do.end33:                                         ; preds = %do.body32
  br label %do.end34, !dbg !8579

do.end34:                                         ; preds = %do.end33
  br label %if.end35, !dbg !8579

if.end35:                                         ; preds = %do.end34, %if.then6
  %16 = load i32, i32* %__ret_warn_on, align 4, !dbg !8576
  %tobool36 = icmp ne i32 %16, 0, !dbg !8576
  %lnot37 = xor i1 %tobool36, true, !dbg !8576
  %lnot39 = xor i1 %lnot37, true, !dbg !8576
  %lnot.ext40 = zext i1 %lnot39 to i32, !dbg !8576
  %conv41 = sext i32 %lnot.ext40 to i64, !dbg !8576
  store i64 %conv41, i64* %tmp, align 8, !dbg !8577
  %17 = load i64, i64* %tmp, align 8, !dbg !8576
  %tobool42 = icmp ne i64 %17, 0, !dbg !8597
  br i1 %tobool42, label %if.then43, label %if.end46, !dbg !8598

if.then43:                                        ; preds = %if.end35
  %18 = load i32, i32* %id, align 4, !dbg !8599
  %cmp44 = icmp eq i32 %18, -28, !dbg !8600
  br i1 %cmp44, label %cond.true, label %cond.false, !dbg !8599

cond.true:                                        ; preds = %if.then43
  br label %cond.end, !dbg !8599

cond.false:                                       ; preds = %if.then43
  %19 = load i32, i32* %id, align 4, !dbg !8601
  br label %cond.end, !dbg !8599

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ -16, %cond.true ], [ %19, %cond.false ], !dbg !8599
  store i32 %cond, i32* %retval, align 4, !dbg !8602
  br label %return, !dbg !8602

if.end46:                                         ; preds = %if.end35
  %20 = load i32, i32* %id, align 4, !dbg !8603
  %conv47 = trunc i32 %20 to i16, !dbg !8603
  %21 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8604
  %bus_num48 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %21, i32 0, i32 2, !dbg !8605
  store i16 %conv47, i16* %bus_num48, align 8, !dbg !8606
  br label %if.end114, !dbg !8607

if.else:                                          ; preds = %if.end4
  %22 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8608
  %dev49 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %22, i32 0, i32 0, !dbg !8610
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev49, i32 0, i32 23, !dbg !8611
  %23 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !8611
  %tobool50 = icmp ne %struct.device_node* %23, null, !dbg !8608
  br i1 %tobool50, label %if.then51, label %if.end113, !dbg !8612

if.then51:                                        ; preds = %if.else
  %24 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8613
  %dev52 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %24, i32 0, i32 0, !dbg !8615
  %of_node53 = getelementptr inbounds %struct.device, %struct.device* %dev52, i32 0, i32 23, !dbg !8616
  %25 = load %struct.device_node*, %struct.device_node** %of_node53, align 8, !dbg !8616
  %call54 = call i32 @of_alias_get_id(%struct.device_node* %25, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #11, !dbg !8617
  store i32 %call54, i32* %id, align 4, !dbg !8618
  %26 = load i32, i32* %id, align 4, !dbg !8619
  %cmp55 = icmp sge i32 %26, 0, !dbg !8621
  br i1 %cmp55, label %if.then57, label %if.end112, !dbg !8622

if.then57:                                        ; preds = %if.then51
  %27 = load i32, i32* %id, align 4, !dbg !8623
  %conv58 = trunc i32 %27 to i16, !dbg !8623
  %28 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8625
  %bus_num59 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %28, i32 0, i32 2, !dbg !8626
  store i16 %conv58, i16* %bus_num59, align 8, !dbg !8627
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !8628
  %29 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8629
  %30 = bitcast %struct.spi_controller* %29 to i8*, !dbg !8629
  %31 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8630
  %bus_num60 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %31, i32 0, i32 2, !dbg !8631
  %32 = load i16, i16* %bus_num60, align 8, !dbg !8631
  %conv61 = sext i16 %32 to i32, !dbg !8630
  %33 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8632
  %bus_num62 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %33, i32 0, i32 2, !dbg !8633
  %34 = load i16, i16* %bus_num62, align 8, !dbg !8633
  %conv63 = sext i16 %34 to i32, !dbg !8632
  %add64 = add i32 %conv63, 1, !dbg !8634
  %call65 = call i32 @idr_alloc(%struct.idr* @spi_master_idr, i8* %30, i32 %conv61, i32 %add64, i32 3264) #11, !dbg !8635
  store i32 %call65, i32* %id, align 4, !dbg !8636
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !8637
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on66, metadata !8638, metadata !DIExpression()), !dbg !8641
  %35 = load i32, i32* %id, align 4, !dbg !8641
  %cmp67 = icmp slt i32 %35, 0, !dbg !8641
  %lnot69 = xor i1 %cmp67, true, !dbg !8641
  %lnot71 = xor i1 %lnot69, true, !dbg !8641
  %lnot.ext72 = zext i1 %lnot71 to i32, !dbg !8641
  store i32 %lnot.ext72, i32* %__ret_warn_on66, align 4, !dbg !8641
  %36 = load i32, i32* %__ret_warn_on66, align 4, !dbg !8642
  %tobool73 = icmp ne i32 %36, 0, !dbg !8642
  %lnot74 = xor i1 %tobool73, true, !dbg !8642
  %lnot76 = xor i1 %lnot74, true, !dbg !8642
  %lnot.ext77 = zext i1 %lnot76 to i32, !dbg !8642
  %conv78 = sext i32 %lnot.ext77 to i64, !dbg !8642
  %tobool79 = icmp ne i64 %conv78, 0, !dbg !8642
  br i1 %tobool79, label %if.then80, label %if.end95, !dbg !8641

if.then80:                                        ; preds = %if.then57
  br label %do.body81, !dbg !8642

do.body81:                                        ; preds = %if.then80
  br label %do.body82, !dbg !8644

do.body82:                                        ; preds = %do.body81
  br label %do.end83, !dbg !8646

do.end83:                                         ; preds = %do.body82
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !8644
  br label %do.body84, !dbg !8644

do.body84:                                        ; preds = %do.end83
  br label %do.body85, !dbg !8648

do.body85:                                        ; preds = %do.body84
  br label %do.end86, !dbg !8650

do.end86:                                         ; preds = %do.body85
  br label %do.body87, !dbg !8648

do.body87:                                        ; preds = %do.end86
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 2680, i32 2313, i64 12) #7, !dbg !8652, !srcloc !8654
  br label %do.end88, !dbg !8652

do.end88:                                         ; preds = %do.body87
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 344) #7, !dbg !8655, !srcloc !8657
  br label %do.body89, !dbg !8648

do.body89:                                        ; preds = %do.end88
  br label %do.end90, !dbg !8658

do.end90:                                         ; preds = %do.body89
  br label %do.end91, !dbg !8648

do.end91:                                         ; preds = %do.end90
  br label %do.body92, !dbg !8644

do.body92:                                        ; preds = %do.end91
  br label %do.end93, !dbg !8660

do.end93:                                         ; preds = %do.body92
  br label %do.end94, !dbg !8644

do.end94:                                         ; preds = %do.end93
  br label %if.end95, !dbg !8644

if.end95:                                         ; preds = %do.end94, %if.then57
  %37 = load i32, i32* %__ret_warn_on66, align 4, !dbg !8641
  %tobool97 = icmp ne i32 %37, 0, !dbg !8641
  %lnot98 = xor i1 %tobool97, true, !dbg !8641
  %lnot100 = xor i1 %lnot98, true, !dbg !8641
  %lnot.ext101 = zext i1 %lnot100 to i32, !dbg !8641
  %conv102 = sext i32 %lnot.ext101 to i64, !dbg !8641
  store i64 %conv102, i64* %tmp96, align 8, !dbg !8642
  %38 = load i64, i64* %tmp96, align 8, !dbg !8641
  %tobool103 = icmp ne i64 %38, 0, !dbg !8662
  br i1 %tobool103, label %if.then104, label %if.end111, !dbg !8663

if.then104:                                       ; preds = %if.end95
  %39 = load i32, i32* %id, align 4, !dbg !8664
  %cmp105 = icmp eq i32 %39, -28, !dbg !8665
  br i1 %cmp105, label %cond.true107, label %cond.false108, !dbg !8664

cond.true107:                                     ; preds = %if.then104
  br label %cond.end109, !dbg !8664

cond.false108:                                    ; preds = %if.then104
  %40 = load i32, i32* %id, align 4, !dbg !8666
  br label %cond.end109, !dbg !8664

cond.end109:                                      ; preds = %cond.false108, %cond.true107
  %cond110 = phi i32 [ -16, %cond.true107 ], [ %40, %cond.false108 ], !dbg !8664
  store i32 %cond110, i32* %retval, align 4, !dbg !8667
  br label %return, !dbg !8667

if.end111:                                        ; preds = %if.end95
  br label %if.end112, !dbg !8668

if.end112:                                        ; preds = %if.end111, %if.then51
  br label %if.end113, !dbg !8669

if.end113:                                        ; preds = %if.end112, %if.else
  br label %if.end114

if.end114:                                        ; preds = %if.end113, %if.end46
  %41 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8670
  %bus_num115 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %41, i32 0, i32 2, !dbg !8672
  %42 = load i16, i16* %bus_num115, align 8, !dbg !8672
  %conv116 = sext i16 %42 to i32, !dbg !8670
  %cmp117 = icmp slt i32 %conv116, 0, !dbg !8673
  br i1 %cmp117, label %if.then119, label %if.end169, !dbg !8674

if.then119:                                       ; preds = %if.end114
  %call120 = call i32 @of_alias_get_highest_id(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #11, !dbg !8675
  store i32 %call120, i32* %first_dynamic, align 4, !dbg !8677
  %43 = load i32, i32* %first_dynamic, align 4, !dbg !8678
  %cmp121 = icmp slt i32 %43, 0, !dbg !8680
  br i1 %cmp121, label %if.then123, label %if.else124, !dbg !8681

if.then123:                                       ; preds = %if.then119
  store i32 0, i32* %first_dynamic, align 4, !dbg !8682
  br label %if.end125, !dbg !8683

if.else124:                                       ; preds = %if.then119
  %44 = load i32, i32* %first_dynamic, align 4, !dbg !8684
  %inc = add i32 %44, 1, !dbg !8684
  store i32 %inc, i32* %first_dynamic, align 4, !dbg !8684
  br label %if.end125

if.end125:                                        ; preds = %if.else124, %if.then123
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !8685
  %45 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8686
  %46 = bitcast %struct.spi_controller* %45 to i8*, !dbg !8686
  %47 = load i32, i32* %first_dynamic, align 4, !dbg !8687
  %call126 = call i32 @idr_alloc(%struct.idr* @spi_master_idr, i8* %46, i32 %47, i32 0, i32 3264) #11, !dbg !8688
  store i32 %call126, i32* %id, align 4, !dbg !8689
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !8690
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on127, metadata !8691, metadata !DIExpression()), !dbg !8694
  %48 = load i32, i32* %id, align 4, !dbg !8694
  %cmp128 = icmp slt i32 %48, 0, !dbg !8694
  %lnot130 = xor i1 %cmp128, true, !dbg !8694
  %lnot132 = xor i1 %lnot130, true, !dbg !8694
  %lnot.ext133 = zext i1 %lnot132 to i32, !dbg !8694
  store i32 %lnot.ext133, i32* %__ret_warn_on127, align 4, !dbg !8694
  %49 = load i32, i32* %__ret_warn_on127, align 4, !dbg !8695
  %tobool134 = icmp ne i32 %49, 0, !dbg !8695
  %lnot135 = xor i1 %tobool134, true, !dbg !8695
  %lnot137 = xor i1 %lnot135, true, !dbg !8695
  %lnot.ext138 = zext i1 %lnot137 to i32, !dbg !8695
  %conv139 = sext i32 %lnot.ext138 to i64, !dbg !8695
  %tobool140 = icmp ne i64 %conv139, 0, !dbg !8695
  br i1 %tobool140, label %if.then141, label %if.end156, !dbg !8694

if.then141:                                       ; preds = %if.end125
  br label %do.body142, !dbg !8695

do.body142:                                       ; preds = %if.then141
  br label %do.body143, !dbg !8697

do.body143:                                       ; preds = %do.body142
  br label %do.end144, !dbg !8699

do.end144:                                        ; preds = %do.body143
  call void (i8*, ...) @__warn_printk(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)) #11, !dbg !8697
  br label %do.body145, !dbg !8697

do.body145:                                       ; preds = %do.end144
  br label %do.body146, !dbg !8701

do.body146:                                       ; preds = %do.body145
  br label %do.end147, !dbg !8703

do.end147:                                        ; preds = %do.body146
  br label %do.body148, !dbg !8701

do.body148:                                       ; preds = %do.end147
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 2695, i32 2313, i64 12) #7, !dbg !8705, !srcloc !8707
  br label %do.end149, !dbg !8705

do.end149:                                        ; preds = %do.body148
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 345) #7, !dbg !8708, !srcloc !8710
  br label %do.body150, !dbg !8701

do.body150:                                       ; preds = %do.end149
  br label %do.end151, !dbg !8711

do.end151:                                        ; preds = %do.body150
  br label %do.end152, !dbg !8701

do.end152:                                        ; preds = %do.end151
  br label %do.body153, !dbg !8697

do.body153:                                       ; preds = %do.end152
  br label %do.end154, !dbg !8713

do.end154:                                        ; preds = %do.body153
  br label %do.end155, !dbg !8697

do.end155:                                        ; preds = %do.end154
  br label %if.end156, !dbg !8697

if.end156:                                        ; preds = %do.end155, %if.end125
  %50 = load i32, i32* %__ret_warn_on127, align 4, !dbg !8694
  %tobool158 = icmp ne i32 %50, 0, !dbg !8694
  %lnot159 = xor i1 %tobool158, true, !dbg !8694
  %lnot161 = xor i1 %lnot159, true, !dbg !8694
  %lnot.ext162 = zext i1 %lnot161 to i32, !dbg !8694
  %conv163 = sext i32 %lnot.ext162 to i64, !dbg !8694
  store i64 %conv163, i64* %tmp157, align 8, !dbg !8695
  %51 = load i64, i64* %tmp157, align 8, !dbg !8694
  %tobool164 = icmp ne i64 %51, 0, !dbg !8715
  br i1 %tobool164, label %if.then165, label %if.end166, !dbg !8716

if.then165:                                       ; preds = %if.end156
  %52 = load i32, i32* %id, align 4, !dbg !8717
  store i32 %52, i32* %retval, align 4, !dbg !8718
  br label %return, !dbg !8718

if.end166:                                        ; preds = %if.end156
  %53 = load i32, i32* %id, align 4, !dbg !8719
  %conv167 = trunc i32 %53 to i16, !dbg !8719
  %54 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8720
  %bus_num168 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %54, i32 0, i32 2, !dbg !8721
  store i16 %conv167, i16* %bus_num168, align 8, !dbg !8722
  br label %if.end169, !dbg !8723

if.end169:                                        ; preds = %if.end166, %if.end114
  %55 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8724
  %queue = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %55, i32 0, i32 27, !dbg !8725
  call void @INIT_LIST_HEAD(%struct.list_head* %queue) #11, !dbg !8726
  br label %do.body170, !dbg !8727

do.body170:                                       ; preds = %if.end169
  %56 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8728
  %queue_lock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %56, i32 0, i32 26, !dbg !8728
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %57 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !8729
  %58 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %57, i32 0, i32 0, !dbg !8730
  %rlock.i = bitcast %union.anon* %58 to %struct.raw_spinlock*, !dbg !8730
  %59 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8728
  %queue_lock172 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %59, i32 0, i32 26, !dbg !8728
  %60 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral, i32 0, i32 0, !dbg !8728
  %rlock = bitcast %union.anon* %60 to %struct.raw_spinlock*, !dbg !8728
  %61 = bitcast %struct.spinlock* %queue_lock172 to i8*, !dbg !8728
  %62 = bitcast %struct.spinlock* %.compoundliteral to i8*, !dbg !8728
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 1 %62, i64 0, i1 false), !dbg !8728
  br label %do.end173, !dbg !8728

do.end173:                                        ; preds = %do.body170
  br label %do.body174, !dbg !8731

do.body174:                                       ; preds = %do.end173
  %63 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8732
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %63, i32 0, i32 15, !dbg !8732
  store %struct.spinlock* %bus_lock_spinlock, %struct.spinlock** %lock.addr.i253, align 8
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i253, align 8, !dbg !8733
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !8734
  %rlock.i254 = bitcast %union.anon* %65 to %struct.raw_spinlock*, !dbg !8734
  %66 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8732
  %bus_lock_spinlock176 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %66, i32 0, i32 15, !dbg !8732
  %67 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral177, i32 0, i32 0, !dbg !8732
  %rlock178 = bitcast %union.anon* %67 to %struct.raw_spinlock*, !dbg !8732
  %68 = bitcast %struct.spinlock* %bus_lock_spinlock176 to i8*, !dbg !8732
  %69 = bitcast %struct.spinlock* %.compoundliteral177 to i8*, !dbg !8732
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 1 %69, i64 0, i1 false), !dbg !8732
  br label %do.end179, !dbg !8732

do.end179:                                        ; preds = %do.body174
  br label %do.body180, !dbg !8735

do.body180:                                       ; preds = %do.end179
  %70 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8736
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %70, i32 0, i32 16, !dbg !8736
  call void @__mutex_init(%struct.mutex* %bus_lock_mutex, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0), %struct.lock_class_key* @spi_register_controller.__key) #11, !dbg !8736
  br label %do.end181, !dbg !8736

do.end181:                                        ; preds = %do.body180
  br label %do.body182, !dbg !8738

do.body182:                                       ; preds = %do.end181
  %71 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8739
  %io_mutex = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %71, i32 0, i32 14, !dbg !8739
  call void @__mutex_init(%struct.mutex* %io_mutex, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0), %struct.lock_class_key* @spi_register_controller.__key.10) #11, !dbg !8739
  br label %do.end183, !dbg !8739

do.end183:                                        ; preds = %do.body182
  %72 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8741
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %72, i32 0, i32 17, !dbg !8742
  store i8 0, i8* %bus_lock_flag, align 8, !dbg !8743
  %73 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8744
  %xfer_completion = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %73, i32 0, i32 39, !dbg !8744
  call void @__init_completion(%struct.completion* %xfer_completion) #11, !dbg !8744
  %74 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8745
  %max_dma_len = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %74, i32 0, i32 40, !dbg !8747
  %75 = load i64, i64* %max_dma_len, align 8, !dbg !8747
  %tobool184 = icmp ne i64 %75, 0, !dbg !8745
  br i1 %tobool184, label %if.end187, label %if.then185, !dbg !8748

if.then185:                                       ; preds = %do.end183
  %76 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8749
  %max_dma_len186 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %76, i32 0, i32 40, !dbg !8750
  store i64 2147483647, i64* %max_dma_len186, align 8, !dbg !8751
  br label %if.end187, !dbg !8749

if.end187:                                        ; preds = %if.then185, %do.end183
  %77 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8752
  %dev188 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %77, i32 0, i32 0, !dbg !8753
  %78 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8754
  %bus_num189 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %78, i32 0, i32 2, !dbg !8755
  %79 = load i16, i16* %bus_num189, align 8, !dbg !8755
  %conv190 = sext i16 %79 to i32, !dbg !8754
  %call191 = call i32 (%struct.device*, i8*, ...) @dev_set_name(%struct.device* %dev188, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i32 %conv190) #11, !dbg !8756
  %80 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8757
  %call192 = call zeroext i1 @spi_controller_is_slave(%struct.spi_controller* %80) #11, !dbg !8759
  br i1 %call192, label %if.end206, label %if.then193, !dbg !8760

if.then193:                                       ; preds = %if.end187
  %81 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8761
  %use_gpio_descriptors = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %81, i32 0, i32 56, !dbg !8764
  %82 = load i8, i8* %use_gpio_descriptors, align 8, !dbg !8764
  %tobool194 = trunc i8 %82 to i1, !dbg !8764
  br i1 %tobool194, label %if.then195, label %if.else200, !dbg !8765

if.then195:                                       ; preds = %if.then193
  %83 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8766
  %call196 = call i32 @spi_get_gpio_descs(%struct.spi_controller* %83) #11, !dbg !8768
  store i32 %call196, i32* %status, align 4, !dbg !8769
  %84 = load i32, i32* %status, align 4, !dbg !8770
  %tobool197 = icmp ne i32 %84, 0, !dbg !8770
  br i1 %tobool197, label %if.then198, label %if.end199, !dbg !8772

if.then198:                                       ; preds = %if.then195
  br label %free_bus_id, !dbg !8773

if.end199:                                        ; preds = %if.then195
  %85 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8774
  %mode_bits = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %85, i32 0, i32 5, !dbg !8775
  %86 = load i32, i32* %mode_bits, align 8, !dbg !8776
  %or = or i32 %86, 4, !dbg !8776
  store i32 %or, i32* %mode_bits, align 8, !dbg !8776
  br label %if.end205, !dbg !8777

if.else200:                                       ; preds = %if.then193
  %87 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8778
  %call201 = call i32 @of_spi_get_gpio_numbers(%struct.spi_controller* %87) #11, !dbg !8780
  store i32 %call201, i32* %status, align 4, !dbg !8781
  %88 = load i32, i32* %status, align 4, !dbg !8782
  %tobool202 = icmp ne i32 %88, 0, !dbg !8782
  br i1 %tobool202, label %if.then203, label %if.end204, !dbg !8784

if.then203:                                       ; preds = %if.else200
  br label %free_bus_id, !dbg !8785

if.end204:                                        ; preds = %if.else200
  br label %if.end205

if.end205:                                        ; preds = %if.end204, %if.end199
  br label %if.end206, !dbg !8786

if.end206:                                        ; preds = %if.end205, %if.end187
  %89 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8787
  %num_chipselect = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %89, i32 0, i32 3, !dbg !8789
  %90 = load i16, i16* %num_chipselect, align 2, !dbg !8789
  %tobool207 = icmp ne i16 %90, 0, !dbg !8787
  br i1 %tobool207, label %if.end209, label %if.then208, !dbg !8790

if.then208:                                       ; preds = %if.end206
  store i32 -22, i32* %status, align 4, !dbg !8791
  br label %free_bus_id, !dbg !8793

if.end209:                                        ; preds = %if.end206
  %91 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8794
  %dev210 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %91, i32 0, i32 0, !dbg !8795
  %call211 = call i32 @device_add(%struct.device* %dev210) #11, !dbg !8796
  store i32 %call211, i32* %status, align 4, !dbg !8797
  %92 = load i32, i32* %status, align 4, !dbg !8798
  %cmp212 = icmp slt i32 %92, 0, !dbg !8800
  br i1 %cmp212, label %if.then214, label %if.end215, !dbg !8801

if.then214:                                       ; preds = %if.end209
  br label %free_bus_id, !dbg !8802

if.end215:                                        ; preds = %if.end209
  %93 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8803
  %transfer = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %93, i32 0, i32 20, !dbg !8805
  %94 = load i32 (%struct.spi_device*, %struct.spi_message*)*, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer, align 8, !dbg !8805
  %tobool216 = icmp ne i32 (%struct.spi_device*, %struct.spi_message*)* %94, null, !dbg !8803
  br i1 %tobool216, label %if.then217, label %if.else218, !dbg !8806

if.then217:                                       ; preds = %if.end215
  %95 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8807
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %95, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0)) #14, !dbg !8807
  br label %if.end228, !dbg !8809

if.else218:                                       ; preds = %if.end215
  %96 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8810
  %transfer_one = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %96, i32 0, i32 48, !dbg !8812
  %97 = load i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %transfer_one, align 8, !dbg !8812
  %tobool219 = icmp ne i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)* %97, null, !dbg !8810
  br i1 %tobool219, label %if.then221, label %lor.lhs.false, !dbg !8813

lor.lhs.false:                                    ; preds = %if.else218
  %98 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8814
  %transfer_one_message = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %98, i32 0, i32 42, !dbg !8815
  %99 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %transfer_one_message, align 8, !dbg !8815
  %tobool220 = icmp ne i32 (%struct.spi_controller*, %struct.spi_message*)* %99, null, !dbg !8814
  br i1 %tobool220, label %if.then221, label %if.end227, !dbg !8816

if.then221:                                       ; preds = %lor.lhs.false, %if.else218
  %100 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8817
  %call222 = call i32 @spi_controller_initialize_queue(%struct.spi_controller* %100) #11, !dbg !8819
  store i32 %call222, i32* %status, align 4, !dbg !8820
  %101 = load i32, i32* %status, align 4, !dbg !8821
  %tobool223 = icmp ne i32 %101, 0, !dbg !8821
  br i1 %tobool223, label %if.then224, label %if.end226, !dbg !8823

if.then224:                                       ; preds = %if.then221
  %102 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8824
  %dev225 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %102, i32 0, i32 0, !dbg !8826
  call void @device_del(%struct.device* %dev225) #11, !dbg !8827
  br label %free_bus_id, !dbg !8828

if.end226:                                        ; preds = %if.then221
  br label %if.end227, !dbg !8829

if.end227:                                        ; preds = %if.end226, %lor.lhs.false
  br label %if.end228

if.end228:                                        ; preds = %if.end227, %if.then217
  br label %do.body229, !dbg !8830

do.body229:                                       ; preds = %if.end228
  %103 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8831
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %103, i32 0, i32 59, !dbg !8831
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics, i32 0, i32 0, !dbg !8831
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i255, align 8
  %104 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i255, align 8, !dbg !8832
  %105 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %104, i32 0, i32 0, !dbg !8833
  %rlock.i256 = bitcast %union.anon* %105 to %struct.raw_spinlock*, !dbg !8833
  %106 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8831
  %statistics231 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %106, i32 0, i32 59, !dbg !8831
  %lock232 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics231, i32 0, i32 0, !dbg !8831
  %107 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %.compoundliteral233, i32 0, i32 0, !dbg !8831
  %rlock234 = bitcast %union.anon* %107 to %struct.raw_spinlock*, !dbg !8831
  %108 = bitcast %struct.spinlock* %lock232 to i8*, !dbg !8831
  %109 = bitcast %struct.spinlock* %.compoundliteral233 to i8*, !dbg !8831
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 1 %109, i64 0, i1 false), !dbg !8831
  br label %do.end235, !dbg !8831

do.end235:                                        ; preds = %do.body229
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !8834
  %110 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8835
  %list = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %110, i32 0, i32 1, !dbg !8836
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* @spi_controller_list) #11, !dbg !8837
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !8838, metadata !DIExpression()), !dbg !8841
  %111 = load %struct.list_head*, %struct.list_head** getelementptr inbounds (%struct.list_head, %struct.list_head* @board_list, i32 0, i32 0), align 8, !dbg !8841
  %112 = bitcast %struct.list_head* %111 to i8*, !dbg !8841
  store i8* %112, i8** %__mptr, align 8, !dbg !8841
  br label %do.body236, !dbg !8841

do.body236:                                       ; preds = %do.end235
  br label %do.end237, !dbg !8842

do.end237:                                        ; preds = %do.body236
  %113 = load i8*, i8** %__mptr, align 8, !dbg !8841
  %add.ptr = getelementptr i8, i8* %113, i64 0, !dbg !8841
  %114 = bitcast i8* %add.ptr to %struct.boardinfo*, !dbg !8841
  store %struct.boardinfo* %114, %struct.boardinfo** %tmp238, align 8, !dbg !8842
  %115 = load %struct.boardinfo*, %struct.boardinfo** %tmp238, align 8, !dbg !8841
  store %struct.boardinfo* %115, %struct.boardinfo** %bi, align 8, !dbg !8844
  br label %for.cond, !dbg !8844

for.cond:                                         ; preds = %do.end247, %do.end237
  %116 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !8845
  %list239 = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %116, i32 0, i32 0, !dbg !8845
  %cmp240 = icmp eq %struct.list_head* %list239, @board_list, !dbg !8845
  %lnot242 = xor i1 %cmp240, true, !dbg !8845
  br i1 %lnot242, label %for.body, label %for.end, !dbg !8844

for.body:                                         ; preds = %for.cond
  %117 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8847
  %118 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !8848
  %board_info = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %118, i32 0, i32 1, !dbg !8849
  call void @spi_match_controller_to_boardinfo(%struct.spi_controller* %117, %struct.spi_board_info* %board_info) #11, !dbg !8850
  br label %for.inc, !dbg !8850

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr244, metadata !8851, metadata !DIExpression()), !dbg !8853
  %119 = load %struct.boardinfo*, %struct.boardinfo** %bi, align 8, !dbg !8853
  %list245 = getelementptr inbounds %struct.boardinfo, %struct.boardinfo* %119, i32 0, i32 0, !dbg !8853
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list245, i32 0, i32 0, !dbg !8853
  %120 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !8853
  %121 = bitcast %struct.list_head* %120 to i8*, !dbg !8853
  store i8* %121, i8** %__mptr244, align 8, !dbg !8853
  br label %do.body246, !dbg !8853

do.body246:                                       ; preds = %for.inc
  br label %do.end247, !dbg !8854

do.end247:                                        ; preds = %do.body246
  %122 = load i8*, i8** %__mptr244, align 8, !dbg !8853
  %add.ptr249 = getelementptr i8, i8* %122, i64 0, !dbg !8853
  %123 = bitcast i8* %add.ptr249 to %struct.boardinfo*, !dbg !8853
  store %struct.boardinfo* %123, %struct.boardinfo** %tmp248, align 8, !dbg !8854
  %124 = load %struct.boardinfo*, %struct.boardinfo** %tmp248, align 8, !dbg !8853
  store %struct.boardinfo* %124, %struct.boardinfo** %bi, align 8, !dbg !8845
  br label %for.cond, !dbg !8845, !llvm.loop !8856

for.end:                                          ; preds = %for.cond
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !8858
  %125 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8859
  call void @of_register_spi_devices(%struct.spi_controller* %125) #11, !dbg !8860
  %126 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8861
  call void @acpi_register_spi_devices(%struct.spi_controller* %126) #11, !dbg !8862
  %127 = load i32, i32* %status, align 4, !dbg !8863
  store i32 %127, i32* %retval, align 4, !dbg !8864
  br label %return, !dbg !8864

free_bus_id:                                      ; preds = %if.then224, %if.then214, %if.then208, %if.then203, %if.then198
  call void @llvm.dbg.label(metadata !8865), !dbg !8866
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !8867
  %128 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8868
  %bus_num250 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %128, i32 0, i32 2, !dbg !8869
  %129 = load i16, i16* %bus_num250, align 8, !dbg !8869
  %conv251 = sext i16 %129 to i64, !dbg !8868
  %call252 = call i8* @idr_remove(%struct.idr* @spi_master_idr, i64 %conv251) #11, !dbg !8870
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !8871
  %130 = load i32, i32* %status, align 4, !dbg !8872
  store i32 %130, i32* %retval, align 4, !dbg !8873
  br label %return, !dbg !8873

return:                                           ; preds = %free_bus_id, %for.end, %if.then165, %cond.end109, %cond.end, %if.then3, %if.then
  %131 = load i32, i32* %retval, align 4, !dbg !8874
  ret i32 %131, !dbg !8874
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_controller_check_ops(%struct.spi_controller* %ctlr) #0 !dbg !8875 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !8876, metadata !DIExpression()), !dbg !8877
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8878
  %mem_ops = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 50, !dbg !8880
  %1 = load %struct.spi_controller_mem_ops*, %struct.spi_controller_mem_ops** %mem_ops, align 8, !dbg !8880
  %tobool = icmp ne %struct.spi_controller_mem_ops* %1, null, !dbg !8878
  br i1 %tobool, label %if.then, label %if.else, !dbg !8881

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8882
  %mem_ops1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 50, !dbg !8885
  %3 = load %struct.spi_controller_mem_ops*, %struct.spi_controller_mem_ops** %mem_ops1, align 8, !dbg !8885
  %exec_op = getelementptr inbounds %struct.spi_controller_mem_ops, %struct.spi_controller_mem_ops* %3, i32 0, i32 2, !dbg !8886
  %4 = load i32 (%struct.spi_mem*, %struct.spi_mem_op*)*, i32 (%struct.spi_mem*, %struct.spi_mem_op*)** %exec_op, align 8, !dbg !8886
  %tobool2 = icmp ne i32 (%struct.spi_mem*, %struct.spi_mem_op*)* %4, null, !dbg !8882
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !8887

if.then3:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !8888
  br label %return, !dbg !8888

if.end:                                           ; preds = %if.then
  br label %if.end10, !dbg !8889

if.else:                                          ; preds = %entry
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8890
  %transfer = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 20, !dbg !8892
  %6 = load i32 (%struct.spi_device*, %struct.spi_message*)*, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer, align 8, !dbg !8892
  %tobool4 = icmp ne i32 (%struct.spi_device*, %struct.spi_message*)* %6, null, !dbg !8890
  br i1 %tobool4, label %if.end9, label %land.lhs.true, !dbg !8893

land.lhs.true:                                    ; preds = %if.else
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8894
  %transfer_one = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 48, !dbg !8895
  %8 = load i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %transfer_one, align 8, !dbg !8895
  %tobool5 = icmp ne i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)* %8, null, !dbg !8894
  br i1 %tobool5, label %if.end9, label %land.lhs.true6, !dbg !8896

land.lhs.true6:                                   ; preds = %land.lhs.true
  %9 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8897
  %transfer_one_message = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %9, i32 0, i32 42, !dbg !8898
  %10 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %transfer_one_message, align 8, !dbg !8898
  %tobool7 = icmp ne i32 (%struct.spi_controller*, %struct.spi_message*)* %10, null, !dbg !8897
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !8899

if.then8:                                         ; preds = %land.lhs.true6
  store i32 -22, i32* %retval, align 4, !dbg !8900
  br label %return, !dbg !8900

if.end9:                                          ; preds = %land.lhs.true6, %land.lhs.true, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9, %if.end
  store i32 0, i32* %retval, align 4, !dbg !8902
  br label %return, !dbg !8902

return:                                           ; preds = %if.end10, %if.then8, %if.then3
  %11 = load i32, i32* %retval, align 4, !dbg !8903
  ret i32 %11, !dbg !8903
}

; Function Attrs: noredzone
declare dso_local i32 @idr_alloc(%struct.idr*, i8*, i32, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @__warn_printk(i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @of_alias_get_id(%struct.device_node*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @of_alias_get_highest_id(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #0 !dbg !8904 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !8907, metadata !DIExpression()), !dbg !8908
  br label %do.body, !dbg !8909

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !8910

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !8912

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !8910

do.body2:                                         ; preds = %do.end
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8914
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8914
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !8914
  store volatile %struct.list_head* %0, %struct.list_head** %next, align 8, !dbg !8914
  br label %do.end3, !dbg !8914

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !8910

do.end4:                                          ; preds = %do.end3
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8916
  %3 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !8917
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 1, !dbg !8918
  store %struct.list_head* %2, %struct.list_head** %prev, align 8, !dbg !8919
  ret void, !dbg !8920
}

; Function Attrs: noredzone
declare dso_local void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__init_completion(%struct.completion* %x) #0 !dbg !5383 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !8921, metadata !DIExpression()), !dbg !8922
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !8923
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !8924
  store i32 0, i32* %done, align 8, !dbg !8925
  br label %do.body, !dbg !8926

do.body:                                          ; preds = %entry
  %1 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !8927
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %1, i32 0, i32 1, !dbg !8927
  call void @__init_swait_queue_head(%struct.swait_queue_head* %wait, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.70, i64 0, i64 0), %struct.lock_class_key* @__init_completion.__key) #11, !dbg !8927
  br label %do.end, !dbg !8927

do.end:                                           ; preds = %do.body
  ret void, !dbg !8929
}

; Function Attrs: noredzone
declare dso_local i32 @dev_set_name(%struct.device*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @spi_controller_is_slave(%struct.spi_controller* %ctlr) #0 !dbg !8930 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !8933, metadata !DIExpression()), !dbg !8934
  ret i1 false, !dbg !8935
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_get_gpio_descs(%struct.spi_controller* %ctlr) #0 !dbg !8936 {
entry:
  %word.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %word.addr.i, metadata !8937, metadata !DIExpression()), !dbg !8941
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %nb = alloca i32, align 4
  %i = alloca i32, align 4
  %cs = alloca %struct.gpio_desc**, align 8
  %dev = alloca %struct.device*, align 8
  %native_cs_mask = alloca i64, align 8
  %num_cs_gpios = alloca i32, align 4
  %__UNIQUE_ID___x341 = alloca i32, align 4
  %__UNIQUE_ID___y342 = alloca i32, align 4
  %tmp = alloca i32, align 4
  %gpioname = alloca i8*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !8943, metadata !DIExpression()), !dbg !8944
  call void @llvm.dbg.declare(metadata i32* %nb, metadata !8945, metadata !DIExpression()), !dbg !8946
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8947, metadata !DIExpression()), !dbg !8948
  call void @llvm.dbg.declare(metadata %struct.gpio_desc*** %cs, metadata !8949, metadata !DIExpression()), !dbg !8950
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !8951, metadata !DIExpression()), !dbg !8952
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8953
  %dev1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 0, !dbg !8954
  store %struct.device* %dev1, %struct.device** %dev, align 8, !dbg !8952
  call void @llvm.dbg.declare(metadata i64* %native_cs_mask, metadata !8955, metadata !DIExpression()), !dbg !8956
  store i64 0, i64* %native_cs_mask, align 8, !dbg !8956
  call void @llvm.dbg.declare(metadata i32* %num_cs_gpios, metadata !8957, metadata !DIExpression()), !dbg !8958
  store i32 0, i32* %num_cs_gpios, align 4, !dbg !8958
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8959
  %call = call i32 @gpiod_count(%struct.device* %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0)) #11, !dbg !8960
  store i32 %call, i32* %nb, align 4, !dbg !8961
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x341, metadata !8962, metadata !DIExpression()), !dbg !8964
  %2 = load i32, i32* %nb, align 4, !dbg !8964
  store i32 %2, i32* %__UNIQUE_ID___x341, align 4, !dbg !8964
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y342, metadata !8965, metadata !DIExpression()), !dbg !8964
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8964
  %num_chipselect = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %3, i32 0, i32 3, !dbg !8964
  %4 = load i16, i16* %num_chipselect, align 2, !dbg !8964
  %conv = zext i16 %4 to i32, !dbg !8964
  store i32 %conv, i32* %__UNIQUE_ID___y342, align 4, !dbg !8964
  %5 = load i32, i32* %__UNIQUE_ID___x341, align 4, !dbg !8964
  %6 = load i32, i32* %__UNIQUE_ID___y342, align 4, !dbg !8964
  %cmp = icmp sgt i32 %5, %6, !dbg !8964
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8964

cond.true:                                        ; preds = %entry
  %7 = load i32, i32* %__UNIQUE_ID___x341, align 4, !dbg !8964
  br label %cond.end, !dbg !8964

cond.false:                                       ; preds = %entry
  %8 = load i32, i32* %__UNIQUE_ID___y342, align 4, !dbg !8964
  br label %cond.end, !dbg !8964

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %7, %cond.true ], [ %8, %cond.false ], !dbg !8964
  store i32 %cond, i32* %tmp, align 4, !dbg !8964
  %9 = load i32, i32* %tmp, align 4, !dbg !8964
  %conv3 = trunc i32 %9 to i16, !dbg !8966
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8967
  %num_chipselect4 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 3, !dbg !8968
  store i16 %conv3, i16* %num_chipselect4, align 2, !dbg !8969
  %11 = load i32, i32* %nb, align 4, !dbg !8970
  %cmp5 = icmp eq i32 %11, 0, !dbg !8972
  br i1 %cmp5, label %if.then, label %lor.lhs.false, !dbg !8973

lor.lhs.false:                                    ; preds = %cond.end
  %12 = load i32, i32* %nb, align 4, !dbg !8974
  %cmp7 = icmp eq i32 %12, -2, !dbg !8975
  br i1 %cmp7, label %if.then, label %if.else, !dbg !8976

if.then:                                          ; preds = %lor.lhs.false, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !8977
  br label %return, !dbg !8977

if.else:                                          ; preds = %lor.lhs.false
  %13 = load i32, i32* %nb, align 4, !dbg !8978
  %cmp9 = icmp slt i32 %13, 0, !dbg !8980
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !8981

if.then11:                                        ; preds = %if.else
  %14 = load i32, i32* %nb, align 4, !dbg !8982
  store i32 %14, i32* %retval, align 4, !dbg !8983
  br label %return, !dbg !8983

if.end:                                           ; preds = %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end
  %15 = load %struct.device*, %struct.device** %dev, align 8, !dbg !8984
  %16 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8985
  %num_chipselect13 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 3, !dbg !8986
  %17 = load i16, i16* %num_chipselect13, align 2, !dbg !8986
  %conv14 = zext i16 %17 to i64, !dbg !8985
  %call15 = call i8* @devm_kcalloc(%struct.device* %15, i64 %conv14, i64 8, i32 3264) #11, !dbg !8987
  %18 = bitcast i8* %call15 to %struct.gpio_desc**, !dbg !8987
  store %struct.gpio_desc** %18, %struct.gpio_desc*** %cs, align 8, !dbg !8988
  %19 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs, align 8, !dbg !8989
  %tobool = icmp ne %struct.gpio_desc** %19, null, !dbg !8989
  br i1 %tobool, label %if.end17, label %if.then16, !dbg !8991

if.then16:                                        ; preds = %if.end12
  store i32 -12, i32* %retval, align 4, !dbg !8992
  br label %return, !dbg !8992

if.end17:                                         ; preds = %if.end12
  %20 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs, align 8, !dbg !8993
  %21 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !8994
  %cs_gpiods = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %21, i32 0, i32 55, !dbg !8995
  store %struct.gpio_desc** %20, %struct.gpio_desc*** %cs_gpiods, align 8, !dbg !8996
  store i32 0, i32* %i, align 4, !dbg !8997
  br label %for.cond, !dbg !8999

for.cond:                                         ; preds = %for.inc, %if.end17
  %22 = load i32, i32* %i, align 4, !dbg !9000
  %23 = load i32, i32* %nb, align 4, !dbg !9002
  %cmp18 = icmp slt i32 %22, %23, !dbg !9003
  br i1 %cmp18, label %for.body, label %for.end, !dbg !9004

for.body:                                         ; preds = %for.cond
  %24 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9005
  %25 = load i32, i32* %i, align 4, !dbg !9007
  %call20 = call %struct.gpio_desc* @devm_gpiod_get_index_optional(%struct.device* %24, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.71, i64 0, i64 0), i32 %25, i32 3) #11, !dbg !9008
  %26 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs, align 8, !dbg !9009
  %27 = load i32, i32* %i, align 4, !dbg !9010
  %idxprom = sext i32 %27 to i64, !dbg !9009
  %arrayidx = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %26, i64 %idxprom, !dbg !9009
  store %struct.gpio_desc* %call20, %struct.gpio_desc** %arrayidx, align 8, !dbg !9011
  %28 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs, align 8, !dbg !9012
  %29 = load i32, i32* %i, align 4, !dbg !9014
  %idxprom21 = sext i32 %29 to i64, !dbg !9012
  %arrayidx22 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %28, i64 %idxprom21, !dbg !9012
  %30 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx22, align 8, !dbg !9012
  %31 = bitcast %struct.gpio_desc* %30 to i8*, !dbg !9012
  %call23 = call zeroext i1 @IS_ERR(i8* %31) #11, !dbg !9015
  br i1 %call23, label %if.then24, label %if.end29, !dbg !9016

if.then24:                                        ; preds = %for.body
  %32 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs, align 8, !dbg !9017
  %33 = load i32, i32* %i, align 4, !dbg !9018
  %idxprom25 = sext i32 %33 to i64, !dbg !9017
  %arrayidx26 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %32, i64 %idxprom25, !dbg !9017
  %34 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx26, align 8, !dbg !9017
  %35 = bitcast %struct.gpio_desc* %34 to i8*, !dbg !9017
  %call27 = call i64 @PTR_ERR(i8* %35) #11, !dbg !9019
  %conv28 = trunc i64 %call27 to i32, !dbg !9019
  store i32 %conv28, i32* %retval, align 4, !dbg !9020
  br label %return, !dbg !9020

if.end29:                                         ; preds = %for.body
  %36 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs, align 8, !dbg !9021
  %37 = load i32, i32* %i, align 4, !dbg !9023
  %idxprom30 = sext i32 %37 to i64, !dbg !9021
  %arrayidx31 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %36, i64 %idxprom30, !dbg !9021
  %38 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx31, align 8, !dbg !9021
  %tobool32 = icmp ne %struct.gpio_desc* %38, null, !dbg !9021
  br i1 %tobool32, label %if.then33, label %if.end42, !dbg !9024

if.then33:                                        ; preds = %if.end29
  call void @llvm.dbg.declare(metadata i8** %gpioname, metadata !9025, metadata !DIExpression()), !dbg !9027
  %39 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9028
  %40 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9029
  %call34 = call i8* @dev_name(%struct.device* %40) #11, !dbg !9030
  %41 = load i32, i32* %i, align 4, !dbg !9031
  %call35 = call noalias i8* (%struct.device*, i32, i8*, ...) @devm_kasprintf(%struct.device* %39, i32 3264, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.72, i64 0, i64 0), i8* %call34, i32 %41) #11, !dbg !9032
  store i8* %call35, i8** %gpioname, align 8, !dbg !9033
  %42 = load i8*, i8** %gpioname, align 8, !dbg !9034
  %tobool36 = icmp ne i8* %42, null, !dbg !9034
  br i1 %tobool36, label %if.end38, label %if.then37, !dbg !9036

if.then37:                                        ; preds = %if.then33
  store i32 -12, i32* %retval, align 4, !dbg !9037
  br label %return, !dbg !9037

if.end38:                                         ; preds = %if.then33
  %43 = load %struct.gpio_desc**, %struct.gpio_desc*** %cs, align 8, !dbg !9038
  %44 = load i32, i32* %i, align 4, !dbg !9039
  %idxprom39 = sext i32 %44 to i64, !dbg !9038
  %arrayidx40 = getelementptr %struct.gpio_desc*, %struct.gpio_desc** %43, i64 %idxprom39, !dbg !9038
  %45 = load %struct.gpio_desc*, %struct.gpio_desc** %arrayidx40, align 8, !dbg !9038
  %46 = load i8*, i8** %gpioname, align 8, !dbg !9040
  %call41 = call i32 @gpiod_set_consumer_name(%struct.gpio_desc* %45, i8* %46) #11, !dbg !9041
  %47 = load i32, i32* %num_cs_gpios, align 4, !dbg !9042
  %inc = add i32 %47, 1, !dbg !9042
  store i32 %inc, i32* %num_cs_gpios, align 4, !dbg !9042
  br label %for.inc, !dbg !9043

if.end42:                                         ; preds = %if.end29
  %48 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9044
  %max_native_cs = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %48, i32 0, i32 58, !dbg !9046
  %49 = load i8, i8* %max_native_cs, align 2, !dbg !9046
  %conv43 = zext i8 %49 to i32, !dbg !9044
  %tobool44 = icmp ne i32 %conv43, 0, !dbg !9044
  br i1 %tobool44, label %land.lhs.true, label %if.end50, !dbg !9047

land.lhs.true:                                    ; preds = %if.end42
  %50 = load i32, i32* %i, align 4, !dbg !9048
  %51 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9049
  %max_native_cs45 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %51, i32 0, i32 58, !dbg !9050
  %52 = load i8, i8* %max_native_cs45, align 2, !dbg !9050
  %conv46 = zext i8 %52 to i32, !dbg !9049
  %cmp47 = icmp sge i32 %50, %conv46, !dbg !9051
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !9052

if.then49:                                        ; preds = %land.lhs.true
  %53 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9053
  %54 = load i32, i32* %i, align 4, !dbg !9053
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %53, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.73, i64 0, i64 0), i32 %54) #14, !dbg !9053
  store i32 -22, i32* %retval, align 4, !dbg !9055
  br label %return, !dbg !9055

if.end50:                                         ; preds = %land.lhs.true, %if.end42
  %55 = load i32, i32* %i, align 4, !dbg !9056
  %sh_prom = zext i32 %55 to i64, !dbg !9056
  %shl = shl i64 1, %sh_prom, !dbg !9056
  %56 = load i64, i64* %native_cs_mask, align 8, !dbg !9057
  %or = or i64 %56, %shl, !dbg !9057
  store i64 %or, i64* %native_cs_mask, align 8, !dbg !9057
  br label %for.inc, !dbg !9058

for.inc:                                          ; preds = %if.end50, %if.end38
  %57 = load i32, i32* %i, align 4, !dbg !9059
  %inc51 = add i32 %57, 1, !dbg !9059
  store i32 %inc51, i32* %i, align 4, !dbg !9059
  br label %for.cond, !dbg !9060, !llvm.loop !9061

for.end:                                          ; preds = %for.cond
  %58 = load i64, i64* %native_cs_mask, align 8, !dbg !9063
  store i64 %58, i64* %word.addr.i, align 8
  %59 = load i64, i64* %word.addr.i, align 8, !dbg !9064
  %neg.i = xor i64 %59, -1, !dbg !9065
  %60 = call i64 asm "rep; bsf $1,$0", "=r,r,~{dirflag},~{fpsr},~{flags}"(i64 %neg.i) #15, !dbg !9066, !srcloc !9067
  store i64 %60, i64* %word.addr.i, align 8, !dbg !9066
  %61 = load i64, i64* %word.addr.i, align 8, !dbg !9068
  %conv53 = trunc i64 %61 to i8, !dbg !9069
  %62 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9070
  %unused_native_cs = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %62, i32 0, i32 57, !dbg !9071
  store i8 %conv53, i8* %unused_native_cs, align 1, !dbg !9072
  %63 = load i32, i32* %num_cs_gpios, align 4, !dbg !9073
  %tobool54 = icmp ne i32 %63, 0, !dbg !9073
  br i1 %tobool54, label %land.lhs.true55, label %if.end67, !dbg !9075

land.lhs.true55:                                  ; preds = %for.end
  %64 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9076
  %max_native_cs56 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %64, i32 0, i32 58, !dbg !9077
  %65 = load i8, i8* %max_native_cs56, align 2, !dbg !9077
  %conv57 = zext i8 %65 to i32, !dbg !9076
  %tobool58 = icmp ne i32 %conv57, 0, !dbg !9076
  br i1 %tobool58, label %land.lhs.true59, label %if.end67, !dbg !9078

land.lhs.true59:                                  ; preds = %land.lhs.true55
  %66 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9079
  %unused_native_cs60 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %66, i32 0, i32 57, !dbg !9080
  %67 = load i8, i8* %unused_native_cs60, align 1, !dbg !9080
  %conv61 = zext i8 %67 to i32, !dbg !9079
  %68 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9081
  %max_native_cs62 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %68, i32 0, i32 58, !dbg !9082
  %69 = load i8, i8* %max_native_cs62, align 2, !dbg !9082
  %conv63 = zext i8 %69 to i32, !dbg !9081
  %cmp64 = icmp sge i32 %conv61, %conv63, !dbg !9083
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !9084

if.then66:                                        ; preds = %land.lhs.true59
  %70 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9085
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %70, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.74, i64 0, i64 0)) #14, !dbg !9085
  store i32 -22, i32* %retval, align 4, !dbg !9087
  br label %return, !dbg !9087

if.end67:                                         ; preds = %land.lhs.true59, %land.lhs.true55, %for.end
  store i32 0, i32* %retval, align 4, !dbg !9088
  br label %return, !dbg !9088

return:                                           ; preds = %if.end67, %if.then66, %if.then49, %if.then37, %if.then24, %if.then16, %if.then11, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !9089
  ret i32 %71, !dbg !9089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_spi_get_gpio_numbers(%struct.spi_controller* %ctlr) #0 !dbg !9090 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %nb = alloca i32, align 4
  %i = alloca i32, align 4
  %cs = alloca i32*, align 8
  %np = alloca %struct.device_node*, align 8
  %__UNIQUE_ID___x339 = alloca i32, align 4
  %__UNIQUE_ID___y340 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9091, metadata !DIExpression()), !dbg !9092
  call void @llvm.dbg.declare(metadata i32* %nb, metadata !9093, metadata !DIExpression()), !dbg !9094
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9095, metadata !DIExpression()), !dbg !9096
  call void @llvm.dbg.declare(metadata i32** %cs, metadata !9097, metadata !DIExpression()), !dbg !9098
  call void @llvm.dbg.declare(metadata %struct.device_node** %np, metadata !9099, metadata !DIExpression()), !dbg !9100
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9101
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 0, !dbg !9102
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !9103
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !9103
  store %struct.device_node* %1, %struct.device_node** %np, align 8, !dbg !9100
  %2 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !9104
  %tobool = icmp ne %struct.device_node* %2, null, !dbg !9104
  br i1 %tobool, label %if.end, label %if.then, !dbg !9106

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9107
  br label %return, !dbg !9107

if.end:                                           ; preds = %entry
  %3 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !9108
  %call = call i32 @of_gpio_named_count(%struct.device_node* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0)) #11, !dbg !9109
  store i32 %call, i32* %nb, align 4, !dbg !9110
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x339, metadata !9111, metadata !DIExpression()), !dbg !9113
  %4 = load i32, i32* %nb, align 4, !dbg !9113
  store i32 %4, i32* %__UNIQUE_ID___x339, align 4, !dbg !9113
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y340, metadata !9114, metadata !DIExpression()), !dbg !9113
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9113
  %num_chipselect = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 3, !dbg !9113
  %6 = load i16, i16* %num_chipselect, align 2, !dbg !9113
  %conv = zext i16 %6 to i32, !dbg !9113
  store i32 %conv, i32* %__UNIQUE_ID___y340, align 4, !dbg !9113
  %7 = load i32, i32* %__UNIQUE_ID___x339, align 4, !dbg !9113
  %8 = load i32, i32* %__UNIQUE_ID___y340, align 4, !dbg !9113
  %cmp = icmp sgt i32 %7, %8, !dbg !9113
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9113

cond.true:                                        ; preds = %if.end
  %9 = load i32, i32* %__UNIQUE_ID___x339, align 4, !dbg !9113
  br label %cond.end, !dbg !9113

cond.false:                                       ; preds = %if.end
  %10 = load i32, i32* %__UNIQUE_ID___y340, align 4, !dbg !9113
  br label %cond.end, !dbg !9113

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %9, %cond.true ], [ %10, %cond.false ], !dbg !9113
  store i32 %cond, i32* %tmp, align 4, !dbg !9113
  %11 = load i32, i32* %tmp, align 4, !dbg !9113
  %conv2 = trunc i32 %11 to i16, !dbg !9115
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9116
  %num_chipselect3 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 3, !dbg !9117
  store i16 %conv2, i16* %num_chipselect3, align 2, !dbg !9118
  %13 = load i32, i32* %nb, align 4, !dbg !9119
  %cmp4 = icmp eq i32 %13, 0, !dbg !9121
  br i1 %cmp4, label %if.then8, label %lor.lhs.false, !dbg !9122

lor.lhs.false:                                    ; preds = %cond.end
  %14 = load i32, i32* %nb, align 4, !dbg !9123
  %cmp6 = icmp eq i32 %14, -2, !dbg !9124
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !9125

if.then8:                                         ; preds = %lor.lhs.false, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !9126
  br label %return, !dbg !9126

if.else:                                          ; preds = %lor.lhs.false
  %15 = load i32, i32* %nb, align 4, !dbg !9127
  %cmp9 = icmp slt i32 %15, 0, !dbg !9129
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !9130

if.then11:                                        ; preds = %if.else
  %16 = load i32, i32* %nb, align 4, !dbg !9131
  store i32 %16, i32* %retval, align 4, !dbg !9132
  br label %return, !dbg !9132

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12
  %17 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9133
  %dev14 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %17, i32 0, i32 0, !dbg !9134
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9135
  %num_chipselect15 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 3, !dbg !9136
  %19 = load i16, i16* %num_chipselect15, align 2, !dbg !9136
  %conv16 = zext i16 %19 to i64, !dbg !9135
  %call17 = call i8* @devm_kcalloc(%struct.device* %dev14, i64 %conv16, i64 4, i32 3264) #11, !dbg !9137
  %20 = bitcast i8* %call17 to i32*, !dbg !9137
  store i32* %20, i32** %cs, align 8, !dbg !9138
  %21 = load i32*, i32** %cs, align 8, !dbg !9139
  %22 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9140
  %cs_gpios = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %22, i32 0, i32 54, !dbg !9141
  store i32* %21, i32** %cs_gpios, align 8, !dbg !9142
  %23 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9143
  %cs_gpios18 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %23, i32 0, i32 54, !dbg !9145
  %24 = load i32*, i32** %cs_gpios18, align 8, !dbg !9145
  %tobool19 = icmp ne i32* %24, null, !dbg !9143
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !9146

if.then20:                                        ; preds = %if.end13
  store i32 -12, i32* %retval, align 4, !dbg !9147
  br label %return, !dbg !9147

if.end21:                                         ; preds = %if.end13
  store i32 0, i32* %i, align 4, !dbg !9148
  br label %for.cond, !dbg !9150

for.cond:                                         ; preds = %for.inc, %if.end21
  %25 = load i32, i32* %i, align 4, !dbg !9151
  %26 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9153
  %num_chipselect22 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %26, i32 0, i32 3, !dbg !9154
  %27 = load i16, i16* %num_chipselect22, align 2, !dbg !9154
  %conv23 = zext i16 %27 to i32, !dbg !9153
  %cmp24 = icmp slt i32 %25, %conv23, !dbg !9155
  br i1 %cmp24, label %for.body, label %for.end, !dbg !9156

for.body:                                         ; preds = %for.cond
  %28 = load i32*, i32** %cs, align 8, !dbg !9157
  %29 = load i32, i32* %i, align 4, !dbg !9158
  %idxprom = sext i32 %29 to i64, !dbg !9157
  %arrayidx = getelementptr i32, i32* %28, i64 %idxprom, !dbg !9157
  store i32 -2, i32* %arrayidx, align 4, !dbg !9159
  br label %for.inc, !dbg !9157

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !9160
  %inc = add i32 %30, 1, !dbg !9160
  store i32 %inc, i32* %i, align 4, !dbg !9160
  br label %for.cond, !dbg !9161, !llvm.loop !9162

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9164
  br label %for.cond26, !dbg !9166

for.cond26:                                       ; preds = %for.inc33, %for.end
  %31 = load i32, i32* %i, align 4, !dbg !9167
  %32 = load i32, i32* %nb, align 4, !dbg !9169
  %cmp27 = icmp slt i32 %31, %32, !dbg !9170
  br i1 %cmp27, label %for.body29, label %for.end35, !dbg !9171

for.body29:                                       ; preds = %for.cond26
  %33 = load %struct.device_node*, %struct.device_node** %np, align 8, !dbg !9172
  %34 = load i32, i32* %i, align 4, !dbg !9173
  %call30 = call i32 @of_get_named_gpio(%struct.device_node* %33, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.75, i64 0, i64 0), i32 %34) #11, !dbg !9174
  %35 = load i32*, i32** %cs, align 8, !dbg !9175
  %36 = load i32, i32* %i, align 4, !dbg !9176
  %idxprom31 = sext i32 %36 to i64, !dbg !9175
  %arrayidx32 = getelementptr i32, i32* %35, i64 %idxprom31, !dbg !9175
  store i32 %call30, i32* %arrayidx32, align 4, !dbg !9177
  br label %for.inc33, !dbg !9175

for.inc33:                                        ; preds = %for.body29
  %37 = load i32, i32* %i, align 4, !dbg !9178
  %inc34 = add i32 %37, 1, !dbg !9178
  store i32 %inc34, i32* %i, align 4, !dbg !9178
  br label %for.cond26, !dbg !9179, !llvm.loop !9180

for.end35:                                        ; preds = %for.cond26
  store i32 0, i32* %retval, align 4, !dbg !9182
  br label %return, !dbg !9182

return:                                           ; preds = %for.end35, %if.then20, %if.then11, %if.then8, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !9183
  ret i32 %38, !dbg !9183
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_info(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_controller_initialize_queue(%struct.spi_controller* %ctlr) #0 !dbg !9184 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9185, metadata !DIExpression()), !dbg !9186
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9187, metadata !DIExpression()), !dbg !9188
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9189
  %transfer = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 20, !dbg !9190
  store i32 (%struct.spi_device*, %struct.spi_message*)* @spi_queued_transfer, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer, align 8, !dbg !9191
  %1 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9192
  %transfer_one_message = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 42, !dbg !9194
  %2 = load i32 (%struct.spi_controller*, %struct.spi_message*)*, i32 (%struct.spi_controller*, %struct.spi_message*)** %transfer_one_message, align 8, !dbg !9194
  %tobool = icmp ne i32 (%struct.spi_controller*, %struct.spi_message*)* %2, null, !dbg !9192
  br i1 %tobool, label %if.end, label %if.then, !dbg !9195

if.then:                                          ; preds = %entry
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9196
  %transfer_one_message1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %3, i32 0, i32 42, !dbg !9197
  store i32 (%struct.spi_controller*, %struct.spi_message*)* @spi_transfer_one_message, i32 (%struct.spi_controller*, %struct.spi_message*)** %transfer_one_message1, align 8, !dbg !9198
  br label %if.end, !dbg !9196

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9199
  %call = call i32 @spi_init_queue(%struct.spi_controller* %4) #11, !dbg !9200
  store i32 %call, i32* %ret, align 4, !dbg !9201
  %5 = load i32, i32* %ret, align 4, !dbg !9202
  %tobool2 = icmp ne i32 %5, 0, !dbg !9202
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !9204

if.then3:                                         ; preds = %if.end
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9205
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 0, !dbg !9205
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.77, i64 0, i64 0)) #14, !dbg !9205
  br label %err_init_queue, !dbg !9207

if.end4:                                          ; preds = %if.end
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9208
  %queued = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 23, !dbg !9209
  store i8 1, i8* %queued, align 8, !dbg !9210
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9211
  %call5 = call i32 @spi_start_queue(%struct.spi_controller* %8) #11, !dbg !9212
  store i32 %call5, i32* %ret, align 4, !dbg !9213
  %9 = load i32, i32* %ret, align 4, !dbg !9214
  %tobool6 = icmp ne i32 %9, 0, !dbg !9214
  br i1 %tobool6, label %if.then7, label %if.end9, !dbg !9216

if.then7:                                         ; preds = %if.end4
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9217
  %dev8 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 0, !dbg !9217
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.78, i64 0, i64 0)) #14, !dbg !9217
  br label %err_start_queue, !dbg !9219

if.end9:                                          ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !9220
  br label %return, !dbg !9220

err_start_queue:                                  ; preds = %if.then7
  call void @llvm.dbg.label(metadata !9221), !dbg !9222
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9223
  %call10 = call i32 @spi_destroy_queue(%struct.spi_controller* %11) #11, !dbg !9224
  br label %err_init_queue, !dbg !9224

err_init_queue:                                   ; preds = %err_start_queue, %if.then3
  call void @llvm.dbg.label(metadata !9225), !dbg !9226
  %12 = load i32, i32* %ret, align 4, !dbg !9227
  store i32 %12, i32* %retval, align 4, !dbg !9228
  br label %return, !dbg !9228

return:                                           ; preds = %err_init_queue, %if.end9
  %13 = load i32, i32* %retval, align 4, !dbg !9229
  ret i32 %13, !dbg !9229
}

; Function Attrs: noredzone
declare dso_local void @device_del(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @of_register_spi_devices(%struct.spi_controller* %ctlr) #0 !dbg !9230 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %nc = alloca %struct.device_node*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9231, metadata !DIExpression()), !dbg !9232
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !9233, metadata !DIExpression()), !dbg !9234
  call void @llvm.dbg.declare(metadata %struct.device_node** %nc, metadata !9235, metadata !DIExpression()), !dbg !9236
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9237
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 0, !dbg !9239
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 23, !dbg !9240
  %1 = load %struct.device_node*, %struct.device_node** %of_node, align 8, !dbg !9240
  %tobool = icmp ne %struct.device_node* %1, null, !dbg !9237
  br i1 %tobool, label %if.end, label %if.then, !dbg !9241

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9242

if.end:                                           ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9243
  %dev1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 0, !dbg !9243
  %of_node2 = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 23, !dbg !9243
  %3 = load %struct.device_node*, %struct.device_node** %of_node2, align 8, !dbg !9243
  %call = call %struct.device_node* @of_get_next_available_child(%struct.device_node* %3, %struct.device_node* null) #11, !dbg !9243
  store %struct.device_node* %call, %struct.device_node** %nc, align 8, !dbg !9243
  br label %for.cond, !dbg !9243

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.device_node*, %struct.device_node** %nc, align 8, !dbg !9245
  %cmp = icmp ne %struct.device_node* %4, null, !dbg !9245
  br i1 %cmp, label %for.body, label %for.end, !dbg !9243

for.body:                                         ; preds = %for.cond
  %5 = load %struct.device_node*, %struct.device_node** %nc, align 8, !dbg !9247
  %call3 = call i32 @of_node_test_and_set_flag(%struct.device_node* %5, i64 3) #11, !dbg !9250
  %tobool4 = icmp ne i32 %call3, 0, !dbg !9250
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9251

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !9252

if.end6:                                          ; preds = %for.body
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9253
  %7 = load %struct.device_node*, %struct.device_node** %nc, align 8, !dbg !9254
  %call7 = call %struct.spi_device* @of_register_spi_device(%struct.spi_controller* %6, %struct.device_node* %7) #11, !dbg !9255
  store %struct.spi_device* %call7, %struct.spi_device** %spi, align 8, !dbg !9256
  %8 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !9257
  %9 = bitcast %struct.spi_device* %8 to i8*, !dbg !9257
  %call8 = call zeroext i1 @IS_ERR(i8* %9) #11, !dbg !9259
  br i1 %call8, label %if.then9, label %if.end11, !dbg !9260

if.then9:                                         ; preds = %if.end6
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9261
  %dev10 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 0, !dbg !9261
  %11 = load %struct.device_node*, %struct.device_node** %nc, align 8, !dbg !9261
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev10, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.84, i64 0, i64 0), %struct.device_node* %11) #14, !dbg !9261
  %12 = load %struct.device_node*, %struct.device_node** %nc, align 8, !dbg !9263
  call void @of_node_clear_flag(%struct.device_node* %12, i64 3) #11, !dbg !9264
  br label %if.end11, !dbg !9265

if.end11:                                         ; preds = %if.then9, %if.end6
  br label %for.inc, !dbg !9266

for.inc:                                          ; preds = %if.end11, %if.then5
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9245
  %dev12 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %13, i32 0, i32 0, !dbg !9245
  %of_node13 = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 23, !dbg !9245
  %14 = load %struct.device_node*, %struct.device_node** %of_node13, align 8, !dbg !9245
  %15 = load %struct.device_node*, %struct.device_node** %nc, align 8, !dbg !9245
  %call14 = call %struct.device_node* @of_get_next_available_child(%struct.device_node* %14, %struct.device_node* %15) #11, !dbg !9245
  store %struct.device_node* %call14, %struct.device_node** %nc, align 8, !dbg !9245
  br label %for.cond, !dbg !9245, !llvm.loop !9267

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9269
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_register_spi_devices(%struct.spi_controller* %ctlr) #0 !dbg !9270 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %status = alloca i32, align 4
  %handle = alloca i8*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.acpi_device*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9271, metadata !DIExpression()), !dbg !9272
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9273, metadata !DIExpression()), !dbg !9274
  call void @llvm.dbg.declare(metadata i8** %handle, metadata !9275, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !9277, metadata !DIExpression()), !dbg !9279
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9279
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 0, !dbg !9279
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !9279
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9279
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 24, !dbg !9279
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !9279
  store %struct.fwnode_handle* %2, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !9279
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !9279
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %3) #11, !dbg !9279
  br i1 %call, label %cond.true, label %cond.false, !dbg !9279

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9280, metadata !DIExpression()), !dbg !9282
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !9282
  %5 = bitcast %struct.fwnode_handle* %4 to i8*, !dbg !9282
  store i8* %5, i8** %__mptr, align 8, !dbg !9282
  br label %do.body, !dbg !9282

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !9283

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !9282
  %add.ptr = getelementptr i8, i8* %6, i64 -16, !dbg !9282
  %7 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !9282
  store %struct.acpi_device* %7, %struct.acpi_device** %tmp1, align 8, !dbg !9283
  %8 = load %struct.acpi_device*, %struct.acpi_device** %tmp1, align 8, !dbg !9282
  br label %cond.end, !dbg !9279

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9279

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %8, %do.end ], [ null, %cond.false ], !dbg !9279
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !9279
  %9 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !9279
  %call2 = call i8* @acpi_device_handle(%struct.acpi_device* %9) #11, !dbg !9285
  store i8* %call2, i8** %handle, align 8, !dbg !9286
  %10 = load i8*, i8** %handle, align 8, !dbg !9287
  %tobool = icmp ne i8* %10, null, !dbg !9287
  br i1 %tobool, label %if.end, label %if.then, !dbg !9289

if.then:                                          ; preds = %cond.end
  br label %if.end7, !dbg !9290

if.end:                                           ; preds = %cond.end
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9291
  %12 = bitcast %struct.spi_controller* %11 to i8*, !dbg !9291
  %call3 = call i32 @acpi_walk_namespace(i32 6, i8* inttoptr (i64 -1 to i8*), i32 32, i32 (i8*, i32, i8*, i8**)* @acpi_spi_add_device, i32 (i8*, i32, i8*, i8**)* null, i8* %12, i8** null) #11, !dbg !9292
  store i32 %call3, i32* %status, align 4, !dbg !9293
  %13 = load i32, i32* %status, align 4, !dbg !9294
  %tobool4 = icmp ne i32 %13, 0, !dbg !9294
  br i1 %tobool4, label %if.then5, label %if.end7, !dbg !9296

if.then5:                                         ; preds = %if.end
  %14 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9297
  %dev6 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %14, i32 0, i32 0, !dbg !9297
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev6, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.102, i64 0, i64 0)) #14, !dbg !9297
  br label %if.end7, !dbg !9297

if.end7:                                          ; preds = %if.then, %if.then5, %if.end
  ret void, !dbg !9298
}

; Function Attrs: noredzone
declare dso_local i8* @idr_remove(%struct.idr*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @devm_spi_register_controller(%struct.device* %dev, %struct.spi_controller* %ctlr) #0 !dbg !9299 {
entry:
  %retval = alloca i32, align 4
  %dev.addr = alloca %struct.device*, align 8
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %ptr = alloca %struct.spi_controller**, align 8
  %ret = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9302, metadata !DIExpression()), !dbg !9303
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9304, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.declare(metadata %struct.spi_controller*** %ptr, metadata !9306, metadata !DIExpression()), !dbg !9307
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9308, metadata !DIExpression()), !dbg !9309
  %call = call i8* @devres_alloc(void (%struct.device*, i8*)* @devm_spi_unregister, i64 8, i32 3264) #11, !dbg !9310
  %0 = bitcast i8* %call to %struct.spi_controller**, !dbg !9310
  store %struct.spi_controller** %0, %struct.spi_controller*** %ptr, align 8, !dbg !9311
  %1 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !9312
  %tobool = icmp ne %struct.spi_controller** %1, null, !dbg !9312
  br i1 %tobool, label %if.end, label %if.then, !dbg !9314

if.then:                                          ; preds = %entry
  store i32 -12, i32* %retval, align 4, !dbg !9315
  br label %return, !dbg !9315

if.end:                                           ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9316
  %call1 = call i32 @spi_register_controller(%struct.spi_controller* %2) #11, !dbg !9317
  store i32 %call1, i32* %ret, align 4, !dbg !9318
  %3 = load i32, i32* %ret, align 4, !dbg !9319
  %tobool2 = icmp ne i32 %3, 0, !dbg !9319
  br i1 %tobool2, label %if.else, label %if.then3, !dbg !9321

if.then3:                                         ; preds = %if.end
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9322
  %5 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !9324
  store %struct.spi_controller* %4, %struct.spi_controller** %5, align 8, !dbg !9325
  %6 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9326
  %7 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !9327
  %8 = bitcast %struct.spi_controller** %7 to i8*, !dbg !9327
  call void @devres_add(%struct.device* %6, i8* %8) #11, !dbg !9328
  br label %if.end4, !dbg !9329

if.else:                                          ; preds = %if.end
  %9 = load %struct.spi_controller**, %struct.spi_controller*** %ptr, align 8, !dbg !9330
  %10 = bitcast %struct.spi_controller** %9 to i8*, !dbg !9330
  call void @devres_free(i8* %10) #11, !dbg !9332
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then3
  %11 = load i32, i32* %ret, align 4, !dbg !9333
  store i32 %11, i32* %retval, align 4, !dbg !9334
  br label %return, !dbg !9334

return:                                           ; preds = %if.end4, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !9335
  ret i32 %12, !dbg !9335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @devm_spi_unregister(%struct.device* %dev, i8* %res) #0 !dbg !9336 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9337, metadata !DIExpression()), !dbg !9338
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !9339, metadata !DIExpression()), !dbg !9340
  %0 = load i8*, i8** %res.addr, align 8, !dbg !9341
  %1 = bitcast i8* %0 to %struct.spi_controller**, !dbg !9342
  %2 = load %struct.spi_controller*, %struct.spi_controller** %1, align 8, !dbg !9343
  call void @spi_unregister_controller(%struct.spi_controller* %2) #11, !dbg !9344
  ret void, !dbg !9345
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_unregister_controller(%struct.spi_controller* %ctlr) #0 !dbg !9346 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %found = alloca %struct.spi_controller*, align 8
  %id = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9347, metadata !DIExpression()), !dbg !9348
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %found, metadata !9349, metadata !DIExpression()), !dbg !9350
  call void @llvm.dbg.declare(metadata i32* %id, metadata !9351, metadata !DIExpression()), !dbg !9352
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9353
  %bus_num = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 2, !dbg !9354
  %1 = load i16, i16* %bus_num, align 8, !dbg !9354
  %conv = sext i16 %1 to i32, !dbg !9353
  store i32 %conv, i32* %id, align 4, !dbg !9352
  call void @mutex_lock(%struct.mutex* @spi_add_lock) #11, !dbg !9355
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9357
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 0, !dbg !9358
  %call = call i32 @device_for_each_child(%struct.device* %dev, i8* null, i32 (%struct.device*, i8*)* @__unregister) #11, !dbg !9359
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !9360
  %3 = load i32, i32* %id, align 4, !dbg !9361
  %conv1 = sext i32 %3 to i64, !dbg !9361
  %call2 = call i8* @idr_find(%struct.idr* @spi_master_idr, i64 %conv1) #11, !dbg !9362
  %4 = bitcast i8* %call2 to %struct.spi_controller*, !dbg !9362
  store %struct.spi_controller* %4, %struct.spi_controller** %found, align 8, !dbg !9363
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !9364
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9365
  %queued = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 23, !dbg !9367
  %6 = load i8, i8* %queued, align 8, !dbg !9367
  %tobool = trunc i8 %6 to i1, !dbg !9367
  br i1 %tobool, label %if.then, label %if.end7, !dbg !9368

if.then:                                          ; preds = %entry
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9369
  %call3 = call i32 @spi_destroy_queue(%struct.spi_controller* %7) #11, !dbg !9372
  %tobool4 = icmp ne i32 %call3, 0, !dbg !9372
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9373

if.then5:                                         ; preds = %if.then
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9374
  %dev6 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %8, i32 0, i32 0, !dbg !9374
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev6, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.14, i64 0, i64 0)) #14, !dbg !9374
  br label %if.end, !dbg !9374

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end7, !dbg !9375

if.end7:                                          ; preds = %if.end, %entry
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !9376
  %9 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9377
  %list = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %9, i32 0, i32 1, !dbg !9378
  call void @list_del(%struct.list_head* %list) #11, !dbg !9379
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !9380
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9381
  %dev8 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 0, !dbg !9382
  call void @device_del(%struct.device* %dev8) #11, !dbg !9383
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9384
  %dev9 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %11, i32 0, i32 0, !dbg !9386
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev9, i32 0, i32 1, !dbg !9387
  %12 = load %struct.device*, %struct.device** %parent, align 8, !dbg !9387
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9388
  %14 = bitcast %struct.spi_controller* %13 to i8*, !dbg !9388
  %call10 = call i8* @devres_find(%struct.device* %12, void (%struct.device*, i8*)* @devm_spi_release_controller, i32 (%struct.device*, i8*, i8*)* @devm_spi_match_controller, i8* %14) #11, !dbg !9389
  %tobool11 = icmp ne i8* %call10, null, !dbg !9389
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !9390

if.then12:                                        ; preds = %if.end7
  %15 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9391
  %dev13 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %15, i32 0, i32 0, !dbg !9392
  call void @put_device(%struct.device* %dev13) #11, !dbg !9393
  br label %if.end14, !dbg !9393

if.end14:                                         ; preds = %if.then12, %if.end7
  call void @mutex_lock(%struct.mutex* @board_lock) #11, !dbg !9394
  %16 = load %struct.spi_controller*, %struct.spi_controller** %found, align 8, !dbg !9395
  %17 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9397
  %cmp = icmp eq %struct.spi_controller* %16, %17, !dbg !9398
  br i1 %cmp, label %if.then16, label %if.end19, !dbg !9399

if.then16:                                        ; preds = %if.end14
  %18 = load i32, i32* %id, align 4, !dbg !9400
  %conv17 = sext i32 %18 to i64, !dbg !9400
  %call18 = call i8* @idr_remove(%struct.idr* @spi_master_idr, i64 %conv17) #11, !dbg !9401
  br label %if.end19, !dbg !9401

if.end19:                                         ; preds = %if.then16, %if.end14
  call void @mutex_unlock(%struct.mutex* @board_lock) #11, !dbg !9402
  call void @mutex_unlock(%struct.mutex* @spi_add_lock) #11, !dbg !9403
  ret void, !dbg !9405
}

; Function Attrs: noredzone
declare dso_local i32 @device_for_each_child(%struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__unregister(%struct.device* %dev, i8* %null) #0 !dbg !9406 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %null.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9407, metadata !DIExpression()), !dbg !9408
  store i8* %null, i8** %null.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %null.addr, metadata !9409, metadata !DIExpression()), !dbg !9410
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9411
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !9412
  call void @spi_unregister_device(%struct.spi_device* %call) #11, !dbg !9413
  ret i32 0, !dbg !9414
}

; Function Attrs: noredzone
declare dso_local i8* @idr_find(%struct.idr*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_destroy_queue(%struct.spi_controller* %ctlr) #0 !dbg !9415 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9416, metadata !DIExpression()), !dbg !9417
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9418, metadata !DIExpression()), !dbg !9419
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9420
  %call = call i32 @spi_stop_queue(%struct.spi_controller* %0) #11, !dbg !9421
  store i32 %call, i32* %ret, align 4, !dbg !9422
  %1 = load i32, i32* %ret, align 4, !dbg !9423
  %tobool = icmp ne i32 %1, 0, !dbg !9423
  br i1 %tobool, label %if.then, label %if.end, !dbg !9425

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9426
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 0, !dbg !9426
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.110, i64 0, i64 0)) #14, !dbg !9426
  %3 = load i32, i32* %ret, align 4, !dbg !9428
  store i32 %3, i32* %retval, align 4, !dbg !9429
  br label %return, !dbg !9429

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9430
  %kworker = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 24, !dbg !9431
  %5 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker, align 8, !dbg !9431
  call void @kthread_destroy_worker(%struct.kthread_worker* %5) #11, !dbg !9432
  store i32 0, i32* %retval, align 4, !dbg !9433
  br label %return, !dbg !9433

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9434
  ret i32 %6, !dbg !9434
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del(%struct.list_head* %entry1) #0 !dbg !9435 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !9436, metadata !DIExpression()), !dbg !9437
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9438
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !9439
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9440
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0, !dbg !9441
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !dbg !9442
  %2 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !9443
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !9444
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 290 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !dbg !9445
  ret void, !dbg !9446
}

; Function Attrs: noredzone
declare dso_local i8* @devres_find(%struct.device*, void (%struct.device*, i8*)*, i32 (%struct.device*, i8*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @devm_spi_match_controller(%struct.device* %dev, i8* %res, i8* %ctlr) #0 !dbg !9447 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %res.addr = alloca i8*, align 8
  %ctlr.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9450, metadata !DIExpression()), !dbg !9451
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !9452, metadata !DIExpression()), !dbg !9453
  store i8* %ctlr, i8** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ctlr.addr, metadata !9454, metadata !DIExpression()), !dbg !9455
  %0 = load i8*, i8** %res.addr, align 8, !dbg !9456
  %1 = bitcast i8* %0 to %struct.spi_controller**, !dbg !9457
  %2 = load %struct.spi_controller*, %struct.spi_controller** %1, align 8, !dbg !9458
  %3 = load i8*, i8** %ctlr.addr, align 8, !dbg !9459
  %4 = bitcast i8* %3 to %struct.spi_controller*, !dbg !9459
  %cmp = icmp eq %struct.spi_controller* %2, %4, !dbg !9460
  %conv = zext i1 %cmp to i32, !dbg !9460
  ret i32 %conv, !dbg !9461
}

; Function Attrs: noredzone
declare dso_local void @put_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_controller_suspend(%struct.spi_controller* %ctlr) #0 !dbg !9462 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9463, metadata !DIExpression()), !dbg !9464
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9465, metadata !DIExpression()), !dbg !9466
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9467
  %queued = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 23, !dbg !9469
  %1 = load i8, i8* %queued, align 8, !dbg !9469
  %tobool = trunc i8 %1 to i1, !dbg !9469
  br i1 %tobool, label %if.end, label %if.then, !dbg !9470

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9471
  br label %return, !dbg !9471

if.end:                                           ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9472
  %call = call i32 @spi_stop_queue(%struct.spi_controller* %2) #11, !dbg !9473
  store i32 %call, i32* %ret, align 4, !dbg !9474
  %3 = load i32, i32* %ret, align 4, !dbg !9475
  %tobool1 = icmp ne i32 %3, 0, !dbg !9475
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9477

if.then2:                                         ; preds = %if.end
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9478
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 0, !dbg !9478
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.15, i64 0, i64 0)) #14, !dbg !9478
  br label %if.end3, !dbg !9478

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !9479
  store i32 %5, i32* %retval, align 4, !dbg !9480
  br label %return, !dbg !9480

return:                                           ; preds = %if.end3, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9481
  ret i32 %6, !dbg !9481
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_stop_queue(%struct.spi_controller* %ctlr) #0 !dbg !9482 {
entry:
  %lock.addr.i70 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i70, metadata !5429, metadata !DIExpression()), !dbg !9483
  %lock.addr.i65 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i65, metadata !5420, metadata !DIExpression()), !dbg !9491
  %flags.addr.i66 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i66, metadata !5427, metadata !DIExpression()), !dbg !9493
  %tmp.i67 = alloca i32, align 4
  %tmp8.i68 = alloca i32, align 4
  %lock.addr.i63 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i63, metadata !5420, metadata !DIExpression()), !dbg !9494
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !9496
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !9497
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %flags = alloca i64, align 8
  %limit = alloca i32, align 4
  %ret = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  %__dummy27 = alloca i64, align 8
  %__dummy228 = alloca i64, align 8
  %tmp31 = alloca i32, align 4
  %__dummy35 = alloca i64, align 8
  %__dummy236 = alloca i64, align 8
  %tmp39 = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9504, metadata !DIExpression()), !dbg !9505
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9506, metadata !DIExpression()), !dbg !9507
  call void @llvm.dbg.declare(metadata i32* %limit, metadata !9508, metadata !DIExpression()), !dbg !9509
  store i32 500, i32* %limit, align 4, !dbg !9509
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9510, metadata !DIExpression()), !dbg !9511
  store i32 0, i32* %ret, align 4, !dbg !9511
  br label %do.body, !dbg !9512

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9513

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9514, metadata !DIExpression()), !dbg !9516
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9517, metadata !DIExpression()), !dbg !9516
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9516
  %conv = zext i1 %cmp to i32, !dbg !9516
  store i32 1, i32* %tmp, align 4, !dbg !9516
  %0 = load i32, i32* %tmp, align 4, !dbg !9516
  br label %do.body2, !dbg !9518

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9519

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9520

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9522, metadata !DIExpression()), !dbg !9525
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9526, metadata !DIExpression()), !dbg !9525
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9525
  %conv8 = zext i1 %cmp7 to i32, !dbg !9525
  store i32 1, i32* %tmp9, align 4, !dbg !9525
  %1 = load i32, i32* %tmp9, align 4, !dbg !9525
  %call = call i64 @arch_local_irq_save() #11, !dbg !9527
  store i64 %call, i64* %flags, align 8, !dbg !9527
  br label %do.end, !dbg !9527

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9520

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9519

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9528, !srcloc !9529
  br label %do.body12, !dbg !9528

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9530
  %queue_lock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 26, !dbg !9530
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9531
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9532
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !9532
  br label %do.end14, !dbg !9530

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9528

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9519

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9518

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9513

do.end18:                                         ; preds = %do.end17
  br label %while.cond, !dbg !9533

while.cond:                                       ; preds = %do.end51, %do.end18
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9534
  %queue = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 27, !dbg !9535
  %call19 = call i32 @list_empty(%struct.list_head* %queue) #11, !dbg !9536
  %tobool = icmp ne i32 %call19, 0, !dbg !9536
  br i1 %tobool, label %lor.lhs.false, label %land.rhs, !dbg !9537

lor.lhs.false:                                    ; preds = %while.cond
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9538
  %busy = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 30, !dbg !9539
  %7 = load i8, i8* %busy, align 1, !dbg !9539
  %tobool20 = trunc i8 %7 to i1, !dbg !9539
  br i1 %tobool20, label %land.rhs, label %land.end, !dbg !9540

land.rhs:                                         ; preds = %lor.lhs.false, %while.cond
  %8 = load i32, i32* %limit, align 4, !dbg !9541
  %dec = add i32 %8, -1, !dbg !9541
  store i32 %dec, i32* %limit, align 4, !dbg !9541
  %tobool22 = icmp ne i32 %8, 0, !dbg !9540
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %9 = phi i1 [ false, %lor.lhs.false ], [ %tobool22, %land.rhs ], !dbg !9542
  br i1 %9, label %while.body, label %while.end, !dbg !9533

while.body:                                       ; preds = %land.end
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9543
  %queue_lock23 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 26, !dbg !9544
  %11 = load i64, i64* %flags, align 8, !dbg !9545
  store %struct.spinlock* %queue_lock23, %struct.spinlock** %lock.addr.i65, align 8
  store i64 %11, i64* %flags.addr.i66, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !9546
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !9546
  store i32 1, i32* %tmp.i67, align 4, !dbg !9546
  %12 = load i32, i32* %tmp.i67, align 4, !dbg !9546
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !9547
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !9547
  store i32 1, i32* %tmp8.i68, align 4, !dbg !9547
  %13 = load i32, i32* %tmp8.i68, align 4, !dbg !9547
  %14 = load i64, i64* %flags.addr.i66, align 8, !dbg !9548
  call void @arch_local_irq_restore(i64 %14) #12, !dbg !9548
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9549, !srcloc !5559
  %15 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i65, align 8, !dbg !9550
  %16 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %15, i32 0, i32 0, !dbg !9550
  %rlock.i69 = bitcast %union.anon* %16 to %struct.raw_spinlock*, !dbg !9550
  call void @usleep_range(i64 10000, i64 11000) #11, !dbg !9551
  br label %do.body24, !dbg !9552

do.body24:                                        ; preds = %while.body
  br label %do.body25, !dbg !9553

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !9554, metadata !DIExpression()), !dbg !9556
  call void @llvm.dbg.declare(metadata i64* %__dummy228, metadata !9557, metadata !DIExpression()), !dbg !9556
  %cmp29 = icmp eq i64* %__dummy27, %__dummy228, !dbg !9556
  %conv30 = zext i1 %cmp29 to i32, !dbg !9556
  store i32 1, i32* %tmp31, align 4, !dbg !9556
  %17 = load i32, i32* %tmp31, align 4, !dbg !9556
  br label %do.body32, !dbg !9558

do.body32:                                        ; preds = %do.body25
  br label %do.body33, !dbg !9559

do.body33:                                        ; preds = %do.body32
  br label %do.body34, !dbg !9560

do.body34:                                        ; preds = %do.body33
  call void @llvm.dbg.declare(metadata i64* %__dummy35, metadata !9562, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.declare(metadata i64* %__dummy236, metadata !9566, metadata !DIExpression()), !dbg !9565
  %cmp37 = icmp eq i64* %__dummy35, %__dummy236, !dbg !9565
  %conv38 = zext i1 %cmp37 to i32, !dbg !9565
  store i32 1, i32* %tmp39, align 4, !dbg !9565
  %18 = load i32, i32* %tmp39, align 4, !dbg !9565
  %call40 = call i64 @arch_local_irq_save() #11, !dbg !9567
  store i64 %call40, i64* %flags, align 8, !dbg !9567
  br label %do.end41, !dbg !9567

do.end41:                                         ; preds = %do.body34
  br label %do.end42, !dbg !9560

do.end42:                                         ; preds = %do.end41
  br label %do.body43, !dbg !9559

do.body43:                                        ; preds = %do.end42
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9568, !srcloc !9569
  br label %do.body44, !dbg !9568

do.body44:                                        ; preds = %do.body43
  %19 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9570
  %queue_lock45 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %19, i32 0, i32 26, !dbg !9570
  store %struct.spinlock* %queue_lock45, %struct.spinlock** %lock.addr.i70, align 8
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i70, align 8, !dbg !9571
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !9572
  %rlock.i71 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !9572
  br label %do.end47, !dbg !9570

do.end47:                                         ; preds = %do.body44
  br label %do.end48, !dbg !9568

do.end48:                                         ; preds = %do.end47
  br label %do.end49, !dbg !9559

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !9558

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !9553

do.end51:                                         ; preds = %do.end50
  br label %while.cond, !dbg !9533, !llvm.loop !9573

while.end:                                        ; preds = %land.end
  %22 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9575
  %queue52 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %22, i32 0, i32 27, !dbg !9577
  %call53 = call i32 @list_empty(%struct.list_head* %queue52) #11, !dbg !9578
  %tobool54 = icmp ne i32 %call53, 0, !dbg !9578
  br i1 %tobool54, label %lor.lhs.false55, label %if.then, !dbg !9579

lor.lhs.false55:                                  ; preds = %while.end
  %23 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9580
  %busy56 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %23, i32 0, i32 30, !dbg !9581
  %24 = load i8, i8* %busy56, align 1, !dbg !9581
  %tobool57 = trunc i8 %24 to i1, !dbg !9581
  br i1 %tobool57, label %if.then, label %if.else, !dbg !9582

if.then:                                          ; preds = %lor.lhs.false55, %while.end
  store i32 -16, i32* %ret, align 4, !dbg !9583
  br label %if.end, !dbg !9584

if.else:                                          ; preds = %lor.lhs.false55
  %25 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9585
  %running = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %25, i32 0, i32 31, !dbg !9586
  store i8 0, i8* %running, align 2, !dbg !9587
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %26 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9588
  %queue_lock59 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %26, i32 0, i32 26, !dbg !9589
  %27 = load i64, i64* %flags, align 8, !dbg !9590
  store %struct.spinlock* %queue_lock59, %struct.spinlock** %lock.addr.i63, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !9591
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !9591
  store i32 1, i32* %tmp.i, align 4, !dbg !9591
  %28 = load i32, i32* %tmp.i, align 4, !dbg !9591
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !9592
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !9592
  store i32 1, i32* %tmp8.i, align 4, !dbg !9592
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !9592
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !9593
  call void @arch_local_irq_restore(i64 %30) #12, !dbg !9593
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9594, !srcloc !5559
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i63, align 8, !dbg !9595
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !9595
  %rlock.i64 = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !9595
  %33 = load i32, i32* %ret, align 4, !dbg !9596
  %tobool60 = icmp ne i32 %33, 0, !dbg !9596
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !9598

if.then61:                                        ; preds = %if.end
  %34 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9599
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %34, i32 0, i32 0, !dbg !9599
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.111, i64 0, i64 0)) #14, !dbg !9599
  %35 = load i32, i32* %ret, align 4, !dbg !9601
  store i32 %35, i32* %retval, align 4, !dbg !9602
  br label %return, !dbg !9602

if.end62:                                         ; preds = %if.end
  %36 = load i32, i32* %ret, align 4, !dbg !9603
  store i32 %36, i32* %retval, align 4, !dbg !9604
  br label %return, !dbg !9604

return:                                           ; preds = %if.end62, %if.then61
  %37 = load i32, i32* %retval, align 4, !dbg !9605
  ret i32 %37, !dbg !9605
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_controller_resume(%struct.spi_controller* %ctlr) #0 !dbg !9606 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9607, metadata !DIExpression()), !dbg !9608
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !9609, metadata !DIExpression()), !dbg !9610
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9611
  %queued = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 23, !dbg !9613
  %1 = load i8, i8* %queued, align 8, !dbg !9613
  %tobool = trunc i8 %1 to i1, !dbg !9613
  br i1 %tobool, label %if.end, label %if.then, !dbg !9614

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9615
  br label %return, !dbg !9615

if.end:                                           ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9616
  %call = call i32 @spi_start_queue(%struct.spi_controller* %2) #11, !dbg !9617
  store i32 %call, i32* %ret, align 4, !dbg !9618
  %3 = load i32, i32* %ret, align 4, !dbg !9619
  %tobool1 = icmp ne i32 %3, 0, !dbg !9619
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !9621

if.then2:                                         ; preds = %if.end
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9622
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 0, !dbg !9622
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #14, !dbg !9622
  br label %if.end3, !dbg !9622

if.end3:                                          ; preds = %if.then2, %if.end
  %5 = load i32, i32* %ret, align 4, !dbg !9623
  store i32 %5, i32* %retval, align 4, !dbg !9624
  br label %return, !dbg !9624

return:                                           ; preds = %if.end3, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !9625
  ret i32 %6, !dbg !9625
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_start_queue(%struct.spi_controller* %ctlr) #0 !dbg !9626 {
entry:
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !5420, metadata !DIExpression()), !dbg !9627
  %flags.addr.i29 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i29, metadata !5427, metadata !DIExpression()), !dbg !9631
  %tmp.i30 = alloca i32, align 4
  %tmp8.i31 = alloca i32, align 4
  %lock.addr.i26 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i26, metadata !5420, metadata !DIExpression()), !dbg !9632
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !9634
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !9635
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !9642, metadata !DIExpression()), !dbg !9643
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !9644, metadata !DIExpression()), !dbg !9645
  br label %do.body, !dbg !9646

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !9647

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !9648, metadata !DIExpression()), !dbg !9650
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !9651, metadata !DIExpression()), !dbg !9650
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !9650
  %conv = zext i1 %cmp to i32, !dbg !9650
  store i32 1, i32* %tmp, align 4, !dbg !9650
  %0 = load i32, i32* %tmp, align 4, !dbg !9650
  br label %do.body2, !dbg !9652

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !9653

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !9654

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !9656, metadata !DIExpression()), !dbg !9659
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !9660, metadata !DIExpression()), !dbg !9659
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !9659
  %conv8 = zext i1 %cmp7 to i32, !dbg !9659
  store i32 1, i32* %tmp9, align 4, !dbg !9659
  %1 = load i32, i32* %tmp9, align 4, !dbg !9659
  %call = call i64 @arch_local_irq_save() #11, !dbg !9661
  store i64 %call, i64* %flags, align 8, !dbg !9661
  br label %do.end, !dbg !9661

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !9654

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !9653

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9662, !srcloc !9663
  br label %do.body12, !dbg !9662

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9664
  %queue_lock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 26, !dbg !9664
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !9665
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !9666
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !9666
  br label %do.end14, !dbg !9664

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !9662

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !9653

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !9652

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !9647

do.end18:                                         ; preds = %do.end17
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9667
  %running = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 31, !dbg !9668
  %6 = load i8, i8* %running, align 2, !dbg !9668
  %tobool = trunc i8 %6 to i1, !dbg !9668
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !9669

lor.lhs.false:                                    ; preds = %do.end18
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9670
  %busy = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 30, !dbg !9671
  %8 = load i8, i8* %busy, align 1, !dbg !9671
  %tobool20 = trunc i8 %8 to i1, !dbg !9671
  br i1 %tobool20, label %if.then, label %if.end, !dbg !9672

if.then:                                          ; preds = %lor.lhs.false, %do.end18
  %9 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9673
  %queue_lock22 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %9, i32 0, i32 26, !dbg !9674
  %10 = load i64, i64* %flags, align 8, !dbg !9675
  store %struct.spinlock* %queue_lock22, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %10, i64* %flags.addr.i29, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !9676
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !9676
  store i32 1, i32* %tmp.i30, align 4, !dbg !9676
  %11 = load i32, i32* %tmp.i30, align 4, !dbg !9676
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !9677
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !9677
  store i32 1, i32* %tmp8.i31, align 4, !dbg !9677
  %12 = load i32, i32* %tmp8.i31, align 4, !dbg !9677
  %13 = load i64, i64* %flags.addr.i29, align 8, !dbg !9678
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !9678
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9679, !srcloc !5559
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !9680
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !9680
  %rlock.i32 = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !9680
  store i32 -16, i32* %retval, align 4, !dbg !9681
  br label %return, !dbg !9681

if.end:                                           ; preds = %lor.lhs.false
  %16 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9682
  %running23 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 31, !dbg !9683
  store i8 1, i8* %running23, align 2, !dbg !9684
  %17 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9685
  %cur_msg = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %17, i32 0, i32 28, !dbg !9686
  store %struct.spi_message* null, %struct.spi_message** %cur_msg, align 8, !dbg !9687
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9688
  %queue_lock24 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 26, !dbg !9689
  %19 = load i64, i64* %flags, align 8, !dbg !9690
  store %struct.spinlock* %queue_lock24, %struct.spinlock** %lock.addr.i26, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !9691
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !9691
  store i32 1, i32* %tmp.i, align 4, !dbg !9691
  %20 = load i32, i32* %tmp.i, align 4, !dbg !9691
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !9692
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !9692
  store i32 1, i32* %tmp8.i, align 4, !dbg !9692
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !9692
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !9693
  call void @arch_local_irq_restore(i64 %22) #12, !dbg !9693
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !9694, !srcloc !5559
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i26, align 8, !dbg !9695
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !9695
  %rlock.i27 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !9695
  %25 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9696
  %kworker = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %25, i32 0, i32 24, !dbg !9697
  %26 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker, align 8, !dbg !9697
  %27 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !9698
  %pump_messages = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %27, i32 0, i32 25, !dbg !9699
  %call25 = call zeroext i1 @kthread_queue_work(%struct.kthread_worker* %26, %struct.kthread_work* %pump_messages) #11, !dbg !9700
  store i32 0, i32* %retval, align 4, !dbg !9701
  br label %return, !dbg !9701

return:                                           ; preds = %if.end, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !9702
  ret i32 %28, !dbg !9702
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_controller* @spi_busnum_to_master(i16 zeroext %bus_num) #0 !dbg !9703 {
entry:
  %bus_num.addr = alloca i16, align 2
  %dev = alloca %struct.device*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store i16 %bus_num, i16* %bus_num.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %bus_num.addr, metadata !9706, metadata !DIExpression()), !dbg !9707
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !9708, metadata !DIExpression()), !dbg !9709
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !9710, metadata !DIExpression()), !dbg !9711
  store %struct.spi_controller* null, %struct.spi_controller** %ctlr, align 8, !dbg !9711
  %0 = bitcast i16* %bus_num.addr to i8*, !dbg !9712
  %call = call %struct.device* @class_find_device(%struct.class* @spi_master_class, %struct.device* null, i8* %0, i32 (%struct.device*, i8*)* @__spi_controller_match) #11, !dbg !9713
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !9714
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9715
  %tobool = icmp ne %struct.device* %1, null, !dbg !9715
  br i1 %tobool, label %if.then, label %if.end, !dbg !9717

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9718, metadata !DIExpression()), !dbg !9720
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !9720
  %3 = bitcast %struct.device* %2 to i8*, !dbg !9720
  store i8* %3, i8** %__mptr, align 8, !dbg !9720
  br label %do.body, !dbg !9720

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !9721

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9720
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !9720
  %5 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !9720
  store %struct.spi_controller* %5, %struct.spi_controller** %tmp, align 8, !dbg !9721
  %6 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !9720
  store %struct.spi_controller* %6, %struct.spi_controller** %ctlr, align 8, !dbg !9723
  br label %if.end, !dbg !9724

if.end:                                           ; preds = %do.end, %entry
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !9725
  ret %struct.spi_controller* %7, !dbg !9726
}

; Function Attrs: noredzone
declare dso_local %struct.device* @class_find_device(%struct.class*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_controller_match(%struct.device* %dev, i8* %data) #0 !dbg !9727 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %bus_num = alloca i16*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !9730, metadata !DIExpression()), !dbg !9731
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !9734, metadata !DIExpression()), !dbg !9735
  call void @llvm.dbg.declare(metadata i16** %bus_num, metadata !9736, metadata !DIExpression()), !dbg !9739
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9740
  %1 = bitcast i8* %0 to i16*, !dbg !9740
  store i16* %1, i16** %bus_num, align 8, !dbg !9739
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9741, metadata !DIExpression()), !dbg !9743
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !9743
  %3 = bitcast %struct.device* %2 to i8*, !dbg !9743
  store i8* %3, i8** %__mptr, align 8, !dbg !9743
  br label %do.body, !dbg !9743

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9744

do.end:                                           ; preds = %do.body
  %4 = load i8*, i8** %__mptr, align 8, !dbg !9743
  %add.ptr = getelementptr i8, i8* %4, i64 0, !dbg !9743
  %5 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !9743
  store %struct.spi_controller* %5, %struct.spi_controller** %tmp, align 8, !dbg !9744
  %6 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !9743
  store %struct.spi_controller* %6, %struct.spi_controller** %ctlr, align 8, !dbg !9746
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !9747
  %bus_num1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 2, !dbg !9748
  %8 = load i16, i16* %bus_num1, align 8, !dbg !9748
  %conv = sext i16 %8 to i32, !dbg !9747
  %9 = load i16*, i16** %bus_num, align 8, !dbg !9749
  %10 = load i16, i16* %9, align 2, !dbg !9750
  %conv2 = zext i16 %10 to i32, !dbg !9750
  %cmp = icmp eq i32 %conv, %conv2, !dbg !9751
  %conv3 = zext i1 %cmp to i32, !dbg !9751
  ret i32 %conv3, !dbg !9752
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i8* @spi_res_alloc(%struct.spi_device* %spi, void (%struct.spi_controller*, %struct.spi_message*, i8*)* %release, i64 %size, i32 %gfp) #0 !dbg !9753 {
entry:
  %retval = alloca i8*, align 8
  %spi.addr = alloca %struct.spi_device*, align 8
  %release.addr = alloca void (%struct.spi_controller*, %struct.spi_message*, i8*)*, align 8
  %size.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  %sres = alloca %struct.spi_res*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !9756, metadata !DIExpression()), !dbg !9757
  store void (%struct.spi_controller*, %struct.spi_message*, i8*)* %release, void (%struct.spi_controller*, %struct.spi_message*, i8*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.spi_controller*, %struct.spi_message*, i8*)** %release.addr, metadata !9758, metadata !DIExpression()), !dbg !9759
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !9760, metadata !DIExpression()), !dbg !9761
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9762, metadata !DIExpression()), !dbg !9763
  call void @llvm.dbg.declare(metadata %struct.spi_res** %sres, metadata !9764, metadata !DIExpression()), !dbg !9765
  %0 = load i64, i64* %size.addr, align 8, !dbg !9766
  %add = add i64 24, %0, !dbg !9767
  %1 = load i32, i32* %gfp.addr, align 4, !dbg !9768
  %call = call i8* @kzalloc(i64 %add, i32 %1) #11, !dbg !9769
  %2 = bitcast i8* %call to %struct.spi_res*, !dbg !9769
  store %struct.spi_res* %2, %struct.spi_res** %sres, align 8, !dbg !9770
  %3 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9771
  %tobool = icmp ne %struct.spi_res* %3, null, !dbg !9771
  br i1 %tobool, label %if.end, label %if.then, !dbg !9773

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !9774
  br label %return, !dbg !9774

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9775
  %entry1 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %4, i32 0, i32 0, !dbg !9776
  call void @INIT_LIST_HEAD(%struct.list_head* %entry1) #11, !dbg !9777
  %5 = load void (%struct.spi_controller*, %struct.spi_message*, i8*)*, void (%struct.spi_controller*, %struct.spi_message*, i8*)** %release.addr, align 8, !dbg !9778
  %6 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9779
  %release2 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %6, i32 0, i32 1, !dbg !9780
  store void (%struct.spi_controller*, %struct.spi_message*, i8*)* %5, void (%struct.spi_controller*, %struct.spi_message*, i8*)** %release2, align 8, !dbg !9781
  %7 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9782
  %data = getelementptr inbounds %struct.spi_res, %struct.spi_res* %7, i32 0, i32 2, !dbg !9783
  %arraydecay = getelementptr inbounds [0 x i64], [0 x i64]* %data, i64 0, i64 0, !dbg !9782
  %8 = bitcast i64* %arraydecay to i8*, !dbg !9782
  store i8* %8, i8** %retval, align 8, !dbg !9784
  br label %return, !dbg !9784

return:                                           ; preds = %if.end, %if.then
  %9 = load i8*, i8** %retval, align 8, !dbg !9785
  ret i8* %9, !dbg !9785
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_res_free(i8* %res) #0 !dbg !9786 {
entry:
  %res.addr = alloca i8*, align 8
  %sres = alloca %struct.spi_res*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_res*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp21 = alloca i64, align 8
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !9787, metadata !DIExpression()), !dbg !9788
  call void @llvm.dbg.declare(metadata %struct.spi_res** %sres, metadata !9789, metadata !DIExpression()), !dbg !9790
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9791, metadata !DIExpression()), !dbg !9793
  %0 = load i8*, i8** %res.addr, align 8, !dbg !9793
  store i8* %0, i8** %__mptr, align 8, !dbg !9793
  br label %do.body, !dbg !9793

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9794

do.end:                                           ; preds = %do.body
  %1 = load i8*, i8** %__mptr, align 8, !dbg !9793
  %add.ptr = getelementptr i8, i8* %1, i64 -24, !dbg !9793
  %2 = bitcast i8* %add.ptr to %struct.spi_res*, !dbg !9793
  store %struct.spi_res* %2, %struct.spi_res** %tmp, align 8, !dbg !9794
  %3 = load %struct.spi_res*, %struct.spi_res** %tmp, align 8, !dbg !9793
  store %struct.spi_res* %3, %struct.spi_res** %sres, align 8, !dbg !9790
  %4 = load i8*, i8** %res.addr, align 8, !dbg !9796
  %tobool = icmp ne i8* %4, null, !dbg !9796
  br i1 %tobool, label %if.end, label %if.then, !dbg !9798

if.then:                                          ; preds = %do.end
  br label %return, !dbg !9799

if.end:                                           ; preds = %do.end
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9800, metadata !DIExpression()), !dbg !9802
  %5 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9802
  %entry1 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %5, i32 0, i32 0, !dbg !9802
  %call = call i32 @list_empty(%struct.list_head* %entry1) #11, !dbg !9802
  %tobool2 = icmp ne i32 %call, 0, !dbg !9802
  %lnot = xor i1 %tobool2, true, !dbg !9802
  %lnot3 = xor i1 %lnot, true, !dbg !9802
  %lnot4 = xor i1 %lnot3, true, !dbg !9802
  %lnot.ext = zext i1 %lnot4 to i32, !dbg !9802
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9802
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !9803
  %tobool5 = icmp ne i32 %6, 0, !dbg !9803
  %lnot6 = xor i1 %tobool5, true, !dbg !9803
  %lnot8 = xor i1 %lnot6, true, !dbg !9803
  %lnot.ext9 = zext i1 %lnot8 to i32, !dbg !9803
  %conv = sext i32 %lnot.ext9 to i64, !dbg !9803
  %tobool10 = icmp ne i64 %conv, 0, !dbg !9803
  br i1 %tobool10, label %if.then11, label %if.end20, !dbg !9802

if.then11:                                        ; preds = %if.end
  br label %do.body12, !dbg !9803

do.body12:                                        ; preds = %if.then11
  br label %do.body13, !dbg !9805

do.body13:                                        ; preds = %do.body12
  br label %do.end14, !dbg !9807

do.end14:                                         ; preds = %do.body13
  br label %do.body15, !dbg !9805

do.body15:                                        ; preds = %do.end14
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 3003, i32 2305, i64 12) #7, !dbg !9809, !srcloc !9811
  br label %do.end16, !dbg !9809

do.end16:                                         ; preds = %do.body15
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 351) #7, !dbg !9812, !srcloc !9814
  br label %do.body17, !dbg !9805

do.body17:                                        ; preds = %do.end16
  br label %do.end18, !dbg !9815

do.end18:                                         ; preds = %do.body17
  br label %do.end19, !dbg !9805

do.end19:                                         ; preds = %do.end18
  br label %if.end20, !dbg !9805

if.end20:                                         ; preds = %do.end19, %if.end
  %7 = load i32, i32* %__ret_warn_on, align 4, !dbg !9802
  %tobool22 = icmp ne i32 %7, 0, !dbg !9802
  %lnot23 = xor i1 %tobool22, true, !dbg !9802
  %lnot25 = xor i1 %lnot23, true, !dbg !9802
  %lnot.ext26 = zext i1 %lnot25 to i32, !dbg !9802
  %conv27 = sext i32 %lnot.ext26 to i64, !dbg !9802
  store i64 %conv27, i64* %tmp21, align 8, !dbg !9803
  %8 = load i64, i64* %tmp21, align 8, !dbg !9802
  %9 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9817
  %10 = bitcast %struct.spi_res* %9 to i8*, !dbg !9817
  call void @kfree(i8* %10) #11, !dbg !9818
  br label %return, !dbg !9819

return:                                           ; preds = %if.end20, %if.then
  ret void, !dbg !9819
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_empty(%struct.list_head* %head) #0 !dbg !9820 {
entry:
  %head.addr = alloca %struct.list_head*, align 8
  %tmp = alloca %struct.list_head*, align 8
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !9825, metadata !DIExpression()), !dbg !9826
  br label %do.body, !dbg !9827

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9829

do.end:                                           ; preds = %do.body
  %0 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9827
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !9827
  %1 = load volatile %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9827
  store %struct.list_head* %1, %struct.list_head** %tmp, align 8, !dbg !9829
  %2 = load %struct.list_head*, %struct.list_head** %tmp, align 8, !dbg !9827
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !9831
  %cmp = icmp eq %struct.list_head* %2, %3, !dbg !9832
  %conv = zext i1 %cmp to i32, !dbg !9832
  ret i32 %conv, !dbg !9833
}

; Function Attrs: noredzone
declare dso_local void @kfree(i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local void @spi_res_add(%struct.spi_message* %message, i8* %res) #0 !dbg !9834 {
entry:
  %message.addr = alloca %struct.spi_message*, align 8
  %res.addr = alloca i8*, align 8
  %sres = alloca %struct.spi_res*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_res*, align 8
  %__ret_warn_on = alloca i32, align 4
  %tmp18 = alloca i64, align 8
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !9837, metadata !DIExpression()), !dbg !9838
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !9839, metadata !DIExpression()), !dbg !9840
  call void @llvm.dbg.declare(metadata %struct.spi_res** %sres, metadata !9841, metadata !DIExpression()), !dbg !9842
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !9843, metadata !DIExpression()), !dbg !9845
  %0 = load i8*, i8** %res.addr, align 8, !dbg !9845
  store i8* %0, i8** %__mptr, align 8, !dbg !9845
  br label %do.body, !dbg !9845

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !9846

do.end:                                           ; preds = %do.body
  %1 = load i8*, i8** %__mptr, align 8, !dbg !9845
  %add.ptr = getelementptr i8, i8* %1, i64 -24, !dbg !9845
  %2 = bitcast i8* %add.ptr to %struct.spi_res*, !dbg !9845
  store %struct.spi_res* %2, %struct.spi_res** %tmp, align 8, !dbg !9846
  %3 = load %struct.spi_res*, %struct.spi_res** %tmp, align 8, !dbg !9845
  store %struct.spi_res* %3, %struct.spi_res** %sres, align 8, !dbg !9842
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !9848, metadata !DIExpression()), !dbg !9850
  %4 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9850
  %entry1 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %4, i32 0, i32 0, !dbg !9850
  %call = call i32 @list_empty(%struct.list_head* %entry1) #11, !dbg !9850
  %tobool = icmp ne i32 %call, 0, !dbg !9850
  %lnot = xor i1 %tobool, true, !dbg !9850
  %lnot2 = xor i1 %lnot, true, !dbg !9850
  %lnot3 = xor i1 %lnot2, true, !dbg !9850
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !9850
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !9850
  %5 = load i32, i32* %__ret_warn_on, align 4, !dbg !9851
  %tobool4 = icmp ne i32 %5, 0, !dbg !9851
  %lnot5 = xor i1 %tobool4, true, !dbg !9851
  %lnot7 = xor i1 %lnot5, true, !dbg !9851
  %lnot.ext8 = zext i1 %lnot7 to i32, !dbg !9851
  %conv = sext i32 %lnot.ext8 to i64, !dbg !9851
  %tobool9 = icmp ne i64 %conv, 0, !dbg !9851
  br i1 %tobool9, label %if.then, label %if.end, !dbg !9850

if.then:                                          ; preds = %do.end
  br label %do.body10, !dbg !9851

do.body10:                                        ; preds = %if.then
  br label %do.body11, !dbg !9853

do.body11:                                        ; preds = %do.body10
  br label %do.end12, !dbg !9855

do.end12:                                         ; preds = %do.body11
  br label %do.body13, !dbg !9853

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 3017, i32 2305, i64 12) #7, !dbg !9857, !srcloc !9859
  br label %do.end14, !dbg !9857

do.end14:                                         ; preds = %do.body13
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 353) #7, !dbg !9860, !srcloc !9862
  br label %do.body15, !dbg !9853

do.body15:                                        ; preds = %do.end14
  br label %do.end16, !dbg !9863

do.end16:                                         ; preds = %do.body15
  br label %do.end17, !dbg !9853

do.end17:                                         ; preds = %do.end16
  br label %if.end, !dbg !9853

if.end:                                           ; preds = %do.end17, %do.end
  %6 = load i32, i32* %__ret_warn_on, align 4, !dbg !9850
  %tobool19 = icmp ne i32 %6, 0, !dbg !9850
  %lnot20 = xor i1 %tobool19, true, !dbg !9850
  %lnot22 = xor i1 %lnot20, true, !dbg !9850
  %lnot.ext23 = zext i1 %lnot22 to i32, !dbg !9850
  %conv24 = sext i32 %lnot.ext23 to i64, !dbg !9850
  store i64 %conv24, i64* %tmp18, align 8, !dbg !9851
  %7 = load i64, i64* %tmp18, align 8, !dbg !9850
  %8 = load %struct.spi_res*, %struct.spi_res** %sres, align 8, !dbg !9865
  %entry25 = getelementptr inbounds %struct.spi_res, %struct.spi_res* %8, i32 0, i32 0, !dbg !9866
  %9 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !9867
  %resources = getelementptr inbounds %struct.spi_message, %struct.spi_message* %9, i32 0, i32 10, !dbg !9868
  call void @list_add_tail(%struct.list_head* %entry25, %struct.list_head* %resources) #11, !dbg !9869
  ret void, !dbg !9870
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_replaced_transfers* @spi_replace_transfers(%struct.spi_message* %msg, %struct.spi_transfer* %xfer_first, i64 %remove, i64 %insert, void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)* %release, i64 %extradatasize, i32 %gfp) #0 !dbg !9871 {
entry:
  %retval = alloca %struct.spi_replaced_transfers*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer_first.addr = alloca %struct.spi_transfer*, align 8
  %remove.addr = alloca i64, align 8
  %insert.addr = alloca i64, align 8
  %release.addr = alloca void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)*, align 8
  %extradatasize.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  %rxfer = alloca %struct.spi_replaced_transfers*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %i = alloca i64, align 8
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !9888, metadata !DIExpression()), !dbg !9889
  store %struct.spi_transfer* %xfer_first, %struct.spi_transfer** %xfer_first.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer_first.addr, metadata !9890, metadata !DIExpression()), !dbg !9891
  store i64 %remove, i64* %remove.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %remove.addr, metadata !9892, metadata !DIExpression()), !dbg !9893
  store i64 %insert, i64* %insert.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %insert.addr, metadata !9894, metadata !DIExpression()), !dbg !9895
  store void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)* %release, void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)** %release.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)** %release.addr, metadata !9896, metadata !DIExpression()), !dbg !9897
  store i64 %extradatasize, i64* %extradatasize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extradatasize.addr, metadata !9898, metadata !DIExpression()), !dbg !9899
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !9900, metadata !DIExpression()), !dbg !9901
  call void @llvm.dbg.declare(metadata %struct.spi_replaced_transfers** %rxfer, metadata !9902, metadata !DIExpression()), !dbg !9903
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !9904, metadata !DIExpression()), !dbg !9905
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9906, metadata !DIExpression()), !dbg !9907
  %0 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !9908
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %0, i32 0, i32 1, !dbg !9909
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !9909
  %2 = load i64, i64* %insert.addr, align 8, !dbg !9910
  %call = call i64 @__ab_c_size(i64 %2, i64 144, i64 48) #11, !dbg !9910
  %3 = load i64, i64* %extradatasize.addr, align 8, !dbg !9911
  %add = add i64 %call, %3, !dbg !9912
  %4 = load i32, i32* %gfp.addr, align 4, !dbg !9913
  %call1 = call i8* @spi_res_alloc(%struct.spi_device* %1, void (%struct.spi_controller*, %struct.spi_message*, i8*)* @__spi_replace_transfers_release, i64 %add, i32 %4) #11, !dbg !9914
  %5 = bitcast i8* %call1 to %struct.spi_replaced_transfers*, !dbg !9914
  store %struct.spi_replaced_transfers* %5, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9915
  %6 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9916
  %tobool = icmp ne %struct.spi_replaced_transfers* %6, null, !dbg !9916
  br i1 %tobool, label %if.end, label %if.then, !dbg !9918

if.then:                                          ; preds = %entry
  %call2 = call i8* @ERR_PTR(i64 -12) #11, !dbg !9919
  %7 = bitcast i8* %call2 to %struct.spi_replaced_transfers*, !dbg !9919
  store %struct.spi_replaced_transfers* %7, %struct.spi_replaced_transfers** %retval, align 8, !dbg !9920
  br label %return, !dbg !9920

if.end:                                           ; preds = %entry
  %8 = load void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)*, void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)** %release.addr, align 8, !dbg !9921
  %9 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9922
  %release3 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %9, i32 0, i32 0, !dbg !9923
  store void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)* %8, void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)** %release3, align 8, !dbg !9924
  %10 = load i64, i64* %extradatasize.addr, align 8, !dbg !9925
  %tobool4 = icmp ne i64 %10, 0, !dbg !9925
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !9927

if.then5:                                         ; preds = %if.end
  %11 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9928
  %inserted_transfers = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %11, i32 0, i32 5, !dbg !9929
  %12 = load i64, i64* %insert.addr, align 8, !dbg !9930
  %arrayidx = getelementptr [0 x %struct.spi_transfer], [0 x %struct.spi_transfer]* %inserted_transfers, i64 0, i64 %12, !dbg !9928
  %13 = bitcast %struct.spi_transfer* %arrayidx to i8*, !dbg !9931
  %14 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9932
  %extradata = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %14, i32 0, i32 1, !dbg !9933
  store i8* %13, i8** %extradata, align 8, !dbg !9934
  br label %if.end6, !dbg !9932

if.end6:                                          ; preds = %if.then5, %if.end
  %15 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9935
  %replaced_transfers = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %15, i32 0, i32 2, !dbg !9936
  call void @INIT_LIST_HEAD(%struct.list_head* %replaced_transfers) #11, !dbg !9937
  %16 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer_first.addr, align 8, !dbg !9938
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %16, i32 0, i32 19, !dbg !9939
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list, i32 0, i32 1, !dbg !9940
  %17 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !9940
  %18 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9941
  %replaced_after = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %18, i32 0, i32 3, !dbg !9942
  store %struct.list_head* %17, %struct.list_head** %replaced_after, align 8, !dbg !9943
  store i64 0, i64* %i, align 8, !dbg !9944
  br label %for.cond, !dbg !9946

for.cond:                                         ; preds = %for.inc, %if.end6
  %19 = load i64, i64* %i, align 8, !dbg !9947
  %20 = load i64, i64* %remove.addr, align 8, !dbg !9949
  %cmp = icmp ult i64 %19, %20, !dbg !9950
  br i1 %cmp, label %for.body, label %for.end, !dbg !9951

for.body:                                         ; preds = %for.cond
  %21 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9952
  %replaced_after7 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %21, i32 0, i32 3, !dbg !9955
  %22 = load %struct.list_head*, %struct.list_head** %replaced_after7, align 8, !dbg !9955
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %22, i32 0, i32 0, !dbg !9956
  %23 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !9956
  %24 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !9957
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %24, i32 0, i32 0, !dbg !9958
  %cmp8 = icmp eq %struct.list_head* %23, %transfers, !dbg !9959
  br i1 %cmp8, label %if.then9, label %if.end14, !dbg !9960

if.then9:                                         ; preds = %for.body
  %25 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !9961
  %spi10 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %25, i32 0, i32 1, !dbg !9961
  %26 = load %struct.spi_device*, %struct.spi_device** %spi10, align 8, !dbg !9961
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %26, i32 0, i32 0, !dbg !9961
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.17, i64 0, i64 0)) #14, !dbg !9961
  %27 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9963
  %replaced_transfers11 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %27, i32 0, i32 2, !dbg !9964
  %28 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9965
  %replaced_after12 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %28, i32 0, i32 3, !dbg !9966
  %29 = load %struct.list_head*, %struct.list_head** %replaced_after12, align 8, !dbg !9966
  call void @list_splice(%struct.list_head* %replaced_transfers11, %struct.list_head* %29) #11, !dbg !9967
  %30 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9968
  %31 = bitcast %struct.spi_replaced_transfers* %30 to i8*, !dbg !9968
  call void @spi_res_free(i8* %31) #11, !dbg !9969
  %call13 = call i8* @ERR_PTR(i64 -22) #11, !dbg !9970
  %32 = bitcast i8* %call13 to %struct.spi_replaced_transfers*, !dbg !9970
  store %struct.spi_replaced_transfers* %32, %struct.spi_replaced_transfers** %retval, align 8, !dbg !9971
  br label %return, !dbg !9971

if.end14:                                         ; preds = %for.body
  %33 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9972
  %replaced_after15 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %33, i32 0, i32 3, !dbg !9973
  %34 = load %struct.list_head*, %struct.list_head** %replaced_after15, align 8, !dbg !9973
  %next16 = getelementptr inbounds %struct.list_head, %struct.list_head* %34, i32 0, i32 0, !dbg !9974
  %35 = load %struct.list_head*, %struct.list_head** %next16, align 8, !dbg !9974
  %36 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9975
  %replaced_transfers17 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %36, i32 0, i32 2, !dbg !9976
  call void @list_move_tail(%struct.list_head* %35, %struct.list_head* %replaced_transfers17) #11, !dbg !9977
  br label %for.inc, !dbg !9978

for.inc:                                          ; preds = %if.end14
  %37 = load i64, i64* %i, align 8, !dbg !9979
  %inc = add i64 %37, 1, !dbg !9979
  store i64 %inc, i64* %i, align 8, !dbg !9979
  br label %for.cond, !dbg !9980, !llvm.loop !9981

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !9983
  br label %for.cond18, !dbg !9985

for.cond18:                                       ; preds = %for.inc29, %for.end
  %38 = load i64, i64* %i, align 8, !dbg !9986
  %39 = load i64, i64* %insert.addr, align 8, !dbg !9988
  %cmp19 = icmp ult i64 %38, %39, !dbg !9989
  br i1 %cmp19, label %for.body20, label %for.end31, !dbg !9990

for.body20:                                       ; preds = %for.cond18
  %40 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !9991
  %inserted_transfers21 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %40, i32 0, i32 5, !dbg !9993
  %41 = load i64, i64* %insert.addr, align 8, !dbg !9994
  %sub = sub i64 %41, 1, !dbg !9995
  %42 = load i64, i64* %i, align 8, !dbg !9996
  %sub22 = sub i64 %sub, %42, !dbg !9997
  %arrayidx23 = getelementptr [0 x %struct.spi_transfer], [0 x %struct.spi_transfer]* %inserted_transfers21, i64 0, i64 %sub22, !dbg !9991
  store %struct.spi_transfer* %arrayidx23, %struct.spi_transfer** %xfer, align 8, !dbg !9998
  %43 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !9999
  %44 = bitcast %struct.spi_transfer* %43 to i8*, !dbg !10000
  %45 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer_first.addr, align 8, !dbg !10001
  %46 = bitcast %struct.spi_transfer* %45 to i8*, !dbg !10000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %46, i64 144, i1 false), !dbg !10000
  %47 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10002
  %transfer_list24 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %47, i32 0, i32 19, !dbg !10003
  %48 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10004
  %replaced_after25 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %48, i32 0, i32 3, !dbg !10005
  %49 = load %struct.list_head*, %struct.list_head** %replaced_after25, align 8, !dbg !10005
  call void @list_add(%struct.list_head* %transfer_list24, %struct.list_head* %49) #11, !dbg !10006
  %50 = load i64, i64* %i, align 8, !dbg !10007
  %tobool26 = icmp ne i64 %50, 0, !dbg !10007
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !10009

if.then27:                                        ; preds = %for.body20
  %51 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10010
  %cs_change = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %51, i32 0, i32 7, !dbg !10012
  %bf.load = load i8, i8* %cs_change, align 8, !dbg !10013
  %bf.clear = and i8 %bf.load, -2, !dbg !10013
  store i8 %bf.clear, i8* %cs_change, align 8, !dbg !10013
  %52 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10014
  %delay_usecs = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %52, i32 0, i32 9, !dbg !10015
  store i16 0, i16* %delay_usecs, align 2, !dbg !10016
  %53 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10017
  %delay = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %53, i32 0, i32 10, !dbg !10018
  %value = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %delay, i32 0, i32 0, !dbg !10019
  store i16 0, i16* %value, align 4, !dbg !10020
  br label %if.end28, !dbg !10021

if.end28:                                         ; preds = %if.then27, %for.body20
  br label %for.inc29, !dbg !10022

for.inc29:                                        ; preds = %if.end28
  %54 = load i64, i64* %i, align 8, !dbg !10023
  %inc30 = add i64 %54, 1, !dbg !10023
  store i64 %inc30, i64* %i, align 8, !dbg !10023
  br label %for.cond18, !dbg !10024, !llvm.loop !10025

for.end31:                                        ; preds = %for.cond18
  %55 = load i64, i64* %insert.addr, align 8, !dbg !10027
  %56 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10028
  %inserted = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %56, i32 0, i32 4, !dbg !10029
  store i64 %55, i64* %inserted, align 8, !dbg !10030
  %57 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10031
  %58 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10032
  %59 = bitcast %struct.spi_replaced_transfers* %58 to i8*, !dbg !10032
  call void @spi_res_add(%struct.spi_message* %57, i8* %59) #11, !dbg !10033
  %60 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10034
  store %struct.spi_replaced_transfers* %60, %struct.spi_replaced_transfers** %retval, align 8, !dbg !10035
  br label %return, !dbg !10035

return:                                           ; preds = %for.end31, %if.then9, %if.then
  %61 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %retval, align 8, !dbg !10036
  ret %struct.spi_replaced_transfers* %61, !dbg !10036
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__spi_replace_transfers_release(%struct.spi_controller* %ctlr, %struct.spi_message* %msg, i8* %res) #0 !dbg !10037 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %res.addr = alloca i8*, align 8
  %rxfer = alloca %struct.spi_replaced_transfers*, align 8
  %i = alloca i64, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !10038, metadata !DIExpression()), !dbg !10039
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !10040, metadata !DIExpression()), !dbg !10041
  store i8* %res, i8** %res.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %res.addr, metadata !10042, metadata !DIExpression()), !dbg !10043
  call void @llvm.dbg.declare(metadata %struct.spi_replaced_transfers** %rxfer, metadata !10044, metadata !DIExpression()), !dbg !10045
  %0 = load i8*, i8** %res.addr, align 8, !dbg !10046
  %1 = bitcast i8* %0 to %struct.spi_replaced_transfers*, !dbg !10046
  store %struct.spi_replaced_transfers* %1, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10045
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10047, metadata !DIExpression()), !dbg !10048
  %2 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10049
  %release = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %2, i32 0, i32 0, !dbg !10051
  %3 = load void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)*, void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)** %release, align 8, !dbg !10051
  %tobool = icmp ne void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)* %3, null, !dbg !10049
  br i1 %tobool, label %if.then, label %if.end, !dbg !10052

if.then:                                          ; preds = %entry
  %4 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10053
  %release1 = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %4, i32 0, i32 0, !dbg !10054
  %5 = load void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)*, void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)** %release1, align 8, !dbg !10054
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10055
  %7 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10056
  %8 = load i8*, i8** %res.addr, align 8, !dbg !10057
  %9 = bitcast i8* %8 to %struct.spi_replaced_transfers*, !dbg !10057
  call void %5(%struct.spi_controller* %6, %struct.spi_message* %7, %struct.spi_replaced_transfers* %9) #11, !dbg !10053
  br label %if.end, !dbg !10053

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10058
  %replaced_transfers = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %10, i32 0, i32 2, !dbg !10059
  %11 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10060
  %replaced_after = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %11, i32 0, i32 3, !dbg !10061
  %12 = load %struct.list_head*, %struct.list_head** %replaced_after, align 8, !dbg !10061
  call void @list_splice(%struct.list_head* %replaced_transfers, %struct.list_head* %12) #11, !dbg !10062
  store i64 0, i64* %i, align 8, !dbg !10063
  br label %for.cond, !dbg !10065

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load i64, i64* %i, align 8, !dbg !10066
  %14 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10068
  %inserted = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %14, i32 0, i32 4, !dbg !10069
  %15 = load i64, i64* %inserted, align 8, !dbg !10069
  %cmp = icmp ult i64 %13, %15, !dbg !10070
  br i1 %cmp, label %for.body, label %for.end, !dbg !10071

for.body:                                         ; preds = %for.cond
  %16 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %rxfer, align 8, !dbg !10072
  %inserted_transfers = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %16, i32 0, i32 5, !dbg !10073
  %17 = load i64, i64* %i, align 8, !dbg !10074
  %arrayidx = getelementptr [0 x %struct.spi_transfer], [0 x %struct.spi_transfer]* %inserted_transfers, i64 0, i64 %17, !dbg !10072
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx, i32 0, i32 19, !dbg !10075
  call void @list_del(%struct.list_head* %transfer_list) #11, !dbg !10076
  br label %for.inc, !dbg !10076

for.inc:                                          ; preds = %for.body
  %18 = load i64, i64* %i, align 8, !dbg !10077
  %inc = add i64 %18, 1, !dbg !10077
  store i64 %inc, i64* %i, align 8, !dbg !10077
  br label %for.cond, !dbg !10078, !llvm.loop !10079

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10081
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__ab_c_size(i64 %a, i64 %b, i64 %c) #0 !dbg !10082 {
entry:
  %retval = alloca i64, align 8
  %a.addr = alloca i64, align 8
  %b.addr = alloca i64, align 8
  %c.addr = alloca i64, align 8
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  %__a3 = alloca i64, align 8
  %__b4 = alloca i64, align 8
  %__d5 = alloca i64*, align 8
  %tmp10 = alloca i8, align 1
  store i64 %a, i64* %a.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %a.addr, metadata !10086, metadata !DIExpression()), !dbg !10087
  store i64 %b, i64* %b.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %b.addr, metadata !10088, metadata !DIExpression()), !dbg !10089
  store i64 %c, i64* %c.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %c.addr, metadata !10090, metadata !DIExpression()), !dbg !10091
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !10092, metadata !DIExpression()), !dbg !10093
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !10094, metadata !DIExpression()), !dbg !10097
  %0 = load i64, i64* %a.addr, align 8, !dbg !10097
  store i64 %0, i64* %__a, align 8, !dbg !10097
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !10098, metadata !DIExpression()), !dbg !10097
  %1 = load i64, i64* %b.addr, align 8, !dbg !10097
  store i64 %1, i64* %__b, align 8, !dbg !10097
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !10099, metadata !DIExpression()), !dbg !10097
  store i64* %bytes, i64** %__d, align 8, !dbg !10097
  %cmp = icmp eq i64* %__a, %__b, !dbg !10097
  %conv = zext i1 %cmp to i32, !dbg !10097
  %2 = load i64*, i64** %__d, align 8, !dbg !10097
  %cmp1 = icmp eq i64* %__a, %2, !dbg !10097
  %conv2 = zext i1 %cmp1 to i32, !dbg !10097
  %3 = load i64, i64* %__a, align 8, !dbg !10097
  %4 = load i64, i64* %__b, align 8, !dbg !10097
  %5 = load i64*, i64** %__d, align 8, !dbg !10097
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !10097
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !10097
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !10097
  store i64 %8, i64* %5, align 8, !dbg !10097
  %frombool = zext i1 %7 to i8, !dbg !10097
  store i8 %frombool, i8* %tmp, align 1, !dbg !10097
  %9 = load i8, i8* %tmp, align 1, !dbg !10097
  %tobool = trunc i8 %9 to i1, !dbg !10097
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !10100
  br i1 %call, label %if.then, label %if.end, !dbg !10101

if.then:                                          ; preds = %entry
  store i64 -1, i64* %retval, align 8, !dbg !10102
  br label %return, !dbg !10102

if.end:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %__a3, metadata !10103, metadata !DIExpression()), !dbg !10106
  %10 = load i64, i64* %bytes, align 8, !dbg !10106
  store i64 %10, i64* %__a3, align 8, !dbg !10106
  call void @llvm.dbg.declare(metadata i64* %__b4, metadata !10107, metadata !DIExpression()), !dbg !10106
  %11 = load i64, i64* %c.addr, align 8, !dbg !10106
  store i64 %11, i64* %__b4, align 8, !dbg !10106
  call void @llvm.dbg.declare(metadata i64** %__d5, metadata !10108, metadata !DIExpression()), !dbg !10106
  store i64* %bytes, i64** %__d5, align 8, !dbg !10106
  %cmp6 = icmp eq i64* %__a3, %__b4, !dbg !10106
  %conv7 = zext i1 %cmp6 to i32, !dbg !10106
  %12 = load i64*, i64** %__d5, align 8, !dbg !10106
  %cmp8 = icmp eq i64* %__a3, %12, !dbg !10106
  %conv9 = zext i1 %cmp8 to i32, !dbg !10106
  %13 = load i64, i64* %__a3, align 8, !dbg !10106
  %14 = load i64, i64* %__b4, align 8, !dbg !10106
  %15 = load i64*, i64** %__d5, align 8, !dbg !10106
  %16 = call { i64, i1 } @llvm.uadd.with.overflow.i64(i64 %13, i64 %14), !dbg !10106
  %17 = extractvalue { i64, i1 } %16, 1, !dbg !10106
  %18 = extractvalue { i64, i1 } %16, 0, !dbg !10106
  store i64 %18, i64* %15, align 8, !dbg !10106
  %frombool11 = zext i1 %17 to i8, !dbg !10106
  store i8 %frombool11, i8* %tmp10, align 1, !dbg !10106
  %19 = load i8, i8* %tmp10, align 1, !dbg !10106
  %tobool12 = trunc i8 %19 to i1, !dbg !10106
  %call13 = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool12) #11, !dbg !10109
  br i1 %call13, label %if.then14, label %if.end15, !dbg !10110

if.then14:                                        ; preds = %if.end
  store i64 -1, i64* %retval, align 8, !dbg !10111
  br label %return, !dbg !10111

if.end15:                                         ; preds = %if.end
  %20 = load i64, i64* %bytes, align 8, !dbg !10112
  store i64 %20, i64* %retval, align 8, !dbg !10113
  br label %return, !dbg !10113

return:                                           ; preds = %if.end15, %if.then14, %if.then
  %21 = load i64, i64* %retval, align 8, !dbg !10114
  ret i64 %21, !dbg !10114
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @ERR_PTR(i64 %error) #0 !dbg !10115 {
entry:
  %error.addr = alloca i64, align 8
  store i64 %error, i64* %error.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %error.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  %0 = load i64, i64* %error.addr, align 8, !dbg !10120
  %1 = inttoptr i64 %0 to i8*, !dbg !10121
  ret i8* %1, !dbg !10122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_splice(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !10123 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10126, metadata !DIExpression()), !dbg !10127
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10128, metadata !DIExpression()), !dbg !10129
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10130
  %call = call i32 @list_empty(%struct.list_head* %0) #11, !dbg !10132
  %tobool = icmp ne i32 %call, 0, !dbg !10132
  br i1 %tobool, label %if.end, label %if.then, !dbg !10133

if.then:                                          ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10134
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10135
  %3 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10136
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !10137
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10137
  call void @__list_splice(%struct.list_head* %1, %struct.list_head* %2, %struct.list_head* %4) #11, !dbg !10138
  br label %if.end, !dbg !10138

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !10139
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !10140 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !10141, metadata !DIExpression()), !dbg !10142
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10143, metadata !DIExpression()), !dbg !10144
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10145
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !10146
  %1 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !10147
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10148
  call void @list_add_tail(%struct.list_head* %1, %struct.list_head* %2) #11, !dbg !10149
  ret void, !dbg !10150
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_add(%struct.list_head* %new, %struct.list_head* %head) #0 !dbg !10151 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !10152, metadata !DIExpression()), !dbg !10153
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !10154, metadata !DIExpression()), !dbg !10155
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !10156
  %1 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10157
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !10158
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 0, !dbg !10159
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10159
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %3) #11, !dbg !10160
  ret void, !dbg !10161
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_split_transfers_maxsize(%struct.spi_controller* %ctlr, %struct.spi_message* %msg, i64 %maxsize, i32 %gfp) #0 !dbg !10162 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %maxsize.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  %xfer = alloca %struct.spi_transfer*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_transfer*, align 8
  %__mptr6 = alloca i8*, align 8
  %tmp11 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !10165, metadata !DIExpression()), !dbg !10166
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !10167, metadata !DIExpression()), !dbg !10168
  store i64 %maxsize, i64* %maxsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !10169, metadata !DIExpression()), !dbg !10170
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10171, metadata !DIExpression()), !dbg !10172
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !10173, metadata !DIExpression()), !dbg !10174
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10175, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10177, metadata !DIExpression()), !dbg !10180
  %0 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10180
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %0, i32 0, i32 0, !dbg !10180
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !10180
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10180
  %2 = bitcast %struct.list_head* %1 to i8*, !dbg !10180
  store i8* %2, i8** %__mptr, align 8, !dbg !10180
  br label %do.body, !dbg !10180

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !10181

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !10180
  %add.ptr = getelementptr i8, i8* %3, i64 -120, !dbg !10180
  %4 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !10180
  store %struct.spi_transfer* %4, %struct.spi_transfer** %tmp, align 8, !dbg !10181
  %5 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp, align 8, !dbg !10180
  store %struct.spi_transfer* %5, %struct.spi_transfer** %xfer, align 8, !dbg !10183
  br label %for.cond, !dbg !10183

for.cond:                                         ; preds = %do.end10, %do.end
  %6 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10184
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %6, i32 0, i32 19, !dbg !10184
  %7 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10184
  %transfers1 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %7, i32 0, i32 0, !dbg !10184
  %cmp = icmp eq %struct.list_head* %transfer_list, %transfers1, !dbg !10184
  %lnot = xor i1 %cmp, true, !dbg !10184
  br i1 %lnot, label %for.body, label %for.end, !dbg !10183

for.body:                                         ; preds = %for.cond
  %8 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10186
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %8, i32 0, i32 2, !dbg !10189
  %9 = load i32, i32* %len, align 8, !dbg !10189
  %conv = zext i32 %9 to i64, !dbg !10186
  %10 = load i64, i64* %maxsize.addr, align 8, !dbg !10190
  %cmp2 = icmp ugt i64 %conv, %10, !dbg !10191
  br i1 %cmp2, label %if.then, label %if.end5, !dbg !10192

if.then:                                          ; preds = %for.body
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10193
  %12 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10195
  %13 = load i64, i64* %maxsize.addr, align 8, !dbg !10196
  %14 = load i32, i32* %gfp.addr, align 4, !dbg !10197
  %call = call i32 @__spi_split_transfer_maxsize(%struct.spi_controller* %11, %struct.spi_message* %12, %struct.spi_transfer** %xfer, i64 %13, i32 %14) #11, !dbg !10198
  store i32 %call, i32* %ret, align 4, !dbg !10199
  %15 = load i32, i32* %ret, align 4, !dbg !10200
  %tobool = icmp ne i32 %15, 0, !dbg !10200
  br i1 %tobool, label %if.then4, label %if.end, !dbg !10202

if.then4:                                         ; preds = %if.then
  %16 = load i32, i32* %ret, align 4, !dbg !10203
  store i32 %16, i32* %retval, align 4, !dbg !10204
  br label %return, !dbg !10204

if.end:                                           ; preds = %if.then
  br label %if.end5, !dbg !10205

if.end5:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !10206

for.inc:                                          ; preds = %if.end5
  call void @llvm.dbg.declare(metadata i8** %__mptr6, metadata !10207, metadata !DIExpression()), !dbg !10209
  %17 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10209
  %transfer_list7 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %17, i32 0, i32 19, !dbg !10209
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list7, i32 0, i32 0, !dbg !10209
  %18 = load %struct.list_head*, %struct.list_head** %next8, align 8, !dbg !10209
  %19 = bitcast %struct.list_head* %18 to i8*, !dbg !10209
  store i8* %19, i8** %__mptr6, align 8, !dbg !10209
  br label %do.body9, !dbg !10209

do.body9:                                         ; preds = %for.inc
  br label %do.end10, !dbg !10210

do.end10:                                         ; preds = %do.body9
  %20 = load i8*, i8** %__mptr6, align 8, !dbg !10209
  %add.ptr12 = getelementptr i8, i8* %20, i64 -120, !dbg !10209
  %21 = bitcast i8* %add.ptr12 to %struct.spi_transfer*, !dbg !10209
  store %struct.spi_transfer* %21, %struct.spi_transfer** %tmp11, align 8, !dbg !10210
  %22 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp11, align 8, !dbg !10209
  store %struct.spi_transfer* %22, %struct.spi_transfer** %xfer, align 8, !dbg !10184
  br label %for.cond, !dbg !10184, !llvm.loop !10212

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !10214
  br label %return, !dbg !10214

return:                                           ; preds = %for.end, %if.then4
  %23 = load i32, i32* %retval, align 4, !dbg !10215
  ret i32 %23, !dbg !10215
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_split_transfer_maxsize(%struct.spi_controller* %ctlr, %struct.spi_message* %msg, %struct.spi_transfer** %xferp, i64 %maxsize, i32 %gfp) #0 !dbg !10216 {
entry:
  %lock.addr.i128 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i128, metadata !5429, metadata !DIExpression()), !dbg !10220
  %lock.addr.i123 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i123, metadata !5420, metadata !DIExpression()), !dbg !10228
  %flags.addr.i124 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i124, metadata !5427, metadata !DIExpression()), !dbg !10231
  %tmp.i125 = alloca i32, align 4
  %tmp8.i126 = alloca i32, align 4
  %lock.addr.i121 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i121, metadata !5420, metadata !DIExpression()), !dbg !10232
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !10234
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !10235
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %xferp.addr = alloca %struct.spi_transfer**, align 8
  %maxsize.addr = alloca i64, align 8
  %gfp.addr = alloca i32, align 4
  %xfer = alloca %struct.spi_transfer*, align 8
  %xfers = alloca %struct.spi_transfer*, align 8
  %srt = alloca %struct.spi_replaced_transfers*, align 8
  %offset = alloca i64, align 8
  %count = alloca i64, align 8
  %i = alloca i64, align 8
  %__UNIQUE_ID___x357 = alloca i64, align 8
  %__UNIQUE_ID___y358 = alloca i64, align 8
  %tmp = alloca i64, align 8
  %__UNIQUE_ID___x359 = alloca i64, align 8
  %__UNIQUE_ID___y360 = alloca i64, align 8
  %tmp42 = alloca i64, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp59 = alloca i32, align 4
  %__dummy63 = alloca i64, align 8
  %__dummy264 = alloca i64, align 8
  %tmp67 = alloca i32, align 4
  %flags84 = alloca i64, align 8
  %__dummy87 = alloca i64, align 8
  %__dummy288 = alloca i64, align 8
  %tmp91 = alloca i32, align 4
  %__dummy95 = alloca i64, align 8
  %__dummy296 = alloca i64, align 8
  %tmp99 = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !10242, metadata !DIExpression()), !dbg !10243
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !10244, metadata !DIExpression()), !dbg !10245
  store %struct.spi_transfer** %xferp, %struct.spi_transfer*** %xferp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer*** %xferp.addr, metadata !10246, metadata !DIExpression()), !dbg !10247
  store i64 %maxsize, i64* %maxsize.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %maxsize.addr, metadata !10248, metadata !DIExpression()), !dbg !10249
  store i32 %gfp, i32* %gfp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gfp.addr, metadata !10250, metadata !DIExpression()), !dbg !10251
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !10252, metadata !DIExpression()), !dbg !10253
  %0 = load %struct.spi_transfer**, %struct.spi_transfer*** %xferp.addr, align 8, !dbg !10254
  %1 = load %struct.spi_transfer*, %struct.spi_transfer** %0, align 8, !dbg !10255
  store %struct.spi_transfer* %1, %struct.spi_transfer** %xfer, align 8, !dbg !10253
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfers, metadata !10256, metadata !DIExpression()), !dbg !10257
  call void @llvm.dbg.declare(metadata %struct.spi_replaced_transfers** %srt, metadata !10258, metadata !DIExpression()), !dbg !10259
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !10260, metadata !DIExpression()), !dbg !10261
  call void @llvm.dbg.declare(metadata i64* %count, metadata !10262, metadata !DIExpression()), !dbg !10263
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10264, metadata !DIExpression()), !dbg !10265
  %2 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10266
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %2, i32 0, i32 2, !dbg !10266
  %3 = load i32, i32* %len, align 8, !dbg !10266
  %conv = zext i32 %3 to i64, !dbg !10266
  %4 = load i64, i64* %maxsize.addr, align 8, !dbg !10266
  %add = add i64 %conv, %4, !dbg !10266
  %sub = sub i64 %add, 1, !dbg !10266
  %5 = load i64, i64* %maxsize.addr, align 8, !dbg !10266
  %div = udiv i64 %sub, %5, !dbg !10266
  store i64 %div, i64* %count, align 8, !dbg !10267
  %6 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10268
  %7 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10269
  %8 = load i64, i64* %count, align 8, !dbg !10270
  %9 = load i32, i32* %gfp.addr, align 4, !dbg !10271
  %call = call %struct.spi_replaced_transfers* @spi_replace_transfers(%struct.spi_message* %6, %struct.spi_transfer* %7, i64 1, i64 %8, void (%struct.spi_controller*, %struct.spi_message*, %struct.spi_replaced_transfers*)* null, i64 0, i32 %9) #11, !dbg !10272
  store %struct.spi_replaced_transfers* %call, %struct.spi_replaced_transfers** %srt, align 8, !dbg !10273
  %10 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %srt, align 8, !dbg !10274
  %11 = bitcast %struct.spi_replaced_transfers* %10 to i8*, !dbg !10274
  %call1 = call zeroext i1 @IS_ERR(i8* %11) #11, !dbg !10276
  br i1 %call1, label %if.then, label %if.end, !dbg !10277

if.then:                                          ; preds = %entry
  %12 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %srt, align 8, !dbg !10278
  %13 = bitcast %struct.spi_replaced_transfers* %12 to i8*, !dbg !10278
  %call2 = call i64 @PTR_ERR(i8* %13) #11, !dbg !10279
  %conv3 = trunc i64 %call2 to i32, !dbg !10279
  store i32 %conv3, i32* %retval, align 4, !dbg !10280
  br label %return, !dbg !10280

if.end:                                           ; preds = %entry
  %14 = load %struct.spi_replaced_transfers*, %struct.spi_replaced_transfers** %srt, align 8, !dbg !10281
  %inserted_transfers = getelementptr inbounds %struct.spi_replaced_transfers, %struct.spi_replaced_transfers* %14, i32 0, i32 5, !dbg !10282
  %arraydecay = getelementptr inbounds [0 x %struct.spi_transfer], [0 x %struct.spi_transfer]* %inserted_transfers, i64 0, i64 0, !dbg !10281
  store %struct.spi_transfer* %arraydecay, %struct.spi_transfer** %xfers, align 8, !dbg !10283
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x357, metadata !10284, metadata !DIExpression()), !dbg !10286
  %15 = load i64, i64* %maxsize.addr, align 8, !dbg !10286
  store i64 %15, i64* %__UNIQUE_ID___x357, align 8, !dbg !10286
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y358, metadata !10287, metadata !DIExpression()), !dbg !10286
  %16 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10286
  %arrayidx = getelementptr %struct.spi_transfer, %struct.spi_transfer* %16, i64 0, !dbg !10286
  %len4 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx, i32 0, i32 2, !dbg !10286
  %17 = load i32, i32* %len4, align 8, !dbg !10286
  %conv5 = zext i32 %17 to i64, !dbg !10286
  store i64 %conv5, i64* %__UNIQUE_ID___y358, align 8, !dbg !10286
  %18 = load i64, i64* %__UNIQUE_ID___x357, align 8, !dbg !10286
  %19 = load i64, i64* %__UNIQUE_ID___y358, align 8, !dbg !10286
  %cmp = icmp ult i64 %18, %19, !dbg !10286
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10286

cond.true:                                        ; preds = %if.end
  %20 = load i64, i64* %__UNIQUE_ID___x357, align 8, !dbg !10286
  br label %cond.end, !dbg !10286

cond.false:                                       ; preds = %if.end
  %21 = load i64, i64* %__UNIQUE_ID___y358, align 8, !dbg !10286
  br label %cond.end, !dbg !10286

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %20, %cond.true ], [ %21, %cond.false ], !dbg !10286
  store i64 %cond, i64* %tmp, align 8, !dbg !10286
  %22 = load i64, i64* %tmp, align 8, !dbg !10286
  %conv7 = trunc i64 %22 to i32, !dbg !10288
  %23 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10289
  %arrayidx8 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %23, i64 0, !dbg !10289
  %len9 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx8, i32 0, i32 2, !dbg !10290
  store i32 %conv7, i32* %len9, align 8, !dbg !10291
  store i64 1, i64* %i, align 8, !dbg !10292
  %24 = load i64, i64* %maxsize.addr, align 8, !dbg !10294
  store i64 %24, i64* %offset, align 8, !dbg !10295
  br label %for.cond, !dbg !10296

for.cond:                                         ; preds = %for.inc, %cond.end
  %25 = load i64, i64* %i, align 8, !dbg !10297
  %26 = load i64, i64* %count, align 8, !dbg !10299
  %cmp10 = icmp ult i64 %25, %26, !dbg !10300
  br i1 %cmp10, label %for.body, label %for.end, !dbg !10301

for.body:                                         ; preds = %for.cond
  %27 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10302
  %28 = load i64, i64* %i, align 8, !dbg !10305
  %arrayidx12 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %27, i64 %28, !dbg !10302
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx12, i32 0, i32 1, !dbg !10306
  %29 = load i8*, i8** %rx_buf, align 8, !dbg !10306
  %tobool = icmp ne i8* %29, null, !dbg !10302
  br i1 %tobool, label %if.then13, label %if.end16, !dbg !10307

if.then13:                                        ; preds = %for.body
  %30 = load i64, i64* %offset, align 8, !dbg !10308
  %31 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10309
  %32 = load i64, i64* %i, align 8, !dbg !10310
  %arrayidx14 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %31, i64 %32, !dbg !10309
  %rx_buf15 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx14, i32 0, i32 1, !dbg !10311
  %33 = load i8*, i8** %rx_buf15, align 8, !dbg !10312
  %add.ptr = getelementptr i8, i8* %33, i64 %30, !dbg !10312
  store i8* %add.ptr, i8** %rx_buf15, align 8, !dbg !10312
  br label %if.end16, !dbg !10309

if.end16:                                         ; preds = %if.then13, %for.body
  %34 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10313
  %35 = load i64, i64* %i, align 8, !dbg !10315
  %arrayidx17 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %34, i64 %35, !dbg !10313
  %rx_dma = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx17, i32 0, i32 4, !dbg !10316
  %36 = load i64, i64* %rx_dma, align 8, !dbg !10316
  %tobool18 = icmp ne i64 %36, 0, !dbg !10313
  br i1 %tobool18, label %if.then19, label %if.end23, !dbg !10317

if.then19:                                        ; preds = %if.end16
  %37 = load i64, i64* %offset, align 8, !dbg !10318
  %38 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10319
  %39 = load i64, i64* %i, align 8, !dbg !10320
  %arrayidx20 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %38, i64 %39, !dbg !10319
  %rx_dma21 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx20, i32 0, i32 4, !dbg !10321
  %40 = load i64, i64* %rx_dma21, align 8, !dbg !10322
  %add22 = add i64 %40, %37, !dbg !10322
  store i64 %add22, i64* %rx_dma21, align 8, !dbg !10322
  br label %if.end23, !dbg !10319

if.end23:                                         ; preds = %if.then19, %if.end16
  %41 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10323
  %42 = load i64, i64* %i, align 8, !dbg !10325
  %arrayidx24 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %41, i64 %42, !dbg !10323
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx24, i32 0, i32 0, !dbg !10326
  %43 = load i8*, i8** %tx_buf, align 8, !dbg !10326
  %tobool25 = icmp ne i8* %43, null, !dbg !10323
  br i1 %tobool25, label %if.then26, label %if.end30, !dbg !10327

if.then26:                                        ; preds = %if.end23
  %44 = load i64, i64* %offset, align 8, !dbg !10328
  %45 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10329
  %46 = load i64, i64* %i, align 8, !dbg !10330
  %arrayidx27 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %45, i64 %46, !dbg !10329
  %tx_buf28 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx27, i32 0, i32 0, !dbg !10331
  %47 = load i8*, i8** %tx_buf28, align 8, !dbg !10332
  %add.ptr29 = getelementptr i8, i8* %47, i64 %44, !dbg !10332
  store i8* %add.ptr29, i8** %tx_buf28, align 8, !dbg !10332
  br label %if.end30, !dbg !10329

if.end30:                                         ; preds = %if.then26, %if.end23
  %48 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10333
  %49 = load i64, i64* %i, align 8, !dbg !10335
  %arrayidx31 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %48, i64 %49, !dbg !10333
  %tx_dma = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx31, i32 0, i32 3, !dbg !10336
  %50 = load i64, i64* %tx_dma, align 8, !dbg !10336
  %tobool32 = icmp ne i64 %50, 0, !dbg !10333
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !10337

if.then33:                                        ; preds = %if.end30
  %51 = load i64, i64* %offset, align 8, !dbg !10338
  %52 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10339
  %53 = load i64, i64* %i, align 8, !dbg !10340
  %arrayidx34 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %52, i64 %53, !dbg !10339
  %tx_dma35 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx34, i32 0, i32 3, !dbg !10341
  %54 = load i64, i64* %tx_dma35, align 8, !dbg !10342
  %add36 = add i64 %54, %51, !dbg !10342
  store i64 %add36, i64* %tx_dma35, align 8, !dbg !10342
  br label %if.end37, !dbg !10339

if.end37:                                         ; preds = %if.then33, %if.end30
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___x359, metadata !10343, metadata !DIExpression()), !dbg !10345
  %55 = load i64, i64* %maxsize.addr, align 8, !dbg !10345
  store i64 %55, i64* %__UNIQUE_ID___x359, align 8, !dbg !10345
  call void @llvm.dbg.declare(metadata i64* %__UNIQUE_ID___y360, metadata !10346, metadata !DIExpression()), !dbg !10345
  %56 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10345
  %57 = load i64, i64* %i, align 8, !dbg !10345
  %arrayidx38 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %56, i64 %57, !dbg !10345
  %len39 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx38, i32 0, i32 2, !dbg !10345
  %58 = load i32, i32* %len39, align 8, !dbg !10345
  %conv40 = zext i32 %58 to i64, !dbg !10345
  %59 = load i64, i64* %offset, align 8, !dbg !10345
  %sub41 = sub i64 %conv40, %59, !dbg !10345
  store i64 %sub41, i64* %__UNIQUE_ID___y360, align 8, !dbg !10345
  %60 = load i64, i64* %__UNIQUE_ID___x359, align 8, !dbg !10345
  %61 = load i64, i64* %__UNIQUE_ID___y360, align 8, !dbg !10345
  %cmp43 = icmp ult i64 %60, %61, !dbg !10345
  br i1 %cmp43, label %cond.true45, label %cond.false46, !dbg !10345

cond.true45:                                      ; preds = %if.end37
  %62 = load i64, i64* %__UNIQUE_ID___x359, align 8, !dbg !10345
  br label %cond.end47, !dbg !10345

cond.false46:                                     ; preds = %if.end37
  %63 = load i64, i64* %__UNIQUE_ID___y360, align 8, !dbg !10345
  br label %cond.end47, !dbg !10345

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi i64 [ %62, %cond.true45 ], [ %63, %cond.false46 ], !dbg !10345
  store i64 %cond48, i64* %tmp42, align 8, !dbg !10345
  %64 = load i64, i64* %tmp42, align 8, !dbg !10345
  %conv49 = trunc i64 %64 to i32, !dbg !10347
  %65 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10348
  %66 = load i64, i64* %i, align 8, !dbg !10349
  %arrayidx50 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %65, i64 %66, !dbg !10348
  %len51 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx50, i32 0, i32 2, !dbg !10350
  store i32 %conv49, i32* %len51, align 8, !dbg !10351
  br label %for.inc, !dbg !10352

for.inc:                                          ; preds = %cond.end47
  %67 = load i64, i64* %maxsize.addr, align 8, !dbg !10353
  %68 = load i64, i64* %offset, align 8, !dbg !10354
  %add52 = add i64 %68, %67, !dbg !10354
  store i64 %add52, i64* %offset, align 8, !dbg !10354
  %69 = load i64, i64* %i, align 8, !dbg !10355
  %inc = add i64 %69, 1, !dbg !10355
  store i64 %inc, i64* %i, align 8, !dbg !10355
  br label %for.cond, !dbg !10356, !llvm.loop !10357

for.end:                                          ; preds = %for.cond
  %70 = load %struct.spi_transfer*, %struct.spi_transfer** %xfers, align 8, !dbg !10359
  %71 = load i64, i64* %count, align 8, !dbg !10360
  %sub53 = sub i64 %71, 1, !dbg !10361
  %arrayidx54 = getelementptr %struct.spi_transfer, %struct.spi_transfer* %70, i64 %sub53, !dbg !10359
  %72 = load %struct.spi_transfer**, %struct.spi_transfer*** %xferp.addr, align 8, !dbg !10362
  store %struct.spi_transfer* %arrayidx54, %struct.spi_transfer** %72, align 8, !dbg !10363
  br label %do.body, !dbg !10364

do.body:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10365, metadata !DIExpression()), !dbg !10366
  br label %do.body55, !dbg !10366

do.body55:                                        ; preds = %do.body
  br label %do.body56, !dbg !10367

do.body56:                                        ; preds = %do.body55
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10368, metadata !DIExpression()), !dbg !10370
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10371, metadata !DIExpression()), !dbg !10370
  %cmp57 = icmp eq i64* %__dummy, %__dummy2, !dbg !10370
  %conv58 = zext i1 %cmp57 to i32, !dbg !10370
  store i32 1, i32* %tmp59, align 4, !dbg !10370
  %73 = load i32, i32* %tmp59, align 4, !dbg !10370
  br label %do.body60, !dbg !10372

do.body60:                                        ; preds = %do.body56
  br label %do.body61, !dbg !10373

do.body61:                                        ; preds = %do.body60
  br label %do.body62, !dbg !10374

do.body62:                                        ; preds = %do.body61
  call void @llvm.dbg.declare(metadata i64* %__dummy63, metadata !10376, metadata !DIExpression()), !dbg !10379
  call void @llvm.dbg.declare(metadata i64* %__dummy264, metadata !10380, metadata !DIExpression()), !dbg !10379
  %cmp65 = icmp eq i64* %__dummy63, %__dummy264, !dbg !10379
  %conv66 = zext i1 %cmp65 to i32, !dbg !10379
  store i32 1, i32* %tmp67, align 4, !dbg !10379
  %74 = load i32, i32* %tmp67, align 4, !dbg !10379
  %call68 = call i64 @arch_local_irq_save() #11, !dbg !10381
  store i64 %call68, i64* %flags, align 8, !dbg !10381
  br label %do.end, !dbg !10381

do.end:                                           ; preds = %do.body62
  br label %do.end69, !dbg !10374

do.end69:                                         ; preds = %do.end
  br label %do.body70, !dbg !10373

do.body70:                                        ; preds = %do.end69
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10382, !srcloc !10383
  br label %do.body71, !dbg !10382

do.body71:                                        ; preds = %do.body70
  %75 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10384
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %75, i32 0, i32 59, !dbg !10384
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics, i32 0, i32 0, !dbg !10384
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %76 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10385
  %77 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %76, i32 0, i32 0, !dbg !10386
  %rlock.i = bitcast %union.anon* %77 to %struct.raw_spinlock*, !dbg !10386
  br label %do.end73, !dbg !10384

do.end73:                                         ; preds = %do.body71
  br label %do.end74, !dbg !10382

do.end74:                                         ; preds = %do.end73
  br label %do.end75, !dbg !10373

do.end75:                                         ; preds = %do.end74
  br label %do.end76, !dbg !10372

do.end76:                                         ; preds = %do.end75
  br label %do.end77, !dbg !10367

do.end77:                                         ; preds = %do.end76
  %78 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10366
  %statistics78 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %78, i32 0, i32 59, !dbg !10366
  %transfers_split_maxsize = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics78, i32 0, i32 12, !dbg !10366
  %79 = load i64, i64* %transfers_split_maxsize, align 8, !dbg !10366
  %add79 = add i64 %79, 1, !dbg !10366
  store i64 %add79, i64* %transfers_split_maxsize, align 8, !dbg !10366
  %80 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10366
  %statistics80 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %80, i32 0, i32 59, !dbg !10366
  %lock81 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics80, i32 0, i32 0, !dbg !10366
  %81 = load i64, i64* %flags, align 8, !dbg !10366
  store %struct.spinlock* %lock81, %struct.spinlock** %lock.addr.i123, align 8
  store i64 %81, i64* %flags.addr.i124, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !10387
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !10387
  store i32 1, i32* %tmp.i125, align 4, !dbg !10387
  %82 = load i32, i32* %tmp.i125, align 4, !dbg !10387
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !10388
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !10388
  store i32 1, i32* %tmp8.i126, align 4, !dbg !10388
  %83 = load i32, i32* %tmp8.i126, align 4, !dbg !10388
  %84 = load i64, i64* %flags.addr.i124, align 8, !dbg !10389
  call void @arch_local_irq_restore(i64 %84) #12, !dbg !10389
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10390, !srcloc !5559
  %85 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i123, align 8, !dbg !10391
  %86 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %85, i32 0, i32 0, !dbg !10391
  %rlock.i127 = bitcast %union.anon* %86 to %struct.raw_spinlock*, !dbg !10391
  br label %do.end82, !dbg !10366

do.end82:                                         ; preds = %do.end77
  br label %do.body83, !dbg !10392

do.body83:                                        ; preds = %do.end82
  call void @llvm.dbg.declare(metadata i64* %flags84, metadata !10393, metadata !DIExpression()), !dbg !10394
  br label %do.body85, !dbg !10394

do.body85:                                        ; preds = %do.body83
  br label %do.body86, !dbg !10395

do.body86:                                        ; preds = %do.body85
  call void @llvm.dbg.declare(metadata i64* %__dummy87, metadata !10396, metadata !DIExpression()), !dbg !10398
  call void @llvm.dbg.declare(metadata i64* %__dummy288, metadata !10399, metadata !DIExpression()), !dbg !10398
  %cmp89 = icmp eq i64* %__dummy87, %__dummy288, !dbg !10398
  %conv90 = zext i1 %cmp89 to i32, !dbg !10398
  store i32 1, i32* %tmp91, align 4, !dbg !10398
  %87 = load i32, i32* %tmp91, align 4, !dbg !10398
  br label %do.body92, !dbg !10400

do.body92:                                        ; preds = %do.body86
  br label %do.body93, !dbg !10401

do.body93:                                        ; preds = %do.body92
  br label %do.body94, !dbg !10402

do.body94:                                        ; preds = %do.body93
  call void @llvm.dbg.declare(metadata i64* %__dummy95, metadata !10404, metadata !DIExpression()), !dbg !10407
  call void @llvm.dbg.declare(metadata i64* %__dummy296, metadata !10408, metadata !DIExpression()), !dbg !10407
  %cmp97 = icmp eq i64* %__dummy95, %__dummy296, !dbg !10407
  %conv98 = zext i1 %cmp97 to i32, !dbg !10407
  store i32 1, i32* %tmp99, align 4, !dbg !10407
  %88 = load i32, i32* %tmp99, align 4, !dbg !10407
  %call100 = call i64 @arch_local_irq_save() #11, !dbg !10409
  store i64 %call100, i64* %flags84, align 8, !dbg !10409
  br label %do.end101, !dbg !10409

do.end101:                                        ; preds = %do.body94
  br label %do.end102, !dbg !10402

do.end102:                                        ; preds = %do.end101
  br label %do.body103, !dbg !10401

do.body103:                                       ; preds = %do.end102
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10410, !srcloc !10411
  br label %do.body104, !dbg !10410

do.body104:                                       ; preds = %do.body103
  %89 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10412
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %89, i32 0, i32 1, !dbg !10412
  %90 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !10412
  %statistics105 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %90, i32 0, i32 16, !dbg !10412
  %lock106 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics105, i32 0, i32 0, !dbg !10412
  store %struct.spinlock* %lock106, %struct.spinlock** %lock.addr.i128, align 8
  %91 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i128, align 8, !dbg !10413
  %92 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %91, i32 0, i32 0, !dbg !10414
  %rlock.i129 = bitcast %union.anon* %92 to %struct.raw_spinlock*, !dbg !10414
  br label %do.end108, !dbg !10412

do.end108:                                        ; preds = %do.body104
  br label %do.end109, !dbg !10410

do.end109:                                        ; preds = %do.end108
  br label %do.end110, !dbg !10401

do.end110:                                        ; preds = %do.end109
  br label %do.end111, !dbg !10400

do.end111:                                        ; preds = %do.end110
  br label %do.end112, !dbg !10395

do.end112:                                        ; preds = %do.end111
  %93 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10394
  %spi113 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %93, i32 0, i32 1, !dbg !10394
  %94 = load %struct.spi_device*, %struct.spi_device** %spi113, align 8, !dbg !10394
  %statistics114 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %94, i32 0, i32 16, !dbg !10394
  %transfers_split_maxsize115 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics114, i32 0, i32 12, !dbg !10394
  %95 = load i64, i64* %transfers_split_maxsize115, align 8, !dbg !10394
  %add116 = add i64 %95, 1, !dbg !10394
  store i64 %add116, i64* %transfers_split_maxsize115, align 8, !dbg !10394
  %96 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !10394
  %spi117 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %96, i32 0, i32 1, !dbg !10394
  %97 = load %struct.spi_device*, %struct.spi_device** %spi117, align 8, !dbg !10394
  %statistics118 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %97, i32 0, i32 16, !dbg !10394
  %lock119 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics118, i32 0, i32 0, !dbg !10394
  %98 = load i64, i64* %flags84, align 8, !dbg !10394
  store %struct.spinlock* %lock119, %struct.spinlock** %lock.addr.i121, align 8
  store i64 %98, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !10415
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !10415
  store i32 1, i32* %tmp.i, align 4, !dbg !10415
  %99 = load i32, i32* %tmp.i, align 4, !dbg !10415
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !10416
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !10416
  store i32 1, i32* %tmp8.i, align 4, !dbg !10416
  %100 = load i32, i32* %tmp8.i, align 4, !dbg !10416
  %101 = load i64, i64* %flags.addr.i, align 8, !dbg !10417
  call void @arch_local_irq_restore(i64 %101) #12, !dbg !10417
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10418, !srcloc !5559
  %102 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i121, align 8, !dbg !10419
  %103 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %102, i32 0, i32 0, !dbg !10419
  %rlock.i122 = bitcast %union.anon* %103 to %struct.raw_spinlock*, !dbg !10419
  br label %do.end120, !dbg !10394

do.end120:                                        ; preds = %do.end112
  store i32 0, i32* %retval, align 4, !dbg !10420
  br label %return, !dbg !10420

return:                                           ; preds = %do.end120, %if.then
  %104 = load i32, i32* %retval, align 4, !dbg !10421
  ret i32 %104, !dbg !10421
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @gpio_is_valid(i32 %number) #0 !dbg !10422 {
entry:
  %number.addr = alloca i32, align 4
  store i32 %number, i32* %number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %number.addr, metadata !10426, metadata !DIExpression()), !dbg !10427
  %0 = load i32, i32* %number.addr, align 4, !dbg !10428
  %cmp = icmp sge i32 %0, 0, !dbg !10429
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !10430

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %number.addr, align 4, !dbg !10431
  %cmp1 = icmp slt i32 %1, 512, !dbg !10432
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !10433
  ret i1 %2, !dbg !10434
}

; Function Attrs: cold noredzone
declare dso_local void @_dev_warn(%struct.device*, i8*, ...) #4

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_validate_bits_per_word(%struct.spi_controller* %ctlr, i8 zeroext %bits_per_word) #0 !dbg !10435 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %bits_per_word.addr = alloca i8, align 1
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !10438, metadata !DIExpression()), !dbg !10439
  store i8 %bits_per_word, i8* %bits_per_word.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %bits_per_word.addr, metadata !10440, metadata !DIExpression()), !dbg !10441
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10442
  %bits_per_word_mask = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 7, !dbg !10444
  %1 = load i32, i32* %bits_per_word_mask, align 8, !dbg !10444
  %tobool = icmp ne i32 %1, 0, !dbg !10442
  br i1 %tobool, label %if.then, label %if.end9, !dbg !10445

if.then:                                          ; preds = %entry
  %2 = load i8, i8* %bits_per_word.addr, align 1, !dbg !10446
  %conv = zext i8 %2 to i32, !dbg !10446
  %cmp = icmp sgt i32 %conv, 32, !dbg !10449
  br i1 %cmp, label %if.then2, label %if.end, !dbg !10450

if.then2:                                         ; preds = %if.then
  store i32 -22, i32* %retval, align 4, !dbg !10451
  br label %return, !dbg !10451

if.end:                                           ; preds = %if.then
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10452
  %bits_per_word_mask3 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %3, i32 0, i32 7, !dbg !10454
  %4 = load i32, i32* %bits_per_word_mask3, align 8, !dbg !10454
  %conv4 = zext i32 %4 to i64, !dbg !10452
  %5 = load i8, i8* %bits_per_word.addr, align 1, !dbg !10455
  %conv5 = zext i8 %5 to i32, !dbg !10455
  %sub = sub i32 %conv5, 1, !dbg !10455
  %sh_prom = zext i32 %sub to i64, !dbg !10455
  %shl = shl i64 1, %sh_prom, !dbg !10455
  %and = and i64 %conv4, %shl, !dbg !10456
  %tobool6 = icmp ne i64 %and, 0, !dbg !10456
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !10457

if.then7:                                         ; preds = %if.end
  store i32 -22, i32* %retval, align 4, !dbg !10458
  br label %return, !dbg !10458

if.end8:                                          ; preds = %if.end
  br label %if.end9, !dbg !10459

if.end9:                                          ; preds = %if.end8, %entry
  store i32 0, i32* %retval, align 4, !dbg !10460
  br label %return, !dbg !10460

return:                                           ; preds = %if.end9, %if.then7, %if.then2
  %6 = load i32, i32* %retval, align 4, !dbg !10461
  ret i32 %6, !dbg !10461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_get_sync(%struct.device* %dev) #0 !dbg !10462 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10465
  %call = call i32 @__pm_runtime_resume(%struct.device* %0, i32 4) #11, !dbg !10466
  ret i32 %call, !dbg !10467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_put_noidle(%struct.device* %dev) #0 !dbg !10468 {
entry:
  %v.addr.i5.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i5.i.i.i, metadata !10469, metadata !DIExpression()), !dbg !10475
  %old.addr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %old.addr.i.i.i.i, metadata !10489, metadata !DIExpression()), !dbg !10490
  %new.addr.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %new.addr.i.i.i.i, metadata !10491, metadata !DIExpression()), !dbg !10492
  %success.i.i.i.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success.i.i.i.i, metadata !10493, metadata !DIExpression()), !dbg !10495
  %_old.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %_old.i.i.i.i, metadata !10496, metadata !DIExpression()), !dbg !10495
  %__old.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__old.i.i.i.i, metadata !10497, metadata !DIExpression()), !dbg !10495
  %__new.i.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %__new.i.i.i.i, metadata !10498, metadata !DIExpression()), !dbg !10495
  %__ptr.i.i.i.i = alloca i32*, align 8
  call void @llvm.dbg.declare(metadata i32** %__ptr.i.i.i.i, metadata !10499, metadata !DIExpression()), !dbg !10495
  %tmp.i.i.i.i = alloca i64, align 8
  %v.addr.i.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i.i, metadata !10500, metadata !DIExpression()), !dbg !10506
  %v.addr.i.i.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i.i.i, metadata !10508, metadata !DIExpression()), !dbg !10509
  %a.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i.i, metadata !10510, metadata !DIExpression()), !dbg !10511
  %u.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i.i, metadata !10512, metadata !DIExpression()), !dbg !10513
  %c.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %c.i.i.i, metadata !10514, metadata !DIExpression()), !dbg !10515
  %v.addr.i1.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i1.i, metadata !10516, metadata !DIExpression()), !dbg !10517
  %a.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i.i, metadata !10518, metadata !DIExpression()), !dbg !10519
  %u.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i.i, metadata !10520, metadata !DIExpression()), !dbg !10521
  %v.addr.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i.i, metadata !10522, metadata !DIExpression()), !dbg !10530
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !10532, metadata !DIExpression()), !dbg !10533
  %v.addr.i = alloca %struct.atomic_t*, align 8
  call void @llvm.dbg.declare(metadata %struct.atomic_t** %v.addr.i, metadata !10534, metadata !DIExpression()), !dbg !10535
  %a.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr.i, metadata !10536, metadata !DIExpression()), !dbg !10537
  %u.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %u.addr.i, metadata !10538, metadata !DIExpression()), !dbg !10539
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10540, metadata !DIExpression()), !dbg !10541
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10542
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10543
  %usage_count = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 13, !dbg !10544
  store %struct.atomic_t* %usage_count, %struct.atomic_t** %v.addr.i, align 8
  store i32 -1, i32* %a.addr.i, align 4
  store i32 0, i32* %u.addr.i, align 4
  %1 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10545
  %2 = bitcast %struct.atomic_t* %1 to i8*, !dbg !10545
  store i8* %2, i8** %v.addr.i.i, align 8
  store i64 4, i64* %size.addr.i.i, align 8
  %3 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10546
  %4 = load i64, i64* %size.addr.i.i, align 8, !dbg !10547
  %conv.i.i = trunc i64 %4 to i32, !dbg !10547
  %call.i.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i.i) #12, !dbg !10548
  %5 = load i8*, i8** %v.addr.i.i, align 8, !dbg !10549
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !10549
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !10549
  %7 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i, align 8, !dbg !10550
  %8 = load i32, i32* %a.addr.i, align 4, !dbg !10551
  %9 = load i32, i32* %u.addr.i, align 4, !dbg !10552
  store %struct.atomic_t* %7, %struct.atomic_t** %v.addr.i1.i, align 8
  store i32 %8, i32* %a.addr.i.i, align 4
  store i32 %9, i32* %u.addr.i.i, align 4
  %10 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i1.i, align 8, !dbg !10553
  %11 = load i32, i32* %a.addr.i.i, align 4, !dbg !10554
  %12 = load i32, i32* %u.addr.i.i, align 4, !dbg !10555
  store %struct.atomic_t* %10, %struct.atomic_t** %v.addr.i.i.i, align 8
  store i32 %11, i32* %a.addr.i.i.i, align 4
  store i32 %12, i32* %u.addr.i.i.i, align 4
  %13 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !10556
  store %struct.atomic_t* %13, %struct.atomic_t** %v.addr.i.i.i.i, align 8
  %14 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i.i, align 8, !dbg !10557
  %counter.i.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %14, i32 0, i32 0, !dbg !10557
  %15 = load volatile i32, i32* %counter.i.i.i.i, align 4, !dbg !10557
  store i32 %15, i32* %c.i.i.i, align 4, !dbg !10515
  br label %do.body.i.i.i, !dbg !10558

do.body.i.i.i:                                    ; preds = %arch_atomic_try_cmpxchg.exit.i.i.i, %entry
  %16 = load i32, i32* %c.i.i.i, align 4, !dbg !10559
  %17 = load i32, i32* %u.addr.i.i.i, align 4, !dbg !10559
  %cmp.i.i.i = icmp eq i32 %16, %17, !dbg !10559
  %lnot.i.i.i = xor i1 %cmp.i.i.i, true, !dbg !10559
  %lnot.ext.i.i.i = zext i1 %cmp.i.i.i to i32, !dbg !10559
  %conv.i.i.i = sext i32 %lnot.ext.i.i.i to i64, !dbg !10559
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %if.end.i.i.i, !dbg !10562

if.then.i.i.i:                                    ; preds = %do.body.i.i.i
  br label %atomic_add_unless.exit, !dbg !10563

if.end.i.i.i:                                     ; preds = %do.body.i.i.i
  %18 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i.i.i, align 8, !dbg !10564
  %19 = load i32, i32* %c.i.i.i, align 4, !dbg !10565
  %20 = load i32, i32* %a.addr.i.i.i, align 4, !dbg !10566
  %add.i.i.i = add i32 %19, %20, !dbg !10567
  store %struct.atomic_t* %18, %struct.atomic_t** %v.addr.i5.i.i.i, align 8
  store i32* %c.i.i.i, i32** %old.addr.i.i.i.i, align 8
  store i32 %add.i.i.i, i32* %new.addr.i.i.i.i, align 4
  %21 = load i32*, i32** %old.addr.i.i.i.i, align 8, !dbg !10495
  store i32* %21, i32** %_old.i.i.i.i, align 8, !dbg !10495
  %22 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !10495
  %23 = load i32, i32* %22, align 4, !dbg !10495
  store i32 %23, i32* %__old.i.i.i.i, align 4, !dbg !10495
  %24 = load i32, i32* %new.addr.i.i.i.i, align 4, !dbg !10495
  store i32 %24, i32* %__new.i.i.i.i, align 4, !dbg !10495
  %25 = load %struct.atomic_t*, %struct.atomic_t** %v.addr.i5.i.i.i, align 8, !dbg !10495
  %counter.i6.i.i.i = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %25, i32 0, i32 0, !dbg !10495
  store i32* %counter.i6.i.i.i, i32** %__ptr.i.i.i.i, align 8, !dbg !10495
  %26 = load i32*, i32** %__ptr.i.i.i.i, align 8, !dbg !10495
  %27 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !10495
  %28 = load i32, i32* %__new.i.i.i.i, align 4, !dbg !10495
  %29 = call { i8, i32 } asm sideeffect "cmpxchgl $3, $1\0A\09/* output condition code z*/\0A", "={@ccz},=*m,={ax},r,*m,2,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %26, i32 %28, i32* %26, i32 %27) #7, !dbg !10495, !srcloc !10568
  %asmresult.i.i.i.i = extractvalue { i8, i32 } %29, 0, !dbg !10495
  %asmresult1.i.i.i.i = extractvalue { i8, i32 } %29, 1, !dbg !10495
  store i8 %asmresult.i.i.i.i, i8* %success.i.i.i.i, align 1, !dbg !10495
  store i32 %asmresult1.i.i.i.i, i32* %__old.i.i.i.i, align 4, !dbg !10495
  %30 = load i8, i8* %success.i.i.i.i, align 1, !dbg !10569
  %tobool.i.i.i.i = trunc i8 %30 to i1, !dbg !10569
  %lnot.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !10569
  %lnot3.i.i.i.i = xor i1 %tobool.i.i.i.i, true, !dbg !10569
  %lnot.ext.i.i.i.i = zext i1 %lnot3.i.i.i.i to i32, !dbg !10569
  %conv.i.i.i.i = sext i32 %lnot.ext.i.i.i.i to i64, !dbg !10569
  br i1 %lnot3.i.i.i.i, label %if.then.i.i.i.i, label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !10495

if.then.i.i.i.i:                                  ; preds = %if.end.i.i.i
  %31 = load i32, i32* %__old.i.i.i.i, align 4, !dbg !10569
  %32 = load i32*, i32** %_old.i.i.i.i, align 8, !dbg !10569
  store i32 %31, i32* %32, align 4, !dbg !10569
  br label %arch_atomic_try_cmpxchg.exit.i.i.i, !dbg !10569

arch_atomic_try_cmpxchg.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %if.end.i.i.i
  %33 = load i8, i8* %success.i.i.i.i, align 1, !dbg !10495
  %tobool5.i.i.i.i = trunc i8 %33 to i1, !dbg !10495
  %lnot6.i.i.i.i = xor i1 %tobool5.i.i.i.i, true, !dbg !10495
  %lnot.ext9.i.i.i.i = zext i1 %tobool5.i.i.i.i to i32, !dbg !10495
  %conv10.i.i.i.i = sext i32 %lnot.ext9.i.i.i.i to i64, !dbg !10495
  store i64 %conv10.i.i.i.i, i64* %tmp.i.i.i.i, align 8, !dbg !10569
  %34 = load i64, i64* %tmp.i.i.i.i, align 8, !dbg !10495
  %tobool11.i.i.i.i = icmp ne i64 %34, 0, !dbg !10571
  %lnot3.i.i.i = xor i1 %tobool11.i.i.i.i, true, !dbg !10572
  br i1 %lnot3.i.i.i, label %do.body.i.i.i, label %atomic_add_unless.exit, !dbg !10573, !llvm.loop !10574

atomic_add_unless.exit:                           ; preds = %if.then.i.i.i, %arch_atomic_try_cmpxchg.exit.i.i.i
  %35 = load i32, i32* %c.i.i.i, align 4, !dbg !10576
  %36 = load i32, i32* %u.addr.i.i, align 4, !dbg !10577
  %cmp.i.i = icmp ne i32 %35, %36, !dbg !10578
  ret void, !dbg !10579
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_set_cs(%struct.spi_device* %spi, i1 zeroext %enable) #0 !dbg !10580 {
entry:
  %spi.addr = alloca %struct.spi_device*, align 8
  %enable.addr = alloca i8, align 1
  %enable1 = alloca i8, align 1
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !10581, metadata !DIExpression()), !dbg !10582
  %frombool = zext i1 %enable to i8
  store i8 %frombool, i8* %enable.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %enable.addr, metadata !10583, metadata !DIExpression()), !dbg !10584
  call void @llvm.dbg.declare(metadata i8* %enable1, metadata !10585, metadata !DIExpression()), !dbg !10586
  %0 = load i8, i8* %enable.addr, align 1, !dbg !10587
  %tobool = trunc i8 %0 to i1, !dbg !10587
  %frombool1 = zext i1 %tobool to i8, !dbg !10586
  store i8 %frombool1, i8* %enable1, align 1, !dbg !10586
  %1 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10588
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 1, !dbg !10590
  %2 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !10590
  %last_cs_enable = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 36, !dbg !10591
  %3 = load i8, i8* %last_cs_enable, align 1, !dbg !10591
  %tobool2 = trunc i8 %3 to i1, !dbg !10591
  %conv = zext i1 %tobool2 to i32, !dbg !10588
  %4 = load i8, i8* %enable.addr, align 1, !dbg !10592
  %tobool3 = trunc i8 %4 to i1, !dbg !10592
  %conv4 = zext i1 %tobool3 to i32, !dbg !10592
  %cmp = icmp eq i32 %conv, %conv4, !dbg !10593
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10594

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10595
  %controller6 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %5, i32 0, i32 1, !dbg !10596
  %6 = load %struct.spi_controller*, %struct.spi_controller** %controller6, align 8, !dbg !10596
  %last_cs_mode_high = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 37, !dbg !10597
  %7 = load i8, i8* %last_cs_mode_high, align 8, !dbg !10597
  %tobool7 = trunc i8 %7 to i1, !dbg !10597
  %conv8 = zext i1 %tobool7 to i32, !dbg !10595
  %8 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10598
  %mode = getelementptr inbounds %struct.spi_device, %struct.spi_device* %8, i32 0, i32 7, !dbg !10599
  %9 = load i32, i32* %mode, align 8, !dbg !10599
  %and = and i32 %9, 4, !dbg !10600
  %cmp9 = icmp eq i32 %conv8, %and, !dbg !10601
  br i1 %cmp9, label %if.then, label %if.end, !dbg !10602

if.then:                                          ; preds = %land.lhs.true
  br label %if.end93, !dbg !10603

if.end:                                           ; preds = %land.lhs.true, %entry
  %10 = load i8, i8* %enable.addr, align 1, !dbg !10604
  %tobool11 = trunc i8 %10 to i1, !dbg !10604
  %11 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10605
  %controller12 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %11, i32 0, i32 1, !dbg !10606
  %12 = load %struct.spi_controller*, %struct.spi_controller** %controller12, align 8, !dbg !10606
  %last_cs_enable13 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 36, !dbg !10607
  %frombool14 = zext i1 %tobool11 to i8, !dbg !10608
  store i8 %frombool14, i8* %last_cs_enable13, align 1, !dbg !10608
  %13 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10609
  %mode15 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %13, i32 0, i32 7, !dbg !10610
  %14 = load i32, i32* %mode15, align 8, !dbg !10610
  %and16 = and i32 %14, 4, !dbg !10611
  %tobool17 = icmp ne i32 %and16, 0, !dbg !10609
  %15 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10612
  %controller18 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %15, i32 0, i32 1, !dbg !10613
  %16 = load %struct.spi_controller*, %struct.spi_controller** %controller18, align 8, !dbg !10613
  %last_cs_mode_high19 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 37, !dbg !10614
  %frombool20 = zext i1 %tobool17 to i8, !dbg !10615
  store i8 %frombool20, i8* %last_cs_mode_high19, align 8, !dbg !10615
  %17 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10616
  %controller21 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %17, i32 0, i32 1, !dbg !10618
  %18 = load %struct.spi_controller*, %struct.spi_controller** %controller21, align 8, !dbg !10618
  %set_cs_timing = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 19, !dbg !10619
  %19 = load i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)*, i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)** %set_cs_timing, align 8, !dbg !10619
  %tobool22 = icmp ne i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)* %19, null, !dbg !10616
  br i1 %tobool22, label %if.end30, label %if.then23, !dbg !10620

if.then23:                                        ; preds = %if.end
  %20 = load i8, i8* %enable1, align 1, !dbg !10621
  %tobool24 = trunc i8 %20 to i1, !dbg !10621
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !10624

if.then25:                                        ; preds = %if.then23
  %21 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10625
  %controller26 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %21, i32 0, i32 1, !dbg !10626
  %22 = load %struct.spi_controller*, %struct.spi_controller** %controller26, align 8, !dbg !10626
  %cs_setup = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %22, i32 0, i32 51, !dbg !10627
  %call = call i32 @spi_delay_exec(%struct.spi_delay* %cs_setup, %struct.spi_transfer* null) #11, !dbg !10628
  br label %if.end29, !dbg !10628

if.else:                                          ; preds = %if.then23
  %23 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10629
  %controller27 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %23, i32 0, i32 1, !dbg !10630
  %24 = load %struct.spi_controller*, %struct.spi_controller** %controller27, align 8, !dbg !10630
  %cs_hold = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %24, i32 0, i32 52, !dbg !10631
  %call28 = call i32 @spi_delay_exec(%struct.spi_delay* %cs_hold, %struct.spi_transfer* null) #11, !dbg !10632
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then25
  br label %if.end30, !dbg !10633

if.end30:                                         ; preds = %if.end29, %if.end
  %25 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10634
  %mode31 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %25, i32 0, i32 7, !dbg !10636
  %26 = load i32, i32* %mode31, align 8, !dbg !10636
  %and32 = and i32 %26, 4, !dbg !10637
  %tobool33 = icmp ne i32 %and32, 0, !dbg !10637
  br i1 %tobool33, label %if.then34, label %if.end37, !dbg !10638

if.then34:                                        ; preds = %if.end30
  %27 = load i8, i8* %enable.addr, align 1, !dbg !10639
  %tobool35 = trunc i8 %27 to i1, !dbg !10639
  %lnot = xor i1 %tobool35, true, !dbg !10640
  %frombool36 = zext i1 %lnot to i8, !dbg !10641
  store i8 %frombool36, i8* %enable.addr, align 1, !dbg !10641
  br label %if.end37, !dbg !10642

if.end37:                                         ; preds = %if.then34, %if.end30
  %28 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10643
  %cs_gpiod = getelementptr inbounds %struct.spi_device, %struct.spi_device* %28, i32 0, i32 14, !dbg !10645
  %29 = load %struct.gpio_desc*, %struct.gpio_desc** %cs_gpiod, align 8, !dbg !10645
  %tobool38 = icmp ne %struct.gpio_desc* %29, null, !dbg !10643
  br i1 %tobool38, label %if.then41, label %lor.lhs.false, !dbg !10646

lor.lhs.false:                                    ; preds = %if.end37
  %30 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10647
  %cs_gpio = getelementptr inbounds %struct.spi_device, %struct.spi_device* %30, i32 0, i32 13, !dbg !10648
  %31 = load i32, i32* %cs_gpio, align 8, !dbg !10648
  %call39 = call zeroext i1 @gpio_is_valid(i32 %31) #11, !dbg !10649
  br i1 %call39, label %if.then41, label %if.else72, !dbg !10650

if.then41:                                        ; preds = %lor.lhs.false, %if.end37
  %32 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10651
  %mode42 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %32, i32 0, i32 7, !dbg !10654
  %33 = load i32, i32* %mode42, align 8, !dbg !10654
  %and43 = and i32 %33, 64, !dbg !10655
  %tobool44 = icmp ne i32 %and43, 0, !dbg !10655
  br i1 %tobool44, label %if.end57, label %if.then45, !dbg !10656

if.then45:                                        ; preds = %if.then41
  %34 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10657
  %cs_gpiod46 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %34, i32 0, i32 14, !dbg !10660
  %35 = load %struct.gpio_desc*, %struct.gpio_desc** %cs_gpiod46, align 8, !dbg !10660
  %tobool47 = icmp ne %struct.gpio_desc* %35, null, !dbg !10657
  br i1 %tobool47, label %if.then48, label %if.else52, !dbg !10661

if.then48:                                        ; preds = %if.then45
  %36 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10662
  %cs_gpiod49 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %36, i32 0, i32 14, !dbg !10663
  %37 = load %struct.gpio_desc*, %struct.gpio_desc** %cs_gpiod49, align 8, !dbg !10663
  %38 = load i8, i8* %enable1, align 1, !dbg !10664
  %tobool50 = trunc i8 %38 to i1, !dbg !10664
  %conv51 = zext i1 %tobool50 to i32, !dbg !10664
  call void @gpiod_set_value_cansleep(%struct.gpio_desc* %37, i32 %conv51) #11, !dbg !10665
  br label %if.end56, !dbg !10665

if.else52:                                        ; preds = %if.then45
  %39 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10666
  %cs_gpio53 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %39, i32 0, i32 13, !dbg !10667
  %40 = load i32, i32* %cs_gpio53, align 8, !dbg !10667
  %41 = load i8, i8* %enable.addr, align 1, !dbg !10668
  %tobool54 = trunc i8 %41 to i1, !dbg !10668
  %lnot55 = xor i1 %tobool54, true, !dbg !10669
  %lnot.ext = zext i1 %lnot55 to i32, !dbg !10669
  call void @gpio_set_value_cansleep(i32 %40, i32 %lnot.ext) #11, !dbg !10670
  br label %if.end56

if.end56:                                         ; preds = %if.else52, %if.then48
  br label %if.end57, !dbg !10671

if.end57:                                         ; preds = %if.end56, %if.then41
  %42 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10672
  %controller58 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %42, i32 0, i32 1, !dbg !10674
  %43 = load %struct.spi_controller*, %struct.spi_controller** %controller58, align 8, !dbg !10674
  %flags = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %43, i32 0, i32 10, !dbg !10675
  %44 = load i16, i16* %flags, align 4, !dbg !10675
  %conv59 = zext i16 %44 to i64, !dbg !10672
  %and60 = and i64 %conv59, 32, !dbg !10676
  %tobool61 = icmp ne i64 %and60, 0, !dbg !10676
  br i1 %tobool61, label %land.lhs.true62, label %if.end71, !dbg !10677

land.lhs.true62:                                  ; preds = %if.end57
  %45 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10678
  %controller63 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %45, i32 0, i32 1, !dbg !10679
  %46 = load %struct.spi_controller*, %struct.spi_controller** %controller63, align 8, !dbg !10679
  %set_cs = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %46, i32 0, i32 47, !dbg !10680
  %47 = load void (%struct.spi_device*, i1)*, void (%struct.spi_device*, i1)** %set_cs, align 8, !dbg !10680
  %tobool64 = icmp ne void (%struct.spi_device*, i1)* %47, null, !dbg !10678
  br i1 %tobool64, label %if.then65, label %if.end71, !dbg !10681

if.then65:                                        ; preds = %land.lhs.true62
  %48 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10682
  %controller66 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %48, i32 0, i32 1, !dbg !10683
  %49 = load %struct.spi_controller*, %struct.spi_controller** %controller66, align 8, !dbg !10683
  %set_cs67 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %49, i32 0, i32 47, !dbg !10684
  %50 = load void (%struct.spi_device*, i1)*, void (%struct.spi_device*, i1)** %set_cs67, align 8, !dbg !10684
  %51 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10685
  %52 = load i8, i8* %enable.addr, align 1, !dbg !10686
  %tobool68 = trunc i8 %52 to i1, !dbg !10686
  %lnot69 = xor i1 %tobool68, true, !dbg !10687
  call void %50(%struct.spi_device* %51, i1 zeroext %lnot69) #11, !dbg !10682
  br label %if.end71, !dbg !10682

if.end71:                                         ; preds = %if.then65, %land.lhs.true62, %if.end57
  br label %if.end83, !dbg !10688

if.else72:                                        ; preds = %lor.lhs.false
  %53 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10689
  %controller73 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %53, i32 0, i32 1, !dbg !10691
  %54 = load %struct.spi_controller*, %struct.spi_controller** %controller73, align 8, !dbg !10691
  %set_cs74 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %54, i32 0, i32 47, !dbg !10692
  %55 = load void (%struct.spi_device*, i1)*, void (%struct.spi_device*, i1)** %set_cs74, align 8, !dbg !10692
  %tobool75 = icmp ne void (%struct.spi_device*, i1)* %55, null, !dbg !10689
  br i1 %tobool75, label %if.then76, label %if.end82, !dbg !10693

if.then76:                                        ; preds = %if.else72
  %56 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10694
  %controller77 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %56, i32 0, i32 1, !dbg !10696
  %57 = load %struct.spi_controller*, %struct.spi_controller** %controller77, align 8, !dbg !10696
  %set_cs78 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %57, i32 0, i32 47, !dbg !10697
  %58 = load void (%struct.spi_device*, i1)*, void (%struct.spi_device*, i1)** %set_cs78, align 8, !dbg !10697
  %59 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10698
  %60 = load i8, i8* %enable.addr, align 1, !dbg !10699
  %tobool79 = trunc i8 %60 to i1, !dbg !10699
  %lnot80 = xor i1 %tobool79, true, !dbg !10700
  call void %58(%struct.spi_device* %59, i1 zeroext %lnot80) #11, !dbg !10694
  br label %if.end82, !dbg !10701

if.end82:                                         ; preds = %if.then76, %if.else72
  br label %if.end83

if.end83:                                         ; preds = %if.end82, %if.end71
  %61 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10702
  %controller84 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %61, i32 0, i32 1, !dbg !10704
  %62 = load %struct.spi_controller*, %struct.spi_controller** %controller84, align 8, !dbg !10704
  %set_cs_timing85 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %62, i32 0, i32 19, !dbg !10705
  %63 = load i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)*, i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)** %set_cs_timing85, align 8, !dbg !10705
  %tobool86 = icmp ne i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)* %63, null, !dbg !10702
  br i1 %tobool86, label %if.end93, label %if.then87, !dbg !10706

if.then87:                                        ; preds = %if.end83
  %64 = load i8, i8* %enable1, align 1, !dbg !10707
  %tobool88 = trunc i8 %64 to i1, !dbg !10707
  br i1 %tobool88, label %if.end92, label %if.then89, !dbg !10710

if.then89:                                        ; preds = %if.then87
  %65 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10711
  %controller90 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %65, i32 0, i32 1, !dbg !10712
  %66 = load %struct.spi_controller*, %struct.spi_controller** %controller90, align 8, !dbg !10712
  %cs_inactive = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %66, i32 0, i32 53, !dbg !10713
  %call91 = call i32 @spi_delay_exec(%struct.spi_delay* %cs_inactive, %struct.spi_transfer* null) #11, !dbg !10714
  br label %if.end92, !dbg !10714

if.end92:                                         ; preds = %if.then89, %if.then87
  br label %if.end93, !dbg !10715

if.end93:                                         ; preds = %if.then, %if.end92, %if.end83
  ret void, !dbg !10716
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @pm_runtime_mark_last_busy(%struct.device* %dev) #0 !dbg !10717 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10718, metadata !DIExpression()), !dbg !10719
  br label %do.body, !dbg !10720

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !10721

do.body1:                                         ; preds = %do.body
  br label %do.end, !dbg !10723

do.end:                                           ; preds = %do.body1
  br label %do.body2, !dbg !10721

do.body2:                                         ; preds = %do.end
  %call = call i64 @ktime_get_mono_fast_ns() #11, !dbg !10725
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10725
  %power = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 11, !dbg !10725
  %last_busy = getelementptr inbounds %struct.dev_pm_info, %struct.dev_pm_info* %power, i32 0, i32 21, !dbg !10725
  store volatile i64 %call, i64* %last_busy, align 8, !dbg !10725
  br label %do.end3, !dbg !10725

do.end3:                                          ; preds = %do.body2
  br label %do.end4, !dbg !10721

do.end4:                                          ; preds = %do.end3
  ret void, !dbg !10727
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put_autosuspend(%struct.device* %dev) #0 !dbg !10728 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !10729, metadata !DIExpression()), !dbg !10730
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !10731
  %call = call i32 @__pm_runtime_suspend(%struct.device* %0, i32 13) #11, !dbg !10732
  ret i32 %call, !dbg !10733
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_set_thread_rt(%struct.spi_controller* %ctlr) #0 !dbg !10734 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10737
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 0, !dbg !10737
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %dev, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.112, i64 0, i64 0)) #14, !dbg !10737
  %1 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !10738
  %kworker = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 24, !dbg !10739
  %2 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker, align 8, !dbg !10739
  %task = getelementptr inbounds %struct.kthread_worker, %struct.kthread_worker* %2, i32 0, i32 4, !dbg !10740
  %3 = load %struct.task_struct*, %struct.task_struct** %task, align 8, !dbg !10740
  call void @sched_set_fifo(%struct.task_struct* %3) #11, !dbg !10741
  ret void, !dbg !10742
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_set_cs_timing(%struct.spi_device* %spi, %struct.spi_delay* %setup, %struct.spi_delay* %hold, %struct.spi_delay* %inactive) #0 !dbg !10743 {
entry:
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %setup.addr = alloca %struct.spi_delay*, align 8
  %hold.addr = alloca %struct.spi_delay*, align 8
  %inactive.addr = alloca %struct.spi_delay*, align 8
  %len = alloca i64, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !10744, metadata !DIExpression()), !dbg !10745
  store %struct.spi_delay* %setup, %struct.spi_delay** %setup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_delay** %setup.addr, metadata !10746, metadata !DIExpression()), !dbg !10747
  store %struct.spi_delay* %hold, %struct.spi_delay** %hold.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_delay** %hold.addr, metadata !10748, metadata !DIExpression()), !dbg !10749
  store %struct.spi_delay* %inactive, %struct.spi_delay** %inactive.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_delay** %inactive.addr, metadata !10750, metadata !DIExpression()), !dbg !10751
  call void @llvm.dbg.declare(metadata i64* %len, metadata !10752, metadata !DIExpression()), !dbg !10753
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10754
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !10756
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !10756
  %set_cs_timing = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 19, !dbg !10757
  %2 = load i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)*, i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)** %set_cs_timing, align 8, !dbg !10757
  %tobool = icmp ne i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)* %2, null, !dbg !10754
  br i1 %tobool, label %if.then, label %if.end, !dbg !10758

if.then:                                          ; preds = %entry
  %3 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10759
  %controller1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %3, i32 0, i32 1, !dbg !10760
  %4 = load %struct.spi_controller*, %struct.spi_controller** %controller1, align 8, !dbg !10760
  %set_cs_timing2 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 19, !dbg !10761
  %5 = load i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)*, i32 (%struct.spi_device*, %struct.spi_delay*, %struct.spi_delay*, %struct.spi_delay*)** %set_cs_timing2, align 8, !dbg !10761
  %6 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10762
  %7 = load %struct.spi_delay*, %struct.spi_delay** %setup.addr, align 8, !dbg !10763
  %8 = load %struct.spi_delay*, %struct.spi_delay** %hold.addr, align 8, !dbg !10764
  %9 = load %struct.spi_delay*, %struct.spi_delay** %inactive.addr, align 8, !dbg !10765
  %call = call i32 %5(%struct.spi_device* %6, %struct.spi_delay* %7, %struct.spi_delay* %8, %struct.spi_delay* %9) #11, !dbg !10759
  store i32 %call, i32* %retval, align 4, !dbg !10766
  br label %return, !dbg !10766

if.end:                                           ; preds = %entry
  %10 = load %struct.spi_delay*, %struct.spi_delay** %setup.addr, align 8, !dbg !10767
  %tobool3 = icmp ne %struct.spi_delay* %10, null, !dbg !10767
  br i1 %tobool3, label %land.lhs.true, label %lor.lhs.false, !dbg !10769

land.lhs.true:                                    ; preds = %if.end
  %11 = load %struct.spi_delay*, %struct.spi_delay** %setup.addr, align 8, !dbg !10770
  %unit = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %11, i32 0, i32 1, !dbg !10771
  %12 = load i8, i8* %unit, align 2, !dbg !10771
  %conv = zext i8 %12 to i32, !dbg !10770
  %cmp = icmp eq i32 %conv, 2, !dbg !10772
  br i1 %cmp, label %if.then18, label %lor.lhs.false, !dbg !10773

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %13 = load %struct.spi_delay*, %struct.spi_delay** %hold.addr, align 8, !dbg !10774
  %tobool5 = icmp ne %struct.spi_delay* %13, null, !dbg !10774
  br i1 %tobool5, label %land.lhs.true6, label %lor.lhs.false11, !dbg !10775

land.lhs.true6:                                   ; preds = %lor.lhs.false
  %14 = load %struct.spi_delay*, %struct.spi_delay** %hold.addr, align 8, !dbg !10776
  %unit7 = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %14, i32 0, i32 1, !dbg !10777
  %15 = load i8, i8* %unit7, align 2, !dbg !10777
  %conv8 = zext i8 %15 to i32, !dbg !10776
  %cmp9 = icmp eq i32 %conv8, 2, !dbg !10778
  br i1 %cmp9, label %if.then18, label %lor.lhs.false11, !dbg !10779

lor.lhs.false11:                                  ; preds = %land.lhs.true6, %lor.lhs.false
  %16 = load %struct.spi_delay*, %struct.spi_delay** %inactive.addr, align 8, !dbg !10780
  %tobool12 = icmp ne %struct.spi_delay* %16, null, !dbg !10780
  br i1 %tobool12, label %land.lhs.true13, label %if.end19, !dbg !10781

land.lhs.true13:                                  ; preds = %lor.lhs.false11
  %17 = load %struct.spi_delay*, %struct.spi_delay** %inactive.addr, align 8, !dbg !10782
  %unit14 = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %17, i32 0, i32 1, !dbg !10783
  %18 = load i8, i8* %unit14, align 2, !dbg !10783
  %conv15 = zext i8 %18 to i32, !dbg !10782
  %cmp16 = icmp eq i32 %conv15, 2, !dbg !10784
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !10785

if.then18:                                        ; preds = %land.lhs.true13, %land.lhs.true6, %land.lhs.true
  %19 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10786
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %19, i32 0, i32 0, !dbg !10786
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.22, i64 0, i64 0)) #14, !dbg !10786
  store i32 -524, i32* %retval, align 4, !dbg !10788
  br label %return, !dbg !10788

if.end19:                                         ; preds = %land.lhs.true13, %lor.lhs.false11
  store i64 4, i64* %len, align 8, !dbg !10789
  %20 = load %struct.spi_delay*, %struct.spi_delay** %setup.addr, align 8, !dbg !10790
  %tobool20 = icmp ne %struct.spi_delay* %20, null, !dbg !10790
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !10792

if.then21:                                        ; preds = %if.end19
  %21 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10793
  %controller22 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %21, i32 0, i32 1, !dbg !10794
  %22 = load %struct.spi_controller*, %struct.spi_controller** %controller22, align 8, !dbg !10794
  %cs_setup = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %22, i32 0, i32 51, !dbg !10795
  %23 = bitcast %struct.spi_delay* %cs_setup to i8*, !dbg !10796
  %24 = load %struct.spi_delay*, %struct.spi_delay** %setup.addr, align 8, !dbg !10797
  %25 = bitcast %struct.spi_delay* %24 to i8*, !dbg !10796
  %26 = load i64, i64* %len, align 8, !dbg !10798
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 2 %25, i64 %26, i1 false), !dbg !10796
  br label %if.end25, !dbg !10796

if.else:                                          ; preds = %if.end19
  %27 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10799
  %controller23 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %27, i32 0, i32 1, !dbg !10800
  %28 = load %struct.spi_controller*, %struct.spi_controller** %controller23, align 8, !dbg !10800
  %cs_setup24 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %28, i32 0, i32 51, !dbg !10801
  %29 = bitcast %struct.spi_delay* %cs_setup24 to i8*, !dbg !10802
  %30 = load i64, i64* %len, align 8, !dbg !10803
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 %30, i1 false), !dbg !10802
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then21
  %31 = load %struct.spi_delay*, %struct.spi_delay** %hold.addr, align 8, !dbg !10804
  %tobool26 = icmp ne %struct.spi_delay* %31, null, !dbg !10804
  br i1 %tobool26, label %if.then27, label %if.else29, !dbg !10806

if.then27:                                        ; preds = %if.end25
  %32 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10807
  %controller28 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %32, i32 0, i32 1, !dbg !10808
  %33 = load %struct.spi_controller*, %struct.spi_controller** %controller28, align 8, !dbg !10808
  %cs_hold = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %33, i32 0, i32 52, !dbg !10809
  %34 = bitcast %struct.spi_delay* %cs_hold to i8*, !dbg !10810
  %35 = load %struct.spi_delay*, %struct.spi_delay** %hold.addr, align 8, !dbg !10811
  %36 = bitcast %struct.spi_delay* %35 to i8*, !dbg !10810
  %37 = load i64, i64* %len, align 8, !dbg !10812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 2 %36, i64 %37, i1 false), !dbg !10810
  br label %if.end32, !dbg !10810

if.else29:                                        ; preds = %if.end25
  %38 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10813
  %controller30 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %38, i32 0, i32 1, !dbg !10814
  %39 = load %struct.spi_controller*, %struct.spi_controller** %controller30, align 8, !dbg !10814
  %cs_hold31 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %39, i32 0, i32 52, !dbg !10815
  %40 = bitcast %struct.spi_delay* %cs_hold31 to i8*, !dbg !10816
  %41 = load i64, i64* %len, align 8, !dbg !10817
  call void @llvm.memset.p0i8.i64(i8* align 4 %40, i8 0, i64 %41, i1 false), !dbg !10816
  br label %if.end32

if.end32:                                         ; preds = %if.else29, %if.then27
  %42 = load %struct.spi_delay*, %struct.spi_delay** %inactive.addr, align 8, !dbg !10818
  %tobool33 = icmp ne %struct.spi_delay* %42, null, !dbg !10818
  br i1 %tobool33, label %if.then34, label %if.else36, !dbg !10820

if.then34:                                        ; preds = %if.end32
  %43 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10821
  %controller35 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %43, i32 0, i32 1, !dbg !10822
  %44 = load %struct.spi_controller*, %struct.spi_controller** %controller35, align 8, !dbg !10822
  %cs_inactive = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %44, i32 0, i32 53, !dbg !10823
  %45 = bitcast %struct.spi_delay* %cs_inactive to i8*, !dbg !10824
  %46 = load %struct.spi_delay*, %struct.spi_delay** %inactive.addr, align 8, !dbg !10825
  %47 = bitcast %struct.spi_delay* %46 to i8*, !dbg !10824
  %48 = load i64, i64* %len, align 8, !dbg !10826
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 2 %47, i64 %48, i1 false), !dbg !10824
  br label %if.end39, !dbg !10824

if.else36:                                        ; preds = %if.end32
  %49 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10827
  %controller37 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %49, i32 0, i32 1, !dbg !10828
  %50 = load %struct.spi_controller*, %struct.spi_controller** %controller37, align 8, !dbg !10828
  %cs_inactive38 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %50, i32 0, i32 53, !dbg !10829
  %51 = bitcast %struct.spi_delay* %cs_inactive38 to i8*, !dbg !10830
  %52 = load i64, i64* %len, align 8, !dbg !10831
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 %52, i1 false), !dbg !10830
  br label %if.end39

if.end39:                                         ; preds = %if.else36, %if.then34
  store i32 0, i32* %retval, align 4, !dbg !10832
  br label %return, !dbg !10832

return:                                           ; preds = %if.end39, %if.then18, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !10833
  ret i32 %53, !dbg !10833
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_async(%struct.spi_device* %spi, %struct.spi_message* %message) #0 !dbg !10834 {
entry:
  %lock.addr.i25 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i25, metadata !5420, metadata !DIExpression()), !dbg !10835
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !10837
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !10838
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !10847, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !10849, metadata !DIExpression()), !dbg !10850
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10851
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !10852
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !10852
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !10850
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10853, metadata !DIExpression()), !dbg !10854
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !10855, metadata !DIExpression()), !dbg !10856
  %2 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10857
  %3 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10858
  %call = call i32 @__spi_validate(%struct.spi_device* %2, %struct.spi_message* %3) #11, !dbg !10859
  store i32 %call, i32* %ret, align 4, !dbg !10860
  %4 = load i32, i32* %ret, align 4, !dbg !10861
  %cmp = icmp ne i32 %4, 0, !dbg !10863
  br i1 %cmp, label %if.then, label %if.end, !dbg !10864

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !10865
  store i32 %5, i32* %retval, align 4, !dbg !10866
  br label %return, !dbg !10866

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !10867

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !10868

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !10869, metadata !DIExpression()), !dbg !10871
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !10872, metadata !DIExpression()), !dbg !10871
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !10871
  %conv = zext i1 %cmp2 to i32, !dbg !10871
  store i32 1, i32* %tmp, align 4, !dbg !10871
  %6 = load i32, i32* %tmp, align 4, !dbg !10871
  br label %do.body3, !dbg !10873

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !10874

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !10875

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !10877, metadata !DIExpression()), !dbg !10880
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !10881, metadata !DIExpression()), !dbg !10880
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !10880
  %conv9 = zext i1 %cmp8 to i32, !dbg !10880
  store i32 1, i32* %tmp10, align 4, !dbg !10880
  %7 = load i32, i32* %tmp10, align 4, !dbg !10880
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !10882
  store i64 %call11, i64* %flags, align 8, !dbg !10882
  br label %do.end, !dbg !10882

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !10875

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !10874

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10883, !srcloc !10884
  br label %do.body14, !dbg !10883

do.body14:                                        ; preds = %do.body13
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !10885
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %8, i32 0, i32 15, !dbg !10885
  store %struct.spinlock* %bus_lock_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !10886
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !10887
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !10887
  br label %do.end16, !dbg !10885

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !10883

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !10874

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !10873

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !10868

do.end20:                                         ; preds = %do.end19
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !10888
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %11, i32 0, i32 17, !dbg !10890
  %12 = load i8, i8* %bus_lock_flag, align 8, !dbg !10890
  %tobool = trunc i8 %12 to i1, !dbg !10890
  br i1 %tobool, label %if.then21, label %if.else, !dbg !10891

if.then21:                                        ; preds = %do.end20
  store i32 -16, i32* %ret, align 4, !dbg !10892
  br label %if.end23, !dbg !10893

if.else:                                          ; preds = %do.end20
  %13 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10894
  %14 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10895
  %call22 = call i32 @__spi_async(%struct.spi_device* %13, %struct.spi_message* %14) #11, !dbg !10896
  store i32 %call22, i32* %ret, align 4, !dbg !10897
  br label %if.end23

if.end23:                                         ; preds = %if.else, %if.then21
  %15 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !10898
  %bus_lock_spinlock24 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %15, i32 0, i32 15, !dbg !10899
  %16 = load i64, i64* %flags, align 8, !dbg !10900
  store %struct.spinlock* %bus_lock_spinlock24, %struct.spinlock** %lock.addr.i25, align 8
  store i64 %16, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !10901
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !10901
  store i32 1, i32* %tmp.i, align 4, !dbg !10901
  %17 = load i32, i32* %tmp.i, align 4, !dbg !10901
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !10902
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !10902
  store i32 1, i32* %tmp8.i, align 4, !dbg !10902
  %18 = load i32, i32* %tmp8.i, align 4, !dbg !10902
  %19 = load i64, i64* %flags.addr.i, align 8, !dbg !10903
  call void @arch_local_irq_restore(i64 %19) #12, !dbg !10903
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !10904, !srcloc !5559
  %20 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i25, align 8, !dbg !10905
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0, !dbg !10905
  %rlock.i26 = bitcast %union.anon* %21 to %struct.raw_spinlock*, !dbg !10905
  %22 = load i32, i32* %ret, align 4, !dbg !10906
  store i32 %22, i32* %retval, align 4, !dbg !10907
  br label %return, !dbg !10907

return:                                           ; preds = %if.end23, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !10908
  ret i32 %23, !dbg !10908
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_validate(%struct.spi_device* %spi, %struct.spi_message* %message) #0 !dbg !10909 {
entry:
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %w_size = alloca i32, align 4
  %maxsize = alloca i64, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_transfer*, align 8
  %__mptr23 = alloca i8*, align 8
  %tmp28 = alloca %struct.spi_transfer*, align 8
  %flags39 = alloca i32, align 4
  %__mptr42 = alloca i8*, align 8
  %tmp47 = alloca %struct.spi_transfer*, align 8
  %__mptr78 = alloca i8*, align 8
  %tmp83 = alloca %struct.spi_transfer*, align 8
  %__mptr87 = alloca i8*, align 8
  %tmp92 = alloca %struct.spi_transfer*, align 8
  %__mptr298 = alloca i8*, align 8
  %tmp303 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !10910, metadata !DIExpression()), !dbg !10911
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !10912, metadata !DIExpression()), !dbg !10913
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !10914, metadata !DIExpression()), !dbg !10915
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10916
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !10917
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !10917
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !10915
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !10918, metadata !DIExpression()), !dbg !10919
  call void @llvm.dbg.declare(metadata i32* %w_size, metadata !10920, metadata !DIExpression()), !dbg !10921
  %2 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10922
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %2, i32 0, i32 0, !dbg !10924
  %call = call i32 @list_empty(%struct.list_head* %transfers) #11, !dbg !10925
  %tobool = icmp ne i32 %call, 0, !dbg !10925
  br i1 %tobool, label %if.then, label %if.end, !dbg !10926

if.then:                                          ; preds = %entry
  store i32 -22, i32* %retval, align 4, !dbg !10927
  br label %return, !dbg !10927

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10928
  %mode = getelementptr inbounds %struct.spi_device, %struct.spi_device* %3, i32 0, i32 7, !dbg !10930
  %4 = load i32, i32* %mode, align 8, !dbg !10930
  %and = and i32 %4, 4096, !dbg !10931
  %tobool1 = icmp ne i32 %and, 0, !dbg !10931
  br i1 %tobool1, label %land.lhs.true, label %if.end30, !dbg !10932

land.lhs.true:                                    ; preds = %if.end
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !10933
  %mode_bits = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 5, !dbg !10934
  %6 = load i32, i32* %mode_bits, align 8, !dbg !10934
  %and2 = and i32 %6, 4096, !dbg !10935
  %tobool3 = icmp ne i32 %and2, 0, !dbg !10935
  br i1 %tobool3, label %lor.lhs.false, label %if.then7, !dbg !10936

lor.lhs.false:                                    ; preds = %land.lhs.true
  %7 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10937
  %cs_gpiod = getelementptr inbounds %struct.spi_device, %struct.spi_device* %7, i32 0, i32 14, !dbg !10938
  %8 = load %struct.gpio_desc*, %struct.gpio_desc** %cs_gpiod, align 8, !dbg !10938
  %tobool4 = icmp ne %struct.gpio_desc* %8, null, !dbg !10937
  br i1 %tobool4, label %if.then7, label %lor.lhs.false5, !dbg !10939

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %9 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10940
  %cs_gpio = getelementptr inbounds %struct.spi_device, %struct.spi_device* %9, i32 0, i32 13, !dbg !10941
  %10 = load i32, i32* %cs_gpio, align 8, !dbg !10941
  %call6 = call zeroext i1 @gpio_is_valid(i32 %10) #11, !dbg !10942
  br i1 %call6, label %if.then7, label %if.end30, !dbg !10943

if.then7:                                         ; preds = %lor.lhs.false5, %lor.lhs.false, %land.lhs.true
  call void @llvm.dbg.declare(metadata i64* %maxsize, metadata !10944, metadata !DIExpression()), !dbg !10946
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !10947, metadata !DIExpression()), !dbg !10948
  %11 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10949
  %bits_per_word = getelementptr inbounds %struct.spi_device, %struct.spi_device* %11, i32 0, i32 5, !dbg !10950
  %12 = load i8, i8* %bits_per_word, align 1, !dbg !10950
  %conv = zext i8 %12 to i32, !dbg !10949
  %add = add i32 %conv, 7, !dbg !10951
  %div = sdiv i32 %add, 8, !dbg !10952
  %conv8 = sext i32 %div to i64, !dbg !10953
  store i64 %conv8, i64* %maxsize, align 8, !dbg !10954
  %13 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !10955
  %14 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10956
  %spi9 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %14, i32 0, i32 1, !dbg !10957
  store %struct.spi_device* %13, %struct.spi_device** %spi9, align 8, !dbg !10958
  %15 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !10959
  %16 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10960
  %17 = load i64, i64* %maxsize, align 8, !dbg !10961
  %call10 = call i32 @spi_split_transfers_maxsize(%struct.spi_controller* %15, %struct.spi_message* %16, i64 %17, i32 3264) #11, !dbg !10962
  store i32 %call10, i32* %ret, align 4, !dbg !10963
  %18 = load i32, i32* %ret, align 4, !dbg !10964
  %tobool11 = icmp ne i32 %18, 0, !dbg !10964
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !10966

if.then12:                                        ; preds = %if.then7
  %19 = load i32, i32* %ret, align 4, !dbg !10967
  store i32 %19, i32* %retval, align 4, !dbg !10968
  br label %return, !dbg !10968

if.end13:                                         ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !10969, metadata !DIExpression()), !dbg !10972
  %20 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10972
  %transfers14 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %20, i32 0, i32 0, !dbg !10972
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers14, i32 0, i32 0, !dbg !10972
  %21 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !10972
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !10972
  store i8* %22, i8** %__mptr, align 8, !dbg !10972
  br label %do.body, !dbg !10972

do.body:                                          ; preds = %if.end13
  br label %do.end, !dbg !10973

do.end:                                           ; preds = %do.body
  %23 = load i8*, i8** %__mptr, align 8, !dbg !10972
  %add.ptr = getelementptr i8, i8* %23, i64 -120, !dbg !10972
  %24 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !10972
  store %struct.spi_transfer* %24, %struct.spi_transfer** %tmp, align 8, !dbg !10973
  %25 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp, align 8, !dbg !10972
  store %struct.spi_transfer* %25, %struct.spi_transfer** %xfer, align 8, !dbg !10975
  br label %for.cond, !dbg !10975

for.cond:                                         ; preds = %do.end27, %do.end
  %26 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10976
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %26, i32 0, i32 19, !dbg !10976
  %27 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10976
  %transfers15 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %27, i32 0, i32 0, !dbg !10976
  %cmp = icmp eq %struct.list_head* %transfer_list, %transfers15, !dbg !10976
  %lnot = xor i1 %cmp, true, !dbg !10976
  br i1 %lnot, label %for.body, label %for.end, !dbg !10975

for.body:                                         ; preds = %for.cond
  %28 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10978
  %transfer_list17 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %28, i32 0, i32 19, !dbg !10981
  %29 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !10982
  %transfers18 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %29, i32 0, i32 0, !dbg !10983
  %call19 = call i32 @list_is_last(%struct.list_head* %transfer_list17, %struct.list_head* %transfers18) #11, !dbg !10984
  %tobool20 = icmp ne i32 %call19, 0, !dbg !10984
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !10985

if.then21:                                        ; preds = %for.body
  br label %for.end, !dbg !10986

if.end22:                                         ; preds = %for.body
  %30 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10987
  %cs_change = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %30, i32 0, i32 7, !dbg !10988
  %bf.load = load i8, i8* %cs_change, align 8, !dbg !10989
  %bf.clear = and i8 %bf.load, -2, !dbg !10989
  %bf.set = or i8 %bf.clear, 1, !dbg !10989
  store i8 %bf.set, i8* %cs_change, align 8, !dbg !10989
  br label %for.inc, !dbg !10990

for.inc:                                          ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i8** %__mptr23, metadata !10991, metadata !DIExpression()), !dbg !10993
  %31 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !10993
  %transfer_list24 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %31, i32 0, i32 19, !dbg !10993
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list24, i32 0, i32 0, !dbg !10993
  %32 = load %struct.list_head*, %struct.list_head** %next25, align 8, !dbg !10993
  %33 = bitcast %struct.list_head* %32 to i8*, !dbg !10993
  store i8* %33, i8** %__mptr23, align 8, !dbg !10993
  br label %do.body26, !dbg !10993

do.body26:                                        ; preds = %for.inc
  br label %do.end27, !dbg !10994

do.end27:                                         ; preds = %do.body26
  %34 = load i8*, i8** %__mptr23, align 8, !dbg !10993
  %add.ptr29 = getelementptr i8, i8* %34, i64 -120, !dbg !10993
  %35 = bitcast i8* %add.ptr29 to %struct.spi_transfer*, !dbg !10993
  store %struct.spi_transfer* %35, %struct.spi_transfer** %tmp28, align 8, !dbg !10994
  %36 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp28, align 8, !dbg !10993
  store %struct.spi_transfer* %36, %struct.spi_transfer** %xfer, align 8, !dbg !10976
  br label %for.cond, !dbg !10976, !llvm.loop !10996

for.end:                                          ; preds = %if.then21, %for.cond
  br label %if.end30, !dbg !10998

if.end30:                                         ; preds = %for.end, %lor.lhs.false5, %if.end
  %37 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !10999
  %flags = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %37, i32 0, i32 10, !dbg !11001
  %38 = load i16, i16* %flags, align 4, !dbg !11001
  %conv31 = zext i16 %38 to i64, !dbg !10999
  %and32 = and i64 %conv31, 1, !dbg !11002
  %tobool33 = icmp ne i64 %and32, 0, !dbg !11002
  br i1 %tobool33, label %if.then38, label %lor.lhs.false34, !dbg !11003

lor.lhs.false34:                                  ; preds = %if.end30
  %39 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11004
  %mode35 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %39, i32 0, i32 7, !dbg !11005
  %40 = load i32, i32* %mode35, align 8, !dbg !11005
  %and36 = and i32 %40, 16, !dbg !11006
  %tobool37 = icmp ne i32 %and36, 0, !dbg !11006
  br i1 %tobool37, label %if.then38, label %if.end86, !dbg !11007

if.then38:                                        ; preds = %lor.lhs.false34, %if.end30
  call void @llvm.dbg.declare(metadata i32* %flags39, metadata !11008, metadata !DIExpression()), !dbg !11010
  %41 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11011
  %flags40 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %41, i32 0, i32 10, !dbg !11012
  %42 = load i16, i16* %flags40, align 4, !dbg !11012
  %conv41 = zext i16 %42 to i32, !dbg !11011
  store i32 %conv41, i32* %flags39, align 4, !dbg !11010
  call void @llvm.dbg.declare(metadata i8** %__mptr42, metadata !11013, metadata !DIExpression()), !dbg !11016
  %43 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11016
  %transfers43 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %43, i32 0, i32 0, !dbg !11016
  %next44 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers43, i32 0, i32 0, !dbg !11016
  %44 = load %struct.list_head*, %struct.list_head** %next44, align 8, !dbg !11016
  %45 = bitcast %struct.list_head* %44 to i8*, !dbg !11016
  store i8* %45, i8** %__mptr42, align 8, !dbg !11016
  br label %do.body45, !dbg !11016

do.body45:                                        ; preds = %if.then38
  br label %do.end46, !dbg !11017

do.end46:                                         ; preds = %do.body45
  %46 = load i8*, i8** %__mptr42, align 8, !dbg !11016
  %add.ptr48 = getelementptr i8, i8* %46, i64 -120, !dbg !11016
  %47 = bitcast i8* %add.ptr48 to %struct.spi_transfer*, !dbg !11016
  store %struct.spi_transfer* %47, %struct.spi_transfer** %tmp47, align 8, !dbg !11017
  %48 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp47, align 8, !dbg !11016
  store %struct.spi_transfer* %48, %struct.spi_transfer** %xfer, align 8, !dbg !11019
  br label %for.cond49, !dbg !11019

for.cond49:                                       ; preds = %do.end82, %do.end46
  %49 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11020
  %transfer_list50 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %49, i32 0, i32 19, !dbg !11020
  %50 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11020
  %transfers51 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %50, i32 0, i32 0, !dbg !11020
  %cmp52 = icmp eq %struct.list_head* %transfer_list50, %transfers51, !dbg !11020
  %lnot54 = xor i1 %cmp52, true, !dbg !11020
  br i1 %lnot54, label %for.body55, label %for.end85, !dbg !11019

for.body55:                                       ; preds = %for.cond49
  %51 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11022
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %51, i32 0, i32 1, !dbg !11025
  %52 = load i8*, i8** %rx_buf, align 8, !dbg !11025
  %tobool56 = icmp ne i8* %52, null, !dbg !11022
  br i1 %tobool56, label %land.lhs.true57, label %if.end60, !dbg !11026

land.lhs.true57:                                  ; preds = %for.body55
  %53 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11027
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %53, i32 0, i32 0, !dbg !11028
  %54 = load i8*, i8** %tx_buf, align 8, !dbg !11028
  %tobool58 = icmp ne i8* %54, null, !dbg !11027
  br i1 %tobool58, label %if.then59, label %if.end60, !dbg !11029

if.then59:                                        ; preds = %land.lhs.true57
  store i32 -22, i32* %retval, align 4, !dbg !11030
  br label %return, !dbg !11030

if.end60:                                         ; preds = %land.lhs.true57, %for.body55
  %55 = load i32, i32* %flags39, align 4, !dbg !11031
  %conv61 = zext i32 %55 to i64, !dbg !11031
  %and62 = and i64 %conv61, 4, !dbg !11033
  %tobool63 = icmp ne i64 %and62, 0, !dbg !11033
  br i1 %tobool63, label %land.lhs.true64, label %if.end68, !dbg !11034

land.lhs.true64:                                  ; preds = %if.end60
  %56 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11035
  %tx_buf65 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %56, i32 0, i32 0, !dbg !11036
  %57 = load i8*, i8** %tx_buf65, align 8, !dbg !11036
  %tobool66 = icmp ne i8* %57, null, !dbg !11035
  br i1 %tobool66, label %if.then67, label %if.end68, !dbg !11037

if.then67:                                        ; preds = %land.lhs.true64
  store i32 -22, i32* %retval, align 4, !dbg !11038
  br label %return, !dbg !11038

if.end68:                                         ; preds = %land.lhs.true64, %if.end60
  %58 = load i32, i32* %flags39, align 4, !dbg !11039
  %conv69 = zext i32 %58 to i64, !dbg !11039
  %and70 = and i64 %conv69, 2, !dbg !11041
  %tobool71 = icmp ne i64 %and70, 0, !dbg !11041
  br i1 %tobool71, label %land.lhs.true72, label %if.end76, !dbg !11042

land.lhs.true72:                                  ; preds = %if.end68
  %59 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11043
  %rx_buf73 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %59, i32 0, i32 1, !dbg !11044
  %60 = load i8*, i8** %rx_buf73, align 8, !dbg !11044
  %tobool74 = icmp ne i8* %60, null, !dbg !11043
  br i1 %tobool74, label %if.then75, label %if.end76, !dbg !11045

if.then75:                                        ; preds = %land.lhs.true72
  store i32 -22, i32* %retval, align 4, !dbg !11046
  br label %return, !dbg !11046

if.end76:                                         ; preds = %land.lhs.true72, %if.end68
  br label %for.inc77, !dbg !11047

for.inc77:                                        ; preds = %if.end76
  call void @llvm.dbg.declare(metadata i8** %__mptr78, metadata !11048, metadata !DIExpression()), !dbg !11050
  %61 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11050
  %transfer_list79 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %61, i32 0, i32 19, !dbg !11050
  %next80 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list79, i32 0, i32 0, !dbg !11050
  %62 = load %struct.list_head*, %struct.list_head** %next80, align 8, !dbg !11050
  %63 = bitcast %struct.list_head* %62 to i8*, !dbg !11050
  store i8* %63, i8** %__mptr78, align 8, !dbg !11050
  br label %do.body81, !dbg !11050

do.body81:                                        ; preds = %for.inc77
  br label %do.end82, !dbg !11051

do.end82:                                         ; preds = %do.body81
  %64 = load i8*, i8** %__mptr78, align 8, !dbg !11050
  %add.ptr84 = getelementptr i8, i8* %64, i64 -120, !dbg !11050
  %65 = bitcast i8* %add.ptr84 to %struct.spi_transfer*, !dbg !11050
  store %struct.spi_transfer* %65, %struct.spi_transfer** %tmp83, align 8, !dbg !11051
  %66 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp83, align 8, !dbg !11050
  store %struct.spi_transfer* %66, %struct.spi_transfer** %xfer, align 8, !dbg !11020
  br label %for.cond49, !dbg !11020, !llvm.loop !11053

for.end85:                                        ; preds = %for.cond49
  br label %if.end86, !dbg !11055

if.end86:                                         ; preds = %for.end85, %lor.lhs.false34
  %67 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11056
  %frame_length = getelementptr inbounds %struct.spi_message, %struct.spi_message* %67, i32 0, i32 5, !dbg !11057
  store i32 0, i32* %frame_length, align 8, !dbg !11058
  call void @llvm.dbg.declare(metadata i8** %__mptr87, metadata !11059, metadata !DIExpression()), !dbg !11062
  %68 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11062
  %transfers88 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %68, i32 0, i32 0, !dbg !11062
  %next89 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers88, i32 0, i32 0, !dbg !11062
  %69 = load %struct.list_head*, %struct.list_head** %next89, align 8, !dbg !11062
  %70 = bitcast %struct.list_head* %69 to i8*, !dbg !11062
  store i8* %70, i8** %__mptr87, align 8, !dbg !11062
  br label %do.body90, !dbg !11062

do.body90:                                        ; preds = %if.end86
  br label %do.end91, !dbg !11063

do.end91:                                         ; preds = %do.body90
  %71 = load i8*, i8** %__mptr87, align 8, !dbg !11062
  %add.ptr93 = getelementptr i8, i8* %71, i64 -120, !dbg !11062
  %72 = bitcast i8* %add.ptr93 to %struct.spi_transfer*, !dbg !11062
  store %struct.spi_transfer* %72, %struct.spi_transfer** %tmp92, align 8, !dbg !11063
  %73 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp92, align 8, !dbg !11062
  store %struct.spi_transfer* %73, %struct.spi_transfer** %xfer, align 8, !dbg !11065
  br label %for.cond94, !dbg !11065

for.cond94:                                       ; preds = %do.end302, %do.end91
  %74 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11066
  %transfer_list95 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %74, i32 0, i32 19, !dbg !11066
  %75 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11066
  %transfers96 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %75, i32 0, i32 0, !dbg !11066
  %cmp97 = icmp eq %struct.list_head* %transfer_list95, %transfers96, !dbg !11066
  %lnot99 = xor i1 %cmp97, true, !dbg !11066
  br i1 %lnot99, label %for.body100, label %for.end305, !dbg !11065

for.body100:                                      ; preds = %for.cond94
  %76 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11068
  %effective_speed_hz = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %76, i32 0, i32 14, !dbg !11070
  store i32 0, i32* %effective_speed_hz, align 4, !dbg !11071
  %77 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11072
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %77, i32 0, i32 2, !dbg !11073
  %78 = load i32, i32* %len, align 8, !dbg !11073
  %79 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11074
  %frame_length101 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %79, i32 0, i32 5, !dbg !11075
  %80 = load i32, i32* %frame_length101, align 8, !dbg !11076
  %add102 = add i32 %80, %78, !dbg !11076
  store i32 %add102, i32* %frame_length101, align 8, !dbg !11076
  %81 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11077
  %bits_per_word103 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %81, i32 0, i32 8, !dbg !11079
  %82 = load i8, i8* %bits_per_word103, align 1, !dbg !11079
  %tobool104 = icmp ne i8 %82, 0, !dbg !11077
  br i1 %tobool104, label %if.end108, label %if.then105, !dbg !11080

if.then105:                                       ; preds = %for.body100
  %83 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11081
  %bits_per_word106 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %83, i32 0, i32 5, !dbg !11082
  %84 = load i8, i8* %bits_per_word106, align 1, !dbg !11082
  %85 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11083
  %bits_per_word107 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %85, i32 0, i32 8, !dbg !11084
  store i8 %84, i8* %bits_per_word107, align 1, !dbg !11085
  br label %if.end108, !dbg !11083

if.end108:                                        ; preds = %if.then105, %for.body100
  %86 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11086
  %speed_hz = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %86, i32 0, i32 13, !dbg !11088
  %87 = load i32, i32* %speed_hz, align 8, !dbg !11088
  %tobool109 = icmp ne i32 %87, 0, !dbg !11086
  br i1 %tobool109, label %if.end112, label %if.then110, !dbg !11089

if.then110:                                       ; preds = %if.end108
  %88 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11090
  %max_speed_hz = getelementptr inbounds %struct.spi_device, %struct.spi_device* %88, i32 0, i32 3, !dbg !11091
  %89 = load i32, i32* %max_speed_hz, align 8, !dbg !11091
  %90 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11092
  %speed_hz111 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %90, i32 0, i32 13, !dbg !11093
  store i32 %89, i32* %speed_hz111, align 8, !dbg !11094
  br label %if.end112, !dbg !11092

if.end112:                                        ; preds = %if.then110, %if.end108
  %91 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11095
  %max_speed_hz113 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %91, i32 0, i32 9, !dbg !11097
  %92 = load i32, i32* %max_speed_hz113, align 8, !dbg !11097
  %tobool114 = icmp ne i32 %92, 0, !dbg !11095
  br i1 %tobool114, label %land.lhs.true115, label %if.end123, !dbg !11098

land.lhs.true115:                                 ; preds = %if.end112
  %93 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11099
  %speed_hz116 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %93, i32 0, i32 13, !dbg !11100
  %94 = load i32, i32* %speed_hz116, align 8, !dbg !11100
  %95 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11101
  %max_speed_hz117 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %95, i32 0, i32 9, !dbg !11102
  %96 = load i32, i32* %max_speed_hz117, align 8, !dbg !11102
  %cmp118 = icmp ugt i32 %94, %96, !dbg !11103
  br i1 %cmp118, label %if.then120, label %if.end123, !dbg !11104

if.then120:                                       ; preds = %land.lhs.true115
  %97 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11105
  %max_speed_hz121 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %97, i32 0, i32 9, !dbg !11106
  %98 = load i32, i32* %max_speed_hz121, align 8, !dbg !11106
  %99 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11107
  %speed_hz122 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %99, i32 0, i32 13, !dbg !11108
  store i32 %98, i32* %speed_hz122, align 8, !dbg !11109
  br label %if.end123, !dbg !11107

if.end123:                                        ; preds = %if.then120, %land.lhs.true115, %if.end112
  %100 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11110
  %101 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11112
  %bits_per_word124 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %101, i32 0, i32 8, !dbg !11113
  %102 = load i8, i8* %bits_per_word124, align 1, !dbg !11113
  %call125 = call i32 @__spi_validate_bits_per_word(%struct.spi_controller* %100, i8 zeroext %102) #11, !dbg !11114
  %tobool126 = icmp ne i32 %call125, 0, !dbg !11114
  br i1 %tobool126, label %if.then127, label %if.end128, !dbg !11115

if.then127:                                       ; preds = %if.end123
  store i32 -22, i32* %retval, align 4, !dbg !11116
  br label %return, !dbg !11116

if.end128:                                        ; preds = %if.end123
  %103 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11117
  %bits_per_word129 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %103, i32 0, i32 8, !dbg !11119
  %104 = load i8, i8* %bits_per_word129, align 1, !dbg !11119
  %conv130 = zext i8 %104 to i32, !dbg !11117
  %cmp131 = icmp sle i32 %conv130, 8, !dbg !11120
  br i1 %cmp131, label %if.then133, label %if.else, !dbg !11121

if.then133:                                       ; preds = %if.end128
  store i32 1, i32* %w_size, align 4, !dbg !11122
  br label %if.end141, !dbg !11123

if.else:                                          ; preds = %if.end128
  %105 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11124
  %bits_per_word134 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %105, i32 0, i32 8, !dbg !11126
  %106 = load i8, i8* %bits_per_word134, align 1, !dbg !11126
  %conv135 = zext i8 %106 to i32, !dbg !11124
  %cmp136 = icmp sle i32 %conv135, 16, !dbg !11127
  br i1 %cmp136, label %if.then138, label %if.else139, !dbg !11128

if.then138:                                       ; preds = %if.else
  store i32 2, i32* %w_size, align 4, !dbg !11129
  br label %if.end140, !dbg !11130

if.else139:                                       ; preds = %if.else
  store i32 4, i32* %w_size, align 4, !dbg !11131
  br label %if.end140

if.end140:                                        ; preds = %if.else139, %if.then138
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then133
  %107 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11132
  %len142 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %107, i32 0, i32 2, !dbg !11134
  %108 = load i32, i32* %len142, align 8, !dbg !11134
  %109 = load i32, i32* %w_size, align 4, !dbg !11135
  %rem = urem i32 %108, %109, !dbg !11136
  %tobool143 = icmp ne i32 %rem, 0, !dbg !11136
  br i1 %tobool143, label %if.then144, label %if.end145, !dbg !11137

if.then144:                                       ; preds = %if.end141
  store i32 -22, i32* %retval, align 4, !dbg !11138
  br label %return, !dbg !11138

if.end145:                                        ; preds = %if.end141
  %110 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11139
  %speed_hz146 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %110, i32 0, i32 13, !dbg !11141
  %111 = load i32, i32* %speed_hz146, align 8, !dbg !11141
  %tobool147 = icmp ne i32 %111, 0, !dbg !11139
  br i1 %tobool147, label %land.lhs.true148, label %if.end156, !dbg !11142

land.lhs.true148:                                 ; preds = %if.end145
  %112 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11143
  %min_speed_hz = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %112, i32 0, i32 8, !dbg !11144
  %113 = load i32, i32* %min_speed_hz, align 4, !dbg !11144
  %tobool149 = icmp ne i32 %113, 0, !dbg !11143
  br i1 %tobool149, label %land.lhs.true150, label %if.end156, !dbg !11145

land.lhs.true150:                                 ; preds = %land.lhs.true148
  %114 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11146
  %speed_hz151 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %114, i32 0, i32 13, !dbg !11147
  %115 = load i32, i32* %speed_hz151, align 8, !dbg !11147
  %116 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11148
  %min_speed_hz152 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %116, i32 0, i32 8, !dbg !11149
  %117 = load i32, i32* %min_speed_hz152, align 4, !dbg !11149
  %cmp153 = icmp ult i32 %115, %117, !dbg !11150
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !11151

if.then155:                                       ; preds = %land.lhs.true150
  store i32 -22, i32* %retval, align 4, !dbg !11152
  br label %return, !dbg !11152

if.end156:                                        ; preds = %land.lhs.true150, %land.lhs.true148, %if.end145
  %118 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11153
  %tx_buf157 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %118, i32 0, i32 0, !dbg !11155
  %119 = load i8*, i8** %tx_buf157, align 8, !dbg !11155
  %tobool158 = icmp ne i8* %119, null, !dbg !11153
  br i1 %tobool158, label %land.lhs.true159, label %if.end168, !dbg !11156

land.lhs.true159:                                 ; preds = %if.end156
  %120 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11157
  %tx_nbits = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %120, i32 0, i32 7, !dbg !11158
  %bf.load160 = load i8, i8* %tx_nbits, align 8, !dbg !11158
  %bf.lshr = lshr i8 %bf.load160, 1, !dbg !11158
  %bf.clear161 = and i8 %bf.lshr, 7, !dbg !11158
  %bf.cast = zext i8 %bf.clear161 to i32, !dbg !11158
  %tobool162 = icmp ne i32 %bf.cast, 0, !dbg !11157
  br i1 %tobool162, label %if.end168, label %if.then163, !dbg !11159

if.then163:                                       ; preds = %land.lhs.true159
  %121 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11160
  %tx_nbits164 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %121, i32 0, i32 7, !dbg !11161
  %bf.load165 = load i8, i8* %tx_nbits164, align 8, !dbg !11162
  %bf.clear166 = and i8 %bf.load165, -15, !dbg !11162
  %bf.set167 = or i8 %bf.clear166, 2, !dbg !11162
  store i8 %bf.set167, i8* %tx_nbits164, align 8, !dbg !11162
  br label %if.end168, !dbg !11160

if.end168:                                        ; preds = %if.then163, %land.lhs.true159, %if.end156
  %122 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11163
  %rx_buf169 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %122, i32 0, i32 1, !dbg !11165
  %123 = load i8*, i8** %rx_buf169, align 8, !dbg !11165
  %tobool170 = icmp ne i8* %123, null, !dbg !11163
  br i1 %tobool170, label %land.lhs.true171, label %if.end182, !dbg !11166

land.lhs.true171:                                 ; preds = %if.end168
  %124 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11167
  %rx_nbits = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %124, i32 0, i32 7, !dbg !11168
  %bf.load172 = load i8, i8* %rx_nbits, align 8, !dbg !11168
  %bf.lshr173 = lshr i8 %bf.load172, 4, !dbg !11168
  %bf.clear174 = and i8 %bf.lshr173, 7, !dbg !11168
  %bf.cast175 = zext i8 %bf.clear174 to i32, !dbg !11168
  %tobool176 = icmp ne i32 %bf.cast175, 0, !dbg !11167
  br i1 %tobool176, label %if.end182, label %if.then177, !dbg !11169

if.then177:                                       ; preds = %land.lhs.true171
  %125 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11170
  %rx_nbits178 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %125, i32 0, i32 7, !dbg !11171
  %bf.load179 = load i8, i8* %rx_nbits178, align 8, !dbg !11172
  %bf.clear180 = and i8 %bf.load179, -113, !dbg !11172
  %bf.set181 = or i8 %bf.clear180, 16, !dbg !11172
  store i8 %bf.set181, i8* %rx_nbits178, align 8, !dbg !11172
  br label %if.end182, !dbg !11170

if.end182:                                        ; preds = %if.then177, %land.lhs.true171, %if.end168
  %126 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11173
  %tx_buf183 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %126, i32 0, i32 0, !dbg !11175
  %127 = load i8*, i8** %tx_buf183, align 8, !dbg !11175
  %tobool184 = icmp ne i8* %127, null, !dbg !11173
  br i1 %tobool184, label %if.then185, label %if.end237, !dbg !11176

if.then185:                                       ; preds = %if.end182
  %128 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11177
  %tx_nbits186 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %128, i32 0, i32 7, !dbg !11180
  %bf.load187 = load i8, i8* %tx_nbits186, align 8, !dbg !11180
  %bf.lshr188 = lshr i8 %bf.load187, 1, !dbg !11180
  %bf.clear189 = and i8 %bf.lshr188, 7, !dbg !11180
  %bf.cast190 = zext i8 %bf.clear189 to i32, !dbg !11180
  %cmp191 = icmp ne i32 %bf.cast190, 1, !dbg !11181
  br i1 %cmp191, label %land.lhs.true193, label %if.end210, !dbg !11182

land.lhs.true193:                                 ; preds = %if.then185
  %129 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11183
  %tx_nbits194 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %129, i32 0, i32 7, !dbg !11184
  %bf.load195 = load i8, i8* %tx_nbits194, align 8, !dbg !11184
  %bf.lshr196 = lshr i8 %bf.load195, 1, !dbg !11184
  %bf.clear197 = and i8 %bf.lshr196, 7, !dbg !11184
  %bf.cast198 = zext i8 %bf.clear197 to i32, !dbg !11184
  %cmp199 = icmp ne i32 %bf.cast198, 2, !dbg !11185
  br i1 %cmp199, label %land.lhs.true201, label %if.end210, !dbg !11186

land.lhs.true201:                                 ; preds = %land.lhs.true193
  %130 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11187
  %tx_nbits202 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %130, i32 0, i32 7, !dbg !11188
  %bf.load203 = load i8, i8* %tx_nbits202, align 8, !dbg !11188
  %bf.lshr204 = lshr i8 %bf.load203, 1, !dbg !11188
  %bf.clear205 = and i8 %bf.lshr204, 7, !dbg !11188
  %bf.cast206 = zext i8 %bf.clear205 to i32, !dbg !11188
  %cmp207 = icmp ne i32 %bf.cast206, 4, !dbg !11189
  br i1 %cmp207, label %if.then209, label %if.end210, !dbg !11190

if.then209:                                       ; preds = %land.lhs.true201
  store i32 -22, i32* %retval, align 4, !dbg !11191
  br label %return, !dbg !11191

if.end210:                                        ; preds = %land.lhs.true201, %land.lhs.true193, %if.then185
  %131 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11192
  %tx_nbits211 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %131, i32 0, i32 7, !dbg !11194
  %bf.load212 = load i8, i8* %tx_nbits211, align 8, !dbg !11194
  %bf.lshr213 = lshr i8 %bf.load212, 1, !dbg !11194
  %bf.clear214 = and i8 %bf.lshr213, 7, !dbg !11194
  %bf.cast215 = zext i8 %bf.clear214 to i32, !dbg !11194
  %cmp216 = icmp eq i32 %bf.cast215, 2, !dbg !11195
  br i1 %cmp216, label %land.lhs.true218, label %if.end223, !dbg !11196

land.lhs.true218:                                 ; preds = %if.end210
  %132 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11197
  %mode219 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %132, i32 0, i32 7, !dbg !11198
  %133 = load i32, i32* %mode219, align 8, !dbg !11198
  %and220 = and i32 %133, 768, !dbg !11199
  %tobool221 = icmp ne i32 %and220, 0, !dbg !11199
  br i1 %tobool221, label %if.end223, label %if.then222, !dbg !11200

if.then222:                                       ; preds = %land.lhs.true218
  store i32 -22, i32* %retval, align 4, !dbg !11201
  br label %return, !dbg !11201

if.end223:                                        ; preds = %land.lhs.true218, %if.end210
  %134 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11202
  %tx_nbits224 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %134, i32 0, i32 7, !dbg !11204
  %bf.load225 = load i8, i8* %tx_nbits224, align 8, !dbg !11204
  %bf.lshr226 = lshr i8 %bf.load225, 1, !dbg !11204
  %bf.clear227 = and i8 %bf.lshr226, 7, !dbg !11204
  %bf.cast228 = zext i8 %bf.clear227 to i32, !dbg !11204
  %cmp229 = icmp eq i32 %bf.cast228, 4, !dbg !11205
  br i1 %cmp229, label %land.lhs.true231, label %if.end236, !dbg !11206

land.lhs.true231:                                 ; preds = %if.end223
  %135 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11207
  %mode232 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %135, i32 0, i32 7, !dbg !11208
  %136 = load i32, i32* %mode232, align 8, !dbg !11208
  %and233 = and i32 %136, 512, !dbg !11209
  %tobool234 = icmp ne i32 %and233, 0, !dbg !11209
  br i1 %tobool234, label %if.end236, label %if.then235, !dbg !11210

if.then235:                                       ; preds = %land.lhs.true231
  store i32 -22, i32* %retval, align 4, !dbg !11211
  br label %return, !dbg !11211

if.end236:                                        ; preds = %land.lhs.true231, %if.end223
  br label %if.end237, !dbg !11212

if.end237:                                        ; preds = %if.end236, %if.end182
  %137 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11213
  %rx_buf238 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %137, i32 0, i32 1, !dbg !11215
  %138 = load i8*, i8** %rx_buf238, align 8, !dbg !11215
  %tobool239 = icmp ne i8* %138, null, !dbg !11213
  br i1 %tobool239, label %if.then240, label %if.end292, !dbg !11216

if.then240:                                       ; preds = %if.end237
  %139 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11217
  %rx_nbits241 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %139, i32 0, i32 7, !dbg !11220
  %bf.load242 = load i8, i8* %rx_nbits241, align 8, !dbg !11220
  %bf.lshr243 = lshr i8 %bf.load242, 4, !dbg !11220
  %bf.clear244 = and i8 %bf.lshr243, 7, !dbg !11220
  %bf.cast245 = zext i8 %bf.clear244 to i32, !dbg !11220
  %cmp246 = icmp ne i32 %bf.cast245, 1, !dbg !11221
  br i1 %cmp246, label %land.lhs.true248, label %if.end265, !dbg !11222

land.lhs.true248:                                 ; preds = %if.then240
  %140 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11223
  %rx_nbits249 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %140, i32 0, i32 7, !dbg !11224
  %bf.load250 = load i8, i8* %rx_nbits249, align 8, !dbg !11224
  %bf.lshr251 = lshr i8 %bf.load250, 4, !dbg !11224
  %bf.clear252 = and i8 %bf.lshr251, 7, !dbg !11224
  %bf.cast253 = zext i8 %bf.clear252 to i32, !dbg !11224
  %cmp254 = icmp ne i32 %bf.cast253, 2, !dbg !11225
  br i1 %cmp254, label %land.lhs.true256, label %if.end265, !dbg !11226

land.lhs.true256:                                 ; preds = %land.lhs.true248
  %141 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11227
  %rx_nbits257 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %141, i32 0, i32 7, !dbg !11228
  %bf.load258 = load i8, i8* %rx_nbits257, align 8, !dbg !11228
  %bf.lshr259 = lshr i8 %bf.load258, 4, !dbg !11228
  %bf.clear260 = and i8 %bf.lshr259, 7, !dbg !11228
  %bf.cast261 = zext i8 %bf.clear260 to i32, !dbg !11228
  %cmp262 = icmp ne i32 %bf.cast261, 4, !dbg !11229
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !11230

if.then264:                                       ; preds = %land.lhs.true256
  store i32 -22, i32* %retval, align 4, !dbg !11231
  br label %return, !dbg !11231

if.end265:                                        ; preds = %land.lhs.true256, %land.lhs.true248, %if.then240
  %142 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11232
  %rx_nbits266 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %142, i32 0, i32 7, !dbg !11234
  %bf.load267 = load i8, i8* %rx_nbits266, align 8, !dbg !11234
  %bf.lshr268 = lshr i8 %bf.load267, 4, !dbg !11234
  %bf.clear269 = and i8 %bf.lshr268, 7, !dbg !11234
  %bf.cast270 = zext i8 %bf.clear269 to i32, !dbg !11234
  %cmp271 = icmp eq i32 %bf.cast270, 2, !dbg !11235
  br i1 %cmp271, label %land.lhs.true273, label %if.end278, !dbg !11236

land.lhs.true273:                                 ; preds = %if.end265
  %143 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11237
  %mode274 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %143, i32 0, i32 7, !dbg !11238
  %144 = load i32, i32* %mode274, align 8, !dbg !11238
  %and275 = and i32 %144, 3072, !dbg !11239
  %tobool276 = icmp ne i32 %and275, 0, !dbg !11239
  br i1 %tobool276, label %if.end278, label %if.then277, !dbg !11240

if.then277:                                       ; preds = %land.lhs.true273
  store i32 -22, i32* %retval, align 4, !dbg !11241
  br label %return, !dbg !11241

if.end278:                                        ; preds = %land.lhs.true273, %if.end265
  %145 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11242
  %rx_nbits279 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %145, i32 0, i32 7, !dbg !11244
  %bf.load280 = load i8, i8* %rx_nbits279, align 8, !dbg !11244
  %bf.lshr281 = lshr i8 %bf.load280, 4, !dbg !11244
  %bf.clear282 = and i8 %bf.lshr281, 7, !dbg !11244
  %bf.cast283 = zext i8 %bf.clear282 to i32, !dbg !11244
  %cmp284 = icmp eq i32 %bf.cast283, 4, !dbg !11245
  br i1 %cmp284, label %land.lhs.true286, label %if.end291, !dbg !11246

land.lhs.true286:                                 ; preds = %if.end278
  %146 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11247
  %mode287 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %146, i32 0, i32 7, !dbg !11248
  %147 = load i32, i32* %mode287, align 8, !dbg !11248
  %and288 = and i32 %147, 2048, !dbg !11249
  %tobool289 = icmp ne i32 %and288, 0, !dbg !11249
  br i1 %tobool289, label %if.end291, label %if.then290, !dbg !11250

if.then290:                                       ; preds = %land.lhs.true286
  store i32 -22, i32* %retval, align 4, !dbg !11251
  br label %return, !dbg !11251

if.end291:                                        ; preds = %land.lhs.true286, %if.end278
  br label %if.end292, !dbg !11252

if.end292:                                        ; preds = %if.end291, %if.end237
  %148 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11253
  %149 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11255
  %call293 = call i32 @_spi_xfer_word_delay_update(%struct.spi_transfer* %148, %struct.spi_device* %149) #11, !dbg !11256
  %tobool294 = icmp ne i32 %call293, 0, !dbg !11256
  br i1 %tobool294, label %if.then295, label %if.end296, !dbg !11257

if.then295:                                       ; preds = %if.end292
  store i32 -22, i32* %retval, align 4, !dbg !11258
  br label %return, !dbg !11258

if.end296:                                        ; preds = %if.end292
  br label %for.inc297, !dbg !11259

for.inc297:                                       ; preds = %if.end296
  call void @llvm.dbg.declare(metadata i8** %__mptr298, metadata !11260, metadata !DIExpression()), !dbg !11262
  %150 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11262
  %transfer_list299 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %150, i32 0, i32 19, !dbg !11262
  %next300 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list299, i32 0, i32 0, !dbg !11262
  %151 = load %struct.list_head*, %struct.list_head** %next300, align 8, !dbg !11262
  %152 = bitcast %struct.list_head* %151 to i8*, !dbg !11262
  store i8* %152, i8** %__mptr298, align 8, !dbg !11262
  br label %do.body301, !dbg !11262

do.body301:                                       ; preds = %for.inc297
  br label %do.end302, !dbg !11263

do.end302:                                        ; preds = %do.body301
  %153 = load i8*, i8** %__mptr298, align 8, !dbg !11262
  %add.ptr304 = getelementptr i8, i8* %153, i64 -120, !dbg !11262
  %154 = bitcast i8* %add.ptr304 to %struct.spi_transfer*, !dbg !11262
  store %struct.spi_transfer* %154, %struct.spi_transfer** %tmp303, align 8, !dbg !11263
  %155 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp303, align 8, !dbg !11262
  store %struct.spi_transfer* %155, %struct.spi_transfer** %xfer, align 8, !dbg !11066
  br label %for.cond94, !dbg !11066, !llvm.loop !11265

for.end305:                                       ; preds = %for.cond94
  %156 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11267
  %status = getelementptr inbounds %struct.spi_message, %struct.spi_message* %156, i32 0, i32 7, !dbg !11268
  store i32 -115, i32* %status, align 8, !dbg !11269
  store i32 0, i32* %retval, align 4, !dbg !11270
  br label %return, !dbg !11270

return:                                           ; preds = %for.end305, %if.then295, %if.then290, %if.then277, %if.then264, %if.then235, %if.then222, %if.then209, %if.then155, %if.then144, %if.then127, %if.then75, %if.then67, %if.then59, %if.then12, %if.then
  %157 = load i32, i32* %retval, align 4, !dbg !11271
  ret i32 %157, !dbg !11271
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_async(%struct.spi_device* %spi, %struct.spi_message* %message) #0 !dbg !11272 {
entry:
  %lock.addr.i83 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i83, metadata !5420, metadata !DIExpression()), !dbg !11273
  %flags.addr.i84 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i84, metadata !5427, metadata !DIExpression()), !dbg !11276
  %tmp.i85 = alloca i32, align 4
  %tmp8.i86 = alloca i32, align 4
  %lock.addr.i81 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i81, metadata !5429, metadata !DIExpression()), !dbg !11277
  %lock.addr.i79 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i79, metadata !5420, metadata !DIExpression()), !dbg !11284
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !11287
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !11288
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy7 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %tmp11 = alloca i32, align 4
  %flags26 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %__dummy230 = alloca i64, align 8
  %tmp33 = alloca i32, align 4
  %__dummy37 = alloca i64, align 8
  %__dummy238 = alloca i64, align 8
  %tmp41 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp65 = alloca %struct.spi_transfer*, align 8
  %__mptr69 = alloca i8*, align 8
  %tmp74 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !11295, metadata !DIExpression()), !dbg !11296
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !11297, metadata !DIExpression()), !dbg !11298
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !11299, metadata !DIExpression()), !dbg !11300
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11301
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !11302
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !11302
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !11300
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !11303, metadata !DIExpression()), !dbg !11304
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11305
  %transfer = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 20, !dbg !11307
  %3 = load i32 (%struct.spi_device*, %struct.spi_message*)*, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer, align 8, !dbg !11307
  %tobool = icmp ne i32 (%struct.spi_device*, %struct.spi_message*)* %3, null, !dbg !11305
  br i1 %tobool, label %if.end, label %if.then, !dbg !11308

if.then:                                          ; preds = %entry
  store i32 -524, i32* %retval, align 4, !dbg !11309
  br label %return, !dbg !11309

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11310
  %5 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11311
  %spi1 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %5, i32 0, i32 1, !dbg !11312
  store %struct.spi_device* %4, %struct.spi_device** %spi1, align 8, !dbg !11313
  br label %do.body, !dbg !11314

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11315, metadata !DIExpression()), !dbg !11316
  br label %do.body2, !dbg !11316

do.body2:                                         ; preds = %do.body
  br label %do.body3, !dbg !11317

do.body3:                                         ; preds = %do.body2
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11318, metadata !DIExpression()), !dbg !11320
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11321, metadata !DIExpression()), !dbg !11320
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11320
  %conv = zext i1 %cmp to i32, !dbg !11320
  store i32 1, i32* %tmp, align 4, !dbg !11320
  %6 = load i32, i32* %tmp, align 4, !dbg !11320
  br label %do.body4, !dbg !11322

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11323

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !11324

do.body6:                                         ; preds = %do.body5
  call void @llvm.dbg.declare(metadata i64* %__dummy7, metadata !11326, metadata !DIExpression()), !dbg !11329
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !11330, metadata !DIExpression()), !dbg !11329
  %cmp9 = icmp eq i64* %__dummy7, %__dummy28, !dbg !11329
  %conv10 = zext i1 %cmp9 to i32, !dbg !11329
  store i32 1, i32* %tmp11, align 4, !dbg !11329
  %7 = load i32, i32* %tmp11, align 4, !dbg !11329
  %call = call i64 @arch_local_irq_save() #11, !dbg !11331
  store i64 %call, i64* %flags, align 8, !dbg !11331
  br label %do.end, !dbg !11331

do.end:                                           ; preds = %do.body6
  br label %do.end12, !dbg !11324

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !11323

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11332, !srcloc !11333
  br label %do.body14, !dbg !11332

do.body14:                                        ; preds = %do.body13
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11334
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %8, i32 0, i32 59, !dbg !11334
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics, i32 0, i32 0, !dbg !11334
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11335
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11336
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !11336
  br label %do.end16, !dbg !11334

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !11332

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11323

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11322

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11317

do.end20:                                         ; preds = %do.end19
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11316
  %statistics21 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %11, i32 0, i32 59, !dbg !11316
  %spi_async = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics21, i32 0, i32 7, !dbg !11316
  %12 = load i64, i64* %spi_async, align 8, !dbg !11316
  %add = add i64 %12, 1, !dbg !11316
  store i64 %add, i64* %spi_async, align 8, !dbg !11316
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11316
  %statistics22 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %13, i32 0, i32 59, !dbg !11316
  %lock23 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics22, i32 0, i32 0, !dbg !11316
  %14 = load i64, i64* %flags, align 8, !dbg !11316
  store %struct.spinlock* %lock23, %struct.spinlock** %lock.addr.i79, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11337
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11337
  store i32 1, i32* %tmp.i, align 4, !dbg !11337
  %15 = load i32, i32* %tmp.i, align 4, !dbg !11337
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11338
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11338
  store i32 1, i32* %tmp8.i, align 4, !dbg !11338
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !11338
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !11339
  call void @arch_local_irq_restore(i64 %17) #12, !dbg !11339
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11340, !srcloc !5559
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i79, align 8, !dbg !11341
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !11341
  %rlock.i80 = bitcast %union.anon* %19 to %struct.raw_spinlock*, !dbg !11341
  br label %do.end24, !dbg !11316

do.end24:                                         ; preds = %do.end20
  br label %do.body25, !dbg !11342

do.body25:                                        ; preds = %do.end24
  call void @llvm.dbg.declare(metadata i64* %flags26, metadata !11343, metadata !DIExpression()), !dbg !11344
  br label %do.body27, !dbg !11344

do.body27:                                        ; preds = %do.body25
  br label %do.body28, !dbg !11345

do.body28:                                        ; preds = %do.body27
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !11346, metadata !DIExpression()), !dbg !11348
  call void @llvm.dbg.declare(metadata i64* %__dummy230, metadata !11349, metadata !DIExpression()), !dbg !11348
  %cmp31 = icmp eq i64* %__dummy29, %__dummy230, !dbg !11348
  %conv32 = zext i1 %cmp31 to i32, !dbg !11348
  store i32 1, i32* %tmp33, align 4, !dbg !11348
  %20 = load i32, i32* %tmp33, align 4, !dbg !11348
  br label %do.body34, !dbg !11350

do.body34:                                        ; preds = %do.body28
  br label %do.body35, !dbg !11351

do.body35:                                        ; preds = %do.body34
  br label %do.body36, !dbg !11352

do.body36:                                        ; preds = %do.body35
  call void @llvm.dbg.declare(metadata i64* %__dummy37, metadata !11354, metadata !DIExpression()), !dbg !11357
  call void @llvm.dbg.declare(metadata i64* %__dummy238, metadata !11358, metadata !DIExpression()), !dbg !11357
  %cmp39 = icmp eq i64* %__dummy37, %__dummy238, !dbg !11357
  %conv40 = zext i1 %cmp39 to i32, !dbg !11357
  store i32 1, i32* %tmp41, align 4, !dbg !11357
  %21 = load i32, i32* %tmp41, align 4, !dbg !11357
  %call42 = call i64 @arch_local_irq_save() #11, !dbg !11359
  store i64 %call42, i64* %flags26, align 8, !dbg !11359
  br label %do.end43, !dbg !11359

do.end43:                                         ; preds = %do.body36
  br label %do.end44, !dbg !11352

do.end44:                                         ; preds = %do.end43
  br label %do.body45, !dbg !11351

do.body45:                                        ; preds = %do.end44
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11360, !srcloc !11361
  br label %do.body46, !dbg !11360

do.body46:                                        ; preds = %do.body45
  %22 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11362
  %statistics47 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %22, i32 0, i32 16, !dbg !11362
  %lock48 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics47, i32 0, i32 0, !dbg !11362
  store %struct.spinlock* %lock48, %struct.spinlock** %lock.addr.i81, align 8
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i81, align 8, !dbg !11363
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !11364
  %rlock.i82 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !11364
  br label %do.end50, !dbg !11362

do.end50:                                         ; preds = %do.body46
  br label %do.end51, !dbg !11360

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !11351

do.end52:                                         ; preds = %do.end51
  br label %do.end53, !dbg !11350

do.end53:                                         ; preds = %do.end52
  br label %do.end54, !dbg !11345

do.end54:                                         ; preds = %do.end53
  %25 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11344
  %statistics55 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %25, i32 0, i32 16, !dbg !11344
  %spi_async56 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics55, i32 0, i32 7, !dbg !11344
  %26 = load i64, i64* %spi_async56, align 8, !dbg !11344
  %add57 = add i64 %26, 1, !dbg !11344
  store i64 %add57, i64* %spi_async56, align 8, !dbg !11344
  %27 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11344
  %statistics58 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %27, i32 0, i32 16, !dbg !11344
  %lock59 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics58, i32 0, i32 0, !dbg !11344
  %28 = load i64, i64* %flags26, align 8, !dbg !11344
  store %struct.spinlock* %lock59, %struct.spinlock** %lock.addr.i83, align 8
  store i64 %28, i64* %flags.addr.i84, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11365
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11365
  store i32 1, i32* %tmp.i85, align 4, !dbg !11365
  %29 = load i32, i32* %tmp.i85, align 4, !dbg !11365
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11366
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11366
  store i32 1, i32* %tmp8.i86, align 4, !dbg !11366
  %30 = load i32, i32* %tmp8.i86, align 4, !dbg !11366
  %31 = load i64, i64* %flags.addr.i84, align 8, !dbg !11367
  call void @arch_local_irq_restore(i64 %31) #12, !dbg !11367
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11368, !srcloc !5559
  %32 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i83, align 8, !dbg !11369
  %33 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %32, i32 0, i32 0, !dbg !11369
  %rlock.i87 = bitcast %union.anon* %33 to %struct.raw_spinlock*, !dbg !11369
  br label %do.end60, !dbg !11344

do.end60:                                         ; preds = %do.end54
  %34 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11370
  call void @trace_spi_message_submit(%struct.spi_message* %34) #11, !dbg !11371
  %35 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11372
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %35, i32 0, i32 65, !dbg !11374
  %36 = load i8, i8* %ptp_sts_supported, align 8, !dbg !11374
  %tobool61 = trunc i8 %36 to i1, !dbg !11374
  br i1 %tobool61, label %if.end76, label %if.then62, !dbg !11375

if.then62:                                        ; preds = %do.end60
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !11376, metadata !DIExpression()), !dbg !11380
  %37 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11380
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %37, i32 0, i32 0, !dbg !11380
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !11380
  %38 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !11380
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !11380
  store i8* %39, i8** %__mptr, align 8, !dbg !11380
  br label %do.body63, !dbg !11380

do.body63:                                        ; preds = %if.then62
  br label %do.end64, !dbg !11381

do.end64:                                         ; preds = %do.body63
  %40 = load i8*, i8** %__mptr, align 8, !dbg !11380
  %add.ptr = getelementptr i8, i8* %40, i64 -120, !dbg !11380
  %41 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !11380
  store %struct.spi_transfer* %41, %struct.spi_transfer** %tmp65, align 8, !dbg !11381
  %42 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp65, align 8, !dbg !11380
  store %struct.spi_transfer* %42, %struct.spi_transfer** %xfer, align 8, !dbg !11383
  br label %for.cond, !dbg !11383

for.cond:                                         ; preds = %do.end73, %do.end64
  %43 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11384
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %43, i32 0, i32 19, !dbg !11384
  %44 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11384
  %transfers66 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %44, i32 0, i32 0, !dbg !11384
  %cmp67 = icmp eq %struct.list_head* %transfer_list, %transfers66, !dbg !11384
  %lnot = xor i1 %cmp67, true, !dbg !11384
  br i1 %lnot, label %for.body, label %for.end, !dbg !11383

for.body:                                         ; preds = %for.cond
  %45 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11386
  %ptp_sts_word_pre = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %45, i32 0, i32 15, !dbg !11388
  store i32 0, i32* %ptp_sts_word_pre, align 8, !dbg !11389
  %46 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11390
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %46, i32 0, i32 17, !dbg !11391
  %47 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts, align 8, !dbg !11391
  call void @ptp_read_system_prets(%struct.ptp_system_timestamp* %47) #11, !dbg !11392
  br label %for.inc, !dbg !11393

for.inc:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %__mptr69, metadata !11394, metadata !DIExpression()), !dbg !11396
  %48 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !11396
  %transfer_list70 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %48, i32 0, i32 19, !dbg !11396
  %next71 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list70, i32 0, i32 0, !dbg !11396
  %49 = load %struct.list_head*, %struct.list_head** %next71, align 8, !dbg !11396
  %50 = bitcast %struct.list_head* %49 to i8*, !dbg !11396
  store i8* %50, i8** %__mptr69, align 8, !dbg !11396
  br label %do.body72, !dbg !11396

do.body72:                                        ; preds = %for.inc
  br label %do.end73, !dbg !11397

do.end73:                                         ; preds = %do.body72
  %51 = load i8*, i8** %__mptr69, align 8, !dbg !11396
  %add.ptr75 = getelementptr i8, i8* %51, i64 -120, !dbg !11396
  %52 = bitcast i8* %add.ptr75 to %struct.spi_transfer*, !dbg !11396
  store %struct.spi_transfer* %52, %struct.spi_transfer** %tmp74, align 8, !dbg !11397
  %53 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp74, align 8, !dbg !11396
  store %struct.spi_transfer* %53, %struct.spi_transfer** %xfer, align 8, !dbg !11384
  br label %for.cond, !dbg !11384, !llvm.loop !11399

for.end:                                          ; preds = %for.cond
  br label %if.end76, !dbg !11401

if.end76:                                         ; preds = %for.end, %do.end60
  %54 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11402
  %transfer77 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %54, i32 0, i32 20, !dbg !11403
  %55 = load i32 (%struct.spi_device*, %struct.spi_message*)*, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer77, align 8, !dbg !11403
  %56 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11404
  %57 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11405
  %call78 = call i32 %55(%struct.spi_device* %56, %struct.spi_message* %57) #11, !dbg !11402
  store i32 %call78, i32* %retval, align 4, !dbg !11406
  br label %return, !dbg !11406

return:                                           ; preds = %if.end76, %if.then
  %58 = load i32, i32* %retval, align 4, !dbg !11407
  ret i32 %58, !dbg !11407
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_async_locked(%struct.spi_device* %spi, %struct.spi_message* %message) #0 !dbg !11408 {
entry:
  %lock.addr.i23 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i23, metadata !5420, metadata !DIExpression()), !dbg !11409
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !11411
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !11412
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %ret = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy6 = alloca i64, align 8
  %__dummy27 = alloca i64, align 8
  %tmp10 = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !11419, metadata !DIExpression()), !dbg !11420
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !11421, metadata !DIExpression()), !dbg !11422
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !11423, metadata !DIExpression()), !dbg !11424
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11425
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !11426
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !11426
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !11424
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11427, metadata !DIExpression()), !dbg !11428
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11429, metadata !DIExpression()), !dbg !11430
  %2 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11431
  %3 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11432
  %call = call i32 @__spi_validate(%struct.spi_device* %2, %struct.spi_message* %3) #11, !dbg !11433
  store i32 %call, i32* %ret, align 4, !dbg !11434
  %4 = load i32, i32* %ret, align 4, !dbg !11435
  %cmp = icmp ne i32 %4, 0, !dbg !11437
  br i1 %cmp, label %if.then, label %if.end, !dbg !11438

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !11439
  store i32 %5, i32* %retval, align 4, !dbg !11440
  br label %return, !dbg !11440

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !11441

do.body:                                          ; preds = %if.end
  br label %do.body1, !dbg !11442

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11443, metadata !DIExpression()), !dbg !11445
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11446, metadata !DIExpression()), !dbg !11445
  %cmp2 = icmp eq i64* %__dummy, %__dummy2, !dbg !11445
  %conv = zext i1 %cmp2 to i32, !dbg !11445
  store i32 1, i32* %tmp, align 4, !dbg !11445
  %6 = load i32, i32* %tmp, align 4, !dbg !11445
  br label %do.body3, !dbg !11447

do.body3:                                         ; preds = %do.body1
  br label %do.body4, !dbg !11448

do.body4:                                         ; preds = %do.body3
  br label %do.body5, !dbg !11449

do.body5:                                         ; preds = %do.body4
  call void @llvm.dbg.declare(metadata i64* %__dummy6, metadata !11451, metadata !DIExpression()), !dbg !11454
  call void @llvm.dbg.declare(metadata i64* %__dummy27, metadata !11455, metadata !DIExpression()), !dbg !11454
  %cmp8 = icmp eq i64* %__dummy6, %__dummy27, !dbg !11454
  %conv9 = zext i1 %cmp8 to i32, !dbg !11454
  store i32 1, i32* %tmp10, align 4, !dbg !11454
  %7 = load i32, i32* %tmp10, align 4, !dbg !11454
  %call11 = call i64 @arch_local_irq_save() #11, !dbg !11456
  store i64 %call11, i64* %flags, align 8, !dbg !11456
  br label %do.end, !dbg !11456

do.end:                                           ; preds = %do.body5
  br label %do.end12, !dbg !11449

do.end12:                                         ; preds = %do.end
  br label %do.body13, !dbg !11448

do.body13:                                        ; preds = %do.end12
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11457, !srcloc !11458
  br label %do.body14, !dbg !11457

do.body14:                                        ; preds = %do.body13
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11459
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %8, i32 0, i32 15, !dbg !11459
  store %struct.spinlock* %bus_lock_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %9 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11460
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0, !dbg !11461
  %rlock.i = bitcast %union.anon* %10 to %struct.raw_spinlock*, !dbg !11461
  br label %do.end16, !dbg !11459

do.end16:                                         ; preds = %do.body14
  br label %do.end17, !dbg !11457

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11448

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !11447

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !11442

do.end20:                                         ; preds = %do.end19
  %11 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11462
  %12 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11463
  %call21 = call i32 @__spi_async(%struct.spi_device* %11, %struct.spi_message* %12) #11, !dbg !11464
  store i32 %call21, i32* %ret, align 4, !dbg !11465
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11466
  %bus_lock_spinlock22 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %13, i32 0, i32 15, !dbg !11467
  %14 = load i64, i64* %flags, align 8, !dbg !11468
  store %struct.spinlock* %bus_lock_spinlock22, %struct.spinlock** %lock.addr.i23, align 8
  store i64 %14, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11469
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11469
  store i32 1, i32* %tmp.i, align 4, !dbg !11469
  %15 = load i32, i32* %tmp.i, align 4, !dbg !11469
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11470
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11470
  store i32 1, i32* %tmp8.i, align 4, !dbg !11470
  %16 = load i32, i32* %tmp8.i, align 4, !dbg !11470
  %17 = load i64, i64* %flags.addr.i, align 8, !dbg !11471
  call void @arch_local_irq_restore(i64 %17) #12, !dbg !11471
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11472, !srcloc !5559
  %18 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i23, align 8, !dbg !11473
  %19 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %18, i32 0, i32 0, !dbg !11473
  %rlock.i24 = bitcast %union.anon* %19 to %struct.raw_spinlock*, !dbg !11473
  %20 = load i32, i32* %ret, align 4, !dbg !11474
  store i32 %20, i32* %retval, align 4, !dbg !11475
  br label %return, !dbg !11475

return:                                           ; preds = %do.end20, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !11476
  ret i32 %21, !dbg !11476
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_sync(%struct.spi_device* %spi, %struct.spi_message* %message) #0 !dbg !11477 {
entry:
  %spi.addr = alloca %struct.spi_device*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  %ret = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !11478, metadata !DIExpression()), !dbg !11479
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !11480, metadata !DIExpression()), !dbg !11481
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11482, metadata !DIExpression()), !dbg !11483
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11484
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !11485
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !11485
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 16, !dbg !11486
  call void @mutex_lock(%struct.mutex* %bus_lock_mutex) #11, !dbg !11487
  %2 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11488
  %3 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11489
  %call = call i32 @__spi_sync(%struct.spi_device* %2, %struct.spi_message* %3) #11, !dbg !11490
  store i32 %call, i32* %ret, align 4, !dbg !11491
  %4 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11492
  %controller1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %4, i32 0, i32 1, !dbg !11493
  %5 = load %struct.spi_controller*, %struct.spi_controller** %controller1, align 8, !dbg !11493
  %bus_lock_mutex2 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 16, !dbg !11494
  call void @mutex_unlock(%struct.mutex* %bus_lock_mutex2) #11, !dbg !11495
  %6 = load i32, i32* %ret, align 4, !dbg !11496
  ret i32 %6, !dbg !11497
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_sync(%struct.spi_device* %spi, %struct.spi_message* %message) #0 !dbg !11498 {
entry:
  %lock.addr.i209 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i209, metadata !5420, metadata !DIExpression()), !dbg !11499
  %flags.addr.i210 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i210, metadata !5427, metadata !DIExpression()), !dbg !11506
  %tmp.i211 = alloca i32, align 4
  %tmp8.i212 = alloca i32, align 4
  %lock.addr.i207 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i207, metadata !5429, metadata !DIExpression()), !dbg !11507
  %lock.addr.i202 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i202, metadata !5420, metadata !DIExpression()), !dbg !11514
  %flags.addr.i203 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i203, metadata !5427, metadata !DIExpression()), !dbg !11517
  %tmp.i204 = alloca i32, align 4
  %tmp8.i205 = alloca i32, align 4
  %lock.addr.i200 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i200, metadata !5429, metadata !DIExpression()), !dbg !11518
  %lock.addr.i195 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i195, metadata !5420, metadata !DIExpression()), !dbg !11525
  %flags.addr.i196 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i196, metadata !5427, metadata !DIExpression()), !dbg !11529
  %tmp.i197 = alloca i32, align 4
  %tmp8.i198 = alloca i32, align 4
  %lock.addr.i193 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i193, metadata !5429, metadata !DIExpression()), !dbg !11530
  %lock.addr.i188 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i188, metadata !5420, metadata !DIExpression()), !dbg !11537
  %flags.addr.i189 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i189, metadata !5427, metadata !DIExpression()), !dbg !11540
  %tmp.i190 = alloca i32, align 4
  %tmp8.i191 = alloca i32, align 4
  %lock.addr.i186 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i186, metadata !5429, metadata !DIExpression()), !dbg !11541
  %lock.addr.i184 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i184, metadata !5420, metadata !DIExpression()), !dbg !11548
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !11551
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !11552
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  %done = alloca %struct.completion, align 8
  %status = alloca i32, align 4
  %ctlr = alloca %struct.spi_controller*, align 8
  %flags = alloca i64, align 8
  %flags7 = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy14 = alloca i64, align 8
  %__dummy215 = alloca i64, align 8
  %tmp18 = alloca i32, align 4
  %flags34 = alloca i64, align 8
  %__dummy37 = alloca i64, align 8
  %__dummy238 = alloca i64, align 8
  %tmp41 = alloca i32, align 4
  %__dummy45 = alloca i64, align 8
  %__dummy246 = alloca i64, align 8
  %tmp49 = alloca i32, align 4
  %__dummy74 = alloca i64, align 8
  %__dummy275 = alloca i64, align 8
  %tmp78 = alloca i32, align 4
  %__dummy82 = alloca i64, align 8
  %__dummy283 = alloca i64, align 8
  %tmp86 = alloca i32, align 4
  %flags110 = alloca i64, align 8
  %__dummy113 = alloca i64, align 8
  %__dummy2114 = alloca i64, align 8
  %tmp117 = alloca i32, align 4
  %__dummy121 = alloca i64, align 8
  %__dummy2122 = alloca i64, align 8
  %tmp125 = alloca i32, align 4
  %flags145 = alloca i64, align 8
  %__dummy148 = alloca i64, align 8
  %__dummy2149 = alloca i64, align 8
  %tmp152 = alloca i32, align 4
  %__dummy156 = alloca i64, align 8
  %__dummy2157 = alloca i64, align 8
  %tmp160 = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !11559, metadata !DIExpression()), !dbg !11560
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !11561, metadata !DIExpression()), !dbg !11562
  call void @llvm.dbg.declare(metadata %struct.completion* %done, metadata !11563, metadata !DIExpression()), !dbg !11564
  %done1 = getelementptr inbounds %struct.completion, %struct.completion* %done, i32 0, i32 0, !dbg !11564
  store i32 0, i32* %done1, align 8, !dbg !11564
  %wait = getelementptr inbounds %struct.completion, %struct.completion* %done, i32 0, i32 1, !dbg !11564
  %task_list = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait, i32 0, i32 1, !dbg !11564
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0, !dbg !11564
  %wait2 = getelementptr inbounds %struct.completion, %struct.completion* %done, i32 0, i32 1, !dbg !11564
  %task_list3 = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait2, i32 0, i32 1, !dbg !11564
  store %struct.list_head* %task_list3, %struct.list_head** %next, align 8, !dbg !11564
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1, !dbg !11564
  %wait4 = getelementptr inbounds %struct.completion, %struct.completion* %done, i32 0, i32 1, !dbg !11564
  %task_list5 = getelementptr inbounds %struct.swait_queue_head, %struct.swait_queue_head* %wait4, i32 0, i32 1, !dbg !11564
  store %struct.list_head* %task_list5, %struct.list_head** %prev, align 8, !dbg !11564
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11565, metadata !DIExpression()), !dbg !11566
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !11567, metadata !DIExpression()), !dbg !11568
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11569
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !11570
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !11570
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !11568
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11571, metadata !DIExpression()), !dbg !11572
  %2 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11573
  %3 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11574
  %call = call i32 @__spi_validate(%struct.spi_device* %2, %struct.spi_message* %3) #11, !dbg !11575
  store i32 %call, i32* %status, align 4, !dbg !11576
  %4 = load i32, i32* %status, align 4, !dbg !11577
  %cmp = icmp ne i32 %4, 0, !dbg !11579
  br i1 %cmp, label %if.then, label %if.end, !dbg !11580

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %status, align 4, !dbg !11581
  store i32 %5, i32* %retval, align 4, !dbg !11582
  br label %return, !dbg !11582

if.end:                                           ; preds = %entry
  %6 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11583
  %complete = getelementptr inbounds %struct.spi_message, %struct.spi_message* %6, i32 0, i32 3, !dbg !11584
  store void (i8*)* @spi_complete, void (i8*)** %complete, align 8, !dbg !11585
  %7 = bitcast %struct.completion* %done to i8*, !dbg !11586
  %8 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11587
  %context = getelementptr inbounds %struct.spi_message, %struct.spi_message* %8, i32 0, i32 4, !dbg !11588
  store i8* %7, i8** %context, align 8, !dbg !11589
  %9 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11590
  %10 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11591
  %spi6 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %10, i32 0, i32 1, !dbg !11592
  store %struct.spi_device* %9, %struct.spi_device** %spi6, align 8, !dbg !11593
  br label %do.body, !dbg !11594

do.body:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i64* %flags7, metadata !11595, metadata !DIExpression()), !dbg !11596
  br label %do.body8, !dbg !11596

do.body8:                                         ; preds = %do.body
  br label %do.body9, !dbg !11597

do.body9:                                         ; preds = %do.body8
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11598, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11601, metadata !DIExpression()), !dbg !11600
  %cmp10 = icmp eq i64* %__dummy, %__dummy2, !dbg !11600
  %conv = zext i1 %cmp10 to i32, !dbg !11600
  store i32 1, i32* %tmp, align 4, !dbg !11600
  %11 = load i32, i32* %tmp, align 4, !dbg !11600
  br label %do.body11, !dbg !11602

do.body11:                                        ; preds = %do.body9
  br label %do.body12, !dbg !11603

do.body12:                                        ; preds = %do.body11
  br label %do.body13, !dbg !11604

do.body13:                                        ; preds = %do.body12
  call void @llvm.dbg.declare(metadata i64* %__dummy14, metadata !11606, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.declare(metadata i64* %__dummy215, metadata !11610, metadata !DIExpression()), !dbg !11609
  %cmp16 = icmp eq i64* %__dummy14, %__dummy215, !dbg !11609
  %conv17 = zext i1 %cmp16 to i32, !dbg !11609
  store i32 1, i32* %tmp18, align 4, !dbg !11609
  %12 = load i32, i32* %tmp18, align 4, !dbg !11609
  %call19 = call i64 @arch_local_irq_save() #11, !dbg !11611
  store i64 %call19, i64* %flags7, align 8, !dbg !11611
  br label %do.end, !dbg !11611

do.end:                                           ; preds = %do.body13
  br label %do.end20, !dbg !11604

do.end20:                                         ; preds = %do.end
  br label %do.body21, !dbg !11603

do.body21:                                        ; preds = %do.end20
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11612, !srcloc !11613
  br label %do.body22, !dbg !11612

do.body22:                                        ; preds = %do.body21
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11614
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %13, i32 0, i32 59, !dbg !11614
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics, i32 0, i32 0, !dbg !11614
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11615
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !11616
  %rlock.i = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !11616
  br label %do.end24, !dbg !11614

do.end24:                                         ; preds = %do.body22
  br label %do.end25, !dbg !11612

do.end25:                                         ; preds = %do.end24
  br label %do.end26, !dbg !11603

do.end26:                                         ; preds = %do.end25
  br label %do.end27, !dbg !11602

do.end27:                                         ; preds = %do.end26
  br label %do.end28, !dbg !11597

do.end28:                                         ; preds = %do.end27
  %16 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11596
  %statistics29 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 59, !dbg !11596
  %spi_sync = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics29, i32 0, i32 5, !dbg !11596
  %17 = load i64, i64* %spi_sync, align 8, !dbg !11596
  %add = add i64 %17, 1, !dbg !11596
  store i64 %add, i64* %spi_sync, align 8, !dbg !11596
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11596
  %statistics30 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 59, !dbg !11596
  %lock31 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics30, i32 0, i32 0, !dbg !11596
  %19 = load i64, i64* %flags7, align 8, !dbg !11596
  store %struct.spinlock* %lock31, %struct.spinlock** %lock.addr.i184, align 8
  store i64 %19, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11617
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11617
  store i32 1, i32* %tmp.i, align 4, !dbg !11617
  %20 = load i32, i32* %tmp.i, align 4, !dbg !11617
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11618
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11618
  store i32 1, i32* %tmp8.i, align 4, !dbg !11618
  %21 = load i32, i32* %tmp8.i, align 4, !dbg !11618
  %22 = load i64, i64* %flags.addr.i, align 8, !dbg !11619
  call void @arch_local_irq_restore(i64 %22) #12, !dbg !11619
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11620, !srcloc !5559
  %23 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i184, align 8, !dbg !11621
  %24 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %23, i32 0, i32 0, !dbg !11621
  %rlock.i185 = bitcast %union.anon* %24 to %struct.raw_spinlock*, !dbg !11621
  br label %do.end32, !dbg !11596

do.end32:                                         ; preds = %do.end28
  br label %do.body33, !dbg !11622

do.body33:                                        ; preds = %do.end32
  call void @llvm.dbg.declare(metadata i64* %flags34, metadata !11623, metadata !DIExpression()), !dbg !11624
  br label %do.body35, !dbg !11624

do.body35:                                        ; preds = %do.body33
  br label %do.body36, !dbg !11625

do.body36:                                        ; preds = %do.body35
  call void @llvm.dbg.declare(metadata i64* %__dummy37, metadata !11626, metadata !DIExpression()), !dbg !11628
  call void @llvm.dbg.declare(metadata i64* %__dummy238, metadata !11629, metadata !DIExpression()), !dbg !11628
  %cmp39 = icmp eq i64* %__dummy37, %__dummy238, !dbg !11628
  %conv40 = zext i1 %cmp39 to i32, !dbg !11628
  store i32 1, i32* %tmp41, align 4, !dbg !11628
  %25 = load i32, i32* %tmp41, align 4, !dbg !11628
  br label %do.body42, !dbg !11630

do.body42:                                        ; preds = %do.body36
  br label %do.body43, !dbg !11631

do.body43:                                        ; preds = %do.body42
  br label %do.body44, !dbg !11632

do.body44:                                        ; preds = %do.body43
  call void @llvm.dbg.declare(metadata i64* %__dummy45, metadata !11634, metadata !DIExpression()), !dbg !11637
  call void @llvm.dbg.declare(metadata i64* %__dummy246, metadata !11638, metadata !DIExpression()), !dbg !11637
  %cmp47 = icmp eq i64* %__dummy45, %__dummy246, !dbg !11637
  %conv48 = zext i1 %cmp47 to i32, !dbg !11637
  store i32 1, i32* %tmp49, align 4, !dbg !11637
  %26 = load i32, i32* %tmp49, align 4, !dbg !11637
  %call50 = call i64 @arch_local_irq_save() #11, !dbg !11639
  store i64 %call50, i64* %flags34, align 8, !dbg !11639
  br label %do.end51, !dbg !11639

do.end51:                                         ; preds = %do.body44
  br label %do.end52, !dbg !11632

do.end52:                                         ; preds = %do.end51
  br label %do.body53, !dbg !11631

do.body53:                                        ; preds = %do.end52
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11640, !srcloc !11641
  br label %do.body54, !dbg !11640

do.body54:                                        ; preds = %do.body53
  %27 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11642
  %statistics55 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %27, i32 0, i32 16, !dbg !11642
  %lock56 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics55, i32 0, i32 0, !dbg !11642
  store %struct.spinlock* %lock56, %struct.spinlock** %lock.addr.i186, align 8
  %28 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i186, align 8, !dbg !11643
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0, !dbg !11644
  %rlock.i187 = bitcast %union.anon* %29 to %struct.raw_spinlock*, !dbg !11644
  br label %do.end58, !dbg !11642

do.end58:                                         ; preds = %do.body54
  br label %do.end59, !dbg !11640

do.end59:                                         ; preds = %do.end58
  br label %do.end60, !dbg !11631

do.end60:                                         ; preds = %do.end59
  br label %do.end61, !dbg !11630

do.end61:                                         ; preds = %do.end60
  br label %do.end62, !dbg !11625

do.end62:                                         ; preds = %do.end61
  %30 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11624
  %statistics63 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %30, i32 0, i32 16, !dbg !11624
  %spi_sync64 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics63, i32 0, i32 5, !dbg !11624
  %31 = load i64, i64* %spi_sync64, align 8, !dbg !11624
  %add65 = add i64 %31, 1, !dbg !11624
  store i64 %add65, i64* %spi_sync64, align 8, !dbg !11624
  %32 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11624
  %statistics66 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %32, i32 0, i32 16, !dbg !11624
  %lock67 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics66, i32 0, i32 0, !dbg !11624
  %33 = load i64, i64* %flags34, align 8, !dbg !11624
  store %struct.spinlock* %lock67, %struct.spinlock** %lock.addr.i188, align 8
  store i64 %33, i64* %flags.addr.i189, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11645
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11645
  store i32 1, i32* %tmp.i190, align 4, !dbg !11645
  %34 = load i32, i32* %tmp.i190, align 4, !dbg !11645
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11646
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11646
  store i32 1, i32* %tmp8.i191, align 4, !dbg !11646
  %35 = load i32, i32* %tmp8.i191, align 4, !dbg !11646
  %36 = load i64, i64* %flags.addr.i189, align 8, !dbg !11647
  call void @arch_local_irq_restore(i64 %36) #12, !dbg !11647
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11648, !srcloc !5559
  %37 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i188, align 8, !dbg !11649
  %38 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %37, i32 0, i32 0, !dbg !11649
  %rlock.i192 = bitcast %union.anon* %38 to %struct.raw_spinlock*, !dbg !11649
  br label %do.end68, !dbg !11624

do.end68:                                         ; preds = %do.end62
  %39 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11650
  %transfer = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %39, i32 0, i32 20, !dbg !11651
  %40 = load i32 (%struct.spi_device*, %struct.spi_message*)*, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer, align 8, !dbg !11651
  %cmp69 = icmp eq i32 (%struct.spi_device*, %struct.spi_message*)* %40, @spi_queued_transfer, !dbg !11652
  br i1 %cmp69, label %if.then71, label %if.else, !dbg !11653

if.then71:                                        ; preds = %do.end68
  br label %do.body72, !dbg !11654

do.body72:                                        ; preds = %if.then71
  br label %do.body73, !dbg !11655

do.body73:                                        ; preds = %do.body72
  call void @llvm.dbg.declare(metadata i64* %__dummy74, metadata !11656, metadata !DIExpression()), !dbg !11658
  call void @llvm.dbg.declare(metadata i64* %__dummy275, metadata !11659, metadata !DIExpression()), !dbg !11658
  %cmp76 = icmp eq i64* %__dummy74, %__dummy275, !dbg !11658
  %conv77 = zext i1 %cmp76 to i32, !dbg !11658
  store i32 1, i32* %tmp78, align 4, !dbg !11658
  %41 = load i32, i32* %tmp78, align 4, !dbg !11658
  br label %do.body79, !dbg !11660

do.body79:                                        ; preds = %do.body73
  br label %do.body80, !dbg !11661

do.body80:                                        ; preds = %do.body79
  br label %do.body81, !dbg !11662

do.body81:                                        ; preds = %do.body80
  call void @llvm.dbg.declare(metadata i64* %__dummy82, metadata !11664, metadata !DIExpression()), !dbg !11667
  call void @llvm.dbg.declare(metadata i64* %__dummy283, metadata !11668, metadata !DIExpression()), !dbg !11667
  %cmp84 = icmp eq i64* %__dummy82, %__dummy283, !dbg !11667
  %conv85 = zext i1 %cmp84 to i32, !dbg !11667
  store i32 1, i32* %tmp86, align 4, !dbg !11667
  %42 = load i32, i32* %tmp86, align 4, !dbg !11667
  %call87 = call i64 @arch_local_irq_save() #11, !dbg !11669
  store i64 %call87, i64* %flags, align 8, !dbg !11669
  br label %do.end88, !dbg !11669

do.end88:                                         ; preds = %do.body81
  br label %do.end89, !dbg !11662

do.end89:                                         ; preds = %do.end88
  br label %do.body90, !dbg !11661

do.body90:                                        ; preds = %do.end89
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11670, !srcloc !11671
  br label %do.body91, !dbg !11670

do.body91:                                        ; preds = %do.body90
  %43 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11672
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %43, i32 0, i32 15, !dbg !11672
  store %struct.spinlock* %bus_lock_spinlock, %struct.spinlock** %lock.addr.i193, align 8
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i193, align 8, !dbg !11673
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !11674
  %rlock.i194 = bitcast %union.anon* %45 to %struct.raw_spinlock*, !dbg !11674
  br label %do.end93, !dbg !11672

do.end93:                                         ; preds = %do.body91
  br label %do.end94, !dbg !11670

do.end94:                                         ; preds = %do.end93
  br label %do.end95, !dbg !11661

do.end95:                                         ; preds = %do.end94
  br label %do.end96, !dbg !11660

do.end96:                                         ; preds = %do.end95
  br label %do.end97, !dbg !11655

do.end97:                                         ; preds = %do.end96
  %46 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11675
  call void @trace_spi_message_submit(%struct.spi_message* %46) #11, !dbg !11676
  %47 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11677
  %48 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11678
  %call98 = call i32 @__spi_queued_transfer(%struct.spi_device* %47, %struct.spi_message* %48, i1 zeroext false) #11, !dbg !11679
  store i32 %call98, i32* %status, align 4, !dbg !11680
  %49 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11681
  %bus_lock_spinlock99 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %49, i32 0, i32 15, !dbg !11682
  %50 = load i64, i64* %flags, align 8, !dbg !11683
  store %struct.spinlock* %bus_lock_spinlock99, %struct.spinlock** %lock.addr.i195, align 8
  store i64 %50, i64* %flags.addr.i196, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11684
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11684
  store i32 1, i32* %tmp.i197, align 4, !dbg !11684
  %51 = load i32, i32* %tmp.i197, align 4, !dbg !11684
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11685
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11685
  store i32 1, i32* %tmp8.i198, align 4, !dbg !11685
  %52 = load i32, i32* %tmp8.i198, align 4, !dbg !11685
  %53 = load i64, i64* %flags.addr.i196, align 8, !dbg !11686
  call void @arch_local_irq_restore(i64 %53) #12, !dbg !11686
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11687, !srcloc !5559
  %54 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i195, align 8, !dbg !11688
  %55 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %54, i32 0, i32 0, !dbg !11688
  %rlock.i199 = bitcast %union.anon* %55 to %struct.raw_spinlock*, !dbg !11688
  br label %if.end101, !dbg !11689

if.else:                                          ; preds = %do.end68
  %56 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11690
  %57 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11692
  %call100 = call i32 @spi_async_locked(%struct.spi_device* %56, %struct.spi_message* %57) #11, !dbg !11693
  store i32 %call100, i32* %status, align 4, !dbg !11694
  br label %if.end101

if.end101:                                        ; preds = %if.else, %do.end97
  %58 = load i32, i32* %status, align 4, !dbg !11695
  %cmp102 = icmp eq i32 %58, 0, !dbg !11696
  br i1 %cmp102, label %if.then104, label %if.end182, !dbg !11697

if.then104:                                       ; preds = %if.end101
  %59 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11698
  %transfer105 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %59, i32 0, i32 20, !dbg !11699
  %60 = load i32 (%struct.spi_device*, %struct.spi_message*)*, i32 (%struct.spi_device*, %struct.spi_message*)** %transfer105, align 8, !dbg !11699
  %cmp106 = icmp eq i32 (%struct.spi_device*, %struct.spi_message*)* %60, @spi_queued_transfer, !dbg !11700
  br i1 %cmp106, label %if.then108, label %if.end180, !dbg !11701

if.then108:                                       ; preds = %if.then104
  br label %do.body109, !dbg !11702

do.body109:                                       ; preds = %if.then108
  call void @llvm.dbg.declare(metadata i64* %flags110, metadata !11703, metadata !DIExpression()), !dbg !11704
  br label %do.body111, !dbg !11704

do.body111:                                       ; preds = %do.body109
  br label %do.body112, !dbg !11705

do.body112:                                       ; preds = %do.body111
  call void @llvm.dbg.declare(metadata i64* %__dummy113, metadata !11706, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.declare(metadata i64* %__dummy2114, metadata !11709, metadata !DIExpression()), !dbg !11708
  %cmp115 = icmp eq i64* %__dummy113, %__dummy2114, !dbg !11708
  %conv116 = zext i1 %cmp115 to i32, !dbg !11708
  store i32 1, i32* %tmp117, align 4, !dbg !11708
  %61 = load i32, i32* %tmp117, align 4, !dbg !11708
  br label %do.body118, !dbg !11710

do.body118:                                       ; preds = %do.body112
  br label %do.body119, !dbg !11711

do.body119:                                       ; preds = %do.body118
  br label %do.body120, !dbg !11712

do.body120:                                       ; preds = %do.body119
  call void @llvm.dbg.declare(metadata i64* %__dummy121, metadata !11714, metadata !DIExpression()), !dbg !11717
  call void @llvm.dbg.declare(metadata i64* %__dummy2122, metadata !11718, metadata !DIExpression()), !dbg !11717
  %cmp123 = icmp eq i64* %__dummy121, %__dummy2122, !dbg !11717
  %conv124 = zext i1 %cmp123 to i32, !dbg !11717
  store i32 1, i32* %tmp125, align 4, !dbg !11717
  %62 = load i32, i32* %tmp125, align 4, !dbg !11717
  %call126 = call i64 @arch_local_irq_save() #11, !dbg !11719
  store i64 %call126, i64* %flags110, align 8, !dbg !11719
  br label %do.end127, !dbg !11719

do.end127:                                        ; preds = %do.body120
  br label %do.end128, !dbg !11712

do.end128:                                        ; preds = %do.end127
  br label %do.body129, !dbg !11711

do.body129:                                       ; preds = %do.end128
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11720, !srcloc !11721
  br label %do.body130, !dbg !11720

do.body130:                                       ; preds = %do.body129
  %63 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11722
  %statistics131 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %63, i32 0, i32 59, !dbg !11722
  %lock132 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics131, i32 0, i32 0, !dbg !11722
  store %struct.spinlock* %lock132, %struct.spinlock** %lock.addr.i200, align 8
  %64 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i200, align 8, !dbg !11723
  %65 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %64, i32 0, i32 0, !dbg !11724
  %rlock.i201 = bitcast %union.anon* %65 to %struct.raw_spinlock*, !dbg !11724
  br label %do.end134, !dbg !11722

do.end134:                                        ; preds = %do.body130
  br label %do.end135, !dbg !11720

do.end135:                                        ; preds = %do.end134
  br label %do.end136, !dbg !11711

do.end136:                                        ; preds = %do.end135
  br label %do.end137, !dbg !11710

do.end137:                                        ; preds = %do.end136
  br label %do.end138, !dbg !11705

do.end138:                                        ; preds = %do.end137
  %66 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11704
  %statistics139 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %66, i32 0, i32 59, !dbg !11704
  %spi_sync_immediate = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics139, i32 0, i32 6, !dbg !11704
  %67 = load i64, i64* %spi_sync_immediate, align 8, !dbg !11704
  %add140 = add i64 %67, 1, !dbg !11704
  store i64 %add140, i64* %spi_sync_immediate, align 8, !dbg !11704
  %68 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11704
  %statistics141 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %68, i32 0, i32 59, !dbg !11704
  %lock142 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics141, i32 0, i32 0, !dbg !11704
  %69 = load i64, i64* %flags110, align 8, !dbg !11704
  store %struct.spinlock* %lock142, %struct.spinlock** %lock.addr.i202, align 8
  store i64 %69, i64* %flags.addr.i203, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11725
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11725
  store i32 1, i32* %tmp.i204, align 4, !dbg !11725
  %70 = load i32, i32* %tmp.i204, align 4, !dbg !11725
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11726
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11726
  store i32 1, i32* %tmp8.i205, align 4, !dbg !11726
  %71 = load i32, i32* %tmp8.i205, align 4, !dbg !11726
  %72 = load i64, i64* %flags.addr.i203, align 8, !dbg !11727
  call void @arch_local_irq_restore(i64 %72) #12, !dbg !11727
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11728, !srcloc !5559
  %73 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i202, align 8, !dbg !11729
  %74 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %73, i32 0, i32 0, !dbg !11729
  %rlock.i206 = bitcast %union.anon* %74 to %struct.raw_spinlock*, !dbg !11729
  br label %do.end143, !dbg !11704

do.end143:                                        ; preds = %do.end138
  br label %do.body144, !dbg !11730

do.body144:                                       ; preds = %do.end143
  call void @llvm.dbg.declare(metadata i64* %flags145, metadata !11731, metadata !DIExpression()), !dbg !11732
  br label %do.body146, !dbg !11732

do.body146:                                       ; preds = %do.body144
  br label %do.body147, !dbg !11733

do.body147:                                       ; preds = %do.body146
  call void @llvm.dbg.declare(metadata i64* %__dummy148, metadata !11734, metadata !DIExpression()), !dbg !11736
  call void @llvm.dbg.declare(metadata i64* %__dummy2149, metadata !11737, metadata !DIExpression()), !dbg !11736
  %cmp150 = icmp eq i64* %__dummy148, %__dummy2149, !dbg !11736
  %conv151 = zext i1 %cmp150 to i32, !dbg !11736
  store i32 1, i32* %tmp152, align 4, !dbg !11736
  %75 = load i32, i32* %tmp152, align 4, !dbg !11736
  br label %do.body153, !dbg !11738

do.body153:                                       ; preds = %do.body147
  br label %do.body154, !dbg !11739

do.body154:                                       ; preds = %do.body153
  br label %do.body155, !dbg !11740

do.body155:                                       ; preds = %do.body154
  call void @llvm.dbg.declare(metadata i64* %__dummy156, metadata !11742, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.declare(metadata i64* %__dummy2157, metadata !11746, metadata !DIExpression()), !dbg !11745
  %cmp158 = icmp eq i64* %__dummy156, %__dummy2157, !dbg !11745
  %conv159 = zext i1 %cmp158 to i32, !dbg !11745
  store i32 1, i32* %tmp160, align 4, !dbg !11745
  %76 = load i32, i32* %tmp160, align 4, !dbg !11745
  %call161 = call i64 @arch_local_irq_save() #11, !dbg !11747
  store i64 %call161, i64* %flags145, align 8, !dbg !11747
  br label %do.end162, !dbg !11747

do.end162:                                        ; preds = %do.body155
  br label %do.end163, !dbg !11740

do.end163:                                        ; preds = %do.end162
  br label %do.body164, !dbg !11739

do.body164:                                       ; preds = %do.end163
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11748, !srcloc !11749
  br label %do.body165, !dbg !11748

do.body165:                                       ; preds = %do.body164
  %77 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11750
  %statistics166 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %77, i32 0, i32 16, !dbg !11750
  %lock167 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics166, i32 0, i32 0, !dbg !11750
  store %struct.spinlock* %lock167, %struct.spinlock** %lock.addr.i207, align 8
  %78 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i207, align 8, !dbg !11751
  %79 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %78, i32 0, i32 0, !dbg !11752
  %rlock.i208 = bitcast %union.anon* %79 to %struct.raw_spinlock*, !dbg !11752
  br label %do.end169, !dbg !11750

do.end169:                                        ; preds = %do.body165
  br label %do.end170, !dbg !11748

do.end170:                                        ; preds = %do.end169
  br label %do.end171, !dbg !11739

do.end171:                                        ; preds = %do.end170
  br label %do.end172, !dbg !11738

do.end172:                                        ; preds = %do.end171
  br label %do.end173, !dbg !11733

do.end173:                                        ; preds = %do.end172
  %80 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11732
  %statistics174 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %80, i32 0, i32 16, !dbg !11732
  %spi_sync_immediate175 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics174, i32 0, i32 6, !dbg !11732
  %81 = load i64, i64* %spi_sync_immediate175, align 8, !dbg !11732
  %add176 = add i64 %81, 1, !dbg !11732
  store i64 %add176, i64* %spi_sync_immediate175, align 8, !dbg !11732
  %82 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11732
  %statistics177 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %82, i32 0, i32 16, !dbg !11732
  %lock178 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %statistics177, i32 0, i32 0, !dbg !11732
  %83 = load i64, i64* %flags145, align 8, !dbg !11732
  store %struct.spinlock* %lock178, %struct.spinlock** %lock.addr.i209, align 8
  store i64 %83, i64* %flags.addr.i210, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11753
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11753
  store i32 1, i32* %tmp.i211, align 4, !dbg !11753
  %84 = load i32, i32* %tmp.i211, align 4, !dbg !11753
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11754
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11754
  store i32 1, i32* %tmp8.i212, align 4, !dbg !11754
  %85 = load i32, i32* %tmp8.i212, align 4, !dbg !11754
  %86 = load i64, i64* %flags.addr.i210, align 8, !dbg !11755
  call void @arch_local_irq_restore(i64 %86) #12, !dbg !11755
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11756, !srcloc !5559
  %87 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i209, align 8, !dbg !11757
  %88 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %87, i32 0, i32 0, !dbg !11757
  %rlock.i213 = bitcast %union.anon* %88 to %struct.raw_spinlock*, !dbg !11757
  br label %do.end179, !dbg !11732

do.end179:                                        ; preds = %do.end173
  %89 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !11758
  call void @__spi_pump_messages(%struct.spi_controller* %89, i1 zeroext false) #11, !dbg !11759
  br label %if.end180, !dbg !11760

if.end180:                                        ; preds = %do.end179, %if.then104
  call void @wait_for_completion(%struct.completion* %done) #11, !dbg !11761
  %90 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11762
  %status181 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %90, i32 0, i32 7, !dbg !11763
  %91 = load i32, i32* %status181, align 8, !dbg !11763
  store i32 %91, i32* %status, align 4, !dbg !11764
  br label %if.end182, !dbg !11765

if.end182:                                        ; preds = %if.end180, %if.end101
  %92 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11766
  %context183 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %92, i32 0, i32 4, !dbg !11767
  store i8* null, i8** %context183, align 8, !dbg !11768
  %93 = load i32, i32* %status, align 4, !dbg !11769
  store i32 %93, i32* %retval, align 4, !dbg !11770
  br label %return, !dbg !11770

return:                                           ; preds = %if.end182, %if.then
  %94 = load i32, i32* %retval, align 4, !dbg !11771
  ret i32 %94, !dbg !11771
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_sync_locked(%struct.spi_device* %spi, %struct.spi_message* %message) #0 !dbg !11772 {
entry:
  %spi.addr = alloca %struct.spi_device*, align 8
  %message.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !11773, metadata !DIExpression()), !dbg !11774
  store %struct.spi_message* %message, %struct.spi_message** %message.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %message.addr, metadata !11775, metadata !DIExpression()), !dbg !11776
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !11777
  %1 = load %struct.spi_message*, %struct.spi_message** %message.addr, align 8, !dbg !11778
  %call = call i32 @__spi_sync(%struct.spi_device* %0, %struct.spi_message* %1) #11, !dbg !11779
  ret i32 %call, !dbg !11780
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_bus_lock(%struct.spi_controller* %ctlr) #0 !dbg !11781 {
entry:
  %lock.addr.i20 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i20, metadata !5420, metadata !DIExpression()), !dbg !11782
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !11784
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !11785
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !11792, metadata !DIExpression()), !dbg !11793
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !11794, metadata !DIExpression()), !dbg !11795
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !11796
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 16, !dbg !11797
  call void @mutex_lock(%struct.mutex* %bus_lock_mutex) #11, !dbg !11798
  br label %do.body, !dbg !11799

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !11800

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !11801, metadata !DIExpression()), !dbg !11803
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !11804, metadata !DIExpression()), !dbg !11803
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !11803
  %conv = zext i1 %cmp to i32, !dbg !11803
  store i32 1, i32* %tmp, align 4, !dbg !11803
  %1 = load i32, i32* %tmp, align 4, !dbg !11803
  br label %do.body2, !dbg !11805

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !11806

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !11807

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !11809, metadata !DIExpression()), !dbg !11812
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !11813, metadata !DIExpression()), !dbg !11812
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !11812
  %conv8 = zext i1 %cmp7 to i32, !dbg !11812
  store i32 1, i32* %tmp9, align 4, !dbg !11812
  %2 = load i32, i32* %tmp9, align 4, !dbg !11812
  %call = call i64 @arch_local_irq_save() #11, !dbg !11814
  store i64 %call, i64* %flags, align 8, !dbg !11814
  br label %do.end, !dbg !11814

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !11807

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !11806

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11815, !srcloc !11816
  br label %do.body12, !dbg !11815

do.body12:                                        ; preds = %do.body11
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !11817
  %bus_lock_spinlock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %3, i32 0, i32 15, !dbg !11817
  store %struct.spinlock* %bus_lock_spinlock, %struct.spinlock** %lock.addr.i, align 8
  %4 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !11818
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %4, i32 0, i32 0, !dbg !11819
  %rlock.i = bitcast %union.anon* %5 to %struct.raw_spinlock*, !dbg !11819
  br label %do.end14, !dbg !11817

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !11815

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !11806

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !11805

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !11800

do.end18:                                         ; preds = %do.end17
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !11820
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 17, !dbg !11821
  store i8 1, i8* %bus_lock_flag, align 8, !dbg !11822
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !11823
  %bus_lock_spinlock19 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 15, !dbg !11824
  %8 = load i64, i64* %flags, align 8, !dbg !11825
  store %struct.spinlock* %bus_lock_spinlock19, %struct.spinlock** %lock.addr.i20, align 8
  store i64 %8, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !11826
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !11826
  store i32 1, i32* %tmp.i, align 4, !dbg !11826
  %9 = load i32, i32* %tmp.i, align 4, !dbg !11826
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !11827
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !11827
  store i32 1, i32* %tmp8.i, align 4, !dbg !11827
  %10 = load i32, i32* %tmp8.i, align 4, !dbg !11827
  %11 = load i64, i64* %flags.addr.i, align 8, !dbg !11828
  call void @arch_local_irq_restore(i64 %11) #12, !dbg !11828
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !11829, !srcloc !5559
  %12 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i20, align 8, !dbg !11830
  %13 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %12, i32 0, i32 0, !dbg !11830
  %rlock.i21 = bitcast %union.anon* %13 to %struct.raw_spinlock*, !dbg !11830
  ret i32 0, !dbg !11831
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_bus_unlock(%struct.spi_controller* %ctlr) #0 !dbg !11832 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !11833, metadata !DIExpression()), !dbg !11834
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !11835
  %bus_lock_flag = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 17, !dbg !11836
  store i8 0, i8* %bus_lock_flag, align 8, !dbg !11837
  %1 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !11838
  %bus_lock_mutex = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 16, !dbg !11839
  call void @mutex_unlock(%struct.mutex* %bus_lock_mutex) #11, !dbg !11840
  ret i32 0, !dbg !11841
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local i32 @spi_write_then_read(%struct.spi_device* %spi, i8* %txbuf, i32 %n_tx, i8* %rxbuf, i32 %n_rx) #0 !dbg !5215 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5940, metadata !DIExpression()), !dbg !11842
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5950, metadata !DIExpression()), !dbg !11847
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5952, metadata !DIExpression()), !dbg !11848
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5954, metadata !DIExpression()), !dbg !11849
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5956, metadata !DIExpression()), !dbg !11850
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5962, metadata !DIExpression()), !dbg !11852
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5968, metadata !DIExpression()), !dbg !11854
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5977, metadata !DIExpression()), !dbg !11857
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5979, metadata !DIExpression()), !dbg !11858
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5981, metadata !DIExpression()), !dbg !11859
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5983, metadata !DIExpression()), !dbg !11860
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5985, metadata !DIExpression()), !dbg !11861
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5987, metadata !DIExpression()), !dbg !11862
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5989, metadata !DIExpression()), !dbg !11863
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5991, metadata !DIExpression()), !dbg !11864
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %txbuf.addr = alloca i8*, align 8
  %n_tx.addr = alloca i32, align 4
  %rxbuf.addr = alloca i8*, align 8
  %n_rx.addr = alloca i32, align 4
  %status = alloca i32, align 4
  %message = alloca %struct.spi_message, align 8
  %x = alloca [2 x %struct.spi_transfer], align 16
  %local_buf = alloca i8*, align 8
  %__UNIQUE_ID___x375 = alloca i32, align 4
  %__UNIQUE_ID___y376 = alloca i32, align 4
  %tmp = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !11865, metadata !DIExpression()), !dbg !11866
  store i8* %txbuf, i8** %txbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %txbuf.addr, metadata !11867, metadata !DIExpression()), !dbg !11868
  store i32 %n_tx, i32* %n_tx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_tx.addr, metadata !11869, metadata !DIExpression()), !dbg !11870
  store i8* %rxbuf, i8** %rxbuf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %rxbuf.addr, metadata !11871, metadata !DIExpression()), !dbg !11872
  store i32 %n_rx, i32* %n_rx.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_rx.addr, metadata !11873, metadata !DIExpression()), !dbg !11874
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11875, metadata !DIExpression()), !dbg !11876
  call void @llvm.dbg.declare(metadata %struct.spi_message* %message, metadata !11877, metadata !DIExpression()), !dbg !11878
  call void @llvm.dbg.declare(metadata [2 x %struct.spi_transfer]* %x, metadata !11879, metadata !DIExpression()), !dbg !11881
  call void @llvm.dbg.declare(metadata i8** %local_buf, metadata !11882, metadata !DIExpression()), !dbg !11883
  %0 = load i32, i32* %n_tx.addr, align 4, !dbg !11884
  %1 = load i32, i32* %n_rx.addr, align 4, !dbg !11885
  %add = add i32 %0, %1, !dbg !11886
  %cmp = icmp ugt i32 %add, 64, !dbg !11887
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !11888

lor.lhs.false:                                    ; preds = %entry
  %call = call i32 @mutex_trylock(%struct.mutex* @spi_write_then_read.lock) #11, !dbg !11889
  %tobool = icmp ne i32 %call, 0, !dbg !11889
  br i1 %tobool, label %if.else, label %if.then, !dbg !11890

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x375, metadata !11891, metadata !DIExpression()), !dbg !11893
  store i32 64, i32* %__UNIQUE_ID___x375, align 4, !dbg !11893
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y376, metadata !11894, metadata !DIExpression()), !dbg !11893
  %2 = load i32, i32* %n_tx.addr, align 4, !dbg !11893
  %3 = load i32, i32* %n_rx.addr, align 4, !dbg !11893
  %add1 = add i32 %2, %3, !dbg !11893
  store i32 %add1, i32* %__UNIQUE_ID___y376, align 4, !dbg !11893
  %4 = load i32, i32* %__UNIQUE_ID___x375, align 4, !dbg !11893
  %5 = load i32, i32* %__UNIQUE_ID___y376, align 4, !dbg !11893
  %cmp2 = icmp ugt i32 %4, %5, !dbg !11893
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !11893

cond.true:                                        ; preds = %if.then
  %6 = load i32, i32* %__UNIQUE_ID___x375, align 4, !dbg !11893
  br label %cond.end, !dbg !11893

cond.false:                                       ; preds = %if.then
  %7 = load i32, i32* %__UNIQUE_ID___y376, align 4, !dbg !11893
  br label %cond.end, !dbg !11893

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %6, %cond.true ], [ %7, %cond.false ], !dbg !11893
  store i32 %cond, i32* %tmp, align 4, !dbg !11893
  %8 = load i32, i32* %tmp, align 4, !dbg !11893
  %conv = zext i32 %8 to i64, !dbg !11895
  store i64 %conv, i64* %size.addr.i, align 8
  store i32 3265, i32* %flags.addr.i, align 4
  %9 = load i64, i64* %size.addr.i, align 8, !dbg !11896
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !11897
  br i1 %10, label %if.then.i, label %if.end9.i, !dbg !11898

if.then.i:                                        ; preds = %cond.end
  %11 = load i64, i64* %size.addr.i, align 8, !dbg !11899
  %cmp.i = icmp ugt i64 %11, 8192, !dbg !11900
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !11901

if.then1.i:                                       ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !11902
  %13 = load i32, i32* %flags.addr.i, align 4, !dbg !11903
  store i64 %12, i64* %size.addr.i.i, align 8
  store i32 %13, i32* %flags.addr.i.i, align 4
  %14 = load i64, i64* %size.addr.i.i, align 8, !dbg !11904
  %call.i.i = call i32 @get_order(i64 %14) #13, !dbg !11905
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !11861
  %15 = load i64, i64* %size.addr.i.i, align 8, !dbg !11906
  %16 = load i32, i32* %flags.addr.i.i, align 4, !dbg !11907
  %17 = load i32, i32* %order.i.i, align 4, !dbg !11908
  store i64 %15, i64* %size.addr.i.i.i, align 8
  store i32 %16, i32* %flags.addr.i.i.i, align 4
  store i32 %17, i32* %order.addr.i.i.i, align 4
  %18 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !11909
  %19 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !11910
  %20 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !11911
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %18, i32 %19, i32 %20) #12, !dbg !11912
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !11912
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !11912
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !11912
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !11912
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !11913
  br label %kmalloc.exit, !dbg !11913

if.end.i:                                         ; preds = %if.then.i
  %21 = load i64, i64* %size.addr.i, align 8, !dbg !11914
  store i64 %21, i64* %size.addr.i11.i, align 8
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11915
  %tobool.i.i = icmp ne i64 %22, 0, !dbg !11915
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !11916

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !11917
  br label %kmalloc_index.exit.i, !dbg !11917

if.end.i.i:                                       ; preds = %if.end.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11918
  %cmp.i.i = icmp ule i64 %23, 8, !dbg !11919
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !11920

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11921
  br label %kmalloc_index.exit.i, !dbg !11921

if.end2.i.i:                                      ; preds = %if.end.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11922
  %cmp3.i.i = icmp ugt i64 %24, 64, !dbg !11923
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !11924

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11925
  %cmp4.i.i = icmp ule i64 %25, 96, !dbg !11926
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !11927

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !11928
  br label %kmalloc_index.exit.i, !dbg !11928

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11929
  %cmp7.i.i = icmp ugt i64 %26, 128, !dbg !11930
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !11931

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11932
  %cmp9.i.i = icmp ule i64 %27, 192, !dbg !11933
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !11934

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !11935
  br label %kmalloc_index.exit.i, !dbg !11935

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11936
  %cmp12.i.i = icmp ule i64 %28, 8, !dbg !11937
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !11938

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !11939
  br label %kmalloc_index.exit.i, !dbg !11939

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11940
  %cmp15.i.i = icmp ule i64 %29, 16, !dbg !11941
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !11942

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !11943
  br label %kmalloc_index.exit.i, !dbg !11943

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11944
  %cmp18.i.i = icmp ule i64 %30, 32, !dbg !11945
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !11946

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !11947
  br label %kmalloc_index.exit.i, !dbg !11947

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11948
  %cmp21.i.i = icmp ule i64 %31, 64, !dbg !11949
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !11950

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !11951
  br label %kmalloc_index.exit.i, !dbg !11951

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11952
  %cmp24.i.i = icmp ule i64 %32, 128, !dbg !11953
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !11954

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !11955
  br label %kmalloc_index.exit.i, !dbg !11955

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11956
  %cmp27.i.i = icmp ule i64 %33, 256, !dbg !11957
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !11958

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !11959
  br label %kmalloc_index.exit.i, !dbg !11959

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11960
  %cmp30.i.i = icmp ule i64 %34, 512, !dbg !11961
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !11962

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !11963
  br label %kmalloc_index.exit.i, !dbg !11963

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11964
  %cmp33.i.i = icmp ule i64 %35, 1024, !dbg !11965
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !11966

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !11967
  br label %kmalloc_index.exit.i, !dbg !11967

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11968
  %cmp36.i.i = icmp ule i64 %36, 2048, !dbg !11969
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !11970

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !11971
  br label %kmalloc_index.exit.i, !dbg !11971

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11972
  %cmp39.i.i = icmp ule i64 %37, 4096, !dbg !11973
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !11974

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !11975
  br label %kmalloc_index.exit.i, !dbg !11975

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11976
  %cmp42.i.i = icmp ule i64 %38, 8192, !dbg !11977
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !11978

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !11979
  br label %kmalloc_index.exit.i, !dbg !11979

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11980
  %cmp45.i.i = icmp ule i64 %39, 16384, !dbg !11981
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !11982

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !11983
  br label %kmalloc_index.exit.i, !dbg !11983

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11984
  %cmp48.i.i = icmp ule i64 %40, 32768, !dbg !11985
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !11986

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !11987
  br label %kmalloc_index.exit.i, !dbg !11987

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11988
  %cmp51.i.i = icmp ule i64 %41, 65536, !dbg !11989
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !11990

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !11991
  br label %kmalloc_index.exit.i, !dbg !11991

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11992
  %cmp54.i.i = icmp ule i64 %42, 131072, !dbg !11993
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !11994

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !11995
  br label %kmalloc_index.exit.i, !dbg !11995

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !11996
  %cmp57.i.i = icmp ule i64 %43, 262144, !dbg !11997
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !11998

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !11999
  br label %kmalloc_index.exit.i, !dbg !11999

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12000
  %cmp60.i.i = icmp ule i64 %44, 524288, !dbg !12001
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12002

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12003
  br label %kmalloc_index.exit.i, !dbg !12003

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12004
  %cmp63.i.i = icmp ule i64 %45, 1048576, !dbg !12005
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12006

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12007
  br label %kmalloc_index.exit.i, !dbg !12007

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12008
  %cmp66.i.i = icmp ule i64 %46, 2097152, !dbg !12009
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12010

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12011
  br label %kmalloc_index.exit.i, !dbg !12011

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12012
  %cmp69.i.i = icmp ule i64 %47, 4194304, !dbg !12013
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12014

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12015
  br label %kmalloc_index.exit.i, !dbg !12015

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12016
  %cmp72.i.i = icmp ule i64 %48, 8388608, !dbg !12017
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12018

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12019
  br label %kmalloc_index.exit.i, !dbg !12019

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12020
  %cmp75.i.i = icmp ule i64 %49, 16777216, !dbg !12021
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12022

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12023
  br label %kmalloc_index.exit.i, !dbg !12023

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12024
  %cmp78.i.i = icmp ule i64 %50, 33554432, !dbg !12025
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12026

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12027
  br label %kmalloc_index.exit.i, !dbg !12027

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12028
  %cmp81.i.i = icmp ule i64 %51, 67108864, !dbg !12029
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12030

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12031
  br label %kmalloc_index.exit.i, !dbg !12031

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.113, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !12032, !srcloc !6167
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 230) #7, !dbg !12033, !srcloc !6171
  unreachable, !dbg !12034

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %52 = load i32, i32* %retval.i.i, align 4, !dbg !12035
  store i32 %52, i32* %index.i, align 4, !dbg !12036
  %53 = load i32, i32* %index.i, align 4, !dbg !12037
  %tobool.i = icmp ne i32 %53, 0, !dbg !12037
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12038

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12039
  br label %kmalloc.exit, !dbg !12039

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %54 = load i32, i32* %flags.addr.i, align 4, !dbg !12040
  store i32 %54, i32* %flags.addr.i13.i, align 4
  %55 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12041
  %and.i.i = and i32 %55, 17, !dbg !12041
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12041
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12041
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12041
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12041
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12042

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12043
  br label %kmalloc_type.exit.i, !dbg !12043

if.end.i16.i:                                     ; preds = %if.end4.i
  %56 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12044
  %and2.i.i = and i32 %56, 1, !dbg !12045
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12044
  %57 = zext i1 %tobool3.i.i to i64, !dbg !12044
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12044
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12046
  br label %kmalloc_type.exit.i, !dbg !12046

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %58 = load i32, i32* %retval.i12.i, align 4, !dbg !12047
  %idxprom.i = zext i32 %58 to i64, !dbg !12048
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12048
  %59 = load i32, i32* %index.i, align 4, !dbg !12049
  %idxprom6.i = zext i32 %59 to i64, !dbg !12048
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12048
  %60 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12048
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !12050
  %62 = load i64, i64* %size.addr.i, align 8, !dbg !12051
  store %struct.kmem_cache* %60, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %61, i32* %flags.addr.i17.i, align 4
  store i64 %62, i64* %size.addr.i18.i, align 8
  %63 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12052
  %64 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12053
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %63, i32 %64) #12, !dbg !12054
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12054
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12054
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12054
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !12054
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !11849
  %65 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12055
  %66 = load i8*, i8** %ret.i.i, align 8, !dbg !12056
  %67 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12057
  %68 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12058
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %65, i8* %66, i64 %67, i32 %68) #12, !dbg !12059
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12060
  %69 = load i8*, i8** %ret.i.i, align 8, !dbg !12061
  store i8* %69, i8** %retval.i, align 8, !dbg !12062
  br label %kmalloc.exit, !dbg !12062

if.end9.i:                                        ; preds = %cond.end
  %70 = load i64, i64* %size.addr.i, align 8, !dbg !12063
  %71 = load i32, i32* %flags.addr.i, align 4, !dbg !12064
  %call10.i = call noalias i8* @__kmalloc(i64 %70, i32 %71) #12, !dbg !12065
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12065
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12065
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12065
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !12065
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12066
  br label %kmalloc.exit, !dbg !12066

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %72 = load i8*, i8** %retval.i, align 8, !dbg !12067
  store i8* %72, i8** %local_buf, align 8, !dbg !12068
  %73 = load i8*, i8** %local_buf, align 8, !dbg !12069
  %tobool4 = icmp ne i8* %73, null, !dbg !12069
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !12071

if.then5:                                         ; preds = %kmalloc.exit
  store i32 -12, i32* %retval, align 4, !dbg !12072
  br label %return, !dbg !12072

if.end:                                           ; preds = %kmalloc.exit
  br label %if.end6, !dbg !12073

if.else:                                          ; preds = %lor.lhs.false
  %74 = load i8*, i8** @buf, align 8, !dbg !12074
  store i8* %74, i8** %local_buf, align 8, !dbg !12076
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.end
  call void @spi_message_init(%struct.spi_message* %message) #11, !dbg !12077
  %arraydecay = getelementptr inbounds [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 0, !dbg !12078
  %75 = bitcast %struct.spi_transfer* %arraydecay to i8*, !dbg !12078
  call void @llvm.memset.p0i8.i64(i8* align 16 %75, i8 0, i64 288, i1 false), !dbg !12078
  %76 = load i32, i32* %n_tx.addr, align 4, !dbg !12079
  %tobool7 = icmp ne i32 %76, 0, !dbg !12079
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !12081

if.then8:                                         ; preds = %if.end6
  %77 = load i32, i32* %n_tx.addr, align 4, !dbg !12082
  %arrayidx = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 0, !dbg !12084
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx, i32 0, i32 2, !dbg !12085
  store i32 %77, i32* %len, align 16, !dbg !12086
  %arrayidx9 = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 0, !dbg !12087
  call void @spi_message_add_tail(%struct.spi_transfer* %arrayidx9, %struct.spi_message* %message) #11, !dbg !12088
  br label %if.end10, !dbg !12089

if.end10:                                         ; preds = %if.then8, %if.end6
  %78 = load i32, i32* %n_rx.addr, align 4, !dbg !12090
  %tobool11 = icmp ne i32 %78, 0, !dbg !12090
  br i1 %tobool11, label %if.then12, label %if.end16, !dbg !12092

if.then12:                                        ; preds = %if.end10
  %79 = load i32, i32* %n_rx.addr, align 4, !dbg !12093
  %arrayidx13 = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 1, !dbg !12095
  %len14 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx13, i32 0, i32 2, !dbg !12096
  store i32 %79, i32* %len14, align 16, !dbg !12097
  %arrayidx15 = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 1, !dbg !12098
  call void @spi_message_add_tail(%struct.spi_transfer* %arrayidx15, %struct.spi_message* %message) #11, !dbg !12099
  br label %if.end16, !dbg !12100

if.end16:                                         ; preds = %if.then12, %if.end10
  %80 = load i8*, i8** %local_buf, align 8, !dbg !12101
  %81 = load i8*, i8** %txbuf.addr, align 8, !dbg !12102
  %82 = load i32, i32* %n_tx.addr, align 4, !dbg !12103
  %conv17 = zext i32 %82 to i64, !dbg !12103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %80, i8* align 1 %81, i64 %conv17, i1 false), !dbg !12104
  %83 = load i8*, i8** %local_buf, align 8, !dbg !12105
  %arrayidx18 = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 0, !dbg !12106
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx18, i32 0, i32 0, !dbg !12107
  store i8* %83, i8** %tx_buf, align 16, !dbg !12108
  %84 = load i8*, i8** %local_buf, align 8, !dbg !12109
  %85 = load i32, i32* %n_tx.addr, align 4, !dbg !12110
  %idx.ext = zext i32 %85 to i64, !dbg !12111
  %add.ptr = getelementptr i8, i8* %84, i64 %idx.ext, !dbg !12111
  %arrayidx19 = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 1, !dbg !12112
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx19, i32 0, i32 1, !dbg !12113
  store i8* %add.ptr, i8** %rx_buf, align 8, !dbg !12114
  %86 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !12115
  %call20 = call i32 @spi_sync(%struct.spi_device* %86, %struct.spi_message* %message) #11, !dbg !12116
  store i32 %call20, i32* %status, align 4, !dbg !12117
  %87 = load i32, i32* %status, align 4, !dbg !12118
  %cmp21 = icmp eq i32 %87, 0, !dbg !12120
  br i1 %cmp21, label %if.then23, label %if.end27, !dbg !12121

if.then23:                                        ; preds = %if.end16
  %88 = load i8*, i8** %rxbuf.addr, align 8, !dbg !12122
  %arrayidx24 = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 1, !dbg !12123
  %rx_buf25 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx24, i32 0, i32 1, !dbg !12124
  %89 = load i8*, i8** %rx_buf25, align 8, !dbg !12124
  %90 = load i32, i32* %n_rx.addr, align 4, !dbg !12125
  %conv26 = zext i32 %90 to i64, !dbg !12125
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %89, i64 %conv26, i1 false), !dbg !12126
  br label %if.end27, !dbg !12126

if.end27:                                         ; preds = %if.then23, %if.end16
  %arrayidx28 = getelementptr [2 x %struct.spi_transfer], [2 x %struct.spi_transfer]* %x, i64 0, i64 0, !dbg !12127
  %tx_buf29 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %arrayidx28, i32 0, i32 0, !dbg !12129
  %91 = load i8*, i8** %tx_buf29, align 16, !dbg !12129
  %92 = load i8*, i8** @buf, align 8, !dbg !12130
  %cmp30 = icmp eq i8* %91, %92, !dbg !12131
  br i1 %cmp30, label %if.then32, label %if.else33, !dbg !12132

if.then32:                                        ; preds = %if.end27
  call void @mutex_unlock(%struct.mutex* @spi_write_then_read.lock) #11, !dbg !12133
  br label %if.end34, !dbg !12133

if.else33:                                        ; preds = %if.end27
  %93 = load i8*, i8** %local_buf, align 8, !dbg !12134
  call void @kfree(i8* %93) #11, !dbg !12135
  br label %if.end34

if.end34:                                         ; preds = %if.else33, %if.then32
  %94 = load i32, i32* %status, align 4, !dbg !12136
  store i32 %94, i32* %retval, align 4, !dbg !12137
  br label %return, !dbg !12137

return:                                           ; preds = %if.end34, %if.then5
  %95 = load i32, i32* %retval, align 4, !dbg !12138
  ret i32 %95, !dbg !12138
}

; Function Attrs: noredzone
declare dso_local i32 @mutex_trylock(%struct.mutex*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_message_init(%struct.spi_message* %m) #0 !dbg !12139 {
entry:
  %m.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_message* %m, %struct.spi_message** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %m.addr, metadata !12140, metadata !DIExpression()), !dbg !12141
  %0 = load %struct.spi_message*, %struct.spi_message** %m.addr, align 8, !dbg !12142
  %1 = bitcast %struct.spi_message* %0 to i8*, !dbg !12143
  call void @llvm.memset.p0i8.i64(i8* align 8 %1, i8 0, i64 104, i1 false), !dbg !12143
  %2 = load %struct.spi_message*, %struct.spi_message** %m.addr, align 8, !dbg !12144
  call void @spi_message_init_no_memset(%struct.spi_message* %2) #11, !dbg !12145
  ret void, !dbg !12146
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_message_add_tail(%struct.spi_transfer* %t, %struct.spi_message* %m) #0 !dbg !12147 {
entry:
  %t.addr = alloca %struct.spi_transfer*, align 8
  %m.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_transfer* %t, %struct.spi_transfer** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %t.addr, metadata !12150, metadata !DIExpression()), !dbg !12151
  store %struct.spi_message* %m, %struct.spi_message** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %m.addr, metadata !12152, metadata !DIExpression()), !dbg !12153
  %0 = load %struct.spi_transfer*, %struct.spi_transfer** %t.addr, align 8, !dbg !12154
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %0, i32 0, i32 19, !dbg !12155
  %1 = load %struct.spi_message*, %struct.spi_message** %m.addr, align 8, !dbg !12156
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %1, i32 0, i32 0, !dbg !12157
  call void @list_add_tail(%struct.list_head* %transfer_list, %struct.list_head* %transfers) #11, !dbg !12158
  ret void, !dbg !12159
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define dso_local %struct.spi_device* @of_find_spi_device_by_node(%struct.device_node* %node) #0 !dbg !12160 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !12163, metadata !DIExpression()), !dbg !12164
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !12165, metadata !DIExpression()), !dbg !12166
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !12167
  %call = call %struct.device* @bus_find_device_by_of_node(%struct.bus_type* @spi_bus_type, %struct.device_node* %0) #11, !dbg !12168
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !12166
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12169
  %tobool = icmp ne %struct.device* %1, null, !dbg !12169
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12169

cond.true:                                        ; preds = %entry
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !12170
  %call1 = call %struct.spi_device* @to_spi_device(%struct.device* %2) #11, !dbg !12171
  br label %cond.end, !dbg !12169

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12169

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.spi_device* [ %call1, %cond.true ], [ null, %cond.false ], !dbg !12169
  ret %struct.spi_device* %cond, !dbg !12172
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @bus_find_device_by_of_node(%struct.bus_type* %bus, %struct.device_node* %np) #0 !dbg !12173 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  %np.addr = alloca %struct.device_node*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !12178, metadata !DIExpression()), !dbg !12179
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !12180, metadata !DIExpression()), !dbg !12181
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !12182
  %1 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !12183
  %2 = bitcast %struct.device_node* %1 to i8*, !dbg !12183
  %call = call %struct.device* @bus_find_device(%struct.bus_type* %0, %struct.device* null, i8* %2, i32 (%struct.device*, i8*)* @device_match_of_node) #11, !dbg !12184
  ret %struct.device* %call, !dbg !12185
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_device* @to_spi_device(%struct.device* %dev) #0 !dbg !12186 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12189, metadata !DIExpression()), !dbg !12190
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12191
  %tobool = icmp ne %struct.device* %0, null, !dbg !12191
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12191

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !12192, metadata !DIExpression()), !dbg !12194
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12194
  %2 = bitcast %struct.device* %1 to i8*, !dbg !12194
  store i8* %2, i8** %__mptr, align 8, !dbg !12194
  br label %do.body, !dbg !12194

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !12195

do.end:                                           ; preds = %do.body
  %3 = load i8*, i8** %__mptr, align 8, !dbg !12194
  %add.ptr = getelementptr i8, i8* %3, i64 0, !dbg !12194
  %4 = bitcast i8* %add.ptr to %struct.spi_device*, !dbg !12194
  store %struct.spi_device* %4, %struct.spi_device** %tmp, align 8, !dbg !12195
  %5 = load %struct.spi_device*, %struct.spi_device** %tmp, align 8, !dbg !12194
  br label %cond.end, !dbg !12191

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12191

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.spi_device* [ %5, %do.end ], [ null, %cond.false ], !dbg !12191
  ret %struct.spi_device* %cond, !dbg !12197
}

; Function Attrs: cold noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_init() #5 section ".init.text" !dbg !5393 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5940, metadata !DIExpression()), !dbg !12198
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5950, metadata !DIExpression()), !dbg !12201
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5952, metadata !DIExpression()), !dbg !12202
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5954, metadata !DIExpression()), !dbg !12203
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5956, metadata !DIExpression()), !dbg !12204
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5962, metadata !DIExpression()), !dbg !12206
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5968, metadata !DIExpression()), !dbg !12208
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5977, metadata !DIExpression()), !dbg !12211
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5979, metadata !DIExpression()), !dbg !12212
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5981, metadata !DIExpression()), !dbg !12213
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5983, metadata !DIExpression()), !dbg !12214
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5985, metadata !DIExpression()), !dbg !12215
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5987, metadata !DIExpression()), !dbg !12216
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5989, metadata !DIExpression()), !dbg !12217
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5991, metadata !DIExpression()), !dbg !12218
  %retval = alloca i32, align 4
  %status = alloca i32, align 4
  %tmp = alloca i32, align 4
  %__ret_warn_on = alloca i32, align 4
  %tmp25 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12219, metadata !DIExpression()), !dbg !12220
  store i64 64, i64* %size.addr.i, align 8
  store i32 3264, i32* %flags.addr.i, align 4
  %0 = load i64, i64* %size.addr.i, align 8, !dbg !12221
  %1 = call i1 @llvm.is.constant.i64(i64 %0) #7, !dbg !12222
  br i1 %1, label %if.then.i, label %if.end9.i, !dbg !12223

if.then.i:                                        ; preds = %entry
  %2 = load i64, i64* %size.addr.i, align 8, !dbg !12224
  %cmp.i = icmp ugt i64 %2, 8192, !dbg !12225
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !12226

if.then1.i:                                       ; preds = %if.then.i
  %3 = load i64, i64* %size.addr.i, align 8, !dbg !12227
  %4 = load i32, i32* %flags.addr.i, align 4, !dbg !12228
  store i64 %3, i64* %size.addr.i.i, align 8
  store i32 %4, i32* %flags.addr.i.i, align 4
  %5 = load i64, i64* %size.addr.i.i, align 8, !dbg !12229
  %call.i.i = call i32 @get_order(i64 %5) #13, !dbg !12230
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !12215
  %6 = load i64, i64* %size.addr.i.i, align 8, !dbg !12231
  %7 = load i32, i32* %flags.addr.i.i, align 4, !dbg !12232
  %8 = load i32, i32* %order.i.i, align 4, !dbg !12233
  store i64 %6, i64* %size.addr.i.i.i, align 8
  store i32 %7, i32* %flags.addr.i.i.i, align 4
  store i32 %8, i32* %order.addr.i.i.i, align 4
  %9 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !12234
  %10 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !12235
  %11 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !12236
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %9, i32 %10, i32 %11) #12, !dbg !12237
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !12237
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !12237
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !12237
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !12237
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !12238
  br label %kmalloc.exit, !dbg !12238

if.end.i:                                         ; preds = %if.then.i
  %12 = load i64, i64* %size.addr.i, align 8, !dbg !12239
  store i64 %12, i64* %size.addr.i11.i, align 8
  %13 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12240
  %tobool.i.i = icmp ne i64 %13, 0, !dbg !12240
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !12241

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !12242
  br label %kmalloc_index.exit.i, !dbg !12242

if.end.i.i:                                       ; preds = %if.end.i
  %14 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12243
  %cmp.i.i = icmp ule i64 %14, 8, !dbg !12244
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !12245

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12246
  br label %kmalloc_index.exit.i, !dbg !12246

if.end2.i.i:                                      ; preds = %if.end.i.i
  %15 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12247
  %cmp3.i.i = icmp ugt i64 %15, 64, !dbg !12248
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !12249

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %16 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12250
  %cmp4.i.i = icmp ule i64 %16, 96, !dbg !12251
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !12252

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !12253
  br label %kmalloc_index.exit.i, !dbg !12253

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %17 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12254
  %cmp7.i.i = icmp ugt i64 %17, 128, !dbg !12255
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !12256

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %18 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12257
  %cmp9.i.i = icmp ule i64 %18, 192, !dbg !12258
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !12259

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !12260
  br label %kmalloc_index.exit.i, !dbg !12260

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %19 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12261
  %cmp12.i.i = icmp ule i64 %19, 8, !dbg !12262
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !12263

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !12264
  br label %kmalloc_index.exit.i, !dbg !12264

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %20 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12265
  %cmp15.i.i = icmp ule i64 %20, 16, !dbg !12266
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !12267

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !12268
  br label %kmalloc_index.exit.i, !dbg !12268

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %21 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12269
  %cmp18.i.i = icmp ule i64 %21, 32, !dbg !12270
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !12271

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !12272
  br label %kmalloc_index.exit.i, !dbg !12272

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %22 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12273
  %cmp21.i.i = icmp ule i64 %22, 64, !dbg !12274
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !12275

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !12276
  br label %kmalloc_index.exit.i, !dbg !12276

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %23 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12277
  %cmp24.i.i = icmp ule i64 %23, 128, !dbg !12278
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !12279

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !12280
  br label %kmalloc_index.exit.i, !dbg !12280

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %24 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12281
  %cmp27.i.i = icmp ule i64 %24, 256, !dbg !12282
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !12283

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !12284
  br label %kmalloc_index.exit.i, !dbg !12284

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %25 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12285
  %cmp30.i.i = icmp ule i64 %25, 512, !dbg !12286
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !12287

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !12288
  br label %kmalloc_index.exit.i, !dbg !12288

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %26 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12289
  %cmp33.i.i = icmp ule i64 %26, 1024, !dbg !12290
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !12291

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !12292
  br label %kmalloc_index.exit.i, !dbg !12292

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %27 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12293
  %cmp36.i.i = icmp ule i64 %27, 2048, !dbg !12294
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !12295

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !12296
  br label %kmalloc_index.exit.i, !dbg !12296

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %28 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12297
  %cmp39.i.i = icmp ule i64 %28, 4096, !dbg !12298
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !12299

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !12300
  br label %kmalloc_index.exit.i, !dbg !12300

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12301
  %cmp42.i.i = icmp ule i64 %29, 8192, !dbg !12302
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !12303

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !12304
  br label %kmalloc_index.exit.i, !dbg !12304

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12305
  %cmp45.i.i = icmp ule i64 %30, 16384, !dbg !12306
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !12307

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !12308
  br label %kmalloc_index.exit.i, !dbg !12308

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12309
  %cmp48.i.i = icmp ule i64 %31, 32768, !dbg !12310
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !12311

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !12312
  br label %kmalloc_index.exit.i, !dbg !12312

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12313
  %cmp51.i.i = icmp ule i64 %32, 65536, !dbg !12314
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !12315

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !12316
  br label %kmalloc_index.exit.i, !dbg !12316

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12317
  %cmp54.i.i = icmp ule i64 %33, 131072, !dbg !12318
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !12319

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !12320
  br label %kmalloc_index.exit.i, !dbg !12320

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12321
  %cmp57.i.i = icmp ule i64 %34, 262144, !dbg !12322
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !12323

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !12324
  br label %kmalloc_index.exit.i, !dbg !12324

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12325
  %cmp60.i.i = icmp ule i64 %35, 524288, !dbg !12326
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !12327

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !12328
  br label %kmalloc_index.exit.i, !dbg !12328

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12329
  %cmp63.i.i = icmp ule i64 %36, 1048576, !dbg !12330
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !12331

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !12332
  br label %kmalloc_index.exit.i, !dbg !12332

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12333
  %cmp66.i.i = icmp ule i64 %37, 2097152, !dbg !12334
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !12335

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !12336
  br label %kmalloc_index.exit.i, !dbg !12336

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12337
  %cmp69.i.i = icmp ule i64 %38, 4194304, !dbg !12338
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !12339

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !12340
  br label %kmalloc_index.exit.i, !dbg !12340

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12341
  %cmp72.i.i = icmp ule i64 %39, 8388608, !dbg !12342
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !12343

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !12344
  br label %kmalloc_index.exit.i, !dbg !12344

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12345
  %cmp75.i.i = icmp ule i64 %40, 16777216, !dbg !12346
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !12347

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !12348
  br label %kmalloc_index.exit.i, !dbg !12348

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12349
  %cmp78.i.i = icmp ule i64 %41, 33554432, !dbg !12350
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !12351

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !12352
  br label %kmalloc_index.exit.i, !dbg !12352

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !12353
  %cmp81.i.i = icmp ule i64 %42, 67108864, !dbg !12354
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !12355

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !12356
  br label %kmalloc_index.exit.i, !dbg !12356

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.113, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !12357, !srcloc !6167
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 230) #7, !dbg !12358, !srcloc !6171
  unreachable, !dbg !12359

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %43 = load i32, i32* %retval.i.i, align 4, !dbg !12360
  store i32 %43, i32* %index.i, align 4, !dbg !12361
  %44 = load i32, i32* %index.i, align 4, !dbg !12362
  %tobool.i = icmp ne i32 %44, 0, !dbg !12362
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !12363

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !12364
  br label %kmalloc.exit, !dbg !12364

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %45 = load i32, i32* %flags.addr.i, align 4, !dbg !12365
  store i32 %45, i32* %flags.addr.i13.i, align 4
  %46 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12366
  %and.i.i = and i32 %46, 17, !dbg !12366
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !12366
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !12366
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !12366
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !12366
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !12367

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !12368
  br label %kmalloc_type.exit.i, !dbg !12368

if.end.i16.i:                                     ; preds = %if.end4.i
  %47 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !12369
  %and2.i.i = and i32 %47, 1, !dbg !12370
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !12369
  %48 = zext i1 %tobool3.i.i to i64, !dbg !12369
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !12369
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !12371
  br label %kmalloc_type.exit.i, !dbg !12371

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %49 = load i32, i32* %retval.i12.i, align 4, !dbg !12372
  %idxprom.i = zext i32 %49 to i64, !dbg !12373
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !12373
  %50 = load i32, i32* %index.i, align 4, !dbg !12374
  %idxprom6.i = zext i32 %50 to i64, !dbg !12373
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !12373
  %51 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !12373
  %52 = load i32, i32* %flags.addr.i, align 4, !dbg !12375
  %53 = load i64, i64* %size.addr.i, align 8, !dbg !12376
  store %struct.kmem_cache* %51, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %52, i32* %flags.addr.i17.i, align 4
  store i64 %53, i64* %size.addr.i18.i, align 8
  %54 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12377
  %55 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12378
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %54, i32 %55) #12, !dbg !12379
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !12379
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !12379
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !12379
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !12379
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !12203
  %56 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !12380
  %57 = load i8*, i8** %ret.i.i, align 8, !dbg !12381
  %58 = load i64, i64* %size.addr.i18.i, align 8, !dbg !12382
  %59 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !12383
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %56, i8* %57, i64 %58, i32 %59) #12, !dbg !12384
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !12385
  %60 = load i8*, i8** %ret.i.i, align 8, !dbg !12386
  store i8* %60, i8** %retval.i, align 8, !dbg !12387
  br label %kmalloc.exit, !dbg !12387

if.end9.i:                                        ; preds = %entry
  %61 = load i64, i64* %size.addr.i, align 8, !dbg !12388
  %62 = load i32, i32* %flags.addr.i, align 4, !dbg !12389
  %call10.i = call noalias i8* @__kmalloc(i64 %61, i32 %62) #12, !dbg !12390
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !12390
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !12390
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !12390
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !12390
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !12391
  br label %kmalloc.exit, !dbg !12391

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %63 = load i8*, i8** %retval.i, align 8, !dbg !12392
  store i8* %63, i8** @buf, align 8, !dbg !12393
  %64 = load i8*, i8** @buf, align 8, !dbg !12394
  %tobool = icmp ne i8* %64, null, !dbg !12394
  br i1 %tobool, label %if.end, label %if.then, !dbg !12396

if.then:                                          ; preds = %kmalloc.exit
  store i32 -12, i32* %status, align 4, !dbg !12397
  br label %err0, !dbg !12399

if.end:                                           ; preds = %kmalloc.exit
  %call1 = call i32 @bus_register(%struct.bus_type* @spi_bus_type) #11, !dbg !12400
  store i32 %call1, i32* %status, align 4, !dbg !12401
  %65 = load i32, i32* %status, align 4, !dbg !12402
  %cmp = icmp slt i32 %65, 0, !dbg !12404
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !12405

if.then2:                                         ; preds = %if.end
  br label %err1, !dbg !12406

if.end3:                                          ; preds = %if.end
  %call4 = call i32 @__class_register(%struct.class* @spi_master_class, %struct.lock_class_key* @spi_init.__key) #11, !dbg !12407
  store i32 %call4, i32* %tmp, align 4, !dbg !12407
  %66 = load i32, i32* %tmp, align 4, !dbg !12407
  store i32 %66, i32* %status, align 4, !dbg !12409
  %67 = load i32, i32* %status, align 4, !dbg !12410
  %cmp5 = icmp slt i32 %67, 0, !dbg !12412
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12413

if.then6:                                         ; preds = %if.end3
  br label %err2, !dbg !12414

if.end7:                                          ; preds = %if.end3
  call void @llvm.dbg.declare(metadata i32* %__ret_warn_on, metadata !12415, metadata !DIExpression()), !dbg !12418
  %call8 = call i32 @acpi_reconfig_notifier_register(%struct.notifier_block* @spi_acpi_notifier) #11, !dbg !12418
  %tobool9 = icmp ne i32 %call8, 0, !dbg !12418
  %lnot = xor i1 %tobool9, true, !dbg !12418
  %lnot10 = xor i1 %lnot, true, !dbg !12418
  %lnot.ext = zext i1 %lnot10 to i32, !dbg !12418
  store i32 %lnot.ext, i32* %__ret_warn_on, align 4, !dbg !12418
  %68 = load i32, i32* %__ret_warn_on, align 4, !dbg !12419
  %tobool11 = icmp ne i32 %68, 0, !dbg !12419
  %lnot12 = xor i1 %tobool11, true, !dbg !12419
  %lnot14 = xor i1 %lnot12, true, !dbg !12419
  %lnot.ext15 = zext i1 %lnot14 to i32, !dbg !12419
  %conv = sext i32 %lnot.ext15 to i64, !dbg !12419
  %tobool16 = icmp ne i64 %conv, 0, !dbg !12419
  br i1 %tobool16, label %if.then17, label %if.end24, !dbg !12418

if.then17:                                        ; preds = %if.end7
  br label %do.body, !dbg !12419

do.body:                                          ; preds = %if.then17
  br label %do.body18, !dbg !12421

do.body18:                                        ; preds = %do.body
  br label %do.end, !dbg !12423

do.end:                                           ; preds = %do.body18
  br label %do.body19, !dbg !12421

do.body19:                                        ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5, i64 0, i64 0), i32 4207, i32 2305, i64 12) #7, !dbg !12425, !srcloc !12427
  br label %do.end20, !dbg !12425

do.end20:                                         ; preds = %do.body19
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.reachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 382) #7, !dbg !12428, !srcloc !12430
  br label %do.body21, !dbg !12421

do.body21:                                        ; preds = %do.end20
  br label %do.end22, !dbg !12431

do.end22:                                         ; preds = %do.body21
  br label %do.end23, !dbg !12421

do.end23:                                         ; preds = %do.end22
  br label %if.end24, !dbg !12421

if.end24:                                         ; preds = %do.end23, %if.end7
  %69 = load i32, i32* %__ret_warn_on, align 4, !dbg !12418
  %tobool26 = icmp ne i32 %69, 0, !dbg !12418
  %lnot27 = xor i1 %tobool26, true, !dbg !12418
  %lnot29 = xor i1 %lnot27, true, !dbg !12418
  %lnot.ext30 = zext i1 %lnot29 to i32, !dbg !12418
  %conv31 = sext i32 %lnot.ext30 to i64, !dbg !12418
  store i64 %conv31, i64* %tmp25, align 8, !dbg !12419
  %70 = load i64, i64* %tmp25, align 8, !dbg !12418
  store i32 0, i32* %retval, align 4, !dbg !12433
  br label %return, !dbg !12433

err3:                                             ; No predecessors!
  call void @llvm.dbg.label(metadata !12434), !dbg !12435
  call void @class_unregister(%struct.class* @spi_master_class) #11, !dbg !12436
  br label %err2, !dbg !12436

err2:                                             ; preds = %err3, %if.then6
  call void @llvm.dbg.label(metadata !12437), !dbg !12438
  call void @bus_unregister(%struct.bus_type* @spi_bus_type) #11, !dbg !12439
  br label %err1, !dbg !12439

err1:                                             ; preds = %err2, %if.then2
  call void @llvm.dbg.label(metadata !12440), !dbg !12441
  %71 = load i8*, i8** @buf, align 8, !dbg !12442
  call void @kfree(i8* %71) #11, !dbg !12443
  store i8* null, i8** @buf, align 8, !dbg !12444
  br label %err0, !dbg !12445

err0:                                             ; preds = %err1, %if.then
  call void @llvm.dbg.label(metadata !12446), !dbg !12447
  %72 = load i32, i32* %status, align 4, !dbg !12448
  store i32 %72, i32* %retval, align 4, !dbg !12449
  br label %return, !dbg !12449

return:                                           ; preds = %err0, %if.end24
  %73 = load i32, i32* %retval, align 4, !dbg !12450
  ret i32 %73, !dbg !12450
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @arch_local_save_flags() #0 !dbg !12451 {
entry:
  %__ret = alloca i64, align 8
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  %__mask = alloca i64, align 8
  %tmp = alloca i64, align 8
  %tmp2 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__ret, metadata !12452, metadata !DIExpression()), !dbg !12454
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12455, metadata !DIExpression()), !dbg !12454
  %0 = load i64, i64* %__edi, align 8, !dbg !12454
  store i64 %0, i64* %__edi, align 8, !dbg !12454
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12456, metadata !DIExpression()), !dbg !12454
  %1 = load i64, i64* %__esi, align 8, !dbg !12454
  store i64 %1, i64* %__esi, align 8, !dbg !12454
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12457, metadata !DIExpression()), !dbg !12454
  %2 = load i64, i64* %__edx, align 8, !dbg !12454
  store i64 %2, i64* %__edx, align 8, !dbg !12454
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12458, metadata !DIExpression()), !dbg !12454
  %3 = load i64, i64* %__ecx, align 8, !dbg !12454
  store i64 %3, i64* %__ecx, align 8, !dbg !12454
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12459, metadata !DIExpression()), !dbg !12454
  %4 = load i64, i64* %__eax, align 8, !dbg !12454
  store i64 %4, i64* %__eax, align 8, !dbg !12454
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), align 8, !dbg !12454
  %6 = call i64 @llvm.read_register.i64(metadata !5410), !dbg !12460
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 36, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 0, i32 0), i32 1, i64 %6) #7, !dbg !12460, !srcloc !12463
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12460
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12460
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12460
  call void @llvm.write_register.i64(metadata !5410, i64 %asmresult1), !dbg !12460
  %8 = load i64, i64* %__eax, align 8, !dbg !12460
  call void @llvm.dbg.declare(metadata i64* %__mask, metadata !12464, metadata !DIExpression()), !dbg !12466
  store i64 -1, i64* %__mask, align 8, !dbg !12466
  %9 = load i64, i64* %__mask, align 8, !dbg !12466
  store i64 %9, i64* %tmp, align 8, !dbg !12466
  %10 = load i64, i64* %tmp, align 8, !dbg !12466
  %and = and i64 %8, %10, !dbg !12460
  store i64 %and, i64* %__ret, align 8, !dbg !12460
  %11 = load i64, i64* %__ret, align 8, !dbg !12454
  store i64 %11, i64* %tmp2, align 8, !dbg !12467
  %12 = load i64, i64* %tmp2, align 8, !dbg !12454
  ret i64 %12, !dbg !12468
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @arch_local_irq_disable() #0 !dbg !12469 {
entry:
  %__edi = alloca i64, align 8
  %__esi = alloca i64, align 8
  %__edx = alloca i64, align 8
  %__ecx = alloca i64, align 8
  %__eax = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %__edi, metadata !12470, metadata !DIExpression()), !dbg !12472
  %0 = load i64, i64* %__edi, align 8, !dbg !12472
  store i64 %0, i64* %__edi, align 8, !dbg !12472
  call void @llvm.dbg.declare(metadata i64* %__esi, metadata !12473, metadata !DIExpression()), !dbg !12472
  %1 = load i64, i64* %__esi, align 8, !dbg !12472
  store i64 %1, i64* %__esi, align 8, !dbg !12472
  call void @llvm.dbg.declare(metadata i64* %__edx, metadata !12474, metadata !DIExpression()), !dbg !12472
  %2 = load i64, i64* %__edx, align 8, !dbg !12472
  store i64 %2, i64* %__edx, align 8, !dbg !12472
  call void @llvm.dbg.declare(metadata i64* %__ecx, metadata !12475, metadata !DIExpression()), !dbg !12472
  %3 = load i64, i64* %__ecx, align 8, !dbg !12472
  store i64 %3, i64* %__ecx, align 8, !dbg !12472
  call void @llvm.dbg.declare(metadata i64* %__eax, metadata !12476, metadata !DIExpression()), !dbg !12472
  %4 = load i64, i64* %__eax, align 8, !dbg !12472
  store i64 %4, i64* %__eax, align 8, !dbg !12472
  %5 = load i8*, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), align 8, !dbg !12472
  %6 = call i64 @llvm.read_register.i64(metadata !5410), !dbg !12472
  %7 = call { i64, i64 } asm sideeffect "771:\0A\09999:\0A\09.pushsection .discard.retpoline_safe\0A\09 .quad  999b\0A\09.popsection\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 38, i8** getelementptr inbounds (%struct.paravirt_patch_template, %struct.paravirt_patch_template* @pv_ops, i32 0, i32 3, i32 2, i32 0), i32 1, i64 %6) #7, !dbg !12472, !srcloc !12477
  %asmresult = extractvalue { i64, i64 } %7, 0, !dbg !12472
  %asmresult1 = extractvalue { i64, i64 } %7, 1, !dbg !12472
  store i64 %asmresult, i64* %__eax, align 8, !dbg !12472
  call void @llvm.write_register.i64(metadata !5410, i64 %asmresult1), !dbg !12472
  ret void, !dbg !12478
}

; Function Attrs: nounwind readonly
declare i64 @llvm.read_register.i64(metadata) #6

; Function Attrs: nounwind
declare void @llvm.write_register.i64(metadata, i64) #7

; Function Attrs: noredzone
declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @modalias_show(%struct.device* %dev, %struct.device_attribute* %a, i8* %buf) #0 !dbg !12479 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %a.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %len = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12480, metadata !DIExpression()), !dbg !12481
  store %struct.device_attribute* %a, %struct.device_attribute** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %a.addr, metadata !12482, metadata !DIExpression()), !dbg !12483
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12484, metadata !DIExpression()), !dbg !12485
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12486, metadata !DIExpression()), !dbg !12487
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12488
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12489
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12487
  call void @llvm.dbg.declare(metadata i32* %len, metadata !12490, metadata !DIExpression()), !dbg !12491
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12492
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12493
  %call1 = call i32 @acpi_device_modalias(%struct.device* %1, i8* %2, i32 4095) #11, !dbg !12494
  store i32 %call1, i32* %len, align 4, !dbg !12495
  %3 = load i32, i32* %len, align 4, !dbg !12496
  %cmp = icmp ne i32 %3, -19, !dbg !12498
  br i1 %cmp, label %if.then, label %if.end, !dbg !12499

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %len, align 4, !dbg !12500
  %conv = sext i32 %4 to i64, !dbg !12500
  store i64 %conv, i64* %retval, align 8, !dbg !12501
  br label %return, !dbg !12501

if.end:                                           ; preds = %entry
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12502
  %6 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12503
  %modalias = getelementptr inbounds %struct.spi_device, %struct.spi_device* %6, i32 0, i32 11, !dbg !12504
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !12503
  %call2 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.24, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay) #11, !dbg !12505
  %conv3 = sext i32 %call2 to i64, !dbg !12505
  store i64 %conv3, i64* %retval, align 8, !dbg !12506
  br label %return, !dbg !12506

return:                                           ; preds = %if.end, %if.then
  %7 = load i64, i64* %retval, align 8, !dbg !12507
  ret i64 %7, !dbg !12507
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_device_modalias(%struct.device*, i8*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @driver_override_show(%struct.device* %dev, %struct.device_attribute* %a, i8* %buf) #0 !dbg !12508 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %a.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %len = alloca i64, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12509, metadata !DIExpression()), !dbg !12510
  store %struct.device_attribute* %a, %struct.device_attribute** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %a.addr, metadata !12511, metadata !DIExpression()), !dbg !12512
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12513, metadata !DIExpression()), !dbg !12514
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12515, metadata !DIExpression()), !dbg !12516
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12517
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12518
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12516
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12519, metadata !DIExpression()), !dbg !12520
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12521
  call void @device_lock(%struct.device* %1) #11, !dbg !12522
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12523
  %3 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12524
  %driver_override = getelementptr inbounds %struct.spi_device, %struct.spi_device* %3, i32 0, i32 12, !dbg !12525
  %4 = load i8*, i8** %driver_override, align 8, !dbg !12525
  %tobool = icmp ne i8* %4, null, !dbg !12524
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12524

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !12524

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !12524

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %4, %cond.true ], [ getelementptr inbounds ([1 x i8], [1 x i8]* @.str.28, i64 0, i64 0), %cond.false ], !dbg !12524
  %call1 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %2, i64 4096, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0), i8* %cond) #11, !dbg !12526
  %conv = sext i32 %call1 to i64, !dbg !12526
  store i64 %conv, i64* %len, align 8, !dbg !12527
  %5 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12528
  call void @device_unlock(%struct.device* %5) #11, !dbg !12529
  %6 = load i64, i64* %len, align 8, !dbg !12530
  ret i64 %6, !dbg !12531
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @driver_override_store(%struct.device* %dev, %struct.device_attribute* %a, i8* %buf, i64 %count) #0 !dbg !12532 {
entry:
  %retval = alloca i64, align 8
  %dev.addr = alloca %struct.device*, align 8
  %a.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %count.addr = alloca i64, align 8
  %spi = alloca %struct.spi_device*, align 8
  %end = alloca i8*, align 8
  %len = alloca i64, align 8
  %driver_override = alloca i8*, align 8
  %old = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12533, metadata !DIExpression()), !dbg !12534
  store %struct.device_attribute* %a, %struct.device_attribute** %a.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %a.addr, metadata !12535, metadata !DIExpression()), !dbg !12536
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12537, metadata !DIExpression()), !dbg !12538
  store i64 %count, i64* %count.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %count.addr, metadata !12539, metadata !DIExpression()), !dbg !12540
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12541, metadata !DIExpression()), !dbg !12542
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12543
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12544
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12542
  call void @llvm.dbg.declare(metadata i8** %end, metadata !12545, metadata !DIExpression()), !dbg !12546
  %1 = load i8*, i8** %buf.addr, align 8, !dbg !12547
  %2 = load i64, i64* %count.addr, align 8, !dbg !12548
  %call1 = call i8* @memchr(i8* %1, i32 10, i64 %2) #11, !dbg !12549
  store i8* %call1, i8** %end, align 8, !dbg !12546
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12550, metadata !DIExpression()), !dbg !12552
  %3 = load i8*, i8** %end, align 8, !dbg !12553
  %tobool = icmp ne i8* %3, null, !dbg !12553
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !12553

cond.true:                                        ; preds = %entry
  %4 = load i8*, i8** %end, align 8, !dbg !12554
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12555
  %sub.ptr.lhs.cast = ptrtoint i8* %4 to i64, !dbg !12556
  %sub.ptr.rhs.cast = ptrtoint i8* %5 to i64, !dbg !12556
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !12556
  br label %cond.end, !dbg !12553

cond.false:                                       ; preds = %entry
  %6 = load i64, i64* %count.addr, align 8, !dbg !12557
  br label %cond.end, !dbg !12553

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %sub.ptr.sub, %cond.true ], [ %6, %cond.false ], !dbg !12553
  store i64 %cond, i64* %len, align 8, !dbg !12552
  call void @llvm.dbg.declare(metadata i8** %driver_override, metadata !12558, metadata !DIExpression()), !dbg !12559
  call void @llvm.dbg.declare(metadata i8** %old, metadata !12560, metadata !DIExpression()), !dbg !12561
  %7 = load i64, i64* %len, align 8, !dbg !12562
  %cmp = icmp uge i64 %7, 4095, !dbg !12564
  br i1 %cmp, label %if.then, label %if.end, !dbg !12565

if.then:                                          ; preds = %cond.end
  store i64 -22, i64* %retval, align 8, !dbg !12566
  br label %return, !dbg !12566

if.end:                                           ; preds = %cond.end
  %8 = load i8*, i8** %buf.addr, align 8, !dbg !12567
  %9 = load i64, i64* %len, align 8, !dbg !12568
  %call2 = call i8* @kstrndup(i8* %8, i64 %9, i32 3264) #11, !dbg !12569
  store i8* %call2, i8** %driver_override, align 8, !dbg !12570
  %10 = load i8*, i8** %driver_override, align 8, !dbg !12571
  %tobool3 = icmp ne i8* %10, null, !dbg !12571
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !12573

if.then4:                                         ; preds = %if.end
  store i64 -12, i64* %retval, align 8, !dbg !12574
  br label %return, !dbg !12574

if.end5:                                          ; preds = %if.end
  %11 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12575
  call void @device_lock(%struct.device* %11) #11, !dbg !12576
  %12 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12577
  %driver_override6 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %12, i32 0, i32 12, !dbg !12578
  %13 = load i8*, i8** %driver_override6, align 8, !dbg !12578
  store i8* %13, i8** %old, align 8, !dbg !12579
  %14 = load i64, i64* %len, align 8, !dbg !12580
  %tobool7 = icmp ne i64 %14, 0, !dbg !12580
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !12582

if.then8:                                         ; preds = %if.end5
  %15 = load i8*, i8** %driver_override, align 8, !dbg !12583
  %16 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12585
  %driver_override9 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %16, i32 0, i32 12, !dbg !12586
  store i8* %15, i8** %driver_override9, align 8, !dbg !12587
  br label %if.end11, !dbg !12588

if.else:                                          ; preds = %if.end5
  %17 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12589
  %driver_override10 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %17, i32 0, i32 12, !dbg !12591
  store i8* null, i8** %driver_override10, align 8, !dbg !12592
  %18 = load i8*, i8** %driver_override, align 8, !dbg !12593
  call void @kfree(i8* %18) #11, !dbg !12594
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then8
  %19 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12595
  call void @device_unlock(%struct.device* %19) #11, !dbg !12596
  %20 = load i8*, i8** %old, align 8, !dbg !12597
  call void @kfree(i8* %20) #11, !dbg !12598
  %21 = load i64, i64* %count.addr, align 8, !dbg !12599
  store i64 %21, i64* %retval, align 8, !dbg !12600
  br label %return, !dbg !12600

return:                                           ; preds = %if.end11, %if.then4, %if.then
  %22 = load i64, i64* %retval, align 8, !dbg !12601
  ret i64 %22, !dbg !12601
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_lock(%struct.device* %dev) #0 !dbg !12602 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12603, metadata !DIExpression()), !dbg !12604
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12605
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !12606
  call void @mutex_lock(%struct.mutex* %mutex) #11, !dbg !12607
  ret void, !dbg !12608
}

; Function Attrs: noredzone
declare dso_local i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @device_unlock(%struct.device* %dev) #0 !dbg !12609 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12610, metadata !DIExpression()), !dbg !12611
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12612
  %mutex = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9, !dbg !12613
  call void @mutex_unlock(%struct.mutex* %mutex) #11, !dbg !12614
  ret void, !dbg !12615
}

; Function Attrs: noredzone
declare dso_local i8* @memchr(i8*, i32, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @kstrndup(i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_messages_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12616 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12617, metadata !DIExpression()), !dbg !12618
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12619, metadata !DIExpression()), !dbg !12618
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12620, metadata !DIExpression()), !dbg !12618
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12621, metadata !DIExpression()), !dbg !12618
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12618
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12618
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12618
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12618
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12618
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12618
  %call1 = call i64 @spi_statistics_messages_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12618
  ret i64 %call1, !dbg !12618
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_messages_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12622 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12625
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12627
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12628
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12635, metadata !DIExpression()), !dbg !12636
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12637, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12638, metadata !DIExpression()), !dbg !12636
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12639, metadata !DIExpression()), !dbg !12636
  br label %do.body, !dbg !12636

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12640

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12641, metadata !DIExpression()), !dbg !12643
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12644, metadata !DIExpression()), !dbg !12643
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12643
  %conv = zext i1 %cmp to i32, !dbg !12643
  store i32 1, i32* %tmp, align 4, !dbg !12643
  %0 = load i32, i32* %tmp, align 4, !dbg !12643
  br label %do.body2, !dbg !12645

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12646

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12647

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12649, metadata !DIExpression()), !dbg !12652
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12653, metadata !DIExpression()), !dbg !12652
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12652
  %conv8 = zext i1 %cmp7 to i32, !dbg !12652
  store i32 1, i32* %tmp9, align 4, !dbg !12652
  %1 = load i32, i32* %tmp9, align 4, !dbg !12652
  %call = call i64 @arch_local_irq_save() #11, !dbg !12654
  store i64 %call, i64* %flags, align 8, !dbg !12654
  br label %do.end, !dbg !12654

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12647

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12646

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12655, !srcloc !12656
  br label %do.body12, !dbg !12655

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12657
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12657
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12658
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12659
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12659
  br label %do.end14, !dbg !12657

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12655

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12646

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12645

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12640

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12636
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12636
  %messages = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 1, !dbg !12636
  %7 = load i64, i64* %messages, align 8, !dbg !12636
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !12636
  %conv20 = sext i32 %call19 to i64, !dbg !12636
  store i64 %conv20, i64* %len, align 8, !dbg !12636
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12636
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12636
  %9 = load i64, i64* %flags, align 8, !dbg !12636
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12660
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12660
  store i32 1, i32* %tmp.i, align 4, !dbg !12660
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12660
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12661
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12661
  store i32 1, i32* %tmp8.i, align 4, !dbg !12661
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12661
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12662
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12662
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12663, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12664
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12664
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12664
  %15 = load i64, i64* %len, align 8, !dbg !12636
  ret i64 %15, !dbg !12636
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfers_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12665 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12666, metadata !DIExpression()), !dbg !12667
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12668, metadata !DIExpression()), !dbg !12667
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12669, metadata !DIExpression()), !dbg !12667
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12670, metadata !DIExpression()), !dbg !12667
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12667
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12667
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12667
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12667
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12667
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12667
  %call1 = call i64 @spi_statistics_transfers_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12667
  ret i64 %call1, !dbg !12667
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfers_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12671 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12672
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12674
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12675
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12682, metadata !DIExpression()), !dbg !12683
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12684, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12685, metadata !DIExpression()), !dbg !12683
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12686, metadata !DIExpression()), !dbg !12683
  br label %do.body, !dbg !12683

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12687

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12688, metadata !DIExpression()), !dbg !12690
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12691, metadata !DIExpression()), !dbg !12690
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12690
  %conv = zext i1 %cmp to i32, !dbg !12690
  store i32 1, i32* %tmp, align 4, !dbg !12690
  %0 = load i32, i32* %tmp, align 4, !dbg !12690
  br label %do.body2, !dbg !12692

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12693

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12694

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12696, metadata !DIExpression()), !dbg !12699
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12700, metadata !DIExpression()), !dbg !12699
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12699
  %conv8 = zext i1 %cmp7 to i32, !dbg !12699
  store i32 1, i32* %tmp9, align 4, !dbg !12699
  %1 = load i32, i32* %tmp9, align 4, !dbg !12699
  %call = call i64 @arch_local_irq_save() #11, !dbg !12701
  store i64 %call, i64* %flags, align 8, !dbg !12701
  br label %do.end, !dbg !12701

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12694

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12693

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12702, !srcloc !12703
  br label %do.body12, !dbg !12702

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12704
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12704
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12705
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12706
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12706
  br label %do.end14, !dbg !12704

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12702

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12693

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12692

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12687

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12683
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12683
  %transfers = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 2, !dbg !12683
  %7 = load i64, i64* %transfers, align 8, !dbg !12683
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !12683
  %conv20 = sext i32 %call19 to i64, !dbg !12683
  store i64 %conv20, i64* %len, align 8, !dbg !12683
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12683
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12683
  %9 = load i64, i64* %flags, align 8, !dbg !12683
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12707
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12707
  store i32 1, i32* %tmp.i, align 4, !dbg !12707
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12707
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12708
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12708
  store i32 1, i32* %tmp8.i, align 4, !dbg !12708
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12708
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12709
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12709
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12710, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12711
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12711
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12711
  %15 = load i64, i64* %len, align 8, !dbg !12683
  ret i64 %15, !dbg !12683
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_errors_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12712 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12713, metadata !DIExpression()), !dbg !12714
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12715, metadata !DIExpression()), !dbg !12714
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12716, metadata !DIExpression()), !dbg !12714
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12717, metadata !DIExpression()), !dbg !12714
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12714
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12714
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12714
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12714
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12714
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12714
  %call1 = call i64 @spi_statistics_errors_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12714
  ret i64 %call1, !dbg !12714
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_errors_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12718 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12719
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12721
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12722
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12729, metadata !DIExpression()), !dbg !12730
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12731, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12732, metadata !DIExpression()), !dbg !12730
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12733, metadata !DIExpression()), !dbg !12730
  br label %do.body, !dbg !12730

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12734

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12735, metadata !DIExpression()), !dbg !12737
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12738, metadata !DIExpression()), !dbg !12737
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12737
  %conv = zext i1 %cmp to i32, !dbg !12737
  store i32 1, i32* %tmp, align 4, !dbg !12737
  %0 = load i32, i32* %tmp, align 4, !dbg !12737
  br label %do.body2, !dbg !12739

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12740

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12741

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12743, metadata !DIExpression()), !dbg !12746
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12747, metadata !DIExpression()), !dbg !12746
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12746
  %conv8 = zext i1 %cmp7 to i32, !dbg !12746
  store i32 1, i32* %tmp9, align 4, !dbg !12746
  %1 = load i32, i32* %tmp9, align 4, !dbg !12746
  %call = call i64 @arch_local_irq_save() #11, !dbg !12748
  store i64 %call, i64* %flags, align 8, !dbg !12748
  br label %do.end, !dbg !12748

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12741

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12740

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12749, !srcloc !12750
  br label %do.body12, !dbg !12749

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12751
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12751
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12752
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12753
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12753
  br label %do.end14, !dbg !12751

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12749

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12740

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12739

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12734

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12730
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12730
  %errors = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 3, !dbg !12730
  %7 = load i64, i64* %errors, align 8, !dbg !12730
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !12730
  %conv20 = sext i32 %call19 to i64, !dbg !12730
  store i64 %conv20, i64* %len, align 8, !dbg !12730
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12730
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12730
  %9 = load i64, i64* %flags, align 8, !dbg !12730
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12754
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12754
  store i32 1, i32* %tmp.i, align 4, !dbg !12754
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12754
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12755
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12755
  store i32 1, i32* %tmp8.i, align 4, !dbg !12755
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12755
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12756
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12756
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12757, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12758
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12758
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12758
  %15 = load i64, i64* %len, align 8, !dbg !12730
  ret i64 %15, !dbg !12730
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_timedout_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12759 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12760, metadata !DIExpression()), !dbg !12761
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12762, metadata !DIExpression()), !dbg !12761
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12763, metadata !DIExpression()), !dbg !12761
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12764, metadata !DIExpression()), !dbg !12761
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12761
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12761
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12761
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12761
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12761
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12761
  %call1 = call i64 @spi_statistics_timedout_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12761
  ret i64 %call1, !dbg !12761
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_timedout_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12765 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12766
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12768
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12769
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12776, metadata !DIExpression()), !dbg !12777
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12778, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12779, metadata !DIExpression()), !dbg !12777
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12780, metadata !DIExpression()), !dbg !12777
  br label %do.body, !dbg !12777

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12781

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12782, metadata !DIExpression()), !dbg !12784
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12785, metadata !DIExpression()), !dbg !12784
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12784
  %conv = zext i1 %cmp to i32, !dbg !12784
  store i32 1, i32* %tmp, align 4, !dbg !12784
  %0 = load i32, i32* %tmp, align 4, !dbg !12784
  br label %do.body2, !dbg !12786

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12787

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12788

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12790, metadata !DIExpression()), !dbg !12793
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12794, metadata !DIExpression()), !dbg !12793
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12793
  %conv8 = zext i1 %cmp7 to i32, !dbg !12793
  store i32 1, i32* %tmp9, align 4, !dbg !12793
  %1 = load i32, i32* %tmp9, align 4, !dbg !12793
  %call = call i64 @arch_local_irq_save() #11, !dbg !12795
  store i64 %call, i64* %flags, align 8, !dbg !12795
  br label %do.end, !dbg !12795

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12788

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12787

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12796, !srcloc !12797
  br label %do.body12, !dbg !12796

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12798
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12798
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12799
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12800
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12800
  br label %do.end14, !dbg !12798

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12796

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12787

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12786

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12781

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12777
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12777
  %timedout = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 4, !dbg !12777
  %7 = load i64, i64* %timedout, align 8, !dbg !12777
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !12777
  %conv20 = sext i32 %call19 to i64, !dbg !12777
  store i64 %conv20, i64* %len, align 8, !dbg !12777
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12777
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12777
  %9 = load i64, i64* %flags, align 8, !dbg !12777
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12801
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12801
  store i32 1, i32* %tmp.i, align 4, !dbg !12801
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12801
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12802
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12802
  store i32 1, i32* %tmp8.i, align 4, !dbg !12802
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12802
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12803
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12803
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12804, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12805
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12805
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12805
  %15 = load i64, i64* %len, align 8, !dbg !12777
  ret i64 %15, !dbg !12777
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_spi_sync_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12806 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12807, metadata !DIExpression()), !dbg !12808
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12809, metadata !DIExpression()), !dbg !12808
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12810, metadata !DIExpression()), !dbg !12808
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12811, metadata !DIExpression()), !dbg !12808
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12808
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12808
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12808
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12808
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12808
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12808
  %call1 = call i64 @spi_statistics_spi_sync_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12808
  ret i64 %call1, !dbg !12808
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_spi_sync_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12812 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12813
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12815
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12816
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12823, metadata !DIExpression()), !dbg !12824
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12825, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12826, metadata !DIExpression()), !dbg !12824
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12827, metadata !DIExpression()), !dbg !12824
  br label %do.body, !dbg !12824

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12828

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12829, metadata !DIExpression()), !dbg !12831
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12832, metadata !DIExpression()), !dbg !12831
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12831
  %conv = zext i1 %cmp to i32, !dbg !12831
  store i32 1, i32* %tmp, align 4, !dbg !12831
  %0 = load i32, i32* %tmp, align 4, !dbg !12831
  br label %do.body2, !dbg !12833

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12834

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12835

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12837, metadata !DIExpression()), !dbg !12840
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12841, metadata !DIExpression()), !dbg !12840
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12840
  %conv8 = zext i1 %cmp7 to i32, !dbg !12840
  store i32 1, i32* %tmp9, align 4, !dbg !12840
  %1 = load i32, i32* %tmp9, align 4, !dbg !12840
  %call = call i64 @arch_local_irq_save() #11, !dbg !12842
  store i64 %call, i64* %flags, align 8, !dbg !12842
  br label %do.end, !dbg !12842

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12835

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12834

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12843, !srcloc !12844
  br label %do.body12, !dbg !12843

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12845
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12845
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12846
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12847
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12847
  br label %do.end14, !dbg !12845

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12843

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12834

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12833

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12828

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12824
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12824
  %spi_sync = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 5, !dbg !12824
  %7 = load i64, i64* %spi_sync, align 8, !dbg !12824
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !12824
  %conv20 = sext i32 %call19 to i64, !dbg !12824
  store i64 %conv20, i64* %len, align 8, !dbg !12824
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12824
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12824
  %9 = load i64, i64* %flags, align 8, !dbg !12824
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12848
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12848
  store i32 1, i32* %tmp.i, align 4, !dbg !12848
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12848
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12849
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12849
  store i32 1, i32* %tmp8.i, align 4, !dbg !12849
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12849
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12850
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12850
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12851, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12852
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12852
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12852
  %15 = load i64, i64* %len, align 8, !dbg !12824
  ret i64 %15, !dbg !12824
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_spi_sync_immediate_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12853 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12854, metadata !DIExpression()), !dbg !12855
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12856, metadata !DIExpression()), !dbg !12855
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12857, metadata !DIExpression()), !dbg !12855
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12858, metadata !DIExpression()), !dbg !12855
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12855
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12855
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12855
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12855
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12855
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12855
  %call1 = call i64 @spi_statistics_spi_sync_immediate_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12855
  ret i64 %call1, !dbg !12855
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_spi_sync_immediate_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12859 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12860
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12862
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12863
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12870, metadata !DIExpression()), !dbg !12871
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12872, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12873, metadata !DIExpression()), !dbg !12871
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12874, metadata !DIExpression()), !dbg !12871
  br label %do.body, !dbg !12871

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12875

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12876, metadata !DIExpression()), !dbg !12878
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12879, metadata !DIExpression()), !dbg !12878
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12878
  %conv = zext i1 %cmp to i32, !dbg !12878
  store i32 1, i32* %tmp, align 4, !dbg !12878
  %0 = load i32, i32* %tmp, align 4, !dbg !12878
  br label %do.body2, !dbg !12880

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12881

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12882

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12884, metadata !DIExpression()), !dbg !12887
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12888, metadata !DIExpression()), !dbg !12887
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12887
  %conv8 = zext i1 %cmp7 to i32, !dbg !12887
  store i32 1, i32* %tmp9, align 4, !dbg !12887
  %1 = load i32, i32* %tmp9, align 4, !dbg !12887
  %call = call i64 @arch_local_irq_save() #11, !dbg !12889
  store i64 %call, i64* %flags, align 8, !dbg !12889
  br label %do.end, !dbg !12889

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12882

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12881

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12890, !srcloc !12891
  br label %do.body12, !dbg !12890

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12892
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12892
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12893
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12894
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12894
  br label %do.end14, !dbg !12892

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12890

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12881

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12880

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12875

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12871
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12871
  %spi_sync_immediate = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 6, !dbg !12871
  %7 = load i64, i64* %spi_sync_immediate, align 8, !dbg !12871
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !12871
  %conv20 = sext i32 %call19 to i64, !dbg !12871
  store i64 %conv20, i64* %len, align 8, !dbg !12871
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12871
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12871
  %9 = load i64, i64* %flags, align 8, !dbg !12871
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12895
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12895
  store i32 1, i32* %tmp.i, align 4, !dbg !12895
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12895
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12896
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12896
  store i32 1, i32* %tmp8.i, align 4, !dbg !12896
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12896
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12897
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12897
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12898, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12899
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12899
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12899
  %15 = load i64, i64* %len, align 8, !dbg !12871
  ret i64 %15, !dbg !12871
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_spi_async_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12900 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12901, metadata !DIExpression()), !dbg !12902
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12903, metadata !DIExpression()), !dbg !12902
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12904, metadata !DIExpression()), !dbg !12902
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12905, metadata !DIExpression()), !dbg !12902
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12902
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12902
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12902
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12902
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12902
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12902
  %call1 = call i64 @spi_statistics_spi_async_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12902
  ret i64 %call1, !dbg !12902
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_spi_async_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12906 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12907
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12909
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12910
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12917, metadata !DIExpression()), !dbg !12918
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12919, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12920, metadata !DIExpression()), !dbg !12918
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12921, metadata !DIExpression()), !dbg !12918
  br label %do.body, !dbg !12918

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12922

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12923, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12926, metadata !DIExpression()), !dbg !12925
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12925
  %conv = zext i1 %cmp to i32, !dbg !12925
  store i32 1, i32* %tmp, align 4, !dbg !12925
  %0 = load i32, i32* %tmp, align 4, !dbg !12925
  br label %do.body2, !dbg !12927

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12928

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12929

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12931, metadata !DIExpression()), !dbg !12934
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12935, metadata !DIExpression()), !dbg !12934
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12934
  %conv8 = zext i1 %cmp7 to i32, !dbg !12934
  store i32 1, i32* %tmp9, align 4, !dbg !12934
  %1 = load i32, i32* %tmp9, align 4, !dbg !12934
  %call = call i64 @arch_local_irq_save() #11, !dbg !12936
  store i64 %call, i64* %flags, align 8, !dbg !12936
  br label %do.end, !dbg !12936

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12929

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12928

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12937, !srcloc !12938
  br label %do.body12, !dbg !12937

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12939
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12939
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12940
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12941
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12941
  br label %do.end14, !dbg !12939

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12937

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12928

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12927

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12922

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12918
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12918
  %spi_async = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 7, !dbg !12918
  %7 = load i64, i64* %spi_async, align 8, !dbg !12918
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !12918
  %conv20 = sext i32 %call19 to i64, !dbg !12918
  store i64 %conv20, i64* %len, align 8, !dbg !12918
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12918
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12918
  %9 = load i64, i64* %flags, align 8, !dbg !12918
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12942
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12942
  store i32 1, i32* %tmp.i, align 4, !dbg !12942
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12942
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12943
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12943
  store i32 1, i32* %tmp8.i, align 4, !dbg !12943
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12943
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12944
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12944
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12945, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12946
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12946
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12946
  %15 = load i64, i64* %len, align 8, !dbg !12918
  ret i64 %15, !dbg !12918
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_bytes_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12947 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12948, metadata !DIExpression()), !dbg !12949
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12950, metadata !DIExpression()), !dbg !12949
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12951, metadata !DIExpression()), !dbg !12949
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12952, metadata !DIExpression()), !dbg !12949
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12949
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12949
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12949
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12949
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12949
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12949
  %call1 = call i64 @spi_statistics_bytes_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12949
  ret i64 %call1, !dbg !12949
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_bytes_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !12953 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !12954
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !12956
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !12957
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !12964, metadata !DIExpression()), !dbg !12965
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12966, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !12967, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.declare(metadata i64* %len, metadata !12968, metadata !DIExpression()), !dbg !12965
  br label %do.body, !dbg !12965

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !12969

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !12970, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !12973, metadata !DIExpression()), !dbg !12972
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !12972
  %conv = zext i1 %cmp to i32, !dbg !12972
  store i32 1, i32* %tmp, align 4, !dbg !12972
  %0 = load i32, i32* %tmp, align 4, !dbg !12972
  br label %do.body2, !dbg !12974

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !12975

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !12976

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !12978, metadata !DIExpression()), !dbg !12981
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !12982, metadata !DIExpression()), !dbg !12981
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !12981
  %conv8 = zext i1 %cmp7 to i32, !dbg !12981
  store i32 1, i32* %tmp9, align 4, !dbg !12981
  %1 = load i32, i32* %tmp9, align 4, !dbg !12981
  %call = call i64 @arch_local_irq_save() #11, !dbg !12983
  store i64 %call, i64* %flags, align 8, !dbg !12983
  br label %do.end, !dbg !12983

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !12976

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !12975

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12984, !srcloc !12985
  br label %do.body12, !dbg !12984

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12986
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !12986
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !12987
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !12988
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !12988
  br label %do.end14, !dbg !12986

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !12984

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !12975

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !12974

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !12969

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !12965
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12965
  %bytes = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 8, !dbg !12965
  %7 = load i64, i64* %bytes, align 8, !dbg !12965
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %7) #11, !dbg !12965
  %conv20 = sext i32 %call19 to i64, !dbg !12965
  store i64 %conv20, i64* %len, align 8, !dbg !12965
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !12965
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !12965
  %9 = load i64, i64* %flags, align 8, !dbg !12965
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !12989
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !12989
  store i32 1, i32* %tmp.i, align 4, !dbg !12989
  %10 = load i32, i32* %tmp.i, align 4, !dbg !12989
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !12990
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !12990
  store i32 1, i32* %tmp8.i, align 4, !dbg !12990
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !12990
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !12991
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !12991
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !12992, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !12993
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !12993
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !12993
  %15 = load i64, i64* %len, align 8, !dbg !12965
  ret i64 %15, !dbg !12965
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_bytes_rx_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !12994 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !12995, metadata !DIExpression()), !dbg !12996
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !12997, metadata !DIExpression()), !dbg !12996
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !12998, metadata !DIExpression()), !dbg !12996
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !12999, metadata !DIExpression()), !dbg !12996
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !12996
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !12996
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !12996
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !12996
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !12996
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !12996
  %call1 = call i64 @spi_statistics_bytes_rx_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !12996
  ret i64 %call1, !dbg !12996
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_bytes_rx_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13000 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13001
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13003
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13004
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13011, metadata !DIExpression()), !dbg !13012
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13013, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13014, metadata !DIExpression()), !dbg !13012
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13015, metadata !DIExpression()), !dbg !13012
  br label %do.body, !dbg !13012

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13016

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13017, metadata !DIExpression()), !dbg !13019
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13020, metadata !DIExpression()), !dbg !13019
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13019
  %conv = zext i1 %cmp to i32, !dbg !13019
  store i32 1, i32* %tmp, align 4, !dbg !13019
  %0 = load i32, i32* %tmp, align 4, !dbg !13019
  br label %do.body2, !dbg !13021

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13022

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13023

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13025, metadata !DIExpression()), !dbg !13028
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13029, metadata !DIExpression()), !dbg !13028
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13028
  %conv8 = zext i1 %cmp7 to i32, !dbg !13028
  store i32 1, i32* %tmp9, align 4, !dbg !13028
  %1 = load i32, i32* %tmp9, align 4, !dbg !13028
  %call = call i64 @arch_local_irq_save() #11, !dbg !13030
  store i64 %call, i64* %flags, align 8, !dbg !13030
  br label %do.end, !dbg !13030

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13023

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13022

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13031, !srcloc !13032
  br label %do.body12, !dbg !13031

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13033
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13033
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13034
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13035
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13035
  br label %do.end14, !dbg !13033

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13031

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13022

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13021

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13016

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13012
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13012
  %bytes_rx = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 9, !dbg !13012
  %7 = load i64, i64* %bytes_rx, align 8, !dbg !13012
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %7) #11, !dbg !13012
  %conv20 = sext i32 %call19 to i64, !dbg !13012
  store i64 %conv20, i64* %len, align 8, !dbg !13012
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13012
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13012
  %9 = load i64, i64* %flags, align 8, !dbg !13012
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13036
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13036
  store i32 1, i32* %tmp.i, align 4, !dbg !13036
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13036
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13037
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13037
  store i32 1, i32* %tmp8.i, align 4, !dbg !13037
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13037
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13038
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13038
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13039, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13040
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13040
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13040
  %15 = load i64, i64* %len, align 8, !dbg !13012
  ret i64 %15, !dbg !13012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_bytes_tx_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13041 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13042, metadata !DIExpression()), !dbg !13043
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13044, metadata !DIExpression()), !dbg !13043
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13045, metadata !DIExpression()), !dbg !13043
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13046, metadata !DIExpression()), !dbg !13043
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13043
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13043
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13043
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13043
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13043
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13043
  %call1 = call i64 @spi_statistics_bytes_tx_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13043
  ret i64 %call1, !dbg !13043
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_bytes_tx_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13047 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13048
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13050
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13051
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13058, metadata !DIExpression()), !dbg !13059
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13060, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13061, metadata !DIExpression()), !dbg !13059
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13062, metadata !DIExpression()), !dbg !13059
  br label %do.body, !dbg !13059

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13063

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13064, metadata !DIExpression()), !dbg !13066
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13067, metadata !DIExpression()), !dbg !13066
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13066
  %conv = zext i1 %cmp to i32, !dbg !13066
  store i32 1, i32* %tmp, align 4, !dbg !13066
  %0 = load i32, i32* %tmp, align 4, !dbg !13066
  br label %do.body2, !dbg !13068

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13069

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13070

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13072, metadata !DIExpression()), !dbg !13075
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13076, metadata !DIExpression()), !dbg !13075
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13075
  %conv8 = zext i1 %cmp7 to i32, !dbg !13075
  store i32 1, i32* %tmp9, align 4, !dbg !13075
  %1 = load i32, i32* %tmp9, align 4, !dbg !13075
  %call = call i64 @arch_local_irq_save() #11, !dbg !13077
  store i64 %call, i64* %flags, align 8, !dbg !13077
  br label %do.end, !dbg !13077

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13070

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13069

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13078, !srcloc !13079
  br label %do.body12, !dbg !13078

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13080
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13080
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13081
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13082
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13082
  br label %do.end14, !dbg !13080

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13078

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13069

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13068

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13063

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13059
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13059
  %bytes_tx = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 10, !dbg !13059
  %7 = load i64, i64* %bytes_tx, align 8, !dbg !13059
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i64 0, i64 0), i64 %7) #11, !dbg !13059
  %conv20 = sext i32 %call19 to i64, !dbg !13059
  store i64 %conv20, i64* %len, align 8, !dbg !13059
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13059
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13059
  %9 = load i64, i64* %flags, align 8, !dbg !13059
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13083
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13083
  store i32 1, i32* %tmp.i, align 4, !dbg !13083
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13083
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13084
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13084
  store i32 1, i32* %tmp8.i, align 4, !dbg !13084
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13084
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13085
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13085
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13086, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13087
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13087
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13087
  %15 = load i64, i64* %len, align 8, !dbg !13059
  ret i64 %15, !dbg !13059
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo0_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13088 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13089, metadata !DIExpression()), !dbg !13090
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13091, metadata !DIExpression()), !dbg !13090
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13092, metadata !DIExpression()), !dbg !13090
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13093, metadata !DIExpression()), !dbg !13090
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13090
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13090
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13090
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13090
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13090
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13090
  %call1 = call i64 @spi_statistics_transfer_bytes_histo0_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13090
  ret i64 %call1, !dbg !13090
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo0_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13094 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13095
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13097
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13098
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13105, metadata !DIExpression()), !dbg !13106
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13107, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13108, metadata !DIExpression()), !dbg !13106
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13109, metadata !DIExpression()), !dbg !13106
  br label %do.body, !dbg !13106

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13110

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13111, metadata !DIExpression()), !dbg !13113
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13114, metadata !DIExpression()), !dbg !13113
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13113
  %conv = zext i1 %cmp to i32, !dbg !13113
  store i32 1, i32* %tmp, align 4, !dbg !13113
  %0 = load i32, i32* %tmp, align 4, !dbg !13113
  br label %do.body2, !dbg !13115

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13116

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13117

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13119, metadata !DIExpression()), !dbg !13122
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13123, metadata !DIExpression()), !dbg !13122
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13122
  %conv8 = zext i1 %cmp7 to i32, !dbg !13122
  store i32 1, i32* %tmp9, align 4, !dbg !13122
  %1 = load i32, i32* %tmp9, align 4, !dbg !13122
  %call = call i64 @arch_local_irq_save() #11, !dbg !13124
  store i64 %call, i64* %flags, align 8, !dbg !13124
  br label %do.end, !dbg !13124

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13117

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13116

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13125, !srcloc !13126
  br label %do.body12, !dbg !13125

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13127
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13127
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13128
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13129
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13129
  br label %do.end14, !dbg !13127

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13125

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13116

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13115

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13110

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13106
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13106
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13106
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 0, !dbg !13106
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13106
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13106
  %conv20 = sext i32 %call19 to i64, !dbg !13106
  store i64 %conv20, i64* %len, align 8, !dbg !13106
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13106
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13106
  %9 = load i64, i64* %flags, align 8, !dbg !13106
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13130
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13130
  store i32 1, i32* %tmp.i, align 4, !dbg !13130
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13130
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13131
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13131
  store i32 1, i32* %tmp8.i, align 4, !dbg !13131
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13131
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13132
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13132
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13133, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13134
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13134
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13134
  %15 = load i64, i64* %len, align 8, !dbg !13106
  ret i64 %15, !dbg !13106
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo1_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13135 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13136, metadata !DIExpression()), !dbg !13137
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13138, metadata !DIExpression()), !dbg !13137
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13139, metadata !DIExpression()), !dbg !13137
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13140, metadata !DIExpression()), !dbg !13137
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13137
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13137
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13137
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13137
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13137
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13137
  %call1 = call i64 @spi_statistics_transfer_bytes_histo1_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13137
  ret i64 %call1, !dbg !13137
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo1_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13141 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13142
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13144
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13145
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13152, metadata !DIExpression()), !dbg !13153
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13154, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13155, metadata !DIExpression()), !dbg !13153
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13156, metadata !DIExpression()), !dbg !13153
  br label %do.body, !dbg !13153

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13157

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13158, metadata !DIExpression()), !dbg !13160
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13161, metadata !DIExpression()), !dbg !13160
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13160
  %conv = zext i1 %cmp to i32, !dbg !13160
  store i32 1, i32* %tmp, align 4, !dbg !13160
  %0 = load i32, i32* %tmp, align 4, !dbg !13160
  br label %do.body2, !dbg !13162

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13163

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13164

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13166, metadata !DIExpression()), !dbg !13169
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13170, metadata !DIExpression()), !dbg !13169
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13169
  %conv8 = zext i1 %cmp7 to i32, !dbg !13169
  store i32 1, i32* %tmp9, align 4, !dbg !13169
  %1 = load i32, i32* %tmp9, align 4, !dbg !13169
  %call = call i64 @arch_local_irq_save() #11, !dbg !13171
  store i64 %call, i64* %flags, align 8, !dbg !13171
  br label %do.end, !dbg !13171

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13164

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13163

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13172, !srcloc !13173
  br label %do.body12, !dbg !13172

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13174
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13174
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13175
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13176
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13176
  br label %do.end14, !dbg !13174

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13172

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13163

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13162

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13157

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13153
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13153
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13153
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 1, !dbg !13153
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13153
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13153
  %conv20 = sext i32 %call19 to i64, !dbg !13153
  store i64 %conv20, i64* %len, align 8, !dbg !13153
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13153
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13153
  %9 = load i64, i64* %flags, align 8, !dbg !13153
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13177
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13177
  store i32 1, i32* %tmp.i, align 4, !dbg !13177
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13177
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13178
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13178
  store i32 1, i32* %tmp8.i, align 4, !dbg !13178
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13178
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13179
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13179
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13180, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13181
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13181
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13181
  %15 = load i64, i64* %len, align 8, !dbg !13153
  ret i64 %15, !dbg !13153
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo2_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13182 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13183, metadata !DIExpression()), !dbg !13184
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13185, metadata !DIExpression()), !dbg !13184
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13186, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13187, metadata !DIExpression()), !dbg !13184
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13184
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13184
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13184
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13184
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13184
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13184
  %call1 = call i64 @spi_statistics_transfer_bytes_histo2_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13184
  ret i64 %call1, !dbg !13184
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo2_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13188 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13189
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13191
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13192
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13199, metadata !DIExpression()), !dbg !13200
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13201, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13202, metadata !DIExpression()), !dbg !13200
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13203, metadata !DIExpression()), !dbg !13200
  br label %do.body, !dbg !13200

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13204

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13205, metadata !DIExpression()), !dbg !13207
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13208, metadata !DIExpression()), !dbg !13207
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13207
  %conv = zext i1 %cmp to i32, !dbg !13207
  store i32 1, i32* %tmp, align 4, !dbg !13207
  %0 = load i32, i32* %tmp, align 4, !dbg !13207
  br label %do.body2, !dbg !13209

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13210

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13211

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13213, metadata !DIExpression()), !dbg !13216
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13217, metadata !DIExpression()), !dbg !13216
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13216
  %conv8 = zext i1 %cmp7 to i32, !dbg !13216
  store i32 1, i32* %tmp9, align 4, !dbg !13216
  %1 = load i32, i32* %tmp9, align 4, !dbg !13216
  %call = call i64 @arch_local_irq_save() #11, !dbg !13218
  store i64 %call, i64* %flags, align 8, !dbg !13218
  br label %do.end, !dbg !13218

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13211

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13210

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13219, !srcloc !13220
  br label %do.body12, !dbg !13219

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13221
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13221
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13222
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13223
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13223
  br label %do.end14, !dbg !13221

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13219

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13210

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13209

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13204

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13200
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13200
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13200
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 2, !dbg !13200
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13200
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13200
  %conv20 = sext i32 %call19 to i64, !dbg !13200
  store i64 %conv20, i64* %len, align 8, !dbg !13200
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13200
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13200
  %9 = load i64, i64* %flags, align 8, !dbg !13200
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13224
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13224
  store i32 1, i32* %tmp.i, align 4, !dbg !13224
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13224
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13225
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13225
  store i32 1, i32* %tmp8.i, align 4, !dbg !13225
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13225
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13226
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13226
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13227, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13228
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13228
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13228
  %15 = load i64, i64* %len, align 8, !dbg !13200
  ret i64 %15, !dbg !13200
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo3_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13229 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13230, metadata !DIExpression()), !dbg !13231
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13232, metadata !DIExpression()), !dbg !13231
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13233, metadata !DIExpression()), !dbg !13231
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13234, metadata !DIExpression()), !dbg !13231
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13231
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13231
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13231
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13231
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13231
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13231
  %call1 = call i64 @spi_statistics_transfer_bytes_histo3_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13231
  ret i64 %call1, !dbg !13231
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo3_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13235 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13236
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13238
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13239
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13246, metadata !DIExpression()), !dbg !13247
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13248, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13249, metadata !DIExpression()), !dbg !13247
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13250, metadata !DIExpression()), !dbg !13247
  br label %do.body, !dbg !13247

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13251

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13252, metadata !DIExpression()), !dbg !13254
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13255, metadata !DIExpression()), !dbg !13254
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13254
  %conv = zext i1 %cmp to i32, !dbg !13254
  store i32 1, i32* %tmp, align 4, !dbg !13254
  %0 = load i32, i32* %tmp, align 4, !dbg !13254
  br label %do.body2, !dbg !13256

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13257

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13258

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13260, metadata !DIExpression()), !dbg !13263
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13264, metadata !DIExpression()), !dbg !13263
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13263
  %conv8 = zext i1 %cmp7 to i32, !dbg !13263
  store i32 1, i32* %tmp9, align 4, !dbg !13263
  %1 = load i32, i32* %tmp9, align 4, !dbg !13263
  %call = call i64 @arch_local_irq_save() #11, !dbg !13265
  store i64 %call, i64* %flags, align 8, !dbg !13265
  br label %do.end, !dbg !13265

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13258

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13257

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13266, !srcloc !13267
  br label %do.body12, !dbg !13266

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13268
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13268
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13269
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13270
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13270
  br label %do.end14, !dbg !13268

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13266

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13257

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13256

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13251

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13247
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13247
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13247
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 3, !dbg !13247
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13247
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13247
  %conv20 = sext i32 %call19 to i64, !dbg !13247
  store i64 %conv20, i64* %len, align 8, !dbg !13247
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13247
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13247
  %9 = load i64, i64* %flags, align 8, !dbg !13247
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13271
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13271
  store i32 1, i32* %tmp.i, align 4, !dbg !13271
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13271
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13272
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13272
  store i32 1, i32* %tmp8.i, align 4, !dbg !13272
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13272
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13273
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13273
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13274, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13275
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13275
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13275
  %15 = load i64, i64* %len, align 8, !dbg !13247
  ret i64 %15, !dbg !13247
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo4_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13276 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13277, metadata !DIExpression()), !dbg !13278
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13279, metadata !DIExpression()), !dbg !13278
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13280, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13281, metadata !DIExpression()), !dbg !13278
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13278
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13278
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13278
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13278
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13278
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13278
  %call1 = call i64 @spi_statistics_transfer_bytes_histo4_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13278
  ret i64 %call1, !dbg !13278
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo4_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13282 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13283
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13285
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13286
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13293, metadata !DIExpression()), !dbg !13294
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13295, metadata !DIExpression()), !dbg !13294
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13296, metadata !DIExpression()), !dbg !13294
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13297, metadata !DIExpression()), !dbg !13294
  br label %do.body, !dbg !13294

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13298

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13299, metadata !DIExpression()), !dbg !13301
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13302, metadata !DIExpression()), !dbg !13301
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13301
  %conv = zext i1 %cmp to i32, !dbg !13301
  store i32 1, i32* %tmp, align 4, !dbg !13301
  %0 = load i32, i32* %tmp, align 4, !dbg !13301
  br label %do.body2, !dbg !13303

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13304

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13305

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13307, metadata !DIExpression()), !dbg !13310
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13311, metadata !DIExpression()), !dbg !13310
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13310
  %conv8 = zext i1 %cmp7 to i32, !dbg !13310
  store i32 1, i32* %tmp9, align 4, !dbg !13310
  %1 = load i32, i32* %tmp9, align 4, !dbg !13310
  %call = call i64 @arch_local_irq_save() #11, !dbg !13312
  store i64 %call, i64* %flags, align 8, !dbg !13312
  br label %do.end, !dbg !13312

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13305

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13304

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13313, !srcloc !13314
  br label %do.body12, !dbg !13313

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13315
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13315
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13316
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13317
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13317
  br label %do.end14, !dbg !13315

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13313

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13304

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13303

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13298

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13294
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13294
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13294
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 4, !dbg !13294
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13294
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13294
  %conv20 = sext i32 %call19 to i64, !dbg !13294
  store i64 %conv20, i64* %len, align 8, !dbg !13294
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13294
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13294
  %9 = load i64, i64* %flags, align 8, !dbg !13294
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13318
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13318
  store i32 1, i32* %tmp.i, align 4, !dbg !13318
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13318
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13319
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13319
  store i32 1, i32* %tmp8.i, align 4, !dbg !13319
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13319
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13320
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13320
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13321, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13322
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13322
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13322
  %15 = load i64, i64* %len, align 8, !dbg !13294
  ret i64 %15, !dbg !13294
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo5_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13323 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13324, metadata !DIExpression()), !dbg !13325
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13326, metadata !DIExpression()), !dbg !13325
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13327, metadata !DIExpression()), !dbg !13325
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13328, metadata !DIExpression()), !dbg !13325
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13325
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13325
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13325
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13325
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13325
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13325
  %call1 = call i64 @spi_statistics_transfer_bytes_histo5_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13325
  ret i64 %call1, !dbg !13325
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo5_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13329 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13330
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13332
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13333
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13340, metadata !DIExpression()), !dbg !13341
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13342, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13343, metadata !DIExpression()), !dbg !13341
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13344, metadata !DIExpression()), !dbg !13341
  br label %do.body, !dbg !13341

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13345

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13346, metadata !DIExpression()), !dbg !13348
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13349, metadata !DIExpression()), !dbg !13348
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13348
  %conv = zext i1 %cmp to i32, !dbg !13348
  store i32 1, i32* %tmp, align 4, !dbg !13348
  %0 = load i32, i32* %tmp, align 4, !dbg !13348
  br label %do.body2, !dbg !13350

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13351

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13352

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13354, metadata !DIExpression()), !dbg !13357
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13358, metadata !DIExpression()), !dbg !13357
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13357
  %conv8 = zext i1 %cmp7 to i32, !dbg !13357
  store i32 1, i32* %tmp9, align 4, !dbg !13357
  %1 = load i32, i32* %tmp9, align 4, !dbg !13357
  %call = call i64 @arch_local_irq_save() #11, !dbg !13359
  store i64 %call, i64* %flags, align 8, !dbg !13359
  br label %do.end, !dbg !13359

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13352

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13351

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13360, !srcloc !13361
  br label %do.body12, !dbg !13360

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13362
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13362
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13363
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13364
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13364
  br label %do.end14, !dbg !13362

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13360

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13351

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13350

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13345

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13341
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13341
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13341
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 5, !dbg !13341
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13341
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13341
  %conv20 = sext i32 %call19 to i64, !dbg !13341
  store i64 %conv20, i64* %len, align 8, !dbg !13341
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13341
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13341
  %9 = load i64, i64* %flags, align 8, !dbg !13341
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13365
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13365
  store i32 1, i32* %tmp.i, align 4, !dbg !13365
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13365
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13366
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13366
  store i32 1, i32* %tmp8.i, align 4, !dbg !13366
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13366
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13367
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13367
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13368, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13369
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13369
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13369
  %15 = load i64, i64* %len, align 8, !dbg !13341
  ret i64 %15, !dbg !13341
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo6_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13370 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13371, metadata !DIExpression()), !dbg !13372
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13373, metadata !DIExpression()), !dbg !13372
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13374, metadata !DIExpression()), !dbg !13372
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13375, metadata !DIExpression()), !dbg !13372
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13372
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13372
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13372
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13372
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13372
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13372
  %call1 = call i64 @spi_statistics_transfer_bytes_histo6_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13372
  ret i64 %call1, !dbg !13372
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo6_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13376 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13377
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13379
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13380
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13387, metadata !DIExpression()), !dbg !13388
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13389, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13390, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13391, metadata !DIExpression()), !dbg !13388
  br label %do.body, !dbg !13388

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13392

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13393, metadata !DIExpression()), !dbg !13395
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13396, metadata !DIExpression()), !dbg !13395
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13395
  %conv = zext i1 %cmp to i32, !dbg !13395
  store i32 1, i32* %tmp, align 4, !dbg !13395
  %0 = load i32, i32* %tmp, align 4, !dbg !13395
  br label %do.body2, !dbg !13397

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13398

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13399

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13401, metadata !DIExpression()), !dbg !13404
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13405, metadata !DIExpression()), !dbg !13404
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13404
  %conv8 = zext i1 %cmp7 to i32, !dbg !13404
  store i32 1, i32* %tmp9, align 4, !dbg !13404
  %1 = load i32, i32* %tmp9, align 4, !dbg !13404
  %call = call i64 @arch_local_irq_save() #11, !dbg !13406
  store i64 %call, i64* %flags, align 8, !dbg !13406
  br label %do.end, !dbg !13406

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13399

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13398

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13407, !srcloc !13408
  br label %do.body12, !dbg !13407

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13409
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13409
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13410
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13411
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13411
  br label %do.end14, !dbg !13409

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13407

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13398

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13397

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13392

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13388
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13388
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13388
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 6, !dbg !13388
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13388
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13388
  %conv20 = sext i32 %call19 to i64, !dbg !13388
  store i64 %conv20, i64* %len, align 8, !dbg !13388
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13388
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13388
  %9 = load i64, i64* %flags, align 8, !dbg !13388
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13412
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13412
  store i32 1, i32* %tmp.i, align 4, !dbg !13412
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13412
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13413
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13413
  store i32 1, i32* %tmp8.i, align 4, !dbg !13413
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13413
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13414
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13414
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13415, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13416
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13416
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13416
  %15 = load i64, i64* %len, align 8, !dbg !13388
  ret i64 %15, !dbg !13388
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo7_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13417 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13418, metadata !DIExpression()), !dbg !13419
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13420, metadata !DIExpression()), !dbg !13419
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13421, metadata !DIExpression()), !dbg !13419
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13422, metadata !DIExpression()), !dbg !13419
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13419
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13419
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13419
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13419
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13419
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13419
  %call1 = call i64 @spi_statistics_transfer_bytes_histo7_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13419
  ret i64 %call1, !dbg !13419
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo7_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13423 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13424
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13426
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13427
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13434, metadata !DIExpression()), !dbg !13435
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13436, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13437, metadata !DIExpression()), !dbg !13435
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13438, metadata !DIExpression()), !dbg !13435
  br label %do.body, !dbg !13435

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13439

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13440, metadata !DIExpression()), !dbg !13442
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13443, metadata !DIExpression()), !dbg !13442
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13442
  %conv = zext i1 %cmp to i32, !dbg !13442
  store i32 1, i32* %tmp, align 4, !dbg !13442
  %0 = load i32, i32* %tmp, align 4, !dbg !13442
  br label %do.body2, !dbg !13444

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13445

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13446

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13448, metadata !DIExpression()), !dbg !13451
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13452, metadata !DIExpression()), !dbg !13451
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13451
  %conv8 = zext i1 %cmp7 to i32, !dbg !13451
  store i32 1, i32* %tmp9, align 4, !dbg !13451
  %1 = load i32, i32* %tmp9, align 4, !dbg !13451
  %call = call i64 @arch_local_irq_save() #11, !dbg !13453
  store i64 %call, i64* %flags, align 8, !dbg !13453
  br label %do.end, !dbg !13453

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13446

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13445

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13454, !srcloc !13455
  br label %do.body12, !dbg !13454

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13456
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13456
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13457
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13458
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13458
  br label %do.end14, !dbg !13456

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13454

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13445

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13444

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13439

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13435
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13435
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13435
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 7, !dbg !13435
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13435
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13435
  %conv20 = sext i32 %call19 to i64, !dbg !13435
  store i64 %conv20, i64* %len, align 8, !dbg !13435
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13435
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13435
  %9 = load i64, i64* %flags, align 8, !dbg !13435
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13459
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13459
  store i32 1, i32* %tmp.i, align 4, !dbg !13459
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13459
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13460
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13460
  store i32 1, i32* %tmp8.i, align 4, !dbg !13460
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13460
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13461
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13461
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13462, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13463
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13463
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13463
  %15 = load i64, i64* %len, align 8, !dbg !13435
  ret i64 %15, !dbg !13435
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo8_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13464 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13465, metadata !DIExpression()), !dbg !13466
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13467, metadata !DIExpression()), !dbg !13466
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13468, metadata !DIExpression()), !dbg !13466
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13469, metadata !DIExpression()), !dbg !13466
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13466
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13466
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13466
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13466
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13466
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13466
  %call1 = call i64 @spi_statistics_transfer_bytes_histo8_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13466
  ret i64 %call1, !dbg !13466
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo8_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13470 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13471
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13473
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13474
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13481, metadata !DIExpression()), !dbg !13482
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13483, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13484, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13485, metadata !DIExpression()), !dbg !13482
  br label %do.body, !dbg !13482

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13486

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13487, metadata !DIExpression()), !dbg !13489
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13490, metadata !DIExpression()), !dbg !13489
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13489
  %conv = zext i1 %cmp to i32, !dbg !13489
  store i32 1, i32* %tmp, align 4, !dbg !13489
  %0 = load i32, i32* %tmp, align 4, !dbg !13489
  br label %do.body2, !dbg !13491

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13492

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13493

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13495, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13499, metadata !DIExpression()), !dbg !13498
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13498
  %conv8 = zext i1 %cmp7 to i32, !dbg !13498
  store i32 1, i32* %tmp9, align 4, !dbg !13498
  %1 = load i32, i32* %tmp9, align 4, !dbg !13498
  %call = call i64 @arch_local_irq_save() #11, !dbg !13500
  store i64 %call, i64* %flags, align 8, !dbg !13500
  br label %do.end, !dbg !13500

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13493

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13492

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13501, !srcloc !13502
  br label %do.body12, !dbg !13501

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13503
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13503
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13504
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13505
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13505
  br label %do.end14, !dbg !13503

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13501

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13492

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13491

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13486

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13482
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13482
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13482
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 8, !dbg !13482
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13482
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13482
  %conv20 = sext i32 %call19 to i64, !dbg !13482
  store i64 %conv20, i64* %len, align 8, !dbg !13482
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13482
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13482
  %9 = load i64, i64* %flags, align 8, !dbg !13482
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13506
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13506
  store i32 1, i32* %tmp.i, align 4, !dbg !13506
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13506
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13507
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13507
  store i32 1, i32* %tmp8.i, align 4, !dbg !13507
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13507
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13508
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13508
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13509, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13510
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13510
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13510
  %15 = load i64, i64* %len, align 8, !dbg !13482
  ret i64 %15, !dbg !13482
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo9_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13511 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13512, metadata !DIExpression()), !dbg !13513
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13514, metadata !DIExpression()), !dbg !13513
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13515, metadata !DIExpression()), !dbg !13513
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13516, metadata !DIExpression()), !dbg !13513
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13513
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13513
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13513
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13513
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13513
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13513
  %call1 = call i64 @spi_statistics_transfer_bytes_histo9_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13513
  ret i64 %call1, !dbg !13513
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo9_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13517 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13518
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13520
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13521
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13528, metadata !DIExpression()), !dbg !13529
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13530, metadata !DIExpression()), !dbg !13529
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13531, metadata !DIExpression()), !dbg !13529
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13532, metadata !DIExpression()), !dbg !13529
  br label %do.body, !dbg !13529

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13533

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13534, metadata !DIExpression()), !dbg !13536
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13537, metadata !DIExpression()), !dbg !13536
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13536
  %conv = zext i1 %cmp to i32, !dbg !13536
  store i32 1, i32* %tmp, align 4, !dbg !13536
  %0 = load i32, i32* %tmp, align 4, !dbg !13536
  br label %do.body2, !dbg !13538

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13539

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13540

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13542, metadata !DIExpression()), !dbg !13545
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13546, metadata !DIExpression()), !dbg !13545
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13545
  %conv8 = zext i1 %cmp7 to i32, !dbg !13545
  store i32 1, i32* %tmp9, align 4, !dbg !13545
  %1 = load i32, i32* %tmp9, align 4, !dbg !13545
  %call = call i64 @arch_local_irq_save() #11, !dbg !13547
  store i64 %call, i64* %flags, align 8, !dbg !13547
  br label %do.end, !dbg !13547

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13540

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13539

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13548, !srcloc !13549
  br label %do.body12, !dbg !13548

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13550
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13550
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13551
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13552
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13552
  br label %do.end14, !dbg !13550

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13548

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13539

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13538

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13533

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13529
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13529
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13529
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 9, !dbg !13529
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13529
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13529
  %conv20 = sext i32 %call19 to i64, !dbg !13529
  store i64 %conv20, i64* %len, align 8, !dbg !13529
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13529
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13529
  %9 = load i64, i64* %flags, align 8, !dbg !13529
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13553
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13553
  store i32 1, i32* %tmp.i, align 4, !dbg !13553
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13553
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13554
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13554
  store i32 1, i32* %tmp8.i, align 4, !dbg !13554
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13554
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13555
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13555
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13556, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13557
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13557
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13557
  %15 = load i64, i64* %len, align 8, !dbg !13529
  ret i64 %15, !dbg !13529
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo10_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13558 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13559, metadata !DIExpression()), !dbg !13560
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13561, metadata !DIExpression()), !dbg !13560
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13562, metadata !DIExpression()), !dbg !13560
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13563, metadata !DIExpression()), !dbg !13560
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13560
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13560
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13560
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13560
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13560
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13560
  %call1 = call i64 @spi_statistics_transfer_bytes_histo10_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13560
  ret i64 %call1, !dbg !13560
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo10_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13564 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13565
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13567
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13568
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13575, metadata !DIExpression()), !dbg !13576
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13577, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13578, metadata !DIExpression()), !dbg !13576
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13579, metadata !DIExpression()), !dbg !13576
  br label %do.body, !dbg !13576

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13580

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13581, metadata !DIExpression()), !dbg !13583
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13584, metadata !DIExpression()), !dbg !13583
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13583
  %conv = zext i1 %cmp to i32, !dbg !13583
  store i32 1, i32* %tmp, align 4, !dbg !13583
  %0 = load i32, i32* %tmp, align 4, !dbg !13583
  br label %do.body2, !dbg !13585

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13586

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13587

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13589, metadata !DIExpression()), !dbg !13592
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13593, metadata !DIExpression()), !dbg !13592
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13592
  %conv8 = zext i1 %cmp7 to i32, !dbg !13592
  store i32 1, i32* %tmp9, align 4, !dbg !13592
  %1 = load i32, i32* %tmp9, align 4, !dbg !13592
  %call = call i64 @arch_local_irq_save() #11, !dbg !13594
  store i64 %call, i64* %flags, align 8, !dbg !13594
  br label %do.end, !dbg !13594

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13587

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13586

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13595, !srcloc !13596
  br label %do.body12, !dbg !13595

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13597
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13597
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13598
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13599
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13599
  br label %do.end14, !dbg !13597

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13595

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13586

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13585

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13580

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13576
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13576
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13576
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 10, !dbg !13576
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13576
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13576
  %conv20 = sext i32 %call19 to i64, !dbg !13576
  store i64 %conv20, i64* %len, align 8, !dbg !13576
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13576
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13576
  %9 = load i64, i64* %flags, align 8, !dbg !13576
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13600
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13600
  store i32 1, i32* %tmp.i, align 4, !dbg !13600
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13600
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13601
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13601
  store i32 1, i32* %tmp8.i, align 4, !dbg !13601
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13601
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13602
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13602
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13603, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13604
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13604
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13604
  %15 = load i64, i64* %len, align 8, !dbg !13576
  ret i64 %15, !dbg !13576
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo11_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13605 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13606, metadata !DIExpression()), !dbg !13607
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13608, metadata !DIExpression()), !dbg !13607
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13609, metadata !DIExpression()), !dbg !13607
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13610, metadata !DIExpression()), !dbg !13607
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13607
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13607
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13607
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13607
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13607
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13607
  %call1 = call i64 @spi_statistics_transfer_bytes_histo11_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13607
  ret i64 %call1, !dbg !13607
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo11_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13611 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13612
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13614
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13615
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13622, metadata !DIExpression()), !dbg !13623
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13624, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13625, metadata !DIExpression()), !dbg !13623
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13626, metadata !DIExpression()), !dbg !13623
  br label %do.body, !dbg !13623

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13627

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13628, metadata !DIExpression()), !dbg !13630
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13631, metadata !DIExpression()), !dbg !13630
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13630
  %conv = zext i1 %cmp to i32, !dbg !13630
  store i32 1, i32* %tmp, align 4, !dbg !13630
  %0 = load i32, i32* %tmp, align 4, !dbg !13630
  br label %do.body2, !dbg !13632

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13633

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13634

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13636, metadata !DIExpression()), !dbg !13639
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13640, metadata !DIExpression()), !dbg !13639
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13639
  %conv8 = zext i1 %cmp7 to i32, !dbg !13639
  store i32 1, i32* %tmp9, align 4, !dbg !13639
  %1 = load i32, i32* %tmp9, align 4, !dbg !13639
  %call = call i64 @arch_local_irq_save() #11, !dbg !13641
  store i64 %call, i64* %flags, align 8, !dbg !13641
  br label %do.end, !dbg !13641

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13634

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13633

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13642, !srcloc !13643
  br label %do.body12, !dbg !13642

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13644
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13644
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13645
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13646
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13646
  br label %do.end14, !dbg !13644

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13642

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13633

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13632

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13627

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13623
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13623
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13623
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 11, !dbg !13623
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13623
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13623
  %conv20 = sext i32 %call19 to i64, !dbg !13623
  store i64 %conv20, i64* %len, align 8, !dbg !13623
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13623
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13623
  %9 = load i64, i64* %flags, align 8, !dbg !13623
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13647
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13647
  store i32 1, i32* %tmp.i, align 4, !dbg !13647
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13647
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13648
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13648
  store i32 1, i32* %tmp8.i, align 4, !dbg !13648
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13648
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13649
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13649
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13650, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13651
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13651
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13651
  %15 = load i64, i64* %len, align 8, !dbg !13623
  ret i64 %15, !dbg !13623
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo12_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13652 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13653, metadata !DIExpression()), !dbg !13654
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13655, metadata !DIExpression()), !dbg !13654
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13656, metadata !DIExpression()), !dbg !13654
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13657, metadata !DIExpression()), !dbg !13654
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13654
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13654
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13654
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13654
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13654
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13654
  %call1 = call i64 @spi_statistics_transfer_bytes_histo12_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13654
  ret i64 %call1, !dbg !13654
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo12_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13658 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13659
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13661
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13662
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13669, metadata !DIExpression()), !dbg !13670
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13671, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13672, metadata !DIExpression()), !dbg !13670
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13673, metadata !DIExpression()), !dbg !13670
  br label %do.body, !dbg !13670

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13674

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13675, metadata !DIExpression()), !dbg !13677
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13678, metadata !DIExpression()), !dbg !13677
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13677
  %conv = zext i1 %cmp to i32, !dbg !13677
  store i32 1, i32* %tmp, align 4, !dbg !13677
  %0 = load i32, i32* %tmp, align 4, !dbg !13677
  br label %do.body2, !dbg !13679

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13680

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13681

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13683, metadata !DIExpression()), !dbg !13686
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13687, metadata !DIExpression()), !dbg !13686
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13686
  %conv8 = zext i1 %cmp7 to i32, !dbg !13686
  store i32 1, i32* %tmp9, align 4, !dbg !13686
  %1 = load i32, i32* %tmp9, align 4, !dbg !13686
  %call = call i64 @arch_local_irq_save() #11, !dbg !13688
  store i64 %call, i64* %flags, align 8, !dbg !13688
  br label %do.end, !dbg !13688

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13681

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13680

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13689, !srcloc !13690
  br label %do.body12, !dbg !13689

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13691
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13691
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13692
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13693
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13693
  br label %do.end14, !dbg !13691

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13689

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13680

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13679

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13674

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13670
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13670
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13670
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 12, !dbg !13670
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13670
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13670
  %conv20 = sext i32 %call19 to i64, !dbg !13670
  store i64 %conv20, i64* %len, align 8, !dbg !13670
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13670
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13670
  %9 = load i64, i64* %flags, align 8, !dbg !13670
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13694
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13694
  store i32 1, i32* %tmp.i, align 4, !dbg !13694
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13694
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13695
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13695
  store i32 1, i32* %tmp8.i, align 4, !dbg !13695
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13695
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13696
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13696
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13697, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13698
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13698
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13698
  %15 = load i64, i64* %len, align 8, !dbg !13670
  ret i64 %15, !dbg !13670
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo13_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13699 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13700, metadata !DIExpression()), !dbg !13701
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13702, metadata !DIExpression()), !dbg !13701
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13703, metadata !DIExpression()), !dbg !13701
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13704, metadata !DIExpression()), !dbg !13701
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13701
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13701
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13701
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13701
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13701
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13701
  %call1 = call i64 @spi_statistics_transfer_bytes_histo13_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13701
  ret i64 %call1, !dbg !13701
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo13_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13705 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13706
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13708
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13709
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13718, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13719, metadata !DIExpression()), !dbg !13717
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13720, metadata !DIExpression()), !dbg !13717
  br label %do.body, !dbg !13717

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13721

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13722, metadata !DIExpression()), !dbg !13724
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13725, metadata !DIExpression()), !dbg !13724
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13724
  %conv = zext i1 %cmp to i32, !dbg !13724
  store i32 1, i32* %tmp, align 4, !dbg !13724
  %0 = load i32, i32* %tmp, align 4, !dbg !13724
  br label %do.body2, !dbg !13726

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13727

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13728

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13730, metadata !DIExpression()), !dbg !13733
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13734, metadata !DIExpression()), !dbg !13733
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13733
  %conv8 = zext i1 %cmp7 to i32, !dbg !13733
  store i32 1, i32* %tmp9, align 4, !dbg !13733
  %1 = load i32, i32* %tmp9, align 4, !dbg !13733
  %call = call i64 @arch_local_irq_save() #11, !dbg !13735
  store i64 %call, i64* %flags, align 8, !dbg !13735
  br label %do.end, !dbg !13735

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13728

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13727

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13736, !srcloc !13737
  br label %do.body12, !dbg !13736

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13738
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13738
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13739
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13740
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13740
  br label %do.end14, !dbg !13738

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13736

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13727

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13726

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13721

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13717
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13717
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13717
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 13, !dbg !13717
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13717
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13717
  %conv20 = sext i32 %call19 to i64, !dbg !13717
  store i64 %conv20, i64* %len, align 8, !dbg !13717
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13717
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13717
  %9 = load i64, i64* %flags, align 8, !dbg !13717
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13741
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13741
  store i32 1, i32* %tmp.i, align 4, !dbg !13741
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13741
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13742
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13742
  store i32 1, i32* %tmp8.i, align 4, !dbg !13742
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13742
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13743
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13743
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13744, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13745
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13745
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13745
  %15 = load i64, i64* %len, align 8, !dbg !13717
  ret i64 %15, !dbg !13717
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo14_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13746 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13747, metadata !DIExpression()), !dbg !13748
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13749, metadata !DIExpression()), !dbg !13748
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13750, metadata !DIExpression()), !dbg !13748
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13751, metadata !DIExpression()), !dbg !13748
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13748
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13748
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13748
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13748
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13748
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13748
  %call1 = call i64 @spi_statistics_transfer_bytes_histo14_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13748
  ret i64 %call1, !dbg !13748
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo14_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13752 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13753
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13755
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13756
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13763, metadata !DIExpression()), !dbg !13764
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13765, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13766, metadata !DIExpression()), !dbg !13764
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13767, metadata !DIExpression()), !dbg !13764
  br label %do.body, !dbg !13764

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13768

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13769, metadata !DIExpression()), !dbg !13771
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13772, metadata !DIExpression()), !dbg !13771
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13771
  %conv = zext i1 %cmp to i32, !dbg !13771
  store i32 1, i32* %tmp, align 4, !dbg !13771
  %0 = load i32, i32* %tmp, align 4, !dbg !13771
  br label %do.body2, !dbg !13773

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13774

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13775

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13777, metadata !DIExpression()), !dbg !13780
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13781, metadata !DIExpression()), !dbg !13780
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13780
  %conv8 = zext i1 %cmp7 to i32, !dbg !13780
  store i32 1, i32* %tmp9, align 4, !dbg !13780
  %1 = load i32, i32* %tmp9, align 4, !dbg !13780
  %call = call i64 @arch_local_irq_save() #11, !dbg !13782
  store i64 %call, i64* %flags, align 8, !dbg !13782
  br label %do.end, !dbg !13782

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13775

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13774

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13783, !srcloc !13784
  br label %do.body12, !dbg !13783

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13785
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13785
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13786
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13787
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13787
  br label %do.end14, !dbg !13785

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13783

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13774

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13773

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13768

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13764
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13764
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13764
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 14, !dbg !13764
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13764
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13764
  %conv20 = sext i32 %call19 to i64, !dbg !13764
  store i64 %conv20, i64* %len, align 8, !dbg !13764
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13764
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13764
  %9 = load i64, i64* %flags, align 8, !dbg !13764
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13788
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13788
  store i32 1, i32* %tmp.i, align 4, !dbg !13788
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13788
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13789
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13789
  store i32 1, i32* %tmp8.i, align 4, !dbg !13789
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13789
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13790
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13790
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13791, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13792
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13792
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13792
  %15 = load i64, i64* %len, align 8, !dbg !13764
  ret i64 %15, !dbg !13764
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo15_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13793 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13794, metadata !DIExpression()), !dbg !13795
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13796, metadata !DIExpression()), !dbg !13795
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13797, metadata !DIExpression()), !dbg !13795
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13798, metadata !DIExpression()), !dbg !13795
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13795
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13795
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13795
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13795
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13795
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13795
  %call1 = call i64 @spi_statistics_transfer_bytes_histo15_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13795
  ret i64 %call1, !dbg !13795
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo15_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13799 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13800
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13802
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13803
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13810, metadata !DIExpression()), !dbg !13811
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13812, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13813, metadata !DIExpression()), !dbg !13811
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13814, metadata !DIExpression()), !dbg !13811
  br label %do.body, !dbg !13811

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13815

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13816, metadata !DIExpression()), !dbg !13818
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13819, metadata !DIExpression()), !dbg !13818
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13818
  %conv = zext i1 %cmp to i32, !dbg !13818
  store i32 1, i32* %tmp, align 4, !dbg !13818
  %0 = load i32, i32* %tmp, align 4, !dbg !13818
  br label %do.body2, !dbg !13820

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13821

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13822

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13824, metadata !DIExpression()), !dbg !13827
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13828, metadata !DIExpression()), !dbg !13827
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13827
  %conv8 = zext i1 %cmp7 to i32, !dbg !13827
  store i32 1, i32* %tmp9, align 4, !dbg !13827
  %1 = load i32, i32* %tmp9, align 4, !dbg !13827
  %call = call i64 @arch_local_irq_save() #11, !dbg !13829
  store i64 %call, i64* %flags, align 8, !dbg !13829
  br label %do.end, !dbg !13829

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13822

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13821

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13830, !srcloc !13831
  br label %do.body12, !dbg !13830

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13832
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13832
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13833
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13834
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13834
  br label %do.end14, !dbg !13832

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13830

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13821

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13820

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13815

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13811
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13811
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13811
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 15, !dbg !13811
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13811
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13811
  %conv20 = sext i32 %call19 to i64, !dbg !13811
  store i64 %conv20, i64* %len, align 8, !dbg !13811
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13811
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13811
  %9 = load i64, i64* %flags, align 8, !dbg !13811
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13835
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13835
  store i32 1, i32* %tmp.i, align 4, !dbg !13835
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13835
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13836
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13836
  store i32 1, i32* %tmp8.i, align 4, !dbg !13836
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13836
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13837
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13837
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13838, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13839
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13839
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13839
  %15 = load i64, i64* %len, align 8, !dbg !13811
  ret i64 %15, !dbg !13811
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfer_bytes_histo16_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13840 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13841, metadata !DIExpression()), !dbg !13842
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13843, metadata !DIExpression()), !dbg !13842
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13844, metadata !DIExpression()), !dbg !13842
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13845, metadata !DIExpression()), !dbg !13842
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13842
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13842
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13842
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13842
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13842
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13842
  %call1 = call i64 @spi_statistics_transfer_bytes_histo16_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13842
  ret i64 %call1, !dbg !13842
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfer_bytes_histo16_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13846 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13847
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13849
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13850
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13857, metadata !DIExpression()), !dbg !13858
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13859, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13860, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13861, metadata !DIExpression()), !dbg !13858
  br label %do.body, !dbg !13858

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13862

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13863, metadata !DIExpression()), !dbg !13865
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13866, metadata !DIExpression()), !dbg !13865
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13865
  %conv = zext i1 %cmp to i32, !dbg !13865
  store i32 1, i32* %tmp, align 4, !dbg !13865
  %0 = load i32, i32* %tmp, align 4, !dbg !13865
  br label %do.body2, !dbg !13867

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13868

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13869

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13871, metadata !DIExpression()), !dbg !13874
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13875, metadata !DIExpression()), !dbg !13874
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13874
  %conv8 = zext i1 %cmp7 to i32, !dbg !13874
  store i32 1, i32* %tmp9, align 4, !dbg !13874
  %1 = load i32, i32* %tmp9, align 4, !dbg !13874
  %call = call i64 @arch_local_irq_save() #11, !dbg !13876
  store i64 %call, i64* %flags, align 8, !dbg !13876
  br label %do.end, !dbg !13876

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13869

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13868

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13877, !srcloc !13878
  br label %do.body12, !dbg !13877

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13879
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13879
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13880
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13881
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13881
  br label %do.end14, !dbg !13879

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13877

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13868

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13867

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13862

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13858
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13858
  %transfer_bytes_histo = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 11, !dbg !13858
  %arrayidx = getelementptr [17 x i64], [17 x i64]* %transfer_bytes_histo, i64 0, i64 16, !dbg !13858
  %7 = load i64, i64* %arrayidx, align 8, !dbg !13858
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13858
  %conv20 = sext i32 %call19 to i64, !dbg !13858
  store i64 %conv20, i64* %len, align 8, !dbg !13858
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13858
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13858
  %9 = load i64, i64* %flags, align 8, !dbg !13858
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13882
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13882
  store i32 1, i32* %tmp.i, align 4, !dbg !13882
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13882
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13883
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13883
  store i32 1, i32* %tmp8.i, align 4, !dbg !13883
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13883
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13884
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13884
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13885, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13886
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13886
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13886
  %15 = load i64, i64* %len, align 8, !dbg !13858
  ret i64 %15, !dbg !13858
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_device_transfers_split_maxsize_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !13887 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13888, metadata !DIExpression()), !dbg !13889
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !13890, metadata !DIExpression()), !dbg !13889
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13891, metadata !DIExpression()), !dbg !13889
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !13892, metadata !DIExpression()), !dbg !13889
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13889
  %call = call %struct.spi_device* @to_spi_device(%struct.device* %0) #11, !dbg !13889
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !13889
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !13889
  %statistics = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 16, !dbg !13889
  %2 = load i8*, i8** %buf.addr, align 8, !dbg !13889
  %call1 = call i64 @spi_statistics_transfers_split_maxsize_show(%struct.spi_statistics* %statistics, i8* %2) #11, !dbg !13889
  ret i64 %call1, !dbg !13889
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_statistics_transfers_split_maxsize_show(%struct.spi_statistics* %stat, i8* %buf) #0 !dbg !13893 {
entry:
  %lock.addr.i22 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i22, metadata !5420, metadata !DIExpression()), !dbg !13894
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !13896
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !13897
  %stat.addr = alloca %struct.spi_statistics*, align 8
  %buf.addr = alloca i8*, align 8
  %flags = alloca i64, align 8
  %len = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_statistics* %stat, %struct.spi_statistics** %stat.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stat.addr, metadata !13904, metadata !DIExpression()), !dbg !13905
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !13906, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !13907, metadata !DIExpression()), !dbg !13905
  call void @llvm.dbg.declare(metadata i64* %len, metadata !13908, metadata !DIExpression()), !dbg !13905
  br label %do.body, !dbg !13905

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !13909

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !13910, metadata !DIExpression()), !dbg !13912
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !13913, metadata !DIExpression()), !dbg !13912
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !13912
  %conv = zext i1 %cmp to i32, !dbg !13912
  store i32 1, i32* %tmp, align 4, !dbg !13912
  %0 = load i32, i32* %tmp, align 4, !dbg !13912
  br label %do.body2, !dbg !13914

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !13915

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !13916

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !13918, metadata !DIExpression()), !dbg !13921
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !13922, metadata !DIExpression()), !dbg !13921
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !13921
  %conv8 = zext i1 %cmp7 to i32, !dbg !13921
  store i32 1, i32* %tmp9, align 4, !dbg !13921
  %1 = load i32, i32* %tmp9, align 4, !dbg !13921
  %call = call i64 @arch_local_irq_save() #11, !dbg !13923
  store i64 %call, i64* %flags, align 8, !dbg !13923
  br label %do.end, !dbg !13923

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !13916

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !13915

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13924, !srcloc !13925
  br label %do.body12, !dbg !13924

do.body12:                                        ; preds = %do.body11
  %2 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13926
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %2, i32 0, i32 0, !dbg !13926
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %3 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !13927
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %3, i32 0, i32 0, !dbg !13928
  %rlock.i = bitcast %union.anon* %4 to %struct.raw_spinlock*, !dbg !13928
  br label %do.end14, !dbg !13926

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !13924

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !13915

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !13914

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !13909

do.end18:                                         ; preds = %do.end17
  %5 = load i8*, i8** %buf.addr, align 8, !dbg !13905
  %6 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13905
  %transfers_split_maxsize = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %6, i32 0, i32 12, !dbg !13905
  %7 = load i64, i64* %transfers_split_maxsize, align 8, !dbg !13905
  %call19 = call i32 (i8*, i8*, ...) @sprintf(i8* %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 %7) #11, !dbg !13905
  %conv20 = sext i32 %call19 to i64, !dbg !13905
  store i64 %conv20, i64* %len, align 8, !dbg !13905
  %8 = load %struct.spi_statistics*, %struct.spi_statistics** %stat.addr, align 8, !dbg !13905
  %lock21 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %8, i32 0, i32 0, !dbg !13905
  %9 = load i64, i64* %flags, align 8, !dbg !13905
  store %struct.spinlock* %lock21, %struct.spinlock** %lock.addr.i22, align 8
  store i64 %9, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !13929
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !13929
  store i32 1, i32* %tmp.i, align 4, !dbg !13929
  %10 = load i32, i32* %tmp.i, align 4, !dbg !13929
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !13930
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !13930
  store i32 1, i32* %tmp8.i, align 4, !dbg !13930
  %11 = load i32, i32* %tmp8.i, align 4, !dbg !13930
  %12 = load i64, i64* %flags.addr.i, align 8, !dbg !13931
  call void @arch_local_irq_restore(i64 %12) #12, !dbg !13931
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !13932, !srcloc !5559
  %13 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i22, align 8, !dbg !13933
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0, !dbg !13933
  %rlock.i23 = bitcast %union.anon* %14 to %struct.raw_spinlock*, !dbg !13933
  %15 = load i64, i64* %len, align 8, !dbg !13905
  ret i64 %15, !dbg !13905
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_driver_match_device(%struct.device* %dev, %struct.device_driver* %drv) #0 !dbg !13934 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %drv.addr = alloca %struct.device_driver*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !13940, metadata !DIExpression()), !dbg !13941
  store %struct.device_driver* %drv, %struct.device_driver** %drv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_driver** %drv.addr, metadata !13942, metadata !DIExpression()), !dbg !13943
  %0 = load %struct.device_driver*, %struct.device_driver** %drv.addr, align 8, !dbg !13944
  %of_match_table = getelementptr inbounds %struct.device_driver, %struct.device_driver* %0, i32 0, i32 6, !dbg !13945
  %1 = load %struct.of_device_id*, %struct.of_device_id** %of_match_table, align 8, !dbg !13945
  %2 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !13946
  %call = call %struct.of_device_id* @of_match_device(%struct.of_device_id* %1, %struct.device* %2) #11, !dbg !13947
  %cmp = icmp ne %struct.of_device_id* %call, null, !dbg !13948
  %conv = zext i1 %cmp to i32, !dbg !13948
  ret i32 %conv, !dbg !13949
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @acpi_driver_match_device(%struct.device*, %struct.device_driver*) #2

; Function Attrs: noredzone
declare dso_local %struct.of_device_id* @of_match_device(%struct.of_device_id*, %struct.device*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_device_uevent_modalias(%struct.device*, %struct.kobj_uevent_env*) #2

; Function Attrs: noredzone
declare dso_local i32 @add_uevent_var(%struct.kobj_uevent_env*, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @of_clk_set_defaults(%struct.device_node*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local i32 @of_irq_get(%struct.device_node*, i32) #2

; Function Attrs: noredzone
declare dso_local i32 @dev_pm_domain_attach(%struct.device*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local void @dev_pm_domain_detach(%struct.device*, i1 zeroext) #2

; Function Attrs: noredzone
declare dso_local %struct.device* @get_device(%struct.device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @acpi_dev_name(%struct.acpi_device* %adev) #0 !dbg !13950 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !13953, metadata !DIExpression()), !dbg !13954
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !13955
  %dev = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 21, !dbg !13956
  %call = call i8* @dev_name(%struct.device* %dev) #11, !dbg !13957
  ret i8* %call, !dbg !13958
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kobject_name(%struct.kobject* %kobj) #0 !dbg !13959 {
entry:
  %kobj.addr = alloca %struct.kobject*, align 8
  store %struct.kobject* %kobj, %struct.kobject** %kobj.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kobject** %kobj.addr, metadata !13964, metadata !DIExpression()), !dbg !13965
  %0 = load %struct.kobject*, %struct.kobject** %kobj.addr, align 8, !dbg !13966
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %0, i32 0, i32 0, !dbg !13967
  %1 = load i8*, i8** %name, align 8, !dbg !13967
  ret i8* %1, !dbg !13968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @clear_bit(i64 %nr, i64* %addr) #0 !dbg !13969 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !13975, metadata !DIExpression()), !dbg !13977
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !13979, metadata !DIExpression()), !dbg !13980
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !13981, metadata !DIExpression()), !dbg !13983
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !13985, metadata !DIExpression()), !dbg !13986
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !13987, metadata !DIExpression()), !dbg !13988
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !13989, metadata !DIExpression()), !dbg !13990
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !13991
  %1 = load i64, i64* %nr.addr, align 8, !dbg !13992
  %div = sdiv i64 %1, 64, !dbg !13992
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !13993
  %2 = bitcast i64* %add.ptr to i8*, !dbg !13991
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !13994
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !13995
  %conv.i = trunc i64 %4 to i32, !dbg !13995
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !13996
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !13997
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !13997
  call void @kcsan_check_access(i8* %5, i64 %6, i32 5) #12, !dbg !13997
  %7 = load i64, i64* %nr.addr, align 8, !dbg !13998
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !13999
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64, i64* %nr.addr.i, align 8, !dbg !14000
  %10 = call i1 @llvm.is.constant.i64(i64 %9) #7, !dbg !14002
  br i1 %10, label %if.then.i, label %if.else.i, !dbg !14003

if.then.i:                                        ; preds = %entry
  %11 = load i64*, i64** %addr.addr.i, align 8, !dbg !14004
  %12 = bitcast i64* %11 to i8*, !dbg !14004
  %13 = load i64, i64* %nr.addr.i, align 8, !dbg !14004
  %shr.i = ashr i64 %13, 3, !dbg !14004
  %add.ptr.i = getelementptr i8, i8* %12, i64 %shr.i, !dbg !14004
  %14 = load i64, i64* %nr.addr.i, align 8, !dbg !14006
  %and.i = and i64 %14, 7, !dbg !14006
  %sh_prom.i = trunc i64 %and.i to i32, !dbg !14006
  %shl.i = shl i32 1, %sh_prom.i, !dbg !14006
  %neg.i = xor i32 %shl.i, -1, !dbg !14007
  call void asm sideeffect "andb ${1:b},$0", "=*m,iq,*m,~{dirflag},~{fpsr},~{flags}"(i8* %add.ptr.i, i32 %neg.i, i8* %add.ptr.i) #7, !dbg !14008, !srcloc !14009
  br label %arch_clear_bit.exit, !dbg !14010

if.else.i:                                        ; preds = %entry
  %15 = load i64*, i64** %addr.addr.i, align 8, !dbg !14011
  %16 = load i64, i64* %nr.addr.i, align 8, !dbg !14013
  call void asm sideeffect " btrq  $1,$0", "*m,Ir,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %15, i64 %16) #7, !dbg !14014, !srcloc !14015
  br label %arch_clear_bit.exit

arch_clear_bit.exit:                              ; preds = %if.then.i, %if.else.i
  ret void, !dbg !14016
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @kasan_check_write(i8* %p, i32 %size) #0 !dbg !14017 {
entry:
  %p.addr = alloca i8*, align 8
  %size.addr = alloca i32, align 4
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !14021, metadata !DIExpression()), !dbg !14022
  store i32 %size, i32* %size.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %size.addr, metadata !14023, metadata !DIExpression()), !dbg !14024
  ret i1 true, !dbg !14025
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @kcsan_check_access(i8* %ptr, i64 %size, i32 %type) #0 !dbg !14026 {
entry:
  %ptr.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %type.addr = alloca i32, align 4
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !14030, metadata !DIExpression()), !dbg !14031
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14032, metadata !DIExpression()), !dbg !14033
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !14034, metadata !DIExpression()), !dbg !14035
  ret void, !dbg !14036
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i64(i64) #8

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #0 !dbg !14037 {
entry:
  %s.addr.i.i = alloca %struct.kmem_cache*, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr.i.i, metadata !5940, metadata !DIExpression()), !dbg !14038
  %flags.addr.i17.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i17.i, metadata !5950, metadata !DIExpression()), !dbg !14042
  %size.addr.i18.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i18.i, metadata !5952, metadata !DIExpression()), !dbg !14043
  %ret.i.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %ret.i.i, metadata !5954, metadata !DIExpression()), !dbg !14044
  %retval.i12.i = alloca i32, align 4
  %flags.addr.i13.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i13.i, metadata !5956, metadata !DIExpression()), !dbg !14045
  %retval.i.i = alloca i32, align 4
  %size.addr.i11.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i11.i, metadata !5962, metadata !DIExpression()), !dbg !14047
  %size.addr.i.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i.i, metadata !5968, metadata !DIExpression()), !dbg !14049
  %flags.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i.i, metadata !5977, metadata !DIExpression()), !dbg !14052
  %order.addr.i.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.addr.i.i.i, metadata !5979, metadata !DIExpression()), !dbg !14053
  %size.addr.i.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i.i, metadata !5981, metadata !DIExpression()), !dbg !14054
  %flags.addr.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i.i, metadata !5983, metadata !DIExpression()), !dbg !14055
  %order.i.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %order.i.i, metadata !5985, metadata !DIExpression()), !dbg !14056
  %retval.i = alloca i8*, align 8
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !5987, metadata !DIExpression()), !dbg !14057
  %flags.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr.i, metadata !5989, metadata !DIExpression()), !dbg !14058
  %index.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %index.i, metadata !5991, metadata !DIExpression()), !dbg !14059
  %retval = alloca i8*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !14060, metadata !DIExpression()), !dbg !14061
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !14062, metadata !DIExpression()), !dbg !14063
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !14064, metadata !DIExpression()), !dbg !14065
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !14066, metadata !DIExpression()), !dbg !14067
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !14068, metadata !DIExpression()), !dbg !14071
  %0 = load i64, i64* %n.addr, align 8, !dbg !14071
  store i64 %0, i64* %__a, align 8, !dbg !14071
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !14072, metadata !DIExpression()), !dbg !14071
  %1 = load i64, i64* %size.addr, align 8, !dbg !14071
  store i64 %1, i64* %__b, align 8, !dbg !14071
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !14073, metadata !DIExpression()), !dbg !14071
  store i64* %bytes, i64** %__d, align 8, !dbg !14071
  %cmp = icmp eq i64* %__a, %__b, !dbg !14071
  %conv = zext i1 %cmp to i32, !dbg !14071
  %2 = load i64*, i64** %__d, align 8, !dbg !14071
  %cmp1 = icmp eq i64* %__a, %2, !dbg !14071
  %conv2 = zext i1 %cmp1 to i32, !dbg !14071
  %3 = load i64, i64* %__a, align 8, !dbg !14071
  %4 = load i64, i64* %__b, align 8, !dbg !14071
  %5 = load i64*, i64** %__d, align 8, !dbg !14071
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !14071
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !14071
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !14071
  store i64 %8, i64* %5, align 8, !dbg !14071
  %frombool = zext i1 %7 to i8, !dbg !14071
  store i8 %frombool, i8* %tmp, align 1, !dbg !14071
  %9 = load i8, i8* %tmp, align 1, !dbg !14071
  %tobool = trunc i8 %9 to i1, !dbg !14071
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !14074
  %lnot = xor i1 %call, true, !dbg !14074
  %lnot3 = xor i1 %lnot, true, !dbg !14074
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14074
  %conv4 = sext i32 %lnot.ext to i64, !dbg !14074
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !14074
  br i1 %tobool5, label %if.then, label %if.end, !dbg !14075

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !14076
  br label %return, !dbg !14076

if.end:                                           ; preds = %entry
  %10 = load i64, i64* %n.addr, align 8, !dbg !14077
  %11 = call i1 @llvm.is.constant.i64(i64 %10), !dbg !14078
  br i1 %11, label %land.lhs.true, label %if.end8, !dbg !14079

land.lhs.true:                                    ; preds = %if.end
  %12 = load i64, i64* %size.addr, align 8, !dbg !14080
  %13 = call i1 @llvm.is.constant.i64(i64 %12), !dbg !14081
  br i1 %13, label %if.then6, label %if.end8, !dbg !14082

if.then6:                                         ; preds = %land.lhs.true
  %14 = load i64, i64* %bytes, align 8, !dbg !14083
  %15 = load i32, i32* %flags.addr, align 4, !dbg !14084
  store i64 %14, i64* %size.addr.i, align 8
  store i32 %15, i32* %flags.addr.i, align 4
  %16 = load i64, i64* %size.addr.i, align 8, !dbg !14085
  %17 = call i1 @llvm.is.constant.i64(i64 %16) #7, !dbg !14086
  br i1 %17, label %if.then.i, label %if.end9.i, !dbg !14087

if.then.i:                                        ; preds = %if.then6
  %18 = load i64, i64* %size.addr.i, align 8, !dbg !14088
  %cmp.i = icmp ugt i64 %18, 8192, !dbg !14089
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !14090

if.then1.i:                                       ; preds = %if.then.i
  %19 = load i64, i64* %size.addr.i, align 8, !dbg !14091
  %20 = load i32, i32* %flags.addr.i, align 4, !dbg !14092
  store i64 %19, i64* %size.addr.i.i, align 8
  store i32 %20, i32* %flags.addr.i.i, align 4
  %21 = load i64, i64* %size.addr.i.i, align 8, !dbg !14093
  %call.i.i = call i32 @get_order(i64 %21) #13, !dbg !14094
  store i32 %call.i.i, i32* %order.i.i, align 4, !dbg !14056
  %22 = load i64, i64* %size.addr.i.i, align 8, !dbg !14095
  %23 = load i32, i32* %flags.addr.i.i, align 4, !dbg !14096
  %24 = load i32, i32* %order.i.i, align 4, !dbg !14097
  store i64 %22, i64* %size.addr.i.i.i, align 8
  store i32 %23, i32* %flags.addr.i.i.i, align 4
  store i32 %24, i32* %order.addr.i.i.i, align 4
  %25 = load i64, i64* %size.addr.i.i.i, align 8, !dbg !14098
  %26 = load i32, i32* %flags.addr.i.i.i, align 4, !dbg !14099
  %27 = load i32, i32* %order.addr.i.i.i, align 4, !dbg !14100
  %call.i.i.i = call noalias i8* @kmalloc_order(i64 %25, i32 %26, i32 %27) #12, !dbg !14101
  %ptrint.i.i.i = ptrtoint i8* %call.i.i.i to i64, !dbg !14101
  %maskedptr.i.i.i = and i64 %ptrint.i.i.i, 4095, !dbg !14101
  %maskcond.i.i.i = icmp eq i64 %maskedptr.i.i.i, 0, !dbg !14101
  call void @llvm.assume(i1 %maskcond.i.i.i) #7, !dbg !14101
  store i8* %call.i.i.i, i8** %retval.i, align 8, !dbg !14102
  br label %kmalloc.exit, !dbg !14102

if.end.i:                                         ; preds = %if.then.i
  %28 = load i64, i64* %size.addr.i, align 8, !dbg !14103
  store i64 %28, i64* %size.addr.i11.i, align 8
  %29 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14104
  %tobool.i.i = icmp ne i64 %29, 0, !dbg !14104
  br i1 %tobool.i.i, label %if.end.i.i, label %if.then.i.i, !dbg !14105

if.then.i.i:                                      ; preds = %if.end.i
  store i32 0, i32* %retval.i.i, align 4, !dbg !14106
  br label %kmalloc_index.exit.i, !dbg !14106

if.end.i.i:                                       ; preds = %if.end.i
  %30 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14107
  %cmp.i.i = icmp ule i64 %30, 8, !dbg !14108
  br i1 %cmp.i.i, label %if.then1.i.i, label %if.end2.i.i, !dbg !14109

if.then1.i.i:                                     ; preds = %if.end.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14110
  br label %kmalloc_index.exit.i, !dbg !14110

if.end2.i.i:                                      ; preds = %if.end.i.i
  %31 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14111
  %cmp3.i.i = icmp ugt i64 %31, 64, !dbg !14112
  br i1 %cmp3.i.i, label %land.lhs.true.i.i, label %if.end6.i.i, !dbg !14113

land.lhs.true.i.i:                                ; preds = %if.end2.i.i
  %32 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14114
  %cmp4.i.i = icmp ule i64 %32, 96, !dbg !14115
  br i1 %cmp4.i.i, label %if.then5.i.i, label %if.end6.i.i, !dbg !14116

if.then5.i.i:                                     ; preds = %land.lhs.true.i.i
  store i32 1, i32* %retval.i.i, align 4, !dbg !14117
  br label %kmalloc_index.exit.i, !dbg !14117

if.end6.i.i:                                      ; preds = %land.lhs.true.i.i, %if.end2.i.i
  %33 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14118
  %cmp7.i.i = icmp ugt i64 %33, 128, !dbg !14119
  br i1 %cmp7.i.i, label %land.lhs.true8.i.i, label %if.end11.i.i, !dbg !14120

land.lhs.true8.i.i:                               ; preds = %if.end6.i.i
  %34 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14121
  %cmp9.i.i = icmp ule i64 %34, 192, !dbg !14122
  br i1 %cmp9.i.i, label %if.then10.i.i, label %if.end11.i.i, !dbg !14123

if.then10.i.i:                                    ; preds = %land.lhs.true8.i.i
  store i32 2, i32* %retval.i.i, align 4, !dbg !14124
  br label %kmalloc_index.exit.i, !dbg !14124

if.end11.i.i:                                     ; preds = %land.lhs.true8.i.i, %if.end6.i.i
  %35 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14125
  %cmp12.i.i = icmp ule i64 %35, 8, !dbg !14126
  br i1 %cmp12.i.i, label %if.then13.i.i, label %if.end14.i.i, !dbg !14127

if.then13.i.i:                                    ; preds = %if.end11.i.i
  store i32 3, i32* %retval.i.i, align 4, !dbg !14128
  br label %kmalloc_index.exit.i, !dbg !14128

if.end14.i.i:                                     ; preds = %if.end11.i.i
  %36 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14129
  %cmp15.i.i = icmp ule i64 %36, 16, !dbg !14130
  br i1 %cmp15.i.i, label %if.then16.i.i, label %if.end17.i.i, !dbg !14131

if.then16.i.i:                                    ; preds = %if.end14.i.i
  store i32 4, i32* %retval.i.i, align 4, !dbg !14132
  br label %kmalloc_index.exit.i, !dbg !14132

if.end17.i.i:                                     ; preds = %if.end14.i.i
  %37 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14133
  %cmp18.i.i = icmp ule i64 %37, 32, !dbg !14134
  br i1 %cmp18.i.i, label %if.then19.i.i, label %if.end20.i.i, !dbg !14135

if.then19.i.i:                                    ; preds = %if.end17.i.i
  store i32 5, i32* %retval.i.i, align 4, !dbg !14136
  br label %kmalloc_index.exit.i, !dbg !14136

if.end20.i.i:                                     ; preds = %if.end17.i.i
  %38 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14137
  %cmp21.i.i = icmp ule i64 %38, 64, !dbg !14138
  br i1 %cmp21.i.i, label %if.then22.i.i, label %if.end23.i.i, !dbg !14139

if.then22.i.i:                                    ; preds = %if.end20.i.i
  store i32 6, i32* %retval.i.i, align 4, !dbg !14140
  br label %kmalloc_index.exit.i, !dbg !14140

if.end23.i.i:                                     ; preds = %if.end20.i.i
  %39 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14141
  %cmp24.i.i = icmp ule i64 %39, 128, !dbg !14142
  br i1 %cmp24.i.i, label %if.then25.i.i, label %if.end26.i.i, !dbg !14143

if.then25.i.i:                                    ; preds = %if.end23.i.i
  store i32 7, i32* %retval.i.i, align 4, !dbg !14144
  br label %kmalloc_index.exit.i, !dbg !14144

if.end26.i.i:                                     ; preds = %if.end23.i.i
  %40 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14145
  %cmp27.i.i = icmp ule i64 %40, 256, !dbg !14146
  br i1 %cmp27.i.i, label %if.then28.i.i, label %if.end29.i.i, !dbg !14147

if.then28.i.i:                                    ; preds = %if.end26.i.i
  store i32 8, i32* %retval.i.i, align 4, !dbg !14148
  br label %kmalloc_index.exit.i, !dbg !14148

if.end29.i.i:                                     ; preds = %if.end26.i.i
  %41 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14149
  %cmp30.i.i = icmp ule i64 %41, 512, !dbg !14150
  br i1 %cmp30.i.i, label %if.then31.i.i, label %if.end32.i.i, !dbg !14151

if.then31.i.i:                                    ; preds = %if.end29.i.i
  store i32 9, i32* %retval.i.i, align 4, !dbg !14152
  br label %kmalloc_index.exit.i, !dbg !14152

if.end32.i.i:                                     ; preds = %if.end29.i.i
  %42 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14153
  %cmp33.i.i = icmp ule i64 %42, 1024, !dbg !14154
  br i1 %cmp33.i.i, label %if.then34.i.i, label %if.end35.i.i, !dbg !14155

if.then34.i.i:                                    ; preds = %if.end32.i.i
  store i32 10, i32* %retval.i.i, align 4, !dbg !14156
  br label %kmalloc_index.exit.i, !dbg !14156

if.end35.i.i:                                     ; preds = %if.end32.i.i
  %43 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14157
  %cmp36.i.i = icmp ule i64 %43, 2048, !dbg !14158
  br i1 %cmp36.i.i, label %if.then37.i.i, label %if.end38.i.i, !dbg !14159

if.then37.i.i:                                    ; preds = %if.end35.i.i
  store i32 11, i32* %retval.i.i, align 4, !dbg !14160
  br label %kmalloc_index.exit.i, !dbg !14160

if.end38.i.i:                                     ; preds = %if.end35.i.i
  %44 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14161
  %cmp39.i.i = icmp ule i64 %44, 4096, !dbg !14162
  br i1 %cmp39.i.i, label %if.then40.i.i, label %if.end41.i.i, !dbg !14163

if.then40.i.i:                                    ; preds = %if.end38.i.i
  store i32 12, i32* %retval.i.i, align 4, !dbg !14164
  br label %kmalloc_index.exit.i, !dbg !14164

if.end41.i.i:                                     ; preds = %if.end38.i.i
  %45 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14165
  %cmp42.i.i = icmp ule i64 %45, 8192, !dbg !14166
  br i1 %cmp42.i.i, label %if.then43.i.i, label %if.end44.i.i, !dbg !14167

if.then43.i.i:                                    ; preds = %if.end41.i.i
  store i32 13, i32* %retval.i.i, align 4, !dbg !14168
  br label %kmalloc_index.exit.i, !dbg !14168

if.end44.i.i:                                     ; preds = %if.end41.i.i
  %46 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14169
  %cmp45.i.i = icmp ule i64 %46, 16384, !dbg !14170
  br i1 %cmp45.i.i, label %if.then46.i.i, label %if.end47.i.i, !dbg !14171

if.then46.i.i:                                    ; preds = %if.end44.i.i
  store i32 14, i32* %retval.i.i, align 4, !dbg !14172
  br label %kmalloc_index.exit.i, !dbg !14172

if.end47.i.i:                                     ; preds = %if.end44.i.i
  %47 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14173
  %cmp48.i.i = icmp ule i64 %47, 32768, !dbg !14174
  br i1 %cmp48.i.i, label %if.then49.i.i, label %if.end50.i.i, !dbg !14175

if.then49.i.i:                                    ; preds = %if.end47.i.i
  store i32 15, i32* %retval.i.i, align 4, !dbg !14176
  br label %kmalloc_index.exit.i, !dbg !14176

if.end50.i.i:                                     ; preds = %if.end47.i.i
  %48 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14177
  %cmp51.i.i = icmp ule i64 %48, 65536, !dbg !14178
  br i1 %cmp51.i.i, label %if.then52.i.i, label %if.end53.i.i, !dbg !14179

if.then52.i.i:                                    ; preds = %if.end50.i.i
  store i32 16, i32* %retval.i.i, align 4, !dbg !14180
  br label %kmalloc_index.exit.i, !dbg !14180

if.end53.i.i:                                     ; preds = %if.end50.i.i
  %49 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14181
  %cmp54.i.i = icmp ule i64 %49, 131072, !dbg !14182
  br i1 %cmp54.i.i, label %if.then55.i.i, label %if.end56.i.i, !dbg !14183

if.then55.i.i:                                    ; preds = %if.end53.i.i
  store i32 17, i32* %retval.i.i, align 4, !dbg !14184
  br label %kmalloc_index.exit.i, !dbg !14184

if.end56.i.i:                                     ; preds = %if.end53.i.i
  %50 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14185
  %cmp57.i.i = icmp ule i64 %50, 262144, !dbg !14186
  br i1 %cmp57.i.i, label %if.then58.i.i, label %if.end59.i.i, !dbg !14187

if.then58.i.i:                                    ; preds = %if.end56.i.i
  store i32 18, i32* %retval.i.i, align 4, !dbg !14188
  br label %kmalloc_index.exit.i, !dbg !14188

if.end59.i.i:                                     ; preds = %if.end56.i.i
  %51 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14189
  %cmp60.i.i = icmp ule i64 %51, 524288, !dbg !14190
  br i1 %cmp60.i.i, label %if.then61.i.i, label %if.end62.i.i, !dbg !14191

if.then61.i.i:                                    ; preds = %if.end59.i.i
  store i32 19, i32* %retval.i.i, align 4, !dbg !14192
  br label %kmalloc_index.exit.i, !dbg !14192

if.end62.i.i:                                     ; preds = %if.end59.i.i
  %52 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14193
  %cmp63.i.i = icmp ule i64 %52, 1048576, !dbg !14194
  br i1 %cmp63.i.i, label %if.then64.i.i, label %if.end65.i.i, !dbg !14195

if.then64.i.i:                                    ; preds = %if.end62.i.i
  store i32 20, i32* %retval.i.i, align 4, !dbg !14196
  br label %kmalloc_index.exit.i, !dbg !14196

if.end65.i.i:                                     ; preds = %if.end62.i.i
  %53 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14197
  %cmp66.i.i = icmp ule i64 %53, 2097152, !dbg !14198
  br i1 %cmp66.i.i, label %if.then67.i.i, label %if.end68.i.i, !dbg !14199

if.then67.i.i:                                    ; preds = %if.end65.i.i
  store i32 21, i32* %retval.i.i, align 4, !dbg !14200
  br label %kmalloc_index.exit.i, !dbg !14200

if.end68.i.i:                                     ; preds = %if.end65.i.i
  %54 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14201
  %cmp69.i.i = icmp ule i64 %54, 4194304, !dbg !14202
  br i1 %cmp69.i.i, label %if.then70.i.i, label %if.end71.i.i, !dbg !14203

if.then70.i.i:                                    ; preds = %if.end68.i.i
  store i32 22, i32* %retval.i.i, align 4, !dbg !14204
  br label %kmalloc_index.exit.i, !dbg !14204

if.end71.i.i:                                     ; preds = %if.end68.i.i
  %55 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14205
  %cmp72.i.i = icmp ule i64 %55, 8388608, !dbg !14206
  br i1 %cmp72.i.i, label %if.then73.i.i, label %if.end74.i.i, !dbg !14207

if.then73.i.i:                                    ; preds = %if.end71.i.i
  store i32 23, i32* %retval.i.i, align 4, !dbg !14208
  br label %kmalloc_index.exit.i, !dbg !14208

if.end74.i.i:                                     ; preds = %if.end71.i.i
  %56 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14209
  %cmp75.i.i = icmp ule i64 %56, 16777216, !dbg !14210
  br i1 %cmp75.i.i, label %if.then76.i.i, label %if.end77.i.i, !dbg !14211

if.then76.i.i:                                    ; preds = %if.end74.i.i
  store i32 24, i32* %retval.i.i, align 4, !dbg !14212
  br label %kmalloc_index.exit.i, !dbg !14212

if.end77.i.i:                                     ; preds = %if.end74.i.i
  %57 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14213
  %cmp78.i.i = icmp ule i64 %57, 33554432, !dbg !14214
  br i1 %cmp78.i.i, label %if.then79.i.i, label %if.end80.i.i, !dbg !14215

if.then79.i.i:                                    ; preds = %if.end77.i.i
  store i32 25, i32* %retval.i.i, align 4, !dbg !14216
  br label %kmalloc_index.exit.i, !dbg !14216

if.end80.i.i:                                     ; preds = %if.end77.i.i
  %58 = load i64, i64* %size.addr.i11.i, align 8, !dbg !14217
  %cmp81.i.i = icmp ule i64 %58, 67108864, !dbg !14218
  br i1 %cmp81.i.i, label %if.then82.i.i, label %if.end83.i.i, !dbg !14219

if.then82.i.i:                                    ; preds = %if.end80.i.i
  store i32 26, i32* %retval.i.i, align 4, !dbg !14220
  br label %kmalloc_index.exit.i, !dbg !14220

if.end83.i.i:                                     ; preds = %if.end80.i.i
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.113, i64 0, i64 0), i32 382, i32 0, i64 12) #7, !dbg !14221, !srcloc !6167
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 230) #7, !dbg !14222, !srcloc !6171
  unreachable, !dbg !14223

kmalloc_index.exit.i:                             ; preds = %if.then82.i.i, %if.then79.i.i, %if.then76.i.i, %if.then73.i.i, %if.then70.i.i, %if.then67.i.i, %if.then64.i.i, %if.then61.i.i, %if.then58.i.i, %if.then55.i.i, %if.then52.i.i, %if.then49.i.i, %if.then46.i.i, %if.then43.i.i, %if.then40.i.i, %if.then37.i.i, %if.then34.i.i, %if.then31.i.i, %if.then28.i.i, %if.then25.i.i, %if.then22.i.i, %if.then19.i.i, %if.then16.i.i, %if.then13.i.i, %if.then10.i.i, %if.then5.i.i, %if.then1.i.i, %if.then.i.i
  %59 = load i32, i32* %retval.i.i, align 4, !dbg !14224
  store i32 %59, i32* %index.i, align 4, !dbg !14225
  %60 = load i32, i32* %index.i, align 4, !dbg !14226
  %tobool.i = icmp ne i32 %60, 0, !dbg !14226
  br i1 %tobool.i, label %if.end4.i, label %if.then3.i, !dbg !14227

if.then3.i:                                       ; preds = %kmalloc_index.exit.i
  store i8* inttoptr (i64 16 to i8*), i8** %retval.i, align 8, !dbg !14228
  br label %kmalloc.exit, !dbg !14228

if.end4.i:                                        ; preds = %kmalloc_index.exit.i
  %61 = load i32, i32* %flags.addr.i, align 4, !dbg !14229
  store i32 %61, i32* %flags.addr.i13.i, align 4
  %62 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14230
  %and.i.i = and i32 %62, 17, !dbg !14230
  %cmp.i14.i = icmp eq i32 %and.i.i, 0, !dbg !14230
  %lnot.i.i = xor i1 %cmp.i14.i, true, !dbg !14230
  %lnot.ext.i.i = zext i1 %cmp.i14.i to i32, !dbg !14230
  %conv.i.i = sext i32 %lnot.ext.i.i to i64, !dbg !14230
  br i1 %cmp.i14.i, label %if.then.i15.i, label %if.end.i16.i, !dbg !14231

if.then.i15.i:                                    ; preds = %if.end4.i
  store i32 0, i32* %retval.i12.i, align 4, !dbg !14232
  br label %kmalloc_type.exit.i, !dbg !14232

if.end.i16.i:                                     ; preds = %if.end4.i
  %63 = load i32, i32* %flags.addr.i13.i, align 4, !dbg !14233
  %and2.i.i = and i32 %63, 1, !dbg !14234
  %tobool3.i.i = icmp ne i32 %and2.i.i, 0, !dbg !14233
  %64 = zext i1 %tobool3.i.i to i64, !dbg !14233
  %cond.i.i = select i1 %tobool3.i.i, i32 2, i32 1, !dbg !14233
  store i32 %cond.i.i, i32* %retval.i12.i, align 4, !dbg !14235
  br label %kmalloc_type.exit.i, !dbg !14235

kmalloc_type.exit.i:                              ; preds = %if.end.i16.i, %if.then.i15.i
  %65 = load i32, i32* %retval.i12.i, align 4, !dbg !14236
  %idxprom.i = zext i32 %65 to i64, !dbg !14237
  %arrayidx.i = getelementptr [3 x [14 x %struct.kmem_cache*]], [3 x [14 x %struct.kmem_cache*]]* @kmalloc_caches, i64 0, i64 %idxprom.i, !dbg !14237
  %66 = load i32, i32* %index.i, align 4, !dbg !14238
  %idxprom6.i = zext i32 %66 to i64, !dbg !14237
  %arrayidx7.i = getelementptr [14 x %struct.kmem_cache*], [14 x %struct.kmem_cache*]* %arrayidx.i, i64 0, i64 %idxprom6.i, !dbg !14237
  %67 = load %struct.kmem_cache*, %struct.kmem_cache** %arrayidx7.i, align 8, !dbg !14237
  %68 = load i32, i32* %flags.addr.i, align 4, !dbg !14239
  %69 = load i64, i64* %size.addr.i, align 8, !dbg !14240
  store %struct.kmem_cache* %67, %struct.kmem_cache** %s.addr.i.i, align 8
  store i32 %68, i32* %flags.addr.i17.i, align 4
  store i64 %69, i64* %size.addr.i18.i, align 8
  %70 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14241
  %71 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14242
  %call.i19.i = call noalias i8* @kmem_cache_alloc(%struct.kmem_cache* %70, i32 %71) #12, !dbg !14243
  %ptrint.i.i = ptrtoint i8* %call.i19.i to i64, !dbg !14243
  %maskedptr.i.i = and i64 %ptrint.i.i, 7, !dbg !14243
  %maskcond.i.i = icmp eq i64 %maskedptr.i.i, 0, !dbg !14243
  call void @llvm.assume(i1 %maskcond.i.i) #7, !dbg !14243
  store i8* %call.i19.i, i8** %ret.i.i, align 8, !dbg !14044
  %72 = load %struct.kmem_cache*, %struct.kmem_cache** %s.addr.i.i, align 8, !dbg !14244
  %73 = load i8*, i8** %ret.i.i, align 8, !dbg !14245
  %74 = load i64, i64* %size.addr.i18.i, align 8, !dbg !14246
  %75 = load i32, i32* %flags.addr.i17.i, align 4, !dbg !14247
  %call1.i.i = call i8* @kasan_kmalloc(%struct.kmem_cache* %72, i8* %73, i64 %74, i32 %75) #12, !dbg !14248
  store i8* %call1.i.i, i8** %ret.i.i, align 8, !dbg !14249
  %76 = load i8*, i8** %ret.i.i, align 8, !dbg !14250
  store i8* %76, i8** %retval.i, align 8, !dbg !14251
  br label %kmalloc.exit, !dbg !14251

if.end9.i:                                        ; preds = %if.then6
  %77 = load i64, i64* %size.addr.i, align 8, !dbg !14252
  %78 = load i32, i32* %flags.addr.i, align 4, !dbg !14253
  %call10.i = call noalias i8* @__kmalloc(i64 %77, i32 %78) #12, !dbg !14254
  %ptrint.i = ptrtoint i8* %call10.i to i64, !dbg !14254
  %maskedptr.i = and i64 %ptrint.i, 7, !dbg !14254
  %maskcond.i = icmp eq i64 %maskedptr.i, 0, !dbg !14254
  call void @llvm.assume(i1 %maskcond.i) #7, !dbg !14254
  store i8* %call10.i, i8** %retval.i, align 8, !dbg !14255
  br label %kmalloc.exit, !dbg !14255

kmalloc.exit:                                     ; preds = %if.then1.i, %if.then3.i, %kmalloc_type.exit.i, %if.end9.i
  %79 = load i8*, i8** %retval.i, align 8, !dbg !14256
  store i8* %79, i8** %retval, align 8, !dbg !14257
  br label %return, !dbg !14257

if.end8:                                          ; preds = %land.lhs.true, %if.end
  %80 = load i64, i64* %bytes, align 8, !dbg !14258
  %81 = load i32, i32* %flags.addr, align 4, !dbg !14259
  %call9 = call noalias i8* @__kmalloc(i64 %80, i32 %81) #11, !dbg !14260
  %ptrint = ptrtoint i8* %call9 to i64, !dbg !14260
  %maskedptr = and i64 %ptrint, 7, !dbg !14260
  %maskcond = icmp eq i64 %maskedptr, 0, !dbg !14260
  call void @llvm.assume(i1 %maskcond), !dbg !14260
  store i8* %call9, i8** %retval, align 8, !dbg !14261
  br label %return, !dbg !14261

return:                                           ; preds = %if.end8, %kmalloc.exit, %if.then
  %82 = load i8*, i8** %retval, align 8, !dbg !14262
  ret i8* %82, !dbg !14262
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__must_check_overflow(i1 zeroext %overflow) #0 !dbg !14263 {
entry:
  %overflow.addr = alloca i8, align 1
  %frombool = zext i1 %overflow to i8
  store i8 %frombool, i8* %overflow.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %overflow.addr, metadata !14266, metadata !DIExpression()), !dbg !14267
  %0 = load i8, i8* %overflow.addr, align 1, !dbg !14268
  %tobool = trunc i8 %0 to i1, !dbg !14268
  %lnot = xor i1 %tobool, true, !dbg !14268
  %lnot1 = xor i1 %lnot, true, !dbg !14268
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !14268
  %conv = sext i32 %lnot.ext to i64, !dbg !14268
  %tobool2 = icmp ne i64 %conv, 0, !dbg !14268
  ret i1 %tobool2, !dbg !14269
}

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #1

; Function Attrs: noredzone
declare dso_local noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind willreturn
declare void @llvm.assume(i1) #9

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14270 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14273, metadata !DIExpression()), !dbg !14274
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14275, metadata !DIExpression()), !dbg !14276
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14277, metadata !DIExpression()), !dbg !14278
  %0 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14279
  %1 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14281
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14282
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2) #11, !dbg !14283
  br i1 %call, label %if.end, label %if.then, !dbg !14284

if.then:                                          ; preds = %entry
  br label %do.end8, !dbg !14285

if.end:                                           ; preds = %entry
  %3 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14286
  %4 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14287
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %4, i32 0, i32 1, !dbg !14288
  store %struct.list_head* %3, %struct.list_head** %prev1, align 8, !dbg !14289
  %5 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14290
  %6 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14291
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %6, i32 0, i32 0, !dbg !14292
  store %struct.list_head* %5, %struct.list_head** %next2, align 8, !dbg !14293
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14294
  %8 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14295
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %8, i32 0, i32 1, !dbg !14296
  store %struct.list_head* %7, %struct.list_head** %prev3, align 8, !dbg !14297
  br label %do.body, !dbg !14298

do.body:                                          ; preds = %if.end
  br label %do.body4, !dbg !14299

do.body4:                                         ; preds = %do.body
  br label %do.end, !dbg !14301

do.end:                                           ; preds = %do.body4
  br label %do.body5, !dbg !14299

do.body5:                                         ; preds = %do.end
  %9 = load %struct.list_head*, %struct.list_head** %new.addr, align 8, !dbg !14303
  %10 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14303
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %10, i32 0, i32 0, !dbg !14303
  store volatile %struct.list_head* %9, %struct.list_head** %next6, align 8, !dbg !14303
  br label %do.end7, !dbg !14303

do.end7:                                          ; preds = %do.body5
  br label %do.end8, !dbg !14299

do.end8:                                          ; preds = %if.then, %do.end7
  ret void, !dbg !14305
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14306 {
entry:
  %new.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %new, %struct.list_head** %new.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %new.addr, metadata !14309, metadata !DIExpression()), !dbg !14310
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14311, metadata !DIExpression()), !dbg !14312
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14313, metadata !DIExpression()), !dbg !14314
  ret i1 true, !dbg !14315
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @__phys_addr_nodebug(i64 %x) #0 !dbg !14316 {
entry:
  %x.addr = alloca i64, align 8
  %y = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !14318, metadata !DIExpression()), !dbg !14319
  call void @llvm.dbg.declare(metadata i64* %y, metadata !14320, metadata !DIExpression()), !dbg !14321
  %0 = load i64, i64* %x.addr, align 8, !dbg !14322
  %sub = sub i64 %0, -2147483648, !dbg !14323
  store i64 %sub, i64* %y, align 8, !dbg !14321
  %1 = load i64, i64* %y, align 8, !dbg !14324
  %2 = load i64, i64* %x.addr, align 8, !dbg !14325
  %3 = load i64, i64* %y, align 8, !dbg !14326
  %cmp = icmp ugt i64 %2, %3, !dbg !14327
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14328

cond.true:                                        ; preds = %entry
  %4 = load i64, i64* @phys_base, align 8, !dbg !14329
  br label %cond.end, !dbg !14328

cond.false:                                       ; preds = %entry
  %5 = load i64, i64* @page_offset_base, align 8, !dbg !14330
  %sub1 = sub i64 -2147483648, %5, !dbg !14331
  br label %cond.end, !dbg !14328

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %4, %cond.true ], [ %sub1, %cond.false ], !dbg !14328
  %add = add i64 %1, %cond, !dbg !14332
  store i64 %add, i64* %x.addr, align 8, !dbg !14333
  %6 = load i64, i64* %x.addr, align 8, !dbg !14334
  ret i64 %6, !dbg !14335
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @sg_assign_page(%struct.scatterlist* %sg, %struct.page* %page) #0 !dbg !14336 {
entry:
  %sg.addr = alloca %struct.scatterlist*, align 8
  %page.addr = alloca %struct.page*, align 8
  %page_link = alloca i64, align 8
  store %struct.scatterlist* %sg, %struct.scatterlist** %sg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.scatterlist** %sg.addr, metadata !14339, metadata !DIExpression()), !dbg !14340
  store %struct.page* %page, %struct.page** %page.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.page** %page.addr, metadata !14341, metadata !DIExpression()), !dbg !14342
  call void @llvm.dbg.declare(metadata i64* %page_link, metadata !14343, metadata !DIExpression()), !dbg !14344
  %0 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !14345
  %page_link1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0, !dbg !14346
  %1 = load i64, i64* %page_link1, align 8, !dbg !14346
  %and = and i64 %1, 3, !dbg !14347
  store i64 %and, i64* %page_link, align 8, !dbg !14344
  br label %do.body, !dbg !14348

do.body:                                          ; preds = %entry
  %2 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14349
  %3 = ptrtoint %struct.page* %2 to i64, !dbg !14349
  %and2 = and i64 %3, 3, !dbg !14349
  %tobool = icmp ne i64 %and2, 0, !dbg !14349
  %lnot = xor i1 %tobool, true, !dbg !14349
  %lnot3 = xor i1 %lnot, true, !dbg !14349
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !14349
  %conv = sext i32 %lnot.ext to i64, !dbg !14349
  %tobool4 = icmp ne i64 %conv, 0, !dbg !14349
  br i1 %tobool4, label %if.then, label %if.end, !dbg !14352

if.then:                                          ; preds = %do.body
  br label %do.body5, !dbg !14349

do.body5:                                         ; preds = %if.then
  br label %do.body6, !dbg !14353

do.body6:                                         ; preds = %do.body5
  br label %do.end, !dbg !14355

do.end:                                           ; preds = %do.body6
  br label %do.body7, !dbg !14353

do.body7:                                         ; preds = %do.end
  call void asm sideeffect "1:\09.byte 0x0f, 0x0b\0A.pushsection __bug_table,\22aw\22\0A2:\09.long 1b - 2b\09# bug_entry::bug_addr\0A\09.long ${0:c} - 2b\09# bug_entry::file\0A\09.word ${1:c}\09# bug_entry::line\0A\09.word ${2:c}\09# bug_entry::flags\0A\09.org 2b+${3:c}\0A.popsection", "i,i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.64, i64 0, i64 0), i32 95, i32 0, i64 12) #7, !dbg !14357, !srcloc !14359
  br label %do.end8, !dbg !14357

do.end8:                                          ; preds = %do.body7
  br label %do.body9, !dbg !14353

do.body9:                                         ; preds = %do.end8
  call void asm sideeffect "${0:c}:\0A\09.pushsection .discard.unreachable\0A\09.long ${0:c}b - .\0A\09.popsection\0A\09", "i,~{dirflag},~{fpsr},~{flags}"(i32 222) #7, !dbg !14360, !srcloc !14363
  unreachable, !dbg !14364

do.end10:                                         ; No predecessors!
  br label %do.end11, !dbg !14353

do.end11:                                         ; preds = %do.end10
  br label %if.end, !dbg !14353

if.end:                                           ; preds = %do.end11, %do.body
  br label %do.end12, !dbg !14352

do.end12:                                         ; preds = %if.end
  %4 = load i64, i64* %page_link, align 8, !dbg !14365
  %5 = load %struct.page*, %struct.page** %page.addr, align 8, !dbg !14366
  %6 = ptrtoint %struct.page* %5 to i64, !dbg !14367
  %or = or i64 %4, %6, !dbg !14368
  %7 = load %struct.scatterlist*, %struct.scatterlist** %sg.addr, align 8, !dbg !14369
  %page_link13 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %7, i32 0, i32 0, !dbg !14370
  store i64 %or, i64* %page_link13, align 8, !dbg !14371
  ret void, !dbg !14372
}

; Function Attrs: nounwind readnone willreturn
declare i1 @llvm.is.constant.i32(i32) #8

; Function Attrs: noredzone
declare dso_local void @__bad_ndelay() #2

; Function Attrs: noredzone
declare dso_local void @__const_udelay(i64) #2

; Function Attrs: noredzone
declare dso_local void @__ndelay(i64) #2

; Function Attrs: noredzone
declare dso_local void @__bad_udelay() #2

; Function Attrs: noredzone
declare dso_local void @__udelay(i64) #2

; Function Attrs: noredzone
declare dso_local void @usleep_range(i64, i64) #2

; Function Attrs: noredzone
declare dso_local void @ktime_get_real_ts64(%struct.timespec64*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_unmap_msg(%struct.spi_controller* %ctlr, %struct.spi_message* %msg) #0 !dbg !14373 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %tx_dev = alloca %struct.device*, align 8
  %rx_dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_transfer*, align 8
  %__mptr20 = alloca i8*, align 8
  %tmp25 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !14374, metadata !DIExpression()), !dbg !14375
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !14376, metadata !DIExpression()), !dbg !14377
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !14378, metadata !DIExpression()), !dbg !14379
  call void @llvm.dbg.declare(metadata %struct.device** %tx_dev, metadata !14380, metadata !DIExpression()), !dbg !14381
  call void @llvm.dbg.declare(metadata %struct.device** %rx_dev, metadata !14382, metadata !DIExpression()), !dbg !14383
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14384
  %cur_msg_mapped = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 35, !dbg !14386
  %1 = load i8, i8* %cur_msg_mapped, align 2, !dbg !14386
  %tobool = trunc i8 %1 to i1, !dbg !14386
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14387

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14388
  %can_dma = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 22, !dbg !14389
  %3 = load i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %can_dma, align 8, !dbg !14389
  %tobool1 = icmp ne i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)* %3, null, !dbg !14388
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14390

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !14391
  br label %return, !dbg !14391

if.end:                                           ; preds = %lor.lhs.false
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14392
  %dma_tx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 60, !dbg !14394
  %5 = load %struct.dma_chan*, %struct.dma_chan** %dma_tx, align 8, !dbg !14394
  %tobool2 = icmp ne %struct.dma_chan* %5, null, !dbg !14392
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !14395

if.then3:                                         ; preds = %if.end
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14396
  %dma_tx4 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %6, i32 0, i32 60, !dbg !14397
  %7 = load %struct.dma_chan*, %struct.dma_chan** %dma_tx4, align 8, !dbg !14397
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %7, i32 0, i32 0, !dbg !14398
  %8 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !14398
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %8, i32 0, i32 15, !dbg !14399
  %9 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14399
  store %struct.device* %9, %struct.device** %tx_dev, align 8, !dbg !14400
  br label %if.end6, !dbg !14401

if.else:                                          ; preds = %if.end
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14402
  %dev5 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 0, !dbg !14403
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev5, i32 0, i32 1, !dbg !14404
  %11 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14404
  store %struct.device* %11, %struct.device** %tx_dev, align 8, !dbg !14405
  br label %if.end6

if.end6:                                          ; preds = %if.else, %if.then3
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14406
  %dma_rx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 61, !dbg !14408
  %13 = load %struct.dma_chan*, %struct.dma_chan** %dma_rx, align 8, !dbg !14408
  %tobool7 = icmp ne %struct.dma_chan* %13, null, !dbg !14406
  br i1 %tobool7, label %if.then8, label %if.else12, !dbg !14409

if.then8:                                         ; preds = %if.end6
  %14 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14410
  %dma_rx9 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %14, i32 0, i32 61, !dbg !14411
  %15 = load %struct.dma_chan*, %struct.dma_chan** %dma_rx9, align 8, !dbg !14411
  %device10 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %15, i32 0, i32 0, !dbg !14412
  %16 = load %struct.dma_device*, %struct.dma_device** %device10, align 8, !dbg !14412
  %dev11 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %16, i32 0, i32 15, !dbg !14413
  %17 = load %struct.device*, %struct.device** %dev11, align 8, !dbg !14413
  store %struct.device* %17, %struct.device** %rx_dev, align 8, !dbg !14414
  br label %if.end15, !dbg !14415

if.else12:                                        ; preds = %if.end6
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14416
  %dev13 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 0, !dbg !14417
  %parent14 = getelementptr inbounds %struct.device, %struct.device* %dev13, i32 0, i32 1, !dbg !14418
  %19 = load %struct.device*, %struct.device** %parent14, align 8, !dbg !14418
  store %struct.device* %19, %struct.device** %rx_dev, align 8, !dbg !14419
  br label %if.end15

if.end15:                                         ; preds = %if.else12, %if.then8
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14420, metadata !DIExpression()), !dbg !14423
  %20 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14423
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %20, i32 0, i32 0, !dbg !14423
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !14423
  %21 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14423
  %22 = bitcast %struct.list_head* %21 to i8*, !dbg !14423
  store i8* %22, i8** %__mptr, align 8, !dbg !14423
  br label %do.body, !dbg !14423

do.body:                                          ; preds = %if.end15
  br label %do.end, !dbg !14424

do.end:                                           ; preds = %do.body
  %23 = load i8*, i8** %__mptr, align 8, !dbg !14423
  %add.ptr = getelementptr i8, i8* %23, i64 -120, !dbg !14423
  %24 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !14423
  store %struct.spi_transfer* %24, %struct.spi_transfer** %tmp, align 8, !dbg !14424
  %25 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp, align 8, !dbg !14423
  store %struct.spi_transfer* %25, %struct.spi_transfer** %xfer, align 8, !dbg !14426
  br label %for.cond, !dbg !14426

for.cond:                                         ; preds = %do.end24, %do.end
  %26 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14427
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %26, i32 0, i32 19, !dbg !14427
  %27 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14427
  %transfers16 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %27, i32 0, i32 0, !dbg !14427
  %cmp = icmp eq %struct.list_head* %transfer_list, %transfers16, !dbg !14427
  %lnot = xor i1 %cmp, true, !dbg !14427
  br i1 %lnot, label %for.body, label %for.end, !dbg !14426

for.body:                                         ; preds = %for.cond
  %28 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14429
  %can_dma17 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %28, i32 0, i32 22, !dbg !14432
  %29 = load i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %can_dma17, align 8, !dbg !14432
  %30 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14433
  %31 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14434
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %31, i32 0, i32 1, !dbg !14435
  %32 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !14435
  %33 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14436
  %call = call zeroext i1 %29(%struct.spi_controller* %30, %struct.spi_device* %32, %struct.spi_transfer* %33) #11, !dbg !14429
  br i1 %call, label %if.end19, label %if.then18, !dbg !14437

if.then18:                                        ; preds = %for.body
  br label %for.inc, !dbg !14438

if.end19:                                         ; preds = %for.body
  %34 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14439
  %35 = load %struct.device*, %struct.device** %rx_dev, align 8, !dbg !14440
  %36 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14441
  %rx_sg = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %36, i32 0, i32 6, !dbg !14442
  call void @spi_unmap_buf(%struct.spi_controller* %34, %struct.device* %35, %struct.sg_table* %rx_sg, i32 2) #11, !dbg !14443
  %37 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14444
  %38 = load %struct.device*, %struct.device** %tx_dev, align 8, !dbg !14445
  %39 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14446
  %tx_sg = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %39, i32 0, i32 5, !dbg !14447
  call void @spi_unmap_buf(%struct.spi_controller* %37, %struct.device* %38, %struct.sg_table* %tx_sg, i32 1) #11, !dbg !14448
  br label %for.inc, !dbg !14449

for.inc:                                          ; preds = %if.end19, %if.then18
  call void @llvm.dbg.declare(metadata i8** %__mptr20, metadata !14450, metadata !DIExpression()), !dbg !14452
  %40 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14452
  %transfer_list21 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %40, i32 0, i32 19, !dbg !14452
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list21, i32 0, i32 0, !dbg !14452
  %41 = load %struct.list_head*, %struct.list_head** %next22, align 8, !dbg !14452
  %42 = bitcast %struct.list_head* %41 to i8*, !dbg !14452
  store i8* %42, i8** %__mptr20, align 8, !dbg !14452
  br label %do.body23, !dbg !14452

do.body23:                                        ; preds = %for.inc
  br label %do.end24, !dbg !14453

do.end24:                                         ; preds = %do.body23
  %43 = load i8*, i8** %__mptr20, align 8, !dbg !14452
  %add.ptr26 = getelementptr i8, i8* %43, i64 -120, !dbg !14452
  %44 = bitcast i8* %add.ptr26 to %struct.spi_transfer*, !dbg !14452
  store %struct.spi_transfer* %44, %struct.spi_transfer** %tmp25, align 8, !dbg !14453
  %45 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp25, align 8, !dbg !14452
  store %struct.spi_transfer* %45, %struct.spi_transfer** %xfer, align 8, !dbg !14427
  br label %for.cond, !dbg !14427, !llvm.loop !14455

for.end:                                          ; preds = %for.cond
  %46 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14457
  %cur_msg_mapped27 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %46, i32 0, i32 35, !dbg !14458
  store i8 0, i8* %cur_msg_mapped27, align 2, !dbg !14459
  store i32 0, i32* %retval, align 4, !dbg !14460
  br label %return, !dbg !14460

return:                                           ; preds = %for.end, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !14461
  ret i32 %47, !dbg !14461
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_queued_transfer(%struct.spi_device* %spi, %struct.spi_message* %msg, i1 zeroext %need_pump) #0 !dbg !14462 {
entry:
  %lock.addr.i30 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i30, metadata !5420, metadata !DIExpression()), !dbg !14465
  %flags.addr.i31 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i31, metadata !5427, metadata !DIExpression()), !dbg !14469
  %tmp.i32 = alloca i32, align 4
  %tmp8.i33 = alloca i32, align 4
  %lock.addr.i28 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i28, metadata !5420, metadata !DIExpression()), !dbg !14470
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !14472
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !14473
  %retval = alloca i32, align 4
  %spi.addr = alloca %struct.spi_device*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %need_pump.addr = alloca i8, align 1
  %ctlr = alloca %struct.spi_controller*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %tmp9 = alloca i32, align 4
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !14480, metadata !DIExpression()), !dbg !14481
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !14482, metadata !DIExpression()), !dbg !14483
  %frombool = zext i1 %need_pump to i8
  store i8 %frombool, i8* %need_pump.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %need_pump.addr, metadata !14484, metadata !DIExpression()), !dbg !14485
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !14486, metadata !DIExpression()), !dbg !14487
  %0 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !14488
  %controller = getelementptr inbounds %struct.spi_device, %struct.spi_device* %0, i32 0, i32 1, !dbg !14489
  %1 = load %struct.spi_controller*, %struct.spi_controller** %controller, align 8, !dbg !14489
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !14487
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !14490, metadata !DIExpression()), !dbg !14491
  br label %do.body, !dbg !14492

do.body:                                          ; preds = %entry
  br label %do.body1, !dbg !14493

do.body1:                                         ; preds = %do.body
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !14494, metadata !DIExpression()), !dbg !14496
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !14497, metadata !DIExpression()), !dbg !14496
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !14496
  %conv = zext i1 %cmp to i32, !dbg !14496
  store i32 1, i32* %tmp, align 4, !dbg !14496
  %2 = load i32, i32* %tmp, align 4, !dbg !14496
  br label %do.body2, !dbg !14498

do.body2:                                         ; preds = %do.body1
  br label %do.body3, !dbg !14499

do.body3:                                         ; preds = %do.body2
  br label %do.body4, !dbg !14500

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy5, metadata !14502, metadata !DIExpression()), !dbg !14505
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !14506, metadata !DIExpression()), !dbg !14505
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26, !dbg !14505
  %conv8 = zext i1 %cmp7 to i32, !dbg !14505
  store i32 1, i32* %tmp9, align 4, !dbg !14505
  %3 = load i32, i32* %tmp9, align 4, !dbg !14505
  %call = call i64 @arch_local_irq_save() #11, !dbg !14507
  store i64 %call, i64* %flags, align 8, !dbg !14507
  br label %do.end, !dbg !14507

do.end:                                           ; preds = %do.body4
  br label %do.end10, !dbg !14500

do.end10:                                         ; preds = %do.end
  br label %do.body11, !dbg !14499

do.body11:                                        ; preds = %do.end10
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14508, !srcloc !14509
  br label %do.body12, !dbg !14508

do.body12:                                        ; preds = %do.body11
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14510
  %queue_lock = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 26, !dbg !14510
  store %struct.spinlock* %queue_lock, %struct.spinlock** %lock.addr.i, align 8
  %5 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !14511
  %6 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %5, i32 0, i32 0, !dbg !14512
  %rlock.i = bitcast %union.anon* %6 to %struct.raw_spinlock*, !dbg !14512
  br label %do.end14, !dbg !14510

do.end14:                                         ; preds = %do.body12
  br label %do.end15, !dbg !14508

do.end15:                                         ; preds = %do.end14
  br label %do.end16, !dbg !14499

do.end16:                                         ; preds = %do.end15
  br label %do.end17, !dbg !14498

do.end17:                                         ; preds = %do.end16
  br label %do.end18, !dbg !14493

do.end18:                                         ; preds = %do.end17
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14513
  %running = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 31, !dbg !14514
  %8 = load i8, i8* %running, align 2, !dbg !14514
  %tobool = trunc i8 %8 to i1, !dbg !14514
  br i1 %tobool, label %if.end, label %if.then, !dbg !14515

if.then:                                          ; preds = %do.end18
  %9 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14516
  %queue_lock19 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %9, i32 0, i32 26, !dbg !14517
  %10 = load i64, i64* %flags, align 8, !dbg !14518
  store %struct.spinlock* %queue_lock19, %struct.spinlock** %lock.addr.i30, align 8
  store i64 %10, i64* %flags.addr.i31, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !14519
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !14519
  store i32 1, i32* %tmp.i32, align 4, !dbg !14519
  %11 = load i32, i32* %tmp.i32, align 4, !dbg !14519
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !14520
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !14520
  store i32 1, i32* %tmp8.i33, align 4, !dbg !14520
  %12 = load i32, i32* %tmp8.i33, align 4, !dbg !14520
  %13 = load i64, i64* %flags.addr.i31, align 8, !dbg !14521
  call void @arch_local_irq_restore(i64 %13) #12, !dbg !14521
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14522, !srcloc !5559
  %14 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i30, align 8, !dbg !14523
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0, !dbg !14523
  %rlock.i34 = bitcast %union.anon* %15 to %struct.raw_spinlock*, !dbg !14523
  store i32 -108, i32* %retval, align 4, !dbg !14524
  br label %return, !dbg !14524

if.end:                                           ; preds = %do.end18
  %16 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14525
  %actual_length = getelementptr inbounds %struct.spi_message, %struct.spi_message* %16, i32 0, i32 6, !dbg !14526
  store i32 0, i32* %actual_length, align 4, !dbg !14527
  %17 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14528
  %status = getelementptr inbounds %struct.spi_message, %struct.spi_message* %17, i32 0, i32 7, !dbg !14529
  store i32 -115, i32* %status, align 8, !dbg !14530
  %18 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14531
  %queue = getelementptr inbounds %struct.spi_message, %struct.spi_message* %18, i32 0, i32 8, !dbg !14532
  %19 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14533
  %queue20 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %19, i32 0, i32 27, !dbg !14534
  call void @list_add_tail(%struct.list_head* %queue, %struct.list_head* %queue20) #11, !dbg !14535
  %20 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14536
  %busy = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %20, i32 0, i32 30, !dbg !14538
  %21 = load i8, i8* %busy, align 1, !dbg !14538
  %tobool21 = trunc i8 %21 to i1, !dbg !14538
  br i1 %tobool21, label %if.end26, label %land.lhs.true, !dbg !14539

land.lhs.true:                                    ; preds = %if.end
  %22 = load i8, i8* %need_pump.addr, align 1, !dbg !14540
  %tobool22 = trunc i8 %22 to i1, !dbg !14540
  br i1 %tobool22, label %if.then24, label %if.end26, !dbg !14541

if.then24:                                        ; preds = %land.lhs.true
  %23 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14542
  %kworker = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %23, i32 0, i32 24, !dbg !14543
  %24 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker, align 8, !dbg !14543
  %25 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14544
  %pump_messages = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %25, i32 0, i32 25, !dbg !14545
  %call25 = call zeroext i1 @kthread_queue_work(%struct.kthread_worker* %24, %struct.kthread_work* %pump_messages) #11, !dbg !14546
  br label %if.end26, !dbg !14546

if.end26:                                         ; preds = %if.then24, %land.lhs.true, %if.end
  %26 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14547
  %queue_lock27 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %26, i32 0, i32 26, !dbg !14548
  %27 = load i64, i64* %flags, align 8, !dbg !14549
  store %struct.spinlock* %queue_lock27, %struct.spinlock** %lock.addr.i28, align 8
  store i64 %27, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !14550
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !14550
  store i32 1, i32* %tmp.i, align 4, !dbg !14550
  %28 = load i32, i32* %tmp.i, align 4, !dbg !14550
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !14551
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !14551
  store i32 1, i32* %tmp8.i, align 4, !dbg !14551
  %29 = load i32, i32* %tmp8.i, align 4, !dbg !14551
  %30 = load i64, i64* %flags.addr.i, align 8, !dbg !14552
  call void @arch_local_irq_restore(i64 %30) #12, !dbg !14552
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !14553, !srcloc !5559
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i28, align 8, !dbg !14554
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !14554
  %rlock.i29 = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !14554
  store i32 0, i32* %retval, align 4, !dbg !14555
  br label %return, !dbg !14555

return:                                           ; preds = %if.end26, %if.then
  %33 = load i32, i32* %retval, align 4, !dbg !14556
  ret i32 %33, !dbg !14556
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_idle_runtime_pm(%struct.spi_controller* %ctlr) #0 !dbg !14557 {
entry:
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !14558, metadata !DIExpression()), !dbg !14559
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14560
  %auto_runtime_pm = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 33, !dbg !14562
  %1 = load i8, i8* %auto_runtime_pm, align 4, !dbg !14562
  %tobool = trunc i8 %1 to i1, !dbg !14562
  br i1 %tobool, label %if.then, label %if.end, !dbg !14563

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14564
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 0, !dbg !14566
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !14567
  %3 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14567
  call void @pm_runtime_mark_last_busy(%struct.device* %3) #11, !dbg !14568
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14569
  %dev1 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 0, !dbg !14570
  %parent2 = getelementptr inbounds %struct.device, %struct.device* %dev1, i32 0, i32 1, !dbg !14571
  %5 = load %struct.device*, %struct.device** %parent2, align 8, !dbg !14571
  %call = call i32 @pm_runtime_put_autosuspend(%struct.device* %5) #11, !dbg !14572
  br label %if.end, !dbg !14573

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !14574
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_spi_controller_idle(%struct.spi_controller* %controller) #0 !dbg !14575 {
entry:
  %controller.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %controller, %struct.spi_controller** %controller.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %controller.addr, metadata !14576, metadata !DIExpression()), !dbg !14577
  ret void, !dbg !14577
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @list_del_init(%struct.list_head* %entry1) #0 !dbg !14578 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14579, metadata !DIExpression()), !dbg !14580
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14581
  call void @__list_del_entry(%struct.list_head* %0) #11, !dbg !14582
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14583
  call void @INIT_LIST_HEAD(%struct.list_head* %1) #11, !dbg !14584
  ret void, !dbg !14585
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_spi_controller_busy(%struct.spi_controller* %controller) #0 !dbg !14586 {
entry:
  %controller.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %controller, %struct.spi_controller** %controller.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %controller.addr, metadata !14587, metadata !DIExpression()), !dbg !14588
  ret void, !dbg !14588
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @pm_runtime_put(%struct.device* %dev) #0 !dbg !14589 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14590, metadata !DIExpression()), !dbg !14591
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14592
  %call = call i32 @__pm_runtime_idle(%struct.device* %0, i32 5) #11, !dbg !14593
  ret i32 %call, !dbg !14594
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_spi_message_start(%struct.spi_message* %msg) #0 !dbg !14595 {
entry:
  %msg.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !14596, metadata !DIExpression()), !dbg !14597
  ret void, !dbg !14597
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_map_msg(%struct.spi_controller* %ctlr, %struct.spi_message* %msg) #0 !dbg !14598 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %tmp = alloca i8*, align 8
  %max_tx = alloca i32, align 4
  %max_rx = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp3 = alloca %struct.spi_transfer*, align 8
  %__UNIQUE_ID___x316 = alloca i32, align 4
  %__UNIQUE_ID___y317 = alloca i32, align 4
  %tmp13 = alloca i32, align 4
  %__UNIQUE_ID___x318 = alloca i32, align 4
  %__UNIQUE_ID___y319 = alloca i32, align 4
  %tmp24 = alloca i32, align 4
  %__mptr32 = alloca i8*, align 8
  %tmp37 = alloca %struct.spi_transfer*, align 8
  %__mptr60 = alloca i8*, align 8
  %tmp65 = alloca %struct.spi_transfer*, align 8
  %__mptr91 = alloca i8*, align 8
  %tmp96 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !14599, metadata !DIExpression()), !dbg !14600
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !14601, metadata !DIExpression()), !dbg !14602
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !14603, metadata !DIExpression()), !dbg !14604
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !14605, metadata !DIExpression()), !dbg !14606
  call void @llvm.dbg.declare(metadata i32* %max_tx, metadata !14607, metadata !DIExpression()), !dbg !14608
  call void @llvm.dbg.declare(metadata i32* %max_rx, metadata !14609, metadata !DIExpression()), !dbg !14610
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14611
  %flags = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 10, !dbg !14613
  %1 = load i16, i16* %flags, align 4, !dbg !14613
  %conv = zext i16 %1 to i64, !dbg !14611
  %and = and i64 %conv, 24, !dbg !14614
  %tobool = icmp ne i64 %and, 0, !dbg !14614
  br i1 %tobool, label %land.lhs.true, label %if.end100, !dbg !14615

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14616
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %2, i32 0, i32 1, !dbg !14617
  %3 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !14617
  %mode = getelementptr inbounds %struct.spi_device, %struct.spi_device* %3, i32 0, i32 7, !dbg !14618
  %4 = load i32, i32* %mode, align 8, !dbg !14618
  %and1 = and i32 %4, 16, !dbg !14619
  %tobool2 = icmp ne i32 %and1, 0, !dbg !14619
  br i1 %tobool2, label %if.end100, label %if.then, !dbg !14620

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %max_tx, align 4, !dbg !14621
  store i32 0, i32* %max_rx, align 4, !dbg !14623
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14624, metadata !DIExpression()), !dbg !14627
  %5 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14627
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %5, i32 0, i32 0, !dbg !14627
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !14627
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14627
  %7 = bitcast %struct.list_head* %6 to i8*, !dbg !14627
  store i8* %7, i8** %__mptr, align 8, !dbg !14627
  br label %do.body, !dbg !14627

do.body:                                          ; preds = %if.then
  br label %do.end, !dbg !14628

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !14627
  %add.ptr = getelementptr i8, i8* %8, i64 -120, !dbg !14627
  %9 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !14627
  store %struct.spi_transfer* %9, %struct.spi_transfer** %tmp3, align 8, !dbg !14628
  %10 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp3, align 8, !dbg !14627
  store %struct.spi_transfer* %10, %struct.spi_transfer** %xfer, align 8, !dbg !14630
  br label %for.cond, !dbg !14630

for.cond:                                         ; preds = %do.end36, %do.end
  %11 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14631
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %11, i32 0, i32 19, !dbg !14631
  %12 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14631
  %transfers4 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %12, i32 0, i32 0, !dbg !14631
  %cmp = icmp eq %struct.list_head* %transfer_list, %transfers4, !dbg !14631
  %lnot = xor i1 %cmp, true, !dbg !14631
  br i1 %lnot, label %for.body, label %for.end, !dbg !14630

for.body:                                         ; preds = %for.cond
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14633
  %flags6 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %13, i32 0, i32 10, !dbg !14636
  %14 = load i16, i16* %flags6, align 4, !dbg !14636
  %conv7 = zext i16 %14 to i64, !dbg !14633
  %and8 = and i64 %conv7, 16, !dbg !14637
  %tobool9 = icmp ne i64 %and8, 0, !dbg !14637
  br i1 %tobool9, label %land.lhs.true10, label %if.end, !dbg !14638

land.lhs.true10:                                  ; preds = %for.body
  %15 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14639
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %15, i32 0, i32 0, !dbg !14640
  %16 = load i8*, i8** %tx_buf, align 8, !dbg !14640
  %tobool11 = icmp ne i8* %16, null, !dbg !14639
  br i1 %tobool11, label %if.end, label %if.then12, !dbg !14641

if.then12:                                        ; preds = %land.lhs.true10
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x316, metadata !14642, metadata !DIExpression()), !dbg !14644
  %17 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14644
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %17, i32 0, i32 2, !dbg !14644
  %18 = load i32, i32* %len, align 8, !dbg !14644
  store i32 %18, i32* %__UNIQUE_ID___x316, align 4, !dbg !14644
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y317, metadata !14645, metadata !DIExpression()), !dbg !14644
  %19 = load i32, i32* %max_tx, align 4, !dbg !14644
  store i32 %19, i32* %__UNIQUE_ID___y317, align 4, !dbg !14644
  %20 = load i32, i32* %__UNIQUE_ID___x316, align 4, !dbg !14644
  %21 = load i32, i32* %__UNIQUE_ID___y317, align 4, !dbg !14644
  %cmp14 = icmp ugt i32 %20, %21, !dbg !14644
  br i1 %cmp14, label %cond.true, label %cond.false, !dbg !14644

cond.true:                                        ; preds = %if.then12
  %22 = load i32, i32* %__UNIQUE_ID___x316, align 4, !dbg !14644
  br label %cond.end, !dbg !14644

cond.false:                                       ; preds = %if.then12
  %23 = load i32, i32* %__UNIQUE_ID___y317, align 4, !dbg !14644
  br label %cond.end, !dbg !14644

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %22, %cond.true ], [ %23, %cond.false ], !dbg !14644
  store i32 %cond, i32* %tmp13, align 4, !dbg !14644
  %24 = load i32, i32* %tmp13, align 4, !dbg !14644
  store i32 %24, i32* %max_tx, align 4, !dbg !14646
  br label %if.end, !dbg !14647

if.end:                                           ; preds = %cond.end, %land.lhs.true10, %for.body
  %25 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14648
  %flags16 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %25, i32 0, i32 10, !dbg !14650
  %26 = load i16, i16* %flags16, align 4, !dbg !14650
  %conv17 = zext i16 %26 to i64, !dbg !14648
  %and18 = and i64 %conv17, 8, !dbg !14651
  %tobool19 = icmp ne i64 %and18, 0, !dbg !14651
  br i1 %tobool19, label %land.lhs.true20, label %if.end31, !dbg !14652

land.lhs.true20:                                  ; preds = %if.end
  %27 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14653
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %27, i32 0, i32 1, !dbg !14654
  %28 = load i8*, i8** %rx_buf, align 8, !dbg !14654
  %tobool21 = icmp ne i8* %28, null, !dbg !14653
  br i1 %tobool21, label %if.end31, label %if.then22, !dbg !14655

if.then22:                                        ; preds = %land.lhs.true20
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___x318, metadata !14656, metadata !DIExpression()), !dbg !14658
  %29 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14658
  %len23 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %29, i32 0, i32 2, !dbg !14658
  %30 = load i32, i32* %len23, align 8, !dbg !14658
  store i32 %30, i32* %__UNIQUE_ID___x318, align 4, !dbg !14658
  call void @llvm.dbg.declare(metadata i32* %__UNIQUE_ID___y319, metadata !14659, metadata !DIExpression()), !dbg !14658
  %31 = load i32, i32* %max_rx, align 4, !dbg !14658
  store i32 %31, i32* %__UNIQUE_ID___y319, align 4, !dbg !14658
  %32 = load i32, i32* %__UNIQUE_ID___x318, align 4, !dbg !14658
  %33 = load i32, i32* %__UNIQUE_ID___y319, align 4, !dbg !14658
  %cmp25 = icmp ugt i32 %32, %33, !dbg !14658
  br i1 %cmp25, label %cond.true27, label %cond.false28, !dbg !14658

cond.true27:                                      ; preds = %if.then22
  %34 = load i32, i32* %__UNIQUE_ID___x318, align 4, !dbg !14658
  br label %cond.end29, !dbg !14658

cond.false28:                                     ; preds = %if.then22
  %35 = load i32, i32* %__UNIQUE_ID___y319, align 4, !dbg !14658
  br label %cond.end29, !dbg !14658

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ %34, %cond.true27 ], [ %35, %cond.false28 ], !dbg !14658
  store i32 %cond30, i32* %tmp24, align 4, !dbg !14658
  %36 = load i32, i32* %tmp24, align 4, !dbg !14658
  store i32 %36, i32* %max_rx, align 4, !dbg !14660
  br label %if.end31, !dbg !14661

if.end31:                                         ; preds = %cond.end29, %land.lhs.true20, %if.end
  br label %for.inc, !dbg !14662

for.inc:                                          ; preds = %if.end31
  call void @llvm.dbg.declare(metadata i8** %__mptr32, metadata !14663, metadata !DIExpression()), !dbg !14665
  %37 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14665
  %transfer_list33 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %37, i32 0, i32 19, !dbg !14665
  %next34 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list33, i32 0, i32 0, !dbg !14665
  %38 = load %struct.list_head*, %struct.list_head** %next34, align 8, !dbg !14665
  %39 = bitcast %struct.list_head* %38 to i8*, !dbg !14665
  store i8* %39, i8** %__mptr32, align 8, !dbg !14665
  br label %do.body35, !dbg !14665

do.body35:                                        ; preds = %for.inc
  br label %do.end36, !dbg !14666

do.end36:                                         ; preds = %do.body35
  %40 = load i8*, i8** %__mptr32, align 8, !dbg !14665
  %add.ptr38 = getelementptr i8, i8* %40, i64 -120, !dbg !14665
  %41 = bitcast i8* %add.ptr38 to %struct.spi_transfer*, !dbg !14665
  store %struct.spi_transfer* %41, %struct.spi_transfer** %tmp37, align 8, !dbg !14666
  %42 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp37, align 8, !dbg !14665
  store %struct.spi_transfer* %42, %struct.spi_transfer** %xfer, align 8, !dbg !14631
  br label %for.cond, !dbg !14631, !llvm.loop !14668

for.end:                                          ; preds = %for.cond
  %43 = load i32, i32* %max_tx, align 4, !dbg !14670
  %tobool39 = icmp ne i32 %43, 0, !dbg !14670
  br i1 %tobool39, label %if.then40, label %if.end47, !dbg !14672

if.then40:                                        ; preds = %for.end
  %44 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14673
  %dummy_tx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %44, i32 0, i32 63, !dbg !14675
  %45 = load i8*, i8** %dummy_tx, align 8, !dbg !14675
  %46 = load i32, i32* %max_tx, align 4, !dbg !14676
  %conv41 = zext i32 %46 to i64, !dbg !14676
  %call = call i8* @krealloc(i8* %45, i64 %conv41, i32 3265) #11, !dbg !14677
  store i8* %call, i8** %tmp, align 8, !dbg !14678
  %47 = load i8*, i8** %tmp, align 8, !dbg !14679
  %tobool42 = icmp ne i8* %47, null, !dbg !14679
  br i1 %tobool42, label %if.end44, label %if.then43, !dbg !14681

if.then43:                                        ; preds = %if.then40
  store i32 -12, i32* %retval, align 4, !dbg !14682
  br label %return, !dbg !14682

if.end44:                                         ; preds = %if.then40
  %48 = load i8*, i8** %tmp, align 8, !dbg !14683
  %49 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14684
  %dummy_tx45 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %49, i32 0, i32 63, !dbg !14685
  store i8* %48, i8** %dummy_tx45, align 8, !dbg !14686
  %50 = load i8*, i8** %tmp, align 8, !dbg !14687
  %51 = load i32, i32* %max_tx, align 4, !dbg !14688
  %conv46 = zext i32 %51 to i64, !dbg !14688
  call void @llvm.memset.p0i8.i64(i8* align 1 %50, i8 0, i64 %conv46, i1 false), !dbg !14689
  br label %if.end47, !dbg !14690

if.end47:                                         ; preds = %if.end44, %for.end
  %52 = load i32, i32* %max_rx, align 4, !dbg !14691
  %tobool48 = icmp ne i32 %52, 0, !dbg !14691
  br i1 %tobool48, label %if.then49, label %if.end56, !dbg !14693

if.then49:                                        ; preds = %if.end47
  %53 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14694
  %dummy_rx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %53, i32 0, i32 62, !dbg !14696
  %54 = load i8*, i8** %dummy_rx, align 8, !dbg !14696
  %55 = load i32, i32* %max_rx, align 4, !dbg !14697
  %conv50 = zext i32 %55 to i64, !dbg !14697
  %call51 = call i8* @krealloc(i8* %54, i64 %conv50, i32 3265) #11, !dbg !14698
  store i8* %call51, i8** %tmp, align 8, !dbg !14699
  %56 = load i8*, i8** %tmp, align 8, !dbg !14700
  %tobool52 = icmp ne i8* %56, null, !dbg !14700
  br i1 %tobool52, label %if.end54, label %if.then53, !dbg !14702

if.then53:                                        ; preds = %if.then49
  store i32 -12, i32* %retval, align 4, !dbg !14703
  br label %return, !dbg !14703

if.end54:                                         ; preds = %if.then49
  %57 = load i8*, i8** %tmp, align 8, !dbg !14704
  %58 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14705
  %dummy_rx55 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %58, i32 0, i32 62, !dbg !14706
  store i8* %57, i8** %dummy_rx55, align 8, !dbg !14707
  br label %if.end56, !dbg !14708

if.end56:                                         ; preds = %if.end54, %if.end47
  %59 = load i32, i32* %max_tx, align 4, !dbg !14709
  %tobool57 = icmp ne i32 %59, 0, !dbg !14709
  br i1 %tobool57, label %if.then59, label %lor.lhs.false, !dbg !14711

lor.lhs.false:                                    ; preds = %if.end56
  %60 = load i32, i32* %max_rx, align 4, !dbg !14712
  %tobool58 = icmp ne i32 %60, 0, !dbg !14712
  br i1 %tobool58, label %if.then59, label %if.end99, !dbg !14713

if.then59:                                        ; preds = %lor.lhs.false, %if.end56
  call void @llvm.dbg.declare(metadata i8** %__mptr60, metadata !14714, metadata !DIExpression()), !dbg !14718
  %61 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14718
  %transfers61 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %61, i32 0, i32 0, !dbg !14718
  %next62 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers61, i32 0, i32 0, !dbg !14718
  %62 = load %struct.list_head*, %struct.list_head** %next62, align 8, !dbg !14718
  %63 = bitcast %struct.list_head* %62 to i8*, !dbg !14718
  store i8* %63, i8** %__mptr60, align 8, !dbg !14718
  br label %do.body63, !dbg !14718

do.body63:                                        ; preds = %if.then59
  br label %do.end64, !dbg !14719

do.end64:                                         ; preds = %do.body63
  %64 = load i8*, i8** %__mptr60, align 8, !dbg !14718
  %add.ptr66 = getelementptr i8, i8* %64, i64 -120, !dbg !14718
  %65 = bitcast i8* %add.ptr66 to %struct.spi_transfer*, !dbg !14718
  store %struct.spi_transfer* %65, %struct.spi_transfer** %tmp65, align 8, !dbg !14719
  %66 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp65, align 8, !dbg !14718
  store %struct.spi_transfer* %66, %struct.spi_transfer** %xfer, align 8, !dbg !14721
  br label %for.cond67, !dbg !14721

for.cond67:                                       ; preds = %do.end95, %do.end64
  %67 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14722
  %transfer_list68 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %67, i32 0, i32 19, !dbg !14722
  %68 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14722
  %transfers69 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %68, i32 0, i32 0, !dbg !14722
  %cmp70 = icmp eq %struct.list_head* %transfer_list68, %transfers69, !dbg !14722
  %lnot72 = xor i1 %cmp70, true, !dbg !14722
  br i1 %lnot72, label %for.body73, label %for.end98, !dbg !14721

for.body73:                                       ; preds = %for.cond67
  %69 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14724
  %len74 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %69, i32 0, i32 2, !dbg !14727
  %70 = load i32, i32* %len74, align 8, !dbg !14727
  %tobool75 = icmp ne i32 %70, 0, !dbg !14724
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !14728

if.then76:                                        ; preds = %for.body73
  br label %for.inc90, !dbg !14729

if.end77:                                         ; preds = %for.body73
  %71 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14730
  %tx_buf78 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %71, i32 0, i32 0, !dbg !14732
  %72 = load i8*, i8** %tx_buf78, align 8, !dbg !14732
  %tobool79 = icmp ne i8* %72, null, !dbg !14730
  br i1 %tobool79, label %if.end83, label %if.then80, !dbg !14733

if.then80:                                        ; preds = %if.end77
  %73 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14734
  %dummy_tx81 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %73, i32 0, i32 63, !dbg !14735
  %74 = load i8*, i8** %dummy_tx81, align 8, !dbg !14735
  %75 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14736
  %tx_buf82 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %75, i32 0, i32 0, !dbg !14737
  store i8* %74, i8** %tx_buf82, align 8, !dbg !14738
  br label %if.end83, !dbg !14736

if.end83:                                         ; preds = %if.then80, %if.end77
  %76 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14739
  %rx_buf84 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %76, i32 0, i32 1, !dbg !14741
  %77 = load i8*, i8** %rx_buf84, align 8, !dbg !14741
  %tobool85 = icmp ne i8* %77, null, !dbg !14739
  br i1 %tobool85, label %if.end89, label %if.then86, !dbg !14742

if.then86:                                        ; preds = %if.end83
  %78 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14743
  %dummy_rx87 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %78, i32 0, i32 62, !dbg !14744
  %79 = load i8*, i8** %dummy_rx87, align 8, !dbg !14744
  %80 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14745
  %rx_buf88 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %80, i32 0, i32 1, !dbg !14746
  store i8* %79, i8** %rx_buf88, align 8, !dbg !14747
  br label %if.end89, !dbg !14745

if.end89:                                         ; preds = %if.then86, %if.end83
  br label %for.inc90, !dbg !14748

for.inc90:                                        ; preds = %if.end89, %if.then76
  call void @llvm.dbg.declare(metadata i8** %__mptr91, metadata !14749, metadata !DIExpression()), !dbg !14751
  %81 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14751
  %transfer_list92 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %81, i32 0, i32 19, !dbg !14751
  %next93 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list92, i32 0, i32 0, !dbg !14751
  %82 = load %struct.list_head*, %struct.list_head** %next93, align 8, !dbg !14751
  %83 = bitcast %struct.list_head* %82 to i8*, !dbg !14751
  store i8* %83, i8** %__mptr91, align 8, !dbg !14751
  br label %do.body94, !dbg !14751

do.body94:                                        ; preds = %for.inc90
  br label %do.end95, !dbg !14752

do.end95:                                         ; preds = %do.body94
  %84 = load i8*, i8** %__mptr91, align 8, !dbg !14751
  %add.ptr97 = getelementptr i8, i8* %84, i64 -120, !dbg !14751
  %85 = bitcast i8* %add.ptr97 to %struct.spi_transfer*, !dbg !14751
  store %struct.spi_transfer* %85, %struct.spi_transfer** %tmp96, align 8, !dbg !14752
  %86 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp96, align 8, !dbg !14751
  store %struct.spi_transfer* %86, %struct.spi_transfer** %xfer, align 8, !dbg !14722
  br label %for.cond67, !dbg !14722, !llvm.loop !14754

for.end98:                                        ; preds = %for.cond67
  br label %if.end99, !dbg !14756

if.end99:                                         ; preds = %for.end98, %lor.lhs.false
  br label %if.end100, !dbg !14757

if.end100:                                        ; preds = %if.end99, %land.lhs.true, %entry
  %87 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14758
  %88 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14759
  %call101 = call i32 @__spi_map_msg(%struct.spi_controller* %87, %struct.spi_message* %88) #11, !dbg !14760
  store i32 %call101, i32* %retval, align 4, !dbg !14761
  br label %return, !dbg !14761

return:                                           ; preds = %if.end100, %if.then53, %if.then43
  %89 = load i32, i32* %retval, align 4, !dbg !14762
  ret i32 %89, !dbg !14762
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @___might_sleep(i8* %file, i32 %line, i32 %preempt_offset) #0 !dbg !14763 {
entry:
  %file.addr = alloca i8*, align 8
  %line.addr = alloca i32, align 4
  %preempt_offset.addr = alloca i32, align 4
  store i8* %file, i8** %file.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %file.addr, metadata !14767, metadata !DIExpression()), !dbg !14768
  store i32 %line, i32* %line.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %line.addr, metadata !14769, metadata !DIExpression()), !dbg !14770
  store i32 %preempt_offset, i32* %preempt_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %preempt_offset.addr, metadata !14771, metadata !DIExpression()), !dbg !14772
  ret void, !dbg !14773
}

; Function Attrs: noredzone
declare dso_local i32 @_cond_resched() #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del_entry(%struct.list_head* %entry1) #0 !dbg !14774 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14775, metadata !DIExpression()), !dbg !14776
  %0 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14777
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0) #11, !dbg !14779
  br i1 %call, label %if.end, label %if.then, !dbg !14780

if.then:                                          ; preds = %entry
  br label %return, !dbg !14781

if.end:                                           ; preds = %entry
  %1 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14782
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14783
  %2 = load %struct.list_head*, %struct.list_head** %prev, align 8, !dbg !14783
  %3 = load %struct.list_head*, %struct.list_head** %entry.addr, align 8, !dbg !14784
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14785
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14785
  call void @__list_del(%struct.list_head* %2, %struct.list_head* %4) #11, !dbg !14786
  br label %return, !dbg !14787

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14787
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1) #0 !dbg !14788 {
entry:
  %entry.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %entry1, %struct.list_head** %entry.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %entry.addr, metadata !14791, metadata !DIExpression()), !dbg !14792
  ret i1 true, !dbg !14793
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !14794 {
entry:
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !14795, metadata !DIExpression()), !dbg !14796
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !14797, metadata !DIExpression()), !dbg !14798
  %0 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14799
  %1 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14800
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1, !dbg !14801
  store %struct.list_head* %0, %struct.list_head** %prev1, align 8, !dbg !14802
  br label %do.body, !dbg !14803

do.body:                                          ; preds = %entry
  br label %do.body2, !dbg !14804

do.body2:                                         ; preds = %do.body
  br label %do.end, !dbg !14806

do.end:                                           ; preds = %do.body2
  br label %do.body3, !dbg !14804

do.body3:                                         ; preds = %do.end
  %2 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !14808
  %3 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !14808
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %3, i32 0, i32 0, !dbg !14808
  store volatile %struct.list_head* %2, %struct.list_head** %next4, align 8, !dbg !14808
  br label %do.end5, !dbg !14808

do.end5:                                          ; preds = %do.body3
  br label %do.end6, !dbg !14804

do.end6:                                          ; preds = %do.end5
  ret void, !dbg !14810
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_idle(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local i8* @krealloc(i8*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @__spi_map_msg(%struct.spi_controller* %ctlr, %struct.spi_message* %msg) #0 !dbg !14811 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %tx_dev = alloca %struct.device*, align 8
  %rx_dev = alloca %struct.device*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %ret = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_transfer*, align 8
  %__mptr41 = alloca i8*, align 8
  %tmp46 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !14812, metadata !DIExpression()), !dbg !14813
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !14814, metadata !DIExpression()), !dbg !14815
  call void @llvm.dbg.declare(metadata %struct.device** %tx_dev, metadata !14816, metadata !DIExpression()), !dbg !14817
  call void @llvm.dbg.declare(metadata %struct.device** %rx_dev, metadata !14818, metadata !DIExpression()), !dbg !14819
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !14820, metadata !DIExpression()), !dbg !14821
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !14822, metadata !DIExpression()), !dbg !14823
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14824
  %can_dma = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 22, !dbg !14826
  %1 = load i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %can_dma, align 8, !dbg !14826
  %tobool = icmp ne i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)* %1, null, !dbg !14824
  br i1 %tobool, label %if.end, label %if.then, !dbg !14827

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14828
  br label %return, !dbg !14828

if.end:                                           ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14829
  %dma_tx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 60, !dbg !14831
  %3 = load %struct.dma_chan*, %struct.dma_chan** %dma_tx, align 8, !dbg !14831
  %tobool1 = icmp ne %struct.dma_chan* %3, null, !dbg !14829
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !14832

if.then2:                                         ; preds = %if.end
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14833
  %dma_tx3 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 60, !dbg !14834
  %5 = load %struct.dma_chan*, %struct.dma_chan** %dma_tx3, align 8, !dbg !14834
  %device = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %5, i32 0, i32 0, !dbg !14835
  %6 = load %struct.dma_device*, %struct.dma_device** %device, align 8, !dbg !14835
  %dev = getelementptr inbounds %struct.dma_device, %struct.dma_device* %6, i32 0, i32 15, !dbg !14836
  %7 = load %struct.device*, %struct.device** %dev, align 8, !dbg !14836
  store %struct.device* %7, %struct.device** %tx_dev, align 8, !dbg !14837
  br label %if.end5, !dbg !14838

if.else:                                          ; preds = %if.end
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14839
  %dev4 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %8, i32 0, i32 0, !dbg !14840
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev4, i32 0, i32 1, !dbg !14841
  %9 = load %struct.device*, %struct.device** %parent, align 8, !dbg !14841
  store %struct.device* %9, %struct.device** %tx_dev, align 8, !dbg !14842
  br label %if.end5

if.end5:                                          ; preds = %if.else, %if.then2
  %10 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14843
  %dma_rx = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %10, i32 0, i32 61, !dbg !14845
  %11 = load %struct.dma_chan*, %struct.dma_chan** %dma_rx, align 8, !dbg !14845
  %tobool6 = icmp ne %struct.dma_chan* %11, null, !dbg !14843
  br i1 %tobool6, label %if.then7, label %if.else11, !dbg !14846

if.then7:                                         ; preds = %if.end5
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14847
  %dma_rx8 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 61, !dbg !14848
  %13 = load %struct.dma_chan*, %struct.dma_chan** %dma_rx8, align 8, !dbg !14848
  %device9 = getelementptr inbounds %struct.dma_chan, %struct.dma_chan* %13, i32 0, i32 0, !dbg !14849
  %14 = load %struct.dma_device*, %struct.dma_device** %device9, align 8, !dbg !14849
  %dev10 = getelementptr inbounds %struct.dma_device, %struct.dma_device* %14, i32 0, i32 15, !dbg !14850
  %15 = load %struct.device*, %struct.device** %dev10, align 8, !dbg !14850
  store %struct.device* %15, %struct.device** %rx_dev, align 8, !dbg !14851
  br label %if.end14, !dbg !14852

if.else11:                                        ; preds = %if.end5
  %16 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14853
  %dev12 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %16, i32 0, i32 0, !dbg !14854
  %parent13 = getelementptr inbounds %struct.device, %struct.device* %dev12, i32 0, i32 1, !dbg !14855
  %17 = load %struct.device*, %struct.device** %parent13, align 8, !dbg !14855
  store %struct.device* %17, %struct.device** %rx_dev, align 8, !dbg !14856
  br label %if.end14

if.end14:                                         ; preds = %if.else11, %if.then7
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14857, metadata !DIExpression()), !dbg !14860
  %18 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14860
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %18, i32 0, i32 0, !dbg !14860
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !14860
  %19 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !14860
  %20 = bitcast %struct.list_head* %19 to i8*, !dbg !14860
  store i8* %20, i8** %__mptr, align 8, !dbg !14860
  br label %do.body, !dbg !14860

do.body:                                          ; preds = %if.end14
  br label %do.end, !dbg !14861

do.end:                                           ; preds = %do.body
  %21 = load i8*, i8** %__mptr, align 8, !dbg !14860
  %add.ptr = getelementptr i8, i8* %21, i64 -120, !dbg !14860
  %22 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !14860
  store %struct.spi_transfer* %22, %struct.spi_transfer** %tmp, align 8, !dbg !14861
  %23 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp, align 8, !dbg !14860
  store %struct.spi_transfer* %23, %struct.spi_transfer** %xfer, align 8, !dbg !14863
  br label %for.cond, !dbg !14863

for.cond:                                         ; preds = %do.end45, %do.end
  %24 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14864
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %24, i32 0, i32 19, !dbg !14864
  %25 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14864
  %transfers15 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %25, i32 0, i32 0, !dbg !14864
  %cmp = icmp eq %struct.list_head* %transfer_list, %transfers15, !dbg !14864
  %lnot = xor i1 %cmp, true, !dbg !14864
  br i1 %lnot, label %for.body, label %for.end, !dbg !14863

for.body:                                         ; preds = %for.cond
  %26 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14866
  %can_dma16 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %26, i32 0, i32 22, !dbg !14869
  %27 = load i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i1 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %can_dma16, align 8, !dbg !14869
  %28 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14870
  %29 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !14871
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %29, i32 0, i32 1, !dbg !14872
  %30 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !14872
  %31 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14873
  %call = call zeroext i1 %27(%struct.spi_controller* %28, %struct.spi_device* %30, %struct.spi_transfer* %31) #11, !dbg !14866
  br i1 %call, label %if.end18, label %if.then17, !dbg !14874

if.then17:                                        ; preds = %for.body
  br label %for.inc, !dbg !14875

if.end18:                                         ; preds = %for.body
  %32 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14876
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %32, i32 0, i32 0, !dbg !14878
  %33 = load i8*, i8** %tx_buf, align 8, !dbg !14878
  %cmp19 = icmp ne i8* %33, null, !dbg !14879
  br i1 %cmp19, label %if.then20, label %if.end27, !dbg !14880

if.then20:                                        ; preds = %if.end18
  %34 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14881
  %35 = load %struct.device*, %struct.device** %tx_dev, align 8, !dbg !14883
  %36 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14884
  %tx_sg = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %36, i32 0, i32 5, !dbg !14885
  %37 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14886
  %tx_buf21 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %37, i32 0, i32 0, !dbg !14887
  %38 = load i8*, i8** %tx_buf21, align 8, !dbg !14887
  %39 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14888
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %39, i32 0, i32 2, !dbg !14889
  %40 = load i32, i32* %len, align 8, !dbg !14889
  %conv = zext i32 %40 to i64, !dbg !14888
  %call22 = call i32 @spi_map_buf(%struct.spi_controller* %34, %struct.device* %35, %struct.sg_table* %tx_sg, i8* %38, i64 %conv, i32 1) #11, !dbg !14890
  store i32 %call22, i32* %ret, align 4, !dbg !14891
  %41 = load i32, i32* %ret, align 4, !dbg !14892
  %cmp23 = icmp ne i32 %41, 0, !dbg !14894
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !14895

if.then25:                                        ; preds = %if.then20
  %42 = load i32, i32* %ret, align 4, !dbg !14896
  store i32 %42, i32* %retval, align 4, !dbg !14897
  br label %return, !dbg !14897

if.end26:                                         ; preds = %if.then20
  br label %if.end27, !dbg !14898

if.end27:                                         ; preds = %if.end26, %if.end18
  %43 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14899
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %43, i32 0, i32 1, !dbg !14901
  %44 = load i8*, i8** %rx_buf, align 8, !dbg !14901
  %cmp28 = icmp ne i8* %44, null, !dbg !14902
  br i1 %cmp28, label %if.then30, label %if.end40, !dbg !14903

if.then30:                                        ; preds = %if.end27
  %45 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14904
  %46 = load %struct.device*, %struct.device** %rx_dev, align 8, !dbg !14906
  %47 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14907
  %rx_sg = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %47, i32 0, i32 6, !dbg !14908
  %48 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14909
  %rx_buf31 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %48, i32 0, i32 1, !dbg !14910
  %49 = load i8*, i8** %rx_buf31, align 8, !dbg !14910
  %50 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14911
  %len32 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %50, i32 0, i32 2, !dbg !14912
  %51 = load i32, i32* %len32, align 8, !dbg !14912
  %conv33 = zext i32 %51 to i64, !dbg !14911
  %call34 = call i32 @spi_map_buf(%struct.spi_controller* %45, %struct.device* %46, %struct.sg_table* %rx_sg, i8* %49, i64 %conv33, i32 2) #11, !dbg !14913
  store i32 %call34, i32* %ret, align 4, !dbg !14914
  %52 = load i32, i32* %ret, align 4, !dbg !14915
  %cmp35 = icmp ne i32 %52, 0, !dbg !14917
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !14918

if.then37:                                        ; preds = %if.then30
  %53 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14919
  %54 = load %struct.device*, %struct.device** %tx_dev, align 8, !dbg !14921
  %55 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14922
  %tx_sg38 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %55, i32 0, i32 5, !dbg !14923
  call void @spi_unmap_buf(%struct.spi_controller* %53, %struct.device* %54, %struct.sg_table* %tx_sg38, i32 1) #11, !dbg !14924
  %56 = load i32, i32* %ret, align 4, !dbg !14925
  store i32 %56, i32* %retval, align 4, !dbg !14926
  br label %return, !dbg !14926

if.end39:                                         ; preds = %if.then30
  br label %if.end40, !dbg !14927

if.end40:                                         ; preds = %if.end39, %if.end27
  br label %for.inc, !dbg !14928

for.inc:                                          ; preds = %if.end40, %if.then17
  call void @llvm.dbg.declare(metadata i8** %__mptr41, metadata !14929, metadata !DIExpression()), !dbg !14931
  %57 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !14931
  %transfer_list42 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %57, i32 0, i32 19, !dbg !14931
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list42, i32 0, i32 0, !dbg !14931
  %58 = load %struct.list_head*, %struct.list_head** %next43, align 8, !dbg !14931
  %59 = bitcast %struct.list_head* %58 to i8*, !dbg !14931
  store i8* %59, i8** %__mptr41, align 8, !dbg !14931
  br label %do.body44, !dbg !14931

do.body44:                                        ; preds = %for.inc
  br label %do.end45, !dbg !14932

do.end45:                                         ; preds = %do.body44
  %60 = load i8*, i8** %__mptr41, align 8, !dbg !14931
  %add.ptr47 = getelementptr i8, i8* %60, i64 -120, !dbg !14931
  %61 = bitcast i8* %add.ptr47 to %struct.spi_transfer*, !dbg !14931
  store %struct.spi_transfer* %61, %struct.spi_transfer** %tmp46, align 8, !dbg !14932
  %62 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp46, align 8, !dbg !14931
  store %struct.spi_transfer* %62, %struct.spi_transfer** %xfer, align 8, !dbg !14864
  br label %for.cond, !dbg !14864, !llvm.loop !14934

for.end:                                          ; preds = %for.cond
  %63 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !14936
  %cur_msg_mapped = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %63, i32 0, i32 35, !dbg !14937
  store i8 1, i8* %cur_msg_mapped, align 2, !dbg !14938
  store i32 0, i32* %retval, align 4, !dbg !14939
  br label %return, !dbg !14939

return:                                           ; preds = %for.end, %if.then37, %if.then25, %if.then
  %64 = load i32, i32* %retval, align 4, !dbg !14940
  ret i32 %64, !dbg !14940
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_controller_release(%struct.device* %dev) #0 !dbg !14941 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14942, metadata !DIExpression()), !dbg !14943
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !14944, metadata !DIExpression()), !dbg !14945
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14946, metadata !DIExpression()), !dbg !14948
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14948
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14948
  store i8* %1, i8** %__mptr, align 8, !dbg !14948
  br label %do.body, !dbg !14948

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14949

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14948
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14948
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !14948
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !14949
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !14948
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !14951
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14952
  %6 = bitcast %struct.spi_controller* %5 to i8*, !dbg !14952
  call void @kfree(i8* %6) #11, !dbg !14953
  ret void, !dbg !14954
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_messages_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !14955 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14956, metadata !DIExpression()), !dbg !14957
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14958, metadata !DIExpression()), !dbg !14957
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14959, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !14960, metadata !DIExpression()), !dbg !14957
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14961, metadata !DIExpression()), !dbg !14963
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14963
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14963
  store i8* %1, i8** %__mptr, align 8, !dbg !14963
  br label %do.body, !dbg !14963

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14964

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14963
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14963
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !14963
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !14964
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !14963
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !14957
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14957
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !14957
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !14957
  %call = call i64 @spi_statistics_messages_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !14957
  ret i64 %call, !dbg !14957
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfers_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !14966 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14967, metadata !DIExpression()), !dbg !14968
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14969, metadata !DIExpression()), !dbg !14968
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14970, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !14971, metadata !DIExpression()), !dbg !14968
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14972, metadata !DIExpression()), !dbg !14974
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14974
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14974
  store i8* %1, i8** %__mptr, align 8, !dbg !14974
  br label %do.body, !dbg !14974

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14975

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14974
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14974
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !14974
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !14975
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !14974
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !14968
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14968
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !14968
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !14968
  %call = call i64 @spi_statistics_transfers_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !14968
  ret i64 %call, !dbg !14968
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_errors_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !14977 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14978, metadata !DIExpression()), !dbg !14979
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14980, metadata !DIExpression()), !dbg !14979
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14981, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !14982, metadata !DIExpression()), !dbg !14979
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14983, metadata !DIExpression()), !dbg !14985
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14985
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14985
  store i8* %1, i8** %__mptr, align 8, !dbg !14985
  br label %do.body, !dbg !14985

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14986

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14985
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14985
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !14985
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !14986
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !14985
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !14979
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14979
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !14979
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !14979
  %call = call i64 @spi_statistics_errors_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !14979
  ret i64 %call, !dbg !14979
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_timedout_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !14988 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !14989, metadata !DIExpression()), !dbg !14990
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !14991, metadata !DIExpression()), !dbg !14990
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !14992, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !14993, metadata !DIExpression()), !dbg !14990
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !14994, metadata !DIExpression()), !dbg !14996
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !14996
  %1 = bitcast %struct.device* %0 to i8*, !dbg !14996
  store i8* %1, i8** %__mptr, align 8, !dbg !14996
  br label %do.body, !dbg !14996

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !14997

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !14996
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !14996
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !14996
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !14997
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !14996
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !14990
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !14990
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !14990
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !14990
  %call = call i64 @spi_statistics_timedout_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !14990
  ret i64 %call, !dbg !14990
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_spi_sync_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !14999 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15000, metadata !DIExpression()), !dbg !15001
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15002, metadata !DIExpression()), !dbg !15001
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15003, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15004, metadata !DIExpression()), !dbg !15001
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15005, metadata !DIExpression()), !dbg !15007
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15007
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15007
  store i8* %1, i8** %__mptr, align 8, !dbg !15007
  br label %do.body, !dbg !15007

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15008

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15007
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15007
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15007
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15008
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15007
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15001
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15001
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15001
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15001
  %call = call i64 @spi_statistics_spi_sync_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15001
  ret i64 %call, !dbg !15001
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_spi_sync_immediate_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15010 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15011, metadata !DIExpression()), !dbg !15012
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15013, metadata !DIExpression()), !dbg !15012
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15014, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15015, metadata !DIExpression()), !dbg !15012
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15016, metadata !DIExpression()), !dbg !15018
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15018
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15018
  store i8* %1, i8** %__mptr, align 8, !dbg !15018
  br label %do.body, !dbg !15018

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15019

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15018
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15018
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15018
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15019
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15018
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15012
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15012
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15012
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15012
  %call = call i64 @spi_statistics_spi_sync_immediate_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15012
  ret i64 %call, !dbg !15012
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_spi_async_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15021 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15022, metadata !DIExpression()), !dbg !15023
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15024, metadata !DIExpression()), !dbg !15023
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15025, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15026, metadata !DIExpression()), !dbg !15023
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15027, metadata !DIExpression()), !dbg !15029
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15029
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15029
  store i8* %1, i8** %__mptr, align 8, !dbg !15029
  br label %do.body, !dbg !15029

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15030

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15029
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15029
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15029
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15030
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15029
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15023
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15023
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15023
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15023
  %call = call i64 @spi_statistics_spi_async_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15023
  ret i64 %call, !dbg !15023
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_bytes_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15032 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15033, metadata !DIExpression()), !dbg !15034
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15035, metadata !DIExpression()), !dbg !15034
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15036, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15037, metadata !DIExpression()), !dbg !15034
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15038, metadata !DIExpression()), !dbg !15040
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15040
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15040
  store i8* %1, i8** %__mptr, align 8, !dbg !15040
  br label %do.body, !dbg !15040

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15041

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15040
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15040
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15040
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15041
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15040
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15034
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15034
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15034
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15034
  %call = call i64 @spi_statistics_bytes_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15034
  ret i64 %call, !dbg !15034
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_bytes_rx_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15043 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15044, metadata !DIExpression()), !dbg !15045
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15046, metadata !DIExpression()), !dbg !15045
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15047, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15048, metadata !DIExpression()), !dbg !15045
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15049, metadata !DIExpression()), !dbg !15051
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15051
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15051
  store i8* %1, i8** %__mptr, align 8, !dbg !15051
  br label %do.body, !dbg !15051

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15052

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15051
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15051
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15051
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15052
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15051
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15045
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15045
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15045
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15045
  %call = call i64 @spi_statistics_bytes_rx_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15045
  ret i64 %call, !dbg !15045
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_bytes_tx_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15054 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15055, metadata !DIExpression()), !dbg !15056
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15057, metadata !DIExpression()), !dbg !15056
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15058, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15059, metadata !DIExpression()), !dbg !15056
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15060, metadata !DIExpression()), !dbg !15062
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15062
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15062
  store i8* %1, i8** %__mptr, align 8, !dbg !15062
  br label %do.body, !dbg !15062

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15063

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15062
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15062
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15062
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15063
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15062
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15056
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15056
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15056
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15056
  %call = call i64 @spi_statistics_bytes_tx_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15056
  ret i64 %call, !dbg !15056
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo0_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15065 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15066, metadata !DIExpression()), !dbg !15067
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15068, metadata !DIExpression()), !dbg !15067
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15069, metadata !DIExpression()), !dbg !15067
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15070, metadata !DIExpression()), !dbg !15067
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15071, metadata !DIExpression()), !dbg !15073
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15073
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15073
  store i8* %1, i8** %__mptr, align 8, !dbg !15073
  br label %do.body, !dbg !15073

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15074

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15073
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15073
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15073
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15074
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15073
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15067
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15067
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15067
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15067
  %call = call i64 @spi_statistics_transfer_bytes_histo0_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15067
  ret i64 %call, !dbg !15067
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo1_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15076 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15077, metadata !DIExpression()), !dbg !15078
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15079, metadata !DIExpression()), !dbg !15078
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15080, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15081, metadata !DIExpression()), !dbg !15078
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15082, metadata !DIExpression()), !dbg !15084
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15084
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15084
  store i8* %1, i8** %__mptr, align 8, !dbg !15084
  br label %do.body, !dbg !15084

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15085

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15084
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15084
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15084
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15085
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15084
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15078
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15078
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15078
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15078
  %call = call i64 @spi_statistics_transfer_bytes_histo1_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15078
  ret i64 %call, !dbg !15078
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo2_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15087 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15088, metadata !DIExpression()), !dbg !15089
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15090, metadata !DIExpression()), !dbg !15089
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15091, metadata !DIExpression()), !dbg !15089
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15092, metadata !DIExpression()), !dbg !15089
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15093, metadata !DIExpression()), !dbg !15095
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15095
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15095
  store i8* %1, i8** %__mptr, align 8, !dbg !15095
  br label %do.body, !dbg !15095

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15096

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15095
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15095
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15095
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15096
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15095
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15089
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15089
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15089
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15089
  %call = call i64 @spi_statistics_transfer_bytes_histo2_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15089
  ret i64 %call, !dbg !15089
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo3_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15098 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15099, metadata !DIExpression()), !dbg !15100
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15101, metadata !DIExpression()), !dbg !15100
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15102, metadata !DIExpression()), !dbg !15100
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15103, metadata !DIExpression()), !dbg !15100
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15104, metadata !DIExpression()), !dbg !15106
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15106
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15106
  store i8* %1, i8** %__mptr, align 8, !dbg !15106
  br label %do.body, !dbg !15106

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15107

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15106
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15106
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15106
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15107
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15106
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15100
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15100
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15100
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15100
  %call = call i64 @spi_statistics_transfer_bytes_histo3_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15100
  ret i64 %call, !dbg !15100
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo4_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15109 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15110, metadata !DIExpression()), !dbg !15111
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15112, metadata !DIExpression()), !dbg !15111
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15113, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15114, metadata !DIExpression()), !dbg !15111
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15115, metadata !DIExpression()), !dbg !15117
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15117
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15117
  store i8* %1, i8** %__mptr, align 8, !dbg !15117
  br label %do.body, !dbg !15117

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15118

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15117
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15117
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15117
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15118
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15117
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15111
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15111
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15111
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15111
  %call = call i64 @spi_statistics_transfer_bytes_histo4_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15111
  ret i64 %call, !dbg !15111
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo5_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15120 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15121, metadata !DIExpression()), !dbg !15122
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15123, metadata !DIExpression()), !dbg !15122
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15124, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15125, metadata !DIExpression()), !dbg !15122
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15126, metadata !DIExpression()), !dbg !15128
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15128
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15128
  store i8* %1, i8** %__mptr, align 8, !dbg !15128
  br label %do.body, !dbg !15128

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15129

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15128
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15128
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15128
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15129
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15128
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15122
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15122
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15122
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15122
  %call = call i64 @spi_statistics_transfer_bytes_histo5_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15122
  ret i64 %call, !dbg !15122
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo6_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15131 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15132, metadata !DIExpression()), !dbg !15133
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15134, metadata !DIExpression()), !dbg !15133
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15135, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15136, metadata !DIExpression()), !dbg !15133
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15137, metadata !DIExpression()), !dbg !15139
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15139
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15139
  store i8* %1, i8** %__mptr, align 8, !dbg !15139
  br label %do.body, !dbg !15139

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15140

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15139
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15139
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15139
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15140
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15139
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15133
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15133
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15133
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15133
  %call = call i64 @spi_statistics_transfer_bytes_histo6_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15133
  ret i64 %call, !dbg !15133
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo7_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15142 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15143, metadata !DIExpression()), !dbg !15144
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15145, metadata !DIExpression()), !dbg !15144
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15146, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15147, metadata !DIExpression()), !dbg !15144
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15148, metadata !DIExpression()), !dbg !15150
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15150
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15150
  store i8* %1, i8** %__mptr, align 8, !dbg !15150
  br label %do.body, !dbg !15150

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15151

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15150
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15150
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15150
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15151
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15150
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15144
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15144
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15144
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15144
  %call = call i64 @spi_statistics_transfer_bytes_histo7_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15144
  ret i64 %call, !dbg !15144
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo8_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15153 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15154, metadata !DIExpression()), !dbg !15155
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15156, metadata !DIExpression()), !dbg !15155
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15157, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15158, metadata !DIExpression()), !dbg !15155
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15159, metadata !DIExpression()), !dbg !15161
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15161
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15161
  store i8* %1, i8** %__mptr, align 8, !dbg !15161
  br label %do.body, !dbg !15161

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15162

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15161
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15161
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15161
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15162
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15161
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15155
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15155
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15155
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15155
  %call = call i64 @spi_statistics_transfer_bytes_histo8_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15155
  ret i64 %call, !dbg !15155
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo9_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15164 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15165, metadata !DIExpression()), !dbg !15166
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15167, metadata !DIExpression()), !dbg !15166
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15168, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15169, metadata !DIExpression()), !dbg !15166
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15170, metadata !DIExpression()), !dbg !15172
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15172
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15172
  store i8* %1, i8** %__mptr, align 8, !dbg !15172
  br label %do.body, !dbg !15172

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15173

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15172
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15172
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15172
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15173
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15172
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15166
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15166
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15166
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15166
  %call = call i64 @spi_statistics_transfer_bytes_histo9_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15166
  ret i64 %call, !dbg !15166
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo10_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15175 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15176, metadata !DIExpression()), !dbg !15177
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15178, metadata !DIExpression()), !dbg !15177
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15179, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15180, metadata !DIExpression()), !dbg !15177
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15181, metadata !DIExpression()), !dbg !15183
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15183
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15183
  store i8* %1, i8** %__mptr, align 8, !dbg !15183
  br label %do.body, !dbg !15183

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15184

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15183
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15183
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15183
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15184
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15183
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15177
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15177
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15177
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15177
  %call = call i64 @spi_statistics_transfer_bytes_histo10_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15177
  ret i64 %call, !dbg !15177
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo11_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15186 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15187, metadata !DIExpression()), !dbg !15188
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15189, metadata !DIExpression()), !dbg !15188
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15190, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15191, metadata !DIExpression()), !dbg !15188
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15192, metadata !DIExpression()), !dbg !15194
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15194
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15194
  store i8* %1, i8** %__mptr, align 8, !dbg !15194
  br label %do.body, !dbg !15194

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15195

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15194
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15194
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15194
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15195
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15194
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15188
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15188
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15188
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15188
  %call = call i64 @spi_statistics_transfer_bytes_histo11_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15188
  ret i64 %call, !dbg !15188
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo12_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15197 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15198, metadata !DIExpression()), !dbg !15199
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15200, metadata !DIExpression()), !dbg !15199
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15201, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15202, metadata !DIExpression()), !dbg !15199
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15203, metadata !DIExpression()), !dbg !15205
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15205
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15205
  store i8* %1, i8** %__mptr, align 8, !dbg !15205
  br label %do.body, !dbg !15205

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15206

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15205
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15205
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15205
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15206
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15205
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15199
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15199
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15199
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15199
  %call = call i64 @spi_statistics_transfer_bytes_histo12_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15199
  ret i64 %call, !dbg !15199
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo13_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15208 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15209, metadata !DIExpression()), !dbg !15210
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15211, metadata !DIExpression()), !dbg !15210
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15212, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15213, metadata !DIExpression()), !dbg !15210
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15214, metadata !DIExpression()), !dbg !15216
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15216
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15216
  store i8* %1, i8** %__mptr, align 8, !dbg !15216
  br label %do.body, !dbg !15216

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15217

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15216
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15216
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15216
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15217
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15216
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15210
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15210
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15210
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15210
  %call = call i64 @spi_statistics_transfer_bytes_histo13_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15210
  ret i64 %call, !dbg !15210
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo14_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15219 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15220, metadata !DIExpression()), !dbg !15221
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15222, metadata !DIExpression()), !dbg !15221
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15223, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15224, metadata !DIExpression()), !dbg !15221
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15225, metadata !DIExpression()), !dbg !15227
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15227
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15227
  store i8* %1, i8** %__mptr, align 8, !dbg !15227
  br label %do.body, !dbg !15227

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15228

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15227
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15227
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15227
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15228
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15227
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15221
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15221
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15221
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15221
  %call = call i64 @spi_statistics_transfer_bytes_histo14_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15221
  ret i64 %call, !dbg !15221
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo15_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15230 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15231, metadata !DIExpression()), !dbg !15232
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15233, metadata !DIExpression()), !dbg !15232
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15234, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15235, metadata !DIExpression()), !dbg !15232
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15236, metadata !DIExpression()), !dbg !15238
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15238
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15238
  store i8* %1, i8** %__mptr, align 8, !dbg !15238
  br label %do.body, !dbg !15238

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15239

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15238
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15238
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15238
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15239
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15238
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15232
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15232
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15232
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15232
  %call = call i64 @spi_statistics_transfer_bytes_histo15_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15232
  ret i64 %call, !dbg !15232
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfer_bytes_histo16_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15241 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15242, metadata !DIExpression()), !dbg !15243
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15244, metadata !DIExpression()), !dbg !15243
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15245, metadata !DIExpression()), !dbg !15243
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15246, metadata !DIExpression()), !dbg !15243
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15247, metadata !DIExpression()), !dbg !15249
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15249
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15249
  store i8* %1, i8** %__mptr, align 8, !dbg !15249
  br label %do.body, !dbg !15249

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15250

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15249
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15249
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15249
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15250
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15249
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15243
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15243
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15243
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15243
  %call = call i64 @spi_statistics_transfer_bytes_histo16_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15243
  ret i64 %call, !dbg !15243
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @spi_controller_transfers_split_maxsize_show(%struct.device* %dev, %struct.device_attribute* %attr, i8* %buf) #0 !dbg !15252 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %attr.addr = alloca %struct.device_attribute*, align 8
  %buf.addr = alloca i8*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15253, metadata !DIExpression()), !dbg !15254
  store %struct.device_attribute* %attr, %struct.device_attribute** %attr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_attribute** %attr.addr, metadata !15255, metadata !DIExpression()), !dbg !15254
  store i8* %buf, i8** %buf.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %buf.addr, metadata !15256, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !15257, metadata !DIExpression()), !dbg !15254
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15258, metadata !DIExpression()), !dbg !15260
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15260
  %1 = bitcast %struct.device* %0 to i8*, !dbg !15260
  store i8* %1, i8** %__mptr, align 8, !dbg !15260
  br label %do.body, !dbg !15260

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !15261

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !15260
  %add.ptr = getelementptr i8, i8* %2, i64 0, !dbg !15260
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !15260
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !15261
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !15260
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !15254
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !15254
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %5, i32 0, i32 59, !dbg !15254
  %6 = load i8*, i8** %buf.addr, align 8, !dbg !15254
  %call = call i64 @spi_statistics_transfers_split_maxsize_show(%struct.spi_statistics* %statistics, i8* %6) #11, !dbg !15254
  ret i64 %call, !dbg !15254
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #0 !dbg !15263 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15264, metadata !DIExpression()), !dbg !15265
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15266, metadata !DIExpression()), !dbg !15267
  %0 = load i8*, i8** %data.addr, align 8, !dbg !15268
  %1 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15269
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 8, !dbg !15270
  store i8* %0, i8** %driver_data, align 8, !dbg !15271
  ret void, !dbg !15272
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devres_alloc_node(void (%struct.device*, i8*)*, i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local void @__init_swait_queue_head(%struct.swait_queue_head*, i8*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_count(%struct.device*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kcalloc(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !15273 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15276, metadata !DIExpression()), !dbg !15277
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15278, metadata !DIExpression()), !dbg !15279
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15280, metadata !DIExpression()), !dbg !15281
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15282, metadata !DIExpression()), !dbg !15283
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15284
  %1 = load i64, i64* %n.addr, align 8, !dbg !15285
  %2 = load i64, i64* %size.addr, align 8, !dbg !15286
  %3 = load i32, i32* %flags.addr, align 4, !dbg !15287
  %or = or i32 %3, 256, !dbg !15288
  %call = call i8* @devm_kmalloc_array(%struct.device* %0, i64 %1, i64 %2, i32 %or) #11, !dbg !15289
  ret i8* %call, !dbg !15290
}

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @devm_gpiod_get_index_optional(%struct.device*, i8*, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kasprintf(%struct.device*, i32, i8*, ...) #2

; Function Attrs: noredzone
declare dso_local i32 @gpiod_set_consumer_name(%struct.gpio_desc*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @devm_kmalloc_array(%struct.device* %dev, i64 %n, i64 %size, i32 %flags) #0 !dbg !15291 {
entry:
  %retval = alloca i8*, align 8
  %dev.addr = alloca %struct.device*, align 8
  %n.addr = alloca i64, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  %bytes = alloca i64, align 8
  %__a = alloca i64, align 8
  %__b = alloca i64, align 8
  %__d = alloca i64*, align 8
  %tmp = alloca i8, align 1
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !15292, metadata !DIExpression()), !dbg !15293
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !15294, metadata !DIExpression()), !dbg !15295
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !15296, metadata !DIExpression()), !dbg !15297
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  call void @llvm.dbg.declare(metadata i64* %bytes, metadata !15300, metadata !DIExpression()), !dbg !15301
  call void @llvm.dbg.declare(metadata i64* %__a, metadata !15302, metadata !DIExpression()), !dbg !15305
  %0 = load i64, i64* %n.addr, align 8, !dbg !15305
  store i64 %0, i64* %__a, align 8, !dbg !15305
  call void @llvm.dbg.declare(metadata i64* %__b, metadata !15306, metadata !DIExpression()), !dbg !15305
  %1 = load i64, i64* %size.addr, align 8, !dbg !15305
  store i64 %1, i64* %__b, align 8, !dbg !15305
  call void @llvm.dbg.declare(metadata i64** %__d, metadata !15307, metadata !DIExpression()), !dbg !15305
  store i64* %bytes, i64** %__d, align 8, !dbg !15305
  %cmp = icmp eq i64* %__a, %__b, !dbg !15305
  %conv = zext i1 %cmp to i32, !dbg !15305
  %2 = load i64*, i64** %__d, align 8, !dbg !15305
  %cmp1 = icmp eq i64* %__a, %2, !dbg !15305
  %conv2 = zext i1 %cmp1 to i32, !dbg !15305
  %3 = load i64, i64* %__a, align 8, !dbg !15305
  %4 = load i64, i64* %__b, align 8, !dbg !15305
  %5 = load i64*, i64** %__d, align 8, !dbg !15305
  %6 = call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %3, i64 %4), !dbg !15305
  %7 = extractvalue { i64, i1 } %6, 1, !dbg !15305
  %8 = extractvalue { i64, i1 } %6, 0, !dbg !15305
  store i64 %8, i64* %5, align 8, !dbg !15305
  %frombool = zext i1 %7 to i8, !dbg !15305
  store i8 %frombool, i8* %tmp, align 1, !dbg !15305
  %9 = load i8, i8* %tmp, align 1, !dbg !15305
  %tobool = trunc i8 %9 to i1, !dbg !15305
  %call = call zeroext i1 @__must_check_overflow(i1 zeroext %tobool) #11, !dbg !15308
  %lnot = xor i1 %call, true, !dbg !15308
  %lnot3 = xor i1 %lnot, true, !dbg !15308
  %lnot.ext = zext i1 %lnot3 to i32, !dbg !15308
  %conv4 = sext i32 %lnot.ext to i64, !dbg !15308
  %tobool5 = icmp ne i64 %conv4, 0, !dbg !15308
  br i1 %tobool5, label %if.then, label %if.end, !dbg !15309

if.then:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !15310
  br label %return, !dbg !15310

if.end:                                           ; preds = %entry
  %10 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !15311
  %11 = load i64, i64* %bytes, align 8, !dbg !15312
  %12 = load i32, i32* %flags.addr, align 4, !dbg !15313
  %call6 = call noalias i8* @devm_kmalloc(%struct.device* %10, i64 %11, i32 %12) #11, !dbg !15314
  store i8* %call6, i8** %retval, align 8, !dbg !15315
  br label %return, !dbg !15315

return:                                           ; preds = %if.end, %if.then
  %13 = load i8*, i8** %retval, align 8, !dbg !15316
  ret i8* %13, !dbg !15316
}

; Function Attrs: noredzone
declare dso_local noalias i8* @devm_kmalloc(%struct.device*, i64, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_gpio_named_count(%struct.device_node* %np, i8* %propname) #0 !dbg !15317 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !15321, metadata !DIExpression()), !dbg !15322
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !15323, metadata !DIExpression()), !dbg !15324
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !15325
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !15326
  %call = call i32 @of_count_phandle_with_args(%struct.device_node* %0, i8* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.76, i64 0, i64 0)) #11, !dbg !15327
  ret i32 %call, !dbg !15328
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_get_named_gpio(%struct.device_node* %np, i8* %propname, i32 %index) #0 !dbg !15329 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !15332, metadata !DIExpression()), !dbg !15333
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !15334, metadata !DIExpression()), !dbg !15335
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !15336, metadata !DIExpression()), !dbg !15337
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !15338
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !15339
  %2 = load i32, i32* %index.addr, align 4, !dbg !15340
  %call = call i32 @of_get_named_gpio_flags(%struct.device_node* %0, i8* %1, i32 %2, i32* null) #11, !dbg !15341
  ret i32 %call, !dbg !15342
}

; Function Attrs: noredzone
declare dso_local i32 @of_count_phandle_with_args(%struct.device_node*, i8*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @of_get_named_gpio_flags(%struct.device_node*, i8*, i32, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_transfer_one_message(%struct.spi_controller* %ctlr, %struct.spi_message* %msg) #0 !dbg !15343 {
entry:
  %lock.addr.i236 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i236, metadata !5420, metadata !DIExpression()), !dbg !15344
  %flags.addr.i237 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i237, metadata !5427, metadata !DIExpression()), !dbg !15354
  %tmp.i238 = alloca i32, align 4
  %tmp8.i239 = alloca i32, align 4
  %lock.addr.i234 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i234, metadata !5429, metadata !DIExpression()), !dbg !15355
  %lock.addr.i229 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i229, metadata !5420, metadata !DIExpression()), !dbg !15362
  %flags.addr.i230 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i230, metadata !5427, metadata !DIExpression()), !dbg !15365
  %tmp.i231 = alloca i32, align 4
  %tmp8.i232 = alloca i32, align 4
  %lock.addr.i227 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i227, metadata !5429, metadata !DIExpression()), !dbg !15366
  %lock.addr.i222 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i222, metadata !5420, metadata !DIExpression()), !dbg !15373
  %flags.addr.i223 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i223, metadata !5427, metadata !DIExpression()), !dbg !15376
  %tmp.i224 = alloca i32, align 4
  %tmp8.i225 = alloca i32, align 4
  %lock.addr.i220 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i220, metadata !5429, metadata !DIExpression()), !dbg !15377
  %lock.addr.i218 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i218, metadata !5420, metadata !DIExpression()), !dbg !15384
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !15387
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !15388
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer = alloca %struct.spi_transfer*, align 8
  %keep_cs = alloca i8, align 1
  %ret = alloca i32, align 4
  %statm = alloca %struct.spi_statistics*, align 8
  %stats = alloca %struct.spi_statistics*, align 8
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp = alloca i32, align 4
  %__dummy8 = alloca i64, align 8
  %__dummy29 = alloca i64, align 8
  %tmp12 = alloca i32, align 4
  %flags25 = alloca i64, align 8
  %__dummy28 = alloca i64, align 8
  %__dummy229 = alloca i64, align 8
  %tmp32 = alloca i32, align 4
  %__dummy36 = alloca i64, align 8
  %__dummy237 = alloca i64, align 8
  %tmp40 = alloca i32, align 4
  %__mptr = alloca i8*, align 8
  %tmp59 = alloca %struct.spi_transfer*, align 8
  %flags83 = alloca i64, align 8
  %__dummy86 = alloca i64, align 8
  %__dummy287 = alloca i64, align 8
  %tmp90 = alloca i32, align 4
  %__dummy94 = alloca i64, align 8
  %__dummy295 = alloca i64, align 8
  %tmp98 = alloca i32, align 4
  %flags115 = alloca i64, align 8
  %__dummy118 = alloca i64, align 8
  %__dummy2119 = alloca i64, align 8
  %tmp122 = alloca i32, align 4
  %__dummy126 = alloca i64, align 8
  %__dummy2127 = alloca i64, align 8
  %tmp130 = alloca i32, align 4
  %__mptr191 = alloca i8*, align 8
  %tmp196 = alloca %struct.spi_transfer*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !15395, metadata !DIExpression()), !dbg !15396
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !15397, metadata !DIExpression()), !dbg !15398
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer, metadata !15399, metadata !DIExpression()), !dbg !15400
  call void @llvm.dbg.declare(metadata i8* %keep_cs, metadata !15401, metadata !DIExpression()), !dbg !15402
  store i8 0, i8* %keep_cs, align 1, !dbg !15402
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15403, metadata !DIExpression()), !dbg !15404
  store i32 0, i32* %ret, align 4, !dbg !15404
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %statm, metadata !15405, metadata !DIExpression()), !dbg !15406
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15407
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 59, !dbg !15408
  store %struct.spi_statistics* %statistics, %struct.spi_statistics** %statm, align 8, !dbg !15406
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stats, metadata !15409, metadata !DIExpression()), !dbg !15410
  %1 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15411
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %1, i32 0, i32 1, !dbg !15412
  %2 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !15412
  %statistics1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %2, i32 0, i32 16, !dbg !15413
  store %struct.spi_statistics* %statistics1, %struct.spi_statistics** %stats, align 8, !dbg !15410
  %3 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15414
  %spi2 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %3, i32 0, i32 1, !dbg !15415
  %4 = load %struct.spi_device*, %struct.spi_device** %spi2, align 8, !dbg !15415
  call void @spi_set_cs(%struct.spi_device* %4, i1 zeroext true) #11, !dbg !15416
  br label %do.body, !dbg !15417

do.body:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15418, metadata !DIExpression()), !dbg !15419
  br label %do.body3, !dbg !15419

do.body3:                                         ; preds = %do.body
  br label %do.body4, !dbg !15420

do.body4:                                         ; preds = %do.body3
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15421, metadata !DIExpression()), !dbg !15423
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15424, metadata !DIExpression()), !dbg !15423
  %cmp = icmp eq i64* %__dummy, %__dummy2, !dbg !15423
  %conv = zext i1 %cmp to i32, !dbg !15423
  store i32 1, i32* %tmp, align 4, !dbg !15423
  %5 = load i32, i32* %tmp, align 4, !dbg !15423
  br label %do.body5, !dbg !15425

do.body5:                                         ; preds = %do.body4
  br label %do.body6, !dbg !15426

do.body6:                                         ; preds = %do.body5
  br label %do.body7, !dbg !15427

do.body7:                                         ; preds = %do.body6
  call void @llvm.dbg.declare(metadata i64* %__dummy8, metadata !15429, metadata !DIExpression()), !dbg !15432
  call void @llvm.dbg.declare(metadata i64* %__dummy29, metadata !15433, metadata !DIExpression()), !dbg !15432
  %cmp10 = icmp eq i64* %__dummy8, %__dummy29, !dbg !15432
  %conv11 = zext i1 %cmp10 to i32, !dbg !15432
  store i32 1, i32* %tmp12, align 4, !dbg !15432
  %6 = load i32, i32* %tmp12, align 4, !dbg !15432
  %call = call i64 @arch_local_irq_save() #11, !dbg !15434
  store i64 %call, i64* %flags, align 8, !dbg !15434
  br label %do.end, !dbg !15434

do.end:                                           ; preds = %do.body7
  br label %do.end13, !dbg !15427

do.end13:                                         ; preds = %do.end
  br label %do.body14, !dbg !15426

do.body14:                                        ; preds = %do.end13
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15435, !srcloc !15436
  br label %do.body15, !dbg !15435

do.body15:                                        ; preds = %do.body14
  %7 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15437
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %7, i32 0, i32 0, !dbg !15437
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %8 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15438
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0, !dbg !15439
  %rlock.i = bitcast %union.anon* %9 to %struct.raw_spinlock*, !dbg !15439
  br label %do.end17, !dbg !15437

do.end17:                                         ; preds = %do.body15
  br label %do.end18, !dbg !15435

do.end18:                                         ; preds = %do.end17
  br label %do.end19, !dbg !15426

do.end19:                                         ; preds = %do.end18
  br label %do.end20, !dbg !15425

do.end20:                                         ; preds = %do.end19
  br label %do.end21, !dbg !15420

do.end21:                                         ; preds = %do.end20
  %10 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15419
  %messages = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %10, i32 0, i32 1, !dbg !15419
  %11 = load i64, i64* %messages, align 8, !dbg !15419
  %add = add i64 %11, 1, !dbg !15419
  store i64 %add, i64* %messages, align 8, !dbg !15419
  %12 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15419
  %lock22 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %12, i32 0, i32 0, !dbg !15419
  %13 = load i64, i64* %flags, align 8, !dbg !15419
  store %struct.spinlock* %lock22, %struct.spinlock** %lock.addr.i218, align 8
  store i64 %13, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !15440
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !15440
  store i32 1, i32* %tmp.i, align 4, !dbg !15440
  %14 = load i32, i32* %tmp.i, align 4, !dbg !15440
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !15441
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !15441
  store i32 1, i32* %tmp8.i, align 4, !dbg !15441
  %15 = load i32, i32* %tmp8.i, align 4, !dbg !15441
  %16 = load i64, i64* %flags.addr.i, align 8, !dbg !15442
  call void @arch_local_irq_restore(i64 %16) #12, !dbg !15442
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15443, !srcloc !5559
  %17 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i218, align 8, !dbg !15444
  %18 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %17, i32 0, i32 0, !dbg !15444
  %rlock.i219 = bitcast %union.anon* %18 to %struct.raw_spinlock*, !dbg !15444
  br label %do.end23, !dbg !15419

do.end23:                                         ; preds = %do.end21
  br label %do.body24, !dbg !15445

do.body24:                                        ; preds = %do.end23
  call void @llvm.dbg.declare(metadata i64* %flags25, metadata !15446, metadata !DIExpression()), !dbg !15447
  br label %do.body26, !dbg !15447

do.body26:                                        ; preds = %do.body24
  br label %do.body27, !dbg !15448

do.body27:                                        ; preds = %do.body26
  call void @llvm.dbg.declare(metadata i64* %__dummy28, metadata !15449, metadata !DIExpression()), !dbg !15451
  call void @llvm.dbg.declare(metadata i64* %__dummy229, metadata !15452, metadata !DIExpression()), !dbg !15451
  %cmp30 = icmp eq i64* %__dummy28, %__dummy229, !dbg !15451
  %conv31 = zext i1 %cmp30 to i32, !dbg !15451
  store i32 1, i32* %tmp32, align 4, !dbg !15451
  %19 = load i32, i32* %tmp32, align 4, !dbg !15451
  br label %do.body33, !dbg !15453

do.body33:                                        ; preds = %do.body27
  br label %do.body34, !dbg !15454

do.body34:                                        ; preds = %do.body33
  br label %do.body35, !dbg !15455

do.body35:                                        ; preds = %do.body34
  call void @llvm.dbg.declare(metadata i64* %__dummy36, metadata !15457, metadata !DIExpression()), !dbg !15460
  call void @llvm.dbg.declare(metadata i64* %__dummy237, metadata !15461, metadata !DIExpression()), !dbg !15460
  %cmp38 = icmp eq i64* %__dummy36, %__dummy237, !dbg !15460
  %conv39 = zext i1 %cmp38 to i32, !dbg !15460
  store i32 1, i32* %tmp40, align 4, !dbg !15460
  %20 = load i32, i32* %tmp40, align 4, !dbg !15460
  %call41 = call i64 @arch_local_irq_save() #11, !dbg !15462
  store i64 %call41, i64* %flags25, align 8, !dbg !15462
  br label %do.end42, !dbg !15462

do.end42:                                         ; preds = %do.body35
  br label %do.end43, !dbg !15455

do.end43:                                         ; preds = %do.end42
  br label %do.body44, !dbg !15454

do.body44:                                        ; preds = %do.end43
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15463, !srcloc !15464
  br label %do.body45, !dbg !15463

do.body45:                                        ; preds = %do.body44
  %21 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15465
  %lock46 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %21, i32 0, i32 0, !dbg !15465
  store %struct.spinlock* %lock46, %struct.spinlock** %lock.addr.i220, align 8
  %22 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i220, align 8, !dbg !15466
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0, !dbg !15467
  %rlock.i221 = bitcast %union.anon* %23 to %struct.raw_spinlock*, !dbg !15467
  br label %do.end48, !dbg !15465

do.end48:                                         ; preds = %do.body45
  br label %do.end49, !dbg !15463

do.end49:                                         ; preds = %do.end48
  br label %do.end50, !dbg !15454

do.end50:                                         ; preds = %do.end49
  br label %do.end51, !dbg !15453

do.end51:                                         ; preds = %do.end50
  br label %do.end52, !dbg !15448

do.end52:                                         ; preds = %do.end51
  %24 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15447
  %messages53 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %24, i32 0, i32 1, !dbg !15447
  %25 = load i64, i64* %messages53, align 8, !dbg !15447
  %add54 = add i64 %25, 1, !dbg !15447
  store i64 %add54, i64* %messages53, align 8, !dbg !15447
  %26 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15447
  %lock55 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %26, i32 0, i32 0, !dbg !15447
  %27 = load i64, i64* %flags25, align 8, !dbg !15447
  store %struct.spinlock* %lock55, %struct.spinlock** %lock.addr.i222, align 8
  store i64 %27, i64* %flags.addr.i223, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !15468
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !15468
  store i32 1, i32* %tmp.i224, align 4, !dbg !15468
  %28 = load i32, i32* %tmp.i224, align 4, !dbg !15468
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !15469
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !15469
  store i32 1, i32* %tmp8.i225, align 4, !dbg !15469
  %29 = load i32, i32* %tmp8.i225, align 4, !dbg !15469
  %30 = load i64, i64* %flags.addr.i223, align 8, !dbg !15470
  call void @arch_local_irq_restore(i64 %30) #12, !dbg !15470
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15471, !srcloc !5559
  %31 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i222, align 8, !dbg !15472
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0, !dbg !15472
  %rlock.i226 = bitcast %union.anon* %32 to %struct.raw_spinlock*, !dbg !15472
  br label %do.end56, !dbg !15447

do.end56:                                         ; preds = %do.end52
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !15473, metadata !DIExpression()), !dbg !15475
  %33 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15475
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %33, i32 0, i32 0, !dbg !15475
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %transfers, i32 0, i32 0, !dbg !15475
  %34 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15475
  %35 = bitcast %struct.list_head* %34 to i8*, !dbg !15475
  store i8* %35, i8** %__mptr, align 8, !dbg !15475
  br label %do.body57, !dbg !15475

do.body57:                                        ; preds = %do.end56
  br label %do.end58, !dbg !15476

do.end58:                                         ; preds = %do.body57
  %36 = load i8*, i8** %__mptr, align 8, !dbg !15475
  %add.ptr = getelementptr i8, i8* %36, i64 -120, !dbg !15475
  %37 = bitcast i8* %add.ptr to %struct.spi_transfer*, !dbg !15475
  store %struct.spi_transfer* %37, %struct.spi_transfer** %tmp59, align 8, !dbg !15476
  %38 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp59, align 8, !dbg !15475
  store %struct.spi_transfer* %38, %struct.spi_transfer** %xfer, align 8, !dbg !15478
  br label %for.cond, !dbg !15478

for.cond:                                         ; preds = %do.end195, %do.end58
  %39 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15479
  %transfer_list = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %39, i32 0, i32 19, !dbg !15479
  %40 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15479
  %transfers60 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %40, i32 0, i32 0, !dbg !15479
  %cmp61 = icmp eq %struct.list_head* %transfer_list, %transfers60, !dbg !15479
  %lnot = xor i1 %cmp61, true, !dbg !15479
  br i1 %lnot, label %for.body, label %for.end, !dbg !15478

for.body:                                         ; preds = %for.cond
  %41 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15480
  %42 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15481
  call void @trace_spi_transfer_start(%struct.spi_message* %41, %struct.spi_transfer* %42) #11, !dbg !15482
  %43 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15483
  %44 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15484
  %45 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15485
  call void @spi_statistics_add_transfer_stats(%struct.spi_statistics* %43, %struct.spi_transfer* %44, %struct.spi_controller* %45) #11, !dbg !15486
  %46 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15487
  %47 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15488
  %48 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15489
  call void @spi_statistics_add_transfer_stats(%struct.spi_statistics* %46, %struct.spi_transfer* %47, %struct.spi_controller* %48) #11, !dbg !15490
  %49 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15491
  %ptp_sts_supported = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %49, i32 0, i32 65, !dbg !15493
  %50 = load i8, i8* %ptp_sts_supported, align 8, !dbg !15493
  %tobool = trunc i8 %50 to i1, !dbg !15493
  br i1 %tobool, label %if.end, label %if.then, !dbg !15494

if.then:                                          ; preds = %for.body
  %51 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15495
  %ptp_sts_word_pre = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %51, i32 0, i32 15, !dbg !15497
  store i32 0, i32* %ptp_sts_word_pre, align 8, !dbg !15498
  %52 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15499
  %ptp_sts = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %52, i32 0, i32 17, !dbg !15500
  %53 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts, align 8, !dbg !15500
  call void @ptp_read_system_prets(%struct.ptp_system_timestamp* %53) #11, !dbg !15501
  br label %if.end, !dbg !15502

if.end:                                           ; preds = %if.then, %for.body
  %54 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15503
  %tx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %54, i32 0, i32 0, !dbg !15504
  %55 = load i8*, i8** %tx_buf, align 8, !dbg !15504
  %tobool63 = icmp ne i8* %55, null, !dbg !15503
  br i1 %tobool63, label %if.then65, label %lor.lhs.false, !dbg !15505

lor.lhs.false:                                    ; preds = %if.end
  %56 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15506
  %rx_buf = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %56, i32 0, i32 1, !dbg !15507
  %57 = load i8*, i8** %rx_buf, align 8, !dbg !15507
  %tobool64 = icmp ne i8* %57, null, !dbg !15506
  br i1 %tobool64, label %if.then65, label %if.else, !dbg !15508

if.then65:                                        ; preds = %lor.lhs.false, %if.end
  %58 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15509
  %xfer_completion = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %58, i32 0, i32 39, !dbg !15510
  call void @reinit_completion(%struct.completion* %xfer_completion) #11, !dbg !15511
  br label %fallback_pio, !dbg !15511

fallback_pio:                                     ; preds = %if.then75, %if.then65
  call void @llvm.dbg.label(metadata !15512), !dbg !15513
  %59 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15514
  %transfer_one = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %59, i32 0, i32 48, !dbg !15515
  %60 = load i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)*, i32 (%struct.spi_controller*, %struct.spi_device*, %struct.spi_transfer*)** %transfer_one, align 8, !dbg !15515
  %61 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15516
  %62 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15517
  %spi66 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %62, i32 0, i32 1, !dbg !15518
  %63 = load %struct.spi_device*, %struct.spi_device** %spi66, align 8, !dbg !15518
  %64 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15519
  %call67 = call i32 %60(%struct.spi_controller* %61, %struct.spi_device* %63, %struct.spi_transfer* %64) #11, !dbg !15514
  store i32 %call67, i32* %ret, align 4, !dbg !15520
  %65 = load i32, i32* %ret, align 4, !dbg !15521
  %cmp68 = icmp slt i32 %65, 0, !dbg !15522
  br i1 %cmp68, label %if.then70, label %if.end148, !dbg !15523

if.then70:                                        ; preds = %fallback_pio
  %66 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15524
  %cur_msg_mapped = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %66, i32 0, i32 35, !dbg !15526
  %67 = load i8, i8* %cur_msg_mapped, align 2, !dbg !15526
  %tobool71 = trunc i8 %67 to i1, !dbg !15526
  br i1 %tobool71, label %land.lhs.true, label %if.end81, !dbg !15527

land.lhs.true:                                    ; preds = %if.then70
  %68 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15528
  %error = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %68, i32 0, i32 20, !dbg !15529
  %69 = load i16, i16* %error, align 8, !dbg !15529
  %conv73 = zext i16 %69 to i64, !dbg !15528
  %and = and i64 %conv73, 1, !dbg !15530
  %tobool74 = icmp ne i64 %and, 0, !dbg !15530
  br i1 %tobool74, label %if.then75, label %if.end81, !dbg !15531

if.then75:                                        ; preds = %land.lhs.true
  %70 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15532
  %71 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15534
  %call76 = call i32 @__spi_unmap_msg(%struct.spi_controller* %70, %struct.spi_message* %71) #11, !dbg !15535
  %72 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15536
  %fallback = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %72, i32 0, i32 38, !dbg !15537
  store i8 1, i8* %fallback, align 1, !dbg !15538
  %73 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15539
  %error77 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %73, i32 0, i32 20, !dbg !15540
  %74 = load i16, i16* %error77, align 8, !dbg !15541
  %conv78 = zext i16 %74 to i64, !dbg !15541
  %and79 = and i64 %conv78, -2, !dbg !15541
  %conv80 = trunc i64 %and79 to i16, !dbg !15541
  store i16 %conv80, i16* %error77, align 8, !dbg !15541
  br label %fallback_pio, !dbg !15542

if.end81:                                         ; preds = %land.lhs.true, %if.then70
  br label %do.body82, !dbg !15543

do.body82:                                        ; preds = %if.end81
  call void @llvm.dbg.declare(metadata i64* %flags83, metadata !15544, metadata !DIExpression()), !dbg !15545
  br label %do.body84, !dbg !15545

do.body84:                                        ; preds = %do.body82
  br label %do.body85, !dbg !15546

do.body85:                                        ; preds = %do.body84
  call void @llvm.dbg.declare(metadata i64* %__dummy86, metadata !15547, metadata !DIExpression()), !dbg !15549
  call void @llvm.dbg.declare(metadata i64* %__dummy287, metadata !15550, metadata !DIExpression()), !dbg !15549
  %cmp88 = icmp eq i64* %__dummy86, %__dummy287, !dbg !15549
  %conv89 = zext i1 %cmp88 to i32, !dbg !15549
  store i32 1, i32* %tmp90, align 4, !dbg !15549
  %75 = load i32, i32* %tmp90, align 4, !dbg !15549
  br label %do.body91, !dbg !15551

do.body91:                                        ; preds = %do.body85
  br label %do.body92, !dbg !15552

do.body92:                                        ; preds = %do.body91
  br label %do.body93, !dbg !15553

do.body93:                                        ; preds = %do.body92
  call void @llvm.dbg.declare(metadata i64* %__dummy94, metadata !15555, metadata !DIExpression()), !dbg !15558
  call void @llvm.dbg.declare(metadata i64* %__dummy295, metadata !15559, metadata !DIExpression()), !dbg !15558
  %cmp96 = icmp eq i64* %__dummy94, %__dummy295, !dbg !15558
  %conv97 = zext i1 %cmp96 to i32, !dbg !15558
  store i32 1, i32* %tmp98, align 4, !dbg !15558
  %76 = load i32, i32* %tmp98, align 4, !dbg !15558
  %call99 = call i64 @arch_local_irq_save() #11, !dbg !15560
  store i64 %call99, i64* %flags83, align 8, !dbg !15560
  br label %do.end100, !dbg !15560

do.end100:                                        ; preds = %do.body93
  br label %do.end101, !dbg !15553

do.end101:                                        ; preds = %do.end100
  br label %do.body102, !dbg !15552

do.body102:                                       ; preds = %do.end101
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15561, !srcloc !15562
  br label %do.body103, !dbg !15561

do.body103:                                       ; preds = %do.body102
  %77 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15563
  %lock104 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %77, i32 0, i32 0, !dbg !15563
  store %struct.spinlock* %lock104, %struct.spinlock** %lock.addr.i227, align 8
  %78 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i227, align 8, !dbg !15564
  %79 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %78, i32 0, i32 0, !dbg !15565
  %rlock.i228 = bitcast %union.anon* %79 to %struct.raw_spinlock*, !dbg !15565
  br label %do.end106, !dbg !15563

do.end106:                                        ; preds = %do.body103
  br label %do.end107, !dbg !15561

do.end107:                                        ; preds = %do.end106
  br label %do.end108, !dbg !15552

do.end108:                                        ; preds = %do.end107
  br label %do.end109, !dbg !15551

do.end109:                                        ; preds = %do.end108
  br label %do.end110, !dbg !15546

do.end110:                                        ; preds = %do.end109
  %80 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15545
  %errors = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %80, i32 0, i32 3, !dbg !15545
  %81 = load i64, i64* %errors, align 8, !dbg !15545
  %add111 = add i64 %81, 1, !dbg !15545
  store i64 %add111, i64* %errors, align 8, !dbg !15545
  %82 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15545
  %lock112 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %82, i32 0, i32 0, !dbg !15545
  %83 = load i64, i64* %flags83, align 8, !dbg !15545
  store %struct.spinlock* %lock112, %struct.spinlock** %lock.addr.i229, align 8
  store i64 %83, i64* %flags.addr.i230, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !15566
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !15566
  store i32 1, i32* %tmp.i231, align 4, !dbg !15566
  %84 = load i32, i32* %tmp.i231, align 4, !dbg !15566
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !15567
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !15567
  store i32 1, i32* %tmp8.i232, align 4, !dbg !15567
  %85 = load i32, i32* %tmp8.i232, align 4, !dbg !15567
  %86 = load i64, i64* %flags.addr.i230, align 8, !dbg !15568
  call void @arch_local_irq_restore(i64 %86) #12, !dbg !15568
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15569, !srcloc !5559
  %87 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i229, align 8, !dbg !15570
  %88 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %87, i32 0, i32 0, !dbg !15570
  %rlock.i233 = bitcast %union.anon* %88 to %struct.raw_spinlock*, !dbg !15570
  br label %do.end113, !dbg !15545

do.end113:                                        ; preds = %do.end110
  br label %do.body114, !dbg !15571

do.body114:                                       ; preds = %do.end113
  call void @llvm.dbg.declare(metadata i64* %flags115, metadata !15572, metadata !DIExpression()), !dbg !15573
  br label %do.body116, !dbg !15573

do.body116:                                       ; preds = %do.body114
  br label %do.body117, !dbg !15574

do.body117:                                       ; preds = %do.body116
  call void @llvm.dbg.declare(metadata i64* %__dummy118, metadata !15575, metadata !DIExpression()), !dbg !15577
  call void @llvm.dbg.declare(metadata i64* %__dummy2119, metadata !15578, metadata !DIExpression()), !dbg !15577
  %cmp120 = icmp eq i64* %__dummy118, %__dummy2119, !dbg !15577
  %conv121 = zext i1 %cmp120 to i32, !dbg !15577
  store i32 1, i32* %tmp122, align 4, !dbg !15577
  %89 = load i32, i32* %tmp122, align 4, !dbg !15577
  br label %do.body123, !dbg !15579

do.body123:                                       ; preds = %do.body117
  br label %do.body124, !dbg !15580

do.body124:                                       ; preds = %do.body123
  br label %do.body125, !dbg !15581

do.body125:                                       ; preds = %do.body124
  call void @llvm.dbg.declare(metadata i64* %__dummy126, metadata !15583, metadata !DIExpression()), !dbg !15586
  call void @llvm.dbg.declare(metadata i64* %__dummy2127, metadata !15587, metadata !DIExpression()), !dbg !15586
  %cmp128 = icmp eq i64* %__dummy126, %__dummy2127, !dbg !15586
  %conv129 = zext i1 %cmp128 to i32, !dbg !15586
  store i32 1, i32* %tmp130, align 4, !dbg !15586
  %90 = load i32, i32* %tmp130, align 4, !dbg !15586
  %call131 = call i64 @arch_local_irq_save() #11, !dbg !15588
  store i64 %call131, i64* %flags115, align 8, !dbg !15588
  br label %do.end132, !dbg !15588

do.end132:                                        ; preds = %do.body125
  br label %do.end133, !dbg !15581

do.end133:                                        ; preds = %do.end132
  br label %do.body134, !dbg !15580

do.body134:                                       ; preds = %do.end133
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15589, !srcloc !15590
  br label %do.body135, !dbg !15589

do.body135:                                       ; preds = %do.body134
  %91 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15591
  %lock136 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %91, i32 0, i32 0, !dbg !15591
  store %struct.spinlock* %lock136, %struct.spinlock** %lock.addr.i234, align 8
  %92 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i234, align 8, !dbg !15592
  %93 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %92, i32 0, i32 0, !dbg !15593
  %rlock.i235 = bitcast %union.anon* %93 to %struct.raw_spinlock*, !dbg !15593
  br label %do.end138, !dbg !15591

do.end138:                                        ; preds = %do.body135
  br label %do.end139, !dbg !15589

do.end139:                                        ; preds = %do.end138
  br label %do.end140, !dbg !15580

do.end140:                                        ; preds = %do.end139
  br label %do.end141, !dbg !15579

do.end141:                                        ; preds = %do.end140
  br label %do.end142, !dbg !15574

do.end142:                                        ; preds = %do.end141
  %94 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15573
  %errors143 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %94, i32 0, i32 3, !dbg !15573
  %95 = load i64, i64* %errors143, align 8, !dbg !15573
  %add144 = add i64 %95, 1, !dbg !15573
  store i64 %add144, i64* %errors143, align 8, !dbg !15573
  %96 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15573
  %lock145 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %96, i32 0, i32 0, !dbg !15573
  %97 = load i64, i64* %flags115, align 8, !dbg !15573
  store %struct.spinlock* %lock145, %struct.spinlock** %lock.addr.i236, align 8
  store i64 %97, i64* %flags.addr.i237, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !15594
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !15594
  store i32 1, i32* %tmp.i238, align 4, !dbg !15594
  %98 = load i32, i32* %tmp.i238, align 4, !dbg !15594
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !15595
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !15595
  store i32 1, i32* %tmp8.i239, align 4, !dbg !15595
  %99 = load i32, i32* %tmp8.i239, align 4, !dbg !15595
  %100 = load i64, i64* %flags.addr.i237, align 8, !dbg !15596
  call void @arch_local_irq_restore(i64 %100) #12, !dbg !15596
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15597, !srcloc !5559
  %101 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i236, align 8, !dbg !15598
  %102 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %101, i32 0, i32 0, !dbg !15598
  %rlock.i240 = bitcast %union.anon* %102 to %struct.raw_spinlock*, !dbg !15598
  br label %do.end146, !dbg !15573

do.end146:                                        ; preds = %do.end142
  %103 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15599
  %spi147 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %103, i32 0, i32 1, !dbg !15599
  %104 = load %struct.spi_device*, %struct.spi_device** %spi147, align 8, !dbg !15599
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %104, i32 0, i32 0, !dbg !15599
  %105 = load i32, i32* %ret, align 4, !dbg !15599
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.79, i64 0, i64 0), i32 %105) #14, !dbg !15599
  br label %out, !dbg !15600

if.end148:                                        ; preds = %fallback_pio
  %106 = load i32, i32* %ret, align 4, !dbg !15601
  %cmp149 = icmp sgt i32 %106, 0, !dbg !15603
  br i1 %cmp149, label %if.then151, label %if.end157, !dbg !15604

if.then151:                                       ; preds = %if.end148
  %107 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15605
  %108 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15607
  %109 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15608
  %call152 = call i32 @spi_transfer_wait(%struct.spi_controller* %107, %struct.spi_message* %108, %struct.spi_transfer* %109) #11, !dbg !15609
  store i32 %call152, i32* %ret, align 4, !dbg !15610
  %110 = load i32, i32* %ret, align 4, !dbg !15611
  %cmp153 = icmp slt i32 %110, 0, !dbg !15613
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !15614

if.then155:                                       ; preds = %if.then151
  %111 = load i32, i32* %ret, align 4, !dbg !15615
  %112 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15616
  %status = getelementptr inbounds %struct.spi_message, %struct.spi_message* %112, i32 0, i32 7, !dbg !15617
  store i32 %111, i32* %status, align 8, !dbg !15618
  br label %if.end156, !dbg !15616

if.end156:                                        ; preds = %if.then155, %if.then151
  br label %if.end157, !dbg !15619

if.end157:                                        ; preds = %if.end156, %if.end148
  br label %if.end164, !dbg !15620

if.else:                                          ; preds = %lor.lhs.false
  %113 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15621
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %113, i32 0, i32 2, !dbg !15624
  %114 = load i32, i32* %len, align 8, !dbg !15624
  %tobool158 = icmp ne i32 %114, 0, !dbg !15621
  br i1 %tobool158, label %if.then159, label %if.end163, !dbg !15625

if.then159:                                       ; preds = %if.else
  %115 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15626
  %spi160 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %115, i32 0, i32 1, !dbg !15626
  %116 = load %struct.spi_device*, %struct.spi_device** %spi160, align 8, !dbg !15626
  %dev161 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %116, i32 0, i32 0, !dbg !15626
  %117 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15626
  %len162 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %117, i32 0, i32 2, !dbg !15626
  %118 = load i32, i32* %len162, align 8, !dbg !15626
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev161, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.80, i64 0, i64 0), i32 %118) #14, !dbg !15626
  br label %if.end163, !dbg !15626

if.end163:                                        ; preds = %if.then159, %if.else
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %if.end157
  %119 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15627
  %ptp_sts_supported165 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %119, i32 0, i32 65, !dbg !15629
  %120 = load i8, i8* %ptp_sts_supported165, align 8, !dbg !15629
  %tobool166 = trunc i8 %120 to i1, !dbg !15629
  br i1 %tobool166, label %if.end170, label %if.then167, !dbg !15630

if.then167:                                       ; preds = %if.end164
  %121 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15631
  %ptp_sts168 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %121, i32 0, i32 17, !dbg !15633
  %122 = load %struct.ptp_system_timestamp*, %struct.ptp_system_timestamp** %ptp_sts168, align 8, !dbg !15633
  call void @ptp_read_system_postts(%struct.ptp_system_timestamp* %122) #11, !dbg !15634
  %123 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15635
  %len169 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %123, i32 0, i32 2, !dbg !15636
  %124 = load i32, i32* %len169, align 8, !dbg !15636
  %125 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15637
  %ptp_sts_word_post = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %125, i32 0, i32 16, !dbg !15638
  store i32 %124, i32* %ptp_sts_word_post, align 4, !dbg !15639
  br label %if.end170, !dbg !15640

if.end170:                                        ; preds = %if.then167, %if.end164
  %126 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15641
  %127 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15642
  call void @trace_spi_transfer_stop(%struct.spi_message* %126, %struct.spi_transfer* %127) #11, !dbg !15643
  %128 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15644
  %status171 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %128, i32 0, i32 7, !dbg !15646
  %129 = load i32, i32* %status171, align 8, !dbg !15646
  %cmp172 = icmp ne i32 %129, -115, !dbg !15647
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !15648

if.then174:                                       ; preds = %if.end170
  br label %out, !dbg !15649

if.end175:                                        ; preds = %if.end170
  %130 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15650
  %call176 = call i32 @spi_transfer_delay_exec(%struct.spi_transfer* %130) #11, !dbg !15651
  %131 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15652
  %cs_change = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %131, i32 0, i32 7, !dbg !15654
  %bf.load = load i8, i8* %cs_change, align 8, !dbg !15654
  %bf.clear = and i8 %bf.load, 1, !dbg !15654
  %bf.cast = zext i8 %bf.clear to i32, !dbg !15654
  %tobool177 = icmp ne i32 %bf.cast, 0, !dbg !15652
  br i1 %tobool177, label %if.then178, label %if.end188, !dbg !15655

if.then178:                                       ; preds = %if.end175
  %132 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15656
  %transfer_list179 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %132, i32 0, i32 19, !dbg !15659
  %133 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15660
  %transfers180 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %133, i32 0, i32 0, !dbg !15661
  %call181 = call i32 @list_is_last(%struct.list_head* %transfer_list179, %struct.list_head* %transfers180) #11, !dbg !15662
  %tobool182 = icmp ne i32 %call181, 0, !dbg !15662
  br i1 %tobool182, label %if.then183, label %if.else184, !dbg !15663

if.then183:                                       ; preds = %if.then178
  store i8 1, i8* %keep_cs, align 1, !dbg !15664
  br label %if.end187, !dbg !15666

if.else184:                                       ; preds = %if.then178
  %134 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15667
  %spi185 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %134, i32 0, i32 1, !dbg !15669
  %135 = load %struct.spi_device*, %struct.spi_device** %spi185, align 8, !dbg !15669
  call void @spi_set_cs(%struct.spi_device* %135, i1 zeroext false) #11, !dbg !15670
  %136 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15671
  %137 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15672
  call void @_spi_transfer_cs_change_delay(%struct.spi_message* %136, %struct.spi_transfer* %137) #11, !dbg !15673
  %138 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15674
  %spi186 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %138, i32 0, i32 1, !dbg !15675
  %139 = load %struct.spi_device*, %struct.spi_device** %spi186, align 8, !dbg !15675
  call void @spi_set_cs(%struct.spi_device* %139, i1 zeroext true) #11, !dbg !15676
  br label %if.end187

if.end187:                                        ; preds = %if.else184, %if.then183
  br label %if.end188, !dbg !15677

if.end188:                                        ; preds = %if.end187, %if.end175
  %140 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15678
  %len189 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %140, i32 0, i32 2, !dbg !15679
  %141 = load i32, i32* %len189, align 8, !dbg !15679
  %142 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15680
  %actual_length = getelementptr inbounds %struct.spi_message, %struct.spi_message* %142, i32 0, i32 6, !dbg !15681
  %143 = load i32, i32* %actual_length, align 4, !dbg !15682
  %add190 = add i32 %143, %141, !dbg !15682
  store i32 %add190, i32* %actual_length, align 4, !dbg !15682
  br label %for.inc, !dbg !15683

for.inc:                                          ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i8** %__mptr191, metadata !15684, metadata !DIExpression()), !dbg !15686
  %144 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer, align 8, !dbg !15686
  %transfer_list192 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %144, i32 0, i32 19, !dbg !15686
  %next193 = getelementptr inbounds %struct.list_head, %struct.list_head* %transfer_list192, i32 0, i32 0, !dbg !15686
  %145 = load %struct.list_head*, %struct.list_head** %next193, align 8, !dbg !15686
  %146 = bitcast %struct.list_head* %145 to i8*, !dbg !15686
  store i8* %146, i8** %__mptr191, align 8, !dbg !15686
  br label %do.body194, !dbg !15686

do.body194:                                       ; preds = %for.inc
  br label %do.end195, !dbg !15687

do.end195:                                        ; preds = %do.body194
  %147 = load i8*, i8** %__mptr191, align 8, !dbg !15686
  %add.ptr197 = getelementptr i8, i8* %147, i64 -120, !dbg !15686
  %148 = bitcast i8* %add.ptr197 to %struct.spi_transfer*, !dbg !15686
  store %struct.spi_transfer* %148, %struct.spi_transfer** %tmp196, align 8, !dbg !15687
  %149 = load %struct.spi_transfer*, %struct.spi_transfer** %tmp196, align 8, !dbg !15686
  store %struct.spi_transfer* %149, %struct.spi_transfer** %xfer, align 8, !dbg !15479
  br label %for.cond, !dbg !15479, !llvm.loop !15689

for.end:                                          ; preds = %for.cond
  br label %out, !dbg !15690

out:                                              ; preds = %for.end, %if.then174, %do.end146
  call void @llvm.dbg.label(metadata !15691), !dbg !15692
  %150 = load i32, i32* %ret, align 4, !dbg !15693
  %cmp198 = icmp ne i32 %150, 0, !dbg !15695
  br i1 %cmp198, label %if.then202, label %lor.lhs.false200, !dbg !15696

lor.lhs.false200:                                 ; preds = %out
  %151 = load i8, i8* %keep_cs, align 1, !dbg !15697
  %tobool201 = trunc i8 %151 to i1, !dbg !15697
  br i1 %tobool201, label %if.end204, label %if.then202, !dbg !15698

if.then202:                                       ; preds = %lor.lhs.false200, %out
  %152 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15699
  %spi203 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %152, i32 0, i32 1, !dbg !15700
  %153 = load %struct.spi_device*, %struct.spi_device** %spi203, align 8, !dbg !15700
  call void @spi_set_cs(%struct.spi_device* %153, i1 zeroext false) #11, !dbg !15701
  br label %if.end204, !dbg !15701

if.end204:                                        ; preds = %if.then202, %lor.lhs.false200
  %154 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15702
  %status205 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %154, i32 0, i32 7, !dbg !15704
  %155 = load i32, i32* %status205, align 8, !dbg !15704
  %cmp206 = icmp eq i32 %155, -115, !dbg !15705
  br i1 %cmp206, label %if.then208, label %if.end210, !dbg !15706

if.then208:                                       ; preds = %if.end204
  %156 = load i32, i32* %ret, align 4, !dbg !15707
  %157 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15708
  %status209 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %157, i32 0, i32 7, !dbg !15709
  store i32 %156, i32* %status209, align 8, !dbg !15710
  br label %if.end210, !dbg !15708

if.end210:                                        ; preds = %if.then208, %if.end204
  %158 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15711
  %status211 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %158, i32 0, i32 7, !dbg !15713
  %159 = load i32, i32* %status211, align 8, !dbg !15713
  %tobool212 = icmp ne i32 %159, 0, !dbg !15711
  br i1 %tobool212, label %land.lhs.true213, label %if.end217, !dbg !15714

land.lhs.true213:                                 ; preds = %if.end210
  %160 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15715
  %handle_err = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %160, i32 0, i32 49, !dbg !15716
  %161 = load void (%struct.spi_controller*, %struct.spi_message*)*, void (%struct.spi_controller*, %struct.spi_message*)** %handle_err, align 8, !dbg !15716
  %tobool214 = icmp ne void (%struct.spi_controller*, %struct.spi_message*)* %161, null, !dbg !15715
  br i1 %tobool214, label %if.then215, label %if.end217, !dbg !15717

if.then215:                                       ; preds = %land.lhs.true213
  %162 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15718
  %handle_err216 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %162, i32 0, i32 49, !dbg !15719
  %163 = load void (%struct.spi_controller*, %struct.spi_message*)*, void (%struct.spi_controller*, %struct.spi_message*)** %handle_err216, align 8, !dbg !15719
  %164 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15720
  %165 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15721
  call void %163(%struct.spi_controller* %164, %struct.spi_message* %165) #11, !dbg !15718
  br label %if.end217, !dbg !15718

if.end217:                                        ; preds = %if.then215, %land.lhs.true213, %if.end210
  %166 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15722
  call void @spi_finalize_current_message(%struct.spi_controller* %166) #11, !dbg !15723
  %167 = load i32, i32* %ret, align 4, !dbg !15724
  ret i32 %167, !dbg !15725
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_init_queue(%struct.spi_controller* %ctlr) #0 !dbg !15726 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !15727, metadata !DIExpression()), !dbg !15728
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15729
  %running = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 31, !dbg !15730
  store i8 0, i8* %running, align 2, !dbg !15731
  %1 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15732
  %busy = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %1, i32 0, i32 30, !dbg !15733
  store i8 0, i8* %busy, align 1, !dbg !15734
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15735
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 0, !dbg !15736
  %call = call i8* @dev_name(%struct.device* %dev) #11, !dbg !15737
  %call1 = call %struct.kthread_worker* (i32, i8*, ...) @kthread_create_worker(i32 0, i8* %call) #11, !dbg !15738
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15739
  %kworker = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %3, i32 0, i32 24, !dbg !15740
  store %struct.kthread_worker* %call1, %struct.kthread_worker** %kworker, align 8, !dbg !15741
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15742
  %kworker2 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 24, !dbg !15744
  %5 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker2, align 8, !dbg !15744
  %6 = bitcast %struct.kthread_worker* %5 to i8*, !dbg !15742
  %call3 = call zeroext i1 @IS_ERR(i8* %6) #11, !dbg !15745
  br i1 %call3, label %if.then, label %if.end, !dbg !15746

if.then:                                          ; preds = %entry
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15747
  %dev4 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 0, !dbg !15747
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.83, i64 0, i64 0)) #14, !dbg !15747
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15749
  %kworker5 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %8, i32 0, i32 24, !dbg !15750
  %9 = load %struct.kthread_worker*, %struct.kthread_worker** %kworker5, align 8, !dbg !15750
  %10 = bitcast %struct.kthread_worker* %9 to i8*, !dbg !15749
  %call6 = call i64 @PTR_ERR(i8* %10) #11, !dbg !15751
  %conv = trunc i64 %call6 to i32, !dbg !15751
  store i32 %conv, i32* %retval, align 4, !dbg !15752
  br label %return, !dbg !15752

if.end:                                           ; preds = %entry
  br label %do.body, !dbg !15753

do.body:                                          ; preds = %if.end
  %11 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15754
  %pump_messages = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %11, i32 0, i32 25, !dbg !15754
  %12 = bitcast %struct.kthread_work* %pump_messages to i8*, !dbg !15754
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 40, i1 false), !dbg !15754
  %13 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15754
  %pump_messages7 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %13, i32 0, i32 25, !dbg !15754
  %node = getelementptr inbounds %struct.kthread_work, %struct.kthread_work* %pump_messages7, i32 0, i32 0, !dbg !15754
  call void @INIT_LIST_HEAD(%struct.list_head* %node) #11, !dbg !15754
  %14 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15754
  %pump_messages8 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %14, i32 0, i32 25, !dbg !15754
  %func = getelementptr inbounds %struct.kthread_work, %struct.kthread_work* %pump_messages8, i32 0, i32 1, !dbg !15754
  store void (%struct.kthread_work*)* @spi_pump_messages, void (%struct.kthread_work*)** %func, align 8, !dbg !15754
  br label %do.end, !dbg !15754

do.end:                                           ; preds = %do.body
  %15 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15756
  %rt = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %15, i32 0, i32 32, !dbg !15758
  %16 = load i8, i8* %rt, align 1, !dbg !15758
  %tobool = trunc i8 %16 to i1, !dbg !15758
  br i1 %tobool, label %if.then9, label %if.end10, !dbg !15759

if.then9:                                         ; preds = %do.end
  %17 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15760
  call void @spi_set_thread_rt(%struct.spi_controller* %17) #11, !dbg !15761
  br label %if.end10, !dbg !15761

if.end10:                                         ; preds = %if.then9, %do.end
  store i32 0, i32* %retval, align 4, !dbg !15762
  br label %return, !dbg !15762

return:                                           ; preds = %if.end10, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !15763
  ret i32 %18, !dbg !15763
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_spi_transfer_start(%struct.spi_message* %msg, %struct.spi_transfer* %xfer) #0 !dbg !15764 {
entry:
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !15765, metadata !DIExpression()), !dbg !15766
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !15767, metadata !DIExpression()), !dbg !15766
  ret void, !dbg !15766
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @reinit_completion(%struct.completion* %x) #0 !dbg !15768 {
entry:
  %x.addr = alloca %struct.completion*, align 8
  store %struct.completion* %x, %struct.completion** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.completion** %x.addr, metadata !15769, metadata !DIExpression()), !dbg !15770
  %0 = load %struct.completion*, %struct.completion** %x.addr, align 8, !dbg !15771
  %done = getelementptr inbounds %struct.completion, %struct.completion* %0, i32 0, i32 0, !dbg !15772
  store i32 0, i32* %done, align 8, !dbg !15773
  ret void, !dbg !15774
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_transfer_wait(%struct.spi_controller* %ctlr, %struct.spi_message* %msg, %struct.spi_transfer* %xfer) #0 !dbg !15775 {
entry:
  %lock.addr.i84 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i84, metadata !5420, metadata !DIExpression()), !dbg !15778
  %flags.addr.i85 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i85, metadata !5427, metadata !DIExpression()), !dbg !15785
  %tmp.i86 = alloca i32, align 4
  %tmp8.i87 = alloca i32, align 4
  %lock.addr.i82 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i82, metadata !5429, metadata !DIExpression()), !dbg !15786
  %lock.addr.i80 = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i80, metadata !5420, metadata !DIExpression()), !dbg !15793
  %flags.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %flags.addr.i, metadata !5427, metadata !DIExpression()), !dbg !15796
  %tmp.i = alloca i32, align 4
  %tmp8.i = alloca i32, align 4
  %lock.addr.i = alloca %struct.spinlock*, align 8
  call void @llvm.dbg.declare(metadata %struct.spinlock** %lock.addr.i, metadata !5429, metadata !DIExpression()), !dbg !15797
  %retval.i = alloca i64, align 8
  %m.addr.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr.i, metadata !15804, metadata !DIExpression()), !dbg !15809
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %statm = alloca %struct.spi_statistics*, align 8
  %stats = alloca %struct.spi_statistics*, align 8
  %ms = alloca i64, align 8
  %__base = alloca i32, align 4
  %__rem = alloca i32, align 4
  %tmp = alloca i32, align 4
  %flags = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %tmp22 = alloca i32, align 4
  %__dummy26 = alloca i64, align 8
  %__dummy227 = alloca i64, align 8
  %tmp30 = alloca i32, align 4
  %flags45 = alloca i64, align 8
  %__dummy48 = alloca i64, align 8
  %__dummy249 = alloca i64, align 8
  %tmp52 = alloca i32, align 4
  %__dummy56 = alloca i64, align 8
  %__dummy257 = alloca i64, align 8
  %tmp60 = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !15811, metadata !DIExpression()), !dbg !15812
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !15813, metadata !DIExpression()), !dbg !15814
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !15815, metadata !DIExpression()), !dbg !15816
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %statm, metadata !15817, metadata !DIExpression()), !dbg !15818
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15819
  %statistics = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %0, i32 0, i32 59, !dbg !15820
  store %struct.spi_statistics* %statistics, %struct.spi_statistics** %statm, align 8, !dbg !15818
  call void @llvm.dbg.declare(metadata %struct.spi_statistics** %stats, metadata !15821, metadata !DIExpression()), !dbg !15822
  %1 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15823
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %1, i32 0, i32 1, !dbg !15824
  %2 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !15824
  %statistics1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %2, i32 0, i32 16, !dbg !15825
  store %struct.spi_statistics* %statistics1, %struct.spi_statistics** %stats, align 8, !dbg !15822
  call void @llvm.dbg.declare(metadata i64* %ms, metadata !15826, metadata !DIExpression()), !dbg !15827
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15828
  %call = call zeroext i1 @spi_controller_is_slave(%struct.spi_controller* %3) #11, !dbg !15829
  br i1 %call, label %if.then, label %if.else, !dbg !15830

if.then:                                          ; preds = %entry
  %4 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15831
  %xfer_completion = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %4, i32 0, i32 39, !dbg !15834
  %call2 = call i32 @wait_for_completion_interruptible(%struct.completion* %xfer_completion) #11, !dbg !15835
  %tobool = icmp ne i32 %call2, 0, !dbg !15835
  br i1 %tobool, label %if.then3, label %if.end, !dbg !15836

if.then3:                                         ; preds = %if.then
  store i32 -4, i32* %retval, align 4, !dbg !15837
  br label %return, !dbg !15837

if.end:                                           ; preds = %if.then
  br label %if.end79, !dbg !15839

if.else:                                          ; preds = %entry
  %5 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !15840
  %len = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %5, i32 0, i32 2, !dbg !15841
  %6 = load i32, i32* %len, align 8, !dbg !15841
  %conv = zext i32 %6 to i64, !dbg !15840
  %mul = mul i64 8000, %conv, !dbg !15842
  store i64 %mul, i64* %ms, align 8, !dbg !15843
  call void @llvm.dbg.declare(metadata i32* %__base, metadata !15844, metadata !DIExpression()), !dbg !15846
  %7 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !15846
  %speed_hz = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %7, i32 0, i32 13, !dbg !15846
  %8 = load i32, i32* %speed_hz, align 8, !dbg !15846
  store i32 %8, i32* %__base, align 4, !dbg !15846
  call void @llvm.dbg.declare(metadata i32* %__rem, metadata !15847, metadata !DIExpression()), !dbg !15846
  %9 = load i64, i64* %ms, align 8, !dbg !15846
  %10 = load i32, i32* %__base, align 4, !dbg !15846
  %conv4 = zext i32 %10 to i64, !dbg !15846
  %rem = urem i64 %9, %conv4, !dbg !15846
  %conv5 = trunc i64 %rem to i32, !dbg !15846
  store i32 %conv5, i32* %__rem, align 4, !dbg !15846
  %11 = load i64, i64* %ms, align 8, !dbg !15846
  %12 = load i32, i32* %__base, align 4, !dbg !15846
  %conv6 = zext i32 %12 to i64, !dbg !15846
  %div = udiv i64 %11, %conv6, !dbg !15846
  store i64 %div, i64* %ms, align 8, !dbg !15846
  %13 = load i32, i32* %__rem, align 4, !dbg !15846
  store i32 %13, i32* %tmp, align 4, !dbg !15846
  %14 = load i32, i32* %tmp, align 4, !dbg !15846
  %15 = load i64, i64* %ms, align 8, !dbg !15848
  %add = add i64 %15, 200, !dbg !15849
  %16 = load i64, i64* %ms, align 8, !dbg !15850
  %add7 = add i64 %16, %add, !dbg !15850
  store i64 %add7, i64* %ms, align 8, !dbg !15850
  %17 = load i64, i64* %ms, align 8, !dbg !15851
  %cmp = icmp ugt i64 %17, 4294967295, !dbg !15853
  br i1 %cmp, label %if.then9, label %if.end10, !dbg !15854

if.then9:                                         ; preds = %if.else
  store i64 4294967295, i64* %ms, align 8, !dbg !15855
  br label %if.end10, !dbg !15856

if.end10:                                         ; preds = %if.then9, %if.else
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !15857
  %xfer_completion11 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 39, !dbg !15858
  %19 = load i64, i64* %ms, align 8, !dbg !15859
  %conv12 = trunc i64 %19 to i32, !dbg !15859
  store i32 %conv12, i32* %m.addr.i, align 4
  %20 = load i32, i32* %m.addr.i, align 4, !dbg !15860
  %21 = call i1 @llvm.is.constant.i32(i32 %20) #7, !dbg !15862
  br i1 %21, label %if.then.i, label %if.else.i, !dbg !15863

if.then.i:                                        ; preds = %if.end10
  %22 = load i32, i32* %m.addr.i, align 4, !dbg !15864
  %cmp.i = icmp slt i32 %22, 0, !dbg !15867
  br i1 %cmp.i, label %if.then1.i, label %if.end.i, !dbg !15868

if.then1.i:                                       ; preds = %if.then.i
  store i64 4611686018427387902, i64* %retval.i, align 8, !dbg !15869
  br label %msecs_to_jiffies.exit, !dbg !15869

if.end.i:                                         ; preds = %if.then.i
  %23 = load i32, i32* %m.addr.i, align 4, !dbg !15870
  %call.i = call i64 @_msecs_to_jiffies(i32 %23) #12, !dbg !15871
  store i64 %call.i, i64* %retval.i, align 8, !dbg !15872
  br label %msecs_to_jiffies.exit, !dbg !15872

if.else.i:                                        ; preds = %if.end10
  %24 = load i32, i32* %m.addr.i, align 4, !dbg !15873
  %call2.i = call i64 @__msecs_to_jiffies(i32 %24) #12, !dbg !15875
  store i64 %call2.i, i64* %retval.i, align 8, !dbg !15876
  br label %msecs_to_jiffies.exit, !dbg !15876

msecs_to_jiffies.exit:                            ; preds = %if.then1.i, %if.end.i, %if.else.i
  %25 = load i64, i64* %retval.i, align 8, !dbg !15877
  %call14 = call i64 @wait_for_completion_timeout(%struct.completion* %xfer_completion11, i64 %25) #11, !dbg !15878
  store i64 %call14, i64* %ms, align 8, !dbg !15879
  %26 = load i64, i64* %ms, align 8, !dbg !15880
  %cmp15 = icmp eq i64 %26, 0, !dbg !15881
  br i1 %cmp15, label %if.then17, label %if.end78, !dbg !15882

if.then17:                                        ; preds = %msecs_to_jiffies.exit
  br label %do.body, !dbg !15883

do.body:                                          ; preds = %if.then17
  call void @llvm.dbg.declare(metadata i64* %flags, metadata !15884, metadata !DIExpression()), !dbg !15885
  br label %do.body18, !dbg !15885

do.body18:                                        ; preds = %do.body
  br label %do.body19, !dbg !15886

do.body19:                                        ; preds = %do.body18
  call void @llvm.dbg.declare(metadata i64* %__dummy, metadata !15887, metadata !DIExpression()), !dbg !15889
  call void @llvm.dbg.declare(metadata i64* %__dummy2, metadata !15890, metadata !DIExpression()), !dbg !15889
  %cmp20 = icmp eq i64* %__dummy, %__dummy2, !dbg !15889
  %conv21 = zext i1 %cmp20 to i32, !dbg !15889
  store i32 1, i32* %tmp22, align 4, !dbg !15889
  %27 = load i32, i32* %tmp22, align 4, !dbg !15889
  br label %do.body23, !dbg !15891

do.body23:                                        ; preds = %do.body19
  br label %do.body24, !dbg !15892

do.body24:                                        ; preds = %do.body23
  br label %do.body25, !dbg !15893

do.body25:                                        ; preds = %do.body24
  call void @llvm.dbg.declare(metadata i64* %__dummy26, metadata !15895, metadata !DIExpression()), !dbg !15898
  call void @llvm.dbg.declare(metadata i64* %__dummy227, metadata !15899, metadata !DIExpression()), !dbg !15898
  %cmp28 = icmp eq i64* %__dummy26, %__dummy227, !dbg !15898
  %conv29 = zext i1 %cmp28 to i32, !dbg !15898
  store i32 1, i32* %tmp30, align 4, !dbg !15898
  %28 = load i32, i32* %tmp30, align 4, !dbg !15898
  %call31 = call i64 @arch_local_irq_save() #11, !dbg !15900
  store i64 %call31, i64* %flags, align 8, !dbg !15900
  br label %do.end, !dbg !15900

do.end:                                           ; preds = %do.body25
  br label %do.end32, !dbg !15893

do.end32:                                         ; preds = %do.end
  br label %do.body33, !dbg !15892

do.body33:                                        ; preds = %do.end32
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15901, !srcloc !15902
  br label %do.body34, !dbg !15901

do.body34:                                        ; preds = %do.body33
  %29 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15903
  %lock = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %29, i32 0, i32 0, !dbg !15903
  store %struct.spinlock* %lock, %struct.spinlock** %lock.addr.i, align 8
  %30 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i, align 8, !dbg !15904
  %31 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %30, i32 0, i32 0, !dbg !15905
  %rlock.i = bitcast %union.anon* %31 to %struct.raw_spinlock*, !dbg !15905
  br label %do.end36, !dbg !15903

do.end36:                                         ; preds = %do.body34
  br label %do.end37, !dbg !15901

do.end37:                                         ; preds = %do.end36
  br label %do.end38, !dbg !15892

do.end38:                                         ; preds = %do.end37
  br label %do.end39, !dbg !15891

do.end39:                                         ; preds = %do.end38
  br label %do.end40, !dbg !15886

do.end40:                                         ; preds = %do.end39
  %32 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15885
  %timedout = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %32, i32 0, i32 4, !dbg !15885
  %33 = load i64, i64* %timedout, align 8, !dbg !15885
  %add41 = add i64 %33, 1, !dbg !15885
  store i64 %add41, i64* %timedout, align 8, !dbg !15885
  %34 = load %struct.spi_statistics*, %struct.spi_statistics** %statm, align 8, !dbg !15885
  %lock42 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %34, i32 0, i32 0, !dbg !15885
  %35 = load i64, i64* %flags, align 8, !dbg !15885
  store %struct.spinlock* %lock42, %struct.spinlock** %lock.addr.i80, align 8
  store i64 %35, i64* %flags.addr.i, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !15906
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !15906
  store i32 1, i32* %tmp.i, align 4, !dbg !15906
  %36 = load i32, i32* %tmp.i, align 4, !dbg !15906
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !15907
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !15907
  store i32 1, i32* %tmp8.i, align 4, !dbg !15907
  %37 = load i32, i32* %tmp8.i, align 4, !dbg !15907
  %38 = load i64, i64* %flags.addr.i, align 8, !dbg !15908
  call void @arch_local_irq_restore(i64 %38) #12, !dbg !15908
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15909, !srcloc !5559
  %39 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i80, align 8, !dbg !15910
  %40 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %39, i32 0, i32 0, !dbg !15910
  %rlock.i81 = bitcast %union.anon* %40 to %struct.raw_spinlock*, !dbg !15910
  br label %do.end43, !dbg !15885

do.end43:                                         ; preds = %do.end40
  br label %do.body44, !dbg !15911

do.body44:                                        ; preds = %do.end43
  call void @llvm.dbg.declare(metadata i64* %flags45, metadata !15912, metadata !DIExpression()), !dbg !15913
  br label %do.body46, !dbg !15913

do.body46:                                        ; preds = %do.body44
  br label %do.body47, !dbg !15914

do.body47:                                        ; preds = %do.body46
  call void @llvm.dbg.declare(metadata i64* %__dummy48, metadata !15915, metadata !DIExpression()), !dbg !15917
  call void @llvm.dbg.declare(metadata i64* %__dummy249, metadata !15918, metadata !DIExpression()), !dbg !15917
  %cmp50 = icmp eq i64* %__dummy48, %__dummy249, !dbg !15917
  %conv51 = zext i1 %cmp50 to i32, !dbg !15917
  store i32 1, i32* %tmp52, align 4, !dbg !15917
  %41 = load i32, i32* %tmp52, align 4, !dbg !15917
  br label %do.body53, !dbg !15919

do.body53:                                        ; preds = %do.body47
  br label %do.body54, !dbg !15920

do.body54:                                        ; preds = %do.body53
  br label %do.body55, !dbg !15921

do.body55:                                        ; preds = %do.body54
  call void @llvm.dbg.declare(metadata i64* %__dummy56, metadata !15923, metadata !DIExpression()), !dbg !15926
  call void @llvm.dbg.declare(metadata i64* %__dummy257, metadata !15927, metadata !DIExpression()), !dbg !15926
  %cmp58 = icmp eq i64* %__dummy56, %__dummy257, !dbg !15926
  %conv59 = zext i1 %cmp58 to i32, !dbg !15926
  store i32 1, i32* %tmp60, align 4, !dbg !15926
  %42 = load i32, i32* %tmp60, align 4, !dbg !15926
  %call61 = call i64 @arch_local_irq_save() #11, !dbg !15928
  store i64 %call61, i64* %flags45, align 8, !dbg !15928
  br label %do.end62, !dbg !15928

do.end62:                                         ; preds = %do.body55
  br label %do.end63, !dbg !15921

do.end63:                                         ; preds = %do.end62
  br label %do.body64, !dbg !15920

do.body64:                                        ; preds = %do.end63
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15929, !srcloc !15930
  br label %do.body65, !dbg !15929

do.body65:                                        ; preds = %do.body64
  %43 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15931
  %lock66 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %43, i32 0, i32 0, !dbg !15931
  store %struct.spinlock* %lock66, %struct.spinlock** %lock.addr.i82, align 8
  %44 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i82, align 8, !dbg !15932
  %45 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %44, i32 0, i32 0, !dbg !15933
  %rlock.i83 = bitcast %union.anon* %45 to %struct.raw_spinlock*, !dbg !15933
  br label %do.end68, !dbg !15931

do.end68:                                         ; preds = %do.body65
  br label %do.end69, !dbg !15929

do.end69:                                         ; preds = %do.end68
  br label %do.end70, !dbg !15920

do.end70:                                         ; preds = %do.end69
  br label %do.end71, !dbg !15919

do.end71:                                         ; preds = %do.end70
  br label %do.end72, !dbg !15914

do.end72:                                         ; preds = %do.end71
  %46 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15913
  %timedout73 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %46, i32 0, i32 4, !dbg !15913
  %47 = load i64, i64* %timedout73, align 8, !dbg !15913
  %add74 = add i64 %47, 1, !dbg !15913
  store i64 %add74, i64* %timedout73, align 8, !dbg !15913
  %48 = load %struct.spi_statistics*, %struct.spi_statistics** %stats, align 8, !dbg !15913
  %lock75 = getelementptr inbounds %struct.spi_statistics, %struct.spi_statistics* %48, i32 0, i32 0, !dbg !15913
  %49 = load i64, i64* %flags45, align 8, !dbg !15913
  store %struct.spinlock* %lock75, %struct.spinlock** %lock.addr.i84, align 8
  store i64 %49, i64* %flags.addr.i85, align 8
  call void @llvm.dbg.declare(metadata !311, metadata !5544, metadata !DIExpression()) #7, !dbg !15934
  call void @llvm.dbg.declare(metadata !311, metadata !5548, metadata !DIExpression()) #7, !dbg !15934
  store i32 1, i32* %tmp.i86, align 4, !dbg !15934
  %50 = load i32, i32* %tmp.i86, align 4, !dbg !15934
  call void @llvm.dbg.declare(metadata !311, metadata !5549, metadata !DIExpression()) #7, !dbg !15935
  call void @llvm.dbg.declare(metadata !311, metadata !5555, metadata !DIExpression()) #7, !dbg !15935
  store i32 1, i32* %tmp8.i87, align 4, !dbg !15935
  %51 = load i32, i32* %tmp8.i87, align 4, !dbg !15935
  %52 = load i64, i64* %flags.addr.i85, align 8, !dbg !15936
  call void @arch_local_irq_restore(i64 %52) #12, !dbg !15936
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #7, !dbg !15937, !srcloc !5559
  %53 = load %struct.spinlock*, %struct.spinlock** %lock.addr.i84, align 8, !dbg !15938
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0, !dbg !15938
  %rlock.i88 = bitcast %union.anon* %54 to %struct.raw_spinlock*, !dbg !15938
  br label %do.end76, !dbg !15913

do.end76:                                         ; preds = %do.end72
  %55 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !15939
  %spi77 = getelementptr inbounds %struct.spi_message, %struct.spi_message* %55, i32 0, i32 1, !dbg !15939
  %56 = load %struct.spi_device*, %struct.spi_device** %spi77, align 8, !dbg !15939
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %56, i32 0, i32 0, !dbg !15939
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.81, i64 0, i64 0)) #14, !dbg !15939
  store i32 -110, i32* %retval, align 4, !dbg !15940
  br label %return, !dbg !15940

if.end78:                                         ; preds = %msecs_to_jiffies.exit
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end
  store i32 0, i32* %retval, align 4, !dbg !15941
  br label %return, !dbg !15941

return:                                           ; preds = %if.end79, %do.end76, %if.then3
  %57 = load i32, i32* %retval, align 4, !dbg !15942
  ret i32 %57, !dbg !15942
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_spi_transfer_stop(%struct.spi_message* %msg, %struct.spi_transfer* %xfer) #0 !dbg !15943 {
entry:
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !15944, metadata !DIExpression()), !dbg !15945
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !15946, metadata !DIExpression()), !dbg !15945
  ret void, !dbg !15945
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_transfer_delay_exec(%struct.spi_transfer* %t) #0 !dbg !15947 {
entry:
  %retval = alloca i32, align 4
  %t.addr = alloca %struct.spi_transfer*, align 8
  %d = alloca %struct.spi_delay, align 2
  store %struct.spi_transfer* %t, %struct.spi_transfer** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %t.addr, metadata !15950, metadata !DIExpression()), !dbg !15951
  call void @llvm.dbg.declare(metadata %struct.spi_delay* %d, metadata !15952, metadata !DIExpression()), !dbg !15953
  %0 = load %struct.spi_transfer*, %struct.spi_transfer** %t.addr, align 8, !dbg !15954
  %delay_usecs = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %0, i32 0, i32 9, !dbg !15956
  %1 = load i16, i16* %delay_usecs, align 2, !dbg !15956
  %tobool = icmp ne i16 %1, 0, !dbg !15954
  br i1 %tobool, label %if.then, label %if.end, !dbg !15957

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_transfer*, %struct.spi_transfer** %t.addr, align 8, !dbg !15958
  %delay_usecs1 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %2, i32 0, i32 9, !dbg !15960
  %3 = load i16, i16* %delay_usecs1, align 2, !dbg !15960
  %value = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %d, i32 0, i32 0, !dbg !15961
  store i16 %3, i16* %value, align 2, !dbg !15962
  %unit = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %d, i32 0, i32 1, !dbg !15963
  store i8 0, i8* %unit, align 2, !dbg !15964
  %call = call i32 @spi_delay_exec(%struct.spi_delay* %d, %struct.spi_transfer* null) #11, !dbg !15965
  store i32 %call, i32* %retval, align 4, !dbg !15966
  br label %return, !dbg !15966

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_transfer*, %struct.spi_transfer** %t.addr, align 8, !dbg !15967
  %delay = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %4, i32 0, i32 10, !dbg !15968
  %5 = load %struct.spi_transfer*, %struct.spi_transfer** %t.addr, align 8, !dbg !15969
  %call2 = call i32 @spi_delay_exec(%struct.spi_delay* %delay, %struct.spi_transfer* %5) #11, !dbg !15970
  store i32 %call2, i32* %retval, align 4, !dbg !15971
  br label %return, !dbg !15971

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !15972
  ret i32 %6, !dbg !15972
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @list_is_last(%struct.list_head* %list, %struct.list_head* %head) #0 !dbg !15973 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %head.addr = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !15976, metadata !DIExpression()), !dbg !15977
  store %struct.list_head* %head, %struct.list_head** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %head.addr, metadata !15978, metadata !DIExpression()), !dbg !15979
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !15980
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !15981
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !dbg !15981
  %2 = load %struct.list_head*, %struct.list_head** %head.addr, align 8, !dbg !15982
  %cmp = icmp eq %struct.list_head* %1, %2, !dbg !15983
  %conv = zext i1 %cmp to i32, !dbg !15983
  ret i32 %conv, !dbg !15984
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @_spi_transfer_cs_change_delay(%struct.spi_message* %msg, %struct.spi_transfer* %xfer) #0 !dbg !5388 {
entry:
  %msg.addr = alloca %struct.spi_message*, align 8
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %delay = alloca i32, align 4
  %unit = alloca i32, align 4
  %ret = alloca i32, align 4
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !15985, metadata !DIExpression()), !dbg !15986
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !15987, metadata !DIExpression()), !dbg !15988
  call void @llvm.dbg.declare(metadata i32* %delay, metadata !15989, metadata !DIExpression()), !dbg !15990
  %0 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !15991
  %cs_change_delay = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %0, i32 0, i32 11, !dbg !15992
  %value = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %cs_change_delay, i32 0, i32 0, !dbg !15993
  %1 = load i16, i16* %value, align 8, !dbg !15993
  %conv = zext i16 %1 to i32, !dbg !15991
  store i32 %conv, i32* %delay, align 4, !dbg !15990
  call void @llvm.dbg.declare(metadata i32* %unit, metadata !15994, metadata !DIExpression()), !dbg !15995
  %2 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !15996
  %cs_change_delay1 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %2, i32 0, i32 11, !dbg !15997
  %unit2 = getelementptr inbounds %struct.spi_delay, %struct.spi_delay* %cs_change_delay1, i32 0, i32 1, !dbg !15998
  %3 = load i8, i8* %unit2, align 2, !dbg !15998
  %conv3 = zext i8 %3 to i32, !dbg !15996
  store i32 %conv3, i32* %unit, align 4, !dbg !15995
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !15999, metadata !DIExpression()), !dbg !16000
  %4 = load i32, i32* %delay, align 4, !dbg !16001
  %tobool = icmp ne i32 %4, 0, !dbg !16001
  br i1 %tobool, label %if.end6, label %if.then, !dbg !16003

if.then:                                          ; preds = %entry
  %5 = load i32, i32* %unit, align 4, !dbg !16004
  %cmp = icmp eq i32 %5, 0, !dbg !16007
  br i1 %cmp, label %if.then5, label %if.end, !dbg !16008

if.then5:                                         ; preds = %if.then
  call void @_spi_transfer_delay_ns(i32 10000) #11, !dbg !16009
  br label %if.end, !dbg !16009

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end13, !dbg !16010

if.end6:                                          ; preds = %entry
  %6 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !16011
  %cs_change_delay7 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %6, i32 0, i32 11, !dbg !16012
  %7 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !16013
  %call = call i32 @spi_delay_exec(%struct.spi_delay* %cs_change_delay7, %struct.spi_transfer* %7) #11, !dbg !16014
  store i32 %call, i32* %ret, align 4, !dbg !16015
  %8 = load i32, i32* %ret, align 4, !dbg !16016
  %tobool8 = icmp ne i32 %8, 0, !dbg !16016
  br i1 %tobool8, label %if.then9, label %if.end13, !dbg !16018

if.then9:                                         ; preds = %if.end6
  br label %do.body, !dbg !16019

do.body:                                          ; preds = %if.then9
  %9 = load i8, i8* @_spi_transfer_cs_change_delay.__print_once, align 1, !dbg !16021
  %tobool10 = trunc i8 %9 to i1, !dbg !16021
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !16024

if.then11:                                        ; preds = %do.body
  store i8 1, i8* @_spi_transfer_cs_change_delay.__print_once, align 1, !dbg !16025
  %10 = load %struct.spi_message*, %struct.spi_message** %msg.addr, align 8, !dbg !16025
  %spi = getelementptr inbounds %struct.spi_message, %struct.spi_message* %10, i32 0, i32 1, !dbg !16025
  %11 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16025
  %dev = getelementptr inbounds %struct.spi_device, %struct.spi_device* %11, i32 0, i32 0, !dbg !16025
  %12 = load i32, i32* %unit, align 4, !dbg !16025
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.82, i64 0, i64 0), i32 %12) #14, !dbg !16025
  br label %if.end12, !dbg !16025

if.end12:                                         ; preds = %if.then11, %do.body
  br label %do.end, !dbg !16024

do.end:                                           ; preds = %if.end12
  call void @_spi_transfer_delay_ns(i32 10000) #11, !dbg !16027
  br label %if.end13, !dbg !16028

if.end13:                                         ; preds = %if.end, %do.end, %if.end6
  ret void, !dbg !16029
}

; Function Attrs: noredzone
declare dso_local i32 @wait_for_completion_interruptible(%struct.completion*) #2

; Function Attrs: noredzone
declare dso_local i64 @wait_for_completion_timeout(%struct.completion*, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i64 @_msecs_to_jiffies(i32 %m) #0 !dbg !16030 {
entry:
  %m.addr = alloca i32, align 4
  store i32 %m, i32* %m.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %m.addr, metadata !16031, metadata !DIExpression()), !dbg !16032
  %0 = load i32, i32* %m.addr, align 4, !dbg !16033
  %conv = zext i32 %0 to i64, !dbg !16033
  %add = add i64 %conv, 4, !dbg !16034
  %sub = sub i64 %add, 1, !dbg !16035
  %div = sdiv i64 %sub, 4, !dbg !16036
  ret i64 %div, !dbg !16037
}

; Function Attrs: noredzone
declare dso_local i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: noredzone
declare dso_local %struct.kthread_worker* @kthread_create_worker(i32, i8*, ...) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_pump_messages(%struct.kthread_work* %work) #0 !dbg !16038 {
entry:
  %work.addr = alloca %struct.kthread_work*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.kthread_work* %work, %struct.kthread_work** %work.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kthread_work** %work.addr, metadata !16039, metadata !DIExpression()), !dbg !16040
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !16041, metadata !DIExpression()), !dbg !16042
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16043, metadata !DIExpression()), !dbg !16045
  %0 = load %struct.kthread_work*, %struct.kthread_work** %work.addr, align 8, !dbg !16045
  %1 = bitcast %struct.kthread_work* %0 to i8*, !dbg !16045
  store i8* %1, i8** %__mptr, align 8, !dbg !16045
  br label %do.body, !dbg !16045

do.body:                                          ; preds = %entry
  br label %do.end, !dbg !16046

do.end:                                           ; preds = %do.body
  %2 = load i8*, i8** %__mptr, align 8, !dbg !16045
  %add.ptr = getelementptr i8, i8* %2, i64 -872, !dbg !16045
  %3 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !16045
  store %struct.spi_controller* %3, %struct.spi_controller** %tmp, align 8, !dbg !16046
  %4 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !16045
  store %struct.spi_controller* %4, %struct.spi_controller** %ctlr, align 8, !dbg !16042
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !16048
  call void @__spi_pump_messages(%struct.spi_controller* %5, i1 zeroext true) #11, !dbg !16049
  ret void, !dbg !16050
}

; Function Attrs: noredzone
declare dso_local %struct.device_node* @of_get_next_available_child(%struct.device_node*, %struct.device_node*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_node_test_and_set_flag(%struct.device_node* %n, i64 %flag) #0 !dbg !16051 {
entry:
  %n.addr = alloca %struct.device_node*, align 8
  %flag.addr = alloca i64, align 8
  store %struct.device_node* %n, %struct.device_node** %n.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %n.addr, metadata !16054, metadata !DIExpression()), !dbg !16055
  store i64 %flag, i64* %flag.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %flag.addr, metadata !16056, metadata !DIExpression()), !dbg !16057
  %0 = load i64, i64* %flag.addr, align 8, !dbg !16058
  %1 = load %struct.device_node*, %struct.device_node** %n.addr, align 8, !dbg !16059
  %_flags = getelementptr inbounds %struct.device_node, %struct.device_node* %1, i32 0, i32 10, !dbg !16060
  %call = call zeroext i1 @test_and_set_bit(i64 %0, i64* %_flags) #11, !dbg !16061
  %conv = zext i1 %call to i32, !dbg !16061
  ret i32 %conv, !dbg !16062
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_device* @of_register_spi_device(%struct.spi_controller* %ctlr, %struct.device_node* %nc) #0 !dbg !16063 {
entry:
  %retval = alloca %struct.spi_device*, align 8
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %nc.addr = alloca %struct.device_node*, align 8
  %spi = alloca %struct.spi_device*, align 8
  %rc = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !16066, metadata !DIExpression()), !dbg !16067
  store %struct.device_node* %nc, %struct.device_node** %nc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %nc.addr, metadata !16068, metadata !DIExpression()), !dbg !16069
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !16070, metadata !DIExpression()), !dbg !16071
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16072, metadata !DIExpression()), !dbg !16073
  %0 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16074
  %call = call %struct.spi_device* @spi_alloc_device(%struct.spi_controller* %0) #11, !dbg !16075
  store %struct.spi_device* %call, %struct.spi_device** %spi, align 8, !dbg !16076
  %1 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16077
  %tobool = icmp ne %struct.spi_device* %1, null, !dbg !16077
  br i1 %tobool, label %if.end, label %if.then, !dbg !16079

if.then:                                          ; preds = %entry
  %2 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16080
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %2, i32 0, i32 0, !dbg !16080
  %3 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16080
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.85, i64 0, i64 0), %struct.device_node* %3) #14, !dbg !16080
  store i32 -12, i32* %rc, align 4, !dbg !16082
  br label %err_out, !dbg !16083

if.end:                                           ; preds = %entry
  %4 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16084
  %5 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16085
  %modalias = getelementptr inbounds %struct.spi_device, %struct.spi_device* %5, i32 0, i32 11, !dbg !16086
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !16085
  %call1 = call i32 @of_modalias_node(%struct.device_node* %4, i8* %arraydecay, i32 32) #11, !dbg !16087
  store i32 %call1, i32* %rc, align 4, !dbg !16088
  %6 = load i32, i32* %rc, align 4, !dbg !16089
  %cmp = icmp slt i32 %6, 0, !dbg !16091
  br i1 %cmp, label %if.then2, label %if.end4, !dbg !16092

if.then2:                                         ; preds = %if.end
  %7 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16093
  %dev3 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %7, i32 0, i32 0, !dbg !16093
  %8 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16093
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev3, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.86, i64 0, i64 0), %struct.device_node* %8) #14, !dbg !16093
  br label %err_out, !dbg !16095

if.end4:                                          ; preds = %if.end
  %9 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16096
  %10 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16097
  %11 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16098
  %call5 = call i32 @of_spi_parse_dt(%struct.spi_controller* %9, %struct.spi_device* %10, %struct.device_node* %11) #11, !dbg !16099
  store i32 %call5, i32* %rc, align 4, !dbg !16100
  %12 = load i32, i32* %rc, align 4, !dbg !16101
  %tobool6 = icmp ne i32 %12, 0, !dbg !16101
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !16103

if.then7:                                         ; preds = %if.end4
  br label %err_out, !dbg !16104

if.end8:                                          ; preds = %if.end4
  %13 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16105
  %call9 = call %struct.device_node* @of_node_get(%struct.device_node* %13) #11, !dbg !16106
  %14 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16107
  %15 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16108
  %dev10 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %15, i32 0, i32 0, !dbg !16109
  %of_node = getelementptr inbounds %struct.device, %struct.device* %dev10, i32 0, i32 23, !dbg !16110
  store %struct.device_node* %14, %struct.device_node** %of_node, align 8, !dbg !16111
  %16 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16112
  %call11 = call i32 @spi_add_device(%struct.spi_device* %16) #11, !dbg !16113
  store i32 %call11, i32* %rc, align 4, !dbg !16114
  %17 = load i32, i32* %rc, align 4, !dbg !16115
  %tobool12 = icmp ne i32 %17, 0, !dbg !16115
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !16117

if.then13:                                        ; preds = %if.end8
  %18 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16118
  %dev14 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %18, i32 0, i32 0, !dbg !16118
  %19 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16118
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev14, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.87, i64 0, i64 0), %struct.device_node* %19) #14, !dbg !16118
  br label %err_of_node_put, !dbg !16120

if.end15:                                         ; preds = %if.end8
  %20 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16121
  store %struct.spi_device* %20, %struct.spi_device** %retval, align 8, !dbg !16122
  br label %return, !dbg !16122

err_of_node_put:                                  ; preds = %if.then13
  call void @llvm.dbg.label(metadata !16123), !dbg !16124
  %21 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16125
  call void @of_node_put(%struct.device_node* %21) #11, !dbg !16126
  br label %err_out, !dbg !16126

err_out:                                          ; preds = %err_of_node_put, %if.then7, %if.then2, %if.then
  call void @llvm.dbg.label(metadata !16127), !dbg !16128
  %22 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16129
  call void @spi_dev_put(%struct.spi_device* %22) #11, !dbg !16130
  %23 = load i32, i32* %rc, align 4, !dbg !16131
  %conv = sext i32 %23 to i64, !dbg !16131
  %call16 = call i8* @ERR_PTR(i64 %conv) #11, !dbg !16132
  %24 = bitcast i8* %call16 to %struct.spi_device*, !dbg !16132
  store %struct.spi_device* %24, %struct.spi_device** %retval, align 8, !dbg !16133
  br label %return, !dbg !16133

return:                                           ; preds = %err_out, %if.end15
  %25 = load %struct.spi_device*, %struct.spi_device** %retval, align 8, !dbg !16134
  ret %struct.spi_device* %25, !dbg !16134
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #0 !dbg !16135 {
entry:
  %nr.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr.i, metadata !16138, metadata !DIExpression()), !dbg !16140
  %addr.addr.i = alloca i64*, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr.i, metadata !16142, metadata !DIExpression()), !dbg !16143
  %c.i = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %c.i, metadata !16144, metadata !DIExpression()), !dbg !16146
  %tmp.i = alloca i8, align 1
  %v.addr.i = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %v.addr.i, metadata !10522, metadata !DIExpression()), !dbg !16147
  %size.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr.i, metadata !10532, metadata !DIExpression()), !dbg !16149
  %nr.addr = alloca i64, align 8
  %addr.addr = alloca i64*, align 8
  store i64 %nr, i64* %nr.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %nr.addr, metadata !16150, metadata !DIExpression()), !dbg !16151
  store i64* %addr, i64** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %addr.addr, metadata !16152, metadata !DIExpression()), !dbg !16153
  %0 = load i64*, i64** %addr.addr, align 8, !dbg !16154
  %1 = load i64, i64* %nr.addr, align 8, !dbg !16155
  %div = sdiv i64 %1, 64, !dbg !16155
  %add.ptr = getelementptr i64, i64* %0, i64 %div, !dbg !16156
  %2 = bitcast i64* %add.ptr to i8*, !dbg !16154
  store i8* %2, i8** %v.addr.i, align 8
  store i64 8, i64* %size.addr.i, align 8
  %3 = load i8*, i8** %v.addr.i, align 8, !dbg !16157
  %4 = load i64, i64* %size.addr.i, align 8, !dbg !16158
  %conv.i = trunc i64 %4 to i32, !dbg !16158
  %call.i = call zeroext i1 @kasan_check_write(i8* %3, i32 %conv.i) #12, !dbg !16159
  %5 = load i8*, i8** %v.addr.i, align 8, !dbg !16160
  %6 = load i64, i64* %size.addr.i, align 8, !dbg !16160
  call void @kcsan_check_access(i8* %5, i64 %6, i32 7) #12, !dbg !16160
  %7 = load i64, i64* %nr.addr, align 8, !dbg !16161
  %8 = load i64*, i64** %addr.addr, align 8, !dbg !16162
  store i64 %7, i64* %nr.addr.i, align 8
  store i64* %8, i64** %addr.addr.i, align 8
  %9 = load i64*, i64** %addr.addr.i, align 8, !dbg !16146
  %10 = load i64, i64* %nr.addr.i, align 8, !dbg !16146
  %11 = call i8 asm sideeffect " btsq  $2, $0\0A\09/* output condition code c*/\0A", "=*m,={@ccc},Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %9, i64 %10, i64* %9) #7, !dbg !16146, !srcloc !16163
  store i8 %11, i8* %c.i, align 1, !dbg !16146
  %12 = load i8, i8* %c.i, align 1, !dbg !16146
  %tobool.i = trunc i8 %12 to i1, !dbg !16146
  %frombool.i = zext i1 %tobool.i to i8, !dbg !16146
  store i8 %frombool.i, i8* %tmp.i, align 1, !dbg !16146
  %13 = load i8, i8* %tmp.i, align 1, !dbg !16146
  %tobool1.i = trunc i8 %13 to i1, !dbg !16146
  ret i1 %tobool1.i, !dbg !16164
}

; Function Attrs: noredzone
declare dso_local i32 @of_modalias_node(%struct.device_node*, i8*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_spi_parse_dt(%struct.spi_controller* %ctlr, %struct.spi_device* %spi, %struct.device_node* %nc) #0 !dbg !16165 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %spi.addr = alloca %struct.spi_device*, align 8
  %nc.addr = alloca %struct.device_node*, align 8
  %value = alloca i32, align 4
  %rc = alloca i32, align 4
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !16168, metadata !DIExpression()), !dbg !16169
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !16170, metadata !DIExpression()), !dbg !16171
  store %struct.device_node* %nc, %struct.device_node** %nc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %nc.addr, metadata !16172, metadata !DIExpression()), !dbg !16173
  call void @llvm.dbg.declare(metadata i32* %value, metadata !16174, metadata !DIExpression()), !dbg !16175
  call void @llvm.dbg.declare(metadata i32* %rc, metadata !16176, metadata !DIExpression()), !dbg !16177
  %0 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16178
  %call = call zeroext i1 @of_property_read_bool(%struct.device_node* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0)) #11, !dbg !16180
  br i1 %call, label %if.then, label %if.end, !dbg !16181

if.then:                                          ; preds = %entry
  %1 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16182
  %mode = getelementptr inbounds %struct.spi_device, %struct.spi_device* %1, i32 0, i32 7, !dbg !16183
  %2 = load i32, i32* %mode, align 8, !dbg !16184
  %or = or i32 %2, 1, !dbg !16184
  store i32 %or, i32* %mode, align 8, !dbg !16184
  br label %if.end, !dbg !16182

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16185
  %call1 = call zeroext i1 @of_property_read_bool(%struct.device_node* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.89, i64 0, i64 0)) #11, !dbg !16187
  br i1 %call1, label %if.then2, label %if.end5, !dbg !16188

if.then2:                                         ; preds = %if.end
  %4 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16189
  %mode3 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %4, i32 0, i32 7, !dbg !16190
  %5 = load i32, i32* %mode3, align 8, !dbg !16191
  %or4 = or i32 %5, 2, !dbg !16191
  store i32 %or4, i32* %mode3, align 8, !dbg !16191
  br label %if.end5, !dbg !16189

if.end5:                                          ; preds = %if.then2, %if.end
  %6 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16192
  %call6 = call zeroext i1 @of_property_read_bool(%struct.device_node* %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.90, i64 0, i64 0)) #11, !dbg !16194
  br i1 %call6, label %if.then7, label %if.end10, !dbg !16195

if.then7:                                         ; preds = %if.end5
  %7 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16196
  %mode8 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %7, i32 0, i32 7, !dbg !16197
  %8 = load i32, i32* %mode8, align 8, !dbg !16198
  %or9 = or i32 %8, 16, !dbg !16198
  store i32 %or9, i32* %mode8, align 8, !dbg !16198
  br label %if.end10, !dbg !16196

if.end10:                                         ; preds = %if.then7, %if.end5
  %9 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16199
  %call11 = call zeroext i1 @of_property_read_bool(%struct.device_node* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.91, i64 0, i64 0)) #11, !dbg !16201
  br i1 %call11, label %if.then12, label %if.end15, !dbg !16202

if.then12:                                        ; preds = %if.end10
  %10 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16203
  %mode13 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %10, i32 0, i32 7, !dbg !16204
  %11 = load i32, i32* %mode13, align 8, !dbg !16205
  %or14 = or i32 %11, 8, !dbg !16205
  store i32 %or14, i32* %mode13, align 8, !dbg !16205
  br label %if.end15, !dbg !16203

if.end15:                                         ; preds = %if.then12, %if.end10
  %12 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16206
  %call16 = call zeroext i1 @of_property_read_bool(%struct.device_node* %12, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i64 0, i64 0)) #11, !dbg !16208
  br i1 %call16, label %if.then17, label %if.end20, !dbg !16209

if.then17:                                        ; preds = %if.end15
  %13 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16210
  %mode18 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %13, i32 0, i32 7, !dbg !16211
  %14 = load i32, i32* %mode18, align 8, !dbg !16212
  %or19 = or i32 %14, 4, !dbg !16212
  store i32 %or19, i32* %mode18, align 8, !dbg !16212
  br label %if.end20, !dbg !16210

if.end20:                                         ; preds = %if.then17, %if.end15
  %15 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16213
  %call21 = call i32 @of_property_read_u32(%struct.device_node* %15, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.93, i64 0, i64 0), i32* %value) #11, !dbg !16215
  %tobool = icmp ne i32 %call21, 0, !dbg !16215
  br i1 %tobool, label %if.end32, label %if.then22, !dbg !16216

if.then22:                                        ; preds = %if.end20
  %16 = load i32, i32* %value, align 4, !dbg !16217
  switch i32 %16, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb23
    i32 4, label %sw.bb26
    i32 8, label %sw.bb29
  ], !dbg !16219

sw.bb:                                            ; preds = %if.then22
  br label %sw.epilog, !dbg !16220

sw.bb23:                                          ; preds = %if.then22
  %17 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16222
  %mode24 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %17, i32 0, i32 7, !dbg !16223
  %18 = load i32, i32* %mode24, align 8, !dbg !16224
  %or25 = or i32 %18, 256, !dbg !16224
  store i32 %or25, i32* %mode24, align 8, !dbg !16224
  br label %sw.epilog, !dbg !16225

sw.bb26:                                          ; preds = %if.then22
  %19 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16226
  %mode27 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %19, i32 0, i32 7, !dbg !16227
  %20 = load i32, i32* %mode27, align 8, !dbg !16228
  %or28 = or i32 %20, 512, !dbg !16228
  store i32 %or28, i32* %mode27, align 8, !dbg !16228
  br label %sw.epilog, !dbg !16229

sw.bb29:                                          ; preds = %if.then22
  %21 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16230
  %mode30 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %21, i32 0, i32 7, !dbg !16231
  %22 = load i32, i32* %mode30, align 8, !dbg !16232
  %or31 = or i32 %22, 8192, !dbg !16232
  store i32 %or31, i32* %mode30, align 8, !dbg !16232
  br label %sw.epilog, !dbg !16233

sw.default:                                       ; preds = %if.then22
  %23 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16234
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %23, i32 0, i32 0, !dbg !16234
  %24 = load i32, i32* %value, align 4, !dbg !16234
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.94, i64 0, i64 0), i32 %24) #14, !dbg !16234
  br label %sw.epilog, !dbg !16235

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %sw.bb26, %sw.bb23, %sw.bb
  br label %if.end32, !dbg !16236

if.end32:                                         ; preds = %sw.epilog, %if.end20
  %25 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16237
  %call33 = call i32 @of_property_read_u32(%struct.device_node* %25, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.95, i64 0, i64 0), i32* %value) #11, !dbg !16239
  %tobool34 = icmp ne i32 %call33, 0, !dbg !16239
  br i1 %tobool34, label %if.end49, label %if.then35, !dbg !16240

if.then35:                                        ; preds = %if.end32
  %26 = load i32, i32* %value, align 4, !dbg !16241
  switch i32 %26, label %sw.default46 [
    i32 1, label %sw.bb36
    i32 2, label %sw.bb37
    i32 4, label %sw.bb40
    i32 8, label %sw.bb43
  ], !dbg !16243

sw.bb36:                                          ; preds = %if.then35
  br label %sw.epilog48, !dbg !16244

sw.bb37:                                          ; preds = %if.then35
  %27 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16246
  %mode38 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %27, i32 0, i32 7, !dbg !16247
  %28 = load i32, i32* %mode38, align 8, !dbg !16248
  %or39 = or i32 %28, 1024, !dbg !16248
  store i32 %or39, i32* %mode38, align 8, !dbg !16248
  br label %sw.epilog48, !dbg !16249

sw.bb40:                                          ; preds = %if.then35
  %29 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16250
  %mode41 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %29, i32 0, i32 7, !dbg !16251
  %30 = load i32, i32* %mode41, align 8, !dbg !16252
  %or42 = or i32 %30, 2048, !dbg !16252
  store i32 %or42, i32* %mode41, align 8, !dbg !16252
  br label %sw.epilog48, !dbg !16253

sw.bb43:                                          ; preds = %if.then35
  %31 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16254
  %mode44 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %31, i32 0, i32 7, !dbg !16255
  %32 = load i32, i32* %mode44, align 8, !dbg !16256
  %or45 = or i32 %32, 16384, !dbg !16256
  store i32 %or45, i32* %mode44, align 8, !dbg !16256
  br label %sw.epilog48, !dbg !16257

sw.default46:                                     ; preds = %if.then35
  %33 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16258
  %dev47 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %33, i32 0, i32 0, !dbg !16258
  %34 = load i32, i32* %value, align 4, !dbg !16258
  call void (%struct.device*, i8*, ...) @_dev_warn(%struct.device* %dev47, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.96, i64 0, i64 0), i32 %34) #14, !dbg !16258
  br label %sw.epilog48, !dbg !16259

sw.epilog48:                                      ; preds = %sw.default46, %sw.bb43, %sw.bb40, %sw.bb37, %sw.bb36
  br label %if.end49, !dbg !16260

if.end49:                                         ; preds = %sw.epilog48, %if.end32
  %35 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16261
  %call50 = call zeroext i1 @spi_controller_is_slave(%struct.spi_controller* %35) #11, !dbg !16263
  br i1 %call50, label %if.then51, label %if.end56, !dbg !16264

if.then51:                                        ; preds = %if.end49
  %36 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16265
  %call52 = call zeroext i1 @of_node_name_eq(%struct.device_node* %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.97, i64 0, i64 0)) #11, !dbg !16268
  br i1 %call52, label %if.end55, label %if.then53, !dbg !16269

if.then53:                                        ; preds = %if.then51
  %37 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16270
  %dev54 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %37, i32 0, i32 0, !dbg !16270
  %38 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16270
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev54, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.98, i64 0, i64 0), %struct.device_node* %38) #14, !dbg !16270
  store i32 -22, i32* %retval, align 4, !dbg !16272
  br label %return, !dbg !16272

if.end55:                                         ; preds = %if.then51
  store i32 0, i32* %retval, align 4, !dbg !16273
  br label %return, !dbg !16273

if.end56:                                         ; preds = %if.end49
  %39 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16274
  %call57 = call i32 @of_property_read_u32(%struct.device_node* %39, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i64 0, i64 0), i32* %value) #11, !dbg !16275
  store i32 %call57, i32* %rc, align 4, !dbg !16276
  %40 = load i32, i32* %rc, align 4, !dbg !16277
  %tobool58 = icmp ne i32 %40, 0, !dbg !16277
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !16279

if.then59:                                        ; preds = %if.end56
  %41 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16280
  %dev60 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %41, i32 0, i32 0, !dbg !16280
  %42 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16280
  %43 = load i32, i32* %rc, align 4, !dbg !16280
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev60, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.100, i64 0, i64 0), %struct.device_node* %42, i32 %43) #14, !dbg !16280
  %44 = load i32, i32* %rc, align 4, !dbg !16282
  store i32 %44, i32* %retval, align 4, !dbg !16283
  br label %return, !dbg !16283

if.end61:                                         ; preds = %if.end56
  %45 = load i32, i32* %value, align 4, !dbg !16284
  %conv = trunc i32 %45 to i8, !dbg !16284
  %46 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16285
  %chip_select = getelementptr inbounds %struct.spi_device, %struct.spi_device* %46, i32 0, i32 4, !dbg !16286
  store i8 %conv, i8* %chip_select, align 4, !dbg !16287
  %47 = load %struct.device_node*, %struct.device_node** %nc.addr, align 8, !dbg !16288
  %call62 = call i32 @of_property_read_u32(%struct.device_node* %47, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.101, i64 0, i64 0), i32* %value) #11, !dbg !16290
  %tobool63 = icmp ne i32 %call62, 0, !dbg !16290
  br i1 %tobool63, label %if.end65, label %if.then64, !dbg !16291

if.then64:                                        ; preds = %if.end61
  %48 = load i32, i32* %value, align 4, !dbg !16292
  %49 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !16293
  %max_speed_hz = getelementptr inbounds %struct.spi_device, %struct.spi_device* %49, i32 0, i32 3, !dbg !16294
  store i32 %48, i32* %max_speed_hz, align 8, !dbg !16295
  br label %if.end65, !dbg !16293

if.end65:                                         ; preds = %if.then64, %if.end61
  store i32 0, i32* %retval, align 4, !dbg !16296
  br label %return, !dbg !16296

return:                                           ; preds = %if.end65, %if.then59, %if.end55, %if.then53
  %50 = load i32, i32* %retval, align 4, !dbg !16297
  ret i32 %50, !dbg !16297
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device_node* @of_node_get(%struct.device_node* %node) #0 !dbg !16298 {
entry:
  %node.addr = alloca %struct.device_node*, align 8
  store %struct.device_node* %node, %struct.device_node** %node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %node.addr, metadata !16301, metadata !DIExpression()), !dbg !16302
  %0 = load %struct.device_node*, %struct.device_node** %node.addr, align 8, !dbg !16303
  ret %struct.device_node* %0, !dbg !16304
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @of_property_read_bool(%struct.device_node* %np, i8* %propname) #0 !dbg !16305 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %prop = alloca %struct.property*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !16308, metadata !DIExpression()), !dbg !16309
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !16310, metadata !DIExpression()), !dbg !16311
  call void @llvm.dbg.declare(metadata %struct.property** %prop, metadata !16312, metadata !DIExpression()), !dbg !16313
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !16314
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !16315
  %call = call %struct.property* @of_find_property(%struct.device_node* %0, i8* %1, i32* null) #11, !dbg !16316
  store %struct.property* %call, %struct.property** %prop, align 8, !dbg !16313
  %2 = load %struct.property*, %struct.property** %prop, align 8, !dbg !16317
  %tobool = icmp ne %struct.property* %2, null, !dbg !16317
  %3 = zext i1 %tobool to i64, !dbg !16317
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !16317
  %tobool1 = icmp ne i32 %cond, 0, !dbg !16317
  ret i1 %tobool1, !dbg !16318
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32(%struct.device_node* %np, i8* %propname, i32* %out_value) #0 !dbg !16319 {
entry:
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_value.addr = alloca i32*, align 8
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !16322, metadata !DIExpression()), !dbg !16323
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !16324, metadata !DIExpression()), !dbg !16325
  store i32* %out_value, i32** %out_value.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_value.addr, metadata !16326, metadata !DIExpression()), !dbg !16327
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !16328
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !16329
  %2 = load i32*, i32** %out_value.addr, align 8, !dbg !16330
  %call = call i32 @of_property_read_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 1) #11, !dbg !16331
  ret i32 %call, !dbg !16332
}

; Function Attrs: noredzone
declare dso_local zeroext i1 @of_node_name_eq(%struct.device_node*, i8*) #2

; Function Attrs: noredzone
declare dso_local %struct.property* @of_find_property(%struct.device_node*, i8*, i32*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @of_property_read_u32_array(%struct.device_node* %np, i8* %propname, i32* %out_values, i64 %sz) #0 !dbg !16333 {
entry:
  %retval = alloca i32, align 4
  %np.addr = alloca %struct.device_node*, align 8
  %propname.addr = alloca i8*, align 8
  %out_values.addr = alloca i32*, align 8
  %sz.addr = alloca i64, align 8
  %ret = alloca i32, align 4
  store %struct.device_node* %np, %struct.device_node** %np.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device_node** %np.addr, metadata !16336, metadata !DIExpression()), !dbg !16337
  store i8* %propname, i8** %propname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %propname.addr, metadata !16338, metadata !DIExpression()), !dbg !16339
  store i32* %out_values, i32** %out_values.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %out_values.addr, metadata !16340, metadata !DIExpression()), !dbg !16341
  store i64 %sz, i64* %sz.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %sz.addr, metadata !16342, metadata !DIExpression()), !dbg !16343
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16344, metadata !DIExpression()), !dbg !16345
  %0 = load %struct.device_node*, %struct.device_node** %np.addr, align 8, !dbg !16346
  %1 = load i8*, i8** %propname.addr, align 8, !dbg !16347
  %2 = load i32*, i32** %out_values.addr, align 8, !dbg !16348
  %3 = load i64, i64* %sz.addr, align 8, !dbg !16349
  %call = call i32 @of_property_read_variable_u32_array(%struct.device_node* %0, i8* %1, i32* %2, i64 %3, i64 0) #11, !dbg !16350
  store i32 %call, i32* %ret, align 4, !dbg !16345
  %4 = load i32, i32* %ret, align 4, !dbg !16351
  %cmp = icmp sge i32 %4, 0, !dbg !16353
  br i1 %cmp, label %if.then, label %if.else, !dbg !16354

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16355
  br label %return, !dbg !16355

if.else:                                          ; preds = %entry
  %5 = load i32, i32* %ret, align 4, !dbg !16356
  store i32 %5, i32* %retval, align 4, !dbg !16357
  br label %return, !dbg !16357

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !16358
  ret i32 %6, !dbg !16358
}

; Function Attrs: noredzone
declare dso_local i32 @of_property_read_variable_u32_array(%struct.device_node*, i8*, i32*, i64, i64) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @acpi_device_handle(%struct.acpi_device* %adev) #0 !dbg !16359 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !16362, metadata !DIExpression()), !dbg !16363
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16364
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !16364
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !16364

cond.true:                                        ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16365
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 1, !dbg !16366
  %2 = load i8*, i8** %handle, align 8, !dbg !16366
  br label %cond.end, !dbg !16364

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !16364

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %2, %cond.true ], [ null, %cond.false ], !dbg !16364
  ret i8* %cond, !dbg !16367
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_walk_namespace(i32, i8*, i32, i32 (i8*, i32, i8*, i8**)*, i32 (i8*, i32, i8*, i8**)*, i8*, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_spi_add_device(i8* %handle, i32 %level, i8* %data, i8** %return_value) #0 !dbg !16368 {
entry:
  %retval = alloca i32, align 4
  %handle.addr = alloca i8*, align 8
  %level.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %return_value.addr = alloca i8**, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !16371, metadata !DIExpression()), !dbg !16372
  store i32 %level, i32* %level.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %level.addr, metadata !16373, metadata !DIExpression()), !dbg !16374
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16375, metadata !DIExpression()), !dbg !16376
  store i8** %return_value, i8*** %return_value.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %return_value.addr, metadata !16377, metadata !DIExpression()), !dbg !16378
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !16379, metadata !DIExpression()), !dbg !16380
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16381
  %1 = bitcast i8* %0 to %struct.spi_controller*, !dbg !16381
  store %struct.spi_controller* %1, %struct.spi_controller** %ctlr, align 8, !dbg !16380
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !16382, metadata !DIExpression()), !dbg !16383
  %2 = load i8*, i8** %handle.addr, align 8, !dbg !16384
  %call = call i32 @acpi_bus_get_device(i8* %2, %struct.acpi_device** %adev) #11, !dbg !16386
  %tobool = icmp ne i32 %call, 0, !dbg !16386
  br i1 %tobool, label %if.then, label %if.end, !dbg !16387

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !16388
  br label %return, !dbg !16388

if.end:                                           ; preds = %entry
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !16389
  %4 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !16390
  %call1 = call i32 @acpi_register_spi_device(%struct.spi_controller* %3, %struct.acpi_device* %4) #11, !dbg !16391
  store i32 %call1, i32* %retval, align 4, !dbg !16392
  br label %return, !dbg !16392

return:                                           ; preds = %if.end, %if.then
  %5 = load i32, i32* %retval, align 4, !dbg !16393
  ret i32 %5, !dbg !16393
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_get_device(i8*, %struct.acpi_device**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_register_spi_device(%struct.spi_controller* %ctlr, %struct.acpi_device* %adev) #0 !dbg !16394 {
entry:
  %retval = alloca i32, align 4
  %ctlr.addr = alloca %struct.spi_controller*, align 8
  %adev.addr = alloca %struct.acpi_device*, align 8
  %parent_handle = alloca i8*, align 8
  %resource_list = alloca %struct.list_head, align 8
  %lookup = alloca %struct.acpi_spi_lookup, align 8
  %spi = alloca %struct.spi_device*, align 8
  %ret = alloca i32, align 4
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp13 = alloca %struct.acpi_device*, align 8
  store %struct.spi_controller* %ctlr, %struct.spi_controller** %ctlr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr.addr, metadata !16397, metadata !DIExpression()), !dbg !16398
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !16399, metadata !DIExpression()), !dbg !16400
  call void @llvm.dbg.declare(metadata i8** %parent_handle, metadata !16401, metadata !DIExpression()), !dbg !16402
  store i8* null, i8** %parent_handle, align 8, !dbg !16402
  call void @llvm.dbg.declare(metadata %struct.list_head* %resource_list, metadata !16403, metadata !DIExpression()), !dbg !16404
  call void @llvm.dbg.declare(metadata %struct.acpi_spi_lookup* %lookup, metadata !16405, metadata !DIExpression()), !dbg !16414
  %0 = bitcast %struct.acpi_spi_lookup* %lookup to i8*, !dbg !16414
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 24, i1 false), !dbg !16414
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !16415, metadata !DIExpression()), !dbg !16416
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !16417, metadata !DIExpression()), !dbg !16418
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16419
  %call = call i32 @acpi_bus_get_status(%struct.acpi_device* %1) #11, !dbg !16421
  %tobool = icmp ne i32 %call, 0, !dbg !16421
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !16422

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16423
  %status = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %2, i32 0, i32 8, !dbg !16424
  %3 = bitcast %struct.acpi_device_status* %status to i32*, !dbg !16425
  %bf.load = load i32, i32* %3, align 8, !dbg !16425
  %bf.clear = and i32 %bf.load, 1, !dbg !16425
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !16423
  br i1 %tobool1, label %lor.lhs.false2, label %if.then, !dbg !16426

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16427
  %call3 = call zeroext i1 @acpi_device_enumerated(%struct.acpi_device* %4) #11, !dbg !16428
  br i1 %call3, label %if.then, label %if.end, !dbg !16429

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !16430
  br label %return, !dbg !16430

if.end:                                           ; preds = %lor.lhs.false2
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16431
  %ctlr4 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 0, !dbg !16432
  store %struct.spi_controller* %5, %struct.spi_controller** %ctlr4, align 8, !dbg !16433
  %irq = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 3, !dbg !16434
  store i32 -1, i32* %irq, align 8, !dbg !16435
  call void @INIT_LIST_HEAD(%struct.list_head* %resource_list) #11, !dbg !16436
  %6 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16437
  %7 = bitcast %struct.acpi_spi_lookup* %lookup to i8*, !dbg !16438
  %call5 = call i32 @acpi_dev_get_resources(%struct.acpi_device* %6, %struct.list_head* %resource_list, i32 (%struct.acpi_resource*, i8*)* @acpi_spi_add_resource, i8* %7) #11, !dbg !16439
  store i32 %call5, i32* %ret, align 4, !dbg !16440
  call void @acpi_dev_free_resource_list(%struct.list_head* %resource_list) #11, !dbg !16441
  %8 = load i32, i32* %ret, align 4, !dbg !16442
  %cmp = icmp slt i32 %8, 0, !dbg !16444
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !16445

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !16446
  br label %return, !dbg !16446

if.end7:                                          ; preds = %if.end
  %max_speed_hz = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 1, !dbg !16447
  %9 = load i32, i32* %max_speed_hz, align 8, !dbg !16447
  %tobool8 = icmp ne i32 %9, 0, !dbg !16449
  br i1 %tobool8, label %if.end17, label %land.lhs.true, !dbg !16450

land.lhs.true:                                    ; preds = %if.end7
  %10 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16451
  %handle = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %10, i32 0, i32 1, !dbg !16451
  %11 = load i8*, i8** %handle, align 8, !dbg !16451
  %call9 = call i32 @acpi_get_parent(i8* %11, i8** %parent_handle) #11, !dbg !16451
  %tobool10 = icmp ne i32 %call9, 0, !dbg !16451
  br i1 %tobool10, label %if.end17, label %land.lhs.true11, !dbg !16452

land.lhs.true11:                                  ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !16453, metadata !DIExpression()), !dbg !16455
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16455
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 0, !dbg !16455
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !16455
  %13 = load %struct.device*, %struct.device** %parent, align 8, !dbg !16455
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 24, !dbg !16455
  %14 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !16455
  store %struct.fwnode_handle* %14, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !16455
  %15 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !16455
  %call12 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %15) #11, !dbg !16455
  br i1 %call12, label %cond.true, label %cond.false, !dbg !16455

cond.true:                                        ; preds = %land.lhs.true11
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16456, metadata !DIExpression()), !dbg !16458
  %16 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !16458
  %17 = bitcast %struct.fwnode_handle* %16 to i8*, !dbg !16458
  store i8* %17, i8** %__mptr, align 8, !dbg !16458
  br label %do.body, !dbg !16458

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !16459

do.end:                                           ; preds = %do.body
  %18 = load i8*, i8** %__mptr, align 8, !dbg !16458
  %add.ptr = getelementptr i8, i8* %18, i64 -16, !dbg !16458
  %19 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !16458
  store %struct.acpi_device* %19, %struct.acpi_device** %tmp13, align 8, !dbg !16459
  %20 = load %struct.acpi_device*, %struct.acpi_device** %tmp13, align 8, !dbg !16458
  br label %cond.end, !dbg !16455

cond.false:                                       ; preds = %land.lhs.true11
  br label %cond.end, !dbg !16455

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %20, %do.end ], [ null, %cond.false ], !dbg !16455
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !16455
  %21 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !16455
  %call14 = call i8* @acpi_device_handle(%struct.acpi_device* %21) #11, !dbg !16461
  %22 = load i8*, i8** %parent_handle, align 8, !dbg !16462
  %cmp15 = icmp eq i8* %call14, %22, !dbg !16463
  br i1 %cmp15, label %if.then16, label %if.end17, !dbg !16464

if.then16:                                        ; preds = %cond.end
  %23 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16465
  call void @acpi_spi_parse_apple_properties(%struct.acpi_device* %23, %struct.acpi_spi_lookup* %lookup) #11, !dbg !16467
  br label %if.end17, !dbg !16468

if.end17:                                         ; preds = %if.then16, %cond.end, %land.lhs.true, %if.end7
  %max_speed_hz18 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 1, !dbg !16469
  %24 = load i32, i32* %max_speed_hz18, align 8, !dbg !16469
  %tobool19 = icmp ne i32 %24, 0, !dbg !16471
  br i1 %tobool19, label %if.end21, label %if.then20, !dbg !16472

if.then20:                                        ; preds = %if.end17
  store i32 0, i32* %retval, align 4, !dbg !16473
  br label %return, !dbg !16473

if.end21:                                         ; preds = %if.end17
  %25 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16474
  %call22 = call %struct.spi_device* @spi_alloc_device(%struct.spi_controller* %25) #11, !dbg !16475
  store %struct.spi_device* %call22, %struct.spi_device** %spi, align 8, !dbg !16476
  %26 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16477
  %tobool23 = icmp ne %struct.spi_device* %26, null, !dbg !16477
  br i1 %tobool23, label %if.end28, label %if.then24, !dbg !16479

if.then24:                                        ; preds = %if.end21
  %27 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16480
  %dev25 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %27, i32 0, i32 0, !dbg !16480
  %28 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16480
  %dev26 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %28, i32 0, i32 21, !dbg !16480
  %call27 = call i8* @dev_name(%struct.device* %dev26) #11, !dbg !16480
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev25, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.103, i64 0, i64 0), i8* %call27) #14, !dbg !16480
  store i32 4, i32* %retval, align 4, !dbg !16482
  br label %return, !dbg !16482

if.end28:                                         ; preds = %if.end21
  %29 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16483
  %dev29 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %29, i32 0, i32 0, !dbg !16483
  %30 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16483
  %tobool30 = icmp ne %struct.acpi_device* %30, null, !dbg !16483
  br i1 %tobool30, label %cond.true31, label %cond.false33, !dbg !16483

cond.true31:                                      ; preds = %if.end28
  %31 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16483
  %call32 = call %struct.fwnode_handle* @acpi_fwnode_handle(%struct.acpi_device* %31) #11, !dbg !16483
  br label %cond.end34, !dbg !16483

cond.false33:                                     ; preds = %if.end28
  br label %cond.end34, !dbg !16483

cond.end34:                                       ; preds = %cond.false33, %cond.true31
  %cond35 = phi %struct.fwnode_handle* [ %call32, %cond.true31 ], [ null, %cond.false33 ], !dbg !16483
  call void @set_primary_fwnode(%struct.device* %dev29, %struct.fwnode_handle* %cond35) #11, !dbg !16483
  %max_speed_hz36 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 1, !dbg !16484
  %32 = load i32, i32* %max_speed_hz36, align 8, !dbg !16484
  %33 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16485
  %max_speed_hz37 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %33, i32 0, i32 3, !dbg !16486
  store i32 %32, i32* %max_speed_hz37, align 8, !dbg !16487
  %mode = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 2, !dbg !16488
  %34 = load i32, i32* %mode, align 4, !dbg !16488
  %35 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16489
  %mode38 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %35, i32 0, i32 7, !dbg !16490
  %36 = load i32, i32* %mode38, align 8, !dbg !16491
  %or = or i32 %36, %34, !dbg !16491
  store i32 %or, i32* %mode38, align 8, !dbg !16491
  %irq39 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 3, !dbg !16492
  %37 = load i32, i32* %irq39, align 8, !dbg !16492
  %38 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16493
  %irq40 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %38, i32 0, i32 8, !dbg !16494
  store i32 %37, i32* %irq40, align 4, !dbg !16495
  %bits_per_word = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 4, !dbg !16496
  %39 = load i8, i8* %bits_per_word, align 4, !dbg !16496
  %40 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16497
  %bits_per_word41 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %40, i32 0, i32 5, !dbg !16498
  store i8 %39, i8* %bits_per_word41, align 1, !dbg !16499
  %chip_select = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %lookup, i32 0, i32 5, !dbg !16500
  %41 = load i8, i8* %chip_select, align 1, !dbg !16500
  %42 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16501
  %chip_select42 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %42, i32 0, i32 4, !dbg !16502
  store i8 %41, i8* %chip_select42, align 4, !dbg !16503
  %43 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16504
  %44 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16505
  %call43 = call i8* @acpi_device_hid(%struct.acpi_device* %44) #11, !dbg !16506
  %45 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16507
  %modalias = getelementptr inbounds %struct.spi_device, %struct.spi_device* %45, i32 0, i32 11, !dbg !16508
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %modalias, i64 0, i64 0, !dbg !16507
  call void @acpi_set_modalias(%struct.acpi_device* %43, i8* %call43, i8* %arraydecay, i64 32) #11, !dbg !16509
  %46 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16510
  %irq44 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %46, i32 0, i32 8, !dbg !16512
  %47 = load i32, i32* %irq44, align 4, !dbg !16512
  %cmp45 = icmp slt i32 %47, 0, !dbg !16513
  br i1 %cmp45, label %if.then46, label %if.end49, !dbg !16514

if.then46:                                        ; preds = %cond.end34
  %48 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16515
  %call47 = call i32 @acpi_dev_gpio_irq_get(%struct.acpi_device* %48, i32 0) #11, !dbg !16516
  %49 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16517
  %irq48 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %49, i32 0, i32 8, !dbg !16518
  store i32 %call47, i32* %irq48, align 4, !dbg !16519
  br label %if.end49, !dbg !16517

if.end49:                                         ; preds = %if.then46, %cond.end34
  %50 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16520
  call void @acpi_device_set_enumerated(%struct.acpi_device* %50) #11, !dbg !16521
  %51 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16522
  %power = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %51, i32 0, i32 11, !dbg !16523
  %flags = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power, i32 0, i32 1, !dbg !16524
  %52 = bitcast %struct.acpi_device_power_flags* %flags to i32*, !dbg !16525
  %bf.load50 = load i32, i32* %52, align 4, !dbg !16526
  %bf.clear51 = and i32 %bf.load50, -17, !dbg !16526
  %bf.set = or i32 %bf.clear51, 16, !dbg !16526
  store i32 %bf.set, i32* %52, align 4, !dbg !16526
  %53 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16527
  %call52 = call i32 @spi_add_device(%struct.spi_device* %53) #11, !dbg !16529
  %tobool53 = icmp ne i32 %call52, 0, !dbg !16529
  br i1 %tobool53, label %if.then54, label %if.end62, !dbg !16530

if.then54:                                        ; preds = %if.end49
  %54 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16531
  %power55 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %54, i32 0, i32 11, !dbg !16533
  %flags56 = getelementptr inbounds %struct.acpi_device_power, %struct.acpi_device_power* %power55, i32 0, i32 1, !dbg !16534
  %55 = bitcast %struct.acpi_device_power_flags* %flags56 to i32*, !dbg !16535
  %bf.load57 = load i32, i32* %55, align 4, !dbg !16536
  %bf.clear58 = and i32 %bf.load57, -17, !dbg !16536
  store i32 %bf.clear58, i32* %55, align 4, !dbg !16536
  %56 = load %struct.spi_controller*, %struct.spi_controller** %ctlr.addr, align 8, !dbg !16537
  %dev59 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %56, i32 0, i32 0, !dbg !16537
  %57 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16537
  %dev60 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %57, i32 0, i32 21, !dbg !16537
  %call61 = call i8* @dev_name(%struct.device* %dev60) #11, !dbg !16537
  call void (%struct.device*, i8*, ...) @_dev_err(%struct.device* %dev59, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.104, i64 0, i64 0), i8* %call61) #14, !dbg !16537
  %58 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !16538
  call void @spi_dev_put(%struct.spi_device* %58) #11, !dbg !16539
  br label %if.end62, !dbg !16540

if.end62:                                         ; preds = %if.then54, %if.end49
  store i32 0, i32* %retval, align 4, !dbg !16541
  br label %return, !dbg !16541

return:                                           ; preds = %if.end62, %if.then24, %if.then20, %if.then6, %if.then
  %59 = load i32, i32* %retval, align 4, !dbg !16542
  ret i32 %59, !dbg !16542
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_bus_get_status(%struct.acpi_device*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal zeroext i1 @acpi_device_enumerated(%struct.acpi_device* %adev) #0 !dbg !16543 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !16546, metadata !DIExpression()), !dbg !16547
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16548
  %tobool = icmp ne %struct.acpi_device* %0, null, !dbg !16548
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !16549

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16550
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %1, i32 0, i32 9, !dbg !16551
  %2 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !16552
  %bf.load = load i32, i32* %2, align 4, !dbg !16552
  %bf.lshr = lshr i32 %bf.load, 5, !dbg !16552
  %bf.clear = and i32 %bf.lshr, 1, !dbg !16552
  %tobool1 = icmp ne i32 %bf.clear, 0, !dbg !16550
  br i1 %tobool1, label %land.rhs, label %land.end, !dbg !16553

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !16554
  %flags2 = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 9, !dbg !16555
  %4 = bitcast %struct.acpi_device_flags* %flags2 to i32*, !dbg !16556
  %bf.load3 = load i32, i32* %4, align 4, !dbg !16556
  %bf.lshr4 = lshr i32 %bf.load3, 6, !dbg !16556
  %bf.clear5 = and i32 %bf.lshr4, 1, !dbg !16556
  %tobool6 = icmp ne i32 %bf.clear5, 0, !dbg !16553
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool6, %land.rhs ], !dbg !16557
  ret i1 %5, !dbg !16558
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_dev_get_resources(%struct.acpi_device*, %struct.list_head*, i32 (%struct.acpi_resource*, i8*)*, i8*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_spi_add_resource(%struct.acpi_resource* %ares, i8* %data) #0 !dbg !16559 {
entry:
  %retval = alloca i32, align 4
  %ares.addr = alloca %struct.acpi_resource*, align 8
  %data.addr = alloca i8*, align 8
  %lookup = alloca %struct.acpi_spi_lookup*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %sb = alloca %struct.acpi_resource_spi_serialbus*, align 8
  %parent_handle = alloca i8*, align 8
  %status = alloca i32, align 4
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp9 = alloca %struct.acpi_device*, align 8
  %cs = alloca i32, align 4
  %r = alloca %struct.resource, align 8
  store %struct.acpi_resource* %ares, %struct.acpi_resource** %ares.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_resource** %ares.addr, metadata !16924, metadata !DIExpression()), !dbg !16925
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16926, metadata !DIExpression()), !dbg !16927
  call void @llvm.dbg.declare(metadata %struct.acpi_spi_lookup** %lookup, metadata !16928, metadata !DIExpression()), !dbg !16930
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16931
  %1 = bitcast i8* %0 to %struct.acpi_spi_lookup*, !dbg !16931
  store %struct.acpi_spi_lookup* %1, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !16930
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !16932, metadata !DIExpression()), !dbg !16933
  %2 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !16934
  %ctlr1 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %2, i32 0, i32 0, !dbg !16935
  %3 = load %struct.spi_controller*, %struct.spi_controller** %ctlr1, align 8, !dbg !16935
  store %struct.spi_controller* %3, %struct.spi_controller** %ctlr, align 8, !dbg !16933
  %4 = load %struct.acpi_resource*, %struct.acpi_resource** %ares.addr, align 8, !dbg !16936
  %type = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %4, i32 0, i32 0, !dbg !16938
  %5 = load i32, i32* %type, align 1, !dbg !16938
  %cmp = icmp eq i32 %5, 19, !dbg !16939
  br i1 %cmp, label %if.then, label %if.else48, !dbg !16940

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.acpi_resource_spi_serialbus** %sb, metadata !16941, metadata !DIExpression()), !dbg !16944
  call void @llvm.dbg.declare(metadata i8** %parent_handle, metadata !16945, metadata !DIExpression()), !dbg !16946
  call void @llvm.dbg.declare(metadata i32* %status, metadata !16947, metadata !DIExpression()), !dbg !16948
  %6 = load %struct.acpi_resource*, %struct.acpi_resource** %ares.addr, align 8, !dbg !16949
  %data2 = getelementptr inbounds %struct.acpi_resource, %struct.acpi_resource* %6, i32 0, i32 2, !dbg !16950
  %spi_serial_bus = bitcast %union.acpi_resource_data* %data2 to %struct.acpi_resource_spi_serialbus*, !dbg !16951
  store %struct.acpi_resource_spi_serialbus* %spi_serial_bus, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !16952
  %7 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !16953
  %type3 = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %7, i32 0, i32 1, !dbg !16955
  %8 = load i8, i8* %type3, align 1, !dbg !16955
  %conv = zext i8 %8 to i32, !dbg !16953
  %cmp4 = icmp eq i32 %conv, 2, !dbg !16956
  br i1 %cmp4, label %if.then6, label %if.end47, !dbg !16957

if.then6:                                         ; preds = %if.then
  %9 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !16958
  %resource_source = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %9, i32 0, i32 8, !dbg !16960
  %string_ptr = getelementptr inbounds %struct.acpi_resource_source, %struct.acpi_resource_source* %resource_source, i32 0, i32 2, !dbg !16961
  %10 = load i8*, i8** %string_ptr, align 1, !dbg !16961
  %call = call i32 @acpi_get_handle(i8* null, i8* %10, i8** %parent_handle) #11, !dbg !16962
  store i32 %call, i32* %status, align 4, !dbg !16963
  %11 = load i32, i32* %status, align 4, !dbg !16964
  %tobool = icmp ne i32 %11, 0, !dbg !16964
  br i1 %tobool, label %if.then13, label %lor.lhs.false, !dbg !16966

lor.lhs.false:                                    ; preds = %if.then6
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !16967, metadata !DIExpression()), !dbg !16969
  %12 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !16969
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %12, i32 0, i32 0, !dbg !16969
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 1, !dbg !16969
  %13 = load %struct.device*, %struct.device** %parent, align 8, !dbg !16969
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %13, i32 0, i32 24, !dbg !16969
  %14 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !16969
  store %struct.fwnode_handle* %14, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !16969
  %15 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !16969
  %call7 = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %15) #11, !dbg !16969
  br i1 %call7, label %cond.true, label %cond.false, !dbg !16969

cond.true:                                        ; preds = %lor.lhs.false
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !16970, metadata !DIExpression()), !dbg !16972
  %16 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !16972
  %17 = bitcast %struct.fwnode_handle* %16 to i8*, !dbg !16972
  store i8* %17, i8** %__mptr, align 8, !dbg !16972
  br label %do.body, !dbg !16972

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !16973

do.end:                                           ; preds = %do.body
  %18 = load i8*, i8** %__mptr, align 8, !dbg !16972
  %add.ptr = getelementptr i8, i8* %18, i64 -16, !dbg !16972
  %19 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !16972
  store %struct.acpi_device* %19, %struct.acpi_device** %tmp9, align 8, !dbg !16973
  %20 = load %struct.acpi_device*, %struct.acpi_device** %tmp9, align 8, !dbg !16972
  br label %cond.end, !dbg !16969

cond.false:                                       ; preds = %lor.lhs.false
  br label %cond.end, !dbg !16969

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %20, %do.end ], [ null, %cond.false ], !dbg !16969
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !16969
  %21 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !16969
  %call10 = call i8* @acpi_device_handle(%struct.acpi_device* %21) #11, !dbg !16975
  %22 = load i8*, i8** %parent_handle, align 8, !dbg !16976
  %cmp11 = icmp ne i8* %call10, %22, !dbg !16977
  br i1 %cmp11, label %if.then13, label %if.end, !dbg !16978

if.then13:                                        ; preds = %cond.end, %if.then6
  store i32 -19, i32* %retval, align 4, !dbg !16979
  br label %return, !dbg !16979

if.end:                                           ; preds = %cond.end
  %23 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !16980
  %fw_translate_cs = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %23, i32 0, i32 64, !dbg !16982
  %24 = load i32 (%struct.spi_controller*, i32)*, i32 (%struct.spi_controller*, i32)** %fw_translate_cs, align 8, !dbg !16982
  %tobool14 = icmp ne i32 (%struct.spi_controller*, i32)* %24, null, !dbg !16980
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !16983

if.then15:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %cs, metadata !16984, metadata !DIExpression()), !dbg !16986
  %25 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !16987
  %fw_translate_cs16 = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %25, i32 0, i32 64, !dbg !16988
  %26 = load i32 (%struct.spi_controller*, i32)*, i32 (%struct.spi_controller*, i32)** %fw_translate_cs16, align 8, !dbg !16988
  %27 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !16989
  %28 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !16990
  %device_selection = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %28, i32 0, i32 15, !dbg !16991
  %29 = load i16, i16* %device_selection, align 1, !dbg !16991
  %conv17 = zext i16 %29 to i32, !dbg !16990
  %call18 = call i32 %26(%struct.spi_controller* %27, i32 %conv17) #11, !dbg !16987
  store i32 %call18, i32* %cs, align 4, !dbg !16986
  %30 = load i32, i32* %cs, align 4, !dbg !16992
  %cmp19 = icmp slt i32 %30, 0, !dbg !16994
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !16995

if.then21:                                        ; preds = %if.then15
  %31 = load i32, i32* %cs, align 4, !dbg !16996
  store i32 %31, i32* %retval, align 4, !dbg !16997
  br label %return, !dbg !16997

if.end22:                                         ; preds = %if.then15
  %32 = load i32, i32* %cs, align 4, !dbg !16998
  %conv23 = trunc i32 %32 to i8, !dbg !16998
  %33 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !16999
  %chip_select = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %33, i32 0, i32 5, !dbg !17000
  store i8 %conv23, i8* %chip_select, align 1, !dbg !17001
  br label %if.end27, !dbg !17002

if.else:                                          ; preds = %if.end
  %34 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !17003
  %device_selection24 = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %34, i32 0, i32 15, !dbg !17005
  %35 = load i16, i16* %device_selection24, align 1, !dbg !17005
  %conv25 = trunc i16 %35 to i8, !dbg !17003
  %36 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17006
  %chip_select26 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %36, i32 0, i32 5, !dbg !17007
  store i8 %conv25, i8* %chip_select26, align 1, !dbg !17008
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.end22
  %37 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !17009
  %connection_speed = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %37, i32 0, i32 16, !dbg !17010
  %38 = load i32, i32* %connection_speed, align 1, !dbg !17010
  %39 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17011
  %max_speed_hz = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %39, i32 0, i32 1, !dbg !17012
  store i32 %38, i32* %max_speed_hz, align 8, !dbg !17013
  %40 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !17014
  %data_bit_length = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %40, i32 0, i32 12, !dbg !17015
  %41 = load i8, i8* %data_bit_length, align 1, !dbg !17015
  %42 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17016
  %bits_per_word = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %42, i32 0, i32 4, !dbg !17017
  store i8 %41, i8* %bits_per_word, align 4, !dbg !17018
  %43 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !17019
  %clock_phase = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %43, i32 0, i32 13, !dbg !17021
  %44 = load i8, i8* %clock_phase, align 1, !dbg !17021
  %conv28 = zext i8 %44 to i32, !dbg !17019
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !17022
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !17023

if.then31:                                        ; preds = %if.end27
  %45 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17024
  %mode = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %45, i32 0, i32 2, !dbg !17025
  %46 = load i32, i32* %mode, align 4, !dbg !17026
  %or = or i32 %46, 1, !dbg !17026
  store i32 %or, i32* %mode, align 4, !dbg !17026
  br label %if.end32, !dbg !17024

if.end32:                                         ; preds = %if.then31, %if.end27
  %47 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !17027
  %clock_polarity = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %47, i32 0, i32 14, !dbg !17029
  %48 = load i8, i8* %clock_polarity, align 1, !dbg !17029
  %conv33 = zext i8 %48 to i32, !dbg !17027
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !17030
  br i1 %cmp34, label %if.then36, label %if.end39, !dbg !17031

if.then36:                                        ; preds = %if.end32
  %49 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17032
  %mode37 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %49, i32 0, i32 2, !dbg !17033
  %50 = load i32, i32* %mode37, align 4, !dbg !17034
  %or38 = or i32 %50, 2, !dbg !17034
  store i32 %or38, i32* %mode37, align 4, !dbg !17034
  br label %if.end39, !dbg !17032

if.end39:                                         ; preds = %if.then36, %if.end32
  %51 = load %struct.acpi_resource_spi_serialbus*, %struct.acpi_resource_spi_serialbus** %sb, align 8, !dbg !17035
  %device_polarity = getelementptr inbounds %struct.acpi_resource_spi_serialbus, %struct.acpi_resource_spi_serialbus* %51, i32 0, i32 11, !dbg !17037
  %52 = load i8, i8* %device_polarity, align 1, !dbg !17037
  %conv40 = zext i8 %52 to i32, !dbg !17035
  %cmp41 = icmp eq i32 %conv40, 1, !dbg !17038
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !17039

if.then43:                                        ; preds = %if.end39
  %53 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17040
  %mode44 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %53, i32 0, i32 2, !dbg !17041
  %54 = load i32, i32* %mode44, align 4, !dbg !17042
  %or45 = or i32 %54, 4, !dbg !17042
  store i32 %or45, i32* %mode44, align 4, !dbg !17042
  br label %if.end46, !dbg !17040

if.end46:                                         ; preds = %if.then43, %if.end39
  br label %if.end47, !dbg !17043

if.end47:                                         ; preds = %if.end46, %if.then
  br label %if.end58, !dbg !17044

if.else48:                                        ; preds = %entry
  %55 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17045
  %irq = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %55, i32 0, i32 3, !dbg !17047
  %56 = load i32, i32* %irq, align 8, !dbg !17047
  %cmp49 = icmp slt i32 %56, 0, !dbg !17048
  br i1 %cmp49, label %if.then51, label %if.end57, !dbg !17049

if.then51:                                        ; preds = %if.else48
  call void @llvm.dbg.declare(metadata %struct.resource* %r, metadata !17050, metadata !DIExpression()), !dbg !17065
  %57 = load %struct.acpi_resource*, %struct.acpi_resource** %ares.addr, align 8, !dbg !17066
  %call52 = call zeroext i1 @acpi_dev_resource_interrupt(%struct.acpi_resource* %57, i32 0, %struct.resource* %r) #11, !dbg !17068
  br i1 %call52, label %if.then53, label %if.end56, !dbg !17069

if.then53:                                        ; preds = %if.then51
  %start = getelementptr inbounds %struct.resource, %struct.resource* %r, i32 0, i32 0, !dbg !17070
  %58 = load i64, i64* %start, align 8, !dbg !17070
  %conv54 = trunc i64 %58 to i32, !dbg !17071
  %59 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup, align 8, !dbg !17072
  %irq55 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %59, i32 0, i32 3, !dbg !17073
  store i32 %conv54, i32* %irq55, align 8, !dbg !17074
  br label %if.end56, !dbg !17072

if.end56:                                         ; preds = %if.then53, %if.then51
  br label %if.end57, !dbg !17075

if.end57:                                         ; preds = %if.end56, %if.else48
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end47
  store i32 1, i32* %retval, align 4, !dbg !17076
  br label %return, !dbg !17076

return:                                           ; preds = %if.end58, %if.then21, %if.then13
  %60 = load i32, i32* %retval, align 4, !dbg !17077
  ret i32 %60, !dbg !17077
}

; Function Attrs: noredzone
declare dso_local void @acpi_dev_free_resource_list(%struct.list_head*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_parent(i8*, i8**) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_spi_parse_apple_properties(%struct.acpi_device* %dev, %struct.acpi_spi_lookup* %lookup) #0 !dbg !17078 {
entry:
  %dev.addr = alloca %struct.acpi_device*, align 8
  %lookup.addr = alloca %struct.acpi_spi_lookup*, align 8
  %obj = alloca %union.acpi_object*, align 8
  store %struct.acpi_device* %dev, %struct.acpi_device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %dev.addr, metadata !17081, metadata !DIExpression()), !dbg !17082
  store %struct.acpi_spi_lookup* %lookup, %struct.acpi_spi_lookup** %lookup.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_spi_lookup** %lookup.addr, metadata !17083, metadata !DIExpression()), !dbg !17084
  call void @llvm.dbg.declare(metadata %union.acpi_object** %obj, metadata !17085, metadata !DIExpression()), !dbg !17086
  %0 = load i8, i8* @x86_apple_machine, align 1, !dbg !17087
  %tobool = trunc i8 %0 to i1, !dbg !17087
  br i1 %tobool, label %if.end, label %if.then, !dbg !17089

if.then:                                          ; preds = %entry
  br label %if.end60, !dbg !17090

if.end:                                           ; preds = %entry
  %1 = load %struct.acpi_device*, %struct.acpi_device** %dev.addr, align 8, !dbg !17091
  %call = call i32 @acpi_dev_get_property(%struct.acpi_device* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.105, i64 0, i64 0), i32 3, %union.acpi_object** %obj) #11, !dbg !17093
  %tobool1 = icmp ne i32 %call, 0, !dbg !17093
  br i1 %tobool1, label %if.end5, label %land.lhs.true, !dbg !17094

land.lhs.true:                                    ; preds = %if.end
  %2 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17095
  %buffer = bitcast %union.acpi_object* %2 to %struct.anon.77*, !dbg !17096
  %length = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer, i32 0, i32 1, !dbg !17097
  %3 = load i32, i32* %length, align 4, !dbg !17097
  %cmp = icmp uge i32 %3, 4, !dbg !17098
  br i1 %cmp, label %if.then2, label %if.end5, !dbg !17099

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17100
  %buffer3 = bitcast %union.acpi_object* %4 to %struct.anon.77*, !dbg !17101
  %pointer = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer3, i32 0, i32 2, !dbg !17102
  %5 = load i8*, i8** %pointer, align 8, !dbg !17102
  %6 = bitcast i8* %5 to i32*, !dbg !17103
  %7 = load i32, i32* %6, align 4, !dbg !17103
  %conv = zext i32 %7 to i64, !dbg !17103
  %div = sdiv i64 1000000000, %conv, !dbg !17104
  %conv4 = trunc i64 %div to i32, !dbg !17105
  %8 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup.addr, align 8, !dbg !17106
  %max_speed_hz = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %8, i32 0, i32 1, !dbg !17107
  store i32 %conv4, i32* %max_speed_hz, align 8, !dbg !17108
  br label %if.end5, !dbg !17106

if.end5:                                          ; preds = %if.then2, %land.lhs.true, %if.end
  %9 = load %struct.acpi_device*, %struct.acpi_device** %dev.addr, align 8, !dbg !17109
  %call6 = call i32 @acpi_dev_get_property(%struct.acpi_device* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.106, i64 0, i64 0), i32 3, %union.acpi_object** %obj) #11, !dbg !17111
  %tobool7 = icmp ne i32 %call6, 0, !dbg !17111
  br i1 %tobool7, label %if.end17, label %land.lhs.true8, !dbg !17112

land.lhs.true8:                                   ; preds = %if.end5
  %10 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17113
  %buffer9 = bitcast %union.acpi_object* %10 to %struct.anon.77*, !dbg !17114
  %length10 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer9, i32 0, i32 1, !dbg !17115
  %11 = load i32, i32* %length10, align 4, !dbg !17115
  %cmp11 = icmp eq i32 %11, 8, !dbg !17116
  br i1 %cmp11, label %if.then13, label %if.end17, !dbg !17117

if.then13:                                        ; preds = %land.lhs.true8
  %12 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17118
  %buffer14 = bitcast %union.acpi_object* %12 to %struct.anon.77*, !dbg !17119
  %pointer15 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer14, i32 0, i32 2, !dbg !17120
  %13 = load i8*, i8** %pointer15, align 8, !dbg !17120
  %14 = bitcast i8* %13 to i64*, !dbg !17121
  %15 = load i64, i64* %14, align 8, !dbg !17121
  %conv16 = trunc i64 %15 to i8, !dbg !17121
  %16 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup.addr, align 8, !dbg !17122
  %bits_per_word = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %16, i32 0, i32 4, !dbg !17123
  store i8 %conv16, i8* %bits_per_word, align 4, !dbg !17124
  br label %if.end17, !dbg !17122

if.end17:                                         ; preds = %if.then13, %land.lhs.true8, %if.end5
  %17 = load %struct.acpi_device*, %struct.acpi_device** %dev.addr, align 8, !dbg !17125
  %call18 = call i32 @acpi_dev_get_property(%struct.acpi_device* %17, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i64 0, i64 0), i32 3, %union.acpi_object** %obj) #11, !dbg !17127
  %tobool19 = icmp ne i32 %call18, 0, !dbg !17127
  br i1 %tobool19, label %if.end30, label %land.lhs.true20, !dbg !17128

land.lhs.true20:                                  ; preds = %if.end17
  %18 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17129
  %buffer21 = bitcast %union.acpi_object* %18 to %struct.anon.77*, !dbg !17130
  %length22 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer21, i32 0, i32 1, !dbg !17131
  %19 = load i32, i32* %length22, align 4, !dbg !17131
  %cmp23 = icmp eq i32 %19, 8, !dbg !17132
  br i1 %cmp23, label %land.lhs.true25, label %if.end30, !dbg !17133

land.lhs.true25:                                  ; preds = %land.lhs.true20
  %20 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17134
  %buffer26 = bitcast %union.acpi_object* %20 to %struct.anon.77*, !dbg !17135
  %pointer27 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer26, i32 0, i32 2, !dbg !17136
  %21 = load i8*, i8** %pointer27, align 8, !dbg !17136
  %22 = bitcast i8* %21 to i64*, !dbg !17137
  %23 = load i64, i64* %22, align 8, !dbg !17137
  %tobool28 = icmp ne i64 %23, 0, !dbg !17137
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !17138

if.then29:                                        ; preds = %land.lhs.true25
  %24 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup.addr, align 8, !dbg !17139
  %mode = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %24, i32 0, i32 2, !dbg !17140
  %25 = load i32, i32* %mode, align 4, !dbg !17141
  %or = or i32 %25, 8, !dbg !17141
  store i32 %or, i32* %mode, align 4, !dbg !17141
  br label %if.end30, !dbg !17139

if.end30:                                         ; preds = %if.then29, %land.lhs.true25, %land.lhs.true20, %if.end17
  %26 = load %struct.acpi_device*, %struct.acpi_device** %dev.addr, align 8, !dbg !17142
  %call31 = call i32 @acpi_dev_get_property(%struct.acpi_device* %26, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.108, i64 0, i64 0), i32 3, %union.acpi_object** %obj) #11, !dbg !17144
  %tobool32 = icmp ne i32 %call31, 0, !dbg !17144
  br i1 %tobool32, label %if.end45, label %land.lhs.true33, !dbg !17145

land.lhs.true33:                                  ; preds = %if.end30
  %27 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17146
  %buffer34 = bitcast %union.acpi_object* %27 to %struct.anon.77*, !dbg !17147
  %length35 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer34, i32 0, i32 1, !dbg !17148
  %28 = load i32, i32* %length35, align 4, !dbg !17148
  %cmp36 = icmp eq i32 %28, 8, !dbg !17149
  br i1 %cmp36, label %land.lhs.true38, label %if.end45, !dbg !17150

land.lhs.true38:                                  ; preds = %land.lhs.true33
  %29 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17151
  %buffer39 = bitcast %union.acpi_object* %29 to %struct.anon.77*, !dbg !17152
  %pointer40 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer39, i32 0, i32 2, !dbg !17153
  %30 = load i8*, i8** %pointer40, align 8, !dbg !17153
  %31 = bitcast i8* %30 to i64*, !dbg !17154
  %32 = load i64, i64* %31, align 8, !dbg !17154
  %tobool41 = icmp ne i64 %32, 0, !dbg !17154
  br i1 %tobool41, label %if.then42, label %if.end45, !dbg !17155

if.then42:                                        ; preds = %land.lhs.true38
  %33 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup.addr, align 8, !dbg !17156
  %mode43 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %33, i32 0, i32 2, !dbg !17157
  %34 = load i32, i32* %mode43, align 4, !dbg !17158
  %or44 = or i32 %34, 2, !dbg !17158
  store i32 %or44, i32* %mode43, align 4, !dbg !17158
  br label %if.end45, !dbg !17156

if.end45:                                         ; preds = %if.then42, %land.lhs.true38, %land.lhs.true33, %if.end30
  %35 = load %struct.acpi_device*, %struct.acpi_device** %dev.addr, align 8, !dbg !17159
  %call46 = call i32 @acpi_dev_get_property(%struct.acpi_device* %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0), i32 3, %union.acpi_object** %obj) #11, !dbg !17161
  %tobool47 = icmp ne i32 %call46, 0, !dbg !17161
  br i1 %tobool47, label %if.end60, label %land.lhs.true48, !dbg !17162

land.lhs.true48:                                  ; preds = %if.end45
  %36 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17163
  %buffer49 = bitcast %union.acpi_object* %36 to %struct.anon.77*, !dbg !17164
  %length50 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer49, i32 0, i32 1, !dbg !17165
  %37 = load i32, i32* %length50, align 4, !dbg !17165
  %cmp51 = icmp eq i32 %37, 8, !dbg !17166
  br i1 %cmp51, label %land.lhs.true53, label %if.end60, !dbg !17167

land.lhs.true53:                                  ; preds = %land.lhs.true48
  %38 = load %union.acpi_object*, %union.acpi_object** %obj, align 8, !dbg !17168
  %buffer54 = bitcast %union.acpi_object* %38 to %struct.anon.77*, !dbg !17169
  %pointer55 = getelementptr inbounds %struct.anon.77, %struct.anon.77* %buffer54, i32 0, i32 2, !dbg !17170
  %39 = load i8*, i8** %pointer55, align 8, !dbg !17170
  %40 = bitcast i8* %39 to i64*, !dbg !17171
  %41 = load i64, i64* %40, align 8, !dbg !17171
  %tobool56 = icmp ne i64 %41, 0, !dbg !17171
  br i1 %tobool56, label %if.then57, label %if.end60, !dbg !17172

if.then57:                                        ; preds = %land.lhs.true53
  %42 = load %struct.acpi_spi_lookup*, %struct.acpi_spi_lookup** %lookup.addr, align 8, !dbg !17173
  %mode58 = getelementptr inbounds %struct.acpi_spi_lookup, %struct.acpi_spi_lookup* %42, i32 0, i32 2, !dbg !17174
  %43 = load i32, i32* %mode58, align 4, !dbg !17175
  %or59 = or i32 %43, 1, !dbg !17175
  store i32 %or59, i32* %mode58, align 4, !dbg !17175
  br label %if.end60, !dbg !17173

if.end60:                                         ; preds = %if.then, %if.then57, %land.lhs.true53, %land.lhs.true48, %if.end45
  ret void, !dbg !17176
}

; Function Attrs: noredzone
declare dso_local void @set_primary_fwnode(%struct.device*, %struct.fwnode_handle*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.fwnode_handle* @acpi_fwnode_handle(%struct.acpi_device* %adev) #0 !dbg !17177 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !17180, metadata !DIExpression()), !dbg !17181
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !17182
  %fwnode = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 2, !dbg !17183
  ret %struct.fwnode_handle* %fwnode, !dbg !17184
}

; Function Attrs: noredzone
declare dso_local void @acpi_set_modalias(%struct.acpi_device*, i8*, i8*, i64) #2

; Function Attrs: noredzone
declare dso_local i8* @acpi_device_hid(%struct.acpi_device*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_dev_gpio_irq_get(%struct.acpi_device*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @acpi_device_set_enumerated(%struct.acpi_device* %adev) #0 !dbg !17185 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !17186, metadata !DIExpression()), !dbg !17187
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !17188
  %flags = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %0, i32 0, i32 9, !dbg !17189
  %1 = bitcast %struct.acpi_device_flags* %flags to i32*, !dbg !17190
  %bf.load = load i32, i32* %1, align 4, !dbg !17191
  %bf.clear = and i32 %bf.load, -65, !dbg !17191
  %bf.set = or i32 %bf.clear, 64, !dbg !17191
  store i32 %bf.set, i32* %1, align 4, !dbg !17191
  ret void, !dbg !17192
}

; Function Attrs: noredzone
declare dso_local i32 @acpi_get_handle(i8*, i8*, i8**) #2

; Function Attrs: noredzone
declare dso_local zeroext i1 @acpi_dev_resource_interrupt(%struct.acpi_resource*, i32, %struct.resource*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_dev_get_property(%struct.acpi_device*, i8*, i32, %union.acpi_object**) #2

; Function Attrs: noredzone
declare dso_local void @kthread_destroy_worker(%struct.kthread_worker*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare { i64, i1 } @llvm.uadd.with.overflow.i64(i64, i64) #1

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @__list_splice(%struct.list_head* %list, %struct.list_head* %prev, %struct.list_head* %next) #0 !dbg !17193 {
entry:
  %list.addr = alloca %struct.list_head*, align 8
  %prev.addr = alloca %struct.list_head*, align 8
  %next.addr = alloca %struct.list_head*, align 8
  %first = alloca %struct.list_head*, align 8
  %last = alloca %struct.list_head*, align 8
  store %struct.list_head* %list, %struct.list_head** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %list.addr, metadata !17196, metadata !DIExpression()), !dbg !17197
  store %struct.list_head* %prev, %struct.list_head** %prev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %prev.addr, metadata !17198, metadata !DIExpression()), !dbg !17199
  store %struct.list_head* %next, %struct.list_head** %next.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.list_head** %next.addr, metadata !17200, metadata !DIExpression()), !dbg !17201
  call void @llvm.dbg.declare(metadata %struct.list_head** %first, metadata !17202, metadata !DIExpression()), !dbg !17203
  %0 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !17204
  %next1 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0, !dbg !17205
  %1 = load %struct.list_head*, %struct.list_head** %next1, align 8, !dbg !17205
  store %struct.list_head* %1, %struct.list_head** %first, align 8, !dbg !17203
  call void @llvm.dbg.declare(metadata %struct.list_head** %last, metadata !17206, metadata !DIExpression()), !dbg !17207
  %2 = load %struct.list_head*, %struct.list_head** %list.addr, align 8, !dbg !17208
  %prev2 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1, !dbg !17209
  %3 = load %struct.list_head*, %struct.list_head** %prev2, align 8, !dbg !17209
  store %struct.list_head* %3, %struct.list_head** %last, align 8, !dbg !17207
  %4 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !17210
  %5 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !17211
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %5, i32 0, i32 1, !dbg !17212
  store %struct.list_head* %4, %struct.list_head** %prev3, align 8, !dbg !17213
  %6 = load %struct.list_head*, %struct.list_head** %first, align 8, !dbg !17214
  %7 = load %struct.list_head*, %struct.list_head** %prev.addr, align 8, !dbg !17215
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %7, i32 0, i32 0, !dbg !17216
  store %struct.list_head* %6, %struct.list_head** %next4, align 8, !dbg !17217
  %8 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !17218
  %9 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !17219
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0, !dbg !17220
  store %struct.list_head* %8, %struct.list_head** %next5, align 8, !dbg !17221
  %10 = load %struct.list_head*, %struct.list_head** %last, align 8, !dbg !17222
  %11 = load %struct.list_head*, %struct.list_head** %next.addr, align 8, !dbg !17223
  %prev6 = getelementptr inbounds %struct.list_head, %struct.list_head* %11, i32 0, i32 1, !dbg !17224
  store %struct.list_head* %10, %struct.list_head** %prev6, align 8, !dbg !17225
  ret void, !dbg !17226
}

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_resume(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local void @gpiod_set_value_cansleep(%struct.gpio_desc*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @gpio_set_value_cansleep(i32 %gpio, i32 %value) #0 !dbg !17227 {
entry:
  %gpio.addr = alloca i32, align 4
  %value.addr = alloca i32, align 4
  store i32 %gpio, i32* %gpio.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gpio.addr, metadata !17230, metadata !DIExpression()), !dbg !17231
  store i32 %value, i32* %value.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %value.addr, metadata !17232, metadata !DIExpression()), !dbg !17233
  %0 = load i32, i32* %gpio.addr, align 4, !dbg !17234
  %call = call %struct.gpio_desc* @gpio_to_desc(i32 %0) #11, !dbg !17235
  %1 = load i32, i32* %value.addr, align 4, !dbg !17236
  call void @gpiod_set_raw_value_cansleep(%struct.gpio_desc* %call, i32 %1) #11, !dbg !17237
  ret void, !dbg !17238
}

; Function Attrs: noredzone
declare dso_local void @gpiod_set_raw_value_cansleep(%struct.gpio_desc*, i32) #2

; Function Attrs: noredzone
declare dso_local %struct.gpio_desc* @gpio_to_desc(i32) #2

; Function Attrs: noredzone
declare dso_local i64 @ktime_get_mono_fast_ns() #2

; Function Attrs: noredzone
declare dso_local i32 @__pm_runtime_suspend(%struct.device*, i32) #2

; Function Attrs: noredzone
declare dso_local void @sched_set_fifo(%struct.task_struct*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @_spi_xfer_word_delay_update(%struct.spi_transfer* %xfer, %struct.spi_device* %spi) #0 !dbg !17239 {
entry:
  %retval = alloca i32, align 4
  %xfer.addr = alloca %struct.spi_transfer*, align 8
  %spi.addr = alloca %struct.spi_device*, align 8
  %delay1 = alloca i32, align 4
  %delay2 = alloca i32, align 4
  store %struct.spi_transfer* %xfer, %struct.spi_transfer** %xfer.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_transfer** %xfer.addr, metadata !17242, metadata !DIExpression()), !dbg !17243
  store %struct.spi_device* %spi, %struct.spi_device** %spi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi.addr, metadata !17244, metadata !DIExpression()), !dbg !17245
  call void @llvm.dbg.declare(metadata i32* %delay1, metadata !17246, metadata !DIExpression()), !dbg !17247
  call void @llvm.dbg.declare(metadata i32* %delay2, metadata !17248, metadata !DIExpression()), !dbg !17249
  %0 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !17250
  %word_delay = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %0, i32 0, i32 12, !dbg !17251
  %1 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !17252
  %call = call i32 @spi_delay_to_ns(%struct.spi_delay* %word_delay, %struct.spi_transfer* %1) #11, !dbg !17253
  store i32 %call, i32* %delay1, align 4, !dbg !17254
  %2 = load i32, i32* %delay1, align 4, !dbg !17255
  %cmp = icmp slt i32 %2, 0, !dbg !17257
  br i1 %cmp, label %if.then, label %if.end, !dbg !17258

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %delay1, align 4, !dbg !17259
  store i32 %3, i32* %retval, align 4, !dbg !17260
  br label %return, !dbg !17260

if.end:                                           ; preds = %entry
  %4 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !17261
  %word_delay1 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %4, i32 0, i32 15, !dbg !17262
  %5 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !17263
  %call2 = call i32 @spi_delay_to_ns(%struct.spi_delay* %word_delay1, %struct.spi_transfer* %5) #11, !dbg !17264
  store i32 %call2, i32* %delay2, align 4, !dbg !17265
  %6 = load i32, i32* %delay2, align 4, !dbg !17266
  %cmp3 = icmp slt i32 %6, 0, !dbg !17268
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !17269

if.then4:                                         ; preds = %if.end
  %7 = load i32, i32* %delay2, align 4, !dbg !17270
  store i32 %7, i32* %retval, align 4, !dbg !17271
  br label %return, !dbg !17271

if.end5:                                          ; preds = %if.end
  %8 = load i32, i32* %delay1, align 4, !dbg !17272
  %9 = load i32, i32* %delay2, align 4, !dbg !17274
  %cmp6 = icmp slt i32 %8, %9, !dbg !17275
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !17276

if.then7:                                         ; preds = %if.end5
  %10 = load %struct.spi_transfer*, %struct.spi_transfer** %xfer.addr, align 8, !dbg !17277
  %word_delay8 = getelementptr inbounds %struct.spi_transfer, %struct.spi_transfer* %10, i32 0, i32 12, !dbg !17278
  %11 = bitcast %struct.spi_delay* %word_delay8 to i8*, !dbg !17279
  %12 = load %struct.spi_device*, %struct.spi_device** %spi.addr, align 8, !dbg !17280
  %word_delay9 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %12, i32 0, i32 15, !dbg !17281
  %13 = bitcast %struct.spi_delay* %word_delay9 to i8*, !dbg !17279
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %11, i8* align 8 %13, i64 4, i1 false), !dbg !17279
  br label %if.end10, !dbg !17279

if.end10:                                         ; preds = %if.then7, %if.end5
  store i32 0, i32* %retval, align 4, !dbg !17282
  br label %return, !dbg !17282

return:                                           ; preds = %if.end10, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !17283
  ret i32 %14, !dbg !17283
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @trace_spi_message_submit(%struct.spi_message* %msg) #0 !dbg !17284 {
entry:
  %msg.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_message* %msg, %struct.spi_message** %msg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %msg.addr, metadata !17285, metadata !DIExpression()), !dbg !17286
  ret void, !dbg !17286
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_complete(i8* %arg) #0 !dbg !17287 {
entry:
  %arg.addr = alloca i8*, align 8
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17288, metadata !DIExpression()), !dbg !17289
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !17290
  %1 = bitcast i8* %0 to %struct.completion*, !dbg !17290
  call void @complete(%struct.completion* %1) #11, !dbg !17291
  ret void, !dbg !17292
}

; Function Attrs: noredzone
declare dso_local void @wait_for_completion(%struct.completion*) #2

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @get_order(i64 %size) #10 !dbg !17293 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !17297, metadata !DIExpression()), !dbg !17301
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !17303, metadata !DIExpression()), !dbg !17304
  %retval = alloca i32, align 4
  %size.addr = alloca i64, align 8
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !17305, metadata !DIExpression()), !dbg !17306
  %0 = load i64, i64* %size.addr, align 8, !dbg !17307
  %1 = call i1 @llvm.is.constant.i64(i64 %0), !dbg !17309
  br i1 %1, label %if.then, label %if.end447, !dbg !17310

if.then:                                          ; preds = %entry
  %2 = load i64, i64* %size.addr, align 8, !dbg !17311
  %tobool = icmp ne i64 %2, 0, !dbg !17311
  br i1 %tobool, label %if.end, label %if.then1, !dbg !17314

if.then1:                                         ; preds = %if.then
  store i32 52, i32* %retval, align 4, !dbg !17315
  br label %return, !dbg !17315

if.end:                                           ; preds = %if.then
  %3 = load i64, i64* %size.addr, align 8, !dbg !17316
  %cmp = icmp ult i64 %3, 4096, !dbg !17318
  br i1 %cmp, label %if.then2, label %if.end3, !dbg !17319

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !17320
  br label %return, !dbg !17320

if.end3:                                          ; preds = %if.end
  %4 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub = sub i64 %4, 1, !dbg !17321
  %5 = call i1 @llvm.is.constant.i64(i64 %sub), !dbg !17321
  br i1 %5, label %cond.true, label %cond.false442, !dbg !17321

cond.true:                                        ; preds = %if.end3
  %6 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub4 = sub i64 %6, 1, !dbg !17321
  %7 = call i1 @llvm.is.constant.i64(i64 %sub4), !dbg !17321
  br i1 %7, label %cond.true5, label %cond.false439, !dbg !17321

cond.true5:                                       ; preds = %cond.true
  %8 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub6 = sub i64 %8, 1, !dbg !17321
  %cmp7 = icmp ult i64 %sub6, 2, !dbg !17321
  br i1 %cmp7, label %cond.true8, label %cond.false, !dbg !17321

cond.true8:                                       ; preds = %cond.true5
  br label %cond.end437, !dbg !17321

cond.false:                                       ; preds = %cond.true5
  %9 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub9 = sub i64 %9, 1, !dbg !17321
  %and = and i64 %sub9, -9223372036854775808, !dbg !17321
  %tobool10 = icmp ne i64 %and, 0, !dbg !17321
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !17321

cond.true11:                                      ; preds = %cond.false
  br label %cond.end435, !dbg !17321

cond.false12:                                     ; preds = %cond.false
  %10 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub13 = sub i64 %10, 1, !dbg !17321
  %and14 = and i64 %sub13, 4611686018427387904, !dbg !17321
  %tobool15 = icmp ne i64 %and14, 0, !dbg !17321
  br i1 %tobool15, label %cond.true16, label %cond.false17, !dbg !17321

cond.true16:                                      ; preds = %cond.false12
  br label %cond.end433, !dbg !17321

cond.false17:                                     ; preds = %cond.false12
  %11 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub18 = sub i64 %11, 1, !dbg !17321
  %and19 = and i64 %sub18, 2305843009213693952, !dbg !17321
  %tobool20 = icmp ne i64 %and19, 0, !dbg !17321
  br i1 %tobool20, label %cond.true21, label %cond.false22, !dbg !17321

cond.true21:                                      ; preds = %cond.false17
  br label %cond.end431, !dbg !17321

cond.false22:                                     ; preds = %cond.false17
  %12 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub23 = sub i64 %12, 1, !dbg !17321
  %and24 = and i64 %sub23, 1152921504606846976, !dbg !17321
  %tobool25 = icmp ne i64 %and24, 0, !dbg !17321
  br i1 %tobool25, label %cond.true26, label %cond.false27, !dbg !17321

cond.true26:                                      ; preds = %cond.false22
  br label %cond.end429, !dbg !17321

cond.false27:                                     ; preds = %cond.false22
  %13 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub28 = sub i64 %13, 1, !dbg !17321
  %and29 = and i64 %sub28, 576460752303423488, !dbg !17321
  %tobool30 = icmp ne i64 %and29, 0, !dbg !17321
  br i1 %tobool30, label %cond.true31, label %cond.false32, !dbg !17321

cond.true31:                                      ; preds = %cond.false27
  br label %cond.end427, !dbg !17321

cond.false32:                                     ; preds = %cond.false27
  %14 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub33 = sub i64 %14, 1, !dbg !17321
  %and34 = and i64 %sub33, 288230376151711744, !dbg !17321
  %tobool35 = icmp ne i64 %and34, 0, !dbg !17321
  br i1 %tobool35, label %cond.true36, label %cond.false37, !dbg !17321

cond.true36:                                      ; preds = %cond.false32
  br label %cond.end425, !dbg !17321

cond.false37:                                     ; preds = %cond.false32
  %15 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub38 = sub i64 %15, 1, !dbg !17321
  %and39 = and i64 %sub38, 144115188075855872, !dbg !17321
  %tobool40 = icmp ne i64 %and39, 0, !dbg !17321
  br i1 %tobool40, label %cond.true41, label %cond.false42, !dbg !17321

cond.true41:                                      ; preds = %cond.false37
  br label %cond.end423, !dbg !17321

cond.false42:                                     ; preds = %cond.false37
  %16 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub43 = sub i64 %16, 1, !dbg !17321
  %and44 = and i64 %sub43, 72057594037927936, !dbg !17321
  %tobool45 = icmp ne i64 %and44, 0, !dbg !17321
  br i1 %tobool45, label %cond.true46, label %cond.false47, !dbg !17321

cond.true46:                                      ; preds = %cond.false42
  br label %cond.end421, !dbg !17321

cond.false47:                                     ; preds = %cond.false42
  %17 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub48 = sub i64 %17, 1, !dbg !17321
  %and49 = and i64 %sub48, 36028797018963968, !dbg !17321
  %tobool50 = icmp ne i64 %and49, 0, !dbg !17321
  br i1 %tobool50, label %cond.true51, label %cond.false52, !dbg !17321

cond.true51:                                      ; preds = %cond.false47
  br label %cond.end419, !dbg !17321

cond.false52:                                     ; preds = %cond.false47
  %18 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub53 = sub i64 %18, 1, !dbg !17321
  %and54 = and i64 %sub53, 18014398509481984, !dbg !17321
  %tobool55 = icmp ne i64 %and54, 0, !dbg !17321
  br i1 %tobool55, label %cond.true56, label %cond.false57, !dbg !17321

cond.true56:                                      ; preds = %cond.false52
  br label %cond.end417, !dbg !17321

cond.false57:                                     ; preds = %cond.false52
  %19 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub58 = sub i64 %19, 1, !dbg !17321
  %and59 = and i64 %sub58, 9007199254740992, !dbg !17321
  %tobool60 = icmp ne i64 %and59, 0, !dbg !17321
  br i1 %tobool60, label %cond.true61, label %cond.false62, !dbg !17321

cond.true61:                                      ; preds = %cond.false57
  br label %cond.end415, !dbg !17321

cond.false62:                                     ; preds = %cond.false57
  %20 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub63 = sub i64 %20, 1, !dbg !17321
  %and64 = and i64 %sub63, 4503599627370496, !dbg !17321
  %tobool65 = icmp ne i64 %and64, 0, !dbg !17321
  br i1 %tobool65, label %cond.true66, label %cond.false67, !dbg !17321

cond.true66:                                      ; preds = %cond.false62
  br label %cond.end413, !dbg !17321

cond.false67:                                     ; preds = %cond.false62
  %21 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub68 = sub i64 %21, 1, !dbg !17321
  %and69 = and i64 %sub68, 2251799813685248, !dbg !17321
  %tobool70 = icmp ne i64 %and69, 0, !dbg !17321
  br i1 %tobool70, label %cond.true71, label %cond.false72, !dbg !17321

cond.true71:                                      ; preds = %cond.false67
  br label %cond.end411, !dbg !17321

cond.false72:                                     ; preds = %cond.false67
  %22 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub73 = sub i64 %22, 1, !dbg !17321
  %and74 = and i64 %sub73, 1125899906842624, !dbg !17321
  %tobool75 = icmp ne i64 %and74, 0, !dbg !17321
  br i1 %tobool75, label %cond.true76, label %cond.false77, !dbg !17321

cond.true76:                                      ; preds = %cond.false72
  br label %cond.end409, !dbg !17321

cond.false77:                                     ; preds = %cond.false72
  %23 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub78 = sub i64 %23, 1, !dbg !17321
  %and79 = and i64 %sub78, 562949953421312, !dbg !17321
  %tobool80 = icmp ne i64 %and79, 0, !dbg !17321
  br i1 %tobool80, label %cond.true81, label %cond.false82, !dbg !17321

cond.true81:                                      ; preds = %cond.false77
  br label %cond.end407, !dbg !17321

cond.false82:                                     ; preds = %cond.false77
  %24 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub83 = sub i64 %24, 1, !dbg !17321
  %and84 = and i64 %sub83, 281474976710656, !dbg !17321
  %tobool85 = icmp ne i64 %and84, 0, !dbg !17321
  br i1 %tobool85, label %cond.true86, label %cond.false87, !dbg !17321

cond.true86:                                      ; preds = %cond.false82
  br label %cond.end405, !dbg !17321

cond.false87:                                     ; preds = %cond.false82
  %25 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub88 = sub i64 %25, 1, !dbg !17321
  %and89 = and i64 %sub88, 140737488355328, !dbg !17321
  %tobool90 = icmp ne i64 %and89, 0, !dbg !17321
  br i1 %tobool90, label %cond.true91, label %cond.false92, !dbg !17321

cond.true91:                                      ; preds = %cond.false87
  br label %cond.end403, !dbg !17321

cond.false92:                                     ; preds = %cond.false87
  %26 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub93 = sub i64 %26, 1, !dbg !17321
  %and94 = and i64 %sub93, 70368744177664, !dbg !17321
  %tobool95 = icmp ne i64 %and94, 0, !dbg !17321
  br i1 %tobool95, label %cond.true96, label %cond.false97, !dbg !17321

cond.true96:                                      ; preds = %cond.false92
  br label %cond.end401, !dbg !17321

cond.false97:                                     ; preds = %cond.false92
  %27 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub98 = sub i64 %27, 1, !dbg !17321
  %and99 = and i64 %sub98, 35184372088832, !dbg !17321
  %tobool100 = icmp ne i64 %and99, 0, !dbg !17321
  br i1 %tobool100, label %cond.true101, label %cond.false102, !dbg !17321

cond.true101:                                     ; preds = %cond.false97
  br label %cond.end399, !dbg !17321

cond.false102:                                    ; preds = %cond.false97
  %28 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub103 = sub i64 %28, 1, !dbg !17321
  %and104 = and i64 %sub103, 17592186044416, !dbg !17321
  %tobool105 = icmp ne i64 %and104, 0, !dbg !17321
  br i1 %tobool105, label %cond.true106, label %cond.false107, !dbg !17321

cond.true106:                                     ; preds = %cond.false102
  br label %cond.end397, !dbg !17321

cond.false107:                                    ; preds = %cond.false102
  %29 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub108 = sub i64 %29, 1, !dbg !17321
  %and109 = and i64 %sub108, 8796093022208, !dbg !17321
  %tobool110 = icmp ne i64 %and109, 0, !dbg !17321
  br i1 %tobool110, label %cond.true111, label %cond.false112, !dbg !17321

cond.true111:                                     ; preds = %cond.false107
  br label %cond.end395, !dbg !17321

cond.false112:                                    ; preds = %cond.false107
  %30 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub113 = sub i64 %30, 1, !dbg !17321
  %and114 = and i64 %sub113, 4398046511104, !dbg !17321
  %tobool115 = icmp ne i64 %and114, 0, !dbg !17321
  br i1 %tobool115, label %cond.true116, label %cond.false117, !dbg !17321

cond.true116:                                     ; preds = %cond.false112
  br label %cond.end393, !dbg !17321

cond.false117:                                    ; preds = %cond.false112
  %31 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub118 = sub i64 %31, 1, !dbg !17321
  %and119 = and i64 %sub118, 2199023255552, !dbg !17321
  %tobool120 = icmp ne i64 %and119, 0, !dbg !17321
  br i1 %tobool120, label %cond.true121, label %cond.false122, !dbg !17321

cond.true121:                                     ; preds = %cond.false117
  br label %cond.end391, !dbg !17321

cond.false122:                                    ; preds = %cond.false117
  %32 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub123 = sub i64 %32, 1, !dbg !17321
  %and124 = and i64 %sub123, 1099511627776, !dbg !17321
  %tobool125 = icmp ne i64 %and124, 0, !dbg !17321
  br i1 %tobool125, label %cond.true126, label %cond.false127, !dbg !17321

cond.true126:                                     ; preds = %cond.false122
  br label %cond.end389, !dbg !17321

cond.false127:                                    ; preds = %cond.false122
  %33 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub128 = sub i64 %33, 1, !dbg !17321
  %and129 = and i64 %sub128, 549755813888, !dbg !17321
  %tobool130 = icmp ne i64 %and129, 0, !dbg !17321
  br i1 %tobool130, label %cond.true131, label %cond.false132, !dbg !17321

cond.true131:                                     ; preds = %cond.false127
  br label %cond.end387, !dbg !17321

cond.false132:                                    ; preds = %cond.false127
  %34 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub133 = sub i64 %34, 1, !dbg !17321
  %and134 = and i64 %sub133, 274877906944, !dbg !17321
  %tobool135 = icmp ne i64 %and134, 0, !dbg !17321
  br i1 %tobool135, label %cond.true136, label %cond.false137, !dbg !17321

cond.true136:                                     ; preds = %cond.false132
  br label %cond.end385, !dbg !17321

cond.false137:                                    ; preds = %cond.false132
  %35 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub138 = sub i64 %35, 1, !dbg !17321
  %and139 = and i64 %sub138, 137438953472, !dbg !17321
  %tobool140 = icmp ne i64 %and139, 0, !dbg !17321
  br i1 %tobool140, label %cond.true141, label %cond.false142, !dbg !17321

cond.true141:                                     ; preds = %cond.false137
  br label %cond.end383, !dbg !17321

cond.false142:                                    ; preds = %cond.false137
  %36 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub143 = sub i64 %36, 1, !dbg !17321
  %and144 = and i64 %sub143, 68719476736, !dbg !17321
  %tobool145 = icmp ne i64 %and144, 0, !dbg !17321
  br i1 %tobool145, label %cond.true146, label %cond.false147, !dbg !17321

cond.true146:                                     ; preds = %cond.false142
  br label %cond.end381, !dbg !17321

cond.false147:                                    ; preds = %cond.false142
  %37 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub148 = sub i64 %37, 1, !dbg !17321
  %and149 = and i64 %sub148, 34359738368, !dbg !17321
  %tobool150 = icmp ne i64 %and149, 0, !dbg !17321
  br i1 %tobool150, label %cond.true151, label %cond.false152, !dbg !17321

cond.true151:                                     ; preds = %cond.false147
  br label %cond.end379, !dbg !17321

cond.false152:                                    ; preds = %cond.false147
  %38 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub153 = sub i64 %38, 1, !dbg !17321
  %and154 = and i64 %sub153, 17179869184, !dbg !17321
  %tobool155 = icmp ne i64 %and154, 0, !dbg !17321
  br i1 %tobool155, label %cond.true156, label %cond.false157, !dbg !17321

cond.true156:                                     ; preds = %cond.false152
  br label %cond.end377, !dbg !17321

cond.false157:                                    ; preds = %cond.false152
  %39 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub158 = sub i64 %39, 1, !dbg !17321
  %and159 = and i64 %sub158, 8589934592, !dbg !17321
  %tobool160 = icmp ne i64 %and159, 0, !dbg !17321
  br i1 %tobool160, label %cond.true161, label %cond.false162, !dbg !17321

cond.true161:                                     ; preds = %cond.false157
  br label %cond.end375, !dbg !17321

cond.false162:                                    ; preds = %cond.false157
  %40 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub163 = sub i64 %40, 1, !dbg !17321
  %and164 = and i64 %sub163, 4294967296, !dbg !17321
  %tobool165 = icmp ne i64 %and164, 0, !dbg !17321
  br i1 %tobool165, label %cond.true166, label %cond.false167, !dbg !17321

cond.true166:                                     ; preds = %cond.false162
  br label %cond.end373, !dbg !17321

cond.false167:                                    ; preds = %cond.false162
  %41 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub168 = sub i64 %41, 1, !dbg !17321
  %and169 = and i64 %sub168, 2147483648, !dbg !17321
  %tobool170 = icmp ne i64 %and169, 0, !dbg !17321
  br i1 %tobool170, label %cond.true171, label %cond.false172, !dbg !17321

cond.true171:                                     ; preds = %cond.false167
  br label %cond.end371, !dbg !17321

cond.false172:                                    ; preds = %cond.false167
  %42 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub173 = sub i64 %42, 1, !dbg !17321
  %and174 = and i64 %sub173, 1073741824, !dbg !17321
  %tobool175 = icmp ne i64 %and174, 0, !dbg !17321
  br i1 %tobool175, label %cond.true176, label %cond.false177, !dbg !17321

cond.true176:                                     ; preds = %cond.false172
  br label %cond.end369, !dbg !17321

cond.false177:                                    ; preds = %cond.false172
  %43 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub178 = sub i64 %43, 1, !dbg !17321
  %and179 = and i64 %sub178, 536870912, !dbg !17321
  %tobool180 = icmp ne i64 %and179, 0, !dbg !17321
  br i1 %tobool180, label %cond.true181, label %cond.false182, !dbg !17321

cond.true181:                                     ; preds = %cond.false177
  br label %cond.end367, !dbg !17321

cond.false182:                                    ; preds = %cond.false177
  %44 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub183 = sub i64 %44, 1, !dbg !17321
  %and184 = and i64 %sub183, 268435456, !dbg !17321
  %tobool185 = icmp ne i64 %and184, 0, !dbg !17321
  br i1 %tobool185, label %cond.true186, label %cond.false187, !dbg !17321

cond.true186:                                     ; preds = %cond.false182
  br label %cond.end365, !dbg !17321

cond.false187:                                    ; preds = %cond.false182
  %45 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub188 = sub i64 %45, 1, !dbg !17321
  %and189 = and i64 %sub188, 134217728, !dbg !17321
  %tobool190 = icmp ne i64 %and189, 0, !dbg !17321
  br i1 %tobool190, label %cond.true191, label %cond.false192, !dbg !17321

cond.true191:                                     ; preds = %cond.false187
  br label %cond.end363, !dbg !17321

cond.false192:                                    ; preds = %cond.false187
  %46 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub193 = sub i64 %46, 1, !dbg !17321
  %and194 = and i64 %sub193, 67108864, !dbg !17321
  %tobool195 = icmp ne i64 %and194, 0, !dbg !17321
  br i1 %tobool195, label %cond.true196, label %cond.false197, !dbg !17321

cond.true196:                                     ; preds = %cond.false192
  br label %cond.end361, !dbg !17321

cond.false197:                                    ; preds = %cond.false192
  %47 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub198 = sub i64 %47, 1, !dbg !17321
  %and199 = and i64 %sub198, 33554432, !dbg !17321
  %tobool200 = icmp ne i64 %and199, 0, !dbg !17321
  br i1 %tobool200, label %cond.true201, label %cond.false202, !dbg !17321

cond.true201:                                     ; preds = %cond.false197
  br label %cond.end359, !dbg !17321

cond.false202:                                    ; preds = %cond.false197
  %48 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub203 = sub i64 %48, 1, !dbg !17321
  %and204 = and i64 %sub203, 16777216, !dbg !17321
  %tobool205 = icmp ne i64 %and204, 0, !dbg !17321
  br i1 %tobool205, label %cond.true206, label %cond.false207, !dbg !17321

cond.true206:                                     ; preds = %cond.false202
  br label %cond.end357, !dbg !17321

cond.false207:                                    ; preds = %cond.false202
  %49 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub208 = sub i64 %49, 1, !dbg !17321
  %and209 = and i64 %sub208, 8388608, !dbg !17321
  %tobool210 = icmp ne i64 %and209, 0, !dbg !17321
  br i1 %tobool210, label %cond.true211, label %cond.false212, !dbg !17321

cond.true211:                                     ; preds = %cond.false207
  br label %cond.end355, !dbg !17321

cond.false212:                                    ; preds = %cond.false207
  %50 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub213 = sub i64 %50, 1, !dbg !17321
  %and214 = and i64 %sub213, 4194304, !dbg !17321
  %tobool215 = icmp ne i64 %and214, 0, !dbg !17321
  br i1 %tobool215, label %cond.true216, label %cond.false217, !dbg !17321

cond.true216:                                     ; preds = %cond.false212
  br label %cond.end353, !dbg !17321

cond.false217:                                    ; preds = %cond.false212
  %51 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub218 = sub i64 %51, 1, !dbg !17321
  %and219 = and i64 %sub218, 2097152, !dbg !17321
  %tobool220 = icmp ne i64 %and219, 0, !dbg !17321
  br i1 %tobool220, label %cond.true221, label %cond.false222, !dbg !17321

cond.true221:                                     ; preds = %cond.false217
  br label %cond.end351, !dbg !17321

cond.false222:                                    ; preds = %cond.false217
  %52 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub223 = sub i64 %52, 1, !dbg !17321
  %and224 = and i64 %sub223, 1048576, !dbg !17321
  %tobool225 = icmp ne i64 %and224, 0, !dbg !17321
  br i1 %tobool225, label %cond.true226, label %cond.false227, !dbg !17321

cond.true226:                                     ; preds = %cond.false222
  br label %cond.end349, !dbg !17321

cond.false227:                                    ; preds = %cond.false222
  %53 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub228 = sub i64 %53, 1, !dbg !17321
  %and229 = and i64 %sub228, 524288, !dbg !17321
  %tobool230 = icmp ne i64 %and229, 0, !dbg !17321
  br i1 %tobool230, label %cond.true231, label %cond.false232, !dbg !17321

cond.true231:                                     ; preds = %cond.false227
  br label %cond.end347, !dbg !17321

cond.false232:                                    ; preds = %cond.false227
  %54 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub233 = sub i64 %54, 1, !dbg !17321
  %and234 = and i64 %sub233, 262144, !dbg !17321
  %tobool235 = icmp ne i64 %and234, 0, !dbg !17321
  br i1 %tobool235, label %cond.true236, label %cond.false237, !dbg !17321

cond.true236:                                     ; preds = %cond.false232
  br label %cond.end345, !dbg !17321

cond.false237:                                    ; preds = %cond.false232
  %55 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub238 = sub i64 %55, 1, !dbg !17321
  %and239 = and i64 %sub238, 131072, !dbg !17321
  %tobool240 = icmp ne i64 %and239, 0, !dbg !17321
  br i1 %tobool240, label %cond.true241, label %cond.false242, !dbg !17321

cond.true241:                                     ; preds = %cond.false237
  br label %cond.end343, !dbg !17321

cond.false242:                                    ; preds = %cond.false237
  %56 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub243 = sub i64 %56, 1, !dbg !17321
  %and244 = and i64 %sub243, 65536, !dbg !17321
  %tobool245 = icmp ne i64 %and244, 0, !dbg !17321
  br i1 %tobool245, label %cond.true246, label %cond.false247, !dbg !17321

cond.true246:                                     ; preds = %cond.false242
  br label %cond.end341, !dbg !17321

cond.false247:                                    ; preds = %cond.false242
  %57 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub248 = sub i64 %57, 1, !dbg !17321
  %and249 = and i64 %sub248, 32768, !dbg !17321
  %tobool250 = icmp ne i64 %and249, 0, !dbg !17321
  br i1 %tobool250, label %cond.true251, label %cond.false252, !dbg !17321

cond.true251:                                     ; preds = %cond.false247
  br label %cond.end339, !dbg !17321

cond.false252:                                    ; preds = %cond.false247
  %58 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub253 = sub i64 %58, 1, !dbg !17321
  %and254 = and i64 %sub253, 16384, !dbg !17321
  %tobool255 = icmp ne i64 %and254, 0, !dbg !17321
  br i1 %tobool255, label %cond.true256, label %cond.false257, !dbg !17321

cond.true256:                                     ; preds = %cond.false252
  br label %cond.end337, !dbg !17321

cond.false257:                                    ; preds = %cond.false252
  %59 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub258 = sub i64 %59, 1, !dbg !17321
  %and259 = and i64 %sub258, 8192, !dbg !17321
  %tobool260 = icmp ne i64 %and259, 0, !dbg !17321
  br i1 %tobool260, label %cond.true261, label %cond.false262, !dbg !17321

cond.true261:                                     ; preds = %cond.false257
  br label %cond.end335, !dbg !17321

cond.false262:                                    ; preds = %cond.false257
  %60 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub263 = sub i64 %60, 1, !dbg !17321
  %and264 = and i64 %sub263, 4096, !dbg !17321
  %tobool265 = icmp ne i64 %and264, 0, !dbg !17321
  br i1 %tobool265, label %cond.true266, label %cond.false267, !dbg !17321

cond.true266:                                     ; preds = %cond.false262
  br label %cond.end333, !dbg !17321

cond.false267:                                    ; preds = %cond.false262
  %61 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub268 = sub i64 %61, 1, !dbg !17321
  %and269 = and i64 %sub268, 2048, !dbg !17321
  %tobool270 = icmp ne i64 %and269, 0, !dbg !17321
  br i1 %tobool270, label %cond.true271, label %cond.false272, !dbg !17321

cond.true271:                                     ; preds = %cond.false267
  br label %cond.end331, !dbg !17321

cond.false272:                                    ; preds = %cond.false267
  %62 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub273 = sub i64 %62, 1, !dbg !17321
  %and274 = and i64 %sub273, 1024, !dbg !17321
  %tobool275 = icmp ne i64 %and274, 0, !dbg !17321
  br i1 %tobool275, label %cond.true276, label %cond.false277, !dbg !17321

cond.true276:                                     ; preds = %cond.false272
  br label %cond.end329, !dbg !17321

cond.false277:                                    ; preds = %cond.false272
  %63 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub278 = sub i64 %63, 1, !dbg !17321
  %and279 = and i64 %sub278, 512, !dbg !17321
  %tobool280 = icmp ne i64 %and279, 0, !dbg !17321
  br i1 %tobool280, label %cond.true281, label %cond.false282, !dbg !17321

cond.true281:                                     ; preds = %cond.false277
  br label %cond.end327, !dbg !17321

cond.false282:                                    ; preds = %cond.false277
  %64 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub283 = sub i64 %64, 1, !dbg !17321
  %and284 = and i64 %sub283, 256, !dbg !17321
  %tobool285 = icmp ne i64 %and284, 0, !dbg !17321
  br i1 %tobool285, label %cond.true286, label %cond.false287, !dbg !17321

cond.true286:                                     ; preds = %cond.false282
  br label %cond.end325, !dbg !17321

cond.false287:                                    ; preds = %cond.false282
  %65 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub288 = sub i64 %65, 1, !dbg !17321
  %and289 = and i64 %sub288, 128, !dbg !17321
  %tobool290 = icmp ne i64 %and289, 0, !dbg !17321
  br i1 %tobool290, label %cond.true291, label %cond.false292, !dbg !17321

cond.true291:                                     ; preds = %cond.false287
  br label %cond.end323, !dbg !17321

cond.false292:                                    ; preds = %cond.false287
  %66 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub293 = sub i64 %66, 1, !dbg !17321
  %and294 = and i64 %sub293, 64, !dbg !17321
  %tobool295 = icmp ne i64 %and294, 0, !dbg !17321
  br i1 %tobool295, label %cond.true296, label %cond.false297, !dbg !17321

cond.true296:                                     ; preds = %cond.false292
  br label %cond.end321, !dbg !17321

cond.false297:                                    ; preds = %cond.false292
  %67 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub298 = sub i64 %67, 1, !dbg !17321
  %and299 = and i64 %sub298, 32, !dbg !17321
  %tobool300 = icmp ne i64 %and299, 0, !dbg !17321
  br i1 %tobool300, label %cond.true301, label %cond.false302, !dbg !17321

cond.true301:                                     ; preds = %cond.false297
  br label %cond.end319, !dbg !17321

cond.false302:                                    ; preds = %cond.false297
  %68 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub303 = sub i64 %68, 1, !dbg !17321
  %and304 = and i64 %sub303, 16, !dbg !17321
  %tobool305 = icmp ne i64 %and304, 0, !dbg !17321
  br i1 %tobool305, label %cond.true306, label %cond.false307, !dbg !17321

cond.true306:                                     ; preds = %cond.false302
  br label %cond.end317, !dbg !17321

cond.false307:                                    ; preds = %cond.false302
  %69 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub308 = sub i64 %69, 1, !dbg !17321
  %and309 = and i64 %sub308, 8, !dbg !17321
  %tobool310 = icmp ne i64 %and309, 0, !dbg !17321
  br i1 %tobool310, label %cond.true311, label %cond.false312, !dbg !17321

cond.true311:                                     ; preds = %cond.false307
  br label %cond.end, !dbg !17321

cond.false312:                                    ; preds = %cond.false307
  %70 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub313 = sub i64 %70, 1, !dbg !17321
  %and314 = and i64 %sub313, 4, !dbg !17321
  %tobool315 = icmp ne i64 %and314, 0, !dbg !17321
  %71 = zext i1 %tobool315 to i64, !dbg !17321
  %cond = select i1 %tobool315, i32 2, i32 1, !dbg !17321
  br label %cond.end, !dbg !17321

cond.end:                                         ; preds = %cond.false312, %cond.true311
  %cond316 = phi i32 [ 3, %cond.true311 ], [ %cond, %cond.false312 ], !dbg !17321
  br label %cond.end317, !dbg !17321

cond.end317:                                      ; preds = %cond.end, %cond.true306
  %cond318 = phi i32 [ 4, %cond.true306 ], [ %cond316, %cond.end ], !dbg !17321
  br label %cond.end319, !dbg !17321

cond.end319:                                      ; preds = %cond.end317, %cond.true301
  %cond320 = phi i32 [ 5, %cond.true301 ], [ %cond318, %cond.end317 ], !dbg !17321
  br label %cond.end321, !dbg !17321

cond.end321:                                      ; preds = %cond.end319, %cond.true296
  %cond322 = phi i32 [ 6, %cond.true296 ], [ %cond320, %cond.end319 ], !dbg !17321
  br label %cond.end323, !dbg !17321

cond.end323:                                      ; preds = %cond.end321, %cond.true291
  %cond324 = phi i32 [ 7, %cond.true291 ], [ %cond322, %cond.end321 ], !dbg !17321
  br label %cond.end325, !dbg !17321

cond.end325:                                      ; preds = %cond.end323, %cond.true286
  %cond326 = phi i32 [ 8, %cond.true286 ], [ %cond324, %cond.end323 ], !dbg !17321
  br label %cond.end327, !dbg !17321

cond.end327:                                      ; preds = %cond.end325, %cond.true281
  %cond328 = phi i32 [ 9, %cond.true281 ], [ %cond326, %cond.end325 ], !dbg !17321
  br label %cond.end329, !dbg !17321

cond.end329:                                      ; preds = %cond.end327, %cond.true276
  %cond330 = phi i32 [ 10, %cond.true276 ], [ %cond328, %cond.end327 ], !dbg !17321
  br label %cond.end331, !dbg !17321

cond.end331:                                      ; preds = %cond.end329, %cond.true271
  %cond332 = phi i32 [ 11, %cond.true271 ], [ %cond330, %cond.end329 ], !dbg !17321
  br label %cond.end333, !dbg !17321

cond.end333:                                      ; preds = %cond.end331, %cond.true266
  %cond334 = phi i32 [ 12, %cond.true266 ], [ %cond332, %cond.end331 ], !dbg !17321
  br label %cond.end335, !dbg !17321

cond.end335:                                      ; preds = %cond.end333, %cond.true261
  %cond336 = phi i32 [ 13, %cond.true261 ], [ %cond334, %cond.end333 ], !dbg !17321
  br label %cond.end337, !dbg !17321

cond.end337:                                      ; preds = %cond.end335, %cond.true256
  %cond338 = phi i32 [ 14, %cond.true256 ], [ %cond336, %cond.end335 ], !dbg !17321
  br label %cond.end339, !dbg !17321

cond.end339:                                      ; preds = %cond.end337, %cond.true251
  %cond340 = phi i32 [ 15, %cond.true251 ], [ %cond338, %cond.end337 ], !dbg !17321
  br label %cond.end341, !dbg !17321

cond.end341:                                      ; preds = %cond.end339, %cond.true246
  %cond342 = phi i32 [ 16, %cond.true246 ], [ %cond340, %cond.end339 ], !dbg !17321
  br label %cond.end343, !dbg !17321

cond.end343:                                      ; preds = %cond.end341, %cond.true241
  %cond344 = phi i32 [ 17, %cond.true241 ], [ %cond342, %cond.end341 ], !dbg !17321
  br label %cond.end345, !dbg !17321

cond.end345:                                      ; preds = %cond.end343, %cond.true236
  %cond346 = phi i32 [ 18, %cond.true236 ], [ %cond344, %cond.end343 ], !dbg !17321
  br label %cond.end347, !dbg !17321

cond.end347:                                      ; preds = %cond.end345, %cond.true231
  %cond348 = phi i32 [ 19, %cond.true231 ], [ %cond346, %cond.end345 ], !dbg !17321
  br label %cond.end349, !dbg !17321

cond.end349:                                      ; preds = %cond.end347, %cond.true226
  %cond350 = phi i32 [ 20, %cond.true226 ], [ %cond348, %cond.end347 ], !dbg !17321
  br label %cond.end351, !dbg !17321

cond.end351:                                      ; preds = %cond.end349, %cond.true221
  %cond352 = phi i32 [ 21, %cond.true221 ], [ %cond350, %cond.end349 ], !dbg !17321
  br label %cond.end353, !dbg !17321

cond.end353:                                      ; preds = %cond.end351, %cond.true216
  %cond354 = phi i32 [ 22, %cond.true216 ], [ %cond352, %cond.end351 ], !dbg !17321
  br label %cond.end355, !dbg !17321

cond.end355:                                      ; preds = %cond.end353, %cond.true211
  %cond356 = phi i32 [ 23, %cond.true211 ], [ %cond354, %cond.end353 ], !dbg !17321
  br label %cond.end357, !dbg !17321

cond.end357:                                      ; preds = %cond.end355, %cond.true206
  %cond358 = phi i32 [ 24, %cond.true206 ], [ %cond356, %cond.end355 ], !dbg !17321
  br label %cond.end359, !dbg !17321

cond.end359:                                      ; preds = %cond.end357, %cond.true201
  %cond360 = phi i32 [ 25, %cond.true201 ], [ %cond358, %cond.end357 ], !dbg !17321
  br label %cond.end361, !dbg !17321

cond.end361:                                      ; preds = %cond.end359, %cond.true196
  %cond362 = phi i32 [ 26, %cond.true196 ], [ %cond360, %cond.end359 ], !dbg !17321
  br label %cond.end363, !dbg !17321

cond.end363:                                      ; preds = %cond.end361, %cond.true191
  %cond364 = phi i32 [ 27, %cond.true191 ], [ %cond362, %cond.end361 ], !dbg !17321
  br label %cond.end365, !dbg !17321

cond.end365:                                      ; preds = %cond.end363, %cond.true186
  %cond366 = phi i32 [ 28, %cond.true186 ], [ %cond364, %cond.end363 ], !dbg !17321
  br label %cond.end367, !dbg !17321

cond.end367:                                      ; preds = %cond.end365, %cond.true181
  %cond368 = phi i32 [ 29, %cond.true181 ], [ %cond366, %cond.end365 ], !dbg !17321
  br label %cond.end369, !dbg !17321

cond.end369:                                      ; preds = %cond.end367, %cond.true176
  %cond370 = phi i32 [ 30, %cond.true176 ], [ %cond368, %cond.end367 ], !dbg !17321
  br label %cond.end371, !dbg !17321

cond.end371:                                      ; preds = %cond.end369, %cond.true171
  %cond372 = phi i32 [ 31, %cond.true171 ], [ %cond370, %cond.end369 ], !dbg !17321
  br label %cond.end373, !dbg !17321

cond.end373:                                      ; preds = %cond.end371, %cond.true166
  %cond374 = phi i32 [ 32, %cond.true166 ], [ %cond372, %cond.end371 ], !dbg !17321
  br label %cond.end375, !dbg !17321

cond.end375:                                      ; preds = %cond.end373, %cond.true161
  %cond376 = phi i32 [ 33, %cond.true161 ], [ %cond374, %cond.end373 ], !dbg !17321
  br label %cond.end377, !dbg !17321

cond.end377:                                      ; preds = %cond.end375, %cond.true156
  %cond378 = phi i32 [ 34, %cond.true156 ], [ %cond376, %cond.end375 ], !dbg !17321
  br label %cond.end379, !dbg !17321

cond.end379:                                      ; preds = %cond.end377, %cond.true151
  %cond380 = phi i32 [ 35, %cond.true151 ], [ %cond378, %cond.end377 ], !dbg !17321
  br label %cond.end381, !dbg !17321

cond.end381:                                      ; preds = %cond.end379, %cond.true146
  %cond382 = phi i32 [ 36, %cond.true146 ], [ %cond380, %cond.end379 ], !dbg !17321
  br label %cond.end383, !dbg !17321

cond.end383:                                      ; preds = %cond.end381, %cond.true141
  %cond384 = phi i32 [ 37, %cond.true141 ], [ %cond382, %cond.end381 ], !dbg !17321
  br label %cond.end385, !dbg !17321

cond.end385:                                      ; preds = %cond.end383, %cond.true136
  %cond386 = phi i32 [ 38, %cond.true136 ], [ %cond384, %cond.end383 ], !dbg !17321
  br label %cond.end387, !dbg !17321

cond.end387:                                      ; preds = %cond.end385, %cond.true131
  %cond388 = phi i32 [ 39, %cond.true131 ], [ %cond386, %cond.end385 ], !dbg !17321
  br label %cond.end389, !dbg !17321

cond.end389:                                      ; preds = %cond.end387, %cond.true126
  %cond390 = phi i32 [ 40, %cond.true126 ], [ %cond388, %cond.end387 ], !dbg !17321
  br label %cond.end391, !dbg !17321

cond.end391:                                      ; preds = %cond.end389, %cond.true121
  %cond392 = phi i32 [ 41, %cond.true121 ], [ %cond390, %cond.end389 ], !dbg !17321
  br label %cond.end393, !dbg !17321

cond.end393:                                      ; preds = %cond.end391, %cond.true116
  %cond394 = phi i32 [ 42, %cond.true116 ], [ %cond392, %cond.end391 ], !dbg !17321
  br label %cond.end395, !dbg !17321

cond.end395:                                      ; preds = %cond.end393, %cond.true111
  %cond396 = phi i32 [ 43, %cond.true111 ], [ %cond394, %cond.end393 ], !dbg !17321
  br label %cond.end397, !dbg !17321

cond.end397:                                      ; preds = %cond.end395, %cond.true106
  %cond398 = phi i32 [ 44, %cond.true106 ], [ %cond396, %cond.end395 ], !dbg !17321
  br label %cond.end399, !dbg !17321

cond.end399:                                      ; preds = %cond.end397, %cond.true101
  %cond400 = phi i32 [ 45, %cond.true101 ], [ %cond398, %cond.end397 ], !dbg !17321
  br label %cond.end401, !dbg !17321

cond.end401:                                      ; preds = %cond.end399, %cond.true96
  %cond402 = phi i32 [ 46, %cond.true96 ], [ %cond400, %cond.end399 ], !dbg !17321
  br label %cond.end403, !dbg !17321

cond.end403:                                      ; preds = %cond.end401, %cond.true91
  %cond404 = phi i32 [ 47, %cond.true91 ], [ %cond402, %cond.end401 ], !dbg !17321
  br label %cond.end405, !dbg !17321

cond.end405:                                      ; preds = %cond.end403, %cond.true86
  %cond406 = phi i32 [ 48, %cond.true86 ], [ %cond404, %cond.end403 ], !dbg !17321
  br label %cond.end407, !dbg !17321

cond.end407:                                      ; preds = %cond.end405, %cond.true81
  %cond408 = phi i32 [ 49, %cond.true81 ], [ %cond406, %cond.end405 ], !dbg !17321
  br label %cond.end409, !dbg !17321

cond.end409:                                      ; preds = %cond.end407, %cond.true76
  %cond410 = phi i32 [ 50, %cond.true76 ], [ %cond408, %cond.end407 ], !dbg !17321
  br label %cond.end411, !dbg !17321

cond.end411:                                      ; preds = %cond.end409, %cond.true71
  %cond412 = phi i32 [ 51, %cond.true71 ], [ %cond410, %cond.end409 ], !dbg !17321
  br label %cond.end413, !dbg !17321

cond.end413:                                      ; preds = %cond.end411, %cond.true66
  %cond414 = phi i32 [ 52, %cond.true66 ], [ %cond412, %cond.end411 ], !dbg !17321
  br label %cond.end415, !dbg !17321

cond.end415:                                      ; preds = %cond.end413, %cond.true61
  %cond416 = phi i32 [ 53, %cond.true61 ], [ %cond414, %cond.end413 ], !dbg !17321
  br label %cond.end417, !dbg !17321

cond.end417:                                      ; preds = %cond.end415, %cond.true56
  %cond418 = phi i32 [ 54, %cond.true56 ], [ %cond416, %cond.end415 ], !dbg !17321
  br label %cond.end419, !dbg !17321

cond.end419:                                      ; preds = %cond.end417, %cond.true51
  %cond420 = phi i32 [ 55, %cond.true51 ], [ %cond418, %cond.end417 ], !dbg !17321
  br label %cond.end421, !dbg !17321

cond.end421:                                      ; preds = %cond.end419, %cond.true46
  %cond422 = phi i32 [ 56, %cond.true46 ], [ %cond420, %cond.end419 ], !dbg !17321
  br label %cond.end423, !dbg !17321

cond.end423:                                      ; preds = %cond.end421, %cond.true41
  %cond424 = phi i32 [ 57, %cond.true41 ], [ %cond422, %cond.end421 ], !dbg !17321
  br label %cond.end425, !dbg !17321

cond.end425:                                      ; preds = %cond.end423, %cond.true36
  %cond426 = phi i32 [ 58, %cond.true36 ], [ %cond424, %cond.end423 ], !dbg !17321
  br label %cond.end427, !dbg !17321

cond.end427:                                      ; preds = %cond.end425, %cond.true31
  %cond428 = phi i32 [ 59, %cond.true31 ], [ %cond426, %cond.end425 ], !dbg !17321
  br label %cond.end429, !dbg !17321

cond.end429:                                      ; preds = %cond.end427, %cond.true26
  %cond430 = phi i32 [ 60, %cond.true26 ], [ %cond428, %cond.end427 ], !dbg !17321
  br label %cond.end431, !dbg !17321

cond.end431:                                      ; preds = %cond.end429, %cond.true21
  %cond432 = phi i32 [ 61, %cond.true21 ], [ %cond430, %cond.end429 ], !dbg !17321
  br label %cond.end433, !dbg !17321

cond.end433:                                      ; preds = %cond.end431, %cond.true16
  %cond434 = phi i32 [ 62, %cond.true16 ], [ %cond432, %cond.end431 ], !dbg !17321
  br label %cond.end435, !dbg !17321

cond.end435:                                      ; preds = %cond.end433, %cond.true11
  %cond436 = phi i32 [ 63, %cond.true11 ], [ %cond434, %cond.end433 ], !dbg !17321
  br label %cond.end437, !dbg !17321

cond.end437:                                      ; preds = %cond.end435, %cond.true8
  %cond438 = phi i32 [ 0, %cond.true8 ], [ %cond436, %cond.end435 ], !dbg !17321
  br label %cond.end440, !dbg !17321

cond.false439:                                    ; preds = %cond.true
  br label %cond.end440, !dbg !17321

cond.end440:                                      ; preds = %cond.false439, %cond.end437
  %cond441 = phi i32 [ %cond438, %cond.end437 ], [ -1, %cond.false439 ], !dbg !17321
  br label %cond.end444, !dbg !17321

cond.false442:                                    ; preds = %if.end3
  %72 = load i64, i64* %size.addr, align 8, !dbg !17321
  %sub443 = sub i64 %72, 1, !dbg !17321
  %call = call i32 @__ilog2_u64(i64 %sub443) #13, !dbg !17321
  br label %cond.end444, !dbg !17321

cond.end444:                                      ; preds = %cond.false442, %cond.end440
  %cond445 = phi i32 [ %cond441, %cond.end440 ], [ %call, %cond.false442 ], !dbg !17321
  %sub446 = sub i32 %cond445, 12, !dbg !17322
  %add = add i32 %sub446, 1, !dbg !17323
  store i32 %add, i32* %retval, align 4, !dbg !17324
  br label %return, !dbg !17324

if.end447:                                        ; preds = %entry
  %73 = load i64, i64* %size.addr, align 8, !dbg !17325
  %dec = add i64 %73, -1, !dbg !17325
  store i64 %dec, i64* %size.addr, align 8, !dbg !17325
  %74 = load i64, i64* %size.addr, align 8, !dbg !17326
  %shr = lshr i64 %74, 12, !dbg !17326
  store i64 %shr, i64* %size.addr, align 8, !dbg !17326
  %75 = load i64, i64* %size.addr, align 8, !dbg !17327
  store i64 %75, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !17304
  %76 = load i32, i32* %bitpos.i, align 4, !dbg !17328
  %77 = load i64, i64* %x.addr.i, align 8, !dbg !17329
  %78 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %77, i32 %76) #6, !dbg !17328, !srcloc !17330
  store i32 %78, i32* %bitpos.i, align 4, !dbg !17328
  %79 = load i32, i32* %bitpos.i, align 4, !dbg !17331
  %add.i = add i32 %79, 1, !dbg !17332
  store i32 %add.i, i32* %retval, align 4, !dbg !17333
  br label %return, !dbg !17333

return:                                           ; preds = %if.end447, %cond.end444, %if.then2, %if.then1
  %80 = load i32, i32* %retval, align 4, !dbg !17334
  ret i32 %80, !dbg !17334
}

; Function Attrs: noinline noredzone nounwind optnone readnone sspstrong
define internal i32 @__ilog2_u64(i64 %n) #10 !dbg !17335 {
entry:
  %x.addr.i = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr.i, metadata !17297, metadata !DIExpression()), !dbg !17339
  %bitpos.i = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %bitpos.i, metadata !17303, metadata !DIExpression()), !dbg !17341
  %n.addr = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !17342, metadata !DIExpression()), !dbg !17343
  %0 = load i64, i64* %n.addr, align 8, !dbg !17344
  store i64 %0, i64* %x.addr.i, align 8
  store i32 -1, i32* %bitpos.i, align 4, !dbg !17341
  %1 = load i32, i32* %bitpos.i, align 4, !dbg !17345
  %2 = load i64, i64* %x.addr.i, align 8, !dbg !17346
  %3 = call i32 asm "bsrq $1,${0:q}", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i64 %2, i32 %1) #6, !dbg !17345, !srcloc !17330
  store i32 %3, i32* %bitpos.i, align 4, !dbg !17345
  %4 = load i32, i32* %bitpos.i, align 4, !dbg !17347
  %add.i = add i32 %4, 1, !dbg !17348
  %sub = sub i32 %add.i, 1, !dbg !17349
  ret i32 %sub, !dbg !17350
}

; Function Attrs: noredzone
declare dso_local noalias i8* @kmalloc_order(i64, i32, i32) #2

; Function Attrs: noredzone
declare dso_local noalias i8* @kmem_cache_alloc(%struct.kmem_cache*, i32) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i8* @kasan_kmalloc(%struct.kmem_cache* %s, i8* %object, i64 %size, i32 %flags) #0 !dbg !17351 {
entry:
  %s.addr = alloca %struct.kmem_cache*, align 8
  %object.addr = alloca i8*, align 8
  %size.addr = alloca i64, align 8
  %flags.addr = alloca i32, align 4
  store %struct.kmem_cache* %s, %struct.kmem_cache** %s.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.kmem_cache** %s.addr, metadata !17355, metadata !DIExpression()), !dbg !17356
  store i8* %object, i8** %object.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %object.addr, metadata !17357, metadata !DIExpression()), !dbg !17358
  store i64 %size, i64* %size.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %size.addr, metadata !17359, metadata !DIExpression()), !dbg !17360
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !17361, metadata !DIExpression()), !dbg !17362
  %0 = load i8*, i8** %object.addr, align 8, !dbg !17363
  ret i8* %0, !dbg !17364
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal void @spi_message_init_no_memset(%struct.spi_message* %m) #0 !dbg !17365 {
entry:
  %m.addr = alloca %struct.spi_message*, align 8
  store %struct.spi_message* %m, %struct.spi_message** %m.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.spi_message** %m.addr, metadata !17366, metadata !DIExpression()), !dbg !17367
  %0 = load %struct.spi_message*, %struct.spi_message** %m.addr, align 8, !dbg !17368
  %transfers = getelementptr inbounds %struct.spi_message, %struct.spi_message* %0, i32 0, i32 0, !dbg !17369
  call void @INIT_LIST_HEAD(%struct.list_head* %transfers) #11, !dbg !17370
  %1 = load %struct.spi_message*, %struct.spi_message** %m.addr, align 8, !dbg !17371
  %resources = getelementptr inbounds %struct.spi_message, %struct.spi_message* %1, i32 0, i32 10, !dbg !17372
  call void @INIT_LIST_HEAD(%struct.list_head* %resources) #11, !dbg !17373
  ret void, !dbg !17374
}

; Function Attrs: noredzone
declare dso_local %struct.device* @bus_find_device(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #2

; Function Attrs: noredzone
declare dso_local i32 @device_match_of_node(%struct.device*, i8*) #2

; Function Attrs: noredzone
declare dso_local i32 @bus_register(%struct.bus_type*) #2

; Function Attrs: noredzone
declare dso_local i32 @__class_register(%struct.class*, %struct.lock_class_key*) #2

; Function Attrs: noredzone
declare dso_local i32 @acpi_reconfig_notifier_register(%struct.notifier_block*) #2

; Function Attrs: noredzone
declare dso_local void @class_unregister(%struct.class*) #2

; Function Attrs: noredzone
declare dso_local void @bus_unregister(%struct.bus_type*) #2

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @acpi_spi_notify(%struct.notifier_block* %nb, i64 %value, i8* %arg) #0 !dbg !17375 {
entry:
  %nb.addr = alloca %struct.notifier_block*, align 8
  %value.addr = alloca i64, align 8
  %arg.addr = alloca i8*, align 8
  %adev = alloca %struct.acpi_device*, align 8
  %ctlr = alloca %struct.spi_controller*, align 8
  %spi = alloca %struct.spi_device*, align 8
  store %struct.notifier_block* %nb, %struct.notifier_block** %nb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.notifier_block** %nb.addr, metadata !17376, metadata !DIExpression()), !dbg !17377
  store i64 %value, i64* %value.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %value.addr, metadata !17378, metadata !DIExpression()), !dbg !17379
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !17380, metadata !DIExpression()), !dbg !17381
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev, metadata !17382, metadata !DIExpression()), !dbg !17383
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !17384
  %1 = bitcast i8* %0 to %struct.acpi_device*, !dbg !17384
  store %struct.acpi_device* %1, %struct.acpi_device** %adev, align 8, !dbg !17383
  call void @llvm.dbg.declare(metadata %struct.spi_controller** %ctlr, metadata !17385, metadata !DIExpression()), !dbg !17386
  call void @llvm.dbg.declare(metadata %struct.spi_device** %spi, metadata !17387, metadata !DIExpression()), !dbg !17388
  %2 = load i64, i64* %value.addr, align 8, !dbg !17389
  switch i64 %2, label %sw.epilog [
    i64 0, label %sw.bb
    i64 1, label %sw.bb2
  ], !dbg !17390

sw.bb:                                            ; preds = %entry
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !17391
  %parent = getelementptr inbounds %struct.acpi_device, %struct.acpi_device* %3, i32 0, i32 3, !dbg !17393
  %4 = load %struct.acpi_device*, %struct.acpi_device** %parent, align 8, !dbg !17393
  %call = call %struct.spi_controller* @acpi_spi_find_controller_by_adev(%struct.acpi_device* %4) #11, !dbg !17394
  store %struct.spi_controller* %call, %struct.spi_controller** %ctlr, align 8, !dbg !17395
  %5 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !17396
  %tobool = icmp ne %struct.spi_controller* %5, null, !dbg !17396
  br i1 %tobool, label %if.end, label %if.then, !dbg !17398

if.then:                                          ; preds = %sw.bb
  br label %sw.epilog, !dbg !17399

if.end:                                           ; preds = %sw.bb
  %6 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !17400
  %7 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !17401
  %call1 = call i32 @acpi_register_spi_device(%struct.spi_controller* %6, %struct.acpi_device* %7) #11, !dbg !17402
  %8 = load %struct.spi_controller*, %struct.spi_controller** %ctlr, align 8, !dbg !17403
  %dev = getelementptr inbounds %struct.spi_controller, %struct.spi_controller* %8, i32 0, i32 0, !dbg !17404
  call void @put_device(%struct.device* %dev) #11, !dbg !17405
  br label %sw.epilog, !dbg !17406

sw.bb2:                                           ; preds = %entry
  %9 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !17407
  %call3 = call zeroext i1 @acpi_device_enumerated(%struct.acpi_device* %9) #11, !dbg !17409
  br i1 %call3, label %if.end5, label %if.then4, !dbg !17410

if.then4:                                         ; preds = %sw.bb2
  br label %sw.epilog, !dbg !17411

if.end5:                                          ; preds = %sw.bb2
  %10 = load %struct.acpi_device*, %struct.acpi_device** %adev, align 8, !dbg !17412
  %call6 = call %struct.spi_device* @acpi_spi_find_device_by_adev(%struct.acpi_device* %10) #11, !dbg !17413
  store %struct.spi_device* %call6, %struct.spi_device** %spi, align 8, !dbg !17414
  %11 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !17415
  %tobool7 = icmp ne %struct.spi_device* %11, null, !dbg !17415
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !17417

if.then8:                                         ; preds = %if.end5
  br label %sw.epilog, !dbg !17418

if.end9:                                          ; preds = %if.end5
  %12 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !17419
  call void @spi_unregister_device(%struct.spi_device* %12) #11, !dbg !17420
  %13 = load %struct.spi_device*, %struct.spi_device** %spi, align 8, !dbg !17421
  %dev10 = getelementptr inbounds %struct.spi_device, %struct.spi_device* %13, i32 0, i32 0, !dbg !17422
  call void @put_device(%struct.device* %dev10) #11, !dbg !17423
  br label %sw.epilog, !dbg !17424

sw.epilog:                                        ; preds = %entry, %if.end9, %if.then8, %if.then4, %if.end, %if.then
  ret i32 1, !dbg !17425
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_controller* @acpi_spi_find_controller_by_adev(%struct.acpi_device* %adev) #0 !dbg !17426 {
entry:
  %retval = alloca %struct.spi_controller*, align 8
  %adev.addr = alloca %struct.acpi_device*, align 8
  %dev = alloca %struct.device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp = alloca %struct.spi_controller*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !17429, metadata !DIExpression()), !dbg !17430
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !17431, metadata !DIExpression()), !dbg !17432
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !17433
  %1 = bitcast %struct.acpi_device* %0 to i8*, !dbg !17433
  %call = call %struct.device* @class_find_device(%struct.class* @spi_master_class, %struct.device* null, i8* %1, i32 (%struct.device*, i8*)* @spi_acpi_controller_match) #11, !dbg !17434
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !17435
  %2 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17436
  %tobool = icmp ne %struct.device* %2, null, !dbg !17436
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !17438

land.lhs.true:                                    ; preds = %entry
  br i1 false, label %if.then, label %if.end, !dbg !17439

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !17440
  %4 = bitcast %struct.acpi_device* %3 to i8*, !dbg !17440
  %call1 = call %struct.device* @class_find_device(%struct.class* @spi_slave_class, %struct.device* null, i8* %4, i32 (%struct.device*, i8*)* @spi_acpi_controller_match) #11, !dbg !17441
  store %struct.device* %call1, %struct.device** %dev, align 8, !dbg !17442
  br label %if.end, !dbg !17443

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17444
  %tobool2 = icmp ne %struct.device* %5, null, !dbg !17444
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !17446

if.then3:                                         ; preds = %if.end
  store %struct.spi_controller* null, %struct.spi_controller** %retval, align 8, !dbg !17447
  br label %return, !dbg !17447

if.end4:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17448, metadata !DIExpression()), !dbg !17450
  %6 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17450
  %7 = bitcast %struct.device* %6 to i8*, !dbg !17450
  store i8* %7, i8** %__mptr, align 8, !dbg !17450
  br label %do.body, !dbg !17450

do.body:                                          ; preds = %if.end4
  br label %do.end, !dbg !17451

do.end:                                           ; preds = %do.body
  %8 = load i8*, i8** %__mptr, align 8, !dbg !17450
  %add.ptr = getelementptr i8, i8* %8, i64 0, !dbg !17450
  %9 = bitcast i8* %add.ptr to %struct.spi_controller*, !dbg !17450
  store %struct.spi_controller* %9, %struct.spi_controller** %tmp, align 8, !dbg !17451
  %10 = load %struct.spi_controller*, %struct.spi_controller** %tmp, align 8, !dbg !17450
  store %struct.spi_controller* %10, %struct.spi_controller** %retval, align 8, !dbg !17453
  br label %return, !dbg !17453

return:                                           ; preds = %do.end, %if.then3
  %11 = load %struct.spi_controller*, %struct.spi_controller** %retval, align 8, !dbg !17454
  ret %struct.spi_controller* %11, !dbg !17454
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.spi_device* @acpi_spi_find_device_by_adev(%struct.acpi_device* %adev) #0 !dbg !17455 {
entry:
  %adev.addr = alloca %struct.acpi_device*, align 8
  %dev = alloca %struct.device*, align 8
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !17458, metadata !DIExpression()), !dbg !17459
  call void @llvm.dbg.declare(metadata %struct.device** %dev, metadata !17460, metadata !DIExpression()), !dbg !17461
  %0 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !17462
  %call = call %struct.device* @bus_find_device_by_acpi_dev(%struct.bus_type* @spi_bus_type, %struct.acpi_device* %0) #11, !dbg !17463
  store %struct.device* %call, %struct.device** %dev, align 8, !dbg !17464
  %1 = load %struct.device*, %struct.device** %dev, align 8, !dbg !17465
  %call1 = call %struct.spi_device* @to_spi_device(%struct.device* %1) #11, !dbg !17466
  ret %struct.spi_device* %call1, !dbg !17467
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal i32 @spi_acpi_controller_match(%struct.device* %dev, i8* %data) #0 !dbg !17468 {
entry:
  %dev.addr = alloca %struct.device*, align 8
  %data.addr = alloca i8*, align 8
  %__to_acpi_device_node_fwnode = alloca %struct.fwnode_handle*, align 8
  %tmp = alloca %struct.acpi_device*, align 8
  %__mptr = alloca i8*, align 8
  %tmp1 = alloca %struct.acpi_device*, align 8
  store %struct.device* %dev, %struct.device** %dev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.device** %dev.addr, metadata !17469, metadata !DIExpression()), !dbg !17470
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17471, metadata !DIExpression()), !dbg !17472
  call void @llvm.dbg.declare(metadata %struct.fwnode_handle** %__to_acpi_device_node_fwnode, metadata !17473, metadata !DIExpression()), !dbg !17475
  %0 = load %struct.device*, %struct.device** %dev.addr, align 8, !dbg !17475
  %parent = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 1, !dbg !17475
  %1 = load %struct.device*, %struct.device** %parent, align 8, !dbg !17475
  %fwnode = getelementptr inbounds %struct.device, %struct.device* %1, i32 0, i32 24, !dbg !17475
  %2 = load %struct.fwnode_handle*, %struct.fwnode_handle** %fwnode, align 8, !dbg !17475
  store %struct.fwnode_handle* %2, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !17475
  %3 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !17475
  %call = call zeroext i1 @is_acpi_device_node(%struct.fwnode_handle* %3) #11, !dbg !17475
  br i1 %call, label %cond.true, label %cond.false, !dbg !17475

cond.true:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %__mptr, metadata !17476, metadata !DIExpression()), !dbg !17478
  %4 = load %struct.fwnode_handle*, %struct.fwnode_handle** %__to_acpi_device_node_fwnode, align 8, !dbg !17478
  %5 = bitcast %struct.fwnode_handle* %4 to i8*, !dbg !17478
  store i8* %5, i8** %__mptr, align 8, !dbg !17478
  br label %do.body, !dbg !17478

do.body:                                          ; preds = %cond.true
  br label %do.end, !dbg !17479

do.end:                                           ; preds = %do.body
  %6 = load i8*, i8** %__mptr, align 8, !dbg !17478
  %add.ptr = getelementptr i8, i8* %6, i64 -16, !dbg !17478
  %7 = bitcast i8* %add.ptr to %struct.acpi_device*, !dbg !17478
  store %struct.acpi_device* %7, %struct.acpi_device** %tmp1, align 8, !dbg !17479
  %8 = load %struct.acpi_device*, %struct.acpi_device** %tmp1, align 8, !dbg !17478
  br label %cond.end, !dbg !17475

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !17475

cond.end:                                         ; preds = %cond.false, %do.end
  %cond = phi %struct.acpi_device* [ %8, %do.end ], [ null, %cond.false ], !dbg !17475
  store %struct.acpi_device* %cond, %struct.acpi_device** %tmp, align 8, !dbg !17475
  %9 = load %struct.acpi_device*, %struct.acpi_device** %tmp, align 8, !dbg !17475
  %10 = load i8*, i8** %data.addr, align 8, !dbg !17481
  %11 = bitcast i8* %10 to %struct.acpi_device*, !dbg !17481
  %cmp = icmp eq %struct.acpi_device* %9, %11, !dbg !17482
  %conv = zext i1 %cmp to i32, !dbg !17482
  ret i32 %conv, !dbg !17483
}

; Function Attrs: noinline noredzone nounwind optnone sspstrong
define internal %struct.device* @bus_find_device_by_acpi_dev(%struct.bus_type* %bus, %struct.acpi_device* %adev) #0 !dbg !17484 {
entry:
  %bus.addr = alloca %struct.bus_type*, align 8
  %adev.addr = alloca %struct.acpi_device*, align 8
  store %struct.bus_type* %bus, %struct.bus_type** %bus.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bus_type** %bus.addr, metadata !17489, metadata !DIExpression()), !dbg !17490
  store %struct.acpi_device* %adev, %struct.acpi_device** %adev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.acpi_device** %adev.addr, metadata !17491, metadata !DIExpression()), !dbg !17492
  %0 = load %struct.bus_type*, %struct.bus_type** %bus.addr, align 8, !dbg !17493
  %1 = load %struct.acpi_device*, %struct.acpi_device** %adev.addr, align 8, !dbg !17494
  %2 = bitcast %struct.acpi_device* %1 to i8*, !dbg !17494
  %call = call %struct.device* @bus_find_device(%struct.bus_type* %0, %struct.device* null, i8* %2, i32 (%struct.device*, i8*)* @device_match_acpi_dev) #11, !dbg !17495
  ret %struct.device* %call, !dbg !17496
}

; Function Attrs: noredzone
declare dso_local i32 @device_match_acpi_dev(%struct.device*, i8*) #2

attributes #0 = { noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { cold noredzone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noinline noredzone nounwind optnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readnone willreturn }
attributes #9 = { nounwind willreturn }
attributes #10 = { noinline noredzone nounwind optnone readnone sspstrong "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="none" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="true" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,-3dnow,-3dnowa,-aes,-avx,-avx2,-avx512bf16,-avx512bitalg,-avx512bw,-avx512cd,-avx512dq,-avx512er,-avx512f,-avx512ifma,-avx512pf,-avx512vbmi,-avx512vbmi2,-avx512vl,-avx512vnni,-avx512vp2intersect,-avx512vpopcntdq,-f16c,-fma,-fma4,-gfni,-mmx,-pclmul,-sha,-sse,-sse2,-sse3,-sse4.1,-sse4.2,-sse4a,-ssse3,-vaes,-vpclmulqdq,-x87,-xop,-xsave,-xsaveopt" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noredzone }
attributes #12 = { noredzone nounwind }
attributes #13 = { noredzone nounwind readnone }
attributes #14 = { cold noredzone }
attributes #15 = { nounwind readnone }

!llvm.dbg.cu = !{!2}
!llvm.named.register.rsp = !{!5410}
!llvm.module.flags = !{!5411, !5412, !5413, !5414}
!llvm.ident = !{!5415}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "spi_dev_groups", scope: !2, file: !3, line: 244, type: !5409, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C89, file: !3, producer: "clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !225, globals: !5205, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "drivers/spi/spi.c", directory: "/home/lizy2001/genbc/linux")
!4 = !{!5, !13, !19, !24, !30, !37, !43, !52, !60, !66, !72, !79, !87, !93, !107, !115, !121, !127, !136, !141, !153, !159, !163, !170, !181, !188, !197, !204, !209, !218}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "migrate_mode", file: !6, line: 15, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./include/linux/migrate_mode.h", directory: "/home/lizy2001/genbc/linux")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "MIGRATE_ASYNC", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "MIGRATE_SYNC_LIGHT", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "MIGRATE_SYNC", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "MIGRATE_SYNC_NO_COPY", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "page_entry_size", file: !14, line: 546, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./include/linux/mm.h", directory: "/home/lizy2001/genbc/linux")
!15 = !{!16, !17, !18}
!16 = !DIEnumerator(name: "PE_SIZE_PTE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "PE_SIZE_PMD", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "PE_SIZE_PUD", value: 2, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "hrtimer_restart", file: !20, line: 65, baseType: !7, size: 32, elements: !21)
!20 = !DIFile(filename: "./include/linux/hrtimer.h", directory: "/home/lizy2001/genbc/linux")
!21 = !{!22, !23}
!22 = !DIEnumerator(name: "HRTIMER_NORESTART", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "HRTIMER_RESTART", value: 1, isUnsigned: true)
!24 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "timespec_type", file: !25, line: 16, baseType: !7, size: 32, elements: !26)
!25 = !DIFile(filename: "./include/linux/restart_block.h", directory: "/home/lizy2001/genbc/linux")
!26 = !{!27, !28, !29}
!27 = !DIEnumerator(name: "TT_NONE", value: 0, isUnsigned: true)
!28 = !DIEnumerator(name: "TT_NATIVE", value: 1, isUnsigned: true)
!29 = !DIEnumerator(name: "TT_COMPAT", value: 2, isUnsigned: true)
!30 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "memory_type", file: !31, line: 59, baseType: !7, size: 32, elements: !32)
!31 = !DIFile(filename: "./include/linux/memremap.h", directory: "/home/lizy2001/genbc/linux")
!32 = !{!33, !34, !35, !36}
!33 = !DIEnumerator(name: "MEMORY_DEVICE_PRIVATE", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "MEMORY_DEVICE_FS_DAX", value: 2, isUnsigned: true)
!35 = !DIEnumerator(name: "MEMORY_DEVICE_GENERIC", value: 3, isUnsigned: true)
!36 = !DIEnumerator(name: "MEMORY_DEVICE_PCI_P2PDMA", value: 4, isUnsigned: true)
!37 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "quota_type", file: !38, line: 54, baseType: !7, size: 32, elements: !39)
!38 = !DIFile(filename: "./include/linux/quota.h", directory: "/home/lizy2001/genbc/linux")
!39 = !{!40, !41, !42}
!40 = !DIEnumerator(name: "USRQUOTA", value: 0, isUnsigned: true)
!41 = !DIEnumerator(name: "GRPQUOTA", value: 1, isUnsigned: true)
!42 = !DIEnumerator(name: "PRJQUOTA", value: 2, isUnsigned: true)
!43 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rw_hint", file: !44, line: 296, baseType: !7, size: 32, elements: !45)
!44 = !DIFile(filename: "./include/linux/fs.h", directory: "/home/lizy2001/genbc/linux")
!45 = !{!46, !47, !48, !49, !50, !51}
!46 = !DIEnumerator(name: "WRITE_LIFE_NOT_SET", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "WRITE_LIFE_NONE", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "WRITE_LIFE_SHORT", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "WRITE_LIFE_MEDIUM", value: 3, isUnsigned: true)
!50 = !DIEnumerator(name: "WRITE_LIFE_LONG", value: 4, isUnsigned: true)
!51 = !DIEnumerator(name: "WRITE_LIFE_EXTREME", value: 5, isUnsigned: true)
!52 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pid_type", file: !53, line: 9, baseType: !7, size: 32, elements: !54)
!53 = !DIFile(filename: "./include/linux/pid.h", directory: "/home/lizy2001/genbc/linux")
!54 = !{!55, !56, !57, !58, !59}
!55 = !DIEnumerator(name: "PIDTYPE_PID", value: 0, isUnsigned: true)
!56 = !DIEnumerator(name: "PIDTYPE_TGID", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "PIDTYPE_PGID", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "PIDTYPE_SID", value: 3, isUnsigned: true)
!59 = !DIEnumerator(name: "PIDTYPE_MAX", value: 4, isUnsigned: true)
!60 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kobj_ns_type", file: !61, line: 26, baseType: !7, size: 32, elements: !62)
!61 = !DIFile(filename: "./include/linux/kobject_ns.h", directory: "/home/lizy2001/genbc/linux")
!62 = !{!63, !64, !65}
!63 = !DIEnumerator(name: "KOBJ_NS_TYPE_NONE", value: 0, isUnsigned: true)
!64 = !DIEnumerator(name: "KOBJ_NS_TYPE_NET", value: 1, isUnsigned: true)
!65 = !DIEnumerator(name: "KOBJ_NS_TYPES", value: 2, isUnsigned: true)
!66 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "probe_type", file: !67, line: 44, baseType: !7, size: 32, elements: !68)
!67 = !DIFile(filename: "./include/linux/device/driver.h", directory: "/home/lizy2001/genbc/linux")
!68 = !{!69, !70, !71}
!69 = !DIEnumerator(name: "PROBE_DEFAULT_STRATEGY", value: 0, isUnsigned: true)
!70 = !DIEnumerator(name: "PROBE_PREFER_ASYNCHRONOUS", value: 1, isUnsigned: true)
!71 = !DIEnumerator(name: "PROBE_FORCE_SYNCHRONOUS", value: 2, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dl_dev_state", file: !73, line: 343, baseType: !7, size: 32, elements: !74)
!73 = !DIFile(filename: "./include/linux/device.h", directory: "/home/lizy2001/genbc/linux")
!74 = !{!75, !76, !77, !78}
!75 = !DIEnumerator(name: "DL_DEV_NO_DRIVER", value: 0, isUnsigned: true)
!76 = !DIEnumerator(name: "DL_DEV_PROBING", value: 1, isUnsigned: true)
!77 = !DIEnumerator(name: "DL_DEV_DRIVER_BOUND", value: 2, isUnsigned: true)
!78 = !DIEnumerator(name: "DL_DEV_UNBINDING", value: 3, isUnsigned: true)
!79 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_request", file: !80, line: 524, baseType: !7, size: 32, elements: !81)
!80 = !DIFile(filename: "./include/linux/pm.h", directory: "/home/lizy2001/genbc/linux")
!81 = !{!82, !83, !84, !85, !86}
!82 = !DIEnumerator(name: "RPM_REQ_NONE", value: 0, isUnsigned: true)
!83 = !DIEnumerator(name: "RPM_REQ_IDLE", value: 1, isUnsigned: true)
!84 = !DIEnumerator(name: "RPM_REQ_SUSPEND", value: 2, isUnsigned: true)
!85 = !DIEnumerator(name: "RPM_REQ_AUTOSUSPEND", value: 3, isUnsigned: true)
!86 = !DIEnumerator(name: "RPM_REQ_RESUME", value: 4, isUnsigned: true)
!87 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rpm_status", file: !80, line: 502, baseType: !7, size: 32, elements: !88)
!88 = !{!89, !90, !91, !92}
!89 = !DIEnumerator(name: "RPM_ACTIVE", value: 0, isUnsigned: true)
!90 = !DIEnumerator(name: "RPM_RESUMING", value: 1, isUnsigned: true)
!91 = !DIEnumerator(name: "RPM_SUSPENDED", value: 2, isUnsigned: true)
!92 = !DIEnumerator(name: "RPM_SUSPENDING", value: 3, isUnsigned: true)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_domain_bus_token", file: !94, line: 76, baseType: !7, size: 32, elements: !95)
!94 = !DIFile(filename: "./include/linux/irqdomain.h", directory: "/home/lizy2001/genbc/linux")
!95 = !{!96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106}
!96 = !DIEnumerator(name: "DOMAIN_BUS_ANY", value: 0, isUnsigned: true)
!97 = !DIEnumerator(name: "DOMAIN_BUS_WIRED", value: 1, isUnsigned: true)
!98 = !DIEnumerator(name: "DOMAIN_BUS_GENERIC_MSI", value: 2, isUnsigned: true)
!99 = !DIEnumerator(name: "DOMAIN_BUS_PCI_MSI", value: 3, isUnsigned: true)
!100 = !DIEnumerator(name: "DOMAIN_BUS_PLATFORM_MSI", value: 4, isUnsigned: true)
!101 = !DIEnumerator(name: "DOMAIN_BUS_NEXUS", value: 5, isUnsigned: true)
!102 = !DIEnumerator(name: "DOMAIN_BUS_IPI", value: 6, isUnsigned: true)
!103 = !DIEnumerator(name: "DOMAIN_BUS_FSL_MC_MSI", value: 7, isUnsigned: true)
!104 = !DIEnumerator(name: "DOMAIN_BUS_TI_SCI_INTA_MSI", value: 8, isUnsigned: true)
!105 = !DIEnumerator(name: "DOMAIN_BUS_WAKEUP", value: 9, isUnsigned: true)
!106 = !DIEnumerator(name: "DOMAIN_BUS_VMD_MSI", value: 10, isUnsigned: true)
!107 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irq_gc_flags", file: !108, line: 1084, baseType: !7, size: 32, elements: !109)
!108 = !DIFile(filename: "./include/linux/irq.h", directory: "/home/lizy2001/genbc/linux")
!109 = !{!110, !111, !112, !113, !114}
!110 = !DIEnumerator(name: "IRQ_GC_INIT_MASK_CACHE", value: 1, isUnsigned: true)
!111 = !DIEnumerator(name: "IRQ_GC_INIT_NESTED_LOCK", value: 2, isUnsigned: true)
!112 = !DIEnumerator(name: "IRQ_GC_MASK_CACHE_PER_TYPE", value: 4, isUnsigned: true)
!113 = !DIEnumerator(name: "IRQ_GC_NO_MASK", value: 8, isUnsigned: true)
!114 = !DIEnumerator(name: "IRQ_GC_BE_IO", value: 16, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "spi_mem_data_dir", file: !116, line: 65, baseType: !7, size: 32, elements: !117)
!116 = !DIFile(filename: "./include/linux/spi/spi-mem.h", directory: "/home/lizy2001/genbc/linux")
!117 = !{!118, !119, !120}
!118 = !DIEnumerator(name: "SPI_MEM_NO_DATA", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "SPI_MEM_DATA_IN", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "SPI_MEM_DATA_OUT", value: 2, isUnsigned: true)
!121 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_desc_metadata_mode", file: !122, line: 288, baseType: !7, size: 32, elements: !123)
!122 = !DIFile(filename: "./include/linux/dmaengine.h", directory: "/home/lizy2001/genbc/linux")
!123 = !{!124, !125, !126}
!124 = !DIEnumerator(name: "DESC_METADATA_NONE", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "DESC_METADATA_CLIENT", value: 1, isUnsigned: true)
!126 = !DIEnumerator(name: "DESC_METADATA_ENGINE", value: 2, isUnsigned: true)
!127 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_alignment", file: !122, line: 732, baseType: !7, size: 32, elements: !128)
!128 = !{!129, !130, !131, !132, !133, !134, !135}
!129 = !DIEnumerator(name: "DMAENGINE_ALIGN_1_BYTE", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "DMAENGINE_ALIGN_2_BYTES", value: 1, isUnsigned: true)
!131 = !DIEnumerator(name: "DMAENGINE_ALIGN_4_BYTES", value: 2, isUnsigned: true)
!132 = !DIEnumerator(name: "DMAENGINE_ALIGN_8_BYTES", value: 3, isUnsigned: true)
!133 = !DIEnumerator(name: "DMAENGINE_ALIGN_16_BYTES", value: 4, isUnsigned: true)
!134 = !DIEnumerator(name: "DMAENGINE_ALIGN_32_BYTES", value: 5, isUnsigned: true)
!135 = !DIEnumerator(name: "DMAENGINE_ALIGN_64_BYTES", value: 6, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_residue_granularity", file: !122, line: 468, baseType: !7, size: 32, elements: !137)
!137 = !{!138, !139, !140}
!138 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_DESCRIPTOR", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_SEGMENT", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "DMA_RESIDUE_GRANULARITY_BURST", value: 2, isUnsigned: true)
!141 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_ctrl_flags", file: !122, line: 194, baseType: !7, size: 32, elements: !142)
!142 = !{!143, !144, !145, !146, !147, !148, !149, !150, !151, !152}
!143 = !DIEnumerator(name: "DMA_PREP_INTERRUPT", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DMA_CTRL_ACK", value: 2, isUnsigned: true)
!145 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_P", value: 4, isUnsigned: true)
!146 = !DIEnumerator(name: "DMA_PREP_PQ_DISABLE_Q", value: 8, isUnsigned: true)
!147 = !DIEnumerator(name: "DMA_PREP_CONTINUE", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "DMA_PREP_FENCE", value: 32, isUnsigned: true)
!149 = !DIEnumerator(name: "DMA_CTRL_REUSE", value: 64, isUnsigned: true)
!150 = !DIEnumerator(name: "DMA_PREP_CMD", value: 128, isUnsigned: true)
!151 = !DIEnumerator(name: "DMA_PREP_REPEAT", value: 256, isUnsigned: true)
!152 = !DIEnumerator(name: "DMA_PREP_LOAD_EOT", value: 512, isUnsigned: true)
!153 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dmaengine_tx_result", file: !122, line: 533, baseType: !7, size: 32, elements: !154)
!154 = !{!155, !156, !157, !158}
!155 = !DIEnumerator(name: "DMA_TRANS_NOERROR", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "DMA_TRANS_READ_FAILED", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "DMA_TRANS_WRITE_FAILED", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "DMA_TRANS_ABORTED", value: 3, isUnsigned: true)
!159 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "sum_check_flags", file: !122, line: 220, baseType: !7, size: 32, elements: !160)
!160 = !{!161, !162}
!161 = !DIEnumerator(name: "SUM_CHECK_P_RESULT", value: 1, isUnsigned: true)
!162 = !DIEnumerator(name: "SUM_CHECK_Q_RESULT", value: 2, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_transfer_direction", file: !122, line: 79, baseType: !7, size: 32, elements: !164)
!164 = !{!165, !166, !167, !168, !169}
!165 = !DIEnumerator(name: "DMA_MEM_TO_MEM", value: 0, isUnsigned: true)
!166 = !DIEnumerator(name: "DMA_MEM_TO_DEV", value: 1, isUnsigned: true)
!167 = !DIEnumerator(name: "DMA_DEV_TO_MEM", value: 2, isUnsigned: true)
!168 = !DIEnumerator(name: "DMA_DEV_TO_DEV", value: 3, isUnsigned: true)
!169 = !DIEnumerator(name: "DMA_TRANS_NONE", value: 4, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_slave_buswidth", file: !122, line: 371, baseType: !7, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176, !177, !178, !179, !180}
!172 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_UNDEFINED", value: 0, isUnsigned: true)
!173 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_1_BYTE", value: 1, isUnsigned: true)
!174 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_2_BYTES", value: 2, isUnsigned: true)
!175 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_3_BYTES", value: 3, isUnsigned: true)
!176 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_4_BYTES", value: 4, isUnsigned: true)
!177 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_8_BYTES", value: 8, isUnsigned: true)
!178 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_16_BYTES", value: 16, isUnsigned: true)
!179 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_32_BYTES", value: 32, isUnsigned: true)
!180 = !DIEnumerator(name: "DMA_SLAVE_BUSWIDTH_64_BYTES", value: 64, isUnsigned: true)
!181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_status", file: !122, line: 37, baseType: !7, size: 32, elements: !182)
!182 = !{!183, !184, !185, !186, !187}
!183 = !DIEnumerator(name: "DMA_COMPLETE", value: 0, isUnsigned: true)
!184 = !DIEnumerator(name: "DMA_IN_PROGRESS", value: 1, isUnsigned: true)
!185 = !DIEnumerator(name: "DMA_PAUSED", value: 2, isUnsigned: true)
!186 = !DIEnumerator(name: "DMA_ERROR", value: 3, isUnsigned: true)
!187 = !DIEnumerator(name: "DMA_OUT_OF_ORDER", value: 4, isUnsigned: true)
!188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dev_prop_type", file: !189, line: 19, baseType: !7, size: 32, elements: !190)
!189 = !DIFile(filename: "./include/linux/property.h", directory: "/home/lizy2001/genbc/linux")
!190 = !{!191, !192, !193, !194, !195, !196}
!191 = !DIEnumerator(name: "DEV_PROP_U8", value: 0, isUnsigned: true)
!192 = !DIEnumerator(name: "DEV_PROP_U16", value: 1, isUnsigned: true)
!193 = !DIEnumerator(name: "DEV_PROP_U32", value: 2, isUnsigned: true)
!194 = !DIEnumerator(name: "DEV_PROP_U64", value: 3, isUnsigned: true)
!195 = !DIEnumerator(name: "DEV_PROP_STRING", value: 4, isUnsigned: true)
!196 = !DIEnumerator(name: "DEV_PROP_REF", value: 5, isUnsigned: true)
!197 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dma_data_direction", file: !198, line: 5, baseType: !7, size: 32, elements: !199)
!198 = !DIFile(filename: "./include/linux/dma-direction.h", directory: "/home/lizy2001/genbc/linux")
!199 = !{!200, !201, !202, !203}
!200 = !DIEnumerator(name: "DMA_BIDIRECTIONAL", value: 0, isUnsigned: true)
!201 = !DIEnumerator(name: "DMA_TO_DEVICE", value: 1, isUnsigned: true)
!202 = !DIEnumerator(name: "DMA_FROM_DEVICE", value: 2, isUnsigned: true)
!203 = !DIEnumerator(name: "DMA_NONE", value: 3, isUnsigned: true)
!204 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !205, line: 10, baseType: !7, size: 32, elements: !206)
!205 = !DIFile(filename: "./include/linux/stddef.h", directory: "/home/lizy2001/genbc/linux")
!206 = !{!207, !208}
!207 = !DIEnumerator(name: "false", value: 0, isUnsigned: true)
!208 = !DIEnumerator(name: "true", value: 1, isUnsigned: true)
!209 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "gpiod_flags", file: !210, line: 49, baseType: !7, size: 32, elements: !211)
!210 = !DIFile(filename: "./include/linux/gpio/consumer.h", directory: "/home/lizy2001/genbc/linux")
!211 = !{!212, !213, !214, !215, !216, !217}
!212 = !DIEnumerator(name: "GPIOD_ASIS", value: 0, isUnsigned: true)
!213 = !DIEnumerator(name: "GPIOD_IN", value: 1, isUnsigned: true)
!214 = !DIEnumerator(name: "GPIOD_OUT_LOW", value: 3, isUnsigned: true)
!215 = !DIEnumerator(name: "GPIOD_OUT_HIGH", value: 7, isUnsigned: true)
!216 = !DIEnumerator(name: "GPIOD_OUT_LOW_OPEN_DRAIN", value: 11, isUnsigned: true)
!217 = !DIEnumerator(name: "GPIOD_OUT_HIGH_OPEN_DRAIN", value: 15, isUnsigned: true)
!218 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "kmalloc_cache_type", file: !219, line: 305, baseType: !7, size: 32, elements: !220)
!219 = !DIFile(filename: "./include/linux/slab.h", directory: "/home/lizy2001/genbc/linux")
!220 = !{!221, !222, !223, !224}
!221 = !DIEnumerator(name: "KMALLOC_NORMAL", value: 0, isUnsigned: true)
!222 = !DIEnumerator(name: "KMALLOC_RECLAIM", value: 1, isUnsigned: true)
!223 = !DIEnumerator(name: "KMALLOC_DMA", value: 2, isUnsigned: true)
!224 = !DIEnumerator(name: "NR_KMALLOC_TYPES", value: 3, isUnsigned: true)
!225 = !{!226, !228, !229, !4512, !234, !388, !385, !5121, !4594, !4616, !5124, !5165, !7, !5176, !5190, !5192, !373, !5193, !835, !5194, !5195, !236, !5196, !485, !5197, !1556, !4103, !5198, !770, !5201, !5203, !4532}
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "gfp_t", file: !227, line: 148, baseType: !7)
!227 = !DIFile(filename: "./include/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device", file: !231, line: 351, size: 10880, elements: !232)
!231 = !DIFile(filename: "./include/acpi/acpi_bus.h", directory: "/home/lizy2001/genbc/linux")
!232 = !{!233, !235, !238, !4229, !4230, !4231, !4232, !4233, !4234, !4243, !4260, !4334, !4363, !4387, !4408, !4412, !4421, !4453, !4467, !4489, !4505, !4506, !4507, !4508, !4509, !4510, !4511}
!233 = !DIDerivedType(tag: DW_TAG_member, name: "device_type", scope: !230, file: !231, line: 352, baseType: !234, size: 32)
!234 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !230, file: !231, line: 353, baseType: !236, size: 64, offset: 64)
!236 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_handle", file: !237, line: 424, baseType: !228)
!237 = !DIFile(filename: "./include/acpi/actypes.h", directory: "/home/lizy2001/genbc/linux")
!238 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !230, file: !231, line: 354, baseType: !239, size: 192, offset: 128)
!239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_handle", file: !240, line: 17, size: 192, elements: !241)
!240 = !DIFile(filename: "./include/linux/fwnode.h", directory: "/home/lizy2001/genbc/linux")
!241 = !{!242, !244, !4228}
!242 = !DIDerivedType(tag: DW_TAG_member, name: "secondary", scope: !239, file: !240, line: 18, baseType: !243, size: 64)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !239, file: !240, line: 19, baseType: !245, size: 64, offset: 64)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !247)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_operations", file: !240, line: 110, size: 1152, elements: !248)
!248 = !{!249, !253, !257, !265, !4170, !4174, !4178, !4183, !4187, !4188, !4192, !4196, !4200, !4211, !4212, !4213, !4214, !4224}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "get", scope: !247, file: !240, line: 111, baseType: !250, size: 64)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !251, size: 64)
!251 = !DISubroutineType(types: !252)
!252 = !{!243, !243}
!253 = !DIDerivedType(tag: DW_TAG_member, name: "put", scope: !247, file: !240, line: 112, baseType: !254, size: 64, offset: 64)
!254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !255, size: 64)
!255 = !DISubroutineType(types: !256)
!256 = !{null, !243}
!257 = !DIDerivedType(tag: DW_TAG_member, name: "device_is_available", scope: !247, file: !240, line: 113, baseType: !258, size: 64, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !259, size: 64)
!259 = !DISubroutineType(types: !260)
!260 = !{!261, !263}
!261 = !DIDerivedType(tag: DW_TAG_typedef, name: "bool", file: !227, line: 30, baseType: !262)
!262 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !264, size: 64)
!264 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !239)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "device_get_match_data", scope: !247, file: !240, line: 114, baseType: !266, size: 64, offset: 192)
!266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !267, size: 64)
!267 = !DISubroutineType(types: !268)
!268 = !{!269, !263, !271}
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !272, size: 64)
!272 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !273)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device", file: !73, line: 461, size: 5568, elements: !274)
!274 = !{!275, !3505, !3507, !3510, !3511, !3562, !3653, !3654, !3655, !3656, !3657, !3666, !3775, !3788, !4097, !4098, !4102, !4104, !4105, !4106, !4110, !4116, !4117, !4120, !4121, !4122, !4123, !4124, !4125, !4126, !4158, !4159, !4160, !4163, !4166, !4167, !4168, !4169}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !273, file: !73, line: 462, baseType: !276, size: 512)
!276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobject", file: !277, line: 64, size: 512, elements: !278)
!277 = !DIFile(filename: "./include/linux/kobject.h", directory: "/home/lizy2001/genbc/linux")
!278 = !{!279, !283, !289, !291, !351, !3368, !3495, !3500, !3501, !3502, !3503, !3504}
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !276, file: !277, line: 65, baseType: !280, size: 64)
!280 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !281, size: 64)
!281 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !282)
!282 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !276, file: !277, line: 66, baseType: !284, size: 128, offset: 64)
!284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_head", file: !227, line: 178, size: 128, elements: !285)
!285 = !{!286, !288}
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !284, file: !227, line: 179, baseType: !287, size: 64)
!287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !284, file: !227, line: 179, baseType: !287, size: 64, offset: 64)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !276, file: !277, line: 67, baseType: !290, size: 64, offset: 192)
!290 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !276, size: 64)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "kset", scope: !276, file: !277, line: 68, baseType: !292, size: 64, offset: 256)
!292 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !293, size: 64)
!293 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset", file: !277, line: 192, size: 704, elements: !294)
!294 = !{!295, !296, !312, !313}
!295 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !293, file: !277, line: 193, baseType: !284, size: 128)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "list_lock", scope: !293, file: !277, line: 194, baseType: !297, offset: 128)
!297 = !DIDerivedType(tag: DW_TAG_typedef, name: "spinlock_t", file: !298, line: 83, baseType: !299)
!298 = !DIFile(filename: "./include/linux/spinlock_types.h", directory: "/home/lizy2001/genbc/linux")
!299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spinlock", file: !298, line: 71, elements: !300)
!300 = !{!301}
!301 = !DIDerivedType(tag: DW_TAG_member, scope: !299, file: !298, line: 72, baseType: !302)
!302 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !299, file: !298, line: 72, elements: !303)
!303 = !{!304}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "rlock", scope: !302, file: !298, line: 73, baseType: !305)
!305 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "raw_spinlock", file: !298, line: 20, elements: !306)
!306 = !{!307}
!307 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !305, file: !298, line: 21, baseType: !308)
!308 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_spinlock_t", file: !309, line: 25, baseType: !310)
!309 = !DIFile(filename: "./include/linux/spinlock_types_up.h", directory: "/home/lizy2001/genbc/linux")
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !309, line: 25, elements: !311)
!311 = !{}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !293, file: !277, line: 195, baseType: !276, size: 512, offset: 128)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_ops", scope: !293, file: !277, line: 196, baseType: !314, size: 64, offset: 640)
!314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !316)
!316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kset_uevent_ops", file: !277, line: 156, size: 192, elements: !317)
!317 = !{!318, !323, !328}
!318 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !316, file: !277, line: 157, baseType: !319, size: 64)
!319 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !320)
!320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !321, size: 64)
!321 = !DISubroutineType(types: !322)
!322 = !{!234, !292, !290}
!323 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !316, file: !277, line: 158, baseType: !324, size: 64, offset: 64)
!324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !325)
!325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !326, size: 64)
!326 = !DISubroutineType(types: !327)
!327 = !{!280, !292, !290}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !316, file: !277, line: 159, baseType: !329, size: 64, offset: 128)
!329 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !330)
!330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !331, size: 64)
!331 = !DISubroutineType(types: !332)
!332 = !{!234, !292, !290, !333}
!333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !334, size: 64)
!334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_uevent_env", file: !277, line: 148, size: 20736, elements: !335)
!335 = !{!336, !341, !345, !346, !350}
!336 = !DIDerivedType(tag: DW_TAG_member, name: "argv", scope: !334, file: !277, line: 149, baseType: !337, size: 192)
!337 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 192, elements: !339)
!338 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!339 = !{!340}
!340 = !DISubrange(count: 3)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "envp", scope: !334, file: !277, line: 150, baseType: !342, size: 4096, offset: 192)
!342 = !DICompositeType(tag: DW_TAG_array_type, baseType: !338, size: 4096, elements: !343)
!343 = !{!344}
!344 = !DISubrange(count: 64)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "envp_idx", scope: !334, file: !277, line: 151, baseType: !234, size: 32, offset: 4288)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !334, file: !277, line: 152, baseType: !347, size: 16384, offset: 4320)
!347 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 16384, elements: !348)
!348 = !{!349}
!349 = !DISubrange(count: 2048)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "buflen", scope: !334, file: !277, line: 153, baseType: !234, size: 32, offset: 20704)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "ktype", scope: !276, file: !277, line: 69, baseType: !352, size: 64, offset: 320)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_type", file: !277, line: 138, size: 448, elements: !354)
!354 = !{!355, !359, !389, !391, !3330, !3358, !3362}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !353, file: !277, line: 139, baseType: !356, size: 64)
!356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!357 = !DISubroutineType(types: !358)
!358 = !{null, !290}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "sysfs_ops", scope: !353, file: !277, line: 140, baseType: !360, size: 64, offset: 64)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !362)
!362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sysfs_ops", file: !363, line: 230, size: 128, elements: !364)
!363 = !DIFile(filename: "./include/linux/sysfs.h", directory: "/home/lizy2001/genbc/linux")
!364 = !{!365, !381}
!365 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !362, file: !363, line: 231, baseType: !366, size: 64)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DISubroutineType(types: !368)
!368 = !{!369, !290, !374, !338}
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !227, line: 60, baseType: !370)
!370 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ssize_t", file: !371, line: 73, baseType: !372)
!371 = !DIFile(filename: "./include/uapi/asm-generic/posix_types.h", directory: "/home/lizy2001/genbc/linux")
!372 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_long_t", file: !371, line: 15, baseType: !373)
!373 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !375, size: 64)
!375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute", file: !363, line: 30, size: 128, elements: !376)
!376 = !{!377, !378}
!377 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !375, file: !363, line: 31, baseType: !280, size: 64)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !375, file: !363, line: 32, baseType: !379, size: 16, offset: 64)
!379 = !DIDerivedType(tag: DW_TAG_typedef, name: "umode_t", file: !227, line: 19, baseType: !380)
!380 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !362, file: !363, line: 232, baseType: !382, size: 64, offset: 64)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DISubroutineType(types: !384)
!384 = !{!369, !290, !374, !280, !385}
!385 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !227, line: 55, baseType: !386)
!386 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_size_t", file: !371, line: 72, baseType: !387)
!387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_ulong_t", file: !371, line: 16, baseType: !388)
!388 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "default_attrs", scope: !353, file: !277, line: 141, baseType: !390, size: 64, offset: 128)
!390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !374, size: 64)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "default_groups", scope: !353, file: !277, line: 142, baseType: !392, size: 64, offset: 192)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !395)
!395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attribute_group", file: !363, line: 84, size: 320, elements: !396)
!396 = !{!397, !398, !402, !3327, !3328}
!397 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !395, file: !363, line: 85, baseType: !280, size: 64)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "is_visible", scope: !395, file: !363, line: 86, baseType: !399, size: 64, offset: 64)
!399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !400, size: 64)
!400 = !DISubroutineType(types: !401)
!401 = !{!379, !290, !374, !234}
!402 = !DIDerivedType(tag: DW_TAG_member, name: "is_bin_visible", scope: !395, file: !363, line: 88, baseType: !403, size: 64, offset: 128)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 64)
!404 = !DISubroutineType(types: !405)
!405 = !{!379, !290, !406, !234}
!406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bin_attribute", file: !363, line: 168, size: 448, elements: !408)
!408 = !{!409, !410, !411, !412, !3322, !3323}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !407, file: !363, line: 169, baseType: !375, size: 128)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !407, file: !363, line: 170, baseType: !385, size: 64, offset: 128)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !407, file: !363, line: 171, baseType: !228, size: 64, offset: 192)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !407, file: !363, line: 172, baseType: !413, size: 64, offset: 256)
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DISubroutineType(types: !415)
!415 = !{!369, !416, !290, !406, !338, !593, !385}
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file", file: !44, line: 916, size: 1856, align: 32, elements: !418)
!418 = !{!419, !437, !3287, !3288, !3289, !3290, !3291, !3292, !3293, !3294, !3295, !3296, !3305, !3306, !3315, !3316, !3317, !3318, !3319, !3320, !3321}
!419 = !DIDerivedType(tag: DW_TAG_member, name: "f_u", scope: !417, file: !44, line: 920, baseType: !420, size: 128)
!420 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !417, file: !44, line: 917, size: 128, elements: !421)
!421 = !{!422, !428}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "fu_llist", scope: !420, file: !44, line: 918, baseType: !423, size: 64)
!423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "llist_node", file: !424, line: 58, size: 64, elements: !425)
!424 = !DIFile(filename: "./include/linux/llist.h", directory: "/home/lizy2001/genbc/linux")
!425 = !{!426}
!426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !423, file: !424, line: 59, baseType: !427, size: 64)
!427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !423, size: 64)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "fu_rcuhead", scope: !420, file: !44, line: 919, baseType: !429, size: 128, align: 64)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "callback_head", file: !227, line: 216, size: 128, align: 64, elements: !430)
!430 = !{!431, !433}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !429, file: !227, line: 217, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !429, size: 64)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !429, file: !227, line: 218, baseType: !434, size: 64, offset: 64)
!434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !435, size: 64)
!435 = !DISubroutineType(types: !436)
!436 = !{null, !432}
!437 = !DIDerivedType(tag: DW_TAG_member, name: "f_path", scope: !417, file: !44, line: 921, baseType: !438, size: 128, offset: 128)
!438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "path", file: !439, line: 8, size: 128, elements: !440)
!439 = !DIFile(filename: "./include/linux/path.h", directory: "/home/lizy2001/genbc/linux")
!440 = !{!441, !445}
!441 = !DIDerivedType(tag: DW_TAG_member, name: "mnt", scope: !438, file: !439, line: 9, baseType: !442, size: 64)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "vfsmount", file: !444, line: 18, flags: DIFlagFwdDecl)
!444 = !DIFile(filename: "./include/linux/dcache.h", directory: "/home/lizy2001/genbc/linux")
!445 = !DIDerivedType(tag: DW_TAG_member, name: "dentry", scope: !438, file: !439, line: 10, baseType: !446, size: 64, offset: 64)
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry", file: !444, line: 89, size: 1536, elements: !448)
!448 = !{!449, !450, !460, !468, !469, !492, !3255, !3257, !3269, !3270, !3271, !3272, !3273, !3279, !3280, !3281}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "d_flags", scope: !447, file: !444, line: 91, baseType: !7, size: 32)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "d_seq", scope: !447, file: !444, line: 92, baseType: !451, size: 32, offset: 32)
!451 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_spinlock_t", file: !452, line: 277, baseType: !453)
!452 = !DIFile(filename: "./include/linux/seqlock.h", directory: "/home/lizy2001/genbc/linux")
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_spinlock", file: !452, line: 277, size: 32, elements: !454)
!454 = !{!455}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !453, file: !452, line: 277, baseType: !456, size: 32)
!456 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_t", file: !452, line: 70, baseType: !457)
!457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount", file: !452, line: 65, size: 32, elements: !458)
!458 = !{!459}
!459 = !DIDerivedType(tag: DW_TAG_member, name: "sequence", scope: !457, file: !452, line: 66, baseType: !7, size: 32)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !447, file: !444, line: 93, baseType: !461, size: 128, offset: 64)
!461 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_node", file: !462, line: 38, size: 128, elements: !463)
!462 = !DIFile(filename: "./include/linux/list_bl.h", directory: "/home/lizy2001/genbc/linux")
!463 = !{!464, !466}
!464 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !461, file: !462, line: 39, baseType: !465, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !461, size: 64)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !461, file: !462, line: 39, baseType: !467, size: 64, offset: 64)
!467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !465, size: 64)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "d_parent", scope: !447, file: !444, line: 94, baseType: !446, size: 64, offset: 192)
!469 = !DIDerivedType(tag: DW_TAG_member, name: "d_name", scope: !447, file: !444, line: 95, baseType: !470, size: 128, offset: 256)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qstr", file: !444, line: 47, size: 128, elements: !471)
!471 = !{!472, !488}
!472 = !DIDerivedType(tag: DW_TAG_member, scope: !470, file: !444, line: 48, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !470, file: !444, line: 48, size: 64, elements: !474)
!474 = !{!475, !484}
!475 = !DIDerivedType(tag: DW_TAG_member, scope: !473, file: !444, line: 49, baseType: !476, size: 64)
!476 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !473, file: !444, line: 49, size: 64, elements: !477)
!477 = !{!478, !483}
!478 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !476, file: !444, line: 50, baseType: !479, size: 32)
!479 = !DIDerivedType(tag: DW_TAG_typedef, name: "u32", file: !480, line: 21, baseType: !481)
!480 = !DIFile(filename: "./include/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!481 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u32", file: !482, line: 27, baseType: !7)
!482 = !DIFile(filename: "./include/uapi/asm-generic/int-ll64.h", directory: "/home/lizy2001/genbc/linux")
!483 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !476, file: !444, line: 50, baseType: !479, size: 32, offset: 32)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "hash_len", scope: !473, file: !444, line: 52, baseType: !485, size: 64)
!485 = !DIDerivedType(tag: DW_TAG_typedef, name: "u64", file: !480, line: 23, baseType: !486)
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u64", file: !482, line: 31, baseType: !487)
!487 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !470, file: !444, line: 54, baseType: !489, size: 64, offset: 64)
!489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!490 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !491)
!491 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "d_inode", scope: !447, file: !444, line: 96, baseType: !493, size: 64, offset: 384)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode", file: !44, line: 610, size: 4224, elements: !495)
!495 = !{!496, !497, !498, !506, !513, !514, !660, !2959, !2960, !2961, !2967, !2968, !2969, !2970, !2971, !2972, !2973, !2974, !2975, !2976, !2977, !2978, !2979, !2980, !2981, !2982, !2983, !2984, !2985, !2986, !2991, !2992, !2993, !2994, !2995, !2996, !2997, !3223, !3231, !3232, !3233, !3251, !3252, !3253, !3254}
!496 = !DIDerivedType(tag: DW_TAG_member, name: "i_mode", scope: !494, file: !44, line: 611, baseType: !379, size: 16)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "i_opflags", scope: !494, file: !44, line: 612, baseType: !380, size: 16, offset: 16)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "i_uid", scope: !494, file: !44, line: 613, baseType: !499, size: 32, offset: 32)
!499 = !DIDerivedType(tag: DW_TAG_typedef, name: "kuid_t", file: !500, line: 23, baseType: !501)
!500 = !DIFile(filename: "./include/linux/uidgid.h", directory: "/home/lizy2001/genbc/linux")
!501 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 21, size: 32, elements: !502)
!502 = !{!503}
!503 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !501, file: !500, line: 22, baseType: !504, size: 32)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "uid_t", file: !227, line: 32, baseType: !505)
!505 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_uid32_t", file: !371, line: 49, baseType: !7)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "i_gid", scope: !494, file: !44, line: 614, baseType: !507, size: 32, offset: 64)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "kgid_t", file: !500, line: 28, baseType: !508)
!508 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !500, line: 26, size: 32, elements: !509)
!509 = !{!510}
!510 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !508, file: !500, line: 27, baseType: !511, size: 32)
!511 = !DIDerivedType(tag: DW_TAG_typedef, name: "gid_t", file: !227, line: 33, baseType: !512)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_gid32_t", file: !371, line: 50, baseType: !7)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !494, file: !44, line: 615, baseType: !7, size: 32, offset: 96)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "i_op", scope: !494, file: !44, line: 622, baseType: !515, size: 64, offset: 128)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!517 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "inode_operations", file: !44, line: 1864, size: 1536, align: 512, elements: !518)
!518 = !{!519, !523, !536, !540, !546, !550, !554, !558, !562, !566, !570, !571, !577, !581, !607, !636, !640, !646, !651, !655, !656}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "lookup", scope: !517, file: !44, line: 1865, baseType: !520, size: 64)
!520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !521, size: 64)
!521 = !DISubroutineType(types: !522)
!522 = !{!446, !493, !446, !7}
!523 = !DIDerivedType(tag: DW_TAG_member, name: "get_link", scope: !517, file: !44, line: 1866, baseType: !524, size: 64, offset: 64)
!524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !525, size: 64)
!525 = !DISubroutineType(types: !526)
!526 = !{!280, !446, !493, !527}
!527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !528, size: 64)
!528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "delayed_call", file: !529, line: 10, size: 128, elements: !530)
!529 = !DIFile(filename: "./include/linux/delayed_call.h", directory: "/home/lizy2001/genbc/linux")
!530 = !{!531, !535}
!531 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !528, file: !529, line: 11, baseType: !532, size: 64)
!532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !533, size: 64)
!533 = !DISubroutineType(types: !534)
!534 = !{null, !228}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "arg", scope: !528, file: !529, line: 12, baseType: !228, size: 64, offset: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "permission", scope: !517, file: !44, line: 1867, baseType: !537, size: 64, offset: 128)
!537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !538, size: 64)
!538 = !DISubroutineType(types: !539)
!539 = !{!234, !493, !234}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "get_acl", scope: !517, file: !44, line: 1868, baseType: !541, size: 64, offset: 192)
!541 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !542, size: 64)
!542 = !DISubroutineType(types: !543)
!543 = !{!544, !493, !234}
!544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !545, size: 64)
!545 = !DICompositeType(tag: DW_TAG_structure_type, name: "posix_acl", file: !44, line: 581, flags: DIFlagFwdDecl)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "readlink", scope: !517, file: !44, line: 1870, baseType: !547, size: 64, offset: 256)
!547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !548, size: 64)
!548 = !DISubroutineType(types: !549)
!549 = !{!234, !446, !338, !234}
!550 = !DIDerivedType(tag: DW_TAG_member, name: "create", scope: !517, file: !44, line: 1872, baseType: !551, size: 64, offset: 320)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DISubroutineType(types: !553)
!553 = !{!234, !493, !446, !379, !261}
!554 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !517, file: !44, line: 1873, baseType: !555, size: 64, offset: 384)
!555 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !556, size: 64)
!556 = !DISubroutineType(types: !557)
!557 = !{!234, !446, !493, !446}
!558 = !DIDerivedType(tag: DW_TAG_member, name: "unlink", scope: !517, file: !44, line: 1874, baseType: !559, size: 64, offset: 448)
!559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !560, size: 64)
!560 = !DISubroutineType(types: !561)
!561 = !{!234, !493, !446}
!562 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !517, file: !44, line: 1875, baseType: !563, size: 64, offset: 512)
!563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !564, size: 64)
!564 = !DISubroutineType(types: !565)
!565 = !{!234, !493, !446, !280}
!566 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !517, file: !44, line: 1876, baseType: !567, size: 64, offset: 576)
!567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !568, size: 64)
!568 = !DISubroutineType(types: !569)
!569 = !{!234, !493, !446, !379}
!570 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !517, file: !44, line: 1877, baseType: !559, size: 64, offset: 640)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "mknod", scope: !517, file: !44, line: 1878, baseType: !572, size: 64, offset: 704)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = !DISubroutineType(types: !574)
!574 = !{!234, !493, !446, !379, !575}
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "dev_t", file: !227, line: 16, baseType: !576)
!576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_dev_t", file: !227, line: 13, baseType: !479)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !517, file: !44, line: 1879, baseType: !578, size: 64, offset: 768)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = !DISubroutineType(types: !580)
!580 = !{!234, !493, !446, !493, !446, !7}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "setattr", scope: !517, file: !44, line: 1881, baseType: !582, size: 64, offset: 832)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = !DISubroutineType(types: !584)
!584 = !{!234, !446, !585}
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !586, size: 64)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iattr", file: !44, line: 219, size: 640, elements: !587)
!587 = !{!588, !589, !590, !591, !592, !596, !604, !605, !606}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "ia_valid", scope: !586, file: !44, line: 220, baseType: !7, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mode", scope: !586, file: !44, line: 221, baseType: !379, size: 16, offset: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ia_uid", scope: !586, file: !44, line: 222, baseType: !499, size: 32, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "ia_gid", scope: !586, file: !44, line: 223, baseType: !507, size: 32, offset: 96)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "ia_size", scope: !586, file: !44, line: 224, baseType: !593, size: 64, offset: 128)
!593 = !DIDerivedType(tag: DW_TAG_typedef, name: "loff_t", file: !227, line: 46, baseType: !594)
!594 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_loff_t", file: !371, line: 88, baseType: !595)
!595 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "ia_atime", scope: !586, file: !44, line: 225, baseType: !597, size: 128, offset: 192)
!597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timespec64", file: !598, line: 13, size: 128, elements: !599)
!598 = !DIFile(filename: "./include/linux/time64.h", directory: "/home/lizy2001/genbc/linux")
!599 = !{!600, !603}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !597, file: !598, line: 14, baseType: !601, size: 64)
!601 = !DIDerivedType(tag: DW_TAG_typedef, name: "time64_t", file: !598, line: 8, baseType: !602)
!602 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s64", file: !482, line: 30, baseType: !595)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !597, file: !598, line: 15, baseType: !373, size: 64, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "ia_mtime", scope: !586, file: !44, line: 226, baseType: !597, size: 128, offset: 320)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "ia_ctime", scope: !586, file: !44, line: 227, baseType: !597, size: 128, offset: 448)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "ia_file", scope: !586, file: !44, line: 234, baseType: !416, size: 64, offset: 576)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "getattr", scope: !517, file: !44, line: 1882, baseType: !608, size: 64, offset: 896)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = !DISubroutineType(types: !610)
!610 = !{!234, !611, !613, !479, !7}
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !438)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kstat", file: !615, line: 22, size: 1152, elements: !616)
!615 = !DIFile(filename: "./include/linux/stat.h", directory: "/home/lizy2001/genbc/linux")
!616 = !{!617, !618, !619, !620, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635}
!617 = !DIDerivedType(tag: DW_TAG_member, name: "result_mask", scope: !614, file: !615, line: 23, baseType: !479, size: 32)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !614, file: !615, line: 24, baseType: !379, size: 16, offset: 32)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "nlink", scope: !614, file: !615, line: 25, baseType: !7, size: 32, offset: 64)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "blksize", scope: !614, file: !615, line: 26, baseType: !621, size: 32, offset: 96)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !227, line: 104, baseType: !479)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !614, file: !615, line: 27, baseType: !485, size: 64, offset: 128)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "attributes_mask", scope: !614, file: !615, line: 28, baseType: !485, size: 64, offset: 192)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !614, file: !615, line: 37, baseType: !485, size: 64, offset: 256)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !614, file: !615, line: 38, baseType: !575, size: 32, offset: 320)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "rdev", scope: !614, file: !615, line: 39, baseType: !575, size: 32, offset: 352)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !614, file: !615, line: 40, baseType: !499, size: 32, offset: 384)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !614, file: !615, line: 41, baseType: !507, size: 32, offset: 416)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !614, file: !615, line: 42, baseType: !593, size: 64, offset: 448)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "atime", scope: !614, file: !615, line: 43, baseType: !597, size: 128, offset: 512)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "mtime", scope: !614, file: !615, line: 44, baseType: !597, size: 128, offset: 640)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !614, file: !615, line: 45, baseType: !597, size: 128, offset: 768)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "btime", scope: !614, file: !615, line: 46, baseType: !597, size: 128, offset: 896)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !614, file: !615, line: 47, baseType: !485, size: 64, offset: 1024)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "mnt_id", scope: !614, file: !615, line: 48, baseType: !485, size: 64, offset: 1088)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "listxattr", scope: !517, file: !44, line: 1883, baseType: !637, size: 64, offset: 960)
!637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !638, size: 64)
!638 = !DISubroutineType(types: !639)
!639 = !{!369, !446, !338, !385}
!640 = !DIDerivedType(tag: DW_TAG_member, name: "fiemap", scope: !517, file: !44, line: 1884, baseType: !641, size: 64, offset: 1024)
!641 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !642, size: 64)
!642 = !DISubroutineType(types: !643)
!643 = !{!234, !493, !644, !485, !485}
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DICompositeType(tag: DW_TAG_structure_type, name: "fiemap_extent_info", file: !44, line: 50, flags: DIFlagFwdDecl)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "update_time", scope: !517, file: !44, line: 1886, baseType: !647, size: 64, offset: 1088)
!647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !648, size: 64)
!648 = !DISubroutineType(types: !649)
!649 = !{!234, !493, !650, !234}
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !597, size: 64)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_open", scope: !517, file: !44, line: 1887, baseType: !652, size: 64, offset: 1152)
!652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !653, size: 64)
!653 = !DISubroutineType(types: !654)
!654 = !{!234, !493, !446, !416, !7, !379}
!655 = !DIDerivedType(tag: DW_TAG_member, name: "tmpfile", scope: !517, file: !44, line: 1890, baseType: !567, size: 64, offset: 1216)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "set_acl", scope: !517, file: !44, line: 1891, baseType: !657, size: 64, offset: 1280)
!657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !658, size: 64)
!658 = !DISubroutineType(types: !659)
!659 = !{!234, !493, !544, !234}
!660 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb", scope: !494, file: !44, line: 623, baseType: !661, size: 64, offset: 192)
!661 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !662, size: 64)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_block", file: !44, line: 1416, size: 9472, elements: !663)
!663 = !{!664, !665, !666, !667, !668, !669, !719, !2566, !2648, !2731, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2747, !2751, !2752, !2755, !2756, !2759, !2760, !2761, !2802, !2829, !2830, !2831, !2832, !2833, !2834, !2837, !2839, !2846, !2847, !2849, !2850, !2851, !2910, !2911, !2926, !2927, !2928, !2929, !2930, !2933, !2934, !2935, !2950, !2951, !2952, !2953, !2954, !2955, !2956, !2957, !2958}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "s_list", scope: !662, file: !44, line: 1417, baseType: !284, size: 128)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "s_dev", scope: !662, file: !44, line: 1418, baseType: !575, size: 32, offset: 128)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize_bits", scope: !662, file: !44, line: 1419, baseType: !491, size: 8, offset: 160)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "s_blocksize", scope: !662, file: !44, line: 1420, baseType: !388, size: 64, offset: 192)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "s_maxbytes", scope: !662, file: !44, line: 1421, baseType: !593, size: 64, offset: 256)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "s_type", scope: !662, file: !44, line: 1422, baseType: !670, size: 64, offset: 320)
!670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !671, size: 64)
!671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_system_type", file: !44, line: 2228, size: 576, elements: !672)
!672 = !{!673, !674, !675, !682, !686, !690, !694, !698, !699, !709, !712, !713, !714, !716, !717, !718}
!673 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !671, file: !44, line: 2229, baseType: !280, size: 64)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "fs_flags", scope: !671, file: !44, line: 2230, baseType: !234, size: 32, offset: 64)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "init_fs_context", scope: !671, file: !44, line: 2238, baseType: !676, size: 64, offset: 128)
!676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !677, size: 64)
!677 = !DISubroutineType(types: !678)
!678 = !{!234, !679}
!679 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !680, size: 64)
!680 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_context", file: !681, line: 28, flags: DIFlagFwdDecl)
!681 = !DIFile(filename: "./include/linux/kernfs.h", directory: "/home/lizy2001/genbc/linux")
!682 = !DIDerivedType(tag: DW_TAG_member, name: "parameters", scope: !671, file: !44, line: 2239, baseType: !683, size: 64, offset: 192)
!683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !684, size: 64)
!684 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !685)
!685 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_parameter_spec", file: !44, line: 70, flags: DIFlagFwdDecl)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "mount", scope: !671, file: !44, line: 2240, baseType: !687, size: 64, offset: 256)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = !DISubroutineType(types: !689)
!689 = !{!446, !670, !234, !280, !228}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "kill_sb", scope: !671, file: !44, line: 2242, baseType: !691, size: 64, offset: 320)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DISubroutineType(types: !693)
!693 = !{null, !661}
!694 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !671, file: !44, line: 2243, baseType: !695, size: 64, offset: 384)
!695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !696, size: 64)
!696 = !DICompositeType(tag: DW_TAG_structure_type, name: "module", file: !697, line: 76, flags: DIFlagFwdDecl)
!697 = !DIFile(filename: "./arch/x86/include/asm/alternative.h", directory: "/home/lizy2001/genbc/linux")
!698 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !671, file: !44, line: 2244, baseType: !670, size: 64, offset: 448)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "fs_supers", scope: !671, file: !44, line: 2245, baseType: !700, size: 64, offset: 512)
!700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_head", file: !227, line: 182, size: 64, elements: !701)
!701 = !{!702}
!702 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !700, file: !227, line: 183, baseType: !703, size: 64)
!703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_node", file: !227, line: 186, size: 128, elements: !705)
!705 = !{!706, !707}
!706 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !704, file: !227, line: 187, baseType: !703, size: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "pprev", scope: !704, file: !227, line: 187, baseType: !708, size: 64, offset: 64)
!708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !703, size: 64)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "s_lock_key", scope: !671, file: !44, line: 2247, baseType: !710, offset: 576)
!710 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_class_key", file: !711, line: 187, elements: !311)
!711 = !DIFile(filename: "./include/linux/lockdep_types.h", directory: "/home/lizy2001/genbc/linux")
!712 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount_key", scope: !671, file: !44, line: 2248, baseType: !710, offset: 576)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_key", scope: !671, file: !44, line: 2249, baseType: !710, offset: 576)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers_key", scope: !671, file: !44, line: 2250, baseType: !715, offset: 576)
!715 = !DICompositeType(tag: DW_TAG_array_type, baseType: !710, elements: !339)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock_key", scope: !671, file: !44, line: 2252, baseType: !710, offset: 576)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_key", scope: !671, file: !44, line: 2253, baseType: !710, offset: 576)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "i_mutex_dir_key", scope: !671, file: !44, line: 2254, baseType: !710, offset: 576)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "s_op", scope: !662, file: !44, line: 1423, baseType: !720, size: 64, offset: 384)
!720 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !721, size: 64)
!721 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !722)
!722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "super_operations", file: !44, line: 1935, size: 1472, elements: !723)
!723 = !{!724, !728, !732, !733, !737, !743, !747, !748, !749, !753, !757, !758, !759, !760, !766, !771, !772, !828, !829, !830, !831, !2550, !2565}
!724 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_inode", scope: !722, file: !44, line: 1936, baseType: !725, size: 64)
!725 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !726, size: 64)
!726 = !DISubroutineType(types: !727)
!727 = !{!493, !661}
!728 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_inode", scope: !722, file: !44, line: 1937, baseType: !729, size: 64, offset: 64)
!729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !730, size: 64)
!730 = !DISubroutineType(types: !731)
!731 = !{null, !493}
!732 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !722, file: !44, line: 1938, baseType: !729, size: 64, offset: 128)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_inode", scope: !722, file: !44, line: 1940, baseType: !734, size: 64, offset: 192)
!734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !735, size: 64)
!735 = !DISubroutineType(types: !736)
!736 = !{null, !493, !234}
!737 = !DIDerivedType(tag: DW_TAG_member, name: "write_inode", scope: !722, file: !44, line: 1941, baseType: !738, size: 64, offset: 256)
!738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !739, size: 64)
!739 = !DISubroutineType(types: !740)
!740 = !{!234, !493, !741}
!741 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !742, size: 64)
!742 = !DICompositeType(tag: DW_TAG_structure_type, name: "writeback_control", file: !14, line: 40, flags: DIFlagFwdDecl)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "drop_inode", scope: !722, file: !44, line: 1942, baseType: !744, size: 64, offset: 320)
!744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !745, size: 64)
!745 = !DISubroutineType(types: !746)
!746 = !{!234, !493}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "evict_inode", scope: !722, file: !44, line: 1943, baseType: !729, size: 64, offset: 384)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "put_super", scope: !722, file: !44, line: 1944, baseType: !691, size: 64, offset: 448)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "sync_fs", scope: !722, file: !44, line: 1945, baseType: !750, size: 64, offset: 512)
!750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !751, size: 64)
!751 = !DISubroutineType(types: !752)
!752 = !{!234, !661, !234}
!753 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_super", scope: !722, file: !44, line: 1946, baseType: !754, size: 64, offset: 576)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DISubroutineType(types: !756)
!756 = !{!234, !661}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_fs", scope: !722, file: !44, line: 1947, baseType: !754, size: 64, offset: 640)
!758 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_super", scope: !722, file: !44, line: 1948, baseType: !754, size: 64, offset: 704)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "unfreeze_fs", scope: !722, file: !44, line: 1949, baseType: !754, size: 64, offset: 768)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "statfs", scope: !722, file: !44, line: 1950, baseType: !761, size: 64, offset: 832)
!761 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !762, size: 64)
!762 = !DISubroutineType(types: !763)
!763 = !{!234, !446, !764}
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DICompositeType(tag: DW_TAG_structure_type, name: "kstatfs", file: !44, line: 57, flags: DIFlagFwdDecl)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "remount_fs", scope: !722, file: !44, line: 1951, baseType: !767, size: 64, offset: 896)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DISubroutineType(types: !769)
!769 = !{!234, !661, !770, !338}
!770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 64)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "umount_begin", scope: !722, file: !44, line: 1952, baseType: !691, size: 64, offset: 960)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !722, file: !44, line: 1954, baseType: !773, size: 64, offset: 1024)
!773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !774, size: 64)
!774 = !DISubroutineType(types: !775)
!775 = !{!234, !776, !446}
!776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 64)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_file", file: !778, line: 16, size: 896, elements: !779)
!778 = !DIFile(filename: "./include/linux/seq_file.h", directory: "/home/lizy2001/genbc/linux")
!779 = !{!780, !781, !782, !783, !784, !785, !786, !787, !801, !823, !824, !827}
!780 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !777, file: !778, line: 17, baseType: !338, size: 64)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !777, file: !778, line: 18, baseType: !385, size: 64, offset: 64)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !777, file: !778, line: 19, baseType: !385, size: 64, offset: 128)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !777, file: !778, line: 20, baseType: !385, size: 64, offset: 192)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "pad_until", scope: !777, file: !778, line: 21, baseType: !385, size: 64, offset: 256)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !777, file: !778, line: 22, baseType: !593, size: 64, offset: 320)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "read_pos", scope: !777, file: !778, line: 23, baseType: !593, size: 64, offset: 384)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !777, file: !778, line: 24, baseType: !788, size: 192, offset: 448)
!788 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mutex", file: !789, line: 53, size: 192, elements: !790)
!789 = !DIFile(filename: "./include/linux/mutex.h", directory: "/home/lizy2001/genbc/linux")
!790 = !{!791, !799, !800}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !788, file: !789, line: 54, baseType: !792, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_long_t", file: !793, line: 13, baseType: !794)
!793 = !DIFile(filename: "./include/asm-generic/atomic-long.h", directory: "/home/lizy2001/genbc/linux")
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic64_t", file: !227, line: 175, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !227, line: 173, size: 64, elements: !796)
!796 = !{!797}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !795, file: !227, line: 174, baseType: !798, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_typedef, name: "s64", file: !480, line: 22, baseType: !602)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !788, file: !789, line: 55, baseType: !297, offset: 64)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !788, file: !789, line: 59, baseType: !284, size: 128, offset: 64)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !777, file: !778, line: 25, baseType: !802, size: 64, offset: 640)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !804)
!804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seq_operations", file: !778, line: 31, size: 256, elements: !805)
!805 = !{!806, !811, !815, !819}
!806 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !804, file: !778, line: 32, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !808, size: 64)
!808 = !DISubroutineType(types: !809)
!809 = !{!228, !776, !810}
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !804, file: !778, line: 33, baseType: !812, size: 64, offset: 64)
!812 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !813, size: 64)
!813 = !DISubroutineType(types: !814)
!814 = !{null, !776, !228}
!815 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !804, file: !778, line: 34, baseType: !816, size: 64, offset: 128)
!816 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !817, size: 64)
!817 = !DISubroutineType(types: !818)
!818 = !{!228, !776, !228, !810}
!819 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !804, file: !778, line: 35, baseType: !820, size: 64, offset: 192)
!820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !821, size: 64)
!821 = !DISubroutineType(types: !822)
!822 = !{!234, !776, !228}
!823 = !DIDerivedType(tag: DW_TAG_member, name: "poll_event", scope: !777, file: !778, line: 26, baseType: !234, size: 32, offset: 704)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !777, file: !778, line: 27, baseType: !825, size: 64, offset: 768)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !826, size: 64)
!826 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !417)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !777, file: !778, line: 28, baseType: !228, size: 64, offset: 832)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "show_devname", scope: !722, file: !44, line: 1955, baseType: !773, size: 64, offset: 1088)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !722, file: !44, line: 1956, baseType: !773, size: 64, offset: 1152)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "show_stats", scope: !722, file: !44, line: 1957, baseType: !773, size: 64, offset: 1216)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "bdev_try_to_free_page", scope: !722, file: !44, line: 1963, baseType: !832, size: 64, offset: 1280)
!832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !833, size: 64)
!833 = !DISubroutineType(types: !834)
!834 = !{!234, !661, !835, !226}
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page", file: !837, line: 68, size: 512, align: 128, elements: !838)
!837 = !DIFile(filename: "./include/linux/mm_types.h", directory: "/home/lizy2001/genbc/linux")
!838 = !{!839, !840, !2542, !2549}
!839 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !836, file: !837, line: 69, baseType: !388, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_member, scope: !836, file: !837, line: 77, baseType: !841, size: 320, offset: 64)
!841 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !836, file: !837, line: 77, size: 320, elements: !842)
!842 = !{!843, !1063, !1068, !1096, !1104, !1110, !2473, !2541}
!843 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !837, line: 78, baseType: !844, size: 320)
!844 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !837, line: 78, size: 320, elements: !845)
!845 = !{!846, !847, !1061, !1062}
!846 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !844, file: !837, line: 84, baseType: !284, size: 128)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !844, file: !837, line: 86, baseType: !848, size: 64, offset: 128)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space", file: !44, line: 451, size: 1216, align: 64, elements: !850)
!850 = !{!851, !852, !859, !860, !865, !880, !889, !890, !891, !892, !1054, !1055, !1058, !1059, !1060}
!851 = !DIDerivedType(tag: DW_TAG_member, name: "host", scope: !849, file: !44, line: 452, baseType: !493, size: 64)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "i_pages", scope: !849, file: !44, line: 453, baseType: !853, size: 128, offset: 64)
!853 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xarray", file: !854, line: 292, size: 128, elements: !855)
!854 = !DIFile(filename: "./include/linux/xarray.h", directory: "/home/lizy2001/genbc/linux")
!855 = !{!856, !857, !858}
!856 = !DIDerivedType(tag: DW_TAG_member, name: "xa_lock", scope: !853, file: !854, line: 293, baseType: !297)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "xa_flags", scope: !853, file: !854, line: 295, baseType: !226, size: 32)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "xa_head", scope: !853, file: !854, line: 296, baseType: !228, size: 64, offset: 64)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !849, file: !44, line: 454, baseType: !226, size: 32, offset: 192)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_writable", scope: !849, file: !44, line: 455, baseType: !861, size: 32, offset: 224)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "atomic_t", file: !227, line: 168, baseType: !862)
!862 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !227, line: 166, size: 32, elements: !863)
!863 = !{!864}
!864 = !DIDerivedType(tag: DW_TAG_member, name: "counter", scope: !862, file: !227, line: 167, baseType: !234, size: 32)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap", scope: !849, file: !44, line: 460, baseType: !866, size: 128, offset: 256)
!866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root_cached", file: !867, line: 125, size: 128, elements: !868)
!867 = !DIFile(filename: "./include/linux/rbtree.h", directory: "/home/lizy2001/genbc/linux")
!868 = !{!869, !879}
!869 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !866, file: !867, line: 126, baseType: !870, size: 64)
!870 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_root", file: !867, line: 31, size: 64, elements: !871)
!871 = !{!872}
!872 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !870, file: !867, line: 32, baseType: !873, size: 64)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rb_node", file: !867, line: 24, size: 192, align: 64, elements: !875)
!875 = !{!876, !877, !878}
!876 = !DIDerivedType(tag: DW_TAG_member, name: "__rb_parent_color", scope: !874, file: !867, line: 25, baseType: !388, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "rb_right", scope: !874, file: !867, line: 26, baseType: !873, size: 64, offset: 64)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "rb_left", scope: !874, file: !867, line: 27, baseType: !873, size: 64, offset: 128)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "rb_leftmost", scope: !866, file: !867, line: 127, baseType: !873, size: 64, offset: 64)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "i_mmap_rwsem", scope: !849, file: !44, line: 461, baseType: !881, size: 256, offset: 384)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rw_semaphore", file: !882, line: 35, size: 256, elements: !883)
!882 = !DIFile(filename: "./include/linux/rwsem.h", directory: "/home/lizy2001/genbc/linux")
!883 = !{!884, !885, !886, !888}
!884 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !881, file: !882, line: 36, baseType: !792, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !881, file: !882, line: 42, baseType: !792, size: 64, offset: 64)
!886 = !DIDerivedType(tag: DW_TAG_member, name: "wait_lock", scope: !881, file: !882, line: 46, baseType: !887, offset: 128)
!887 = !DIDerivedType(tag: DW_TAG_typedef, name: "raw_spinlock_t", file: !298, line: 29, baseType: !305)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "wait_list", scope: !881, file: !882, line: 47, baseType: !284, size: 128, offset: 128)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "nrpages", scope: !849, file: !44, line: 462, baseType: !388, size: 64, offset: 640)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "nrexceptional", scope: !849, file: !44, line: 463, baseType: !388, size: 64, offset: 704)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "writeback_index", scope: !849, file: !44, line: 464, baseType: !388, size: 64, offset: 768)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "a_ops", scope: !849, file: !44, line: 465, baseType: !893, size: 64, offset: 832)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !895)
!895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "address_space_operations", file: !44, line: 367, size: 1408, elements: !896)
!896 = !{!897, !901, !905, !909, !913, !917, !923, !929, !933, !938, !942, !946, !950, !1018, !1022, !1028, !1029, !1030, !1034, !1039, !1043, !1050}
!897 = !DIDerivedType(tag: DW_TAG_member, name: "writepage", scope: !895, file: !44, line: 368, baseType: !898, size: 64)
!898 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!899 = !DISubroutineType(types: !900)
!900 = !{!234, !835, !741}
!901 = !DIDerivedType(tag: DW_TAG_member, name: "readpage", scope: !895, file: !44, line: 369, baseType: !902, size: 64, offset: 64)
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = !DISubroutineType(types: !904)
!904 = !{!234, !416, !835}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "writepages", scope: !895, file: !44, line: 372, baseType: !906, size: 64, offset: 128)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{!234, !848, !741}
!909 = !DIDerivedType(tag: DW_TAG_member, name: "set_page_dirty", scope: !895, file: !44, line: 375, baseType: !910, size: 64, offset: 192)
!910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !911, size: 64)
!911 = !DISubroutineType(types: !912)
!912 = !{!234, !835}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "readpages", scope: !895, file: !44, line: 381, baseType: !914, size: 64, offset: 256)
!914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !915, size: 64)
!915 = !DISubroutineType(types: !916)
!916 = !{!234, !416, !848, !287, !7}
!917 = !DIDerivedType(tag: DW_TAG_member, name: "readahead", scope: !895, file: !44, line: 383, baseType: !918, size: 64, offset: 320)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !921}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = !DICompositeType(tag: DW_TAG_structure_type, name: "readahead_control", file: !44, line: 290, flags: DIFlagFwdDecl)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "write_begin", scope: !895, file: !44, line: 385, baseType: !924, size: 64, offset: 384)
!924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !925, size: 64)
!925 = !DISubroutineType(types: !926)
!926 = !{!234, !416, !848, !593, !7, !7, !927, !928}
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !835, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !228, size: 64)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "write_end", scope: !895, file: !44, line: 388, baseType: !930, size: 64, offset: 448)
!930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !931, size: 64)
!931 = !DISubroutineType(types: !932)
!932 = !{!234, !416, !848, !593, !7, !7, !835, !228}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "bmap", scope: !895, file: !44, line: 393, baseType: !934, size: 64, offset: 512)
!934 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !935, size: 64)
!935 = !DISubroutineType(types: !936)
!936 = !{!937, !848, !937}
!937 = !DIDerivedType(tag: DW_TAG_typedef, name: "sector_t", file: !227, line: 125, baseType: !485)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "invalidatepage", scope: !895, file: !44, line: 394, baseType: !939, size: 64, offset: 576)
!939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !940, size: 64)
!940 = !DISubroutineType(types: !941)
!941 = !{null, !835, !7, !7}
!942 = !DIDerivedType(tag: DW_TAG_member, name: "releasepage", scope: !895, file: !44, line: 395, baseType: !943, size: 64, offset: 640)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DISubroutineType(types: !945)
!945 = !{!234, !835, !226}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "freepage", scope: !895, file: !44, line: 396, baseType: !947, size: 64, offset: 704)
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = !DISubroutineType(types: !949)
!949 = !{null, !835}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "direct_IO", scope: !895, file: !44, line: 397, baseType: !951, size: 64, offset: 768)
!951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !952, size: 64)
!952 = !DISubroutineType(types: !953)
!953 = !{!369, !954, !976}
!954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !955, size: 64)
!955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kiocb", file: !44, line: 320, size: 384, elements: !956)
!956 = !{!957, !958, !959, !963, !964, !965, !968, !969}
!957 = !DIDerivedType(tag: DW_TAG_member, name: "ki_filp", scope: !955, file: !44, line: 321, baseType: !416, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "ki_pos", scope: !955, file: !44, line: 326, baseType: !593, size: 64, offset: 64)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "ki_complete", scope: !955, file: !44, line: 327, baseType: !960, size: 64, offset: 128)
!960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !961, size: 64)
!961 = !DISubroutineType(types: !962)
!962 = !{null, !954, !373, !373}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !955, file: !44, line: 328, baseType: !228, size: 64, offset: 192)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "ki_flags", scope: !955, file: !44, line: 329, baseType: !234, size: 32, offset: 256)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ki_hint", scope: !955, file: !44, line: 330, baseType: !966, size: 16, offset: 288)
!966 = !DIDerivedType(tag: DW_TAG_typedef, name: "u16", file: !480, line: 19, baseType: !967)
!967 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u16", file: !482, line: 24, baseType: !380)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "ki_ioprio", scope: !955, file: !44, line: 331, baseType: !966, size: 16, offset: 304)
!969 = !DIDerivedType(tag: DW_TAG_member, scope: !955, file: !44, line: 332, baseType: !970, size: 64, offset: 320)
!970 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !955, file: !44, line: 332, size: 64, elements: !971)
!971 = !{!972, !973}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "ki_cookie", scope: !970, file: !44, line: 333, baseType: !7, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "ki_waitq", scope: !970, file: !44, line: 334, baseType: !974, size: 64)
!974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !975, size: 64)
!975 = !DICompositeType(tag: DW_TAG_structure_type, name: "wait_page_queue", file: !44, line: 334, flags: DIFlagFwdDecl)
!976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !977, size: 64)
!977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iov_iter", file: !978, line: 29, size: 320, elements: !979)
!978 = !DIFile(filename: "./include/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!979 = !{!980, !981, !982, !983, !1009}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !977, file: !978, line: 35, baseType: !7, size: 32)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "iov_offset", scope: !977, file: !978, line: 36, baseType: !385, size: 64, offset: 64)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !977, file: !978, line: 37, baseType: !385, size: 64, offset: 128)
!983 = !DIDerivedType(tag: DW_TAG_member, scope: !977, file: !978, line: 38, baseType: !984, size: 64, offset: 192)
!984 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !977, file: !978, line: 38, size: 64, elements: !985)
!985 = !{!986, !994, !1001, !1005}
!986 = !DIDerivedType(tag: DW_TAG_member, name: "iov", scope: !984, file: !978, line: 39, baseType: !987, size: 64)
!987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !988, size: 64)
!988 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !989)
!989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "iovec", file: !990, line: 17, size: 128, elements: !991)
!990 = !DIFile(filename: "./include/uapi/linux/uio.h", directory: "/home/lizy2001/genbc/linux")
!991 = !{!992, !993}
!992 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !989, file: !990, line: 19, baseType: !228, size: 64)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !989, file: !990, line: 20, baseType: !386, size: 64, offset: 64)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "kvec", scope: !984, file: !978, line: 40, baseType: !995, size: 64)
!995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !996, size: 64)
!996 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !997)
!997 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kvec", file: !978, line: 15, size: 128, elements: !998)
!998 = !{!999, !1000}
!999 = !DIDerivedType(tag: DW_TAG_member, name: "iov_base", scope: !997, file: !978, line: 16, baseType: !228, size: 64)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "iov_len", scope: !997, file: !978, line: 17, baseType: !385, size: 64, offset: 64)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "bvec", scope: !984, file: !978, line: 41, baseType: !1002, size: 64)
!1002 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1003, size: 64)
!1003 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1004)
!1004 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_vec", file: !978, line: 41, flags: DIFlagFwdDecl)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "pipe", scope: !984, file: !978, line: 42, baseType: !1006, size: 64)
!1006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1007, size: 64)
!1007 = !DICompositeType(tag: DW_TAG_structure_type, name: "pipe_inode_info", file: !1008, line: 53, flags: DIFlagFwdDecl)
!1008 = !DIFile(filename: "./include/linux/sched.h", directory: "/home/lizy2001/genbc/linux")
!1009 = !DIDerivedType(tag: DW_TAG_member, scope: !977, file: !978, line: 44, baseType: !1010, size: 64, offset: 256)
!1010 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !977, file: !978, line: 44, size: 64, elements: !1011)
!1011 = !{!1012, !1013}
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "nr_segs", scope: !1010, file: !978, line: 45, baseType: !388, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, scope: !1010, file: !978, line: 46, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1010, file: !978, line: 46, size: 64, elements: !1015)
!1015 = !{!1016, !1017}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1014, file: !978, line: 47, baseType: !7, size: 32)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "start_head", scope: !1014, file: !978, line: 48, baseType: !7, size: 32, offset: 32)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "migratepage", scope: !895, file: !44, line: 402, baseType: !1019, size: 64, offset: 832)
!1019 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1020, size: 64)
!1020 = !DISubroutineType(types: !1021)
!1021 = !{!234, !848, !835, !835, !5}
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "isolate_page", scope: !895, file: !44, line: 404, baseType: !1023, size: 64, offset: 896)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = !DISubroutineType(types: !1025)
!1025 = !{!261, !835, !1026}
!1026 = !DIDerivedType(tag: DW_TAG_typedef, name: "isolate_mode_t", file: !1027, line: 305, baseType: !7)
!1027 = !DIFile(filename: "./include/linux/mmzone.h", directory: "/home/lizy2001/genbc/linux")
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "putback_page", scope: !895, file: !44, line: 405, baseType: !947, size: 64, offset: 960)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "launder_page", scope: !895, file: !44, line: 406, baseType: !910, size: 64, offset: 1024)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "is_partially_uptodate", scope: !895, file: !44, line: 407, baseType: !1031, size: 64, offset: 1088)
!1031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1032, size: 64)
!1032 = !DISubroutineType(types: !1033)
!1033 = !{!234, !835, !388, !388}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "is_dirty_writeback", scope: !895, file: !44, line: 409, baseType: !1035, size: 64, offset: 1152)
!1035 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1036, size: 64)
!1036 = !DISubroutineType(types: !1037)
!1037 = !{null, !835, !1038, !1038}
!1038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "error_remove_page", scope: !895, file: !44, line: 410, baseType: !1040, size: 64, offset: 1216)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!234, !848, !835}
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "swap_activate", scope: !895, file: !44, line: 413, baseType: !1044, size: 64, offset: 1280)
!1044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1045, size: 64)
!1045 = !DISubroutineType(types: !1046)
!1046 = !{!234, !1047, !416, !1049}
!1047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1048, size: 64)
!1048 = !DICompositeType(tag: DW_TAG_structure_type, name: "swap_info_struct", file: !44, line: 61, flags: DIFlagFwdDecl)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "swap_deactivate", scope: !895, file: !44, line: 415, baseType: !1051, size: 64, offset: 1344)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{null, !416}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !849, file: !44, line: 466, baseType: !388, size: 64, offset: 896)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "wb_err", scope: !849, file: !44, line: 467, baseType: !1056, size: 32, offset: 960)
!1056 = !DIDerivedType(tag: DW_TAG_typedef, name: "errseq_t", file: !1057, line: 8, baseType: !479)
!1057 = !DIFile(filename: "./include/linux/errseq.h", directory: "/home/lizy2001/genbc/linux")
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "private_lock", scope: !849, file: !44, line: 468, baseType: !297, offset: 992)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "private_list", scope: !849, file: !44, line: 469, baseType: !284, size: 128, offset: 1024)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !849, file: !44, line: 470, baseType: !228, size: 64, offset: 1152)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !844, file: !837, line: 87, baseType: !388, size: 64, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !844, file: !837, line: 94, baseType: !388, size: 64, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !837, line: 96, baseType: !1064, size: 64)
!1064 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !837, line: 96, size: 64, elements: !1065)
!1065 = !{!1066}
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "dma_addr", scope: !1064, file: !837, line: 101, baseType: !1067, size: 64)
!1067 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_addr_t", file: !227, line: 143, baseType: !485)
!1068 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !837, line: 103, baseType: !1069, size: 320)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !837, line: 103, size: 320, elements: !1070)
!1070 = !{!1071, !1081, !1084, !1085}
!1071 = !DIDerivedType(tag: DW_TAG_member, scope: !1069, file: !837, line: 104, baseType: !1072, size: 128)
!1072 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1069, file: !837, line: 104, size: 128, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "slab_list", scope: !1072, file: !837, line: 105, baseType: !284, size: 128)
!1075 = !DIDerivedType(tag: DW_TAG_member, scope: !1072, file: !837, line: 106, baseType: !1076, size: 128)
!1076 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1072, file: !837, line: 106, size: 128, elements: !1077)
!1077 = !{!1078, !1079, !1080}
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1076, file: !837, line: 107, baseType: !835, size: 64)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !1076, file: !837, line: 109, baseType: !234, size: 32, offset: 64)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "pobjects", scope: !1076, file: !837, line: 110, baseType: !234, size: 32, offset: 96)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "slab_cache", scope: !1069, file: !837, line: 117, baseType: !1082, size: 64, offset: 128)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = !DICompositeType(tag: DW_TAG_structure_type, name: "kmem_cache", file: !837, line: 117, flags: DIFlagFwdDecl)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "freelist", scope: !1069, file: !837, line: 119, baseType: !228, size: 64, offset: 192)
!1085 = !DIDerivedType(tag: DW_TAG_member, scope: !1069, file: !837, line: 120, baseType: !1086, size: 64, offset: 256)
!1086 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1069, file: !837, line: 120, size: 64, elements: !1087)
!1087 = !{!1088, !1089, !1090}
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "s_mem", scope: !1086, file: !837, line: 121, baseType: !228, size: 64)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "counters", scope: !1086, file: !837, line: 122, baseType: !388, size: 64)
!1090 = !DIDerivedType(tag: DW_TAG_member, scope: !1086, file: !837, line: 123, baseType: !1091, size: 32)
!1091 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1086, file: !837, line: 123, size: 32, elements: !1092)
!1092 = !{!1093, !1094, !1095}
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "inuse", scope: !1091, file: !837, line: 124, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1091, file: !837, line: 125, baseType: !7, size: 15, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !1091, file: !837, line: 126, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1096 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !837, line: 130, baseType: !1097, size: 192)
!1097 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !837, line: 130, size: 192, elements: !1098)
!1098 = !{!1099, !1100, !1101, !1102, !1103}
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "compound_head", scope: !1097, file: !837, line: 131, baseType: !388, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "compound_dtor", scope: !1097, file: !837, line: 134, baseType: !491, size: 8, offset: 64)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "compound_order", scope: !1097, file: !837, line: 135, baseType: !491, size: 8, offset: 72)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "compound_mapcount", scope: !1097, file: !837, line: 136, baseType: !861, size: 32, offset: 96)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "compound_nr", scope: !1097, file: !837, line: 137, baseType: !7, size: 32, offset: 128)
!1104 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !837, line: 139, baseType: !1105, size: 256)
!1105 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !837, line: 139, size: 256, elements: !1106)
!1106 = !{!1107, !1108, !1109}
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "_compound_pad_1", scope: !1105, file: !837, line: 140, baseType: !388, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "hpage_pinned_refcount", scope: !1105, file: !837, line: 141, baseType: !861, size: 32, offset: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_list", scope: !1105, file: !837, line: 143, baseType: !284, size: 128, offset: 128)
!1110 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !837, line: 145, baseType: !1111, size: 256)
!1111 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !837, line: 145, size: 256, elements: !1112)
!1112 = !{!1113, !1114, !1117, !1118, !2472}
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_1", scope: !1111, file: !837, line: 146, baseType: !388, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "pmd_huge_pte", scope: !1111, file: !837, line: 147, baseType: !1115, size: 64, offset: 64)
!1115 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgtable_t", file: !1116, line: 509, baseType: !835)
!1116 = !DIFile(filename: "./arch/x86/include/asm/pgtable_types.h", directory: "/home/lizy2001/genbc/linux")
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "_pt_pad_2", scope: !1111, file: !837, line: 148, baseType: !388, size: 64, offset: 128)
!1118 = !DIDerivedType(tag: DW_TAG_member, scope: !1111, file: !837, line: 149, baseType: !1119, size: 64, offset: 192)
!1119 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1111, file: !837, line: 149, size: 64, elements: !1120)
!1120 = !{!1121, !2471}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "pt_mm", scope: !1119, file: !837, line: 150, baseType: !1122, size: 64)
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_struct", file: !837, line: 388, size: 7296, elements: !1124)
!1124 = !{!1125, !2467}
!1125 = !DIDerivedType(tag: DW_TAG_member, scope: !1123, file: !837, line: 389, baseType: !1126, size: 7296)
!1126 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1123, file: !837, line: 389, size: 7296, elements: !1127)
!1127 = !{!1128, !1246, !1247, !1248, !1252, !1253, !1254, !1255, !1256, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1297, !1305, !1308, !1348, !1349, !2451, !2452, !2455, !2456, !2457, !2460, !2461, !2462, !2465, !2466}
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !1126, file: !837, line: 390, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!1130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_area_struct", file: !837, line: 305, size: 1472, elements: !1131)
!1131 = !{!1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1146, !1147, !1152, !1153, !1156, !1240, !1241, !1242, !1243, !1244}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "vm_start", scope: !1130, file: !837, line: 308, baseType: !388, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "vm_end", scope: !1130, file: !837, line: 309, baseType: !388, size: 64, offset: 64)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "vm_next", scope: !1130, file: !837, line: 313, baseType: !1129, size: 64, offset: 128)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "vm_prev", scope: !1130, file: !837, line: 313, baseType: !1129, size: 64, offset: 192)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "vm_rb", scope: !1130, file: !837, line: 315, baseType: !874, size: 192, align: 64, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_gap", scope: !1130, file: !837, line: 323, baseType: !388, size: 64, offset: 448)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "vm_mm", scope: !1130, file: !837, line: 327, baseType: !1122, size: 64, offset: 512)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "vm_page_prot", scope: !1130, file: !837, line: 333, baseType: !1140, size: 64, offset: 576)
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprot_t", file: !1116, line: 284, baseType: !1141)
!1141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pgprot", file: !1116, line: 284, size: 64, elements: !1142)
!1142 = !{!1143}
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pgprot", scope: !1141, file: !1116, line: 284, baseType: !1144, size: 64)
!1144 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgprotval_t", file: !1145, line: 19, baseType: !388)
!1145 = !DIFile(filename: "./arch/x86/include/asm/pgtable_64_types.h", directory: "/home/lizy2001/genbc/linux")
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "vm_flags", scope: !1130, file: !837, line: 334, baseType: !388, size: 64, offset: 640)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "shared", scope: !1130, file: !837, line: 343, baseType: !1148, size: 256, offset: 704)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1130, file: !837, line: 340, size: 256, elements: !1149)
!1149 = !{!1150, !1151}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !1148, file: !837, line: 341, baseType: !874, size: 192, align: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "rb_subtree_last", scope: !1148, file: !837, line: 342, baseType: !388, size: 64, offset: 192)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma_chain", scope: !1130, file: !837, line: 351, baseType: !284, size: 128, offset: 960)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "anon_vma", scope: !1130, file: !837, line: 353, baseType: !1154, size: 64, offset: 1088)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DICompositeType(tag: DW_TAG_structure_type, name: "anon_vma", file: !837, line: 353, flags: DIFlagFwdDecl)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !1130, file: !837, line: 356, baseType: !1157, size: 64, offset: 1152)
!1157 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1158, size: 64)
!1158 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1159)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_operations_struct", file: !14, line: 557, size: 832, elements: !1160)
!1160 = !{!1161, !1165, !1166, !1170, !1174, !1214, !1218, !1222, !1226, !1227, !1228, !1232, !1236}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !1159, file: !14, line: 558, baseType: !1162, size: 64)
!1162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1163, size: 64)
!1163 = !DISubroutineType(types: !1164)
!1164 = !{null, !1129}
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "close", scope: !1159, file: !14, line: 559, baseType: !1162, size: 64, offset: 64)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "split", scope: !1159, file: !14, line: 560, baseType: !1167, size: 64, offset: 128)
!1167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1168, size: 64)
!1168 = !DISubroutineType(types: !1169)
!1169 = !{!234, !1129, !388}
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "mremap", scope: !1159, file: !14, line: 561, baseType: !1171, size: 64, offset: 192)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DISubroutineType(types: !1173)
!1173 = !{!234, !1129}
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "fault", scope: !1159, file: !14, line: 562, baseType: !1175, size: 64, offset: 256)
!1175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1176, size: 64)
!1176 = !DISubroutineType(types: !1177)
!1177 = !{!1178, !1179}
!1178 = !DIDerivedType(tag: DW_TAG_typedef, name: "vm_fault_t", file: !837, line: 682, baseType: !7)
!1179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!1180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_fault", file: !14, line: 508, size: 768, elements: !1181)
!1181 = !{!1182, !1183, !1184, !1185, !1186, !1187, !1194, !1201, !1207, !1208, !1209, !1211, !1213}
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "vma", scope: !1180, file: !14, line: 509, baseType: !1129, size: 64)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1180, file: !14, line: 510, baseType: !7, size: 32, offset: 64)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !1180, file: !14, line: 511, baseType: !226, size: 32, offset: 96)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "pgoff", scope: !1180, file: !14, line: 512, baseType: !388, size: 64, offset: 128)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1180, file: !14, line: 513, baseType: !388, size: 64, offset: 192)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1180, file: !14, line: 514, baseType: !1188, size: 64, offset: 256)
!1188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1189, size: 64)
!1189 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmd_t", file: !1116, line: 385, baseType: !1190)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1116, line: 385, size: 64, elements: !1191)
!1191 = !{!1192}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "pmd", scope: !1190, file: !1116, line: 385, baseType: !1193, size: 64)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "pmdval_t", file: !1145, line: 15, baseType: !388)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1180, file: !14, line: 516, baseType: !1195, size: 64, offset: 320)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1196, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_typedef, name: "pud_t", file: !1116, line: 359, baseType: !1197)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1116, line: 359, size: 64, elements: !1198)
!1198 = !{!1199}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "pud", scope: !1197, file: !1116, line: 359, baseType: !1200, size: 64)
!1200 = !DIDerivedType(tag: DW_TAG_typedef, name: "pudval_t", file: !1145, line: 16, baseType: !388)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "orig_pte", scope: !1180, file: !14, line: 519, baseType: !1202, size: 64, offset: 384)
!1202 = !DIDerivedType(tag: DW_TAG_typedef, name: "pte_t", file: !1145, line: 21, baseType: !1203)
!1203 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1145, line: 21, size: 64, elements: !1204)
!1204 = !{!1205}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1203, file: !1145, line: 21, baseType: !1206, size: 64)
!1206 = !DIDerivedType(tag: DW_TAG_typedef, name: "pteval_t", file: !1145, line: 14, baseType: !388)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "cow_page", scope: !1180, file: !14, line: 521, baseType: !835, size: 64, offset: 448)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1180, file: !14, line: 522, baseType: !835, size: 64, offset: 512)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "pte", scope: !1180, file: !14, line: 528, baseType: !1210, size: 64, offset: 576)
!1210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1180, file: !14, line: 532, baseType: !1212, size: 64, offset: 640)
!1212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !297, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_pte", scope: !1180, file: !14, line: 536, baseType: !1115, size: 64, offset: 704)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "huge_fault", scope: !1159, file: !14, line: 563, baseType: !1215, size: 64, offset: 320)
!1215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1216, size: 64)
!1216 = !DISubroutineType(types: !1217)
!1217 = !{!1178, !1179, !13}
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "map_pages", scope: !1159, file: !14, line: 565, baseType: !1219, size: 64, offset: 384)
!1219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1220, size: 64)
!1220 = !DISubroutineType(types: !1221)
!1221 = !{null, !1179, !388, !388}
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pagesize", scope: !1159, file: !14, line: 567, baseType: !1223, size: 64, offset: 448)
!1223 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!1224 = !DISubroutineType(types: !1225)
!1225 = !{!388, !1129}
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "page_mkwrite", scope: !1159, file: !14, line: 571, baseType: !1175, size: 64, offset: 512)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "pfn_mkwrite", scope: !1159, file: !14, line: 574, baseType: !1175, size: 64, offset: 576)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "access", scope: !1159, file: !14, line: 579, baseType: !1229, size: 64, offset: 640)
!1229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1230, size: 64)
!1230 = !DISubroutineType(types: !1231)
!1231 = !{!234, !1129, !388, !228, !234, !234}
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1159, file: !14, line: 585, baseType: !1233, size: 64, offset: 704)
!1233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1234, size: 64)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!280, !1129}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "find_special_page", scope: !1159, file: !14, line: 615, baseType: !1237, size: 64, offset: 768)
!1237 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1238, size: 64)
!1238 = !DISubroutineType(types: !1239)
!1239 = !{!835, !1129, !388}
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "vm_pgoff", scope: !1130, file: !837, line: 359, baseType: !388, size: 64, offset: 1216)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "vm_file", scope: !1130, file: !837, line: 361, baseType: !416, size: 64, offset: 1280)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "vm_private_data", scope: !1130, file: !837, line: 362, baseType: !228, size: 64, offset: 1344)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "swap_readahead_info", scope: !1130, file: !837, line: 365, baseType: !792, size: 64, offset: 1408)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "vm_userfaultfd_ctx", scope: !1130, file: !837, line: 373, baseType: !1245, offset: 1472)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_userfaultfd_ctx", file: !837, line: 296, elements: !311)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "mm_rb", scope: !1126, file: !837, line: 391, baseType: !870, size: 64, offset: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache_seqnum", scope: !1126, file: !837, line: 392, baseType: !485, size: 64, offset: 128)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !1126, file: !837, line: 394, baseType: !1249, size: 64, offset: 192)
!1249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!1250 = !DISubroutineType(types: !1251)
!1251 = !{!388, !416, !388, !388, !388, !388}
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_base", scope: !1126, file: !837, line: 398, baseType: !388, size: 64, offset: 256)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_legacy_base", scope: !1126, file: !837, line: 399, baseType: !388, size: 64, offset: 320)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "task_size", scope: !1126, file: !837, line: 405, baseType: !388, size: 64, offset: 384)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "highest_vm_end", scope: !1126, file: !837, line: 406, baseType: !388, size: 64, offset: 448)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1126, file: !837, line: 407, baseType: !1257, size: 64, offset: 512)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgd_t", file: !1116, line: 286, baseType: !1259)
!1259 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1116, line: 286, size: 64, elements: !1260)
!1260 = !{!1261}
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "pgd", scope: !1259, file: !1116, line: 286, baseType: !1262, size: 64)
!1262 = !DIDerivedType(tag: DW_TAG_typedef, name: "pgdval_t", file: !1145, line: 18, baseType: !388)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "membarrier_state", scope: !1126, file: !837, line: 416, baseType: !861, size: 32, offset: 576)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "mm_users", scope: !1126, file: !837, line: 428, baseType: !861, size: 32, offset: 608)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "mm_count", scope: !1126, file: !837, line: 437, baseType: !861, size: 32, offset: 640)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "has_pinned", scope: !1126, file: !837, line: 447, baseType: !861, size: 32, offset: 672)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pgtables_bytes", scope: !1126, file: !837, line: 450, baseType: !792, size: 64, offset: 704)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "map_count", scope: !1126, file: !837, line: 452, baseType: !234, size: 32, offset: 768)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "page_table_lock", scope: !1126, file: !837, line: 454, baseType: !297, offset: 800)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_lock", scope: !1126, file: !837, line: 457, baseType: !881, size: 256, offset: 832)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "mmlist", scope: !1126, file: !837, line: 459, baseType: !284, size: 128, offset: 1088)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_rss", scope: !1126, file: !837, line: 466, baseType: !388, size: 64, offset: 1216)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "hiwater_vm", scope: !1126, file: !837, line: 467, baseType: !388, size: 64, offset: 1280)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "total_vm", scope: !1126, file: !837, line: 469, baseType: !388, size: 64, offset: 1344)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1126, file: !837, line: 470, baseType: !388, size: 64, offset: 1408)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "pinned_vm", scope: !1126, file: !837, line: 471, baseType: !794, size: 64, offset: 1472)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "data_vm", scope: !1126, file: !837, line: 472, baseType: !388, size: 64, offset: 1536)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "exec_vm", scope: !1126, file: !837, line: 473, baseType: !388, size: 64, offset: 1600)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm", scope: !1126, file: !837, line: 474, baseType: !388, size: 64, offset: 1664)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "def_flags", scope: !1126, file: !837, line: 475, baseType: !388, size: 64, offset: 1728)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "arg_lock", scope: !1126, file: !837, line: 477, baseType: !297, offset: 1792)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "start_code", scope: !1126, file: !837, line: 478, baseType: !388, size: 64, offset: 1792)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "end_code", scope: !1126, file: !837, line: 478, baseType: !388, size: 64, offset: 1856)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "start_data", scope: !1126, file: !837, line: 478, baseType: !388, size: 64, offset: 1920)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "end_data", scope: !1126, file: !837, line: 478, baseType: !388, size: 64, offset: 1984)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "start_brk", scope: !1126, file: !837, line: 479, baseType: !388, size: 64, offset: 2048)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "brk", scope: !1126, file: !837, line: 479, baseType: !388, size: 64, offset: 2112)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "start_stack", scope: !1126, file: !837, line: 479, baseType: !388, size: 64, offset: 2176)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "arg_start", scope: !1126, file: !837, line: 480, baseType: !388, size: 64, offset: 2240)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "arg_end", scope: !1126, file: !837, line: 480, baseType: !388, size: 64, offset: 2304)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "env_start", scope: !1126, file: !837, line: 480, baseType: !388, size: 64, offset: 2368)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "env_end", scope: !1126, file: !837, line: 480, baseType: !388, size: 64, offset: 2432)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "saved_auxv", scope: !1126, file: !837, line: 482, baseType: !1294, size: 2816, offset: 2496)
!1294 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 2816, elements: !1295)
!1295 = !{!1296}
!1296 = !DISubrange(count: 44)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "rss_stat", scope: !1126, file: !837, line: 488, baseType: !1298, size: 256, offset: 5312)
!1298 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mm_rss_stat", file: !1299, line: 60, size: 256, elements: !1300)
!1299 = !DIFile(filename: "./include/linux/mm_types_task.h", directory: "/home/lizy2001/genbc/linux")
!1300 = !{!1301}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1298, file: !1299, line: 61, baseType: !1302, size: 256)
!1302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !792, size: 256, elements: !1303)
!1303 = !{!1304}
!1304 = !DISubrange(count: 4)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "binfmt", scope: !1126, file: !837, line: 490, baseType: !1306, size: 64, offset: 5568)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1307, size: 64)
!1307 = !DICompositeType(tag: DW_TAG_structure_type, name: "linux_binfmt", file: !837, line: 490, flags: DIFlagFwdDecl)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1126, file: !837, line: 493, baseType: !1309, size: 896, offset: 5632)
!1309 = !DIDerivedType(tag: DW_TAG_typedef, name: "mm_context_t", file: !1310, line: 53, baseType: !1311)
!1310 = !DIFile(filename: "./arch/x86/include/asm/mmu.h", directory: "/home/lizy2001/genbc/linux")
!1311 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1310, line: 13, size: 896, elements: !1312)
!1312 = !{!1313, !1314, !1315, !1316, !1319, !1320, !1321, !1322, !1342, !1343, !1344}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "ctx_id", scope: !1311, file: !1310, line: 18, baseType: !485, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_gen", scope: !1311, file: !1310, line: 28, baseType: !794, size: 64, offset: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "ldt_usr_sem", scope: !1311, file: !1310, line: 31, baseType: !881, size: 256, offset: 128)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "ldt", scope: !1311, file: !1310, line: 32, baseType: !1317, size: 64, offset: 384)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "ldt_struct", file: !1310, line: 32, flags: DIFlagFwdDecl)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "ia32_compat", scope: !1311, file: !1310, line: 37, baseType: !380, size: 16, offset: 448)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1311, file: !1310, line: 40, baseType: !788, size: 192, offset: 512)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "vdso", scope: !1311, file: !1310, line: 41, baseType: !228, size: 64, offset: 704)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "vdso_image", scope: !1311, file: !1310, line: 42, baseType: !1323, size: 64, offset: 768)
!1323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1324, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vdso_image", file: !1326, line: 13, size: 896, elements: !1327)
!1326 = !DIFile(filename: "./arch/x86/include/asm/vdso.h", directory: "/home/lizy2001/genbc/linux")
!1327 = !{!1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341}
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1325, file: !1326, line: 14, baseType: !228, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1325, file: !1326, line: 15, baseType: !388, size: 64, offset: 64)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !1325, file: !1326, line: 17, baseType: !388, size: 64, offset: 128)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "alt_len", scope: !1325, file: !1326, line: 17, baseType: !388, size: 64, offset: 192)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_start", scope: !1325, file: !1326, line: 19, baseType: !373, size: 64, offset: 256)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "sym_vvar_page", scope: !1325, file: !1326, line: 21, baseType: !373, size: 64, offset: 320)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "sym_pvclock_page", scope: !1325, file: !1326, line: 22, baseType: !373, size: 64, offset: 384)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "sym_hvclock_page", scope: !1325, file: !1326, line: 23, baseType: !373, size: 64, offset: 448)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "sym_timens_page", scope: !1325, file: !1326, line: 24, baseType: !373, size: 64, offset: 512)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "sym_VDSO32_NOTE_MASK", scope: !1325, file: !1326, line: 25, baseType: !373, size: 64, offset: 576)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_sigreturn", scope: !1325, file: !1326, line: 26, baseType: !373, size: 64, offset: 640)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_rt_sigreturn", scope: !1325, file: !1326, line: 27, baseType: !373, size: 64, offset: 704)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "sym___kernel_vsyscall", scope: !1325, file: !1326, line: 28, baseType: !373, size: 64, offset: 768)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "sym_int80_landing_pad", scope: !1325, file: !1326, line: 29, baseType: !373, size: 64, offset: 832)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "perf_rdpmc_allowed", scope: !1311, file: !1310, line: 44, baseType: !861, size: 32, offset: 832)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "pkey_allocation_map", scope: !1311, file: !1310, line: 50, baseType: !966, size: 16, offset: 864)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "execute_only_pkey", scope: !1311, file: !1310, line: 51, baseType: !1345, size: 16, offset: 880)
!1345 = !DIDerivedType(tag: DW_TAG_typedef, name: "s16", file: !480, line: 18, baseType: !1346)
!1346 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s16", file: !482, line: 23, baseType: !1347)
!1347 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1126, file: !837, line: 495, baseType: !388, size: 64, offset: 6528)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "core_state", scope: !1126, file: !837, line: 497, baseType: !1350, size: 64, offset: 6592)
!1350 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1351, size: 64)
!1351 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_state", file: !837, line: 381, size: 384, elements: !1352)
!1352 = !{!1353, !1354, !2450}
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1351, file: !837, line: 382, baseType: !861, size: 32)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "dumper", scope: !1351, file: !837, line: 383, baseType: !1355, size: 128, offset: 64)
!1355 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "core_thread", file: !837, line: 376, size: 128, elements: !1356)
!1356 = !{!1357, !2448}
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !1355, file: !837, line: 377, baseType: !1358, size: 64)
!1358 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1359, size: 64)
!1359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_struct", file: !1008, line: 640, size: 48640, elements: !1360)
!1360 = !{!1361, !1367, !1369, !1370, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1387, !1405, !1416, !1501, !1502, !1503, !1514, !1515, !1517, !1518, !1519, !1520, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1599, !1602, !1603, !1604, !1605, !1606, !1607, !1608, !1609, !1610, !1611, !1637, !1639, !1640, !1641, !1653, !1654, !1655, !1656, !1657, !1658, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1682, !1687, !1871, !1872, !1873, !1874, !1878, !1881, !1884, !1887, !1890, !1893, !1994, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2040, !2041, !2042, !2043, !2044, !2049, !2050, !2051, !2054, !2055, !2058, !2061, !2064, !2067, !2110, !2113, !2114, !2193, !2194, !2197, !2198, !2201, !2202, !2203, !2207, !2208, !2209, !2222, !2223, !2224, !2234, !2239, !2240, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275}
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "thread_info", scope: !1359, file: !1008, line: 646, baseType: !1362, size: 128)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_info", file: !1363, line: 56, size: 128, elements: !1364)
!1363 = !DIFile(filename: "./arch/x86/include/asm/thread_info.h", directory: "/home/lizy2001/genbc/linux")
!1364 = !{!1365, !1366}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1362, file: !1363, line: 57, baseType: !388, size: 64)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !1362, file: !1363, line: 58, baseType: !479, size: 32, offset: 64)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1359, file: !1008, line: 649, baseType: !1368, size: 64, offset: 128)
!1368 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !373)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "stack", scope: !1359, file: !1008, line: 657, baseType: !228, size: 64, offset: 192)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1359, file: !1008, line: 658, baseType: !1371, size: 32, offset: 256)
!1371 = !DIDerivedType(tag: DW_TAG_typedef, name: "refcount_t", file: !1372, line: 113, baseType: !1373)
!1372 = !DIFile(filename: "./include/linux/refcount.h", directory: "/home/lizy2001/genbc/linux")
!1373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "refcount_struct", file: !1372, line: 111, size: 32, elements: !1374)
!1374 = !{!1375}
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "refs", scope: !1373, file: !1372, line: 112, baseType: !861, size: 32)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1359, file: !1008, line: 660, baseType: !7, size: 32, offset: 288)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace", scope: !1359, file: !1008, line: 661, baseType: !7, size: 32, offset: 320)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1359, file: !1008, line: 684, baseType: !234, size: 32, offset: 352)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !1359, file: !1008, line: 686, baseType: !234, size: 32, offset: 384)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "static_prio", scope: !1359, file: !1008, line: 687, baseType: !234, size: 32, offset: 416)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "normal_prio", scope: !1359, file: !1008, line: 688, baseType: !234, size: 32, offset: 448)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rt_priority", scope: !1359, file: !1008, line: 689, baseType: !7, size: 32, offset: 480)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "sched_class", scope: !1359, file: !1008, line: 691, baseType: !1384, size: 64, offset: 512)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1386)
!1386 = !DICompositeType(tag: DW_TAG_structure_type, name: "sched_class", file: !1008, line: 691, flags: DIFlagFwdDecl)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "se", scope: !1359, file: !1008, line: 692, baseType: !1388, size: 832, offset: 576)
!1388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_entity", file: !1008, line: 451, size: 832, elements: !1389)
!1389 = !{!1390, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1402, !1403}
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "load", scope: !1388, file: !1008, line: 453, baseType: !1391, size: 128)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "load_weight", file: !1008, line: 325, size: 128, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1391, file: !1008, line: 326, baseType: !388, size: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "inv_weight", scope: !1391, file: !1008, line: 327, baseType: !479, size: 32, offset: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "run_node", scope: !1388, file: !1008, line: 454, baseType: !874, size: 192, align: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "group_node", scope: !1388, file: !1008, line: 455, baseType: !284, size: 128, offset: 320)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1388, file: !1008, line: 456, baseType: !7, size: 32, offset: 448)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "exec_start", scope: !1388, file: !1008, line: 458, baseType: !485, size: 64, offset: 512)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1388, file: !1008, line: 459, baseType: !485, size: 64, offset: 576)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "vruntime", scope: !1388, file: !1008, line: 460, baseType: !485, size: 64, offset: 640)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "prev_sum_exec_runtime", scope: !1388, file: !1008, line: 461, baseType: !485, size: 64, offset: 704)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "nr_migrations", scope: !1388, file: !1008, line: 463, baseType: !485, size: 64, offset: 768)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !1388, file: !1008, line: 465, baseType: !1404, offset: 832)
!1404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_statistics", file: !1008, line: 415, elements: !311)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1359, file: !1008, line: 693, baseType: !1406, size: 384, offset: 1408)
!1406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_rt_entity", file: !1008, line: 489, size: 384, elements: !1407)
!1407 = !{!1408, !1409, !1410, !1411, !1412, !1413, !1414}
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "run_list", scope: !1406, file: !1008, line: 490, baseType: !284, size: 128)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !1406, file: !1008, line: 491, baseType: !388, size: 64, offset: 128)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "watchdog_stamp", scope: !1406, file: !1008, line: 492, baseType: !388, size: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "time_slice", scope: !1406, file: !1008, line: 493, baseType: !7, size: 32, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "on_rq", scope: !1406, file: !1008, line: 494, baseType: !380, size: 16, offset: 288)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "on_list", scope: !1406, file: !1008, line: 495, baseType: !380, size: 16, offset: 304)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !1406, file: !1008, line: 497, baseType: !1415, size: 64, offset: 320)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "dl", scope: !1359, file: !1008, line: 697, baseType: !1417, size: 1792, offset: 1792)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_dl_entity", file: !1008, line: 507, size: 1792, elements: !1418)
!1418 = !{!1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1498, !1499}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "rb_node", scope: !1417, file: !1008, line: 508, baseType: !874, size: 192, align: 64)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "dl_runtime", scope: !1417, file: !1008, line: 515, baseType: !485, size: 64, offset: 192)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "dl_deadline", scope: !1417, file: !1008, line: 516, baseType: !485, size: 64, offset: 256)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "dl_period", scope: !1417, file: !1008, line: 517, baseType: !485, size: 64, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "dl_bw", scope: !1417, file: !1008, line: 518, baseType: !485, size: 64, offset: 384)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "dl_density", scope: !1417, file: !1008, line: 519, baseType: !485, size: 64, offset: 448)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "runtime", scope: !1417, file: !1008, line: 526, baseType: !798, size: 64, offset: 512)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "deadline", scope: !1417, file: !1008, line: 527, baseType: !485, size: 64, offset: 576)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1417, file: !1008, line: 528, baseType: !7, size: 32, offset: 640)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "dl_throttled", scope: !1417, file: !1008, line: 554, baseType: !7, size: 1, offset: 672, flags: DIFlagBitField, extraData: i64 672)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "dl_yielded", scope: !1417, file: !1008, line: 555, baseType: !7, size: 1, offset: 673, flags: DIFlagBitField, extraData: i64 672)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "dl_non_contending", scope: !1417, file: !1008, line: 556, baseType: !7, size: 1, offset: 674, flags: DIFlagBitField, extraData: i64 672)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "dl_overrun", scope: !1417, file: !1008, line: 557, baseType: !7, size: 1, offset: 675, flags: DIFlagBitField, extraData: i64 672)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "dl_timer", scope: !1417, file: !1008, line: 563, baseType: !1433, size: 512, offset: 704)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer", file: !20, line: 118, size: 512, elements: !1434)
!1434 = !{!1435, !1443, !1444, !1449, !1492, !1495, !1496, !1497}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1433, file: !20, line: 119, baseType: !1436, size: 256)
!1436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_node", file: !1437, line: 9, size: 256, elements: !1438)
!1437 = !DIFile(filename: "./include/linux/timerqueue.h", directory: "/home/lizy2001/genbc/linux")
!1438 = !{!1439, !1440}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !1436, file: !1437, line: 10, baseType: !874, size: 192, align: 64)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1436, file: !1437, line: 11, baseType: !1441, size: 64, offset: 192)
!1441 = !DIDerivedType(tag: DW_TAG_typedef, name: "ktime_t", file: !1442, line: 29, baseType: !798)
!1442 = !DIFile(filename: "./include/linux/ktime.h", directory: "/home/lizy2001/genbc/linux")
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "_softexpires", scope: !1433, file: !20, line: 120, baseType: !1441, size: 64, offset: 256)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1433, file: !20, line: 121, baseType: !1445, size: 64, offset: 320)
!1445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1446, size: 64)
!1446 = !DISubroutineType(types: !1447)
!1447 = !{!19, !1448}
!1448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1433, size: 64)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1433, file: !20, line: 122, baseType: !1450, size: 64, offset: 384)
!1450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1451, size: 64)
!1451 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_clock_base", file: !20, line: 159, size: 512, align: 512, elements: !1452)
!1452 = !{!1453, !1473, !1474, !1477, !1482, !1483, !1487, !1491}
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_base", scope: !1451, file: !20, line: 160, baseType: !1454, size: 64)
!1454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1455, size: 64)
!1455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hrtimer_cpu_base", file: !20, line: 214, size: 4608, align: 512, elements: !1456)
!1456 = !{!1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469}
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1455, file: !20, line: 215, baseType: !887)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "cpu", scope: !1455, file: !20, line: 216, baseType: !7, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "active_bases", scope: !1455, file: !20, line: 217, baseType: !7, size: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "clock_was_set_seq", scope: !1455, file: !20, line: 218, baseType: !7, size: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "hres_active", scope: !1455, file: !20, line: 219, baseType: !7, size: 1, offset: 96, flags: DIFlagBitField, extraData: i64 96)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "in_hrtirq", scope: !1455, file: !20, line: 220, baseType: !7, size: 1, offset: 97, flags: DIFlagBitField, extraData: i64 96)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "hang_detected", scope: !1455, file: !20, line: 221, baseType: !7, size: 1, offset: 98, flags: DIFlagBitField, extraData: i64 96)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_activated", scope: !1455, file: !20, line: 222, baseType: !7, size: 1, offset: 99, flags: DIFlagBitField, extraData: i64 96)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "expires_next", scope: !1455, file: !20, line: 233, baseType: !1441, size: 64, offset: 128)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "next_timer", scope: !1455, file: !20, line: 234, baseType: !1448, size: 64, offset: 192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_expires_next", scope: !1455, file: !20, line: 235, baseType: !1441, size: 64, offset: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "softirq_next_timer", scope: !1455, file: !20, line: 236, baseType: !1448, size: 64, offset: 320)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "clock_base", scope: !1455, file: !20, line: 237, baseType: !1470, size: 4096, offset: 512)
!1470 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1451, size: 4096, elements: !1471)
!1471 = !{!1472}
!1472 = !DISubrange(count: 8)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1451, file: !20, line: 161, baseType: !7, size: 32, offset: 64)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1451, file: !20, line: 162, baseType: !1475, size: 32, offset: 96)
!1475 = !DIDerivedType(tag: DW_TAG_typedef, name: "clockid_t", file: !227, line: 27, baseType: !1476)
!1476 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clockid_t", file: !371, line: 96, baseType: !234)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1451, file: !20, line: 163, baseType: !1478, size: 32, offset: 128)
!1478 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqcount_raw_spinlock_t", file: !452, line: 276, baseType: !1479)
!1479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seqcount_raw_spinlock", file: !452, line: 276, size: 32, elements: !1480)
!1480 = !{!1481}
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1479, file: !452, line: 276, baseType: !456, size: 32)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !1451, file: !20, line: 164, baseType: !1448, size: 64, offset: 192)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !1451, file: !20, line: 165, baseType: !1484, size: 128, offset: 256)
!1484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timerqueue_head", file: !1437, line: 14, size: 128, elements: !1485)
!1485 = !{!1486}
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "rb_root", scope: !1484, file: !1437, line: 15, baseType: !866, size: 128)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "get_time", scope: !1451, file: !20, line: 166, baseType: !1488, size: 64, offset: 384)
!1488 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1489, size: 64)
!1489 = !DISubroutineType(types: !1490)
!1490 = !{!1441}
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1451, file: !20, line: 167, baseType: !1441, size: 64, offset: 448)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1433, file: !20, line: 123, baseType: !1493, size: 8, offset: 448)
!1493 = !DIDerivedType(tag: DW_TAG_typedef, name: "u8", file: !480, line: 17, baseType: !1494)
!1494 = !DIDerivedType(tag: DW_TAG_typedef, name: "__u8", file: !482, line: 21, baseType: !491)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "is_rel", scope: !1433, file: !20, line: 124, baseType: !1493, size: 8, offset: 456)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "is_soft", scope: !1433, file: !20, line: 125, baseType: !1493, size: 8, offset: 464)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "is_hard", scope: !1433, file: !20, line: 126, baseType: !1493, size: 8, offset: 472)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "inactive_timer", scope: !1417, file: !1008, line: 572, baseType: !1433, size: 512, offset: 1216)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "pi_se", scope: !1417, file: !1008, line: 580, baseType: !1500, size: 64, offset: 1728)
!1500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1417, size: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "policy", scope: !1359, file: !1008, line: 721, baseType: !7, size: 32, offset: 3584)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cpus_allowed", scope: !1359, file: !1008, line: 722, baseType: !234, size: 32, offset: 3616)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_ptr", scope: !1359, file: !1008, line: 723, baseType: !1504, size: 64, offset: 3648)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1506)
!1506 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_t", file: !1507, line: 17, baseType: !1508)
!1507 = !DIFile(filename: "./include/linux/cpumask.h", directory: "/home/lizy2001/genbc/linux")
!1508 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpumask", file: !1507, line: 17, size: 64, elements: !1509)
!1509 = !{!1510}
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1508, file: !1507, line: 17, baseType: !1511, size: 64)
!1511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 64, elements: !1512)
!1512 = !{!1513}
!1513 = !DISubrange(count: 1)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "cpus_mask", scope: !1359, file: !1008, line: 724, baseType: !1506, size: 64, offset: 3712)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "sched_info", scope: !1359, file: !1008, line: 749, baseType: !1516, offset: 3776)
!1516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sched_info", file: !1008, line: 290, elements: !311)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1359, file: !1008, line: 751, baseType: !284, size: 128, offset: 3776)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "mm", scope: !1359, file: !1008, line: 757, baseType: !1122, size: 64, offset: 3904)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "active_mm", scope: !1359, file: !1008, line: 758, baseType: !1122, size: 64, offset: 3968)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "vmacache", scope: !1359, file: !1008, line: 761, baseType: !1521, size: 320, offset: 4032)
!1521 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmacache", file: !1299, line: 34, size: 320, elements: !1522)
!1522 = !{!1523, !1524}
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "seqnum", scope: !1521, file: !1299, line: 35, baseType: !485, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "vmas", scope: !1521, file: !1299, line: 36, baseType: !1525, size: 256, offset: 64)
!1525 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1129, size: 256, elements: !1303)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "exit_state", scope: !1359, file: !1008, line: 766, baseType: !234, size: 32, offset: 4352)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "exit_code", scope: !1359, file: !1008, line: 767, baseType: !234, size: 32, offset: 4384)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "exit_signal", scope: !1359, file: !1008, line: 768, baseType: !234, size: 32, offset: 4416)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "pdeath_signal", scope: !1359, file: !1008, line: 770, baseType: !234, size: 32, offset: 4448)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "jobctl", scope: !1359, file: !1008, line: 772, baseType: !388, size: 64, offset: 4480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1359, file: !1008, line: 775, baseType: !7, size: 32, offset: 4544)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sched_reset_on_fork", scope: !1359, file: !1008, line: 778, baseType: !7, size: 1, offset: 4576, flags: DIFlagBitField, extraData: i64 4576)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sched_contributes_to_load", scope: !1359, file: !1008, line: 779, baseType: !7, size: 1, offset: 4577, flags: DIFlagBitField, extraData: i64 4576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "sched_migrated", scope: !1359, file: !1008, line: 780, baseType: !7, size: 1, offset: 4578, flags: DIFlagBitField, extraData: i64 4576)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sched_remote_wakeup", scope: !1359, file: !1008, line: 803, baseType: !7, size: 1, offset: 4608, flags: DIFlagBitField, extraData: i64 4608)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "in_execve", scope: !1359, file: !1008, line: 806, baseType: !7, size: 1, offset: 4609, flags: DIFlagBitField, extraData: i64 4608)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "in_iowait", scope: !1359, file: !1008, line: 807, baseType: !7, size: 1, offset: 4610, flags: DIFlagBitField, extraData: i64 4608)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "restore_sigmask", scope: !1359, file: !1008, line: 809, baseType: !7, size: 1, offset: 4611, flags: DIFlagBitField, extraData: i64 4608)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "brk_randomized", scope: !1359, file: !1008, line: 815, baseType: !7, size: 1, offset: 4612, flags: DIFlagBitField, extraData: i64 4608)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_flags", scope: !1359, file: !1008, line: 831, baseType: !388, size: 64, offset: 4672)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "restart_block", scope: !1359, file: !1008, line: 833, baseType: !1542, size: 384, offset: 4736)
!1542 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "restart_block", file: !25, line: 25, size: 384, elements: !1543)
!1543 = !{!1544, !1549}
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !1542, file: !25, line: 26, baseType: !1545, size: 64)
!1545 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1546, size: 64)
!1546 = !DISubroutineType(types: !1547)
!1547 = !{!373, !1548}
!1548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1542, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, scope: !1542, file: !25, line: 27, baseType: !1550, size: 320, offset: 64)
!1550 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1542, file: !25, line: 27, size: 320, elements: !1551)
!1551 = !{!1552, !1562, !1589}
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "futex", scope: !1550, file: !25, line: 36, baseType: !1553, size: 320)
!1553 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1550, file: !25, line: 29, size: 320, elements: !1554)
!1554 = !{!1555, !1557, !1558, !1559, !1560, !1561}
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr", scope: !1553, file: !25, line: 30, baseType: !1556, size: 64)
!1556 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !479, size: 64)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1553, file: !25, line: 31, baseType: !479, size: 32, offset: 64)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1553, file: !25, line: 32, baseType: !479, size: 32, offset: 96)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "bitset", scope: !1553, file: !25, line: 33, baseType: !479, size: 32, offset: 128)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1553, file: !25, line: 34, baseType: !485, size: 64, offset: 192)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "uaddr2", scope: !1553, file: !25, line: 35, baseType: !1556, size: 64, offset: 256)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "nanosleep", scope: !1550, file: !25, line: 46, baseType: !1563, size: 192)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1550, file: !25, line: 38, size: 192, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1588}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "clockid", scope: !1563, file: !25, line: 39, baseType: !1475, size: 32)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1563, file: !25, line: 40, baseType: !24, size: 32, offset: 32)
!1567 = !DIDerivedType(tag: DW_TAG_member, scope: !1563, file: !25, line: 41, baseType: !1568, size: 64, offset: 64)
!1568 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1563, file: !25, line: 41, size: 64, elements: !1569)
!1569 = !{!1570, !1578}
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "rmtp", scope: !1568, file: !25, line: 42, baseType: !1571, size: 64)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__kernel_timespec", file: !1573, line: 7, size: 128, elements: !1574)
!1573 = !DIFile(filename: "./include/uapi/linux/time_types.h", directory: "/home/lizy2001/genbc/linux")
!1574 = !{!1575, !1577}
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1572, file: !1573, line: 8, baseType: !1576, size: 64)
!1576 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_time64_t", file: !371, line: 93, baseType: !595)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1572, file: !1573, line: 9, baseType: !595, size: 64, offset: 64)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "compat_rmtp", scope: !1568, file: !25, line: 43, baseType: !1579, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "old_timespec32", file: !1581, line: 7, size: 64, elements: !1582)
!1581 = !DIFile(filename: "./include/vdso/time32.h", directory: "/home/lizy2001/genbc/linux")
!1582 = !{!1583, !1587}
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1580, file: !1581, line: 8, baseType: !1584, size: 32)
!1584 = !DIDerivedType(tag: DW_TAG_typedef, name: "old_time32_t", file: !1581, line: 5, baseType: !1585)
!1585 = !DIDerivedType(tag: DW_TAG_typedef, name: "s32", file: !480, line: 20, baseType: !1586)
!1586 = !DIDerivedType(tag: DW_TAG_typedef, name: "__s32", file: !482, line: 26, baseType: !234)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1580, file: !1581, line: 9, baseType: !1585, size: 32, offset: 32)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1563, file: !25, line: 45, baseType: !485, size: 64, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1550, file: !25, line: 54, baseType: !1590, size: 256)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1550, file: !25, line: 48, size: 256, elements: !1591)
!1591 = !{!1592, !1595, !1596, !1597, !1598}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ufds", scope: !1590, file: !25, line: 49, baseType: !1593, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1594, size: 64)
!1594 = !DICompositeType(tag: DW_TAG_structure_type, name: "pollfd", file: !25, line: 14, flags: DIFlagFwdDecl)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "nfds", scope: !1590, file: !25, line: 50, baseType: !234, size: 32, offset: 64)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "has_timeout", scope: !1590, file: !25, line: 51, baseType: !234, size: 32, offset: 96)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "tv_sec", scope: !1590, file: !25, line: 52, baseType: !388, size: 64, offset: 128)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "tv_nsec", scope: !1590, file: !25, line: 53, baseType: !388, size: 64, offset: 192)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !1359, file: !1008, line: 835, baseType: !1600, size: 32, offset: 5120)
!1600 = !DIDerivedType(tag: DW_TAG_typedef, name: "pid_t", file: !227, line: 22, baseType: !1601)
!1601 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_pid_t", file: !371, line: 28, baseType: !234)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "tgid", scope: !1359, file: !1008, line: 836, baseType: !1600, size: 32, offset: 5152)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "stack_canary", scope: !1359, file: !1008, line: 840, baseType: !388, size: 64, offset: 5184)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "real_parent", scope: !1359, file: !1008, line: 849, baseType: !1358, size: 64, offset: 5248)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1359, file: !1008, line: 852, baseType: !1358, size: 64, offset: 5312)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !1359, file: !1008, line: 857, baseType: !284, size: 128, offset: 5376)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !1359, file: !1008, line: 858, baseType: !284, size: 128, offset: 5504)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "group_leader", scope: !1359, file: !1008, line: 859, baseType: !1358, size: 64, offset: 5632)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "ptraced", scope: !1359, file: !1008, line: 867, baseType: !284, size: 128, offset: 5696)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_entry", scope: !1359, file: !1008, line: 868, baseType: !284, size: 128, offset: 5824)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "thread_pid", scope: !1359, file: !1008, line: 871, baseType: !1612, size: 64, offset: 5952)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pid", file: !53, line: 59, size: 768, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618, !1620, !1621, !1628, !1629}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1613, file: !53, line: 61, baseType: !1371, size: 32)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !1613, file: !53, line: 62, baseType: !7, size: 32, offset: 32)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1613, file: !53, line: 63, baseType: !297, offset: 64)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "tasks", scope: !1613, file: !53, line: 65, baseType: !1619, size: 256, offset: 64)
!1619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !700, size: 256, elements: !1303)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "inodes", scope: !1613, file: !53, line: 66, baseType: !700, size: 64, offset: 320)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "wait_pidfd", scope: !1613, file: !53, line: 68, baseType: !1622, size: 128, offset: 384)
!1622 = !DIDerivedType(tag: DW_TAG_typedef, name: "wait_queue_head_t", file: !1623, line: 40, baseType: !1624)
!1623 = !DIFile(filename: "./include/linux/wait.h", directory: "/home/lizy2001/genbc/linux")
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wait_queue_head", file: !1623, line: 36, size: 128, elements: !1625)
!1625 = !{!1626, !1627}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1624, file: !1623, line: 37, baseType: !297)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1624, file: !1623, line: 38, baseType: !284, size: 128)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1613, file: !53, line: 69, baseType: !429, size: 128, align: 64, offset: 512)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "numbers", scope: !1613, file: !53, line: 70, baseType: !1630, size: 128, offset: 640)
!1630 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1631, size: 128, elements: !1512)
!1631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "upid", file: !53, line: 54, size: 128, elements: !1632)
!1632 = !{!1633, !1634}
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "nr", scope: !1631, file: !53, line: 55, baseType: !234, size: 32)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !1631, file: !53, line: 56, baseType: !1635, size: 64, offset: 64)
!1635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1636, size: 64)
!1636 = !DICompositeType(tag: DW_TAG_structure_type, name: "pid_namespace", file: !53, line: 56, flags: DIFlagFwdDecl)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "pid_links", scope: !1359, file: !1008, line: 872, baseType: !1638, size: 512, offset: 6016)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !704, size: 512, elements: !1303)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "thread_group", scope: !1359, file: !1008, line: 873, baseType: !284, size: 128, offset: 6528)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "thread_node", scope: !1359, file: !1008, line: 874, baseType: !284, size: 128, offset: 6656)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "vfork_done", scope: !1359, file: !1008, line: 876, baseType: !1642, size: 64, offset: 6784)
!1642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1643, size: 64)
!1643 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "completion", file: !1644, line: 26, size: 192, elements: !1645)
!1644 = !DIFile(filename: "./include/linux/completion.h", directory: "/home/lizy2001/genbc/linux")
!1645 = !{!1646, !1647}
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1643, file: !1644, line: 27, baseType: !7, size: 32)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "wait", scope: !1643, file: !1644, line: 28, baseType: !1648, size: 128, offset: 64)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swait_queue_head", file: !1649, line: 43, size: 128, elements: !1650)
!1649 = !DIFile(filename: "./include/linux/swait.h", directory: "/home/lizy2001/genbc/linux")
!1650 = !{!1651, !1652}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1648, file: !1649, line: 44, baseType: !887)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "task_list", scope: !1648, file: !1649, line: 45, baseType: !284, size: 128)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "set_child_tid", scope: !1359, file: !1008, line: 879, baseType: !770, size: 64, offset: 6848)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "clear_child_tid", scope: !1359, file: !1008, line: 882, baseType: !770, size: 64, offset: 6912)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1359, file: !1008, line: 884, baseType: !485, size: 64, offset: 6976)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1359, file: !1008, line: 885, baseType: !485, size: 64, offset: 7040)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1359, file: !1008, line: 890, baseType: !485, size: 64, offset: 7104)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1359, file: !1008, line: 891, baseType: !1659, size: 128, offset: 7168)
!1659 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "prev_cputime", file: !1008, line: 242, size: 128, elements: !1660)
!1660 = !{!1661, !1662, !1663}
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1659, file: !1008, line: 244, baseType: !485, size: 64)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1659, file: !1008, line: 245, baseType: !485, size: 64, offset: 64)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1659, file: !1008, line: 246, baseType: !887, offset: 128)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1359, file: !1008, line: 900, baseType: !388, size: 64, offset: 7296)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1359, file: !1008, line: 901, baseType: !388, size: 64, offset: 7360)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "start_time", scope: !1359, file: !1008, line: 904, baseType: !485, size: 64, offset: 7424)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "start_boottime", scope: !1359, file: !1008, line: 907, baseType: !485, size: 64, offset: 7488)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1359, file: !1008, line: 910, baseType: !388, size: 64, offset: 7552)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1359, file: !1008, line: 911, baseType: !388, size: 64, offset: 7616)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1359, file: !1008, line: 914, baseType: !1671, size: 640, offset: 7680)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers", file: !1672, line: 123, size: 640, elements: !1673)
!1672 = !DIFile(filename: "./include/linux/posix-timers.h", directory: "/home/lizy2001/genbc/linux")
!1673 = !{!1674, !1680, !1681}
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "bases", scope: !1671, file: !1672, line: 124, baseType: !1675, size: 576)
!1675 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1676, size: 576, elements: !339)
!1676 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimer_base", file: !1672, line: 108, size: 192, elements: !1677)
!1677 = !{!1678, !1679}
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "nextevt", scope: !1676, file: !1672, line: 109, baseType: !485, size: 64)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "tqhead", scope: !1676, file: !1672, line: 110, baseType: !1484, size: 128, offset: 64)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "timers_active", scope: !1671, file: !1672, line: 125, baseType: !7, size: 32, offset: 576)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "expiry_active", scope: !1671, file: !1672, line: 126, baseType: !7, size: 32, offset: 608)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers_work", scope: !1359, file: !1008, line: 917, baseType: !1683, size: 192, offset: 8320)
!1683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "posix_cputimers_work", file: !1672, line: 134, size: 192, elements: !1684)
!1684 = !{!1685, !1686}
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !1683, file: !1672, line: 135, baseType: !429, size: 128, align: 64)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "scheduled", scope: !1683, file: !1672, line: 136, baseType: !7, size: 32, offset: 128)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "ptracer_cred", scope: !1359, file: !1008, line: 923, baseType: !1688, size: 64, offset: 8512)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cred", file: !1691, line: 111, size: 1280, elements: !1692)
!1691 = !DIFile(filename: "./include/linux/cred.h", directory: "/home/lizy2001/genbc/linux")
!1692 = !{!1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1712, !1713, !1714, !1715, !1716, !1717, !1824, !1825, !1826, !1827, !1853, !1856, !1866}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1690, file: !1691, line: 112, baseType: !861, size: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1690, file: !1691, line: 120, baseType: !499, size: 32, offset: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1690, file: !1691, line: 121, baseType: !507, size: 32, offset: 64)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "suid", scope: !1690, file: !1691, line: 122, baseType: !499, size: 32, offset: 96)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "sgid", scope: !1690, file: !1691, line: 123, baseType: !507, size: 32, offset: 128)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !1690, file: !1691, line: 124, baseType: !499, size: 32, offset: 160)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "egid", scope: !1690, file: !1691, line: 125, baseType: !507, size: 32, offset: 192)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "fsuid", scope: !1690, file: !1691, line: 126, baseType: !499, size: 32, offset: 224)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "fsgid", scope: !1690, file: !1691, line: 127, baseType: !507, size: 32, offset: 256)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "securebits", scope: !1690, file: !1691, line: 128, baseType: !7, size: 32, offset: 288)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "cap_inheritable", scope: !1690, file: !1691, line: 129, baseType: !1704, size: 64, offset: 320)
!1704 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_cap_t", file: !1705, line: 26, baseType: !1706)
!1705 = !DIFile(filename: "./include/linux/capability.h", directory: "/home/lizy2001/genbc/linux")
!1706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_cap_struct", file: !1705, line: 24, size: 64, elements: !1707)
!1707 = !{!1708}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "cap", scope: !1706, file: !1705, line: 25, baseType: !1709, size: 64)
!1709 = !DICompositeType(tag: DW_TAG_array_type, baseType: !481, size: 64, elements: !1710)
!1710 = !{!1711}
!1711 = !DISubrange(count: 2)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "cap_permitted", scope: !1690, file: !1691, line: 130, baseType: !1704, size: 64, offset: 384)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "cap_effective", scope: !1690, file: !1691, line: 131, baseType: !1704, size: 64, offset: 448)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "cap_bset", scope: !1690, file: !1691, line: 132, baseType: !1704, size: 64, offset: 512)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "cap_ambient", scope: !1690, file: !1691, line: 133, baseType: !1704, size: 64, offset: 576)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "jit_keyring", scope: !1690, file: !1691, line: 135, baseType: !491, size: 8, offset: 640)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "session_keyring", scope: !1690, file: !1691, line: 137, baseType: !1718, size: 64, offset: 704)
!1718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1719, size: 64)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key", file: !1720, line: 189, size: 1664, elements: !1721)
!1720 = !DIFile(filename: "./include/linux/key.h", directory: "/home/lizy2001/genbc/linux")
!1721 = !{!1722, !1723, !1726, !1731, !1732, !1735, !1736, !1741, !1742, !1743, !1744, !1746, !1747, !1748, !1749, !1750, !1788, !1809}
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1719, file: !1720, line: 190, baseType: !1371, size: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "serial", scope: !1719, file: !1720, line: 191, baseType: !1724, size: 32, offset: 32)
!1724 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_serial_t", file: !1720, line: 28, baseType: !1725)
!1725 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !227, line: 98, baseType: !1585)
!1726 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 192, baseType: !1727, size: 192, offset: 64)
!1727 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 192, size: 192, elements: !1728)
!1728 = !{!1729, !1730}
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "graveyard_link", scope: !1727, file: !1720, line: 193, baseType: !284, size: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "serial_node", scope: !1727, file: !1720, line: 194, baseType: !874, size: 192, align: 64)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "sem", scope: !1719, file: !1720, line: 199, baseType: !881, size: 256, offset: 256)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1719, file: !1720, line: 200, baseType: !1733, size: 64, offset: 512)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_user", file: !1720, line: 200, flags: DIFlagFwdDecl)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "security", scope: !1719, file: !1720, line: 201, baseType: !228, size: 64, offset: 576)
!1736 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 202, baseType: !1737, size: 64, offset: 640)
!1737 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 202, size: 64, elements: !1738)
!1738 = !{!1739, !1740}
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "expiry", scope: !1737, file: !1720, line: 203, baseType: !601, size: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "revoked_at", scope: !1737, file: !1720, line: 204, baseType: !601, size: 64)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "last_used_at", scope: !1719, file: !1720, line: 206, baseType: !601, size: 64, offset: 704)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1719, file: !1720, line: 207, baseType: !499, size: 32, offset: 768)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1719, file: !1720, line: 208, baseType: !507, size: 32, offset: 800)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "perm", scope: !1719, file: !1720, line: 209, baseType: !1745, size: 32, offset: 832)
!1745 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_perm_t", file: !1720, line: 31, baseType: !621)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "quotalen", scope: !1719, file: !1720, line: 210, baseType: !380, size: 16, offset: 864)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "datalen", scope: !1719, file: !1720, line: 211, baseType: !380, size: 16, offset: 880)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1719, file: !1720, line: 215, baseType: !1347, size: 16, offset: 896)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1719, file: !1720, line: 222, baseType: !388, size: 64, offset: 960)
!1750 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 239, baseType: !1751, size: 320, offset: 1024)
!1751 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 239, size: 320, elements: !1752)
!1752 = !{!1753, !1780}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "index_key", scope: !1751, file: !1720, line: 240, baseType: !1754, size: 320)
!1754 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "keyring_index_key", file: !1720, line: 108, size: 320, elements: !1755)
!1755 = !{!1756, !1757, !1769, !1772, !1779}
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1754, file: !1720, line: 110, baseType: !388, size: 64)
!1757 = !DIDerivedType(tag: DW_TAG_member, scope: !1754, file: !1720, line: 111, baseType: !1758, size: 64, offset: 64)
!1758 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1754, file: !1720, line: 111, size: 64, elements: !1759)
!1759 = !{!1760, !1768}
!1760 = !DIDerivedType(tag: DW_TAG_member, scope: !1758, file: !1720, line: 112, baseType: !1761, size: 64)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1758, file: !1720, line: 112, size: 64, elements: !1762)
!1762 = !{!1763, !1764}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "desc_len", scope: !1761, file: !1720, line: 114, baseType: !966, size: 16)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !1761, file: !1720, line: 115, baseType: !1765, size: 48, offset: 16)
!1765 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 48, elements: !1766)
!1766 = !{!1767}
!1767 = !DISubrange(count: 6)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1758, file: !1720, line: 121, baseType: !388, size: 64)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1754, file: !1720, line: 123, baseType: !1770, size: 64, offset: 128)
!1770 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1771, size: 64)
!1771 = !DICompositeType(tag: DW_TAG_structure_type, name: "key_type", file: !1720, line: 96, flags: DIFlagFwdDecl)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1754, file: !1720, line: 124, baseType: !1773, size: 64, offset: 192)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_tag", file: !1720, line: 102, size: 192, elements: !1775)
!1775 = !{!1776, !1777, !1778}
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1774, file: !1720, line: 103, baseType: !429, size: 128, align: 64)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1774, file: !1720, line: 104, baseType: !1371, size: 32, offset: 128)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "removed", scope: !1774, file: !1720, line: 105, baseType: !261, size: 8, offset: 160)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1754, file: !1720, line: 125, baseType: !280, size: 64, offset: 256)
!1780 = !DIDerivedType(tag: DW_TAG_member, scope: !1751, file: !1720, line: 241, baseType: !1781, size: 320)
!1781 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1751, file: !1720, line: 241, size: 320, elements: !1782)
!1782 = !{!1783, !1784, !1785, !1786, !1787}
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1781, file: !1720, line: 242, baseType: !388, size: 64)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "len_desc", scope: !1781, file: !1720, line: 243, baseType: !388, size: 64, offset: 64)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1781, file: !1720, line: 244, baseType: !1770, size: 64, offset: 128)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "domain_tag", scope: !1781, file: !1720, line: 245, baseType: !1773, size: 64, offset: 192)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !1781, file: !1720, line: 246, baseType: !338, size: 64, offset: 256)
!1788 = !DIDerivedType(tag: DW_TAG_member, scope: !1719, file: !1720, line: 254, baseType: !1789, size: 256, offset: 1344)
!1789 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1719, file: !1720, line: 254, size: 256, elements: !1790)
!1790 = !{!1791, !1797}
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "payload", scope: !1789, file: !1720, line: 255, baseType: !1792, size: 256)
!1792 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "key_payload", file: !1720, line: 128, size: 256, elements: !1793)
!1793 = !{!1794, !1795}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_data0", scope: !1792, file: !1720, line: 129, baseType: !228, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1792, file: !1720, line: 130, baseType: !1796, size: 256)
!1796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !228, size: 256, elements: !1303)
!1797 = !DIDerivedType(tag: DW_TAG_member, scope: !1789, file: !1720, line: 256, baseType: !1798, size: 256)
!1798 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !1789, file: !1720, line: 256, size: 256, elements: !1799)
!1799 = !{!1800, !1801}
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "name_link", scope: !1798, file: !1720, line: 258, baseType: !284, size: 128)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "keys", scope: !1798, file: !1720, line: 259, baseType: !1802, size: 128, offset: 128)
!1802 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array", file: !1803, line: 22, size: 128, elements: !1804)
!1803 = !DIFile(filename: "./include/linux/assoc_array.h", directory: "/home/lizy2001/genbc/linux")
!1804 = !{!1805, !1808}
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !1802, file: !1803, line: 23, baseType: !1806, size: 64)
!1806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1807, size: 64)
!1807 = !DICompositeType(tag: DW_TAG_structure_type, name: "assoc_array_ptr", file: !1803, line: 23, flags: DIFlagFwdDecl)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "nr_leaves_on_tree", scope: !1802, file: !1803, line: 24, baseType: !388, size: 64, offset: 64)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_link", scope: !1719, file: !1720, line: 274, baseType: !1810, size: 64, offset: 1600)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "key_restriction", file: !1720, line: 170, size: 192, elements: !1812)
!1812 = !{!1813, !1822, !1823}
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !1811, file: !1720, line: 171, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_typedef, name: "key_restrict_link_func_t", file: !1720, line: 165, baseType: !1815)
!1815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1816, size: 64)
!1816 = !DISubroutineType(types: !1817)
!1817 = !{!234, !1718, !1818, !1820, !1718}
!1818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1819, size: 64)
!1819 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1771)
!1820 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1821, size: 64)
!1821 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1792)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1811, file: !1720, line: 172, baseType: !1718, size: 64, offset: 64)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "keytype", scope: !1811, file: !1720, line: 173, baseType: !1770, size: 64, offset: 128)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "process_keyring", scope: !1690, file: !1691, line: 138, baseType: !1718, size: 64, offset: 768)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "thread_keyring", scope: !1690, file: !1691, line: 139, baseType: !1718, size: 64, offset: 832)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "request_key_auth", scope: !1690, file: !1691, line: 140, baseType: !1718, size: 64, offset: 896)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !1690, file: !1691, line: 145, baseType: !1828, size: 64, offset: 960)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "user_struct", file: !1830, line: 13, size: 896, elements: !1831)
!1830 = !DIFile(filename: "./include/linux/sched/user.h", directory: "/home/lizy2001/genbc/linux")
!1831 = !{!1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842}
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "__count", scope: !1829, file: !1830, line: 14, baseType: !1371, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "processes", scope: !1829, file: !1830, line: 15, baseType: !861, size: 32, offset: 32)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sigpending", scope: !1829, file: !1830, line: 16, baseType: !861, size: 32, offset: 64)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "epoll_watches", scope: !1829, file: !1830, line: 21, baseType: !792, size: 64, offset: 128)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "locked_shm", scope: !1829, file: !1830, line: 27, baseType: !388, size: 64, offset: 192)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "unix_inflight", scope: !1829, file: !1830, line: 28, baseType: !388, size: 64, offset: 256)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "pipe_bufs", scope: !1829, file: !1830, line: 29, baseType: !792, size: 64, offset: 320)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "uidhash_node", scope: !1829, file: !1830, line: 32, baseType: !704, size: 128, offset: 384)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1829, file: !1830, line: 33, baseType: !499, size: 32, offset: 512)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "locked_vm", scope: !1829, file: !1830, line: 37, baseType: !792, size: 64, offset: 576)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "ratelimit", scope: !1829, file: !1830, line: 44, baseType: !1843, size: 256, offset: 640)
!1843 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ratelimit_state", file: !1844, line: 15, size: 256, elements: !1845)
!1844 = !DIFile(filename: "./include/linux/ratelimit_types.h", directory: "/home/lizy2001/genbc/linux")
!1845 = !{!1846, !1847, !1848, !1849, !1850, !1851, !1852}
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1843, file: !1844, line: 16, baseType: !887)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "interval", scope: !1843, file: !1844, line: 18, baseType: !234, size: 32)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "burst", scope: !1843, file: !1844, line: 19, baseType: !234, size: 32, offset: 32)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "printed", scope: !1843, file: !1844, line: 20, baseType: !234, size: 32, offset: 64)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "missed", scope: !1843, file: !1844, line: 21, baseType: !234, size: 32, offset: 96)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !1843, file: !1844, line: 22, baseType: !388, size: 64, offset: 128)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1843, file: !1844, line: 23, baseType: !388, size: 64, offset: 192)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1690, file: !1691, line: 146, baseType: !1854, size: 64, offset: 1024)
!1854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1855, size: 64)
!1855 = !DICompositeType(tag: DW_TAG_structure_type, name: "user_namespace", file: !500, line: 18, flags: DIFlagFwdDecl)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "group_info", scope: !1690, file: !1691, line: 147, baseType: !1857, size: 64, offset: 1088)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "group_info", file: !1691, line: 25, size: 64, elements: !1859)
!1859 = !{!1860, !1861, !1862}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "usage", scope: !1858, file: !1691, line: 26, baseType: !861, size: 32)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "ngroups", scope: !1858, file: !1691, line: 27, baseType: !234, size: 32, offset: 32)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !1858, file: !1691, line: 28, baseType: !1863, offset: 64)
!1863 = !DICompositeType(tag: DW_TAG_array_type, baseType: !507, elements: !1864)
!1864 = !{!1865}
!1865 = !DISubrange(count: 0)
!1866 = !DIDerivedType(tag: DW_TAG_member, scope: !1690, file: !1691, line: 149, baseType: !1867, size: 128, offset: 1152)
!1867 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1690, file: !1691, line: 149, size: 128, elements: !1868)
!1868 = !{!1869, !1870}
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "non_rcu", scope: !1867, file: !1691, line: 150, baseType: !234, size: 32)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !1867, file: !1691, line: 151, baseType: !429, size: 128, align: 64)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "real_cred", scope: !1359, file: !1008, line: 926, baseType: !1688, size: 64, offset: 8576)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "cred", scope: !1359, file: !1008, line: 929, baseType: !1688, size: 64, offset: 8640)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "cached_requested_key", scope: !1359, file: !1008, line: 933, baseType: !1718, size: 64, offset: 8704)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "comm", scope: !1359, file: !1008, line: 943, baseType: !1875, size: 128, offset: 8768)
!1875 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 128, elements: !1876)
!1876 = !{!1877}
!1877 = !DISubrange(count: 16)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "nameidata", scope: !1359, file: !1008, line: 945, baseType: !1879, size: 64, offset: 8896)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DICompositeType(tag: DW_TAG_structure_type, name: "nameidata", file: !1008, line: 49, flags: DIFlagFwdDecl)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "fs", scope: !1359, file: !1008, line: 956, baseType: !1882, size: 64, offset: 8960)
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = !DICompositeType(tag: DW_TAG_structure_type, name: "fs_struct", file: !1008, line: 45, flags: DIFlagFwdDecl)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !1359, file: !1008, line: 959, baseType: !1885, size: 64, offset: 9024)
!1885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1886, size: 64)
!1886 = !DICompositeType(tag: DW_TAG_structure_type, name: "files_struct", file: !1008, line: 959, flags: DIFlagFwdDecl)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "io_uring", scope: !1359, file: !1008, line: 962, baseType: !1888, size: 64, offset: 9088)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_uring_task", file: !1008, line: 66, flags: DIFlagFwdDecl)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "nsproxy", scope: !1359, file: !1008, line: 966, baseType: !1891, size: 64, offset: 9152)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DICompositeType(tag: DW_TAG_structure_type, name: "nsproxy", file: !1008, line: 50, flags: DIFlagFwdDecl)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1359, file: !1008, line: 969, baseType: !1894, size: 64, offset: 9216)
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "signal_struct", file: !1896, line: 82, size: 7296, elements: !1897)
!1896 = !DIFile(filename: "./include/linux/sched/signal.h", directory: "/home/lizy2001/genbc/linux")
!1897 = !{!1898, !1899, !1900, !1901, !1902, !1903, !1904, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1933, !1942, !1943, !1945, !1946, !1947, !1950, !1956, !1957, !1958, !1959, !1960, !1961, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1980, !1981, !1988, !1989, !1990, !1991, !1992, !1993}
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sigcnt", scope: !1895, file: !1896, line: 83, baseType: !1371, size: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "live", scope: !1895, file: !1896, line: 84, baseType: !861, size: 32, offset: 32)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "nr_threads", scope: !1895, file: !1896, line: 85, baseType: !234, size: 32, offset: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "thread_head", scope: !1895, file: !1896, line: 86, baseType: !284, size: 128, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "wait_chldexit", scope: !1895, file: !1896, line: 88, baseType: !1622, size: 128, offset: 256)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "curr_target", scope: !1895, file: !1896, line: 91, baseType: !1358, size: 64, offset: 384)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "shared_pending", scope: !1895, file: !1896, line: 94, baseType: !1905, size: 192, offset: 448)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigpending", file: !1906, line: 30, size: 192, elements: !1907)
!1906 = !DIFile(filename: "./include/linux/signal_types.h", directory: "/home/lizy2001/genbc/linux")
!1907 = !{!1908, !1909}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1905, file: !1906, line: 31, baseType: !284, size: 128)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "signal", scope: !1905, file: !1906, line: 32, baseType: !1910, size: 64, offset: 128)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigset_t", file: !1911, line: 25, baseType: !1912)
!1911 = !DIFile(filename: "./arch/x86/include/asm/signal.h", directory: "/home/lizy2001/genbc/linux")
!1912 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1911, line: 23, size: 64, elements: !1913)
!1913 = !{!1914}
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1912, file: !1911, line: 24, baseType: !1511, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "multiprocess", scope: !1895, file: !1896, line: 97, baseType: !700, size: 64, offset: 640)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_code", scope: !1895, file: !1896, line: 100, baseType: !234, size: 32, offset: 704)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "notify_count", scope: !1895, file: !1896, line: 106, baseType: !234, size: 32, offset: 736)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "group_exit_task", scope: !1895, file: !1896, line: 107, baseType: !1358, size: 64, offset: 768)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "group_stop_count", scope: !1895, file: !1896, line: 110, baseType: !234, size: 32, offset: 832)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1895, file: !1896, line: 111, baseType: !7, size: 32, offset: 864)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "is_child_subreaper", scope: !1895, file: !1896, line: 122, baseType: !7, size: 1, offset: 896, flags: DIFlagBitField, extraData: i64 896)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "has_child_subreaper", scope: !1895, file: !1896, line: 123, baseType: !7, size: 1, offset: 897, flags: DIFlagBitField, extraData: i64 896)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timer_id", scope: !1895, file: !1896, line: 128, baseType: !234, size: 32, offset: 928)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "posix_timers", scope: !1895, file: !1896, line: 129, baseType: !284, size: 128, offset: 960)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "real_timer", scope: !1895, file: !1896, line: 132, baseType: !1433, size: 512, offset: 1088)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "it_real_incr", scope: !1895, file: !1896, line: 133, baseType: !1441, size: 64, offset: 1600)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "it", scope: !1895, file: !1896, line: 140, baseType: !1928, size: 256, offset: 1664)
!1928 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1929, size: 256, elements: !1710)
!1929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cpu_itimer", file: !1896, line: 38, size: 128, elements: !1930)
!1930 = !{!1931, !1932}
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !1929, file: !1896, line: 39, baseType: !485, size: 64)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1929, file: !1896, line: 40, baseType: !485, size: 64, offset: 64)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "cputimer", scope: !1895, file: !1896, line: 146, baseType: !1934, size: 192, offset: 1920)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_group_cputimer", file: !1896, line: 66, size: 192, elements: !1935)
!1935 = !{!1936}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "cputime_atomic", scope: !1934, file: !1896, line: 67, baseType: !1937, size: 192)
!1937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_cputime_atomic", file: !1896, line: 47, size: 192, elements: !1938)
!1938 = !{!1939, !1940, !1941}
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1937, file: !1896, line: 48, baseType: !794, size: 64)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1937, file: !1896, line: 49, baseType: !794, size: 64, offset: 64)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "sum_exec_runtime", scope: !1937, file: !1896, line: 50, baseType: !794, size: 64, offset: 128)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "posix_cputimers", scope: !1895, file: !1896, line: 150, baseType: !1671, size: 640, offset: 2112)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "pids", scope: !1895, file: !1896, line: 153, baseType: !1944, size: 256, offset: 2752)
!1944 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1612, size: 256, elements: !1303)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "tty_old_pgrp", scope: !1895, file: !1896, line: 159, baseType: !1612, size: 64, offset: 3008)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "leader", scope: !1895, file: !1896, line: 162, baseType: !234, size: 32, offset: 3072)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "tty", scope: !1895, file: !1896, line: 164, baseType: !1948, size: 64, offset: 3136)
!1948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1949, size: 64)
!1949 = !DICompositeType(tag: DW_TAG_structure_type, name: "tty_struct", file: !1896, line: 164, flags: DIFlagFwdDecl)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "stats_lock", scope: !1895, file: !1896, line: 175, baseType: !1951, size: 32, offset: 3200)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "seqlock_t", file: !452, line: 805, baseType: !1952)
!1952 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !452, line: 798, size: 32, elements: !1953)
!1953 = !{!1954, !1955}
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "seqcount", scope: !1952, file: !452, line: 803, baseType: !451, size: 32)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1952, file: !452, line: 804, baseType: !297, offset: 32)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "utime", scope: !1895, file: !1896, line: 176, baseType: !485, size: 64, offset: 3264)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !1895, file: !1896, line: 176, baseType: !485, size: 64, offset: 3328)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "cutime", scope: !1895, file: !1896, line: 176, baseType: !485, size: 64, offset: 3392)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "cstime", scope: !1895, file: !1896, line: 176, baseType: !485, size: 64, offset: 3456)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "gtime", scope: !1895, file: !1896, line: 177, baseType: !485, size: 64, offset: 3520)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "cgtime", scope: !1895, file: !1896, line: 178, baseType: !485, size: 64, offset: 3584)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "prev_cputime", scope: !1895, file: !1896, line: 179, baseType: !1659, size: 128, offset: 3648)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "nvcsw", scope: !1895, file: !1896, line: 180, baseType: !388, size: 64, offset: 3776)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "nivcsw", scope: !1895, file: !1896, line: 180, baseType: !388, size: 64, offset: 3840)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "cnvcsw", scope: !1895, file: !1896, line: 180, baseType: !388, size: 64, offset: 3904)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "cnivcsw", scope: !1895, file: !1896, line: 180, baseType: !388, size: 64, offset: 3968)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "min_flt", scope: !1895, file: !1896, line: 181, baseType: !388, size: 64, offset: 4032)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "maj_flt", scope: !1895, file: !1896, line: 181, baseType: !388, size: 64, offset: 4096)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "cmin_flt", scope: !1895, file: !1896, line: 181, baseType: !388, size: 64, offset: 4160)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "cmaj_flt", scope: !1895, file: !1896, line: 181, baseType: !388, size: 64, offset: 4224)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "inblock", scope: !1895, file: !1896, line: 182, baseType: !388, size: 64, offset: 4288)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "oublock", scope: !1895, file: !1896, line: 182, baseType: !388, size: 64, offset: 4352)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "cinblock", scope: !1895, file: !1896, line: 182, baseType: !388, size: 64, offset: 4416)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "coublock", scope: !1895, file: !1896, line: 182, baseType: !388, size: 64, offset: 4480)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "maxrss", scope: !1895, file: !1896, line: 183, baseType: !388, size: 64, offset: 4544)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cmaxrss", scope: !1895, file: !1896, line: 183, baseType: !388, size: 64, offset: 4608)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1895, file: !1896, line: 184, baseType: !1978, offset: 4672)
!1978 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "task_io_accounting", file: !1979, line: 12, elements: !311)
!1979 = !DIFile(filename: "./include/linux/task_io_accounting.h", directory: "/home/lizy2001/genbc/linux")
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "sum_sched_runtime", scope: !1895, file: !1896, line: 192, baseType: !487, size: 64, offset: 4672)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "rlim", scope: !1895, file: !1896, line: 203, baseType: !1982, size: 2048, offset: 4736)
!1982 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1983, size: 2048, elements: !1876)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rlimit", file: !1984, line: 43, size: 128, elements: !1985)
!1984 = !DIFile(filename: "./include/uapi/linux/resource.h", directory: "/home/lizy2001/genbc/linux")
!1985 = !{!1986, !1987}
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_cur", scope: !1983, file: !1984, line: 44, baseType: !387, size: 64)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "rlim_max", scope: !1983, file: !1984, line: 45, baseType: !387, size: 64, offset: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "oom_flag_origin", scope: !1895, file: !1896, line: 220, baseType: !261, size: 8, offset: 6784)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj", scope: !1895, file: !1896, line: 221, baseType: !1347, size: 16, offset: 6800)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "oom_score_adj_min", scope: !1895, file: !1896, line: 222, baseType: !1347, size: 16, offset: 6816)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "oom_mm", scope: !1895, file: !1896, line: 224, baseType: !1122, size: 64, offset: 6848)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "cred_guard_mutex", scope: !1895, file: !1896, line: 227, baseType: !788, size: 192, offset: 6912)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "exec_update_mutex", scope: !1895, file: !1896, line: 233, baseType: !788, size: 192, offset: 7104)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "sighand", scope: !1359, file: !1008, line: 970, baseType: !1995, size: 64, offset: 9280)
!1995 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1996, size: 64)
!1996 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sighand_struct", file: !1896, line: 20, size: 16576, elements: !1997)
!1997 = !{!1998, !1999, !2000, !2001}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "siglock", scope: !1996, file: !1896, line: 21, baseType: !297)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1996, file: !1896, line: 22, baseType: !1371, size: 32)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "signalfd_wqh", scope: !1996, file: !1896, line: 23, baseType: !1622, size: 128, offset: 64)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1996, file: !1896, line: 24, baseType: !2002, size: 16384, offset: 192)
!2002 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2003, size: 16384, elements: !343)
!2003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sigaction", file: !1906, line: 49, size: 256, elements: !2004)
!2004 = !{!2005}
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "sa", scope: !2003, file: !1906, line: 50, baseType: !2006, size: 256)
!2006 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sigaction", file: !1906, line: 35, size: 256, elements: !2007)
!2007 = !{!2008, !2015, !2016, !2022}
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "sa_handler", scope: !2006, file: !1906, line: 37, baseType: !2009, size: 64)
!2009 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sighandler_t", file: !2010, line: 19, baseType: !2011)
!2010 = !DIFile(filename: "./include/uapi/asm-generic/signal-defs.h", directory: "/home/lizy2001/genbc/linux")
!2011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2012, size: 64)
!2012 = !DIDerivedType(tag: DW_TAG_typedef, name: "__signalfn_t", file: !2010, line: 18, baseType: !2013)
!2013 = !DISubroutineType(types: !2014)
!2014 = !{null, !234}
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "sa_flags", scope: !2006, file: !1906, line: 38, baseType: !388, size: 64, offset: 64)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "sa_restorer", scope: !2006, file: !1906, line: 44, baseType: !2017, size: 64, offset: 128)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "__sigrestore_t", file: !2010, line: 22, baseType: !2018)
!2018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2019 = !DIDerivedType(tag: DW_TAG_typedef, name: "__restorefn_t", file: !2010, line: 21, baseType: !2020)
!2020 = !DISubroutineType(types: !2021)
!2021 = !{null}
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "sa_mask", scope: !2006, file: !1906, line: 46, baseType: !1910, size: 64, offset: 192)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "blocked", scope: !1359, file: !1008, line: 971, baseType: !1910, size: 64, offset: 9344)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "real_blocked", scope: !1359, file: !1008, line: 972, baseType: !1910, size: 64, offset: 9408)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "saved_sigmask", scope: !1359, file: !1008, line: 974, baseType: !1910, size: 64, offset: 9472)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "pending", scope: !1359, file: !1008, line: 975, baseType: !1905, size: 192, offset: 9536)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_sp", scope: !1359, file: !1008, line: 976, baseType: !388, size: 64, offset: 9728)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_size", scope: !1359, file: !1008, line: 977, baseType: !385, size: 64, offset: 9792)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "sas_ss_flags", scope: !1359, file: !1008, line: 978, baseType: !7, size: 32, offset: 9856)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "task_works", scope: !1359, file: !1008, line: 980, baseType: !432, size: 64, offset: 9920)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "seccomp", scope: !1359, file: !1008, line: 989, baseType: !2032, size: 128, offset: 9984)
!2032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp", file: !2033, line: 35, size: 128, elements: !2034)
!2033 = !DIFile(filename: "./include/linux/seccomp.h", directory: "/home/lizy2001/genbc/linux")
!2034 = !{!2035, !2036, !2037}
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2032, file: !2033, line: 36, baseType: !234, size: 32)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "filter_count", scope: !2032, file: !2033, line: 37, baseType: !861, size: 32, offset: 32)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2032, file: !2033, line: 38, baseType: !2038, size: 64, offset: 64)
!2038 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2039, size: 64)
!2039 = !DICompositeType(tag: DW_TAG_structure_type, name: "seccomp_filter", file: !2033, line: 23, flags: DIFlagFwdDecl)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "parent_exec_id", scope: !1359, file: !1008, line: 992, baseType: !485, size: 64, offset: 10112)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "self_exec_id", scope: !1359, file: !1008, line: 993, baseType: !485, size: 64, offset: 10176)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_lock", scope: !1359, file: !1008, line: 996, baseType: !297, offset: 10240)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pi_lock", scope: !1359, file: !1008, line: 999, baseType: !887, offset: 10240)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "wake_q", scope: !1359, file: !1008, line: 1001, baseType: !2045, size: 64, offset: 10240)
!2045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wake_q_node", file: !1008, line: 636, size: 64, elements: !2046)
!2046 = !{!2047}
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2045, file: !1008, line: 637, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2045, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "pi_waiters", scope: !1359, file: !1008, line: 1005, baseType: !866, size: 128, offset: 10304)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "pi_top_task", scope: !1359, file: !1008, line: 1007, baseType: !1358, size: 64, offset: 10432)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "pi_blocked_on", scope: !1359, file: !1008, line: 1009, baseType: !2052, size: 64, offset: 10496)
!2052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2053, size: 64)
!2053 = !DICompositeType(tag: DW_TAG_structure_type, name: "rt_mutex_waiter", file: !1008, line: 1009, flags: DIFlagFwdDecl)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "journal_info", scope: !1359, file: !1008, line: 1043, baseType: !228, size: 64, offset: 10560)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "bio_list", scope: !1359, file: !1008, line: 1046, baseType: !2056, size: 64, offset: 10624)
!2056 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2057, size: 64)
!2057 = !DICompositeType(tag: DW_TAG_structure_type, name: "bio_list", file: !1008, line: 41, flags: DIFlagFwdDecl)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "plug", scope: !1359, file: !1008, line: 1050, baseType: !2059, size: 64, offset: 10688)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "blk_plug", file: !1008, line: 42, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "reclaim_state", scope: !1359, file: !1008, line: 1054, baseType: !2062, size: 64, offset: 10752)
!2062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2063, size: 64)
!2063 = !DICompositeType(tag: DW_TAG_structure_type, name: "reclaim_state", file: !1008, line: 55, flags: DIFlagFwdDecl)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "backing_dev_info", scope: !1359, file: !1008, line: 1056, baseType: !2065, size: 64, offset: 10816)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DICompositeType(tag: DW_TAG_structure_type, name: "backing_dev_info", file: !1008, line: 40, flags: DIFlagFwdDecl)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "io_context", scope: !1359, file: !1008, line: 1058, baseType: !2068, size: 64, offset: 10880)
!2068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2069, size: 64)
!2069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_context", file: !2070, line: 99, size: 704, elements: !2071)
!2070 = !DIFile(filename: "./include/linux/iocontext.h", directory: "/home/lizy2001/genbc/linux")
!2071 = !{!2072, !2073, !2074, !2075, !2076, !2077, !2078, !2097, !2098}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2069, file: !2070, line: 100, baseType: !792, size: 64)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "active_ref", scope: !2069, file: !2070, line: 101, baseType: !861, size: 32, offset: 64)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "nr_tasks", scope: !2069, file: !2070, line: 102, baseType: !861, size: 32, offset: 96)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2069, file: !2070, line: 105, baseType: !297, offset: 128)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "ioprio", scope: !2069, file: !2070, line: 107, baseType: !380, size: 16, offset: 128)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "icq_tree", scope: !2069, file: !2070, line: 109, baseType: !853, size: 128, offset: 192)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "icq_hint", scope: !2069, file: !2070, line: 110, baseType: !2079, size: 64, offset: 320)
!2079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2080, size: 64)
!2080 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "io_cq", file: !2070, line: 73, size: 448, elements: !2081)
!2081 = !{!2082, !2085, !2086, !2091, !2096}
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !2080, file: !2070, line: 74, baseType: !2083, size: 64)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DICompositeType(tag: DW_TAG_structure_type, name: "request_queue", file: !2070, line: 74, flags: DIFlagFwdDecl)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "ioc", scope: !2080, file: !2070, line: 75, baseType: !2068, size: 64, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !2070, line: 83, baseType: !2087, size: 128, offset: 128)
!2087 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !2070, line: 83, size: 128, elements: !2088)
!2088 = !{!2089, !2090}
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "q_node", scope: !2087, file: !2070, line: 84, baseType: !284, size: 128)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_icq_cache", scope: !2087, file: !2070, line: 85, baseType: !1082, size: 64)
!2091 = !DIDerivedType(tag: DW_TAG_member, scope: !2080, file: !2070, line: 87, baseType: !2092, size: 128, offset: 256)
!2092 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2080, file: !2070, line: 87, size: 128, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "ioc_node", scope: !2092, file: !2070, line: 88, baseType: !704, size: 128)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "__rcu_head", scope: !2092, file: !2070, line: 89, baseType: !429, size: 128, align: 64)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2080, file: !2070, line: 92, baseType: !7, size: 32, offset: 384)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "icq_list", scope: !2069, file: !2070, line: 111, baseType: !700, size: 64, offset: 384)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "release_work", scope: !2069, file: !2070, line: 113, baseType: !2099, size: 256, offset: 448)
!2099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "work_struct", file: !2100, line: 102, size: 256, elements: !2101)
!2100 = !DIFile(filename: "./include/linux/workqueue.h", directory: "/home/lizy2001/genbc/linux")
!2101 = !{!2102, !2103, !2104}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2099, file: !2100, line: 103, baseType: !792, size: 64)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !2099, file: !2100, line: 104, baseType: !284, size: 128, offset: 64)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !2099, file: !2100, line: 105, baseType: !2105, size: 64, offset: 192)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "work_func_t", file: !2100, line: 21, baseType: !2106)
!2106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2107, size: 64)
!2107 = !DISubroutineType(types: !2108)
!2108 = !{null, !2109}
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "capture_control", scope: !1359, file: !1008, line: 1061, baseType: !2111, size: 64, offset: 10944)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DICompositeType(tag: DW_TAG_structure_type, name: "capture_control", file: !1008, line: 43, flags: DIFlagFwdDecl)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_message", scope: !1359, file: !1008, line: 1064, baseType: !388, size: 64, offset: 11008)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "last_siginfo", scope: !1359, file: !1008, line: 1065, baseType: !2115, size: 64, offset: 11072)
!2115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2116, size: 64)
!2116 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_siginfo_t", file: !1906, line: 14, baseType: !2117)
!2117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernel_siginfo", file: !1906, line: 12, size: 384, elements: !2118)
!2118 = !{!2119}
!2119 = !DIDerivedType(tag: DW_TAG_member, scope: !2117, file: !1906, line: 13, baseType: !2120, size: 384)
!2120 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2117, file: !1906, line: 13, size: 384, elements: !2121)
!2121 = !{!2122, !2123, !2124, !2125}
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "si_signo", scope: !2120, file: !1906, line: 13, baseType: !234, size: 32)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "si_errno", scope: !2120, file: !1906, line: 13, baseType: !234, size: 32, offset: 32)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "si_code", scope: !2120, file: !1906, line: 13, baseType: !234, size: 32, offset: 64)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "_sifields", scope: !2120, file: !1906, line: 13, baseType: !2126, size: 256, offset: 128)
!2126 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "__sifields", file: !2127, line: 32, size: 256, elements: !2128)
!2127 = !DIFile(filename: "./include/uapi/asm-generic/siginfo.h", directory: "/home/lizy2001/genbc/linux")
!2128 = !{!2129, !2134, !2147, !2153, !2162, !2182, !2187}
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "_kill", scope: !2126, file: !2127, line: 37, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !2127, line: 34, size: 64, elements: !2131)
!2131 = !{!2132, !2133}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2130, file: !2127, line: 35, baseType: !1601, size: 32)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2130, file: !2127, line: 36, baseType: !505, size: 32, offset: 32)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "_timer", scope: !2126, file: !2127, line: 45, baseType: !2135, size: 192)
!2135 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !2127, line: 40, size: 192, elements: !2136)
!2136 = !{!2137, !2139, !2140, !2146}
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "_tid", scope: !2135, file: !2127, line: 41, baseType: !2138, size: 32)
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_timer_t", file: !371, line: 95, baseType: !234)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "_overrun", scope: !2135, file: !2127, line: 42, baseType: !234, size: 32, offset: 32)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2135, file: !2127, line: 43, baseType: !2141, size: 64, offset: 64)
!2141 = !DIDerivedType(tag: DW_TAG_typedef, name: "sigval_t", file: !2127, line: 11, baseType: !2142)
!2142 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "sigval", file: !2127, line: 8, size: 64, elements: !2143)
!2143 = !{!2144, !2145}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "sival_int", scope: !2142, file: !2127, line: 9, baseType: !234, size: 32)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "sival_ptr", scope: !2142, file: !2127, line: 10, baseType: !228, size: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "_sys_private", scope: !2135, file: !2127, line: 44, baseType: !234, size: 32, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "_rt", scope: !2126, file: !2127, line: 52, baseType: !2148, size: 128)
!2148 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !2127, line: 48, size: 128, elements: !2149)
!2149 = !{!2150, !2151, !2152}
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2148, file: !2127, line: 49, baseType: !1601, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2148, file: !2127, line: 50, baseType: !505, size: 32, offset: 32)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "_sigval", scope: !2148, file: !2127, line: 51, baseType: !2141, size: 64, offset: 64)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "_sigchld", scope: !2126, file: !2127, line: 61, baseType: !2154, size: 256)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !2127, line: 55, size: 256, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2159, !2161}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "_pid", scope: !2154, file: !2127, line: 56, baseType: !1601, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "_uid", scope: !2154, file: !2127, line: 57, baseType: !505, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "_status", scope: !2154, file: !2127, line: 58, baseType: !234, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "_utime", scope: !2154, file: !2127, line: 59, baseType: !2160, size: 64, offset: 128)
!2160 = !DIDerivedType(tag: DW_TAG_typedef, name: "__kernel_clock_t", file: !371, line: 94, baseType: !372)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "_stime", scope: !2154, file: !2127, line: 60, baseType: !2160, size: 64, offset: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "_sigfault", scope: !2126, file: !2127, line: 95, baseType: !2163, size: 256)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !2127, line: 64, size: 256, elements: !2164)
!2164 = !{!2165, !2166}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "_addr", scope: !2163, file: !2127, line: 65, baseType: !228, size: 64)
!2166 = !DIDerivedType(tag: DW_TAG_member, scope: !2163, file: !2127, line: 77, baseType: !2167, size: 192, offset: 64)
!2167 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2163, file: !2127, line: 77, size: 192, elements: !2168)
!2168 = !{!2169, !2170, !2177}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_lsb", scope: !2167, file: !2127, line: 82, baseType: !1347, size: 16)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_bnd", scope: !2167, file: !2127, line: 88, baseType: !2171, size: 192)
!2171 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2167, file: !2127, line: 84, size: 192, elements: !2172)
!2172 = !{!2173, !2175, !2176}
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_bnd", scope: !2171, file: !2127, line: 85, baseType: !2174, size: 64)
!2174 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 64, elements: !1471)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "_lower", scope: !2171, file: !2127, line: 86, baseType: !228, size: 64, offset: 64)
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "_upper", scope: !2171, file: !2127, line: 87, baseType: !228, size: 64, offset: 128)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "_addr_pkey", scope: !2167, file: !2127, line: 93, baseType: !2178, size: 96)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2167, file: !2127, line: 90, size: 96, elements: !2179)
!2179 = !{!2180, !2181}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "_dummy_pkey", scope: !2178, file: !2127, line: 91, baseType: !2174, size: 64)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "_pkey", scope: !2178, file: !2127, line: 92, baseType: !481, size: 32, offset: 64)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "_sigpoll", scope: !2126, file: !2127, line: 101, baseType: !2183, size: 128)
!2183 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !2127, line: 98, size: 128, elements: !2184)
!2184 = !{!2185, !2186}
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "_band", scope: !2183, file: !2127, line: 99, baseType: !373, size: 64)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_fd", scope: !2183, file: !2127, line: 100, baseType: !234, size: 32, offset: 64)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_sigsys", scope: !2126, file: !2127, line: 108, baseType: !2188, size: 128)
!2188 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2126, file: !2127, line: 104, size: 128, elements: !2189)
!2189 = !{!2190, !2191, !2192}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "_call_addr", scope: !2188, file: !2127, line: 105, baseType: !228, size: 64)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "_syscall", scope: !2188, file: !2127, line: 106, baseType: !234, size: 32, offset: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "_arch", scope: !2188, file: !2127, line: 107, baseType: !7, size: 32, offset: 96)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "ioac", scope: !1359, file: !1008, line: 1067, baseType: !1978, offset: 11136)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "robust_list", scope: !1359, file: !1008, line: 1099, baseType: !2195, size: 64, offset: 11136)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2196, size: 64)
!2196 = !DICompositeType(tag: DW_TAG_structure_type, name: "robust_list_head", file: !1008, line: 56, flags: DIFlagFwdDecl)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_list", scope: !1359, file: !1008, line: 1103, baseType: !284, size: 128, offset: 11200)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "pi_state_cache", scope: !1359, file: !1008, line: 1104, baseType: !2199, size: 64, offset: 11328)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DICompositeType(tag: DW_TAG_structure_type, name: "futex_pi_state", file: !1008, line: 46, flags: DIFlagFwdDecl)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "futex_exit_mutex", scope: !1359, file: !1008, line: 1105, baseType: !788, size: 192, offset: 11392)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "futex_state", scope: !1359, file: !1008, line: 1106, baseType: !7, size: 32, offset: 11584)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_ctxp", scope: !1359, file: !1008, line: 1109, baseType: !2204, size: 128, offset: 11648)
!2204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2205, size: 128, elements: !1710)
!2205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2206, size: 64)
!2206 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event_context", file: !1008, line: 51, flags: DIFlagFwdDecl)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_mutex", scope: !1359, file: !1008, line: 1110, baseType: !788, size: 192, offset: 11776)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "perf_event_list", scope: !1359, file: !1008, line: 1111, baseType: !284, size: 128, offset: 11968)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "rseq", scope: !1359, file: !1008, line: 1173, baseType: !2210, size: 64, offset: 12096)
!2210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rseq", file: !2212, line: 62, size: 256, align: 256, elements: !2213)
!2212 = !DIFile(filename: "./include/uapi/linux/rseq.h", directory: "/home/lizy2001/genbc/linux")
!2213 = !{!2214, !2215, !2216, !2221}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id_start", scope: !2211, file: !2212, line: 75, baseType: !481, size: 32)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_id", scope: !2211, file: !2212, line: 90, baseType: !481, size: 32, offset: 32)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_cs", scope: !2211, file: !2212, line: 124, baseType: !2217, size: 64, offset: 64)
!2217 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2211, file: !2212, line: 109, size: 64, elements: !2218)
!2218 = !{!2219, !2220}
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "ptr64", scope: !2217, file: !2212, line: 110, baseType: !486, size: 64)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2217, file: !2212, line: 112, baseType: !486, size: 64)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2211, file: !2212, line: 144, baseType: !481, size: 32, offset: 128)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_sig", scope: !1359, file: !1008, line: 1174, baseType: !479, size: 32, offset: 12160)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "rseq_event_mask", scope: !1359, file: !1008, line: 1179, baseType: !388, size: 64, offset: 12224)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_ubc", scope: !1359, file: !1008, line: 1182, baseType: !2225, size: 128, offset: 12288)
!2225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tlbflush_unmap_batch", file: !1299, line: 76, size: 128, elements: !2226)
!2226 = !{!2227, !2232, !2233}
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2225, file: !1299, line: 85, baseType: !2228, size: 64)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "arch_tlbflush_unmap_batch", file: !2229, line: 7, size: 64, elements: !2230)
!2229 = !DIFile(filename: "./arch/x86/include/asm/tlbbatch.h", directory: "/home/lizy2001/genbc/linux")
!2230 = !{!2231}
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "cpumask", scope: !2228, file: !2229, line: 12, baseType: !1508, size: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "flush_required", scope: !2225, file: !1299, line: 88, baseType: !261, size: 8, offset: 64)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "writable", scope: !2225, file: !1299, line: 95, baseType: !261, size: 8, offset: 72)
!2234 = !DIDerivedType(tag: DW_TAG_member, scope: !1359, file: !1008, line: 1184, baseType: !2235, size: 128, offset: 12416)
!2235 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1359, file: !1008, line: 1184, size: 128, elements: !2236)
!2236 = !{!2237, !2238}
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "rcu_users", scope: !2235, file: !1008, line: 1185, baseType: !1371, size: 32)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2235, file: !1008, line: 1186, baseType: !429, size: 128, align: 64)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "splice_pipe", scope: !1359, file: !1008, line: 1190, baseType: !1006, size: 64, offset: 12544)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "task_frag", scope: !1359, file: !1008, line: 1192, baseType: !2241, size: 128, offset: 12608)
!2241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "page_frag", file: !1299, line: 64, size: 128, elements: !2242)
!2242 = !{!2243, !2244, !2245}
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !2241, file: !1299, line: 65, baseType: !835, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2241, file: !1299, line: 67, baseType: !481, size: 32, offset: 64)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2241, file: !1299, line: 68, baseType: !481, size: 32, offset: 96)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied", scope: !1359, file: !1008, line: 1206, baseType: !234, size: 32, offset: 12736)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "nr_dirtied_pause", scope: !1359, file: !1008, line: 1207, baseType: !234, size: 32, offset: 12768)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "dirty_paused_when", scope: !1359, file: !1008, line: 1209, baseType: !388, size: 64, offset: 12800)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "timer_slack_ns", scope: !1359, file: !1008, line: 1219, baseType: !485, size: 64, offset: 12864)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "default_timer_slack_ns", scope: !1359, file: !1008, line: 1220, baseType: !485, size: 64, offset: 12928)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "pagefault_disabled", scope: !1359, file: !1008, line: 1317, baseType: !234, size: 32, offset: 12992)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "oom_reaper_list", scope: !1359, file: !1008, line: 1319, baseType: !1358, size: 64, offset: 13056)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "stack_vm_area", scope: !1359, file: !1008, line: 1322, baseType: !2254, size: 64, offset: 13120)
!2254 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2255, size: 64)
!2255 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vm_struct", file: !2256, line: 56, size: 512, elements: !2257)
!2256 = !DIFile(filename: "./include/linux/vmalloc.h", directory: "/home/lizy2001/genbc/linux")
!2257 = !{!2258, !2259, !2260, !2261, !2262, !2263, !2264, !2266}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2255, file: !2256, line: 57, baseType: !2254, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !2255, file: !2256, line: 58, baseType: !228, size: 64, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2255, file: !2256, line: 59, baseType: !388, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2255, file: !2256, line: 60, baseType: !388, size: 64, offset: 192)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "pages", scope: !2255, file: !2256, line: 61, baseType: !927, size: 64, offset: 256)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "nr_pages", scope: !2255, file: !2256, line: 62, baseType: !7, size: 32, offset: 320)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "phys_addr", scope: !2255, file: !2256, line: 63, baseType: !2265, size: 64, offset: 384)
!2265 = !DIDerivedType(tag: DW_TAG_typedef, name: "phys_addr_t", file: !227, line: 153, baseType: !485)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "caller", scope: !2255, file: !2256, line: 64, baseType: !269, size: 64, offset: 448)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "stack_refcount", scope: !1359, file: !1008, line: 1326, baseType: !1371, size: 32, offset: 13184)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "mce_vaddr", scope: !1359, file: !1008, line: 1342, baseType: !228, size: 64, offset: 13248)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kflags", scope: !1359, file: !1008, line: 1343, baseType: !486, size: 64, offset: 13312)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "mce_addr", scope: !1359, file: !1008, line: 1344, baseType: !485, size: 64, offset: 13376)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "mce_ripv", scope: !1359, file: !1008, line: 1345, baseType: !486, size: 1, offset: 13440, flags: DIFlagBitField, extraData: i64 13440)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "mce_whole_page", scope: !1359, file: !1008, line: 1346, baseType: !486, size: 1, offset: 13441, flags: DIFlagBitField, extraData: i64 13440)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "__mce_reserved", scope: !1359, file: !1008, line: 1347, baseType: !486, size: 62, offset: 13442, flags: DIFlagBitField, extraData: i64 13440)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "mce_kill_me", scope: !1359, file: !1008, line: 1348, baseType: !429, size: 128, align: 64, offset: 13504)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "thread", scope: !1359, file: !1008, line: 1358, baseType: !2276, size: 34816, offset: 13824)
!2276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "thread_struct", file: !2277, line: 485, size: 34816, elements: !2278)
!2277 = !DIFile(filename: "./arch/x86/include/asm/processor.h", directory: "/home/lizy2001/genbc/linux")
!2278 = !{!2279, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2308, !2309, !2310, !2311, !2312, !2313, !2316, !2317, !2318}
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "tls_array", scope: !2276, file: !2277, line: 487, baseType: !2280, size: 192)
!2280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2281, size: 192, elements: !339)
!2281 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "desc_struct", file: !2282, line: 16, size: 64, elements: !2283)
!2282 = !DIFile(filename: "./arch/x86/include/asm/desc_defs.h", directory: "/home/lizy2001/genbc/linux")
!2283 = !{!2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296}
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "limit0", scope: !2281, file: !2282, line: 17, baseType: !966, size: 16)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "base0", scope: !2281, file: !2282, line: 18, baseType: !966, size: 16, offset: 16)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "base1", scope: !2281, file: !2282, line: 19, baseType: !966, size: 8, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2281, file: !2282, line: 19, baseType: !966, size: 4, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "s", scope: !2281, file: !2282, line: 19, baseType: !966, size: 1, offset: 44, flags: DIFlagBitField, extraData: i64 32)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "dpl", scope: !2281, file: !2282, line: 19, baseType: !966, size: 2, offset: 45, flags: DIFlagBitField, extraData: i64 32)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !2281, file: !2282, line: 19, baseType: !966, size: 1, offset: 47, flags: DIFlagBitField, extraData: i64 32)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "limit1", scope: !2281, file: !2282, line: 20, baseType: !966, size: 4, offset: 48, flags: DIFlagBitField, extraData: i64 32)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "avl", scope: !2281, file: !2282, line: 20, baseType: !966, size: 1, offset: 52, flags: DIFlagBitField, extraData: i64 32)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !2281, file: !2282, line: 20, baseType: !966, size: 1, offset: 53, flags: DIFlagBitField, extraData: i64 32)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !2281, file: !2282, line: 20, baseType: !966, size: 1, offset: 54, flags: DIFlagBitField, extraData: i64 32)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !2281, file: !2282, line: 20, baseType: !966, size: 1, offset: 55, flags: DIFlagBitField, extraData: i64 32)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "base2", scope: !2281, file: !2282, line: 20, baseType: !966, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 32)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2276, file: !2277, line: 491, baseType: !388, size: 64, offset: 192)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "es", scope: !2276, file: !2277, line: 495, baseType: !380, size: 16, offset: 256)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "ds", scope: !2276, file: !2277, line: 496, baseType: !380, size: 16, offset: 272)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "fsindex", scope: !2276, file: !2277, line: 497, baseType: !380, size: 16, offset: 288)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "gsindex", scope: !2276, file: !2277, line: 498, baseType: !380, size: 16, offset: 304)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "fsbase", scope: !2276, file: !2277, line: 502, baseType: !388, size: 64, offset: 320)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !2276, file: !2277, line: 503, baseType: !388, size: 64, offset: 384)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_bps", scope: !2276, file: !2277, line: 514, baseType: !2305, size: 256, offset: 448)
!2305 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2306, size: 256, elements: !1303)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = !DICompositeType(tag: DW_TAG_structure_type, name: "perf_event", file: !2277, line: 483, flags: DIFlagFwdDecl)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_dr6", scope: !2276, file: !2277, line: 516, baseType: !388, size: 64, offset: 704)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "ptrace_dr7", scope: !2276, file: !2277, line: 518, baseType: !388, size: 64, offset: 768)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "cr2", scope: !2276, file: !2277, line: 520, baseType: !388, size: 64, offset: 832)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "trap_nr", scope: !2276, file: !2277, line: 521, baseType: !388, size: 64, offset: 896)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "error_code", scope: !2276, file: !2277, line: 522, baseType: !388, size: 64, offset: 960)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "io_bitmap", scope: !2276, file: !2277, line: 528, baseType: !2314, size: 64, offset: 1024)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = !DICompositeType(tag: DW_TAG_structure_type, name: "io_bitmap", file: !2277, line: 10, flags: DIFlagFwdDecl)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "iopl_emul", scope: !2276, file: !2277, line: 535, baseType: !388, size: 64, offset: 1088)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "sig_on_uaccess_err", scope: !2276, file: !2277, line: 537, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "fpu", scope: !2276, file: !2277, line: 540, baseType: !2319, size: 33280, offset: 1536)
!2319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fpu", file: !2320, line: 317, size: 33280, elements: !2321)
!2320 = !DIFile(filename: "./arch/x86/include/asm/fpu/types.h", directory: "/home/lizy2001/genbc/linux")
!2321 = !{!2322, !2323, !2324}
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "last_cpu", scope: !2319, file: !2320, line: 330, baseType: !7, size: 32)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "avx512_timestamp", scope: !2319, file: !2320, line: 337, baseType: !388, size: 64, offset: 64)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !2319, file: !2320, line: 348, baseType: !2325, size: 32768, offset: 512)
!2325 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "fpregs_state", file: !2320, line: 304, size: 32768, elements: !2326)
!2326 = !{!2327, !2342, !2381, !2431, !2444}
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "fsave", scope: !2325, file: !2320, line: 305, baseType: !2328, size: 896)
!2328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fregs_state", file: !2320, line: 12, size: 896, elements: !2329)
!2329 = !{!2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2341}
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2328, file: !2320, line: 13, baseType: !479, size: 32)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2328, file: !2320, line: 14, baseType: !479, size: 32, offset: 32)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2328, file: !2320, line: 15, baseType: !479, size: 32, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2328, file: !2320, line: 16, baseType: !479, size: 32, offset: 96)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2328, file: !2320, line: 17, baseType: !479, size: 32, offset: 128)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2328, file: !2320, line: 18, baseType: !479, size: 32, offset: 160)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2328, file: !2320, line: 19, baseType: !479, size: 32, offset: 192)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2328, file: !2320, line: 22, baseType: !2338, size: 640, offset: 224)
!2338 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 640, elements: !2339)
!2339 = !{!2340}
!2340 = !DISubrange(count: 20)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !2328, file: !2320, line: 25, baseType: !479, size: 32, offset: 864)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "fxsave", scope: !2325, file: !2320, line: 306, baseType: !2343, size: 4096, align: 128)
!2343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fxregs_state", file: !2320, line: 34, size: 4096, align: 128, elements: !2344)
!2344 = !{!2345, !2346, !2347, !2348, !2349, !2364, !2365, !2366, !2370, !2372, !2376}
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2343, file: !2320, line: 35, baseType: !966, size: 16)
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2343, file: !2320, line: 36, baseType: !966, size: 16, offset: 16)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2343, file: !2320, line: 37, baseType: !966, size: 16, offset: 32)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "fop", scope: !2343, file: !2320, line: 38, baseType: !966, size: 16, offset: 48)
!2349 = !DIDerivedType(tag: DW_TAG_member, scope: !2343, file: !2320, line: 39, baseType: !2350, size: 128, offset: 64)
!2350 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !2320, line: 39, size: 128, elements: !2351)
!2351 = !{!2352, !2357}
!2352 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !2320, line: 40, baseType: !2353, size: 128)
!2353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2350, file: !2320, line: 40, size: 128, elements: !2354)
!2354 = !{!2355, !2356}
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "rip", scope: !2353, file: !2320, line: 41, baseType: !485, size: 64)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "rdp", scope: !2353, file: !2320, line: 42, baseType: !485, size: 64, offset: 64)
!2357 = !DIDerivedType(tag: DW_TAG_member, scope: !2350, file: !2320, line: 44, baseType: !2358, size: 128)
!2358 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2350, file: !2320, line: 44, size: 128, elements: !2359)
!2359 = !{!2360, !2361, !2362, !2363}
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2358, file: !2320, line: 45, baseType: !479, size: 32)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2358, file: !2320, line: 46, baseType: !479, size: 32, offset: 32)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2358, file: !2320, line: 47, baseType: !479, size: 32, offset: 64)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2358, file: !2320, line: 48, baseType: !479, size: 32, offset: 96)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr", scope: !2343, file: !2320, line: 51, baseType: !479, size: 32, offset: 192)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "mxcsr_mask", scope: !2343, file: !2320, line: 52, baseType: !479, size: 32, offset: 224)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2343, file: !2320, line: 55, baseType: !2367, size: 1024, offset: 256)
!2367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 1024, elements: !2368)
!2368 = !{!2369}
!2369 = !DISubrange(count: 32)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "xmm_space", scope: !2343, file: !2320, line: 58, baseType: !2371, size: 2048, offset: 1280)
!2371 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 2048, elements: !343)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "padding", scope: !2343, file: !2320, line: 60, baseType: !2373, size: 384, offset: 3328)
!2373 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 384, elements: !2374)
!2374 = !{!2375}
!2375 = !DISubrange(count: 12)
!2376 = !DIDerivedType(tag: DW_TAG_member, scope: !2343, file: !2320, line: 62, baseType: !2377, size: 384, offset: 3712)
!2377 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2343, file: !2320, line: 62, size: 384, elements: !2378)
!2378 = !{!2379, !2380}
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "padding1", scope: !2377, file: !2320, line: 63, baseType: !2373, size: 384)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "sw_reserved", scope: !2377, file: !2320, line: 64, baseType: !2373, size: 384)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !2325, file: !2320, line: 307, baseType: !2382, size: 1088)
!2382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "swregs_state", file: !2320, line: 79, size: 1088, elements: !2383)
!2383 = !{!2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393, !2394, !2395, !2396, !2397, !2398, !2430}
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "cwd", scope: !2382, file: !2320, line: 80, baseType: !479, size: 32)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "swd", scope: !2382, file: !2320, line: 81, baseType: !479, size: 32, offset: 32)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "twd", scope: !2382, file: !2320, line: 82, baseType: !479, size: 32, offset: 64)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "fip", scope: !2382, file: !2320, line: 83, baseType: !479, size: 32, offset: 96)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "fcs", scope: !2382, file: !2320, line: 84, baseType: !479, size: 32, offset: 128)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "foo", scope: !2382, file: !2320, line: 85, baseType: !479, size: 32, offset: 160)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "fos", scope: !2382, file: !2320, line: 86, baseType: !479, size: 32, offset: 192)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "st_space", scope: !2382, file: !2320, line: 88, baseType: !2338, size: 640, offset: 224)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "ftop", scope: !2382, file: !2320, line: 89, baseType: !1493, size: 8, offset: 864)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2382, file: !2320, line: 90, baseType: !1493, size: 8, offset: 872)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "lookahead", scope: !2382, file: !2320, line: 91, baseType: !1493, size: 8, offset: 880)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "no_update", scope: !2382, file: !2320, line: 92, baseType: !1493, size: 8, offset: 888)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "rm", scope: !2382, file: !2320, line: 93, baseType: !1493, size: 8, offset: 896)
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "alimit", scope: !2382, file: !2320, line: 94, baseType: !1493, size: 8, offset: 904)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2382, file: !2320, line: 95, baseType: !2399, size: 64, offset: 960)
!2399 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2400, size: 64)
!2400 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "math_emu_info", file: !2401, line: 11, size: 128, elements: !2402)
!2401 = !DIFile(filename: "./arch/x86/include/asm/math_emu.h", directory: "/home/lizy2001/genbc/linux")
!2402 = !{!2403, !2404}
!2403 = !DIDerivedType(tag: DW_TAG_member, name: "___orig_eip", scope: !2400, file: !2401, line: 12, baseType: !373, size: 64)
!2404 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2400, file: !2401, line: 13, baseType: !2405, size: 64, offset: 64)
!2405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_regs", file: !2407, line: 56, size: 1344, elements: !2408)
!2407 = !DIFile(filename: "./arch/x86/include/asm/ptrace.h", directory: "/home/lizy2001/genbc/linux")
!2408 = !{!2409, !2410, !2411, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429}
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "r15", scope: !2406, file: !2407, line: 61, baseType: !388, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "r14", scope: !2406, file: !2407, line: 62, baseType: !388, size: 64, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "r13", scope: !2406, file: !2407, line: 63, baseType: !388, size: 64, offset: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "r12", scope: !2406, file: !2407, line: 64, baseType: !388, size: 64, offset: 192)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "bp", scope: !2406, file: !2407, line: 65, baseType: !388, size: 64, offset: 256)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "bx", scope: !2406, file: !2407, line: 66, baseType: !388, size: 64, offset: 320)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "r11", scope: !2406, file: !2407, line: 68, baseType: !388, size: 64, offset: 384)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "r10", scope: !2406, file: !2407, line: 69, baseType: !388, size: 64, offset: 448)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "r9", scope: !2406, file: !2407, line: 70, baseType: !388, size: 64, offset: 512)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "r8", scope: !2406, file: !2407, line: 71, baseType: !388, size: 64, offset: 576)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "ax", scope: !2406, file: !2407, line: 72, baseType: !388, size: 64, offset: 640)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "cx", scope: !2406, file: !2407, line: 73, baseType: !388, size: 64, offset: 704)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "dx", scope: !2406, file: !2407, line: 74, baseType: !388, size: 64, offset: 768)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "si", scope: !2406, file: !2407, line: 75, baseType: !388, size: 64, offset: 832)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "di", scope: !2406, file: !2407, line: 76, baseType: !388, size: 64, offset: 896)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "orig_ax", scope: !2406, file: !2407, line: 81, baseType: !388, size: 64, offset: 960)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "ip", scope: !2406, file: !2407, line: 83, baseType: !388, size: 64, offset: 1024)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "cs", scope: !2406, file: !2407, line: 84, baseType: !388, size: 64, offset: 1088)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2406, file: !2407, line: 85, baseType: !388, size: 64, offset: 1152)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "sp", scope: !2406, file: !2407, line: 86, baseType: !388, size: 64, offset: 1216)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2406, file: !2407, line: 87, baseType: !388, size: 64, offset: 1280)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "entry_eip", scope: !2382, file: !2320, line: 96, baseType: !479, size: 32, offset: 1024)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "xsave", scope: !2325, file: !2320, line: 308, baseType: !2432, size: 4608, align: 512)
!2432 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xregs_state", file: !2320, line: 289, size: 4608, align: 512, elements: !2433)
!2433 = !{!2434, !2435, !2442}
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "i387", scope: !2432, file: !2320, line: 290, baseType: !2343, size: 4096, align: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !2432, file: !2320, line: 291, baseType: !2436, size: 512, offset: 4096)
!2436 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "xstate_header", file: !2320, line: 268, size: 512, elements: !2437)
!2437 = !{!2438, !2439, !2440}
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "xfeatures", scope: !2436, file: !2320, line: 269, baseType: !485, size: 64)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "xcomp_bv", scope: !2436, file: !2320, line: 270, baseType: !485, size: 64, offset: 64)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !2436, file: !2320, line: 271, baseType: !2441, size: 384, offset: 128)
!2441 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 384, elements: !1766)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "extended_state_area", scope: !2432, file: !2320, line: 292, baseType: !2443, offset: 4608)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, elements: !1864)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "__padding", scope: !2325, file: !2320, line: 309, baseType: !2445, size: 32768)
!2445 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 32768, elements: !2446)
!2446 = !{!2447}
!2447 = !DISubrange(count: 4096)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1355, file: !837, line: 378, baseType: !2449, size: 64, offset: 64)
!2449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "startup", scope: !1351, file: !837, line: 384, baseType: !1643, size: 192, offset: 192)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_lock", scope: !1126, file: !837, line: 500, baseType: !297, offset: 6656)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "ioctx_table", scope: !1126, file: !837, line: 501, baseType: !2453, size: 64, offset: 6656)
!2453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2454, size: 64)
!2454 = !DICompositeType(tag: DW_TAG_structure_type, name: "kioctx_table", file: !837, line: 387, flags: DIFlagFwdDecl)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "user_ns", scope: !1126, file: !837, line: 516, baseType: !1854, size: 64, offset: 6720)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "exe_file", scope: !1126, file: !837, line: 519, baseType: !416, size: 64, offset: 6784)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_subscriptions", scope: !1126, file: !837, line: 521, baseType: !2458, size: 64, offset: 6848)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DICompositeType(tag: DW_TAG_structure_type, name: "mmu_notifier_subscriptions", file: !837, line: 521, flags: DIFlagFwdDecl)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_pending", scope: !1126, file: !837, line: 545, baseType: !861, size: 32, offset: 6912)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "tlb_flush_batched", scope: !1126, file: !837, line: 548, baseType: !261, size: 8, offset: 6944)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "uprobes_state", scope: !1126, file: !837, line: 550, baseType: !2463, offset: 6952)
!2463 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uprobes_state", file: !2464, line: 142, elements: !311)
!2464 = !DIFile(filename: "./include/linux/uprobes.h", directory: "/home/lizy2001/genbc/linux")
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "async_put_work", scope: !1126, file: !837, line: 554, baseType: !2099, size: 256, offset: 6976)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "pasid", scope: !1126, file: !837, line: 557, baseType: !479, size: 32, offset: 7232)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "cpu_bitmap", scope: !1123, file: !837, line: 565, baseType: !2468, offset: 7296)
!2468 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, elements: !2469)
!2469 = !{!2470}
!2470 = !DISubrange(count: -1)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "pt_frag_refcount", scope: !1119, file: !837, line: 151, baseType: !861, size: 32)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "ptl", scope: !1111, file: !837, line: 156, baseType: !297, offset: 256)
!2473 = !DIDerivedType(tag: DW_TAG_member, scope: !841, file: !837, line: 159, baseType: !2474, size: 128)
!2474 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !841, file: !837, line: 159, size: 128, elements: !2475)
!2475 = !{!2476, !2540}
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "pgmap", scope: !2474, file: !837, line: 161, baseType: !2477, size: 64)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap", file: !31, line: 110, size: 1152, elements: !2479)
!2479 = !{!2480, !2490, !2511, !2512, !2513, !2514, !2515, !2527, !2528, !2529}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "altmap", scope: !2478, file: !31, line: 111, baseType: !2481, size: 384)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vmem_altmap", file: !31, line: 19, size: 384, elements: !2482)
!2482 = !{!2483, !2485, !2486, !2487, !2488, !2489}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "base_pfn", scope: !2481, file: !31, line: 20, baseType: !2484, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !388)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "end_pfn", scope: !2481, file: !31, line: 21, baseType: !2484, size: 64, offset: 64)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "reserve", scope: !2481, file: !31, line: 22, baseType: !2484, size: 64, offset: 128)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2481, file: !31, line: 23, baseType: !388, size: 64, offset: 192)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2481, file: !31, line: 24, baseType: !388, size: 64, offset: 256)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2481, file: !31, line: 25, baseType: !388, size: 64, offset: 320)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2478, file: !31, line: 112, baseType: !2491, size: 64, offset: 384)
!2491 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2492, size: 64)
!2492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref", file: !2493, line: 105, size: 128, elements: !2494)
!2493 = !DIFile(filename: "./include/linux/percpu-refcount.h", directory: "/home/lizy2001/genbc/linux")
!2494 = !{!2495, !2496}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_count_ptr", scope: !2492, file: !2493, line: 110, baseType: !388, size: 64)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2492, file: !2493, line: 118, baseType: !2497, size: 64, offset: 64)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_ref_data", file: !2493, line: 95, size: 448, elements: !2499)
!2499 = !{!2500, !2501, !2506, !2507, !2508, !2509, !2510}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2498, file: !2493, line: 96, baseType: !792, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !2498, file: !2493, line: 97, baseType: !2502, size: 64, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2503, size: 64)
!2503 = !DIDerivedType(tag: DW_TAG_typedef, name: "percpu_ref_func_t", file: !2493, line: 60, baseType: !2504)
!2504 = !DISubroutineType(types: !2505)
!2505 = !{null, !2491}
!2506 = !DIDerivedType(tag: DW_TAG_member, name: "confirm_switch", scope: !2498, file: !2493, line: 98, baseType: !2502, size: 64, offset: 128)
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "force_atomic", scope: !2498, file: !2493, line: 99, baseType: !261, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "allow_reinit", scope: !2498, file: !2493, line: 100, baseType: !261, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !2498, file: !2493, line: 101, baseType: !429, size: 128, align: 64, offset: 256)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !2498, file: !2493, line: 102, baseType: !2491, size: 64, offset: 384)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "internal_ref", scope: !2478, file: !31, line: 113, baseType: !2492, size: 128, offset: 448)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !2478, file: !31, line: 114, baseType: !1643, size: 192, offset: 576)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2478, file: !31, line: 115, baseType: !30, size: 32, offset: 768)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2478, file: !31, line: 116, baseType: !7, size: 32, offset: 800)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2478, file: !31, line: 117, baseType: !2516, size: 64, offset: 832)
!2516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2517, size: 64)
!2517 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2518)
!2518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pagemap_ops", file: !31, line: 67, size: 256, elements: !2519)
!2519 = !{!2520, !2521, !2525, !2526}
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "page_free", scope: !2518, file: !31, line: 73, baseType: !947, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "kill", scope: !2518, file: !31, line: 78, baseType: !2522, size: 64, offset: 64)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DISubroutineType(types: !2524)
!2524 = !{null, !2477}
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !2518, file: !31, line: 83, baseType: !2522, size: 64, offset: 128)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "migrate_to_ram", scope: !2518, file: !31, line: 89, baseType: !1175, size: 64, offset: 192)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !2478, file: !31, line: 118, baseType: !228, size: 64, offset: 896)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "nr_range", scope: !2478, file: !31, line: 119, baseType: !234, size: 32, offset: 960)
!2529 = !DIDerivedType(tag: DW_TAG_member, scope: !2478, file: !31, line: 120, baseType: !2530, size: 128, offset: 1024)
!2530 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2478, file: !31, line: 120, size: 128, elements: !2531)
!2531 = !{!2532, !2538}
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2530, file: !31, line: 121, baseType: !2533, size: 128)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "range", file: !2534, line: 6, size: 128, elements: !2535)
!2534 = !DIFile(filename: "./include/linux/range.h", directory: "/home/lizy2001/genbc/linux")
!2535 = !{!2536, !2537}
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2533, file: !2534, line: 7, baseType: !485, size: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !2533, file: !2534, line: 8, baseType: !485, size: 64, offset: 64)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "ranges", scope: !2530, file: !31, line: 122, baseType: !2539)
!2539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2533, elements: !1864)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "zone_device_data", scope: !2474, file: !837, line: 162, baseType: !228, size: 64, offset: 64)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "callback_head", scope: !841, file: !837, line: 176, baseType: !429, size: 128, align: 64)
!2542 = !DIDerivedType(tag: DW_TAG_member, scope: !836, file: !837, line: 179, baseType: !2543, size: 32, offset: 384)
!2543 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !836, file: !837, line: 179, size: 32, elements: !2544)
!2544 = !{!2545, !2546, !2547, !2548}
!2545 = !DIDerivedType(tag: DW_TAG_member, name: "_mapcount", scope: !2543, file: !837, line: 184, baseType: !861, size: 32)
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "page_type", scope: !2543, file: !837, line: 192, baseType: !7, size: 32)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !2543, file: !837, line: 194, baseType: !7, size: 32)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2543, file: !837, line: 195, baseType: !234, size: 32)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "_refcount", scope: !836, file: !837, line: 199, baseType: !861, size: 32, offset: 416)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "nr_cached_objects", scope: !722, file: !44, line: 1964, baseType: !2551, size: 64, offset: 1344)
!2551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2552, size: 64)
!2552 = !DISubroutineType(types: !2553)
!2553 = !{!373, !661, !2554}
!2554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2555, size: 64)
!2555 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrink_control", file: !2556, line: 12, size: 256, elements: !2557)
!2556 = !DIFile(filename: "./include/linux/shrinker.h", directory: "/home/lizy2001/genbc/linux")
!2557 = !{!2558, !2559, !2560, !2561, !2562}
!2558 = !DIDerivedType(tag: DW_TAG_member, name: "gfp_mask", scope: !2555, file: !2556, line: 13, baseType: !226, size: 32)
!2559 = !DIDerivedType(tag: DW_TAG_member, name: "nid", scope: !2555, file: !2556, line: 16, baseType: !234, size: 32, offset: 32)
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "nr_to_scan", scope: !2555, file: !2556, line: 23, baseType: !388, size: 64, offset: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "nr_scanned", scope: !2555, file: !2556, line: 30, baseType: !388, size: 64, offset: 128)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "memcg", scope: !2555, file: !2556, line: 33, baseType: !2563, size: 64, offset: 192)
!2563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2564, size: 64)
!2564 = !DICompositeType(tag: DW_TAG_structure_type, name: "mem_cgroup", file: !837, line: 27, flags: DIFlagFwdDecl)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "free_cached_objects", scope: !722, file: !44, line: 1966, baseType: !2551, size: 64, offset: 1408)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "dq_op", scope: !662, file: !44, line: 1424, baseType: !2567, size: 64, offset: 448)
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2569)
!2569 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot_operations", file: !38, line: 322, size: 704, elements: !2570)
!2570 = !{!2571, !2617, !2621, !2625, !2626, !2627, !2628, !2629, !2634, !2639, !2643}
!2571 = !DIDerivedType(tag: DW_TAG_member, name: "write_dquot", scope: !2569, file: !38, line: 323, baseType: !2572, size: 64)
!2572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2573, size: 64)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!234, !2575}
!2575 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2576, size: 64)
!2576 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dquot", file: !38, line: 294, size: 1600, elements: !2577)
!2577 = !{!2578, !2579, !2580, !2581, !2582, !2583, !2584, !2585, !2586, !2602, !2603, !2604}
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "dq_hash", scope: !2576, file: !38, line: 295, baseType: !704, size: 128)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "dq_inuse", scope: !2576, file: !38, line: 296, baseType: !284, size: 128, offset: 128)
!2580 = !DIDerivedType(tag: DW_TAG_member, name: "dq_free", scope: !2576, file: !38, line: 297, baseType: !284, size: 128, offset: 256)
!2581 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dirty", scope: !2576, file: !38, line: 298, baseType: !284, size: 128, offset: 384)
!2582 = !DIDerivedType(tag: DW_TAG_member, name: "dq_lock", scope: !2576, file: !38, line: 299, baseType: !788, size: 192, offset: 512)
!2583 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb_lock", scope: !2576, file: !38, line: 300, baseType: !297, offset: 704)
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "dq_count", scope: !2576, file: !38, line: 301, baseType: !861, size: 32, offset: 704)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "dq_sb", scope: !2576, file: !38, line: 302, baseType: !661, size: 64, offset: 768)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "dq_id", scope: !2576, file: !38, line: 303, baseType: !2587, size: 64, offset: 832)
!2587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kqid", file: !38, line: 68, size: 64, elements: !2588)
!2588 = !{!2589, !2601}
!2589 = !DIDerivedType(tag: DW_TAG_member, scope: !2587, file: !38, line: 69, baseType: !2590, size: 32)
!2590 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2587, file: !38, line: 69, size: 32, elements: !2591)
!2591 = !{!2592, !2593, !2594}
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2590, file: !38, line: 70, baseType: !499, size: 32)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "gid", scope: !2590, file: !38, line: 71, baseType: !507, size: 32)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "projid", scope: !2590, file: !38, line: 72, baseType: !2595, size: 32)
!2595 = !DIDerivedType(tag: DW_TAG_typedef, name: "kprojid_t", file: !2596, line: 24, baseType: !2597)
!2596 = !DIFile(filename: "./include/linux/projid.h", directory: "/home/lizy2001/genbc/linux")
!2597 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2596, line: 22, size: 32, elements: !2598)
!2598 = !{!2599}
!2599 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2597, file: !2596, line: 23, baseType: !2600, size: 32)
!2600 = !DIDerivedType(tag: DW_TAG_typedef, name: "projid_t", file: !2596, line: 20, baseType: !505)
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2587, file: !38, line: 74, baseType: !37, size: 32, offset: 32)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "dq_off", scope: !2576, file: !38, line: 304, baseType: !593, size: 64, offset: 896)
!2603 = !DIDerivedType(tag: DW_TAG_member, name: "dq_flags", scope: !2576, file: !38, line: 305, baseType: !388, size: 64, offset: 960)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "dq_dqb", scope: !2576, file: !38, line: 306, baseType: !2605, size: 576, offset: 1024)
!2605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqblk", file: !38, line: 205, size: 576, elements: !2606)
!2606 = !{!2607, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616}
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bhardlimit", scope: !2605, file: !38, line: 206, baseType: !2608, size: 64)
!2608 = !DIDerivedType(tag: DW_TAG_typedef, name: "qsize_t", file: !38, line: 66, baseType: !595)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_bsoftlimit", scope: !2605, file: !38, line: 207, baseType: !2608, size: 64, offset: 64)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curspace", scope: !2605, file: !38, line: 208, baseType: !2608, size: 64, offset: 128)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_rsvspace", scope: !2605, file: !38, line: 209, baseType: !2608, size: 64, offset: 192)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_ihardlimit", scope: !2605, file: !38, line: 210, baseType: !2608, size: 64, offset: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_isoftlimit", scope: !2605, file: !38, line: 211, baseType: !2608, size: 64, offset: 320)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_curinodes", scope: !2605, file: !38, line: 212, baseType: !2608, size: 64, offset: 384)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_btime", scope: !2605, file: !38, line: 213, baseType: !601, size: 64, offset: 448)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dqb_itime", scope: !2605, file: !38, line: 214, baseType: !601, size: 64, offset: 512)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_dquot", scope: !2569, file: !38, line: 324, baseType: !2618, size: 64, offset: 64)
!2618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2619, size: 64)
!2619 = !DISubroutineType(types: !2620)
!2620 = !{!2575, !661, !234}
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_dquot", scope: !2569, file: !38, line: 325, baseType: !2622, size: 64, offset: 128)
!2622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2623, size: 64)
!2623 = !DISubroutineType(types: !2624)
!2624 = !{null, !2575}
!2625 = !DIDerivedType(tag: DW_TAG_member, name: "acquire_dquot", scope: !2569, file: !38, line: 326, baseType: !2572, size: 64, offset: 192)
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "release_dquot", scope: !2569, file: !38, line: 327, baseType: !2572, size: 64, offset: 256)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "mark_dirty", scope: !2569, file: !38, line: 328, baseType: !2572, size: 64, offset: 320)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "write_info", scope: !2569, file: !38, line: 329, baseType: !750, size: 64, offset: 384)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "get_reserved_space", scope: !2569, file: !38, line: 332, baseType: !2630, size: 64, offset: 448)
!2630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2631, size: 64)
!2631 = !DISubroutineType(types: !2632)
!2632 = !{!2633, !493}
!2633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2608, size: 64)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "get_projid", scope: !2569, file: !38, line: 333, baseType: !2635, size: 64, offset: 512)
!2635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2636, size: 64)
!2636 = !DISubroutineType(types: !2637)
!2637 = !{!234, !493, !2638}
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2595, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "get_inode_usage", scope: !2569, file: !38, line: 335, baseType: !2640, size: 64, offset: 576)
!2640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2641, size: 64)
!2641 = !DISubroutineType(types: !2642)
!2642 = !{!234, !493, !2633}
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2569, file: !38, line: 337, baseType: !2644, size: 64, offset: 640)
!2644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2645, size: 64)
!2645 = !DISubroutineType(types: !2646)
!2646 = !{!234, !661, !2647}
!2647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2587, size: 64)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "s_qcop", scope: !662, file: !44, line: 1425, baseType: !2649, size: 64, offset: 512)
!2649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2650, size: 64)
!2650 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2651)
!2651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quotactl_ops", file: !38, line: 428, size: 704, elements: !2652)
!2652 = !{!2653, !2657, !2658, !2662, !2663, !2664, !2679, !2702, !2706, !2707, !2730}
!2653 = !DIDerivedType(tag: DW_TAG_member, name: "quota_on", scope: !2651, file: !38, line: 429, baseType: !2654, size: 64)
!2654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2655, size: 64)
!2655 = !DISubroutineType(types: !2656)
!2656 = !{!234, !661, !234, !234, !611}
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "quota_off", scope: !2651, file: !38, line: 430, baseType: !750, size: 64, offset: 64)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "quota_enable", scope: !2651, file: !38, line: 431, baseType: !2659, size: 64, offset: 128)
!2659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2660, size: 64)
!2660 = !DISubroutineType(types: !2661)
!2661 = !{!234, !661, !7}
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "quota_disable", scope: !2651, file: !38, line: 432, baseType: !2659, size: 64, offset: 192)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "quota_sync", scope: !2651, file: !38, line: 433, baseType: !750, size: 64, offset: 256)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "set_info", scope: !2651, file: !38, line: 434, baseType: !2665, size: 64, offset: 320)
!2665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2666, size: 64)
!2666 = !DISubroutineType(types: !2667)
!2667 = !{!234, !661, !234, !2668}
!2668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2669, size: 64)
!2669 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_info", file: !38, line: 415, size: 256, elements: !2670)
!2670 = !{!2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678}
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "i_fieldmask", scope: !2669, file: !38, line: 416, baseType: !234, size: 32)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "i_flags", scope: !2669, file: !38, line: 417, baseType: !7, size: 32, offset: 32)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_timelimit", scope: !2669, file: !38, line: 418, baseType: !7, size: 32, offset: 64)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_timelimit", scope: !2669, file: !38, line: 420, baseType: !7, size: 32, offset: 96)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_timelimit", scope: !2669, file: !38, line: 421, baseType: !7, size: 32, offset: 128)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "i_spc_warnlimit", scope: !2669, file: !38, line: 422, baseType: !7, size: 32, offset: 160)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino_warnlimit", scope: !2669, file: !38, line: 423, baseType: !7, size: 32, offset: 192)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "i_rt_spc_warnlimit", scope: !2669, file: !38, line: 424, baseType: !7, size: 32, offset: 224)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "get_dqblk", scope: !2651, file: !38, line: 435, baseType: !2680, size: 64, offset: 384)
!2680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2681, size: 64)
!2681 = !DISubroutineType(types: !2682)
!2682 = !{!234, !661, !2587, !2683}
!2683 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2684, size: 64)
!2684 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_dqblk", file: !38, line: 343, size: 960, elements: !2685)
!2685 = !{!2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701}
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "d_fieldmask", scope: !2684, file: !38, line: 344, baseType: !234, size: 32)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_hardlimit", scope: !2684, file: !38, line: 345, baseType: !485, size: 64, offset: 64)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_softlimit", scope: !2684, file: !38, line: 346, baseType: !485, size: 64, offset: 128)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_hardlimit", scope: !2684, file: !38, line: 347, baseType: !485, size: 64, offset: 192)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_softlimit", scope: !2684, file: !38, line: 348, baseType: !485, size: 64, offset: 256)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "d_space", scope: !2684, file: !38, line: 349, baseType: !485, size: 64, offset: 320)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_count", scope: !2684, file: !38, line: 350, baseType: !485, size: 64, offset: 384)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_timer", scope: !2684, file: !38, line: 351, baseType: !798, size: 64, offset: 448)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_timer", scope: !2684, file: !38, line: 353, baseType: !798, size: 64, offset: 512)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "d_ino_warns", scope: !2684, file: !38, line: 354, baseType: !234, size: 32, offset: 576)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "d_spc_warns", scope: !2684, file: !38, line: 355, baseType: !234, size: 32, offset: 608)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_hardlimit", scope: !2684, file: !38, line: 356, baseType: !485, size: 64, offset: 640)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_softlimit", scope: !2684, file: !38, line: 357, baseType: !485, size: 64, offset: 704)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_space", scope: !2684, file: !38, line: 358, baseType: !485, size: 64, offset: 768)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_timer", scope: !2684, file: !38, line: 359, baseType: !798, size: 64, offset: 832)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "d_rt_spc_warns", scope: !2684, file: !38, line: 360, baseType: !234, size: 32, offset: 896)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "get_nextdqblk", scope: !2651, file: !38, line: 436, baseType: !2703, size: 64, offset: 448)
!2703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2704, size: 64)
!2704 = !DISubroutineType(types: !2705)
!2705 = !{!234, !661, !2647, !2683}
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "set_dqblk", scope: !2651, file: !38, line: 438, baseType: !2680, size: 64, offset: 512)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "get_state", scope: !2651, file: !38, line: 439, baseType: !2708, size: 64, offset: 576)
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2709, size: 64)
!2709 = !DISubroutineType(types: !2710)
!2710 = !{!234, !661, !2711}
!2711 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2712, size: 64)
!2712 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_state", file: !38, line: 409, size: 1408, elements: !2713)
!2713 = !{!2714, !2715}
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "s_incoredqs", scope: !2712, file: !38, line: 410, baseType: !7, size: 32)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "s_state", scope: !2712, file: !38, line: 411, baseType: !2716, size: 1344, offset: 64)
!2716 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2717, size: 1344, elements: !339)
!2717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "qc_type_state", file: !38, line: 395, size: 448, elements: !2718)
!2718 = !{!2719, !2720, !2721, !2722, !2723, !2724, !2725, !2726, !2727, !2729}
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2717, file: !38, line: 396, baseType: !7, size: 32)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "spc_timelimit", scope: !2717, file: !38, line: 397, baseType: !7, size: 32, offset: 32)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "ino_timelimit", scope: !2717, file: !38, line: 399, baseType: !7, size: 32, offset: 64)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_timelimit", scope: !2717, file: !38, line: 400, baseType: !7, size: 32, offset: 96)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "spc_warnlimit", scope: !2717, file: !38, line: 401, baseType: !7, size: 32, offset: 128)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "ino_warnlimit", scope: !2717, file: !38, line: 402, baseType: !7, size: 32, offset: 160)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "rt_spc_warnlimit", scope: !2717, file: !38, line: 403, baseType: !7, size: 32, offset: 192)
!2726 = !DIDerivedType(tag: DW_TAG_member, name: "ino", scope: !2717, file: !38, line: 404, baseType: !487, size: 64, offset: 256)
!2727 = !DIDerivedType(tag: DW_TAG_member, name: "blocks", scope: !2717, file: !38, line: 405, baseType: !2728, size: 64, offset: 320)
!2728 = !DIDerivedType(tag: DW_TAG_typedef, name: "blkcnt_t", file: !227, line: 126, baseType: !485)
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "nextents", scope: !2717, file: !38, line: 406, baseType: !2728, size: 64, offset: 384)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "rm_xquota", scope: !2651, file: !38, line: 440, baseType: !2659, size: 64, offset: 640)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "s_export_op", scope: !662, file: !44, line: 1426, baseType: !2732, size: 64, offset: 576)
!2732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2733, size: 64)
!2733 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2734)
!2734 = !DICompositeType(tag: DW_TAG_structure_type, name: "export_operations", file: !44, line: 49, flags: DIFlagFwdDecl)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "s_flags", scope: !662, file: !44, line: 1427, baseType: !388, size: 64, offset: 640)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "s_iflags", scope: !662, file: !44, line: 1428, baseType: !388, size: 64, offset: 704)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "s_magic", scope: !662, file: !44, line: 1429, baseType: !388, size: 64, offset: 768)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "s_root", scope: !662, file: !44, line: 1430, baseType: !446, size: 64, offset: 832)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "s_umount", scope: !662, file: !44, line: 1431, baseType: !881, size: 256, offset: 896)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "s_count", scope: !662, file: !44, line: 1432, baseType: !234, size: 32, offset: 1152)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "s_active", scope: !662, file: !44, line: 1433, baseType: !861, size: 32, offset: 1184)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "s_xattr", scope: !662, file: !44, line: 1437, baseType: !2743, size: 64, offset: 1216)
!2743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2744, size: 64)
!2744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2745, size: 64)
!2745 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2746)
!2746 = !DICompositeType(tag: DW_TAG_structure_type, name: "xattr_handler", file: !44, line: 1437, flags: DIFlagFwdDecl)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "s_roots", scope: !662, file: !44, line: 1449, baseType: !2748, size: 64, offset: 1280)
!2748 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "hlist_bl_head", file: !462, line: 34, size: 64, elements: !2749)
!2749 = !{!2750}
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !2748, file: !462, line: 35, baseType: !465, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "s_mounts", scope: !662, file: !44, line: 1450, baseType: !284, size: 128, offset: 1344)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdev", scope: !662, file: !44, line: 1451, baseType: !2753, size: 64, offset: 1472)
!2753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2754, size: 64)
!2754 = !DICompositeType(tag: DW_TAG_structure_type, name: "block_device", file: !44, line: 699, flags: DIFlagFwdDecl)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "s_bdi", scope: !662, file: !44, line: 1452, baseType: !2065, size: 64, offset: 1536)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "s_mtd", scope: !662, file: !44, line: 1453, baseType: !2757, size: 64, offset: 1600)
!2757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2758, size: 64)
!2758 = !DICompositeType(tag: DW_TAG_structure_type, name: "mtd_info", file: !44, line: 1453, flags: DIFlagFwdDecl)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "s_instances", scope: !662, file: !44, line: 1454, baseType: !704, size: 128, offset: 1664)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "s_quota_types", scope: !662, file: !44, line: 1455, baseType: !7, size: 32, offset: 1792)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "s_dquot", scope: !662, file: !44, line: 1456, baseType: !2762, size: 2432, offset: 1856)
!2762 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_info", file: !38, line: 518, size: 2432, elements: !2763)
!2763 = !{!2764, !2765, !2766, !2768, !2800}
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2762, file: !38, line: 519, baseType: !7, size: 32)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "dqio_sem", scope: !2762, file: !38, line: 520, baseType: !881, size: 256, offset: 64)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2762, file: !38, line: 521, baseType: !2767, size: 192, offset: 320)
!2767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !493, size: 192, elements: !339)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2762, file: !38, line: 522, baseType: !2769, size: 1728, offset: 512)
!2769 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2770, size: 1728, elements: !339)
!2770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_dqinfo", file: !38, line: 222, size: 576, elements: !2771)
!2771 = !{!2772, !2792, !2793, !2794, !2795, !2796, !2797, !2798, !2799}
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_format", scope: !2770, file: !38, line: 223, baseType: !2773, size: 64)
!2773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2774, size: 64)
!2774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_type", file: !38, line: 443, size: 256, elements: !2775)
!2775 = !{!2776, !2777, !2790, !2791}
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "qf_fmt_id", scope: !2774, file: !38, line: 444, baseType: !234, size: 32)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "qf_ops", scope: !2774, file: !38, line: 445, baseType: !2778, size: 64, offset: 64)
!2778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2779, size: 64)
!2779 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2780)
!2780 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "quota_format_ops", file: !38, line: 310, size: 512, elements: !2781)
!2781 = !{!2782, !2783, !2784, !2785, !2786, !2787, !2788, !2789}
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "check_quota_file", scope: !2780, file: !38, line: 311, baseType: !750, size: 64)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "read_file_info", scope: !2780, file: !38, line: 312, baseType: !750, size: 64, offset: 64)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "write_file_info", scope: !2780, file: !38, line: 313, baseType: !750, size: 64, offset: 128)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "free_file_info", scope: !2780, file: !38, line: 314, baseType: !750, size: 64, offset: 192)
!2786 = !DIDerivedType(tag: DW_TAG_member, name: "read_dqblk", scope: !2780, file: !38, line: 315, baseType: !2572, size: 64, offset: 256)
!2787 = !DIDerivedType(tag: DW_TAG_member, name: "commit_dqblk", scope: !2780, file: !38, line: 316, baseType: !2572, size: 64, offset: 320)
!2788 = !DIDerivedType(tag: DW_TAG_member, name: "release_dqblk", scope: !2780, file: !38, line: 317, baseType: !2572, size: 64, offset: 384)
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_id", scope: !2780, file: !38, line: 318, baseType: !2644, size: 64, offset: 448)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "qf_owner", scope: !2774, file: !38, line: 446, baseType: !695, size: 64, offset: 128)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "qf_next", scope: !2774, file: !38, line: 447, baseType: !2773, size: 64, offset: 192)
!2792 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_fmt_id", scope: !2770, file: !38, line: 224, baseType: !234, size: 32, offset: 64)
!2793 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_dirty_list", scope: !2770, file: !38, line: 226, baseType: !284, size: 128, offset: 128)
!2794 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_flags", scope: !2770, file: !38, line: 227, baseType: !388, size: 64, offset: 256)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_bgrace", scope: !2770, file: !38, line: 228, baseType: !7, size: 32, offset: 320)
!2796 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_igrace", scope: !2770, file: !38, line: 229, baseType: !7, size: 32, offset: 352)
!2797 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_spc_limit", scope: !2770, file: !38, line: 230, baseType: !2608, size: 64, offset: 384)
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_max_ino_limit", scope: !2770, file: !38, line: 231, baseType: !2608, size: 64, offset: 448)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "dqi_priv", scope: !2770, file: !38, line: 232, baseType: !228, size: 64, offset: 512)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2762, file: !38, line: 523, baseType: !2801, size: 192, offset: 2240)
!2801 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2778, size: 192, elements: !339)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "s_writers", scope: !662, file: !44, line: 1458, baseType: !2803, size: 2112, offset: 4288)
!2803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sb_writers", file: !44, line: 1410, size: 2112, elements: !2804)
!2804 = !{!2805, !2806, !2807}
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "frozen", scope: !2803, file: !44, line: 1411, baseType: !234, size: 32)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "wait_unfrozen", scope: !2803, file: !44, line: 1412, baseType: !1622, size: 128, offset: 64)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "rw_sem", scope: !2803, file: !44, line: 1413, baseType: !2808, size: 1920, offset: 192)
!2808 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2809, size: 1920, elements: !339)
!2809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "percpu_rw_semaphore", file: !2810, line: 12, size: 640, elements: !2811)
!2810 = !DIFile(filename: "./include/linux/percpu-rwsem.h", directory: "/home/lizy2001/genbc/linux")
!2811 = !{!2812, !2820, !2822, !2827, !2828}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "rss", scope: !2809, file: !2810, line: 13, baseType: !2813, size: 320)
!2813 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcu_sync", file: !2814, line: 17, size: 320, elements: !2815)
!2814 = !DIFile(filename: "./include/linux/rcu_sync.h", directory: "/home/lizy2001/genbc/linux")
!2815 = !{!2816, !2817, !2818, !2819}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "gp_state", scope: !2813, file: !2814, line: 18, baseType: !234, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "gp_count", scope: !2813, file: !2814, line: 19, baseType: !234, size: 32, offset: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "gp_wait", scope: !2813, file: !2814, line: 20, baseType: !1622, size: 128, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "cb_head", scope: !2813, file: !2814, line: 22, baseType: !429, size: 128, align: 64, offset: 192)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "read_count", scope: !2809, file: !2810, line: 14, baseType: !2821, size: 64, offset: 320)
!2821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "writer", scope: !2809, file: !2810, line: 15, baseType: !2823, size: 64, offset: 384)
!2823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcuwait", file: !2824, line: 16, size: 64, elements: !2825)
!2824 = !DIFile(filename: "./include/linux/rcuwait.h", directory: "/home/lizy2001/genbc/linux")
!2825 = !{!2826}
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !2823, file: !2824, line: 17, baseType: !1358, size: 64)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "waiters", scope: !2809, file: !2810, line: 16, baseType: !1622, size: 128, offset: 448)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2809, file: !2810, line: 17, baseType: !861, size: 32, offset: 576)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "s_fs_info", scope: !662, file: !44, line: 1465, baseType: !228, size: 64, offset: 6400)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_gran", scope: !662, file: !44, line: 1468, baseType: !479, size: 32, offset: 6464)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_min", scope: !662, file: !44, line: 1470, baseType: !601, size: 64, offset: 6528)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "s_time_max", scope: !662, file: !44, line: 1471, baseType: !601, size: 64, offset: 6592)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_mask", scope: !662, file: !44, line: 1473, baseType: !481, size: 32, offset: 6656)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_marks", scope: !662, file: !44, line: 1474, baseType: !2835, size: 64, offset: 6720)
!2835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2836, size: 64)
!2836 = !DICompositeType(tag: DW_TAG_structure_type, name: "fsnotify_mark_connector", file: !44, line: 603, flags: DIFlagFwdDecl)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "s_id", scope: !662, file: !44, line: 1477, baseType: !2838, size: 256, offset: 6784)
!2838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 256, elements: !2368)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "s_uuid", scope: !662, file: !44, line: 1478, baseType: !2840, size: 128, offset: 7040)
!2840 = !DIDerivedType(tag: DW_TAG_typedef, name: "uuid_t", file: !2841, line: 18, baseType: !2842)
!2841 = !DIFile(filename: "./include/linux/uuid.h", directory: "/home/lizy2001/genbc/linux")
!2842 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !2841, line: 16, size: 128, elements: !2843)
!2843 = !{!2844}
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !2842, file: !2841, line: 17, baseType: !2845, size: 128)
!2845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 128, elements: !1876)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "s_max_links", scope: !662, file: !44, line: 1480, baseType: !7, size: 32, offset: 7168)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "s_mode", scope: !662, file: !44, line: 1481, baseType: !2848, size: 32, offset: 7200)
!2848 = !DIDerivedType(tag: DW_TAG_typedef, name: "fmode_t", file: !227, line: 150, baseType: !7)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "s_vfs_rename_mutex", scope: !662, file: !44, line: 1487, baseType: !788, size: 192, offset: 7232)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "s_subtype", scope: !662, file: !44, line: 1493, baseType: !280, size: 64, offset: 7424)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "s_d_op", scope: !662, file: !44, line: 1495, baseType: !2852, size: 64, offset: 7488)
!2852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2853, size: 64)
!2853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2854)
!2854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dentry_operations", file: !444, line: 135, size: 1024, align: 512, elements: !2855)
!2855 = !{!2856, !2860, !2861, !2868, !2874, !2878, !2882, !2886, !2887, !2891, !2895, !2900, !2904}
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "d_revalidate", scope: !2854, file: !444, line: 136, baseType: !2857, size: 64)
!2857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2858, size: 64)
!2858 = !DISubroutineType(types: !2859)
!2859 = !{!234, !446, !7}
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "d_weak_revalidate", scope: !2854, file: !444, line: 137, baseType: !2857, size: 64, offset: 64)
!2861 = !DIDerivedType(tag: DW_TAG_member, name: "d_hash", scope: !2854, file: !444, line: 138, baseType: !2862, size: 64, offset: 128)
!2862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2863, size: 64)
!2863 = !DISubroutineType(types: !2864)
!2864 = !{!234, !2865, !2867}
!2865 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2866, size: 64)
!2866 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !447)
!2867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "d_compare", scope: !2854, file: !444, line: 139, baseType: !2869, size: 64, offset: 192)
!2869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2870, size: 64)
!2870 = !DISubroutineType(types: !2871)
!2871 = !{!234, !2865, !7, !280, !2872}
!2872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2873, size: 64)
!2873 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !470)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "d_delete", scope: !2854, file: !444, line: 141, baseType: !2875, size: 64, offset: 256)
!2875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2876, size: 64)
!2876 = !DISubroutineType(types: !2877)
!2877 = !{!234, !2865}
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "d_init", scope: !2854, file: !444, line: 142, baseType: !2879, size: 64, offset: 320)
!2879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2880, size: 64)
!2880 = !DISubroutineType(types: !2881)
!2881 = !{!234, !446}
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "d_release", scope: !2854, file: !444, line: 143, baseType: !2883, size: 64, offset: 384)
!2883 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2884, size: 64)
!2884 = !DISubroutineType(types: !2885)
!2885 = !{null, !446}
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "d_prune", scope: !2854, file: !444, line: 144, baseType: !2883, size: 64, offset: 448)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "d_iput", scope: !2854, file: !444, line: 145, baseType: !2888, size: 64, offset: 512)
!2888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2889, size: 64)
!2889 = !DISubroutineType(types: !2890)
!2890 = !{null, !446, !493}
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "d_dname", scope: !2854, file: !444, line: 146, baseType: !2892, size: 64, offset: 576)
!2892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2893, size: 64)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{!338, !446, !338, !234}
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "d_automount", scope: !2854, file: !444, line: 147, baseType: !2896, size: 64, offset: 640)
!2896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2897, size: 64)
!2897 = !DISubroutineType(types: !2898)
!2898 = !{!442, !2899}
!2899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !438, size: 64)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "d_manage", scope: !2854, file: !444, line: 148, baseType: !2901, size: 64, offset: 704)
!2901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2902, size: 64)
!2902 = !DISubroutineType(types: !2903)
!2903 = !{!234, !611, !261}
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "d_real", scope: !2854, file: !444, line: 149, baseType: !2905, size: 64, offset: 768)
!2905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2906, size: 64)
!2906 = !DISubroutineType(types: !2907)
!2907 = !{!446, !446, !2908}
!2908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2909, size: 64)
!2909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "cleancache_poolid", scope: !662, file: !44, line: 1500, baseType: !234, size: 32, offset: 7552)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "s_shrink", scope: !662, file: !44, line: 1502, baseType: !2912, size: 448, offset: 7616)
!2912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shrinker", file: !2556, line: 60, size: 448, elements: !2913)
!2913 = !{!2914, !2919, !2920, !2921, !2922, !2923, !2924}
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "count_objects", scope: !2912, file: !2556, line: 61, baseType: !2915, size: 64)
!2915 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2916, size: 64)
!2916 = !DISubroutineType(types: !2917)
!2917 = !{!388, !2918, !2554}
!2918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2912, size: 64)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "scan_objects", scope: !2912, file: !2556, line: 63, baseType: !2915, size: 64, offset: 64)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "batch", scope: !2912, file: !2556, line: 66, baseType: !373, size: 64, offset: 128)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "seeks", scope: !2912, file: !2556, line: 67, baseType: !234, size: 32, offset: 192)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2912, file: !2556, line: 68, baseType: !7, size: 32, offset: 224)
!2923 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2912, file: !2556, line: 71, baseType: !284, size: 128, offset: 256)
!2924 = !DIDerivedType(tag: DW_TAG_member, name: "nr_deferred", scope: !2912, file: !2556, line: 77, baseType: !2925, size: 64, offset: 384)
!2925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !792, size: 64)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "s_remove_count", scope: !662, file: !44, line: 1505, baseType: !792, size: 64, offset: 8064)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "s_fsnotify_inode_refs", scope: !662, file: !44, line: 1508, baseType: !792, size: 64, offset: 8128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "s_readonly_remount", scope: !662, file: !44, line: 1511, baseType: !234, size: 32, offset: 8192)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "s_wb_err", scope: !662, file: !44, line: 1514, baseType: !1056, size: 32, offset: 8224)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "s_dio_done_wq", scope: !662, file: !44, line: 1517, baseType: !2931, size: 64, offset: 8256)
!2931 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2932, size: 64)
!2932 = !DICompositeType(tag: DW_TAG_structure_type, name: "workqueue_struct", file: !2100, line: 18, flags: DIFlagFwdDecl)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "s_pins", scope: !662, file: !44, line: 1518, baseType: !700, size: 64, offset: 8320)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "s_user_ns", scope: !662, file: !44, line: 1525, baseType: !1854, size: 64, offset: 8384)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "s_dentry_lru", scope: !662, file: !44, line: 1532, baseType: !2936, size: 64, offset: 8448)
!2936 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru", file: !2937, line: 52, size: 64, elements: !2938)
!2937 = !DIFile(filename: "./include/linux/list_lru.h", directory: "/home/lizy2001/genbc/linux")
!2938 = !{!2939}
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2936, file: !2937, line: 53, baseType: !2940, size: 64)
!2940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2941, size: 64)
!2941 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_node", file: !2937, line: 40, size: 256, elements: !2942)
!2942 = !{!2943, !2944, !2949}
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2941, file: !2937, line: 42, baseType: !297)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "lru", scope: !2941, file: !2937, line: 44, baseType: !2945, size: 192)
!2945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "list_lru_one", file: !2937, line: 28, size: 192, elements: !2946)
!2946 = !{!2947, !2948}
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !2945, file: !2937, line: 29, baseType: !284, size: 128)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2945, file: !2937, line: 31, baseType: !373, size: 64, offset: 128)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "nr_items", scope: !2941, file: !2937, line: 49, baseType: !373, size: 64, offset: 192)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_lru", scope: !662, file: !44, line: 1533, baseType: !2936, size: 64, offset: 8512)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !662, file: !44, line: 1534, baseType: !429, size: 128, align: 64, offset: 8576)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "destroy_work", scope: !662, file: !44, line: 1535, baseType: !2099, size: 256, offset: 8704)
!2953 = !DIDerivedType(tag: DW_TAG_member, name: "s_sync_lock", scope: !662, file: !44, line: 1537, baseType: !788, size: 192, offset: 8960)
!2954 = !DIDerivedType(tag: DW_TAG_member, name: "s_stack_depth", scope: !662, file: !44, line: 1542, baseType: !234, size: 32, offset: 9152)
!2955 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_list_lock", scope: !662, file: !44, line: 1545, baseType: !297, offset: 9184)
!2956 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes", scope: !662, file: !44, line: 1546, baseType: !284, size: 128, offset: 9216)
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "s_inode_wblist_lock", scope: !662, file: !44, line: 1548, baseType: !297, offset: 9344)
!2958 = !DIDerivedType(tag: DW_TAG_member, name: "s_inodes_wb", scope: !662, file: !44, line: 1549, baseType: !284, size: 128, offset: 9344)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "i_mapping", scope: !494, file: !44, line: 624, baseType: !848, size: 64, offset: 256)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "i_ino", scope: !494, file: !44, line: 631, baseType: !388, size: 64, offset: 320)
!2961 = !DIDerivedType(tag: DW_TAG_member, scope: !494, file: !44, line: 639, baseType: !2962, size: 32, offset: 384)
!2962 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !494, file: !44, line: 639, size: 32, elements: !2963)
!2963 = !{!2964, !2966}
!2964 = !DIDerivedType(tag: DW_TAG_member, name: "i_nlink", scope: !2962, file: !44, line: 640, baseType: !2965, size: 32)
!2965 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7)
!2966 = !DIDerivedType(tag: DW_TAG_member, name: "__i_nlink", scope: !2962, file: !44, line: 641, baseType: !7, size: 32)
!2967 = !DIDerivedType(tag: DW_TAG_member, name: "i_rdev", scope: !494, file: !44, line: 643, baseType: !575, size: 32, offset: 416)
!2968 = !DIDerivedType(tag: DW_TAG_member, name: "i_size", scope: !494, file: !44, line: 644, baseType: !593, size: 64, offset: 448)
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "i_atime", scope: !494, file: !44, line: 645, baseType: !597, size: 128, offset: 512)
!2970 = !DIDerivedType(tag: DW_TAG_member, name: "i_mtime", scope: !494, file: !44, line: 646, baseType: !597, size: 128, offset: 640)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "i_ctime", scope: !494, file: !44, line: 647, baseType: !597, size: 128, offset: 768)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "i_lock", scope: !494, file: !44, line: 648, baseType: !297, offset: 896)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "i_bytes", scope: !494, file: !44, line: 649, baseType: !380, size: 16, offset: 896)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "i_blkbits", scope: !494, file: !44, line: 650, baseType: !1493, size: 8, offset: 912)
!2975 = !DIDerivedType(tag: DW_TAG_member, name: "i_write_hint", scope: !494, file: !44, line: 651, baseType: !1493, size: 8, offset: 920)
!2976 = !DIDerivedType(tag: DW_TAG_member, name: "i_blocks", scope: !494, file: !44, line: 652, baseType: !2728, size: 64, offset: 960)
!2977 = !DIDerivedType(tag: DW_TAG_member, name: "i_state", scope: !494, file: !44, line: 659, baseType: !388, size: 64, offset: 1024)
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "i_rwsem", scope: !494, file: !44, line: 660, baseType: !881, size: 256, offset: 1088)
!2979 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_when", scope: !494, file: !44, line: 662, baseType: !388, size: 64, offset: 1344)
!2980 = !DIDerivedType(tag: DW_TAG_member, name: "dirtied_time_when", scope: !494, file: !44, line: 663, baseType: !388, size: 64, offset: 1408)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "i_hash", scope: !494, file: !44, line: 665, baseType: !704, size: 128, offset: 1472)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "i_io_list", scope: !494, file: !44, line: 666, baseType: !284, size: 128, offset: 1600)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "i_lru", scope: !494, file: !44, line: 675, baseType: !284, size: 128, offset: 1728)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "i_sb_list", scope: !494, file: !44, line: 676, baseType: !284, size: 128, offset: 1856)
!2985 = !DIDerivedType(tag: DW_TAG_member, name: "i_wb_list", scope: !494, file: !44, line: 677, baseType: !284, size: 128, offset: 1984)
!2986 = !DIDerivedType(tag: DW_TAG_member, scope: !494, file: !44, line: 678, baseType: !2987, size: 128, offset: 2112)
!2987 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !494, file: !44, line: 678, size: 128, elements: !2988)
!2988 = !{!2989, !2990}
!2989 = !DIDerivedType(tag: DW_TAG_member, name: "i_dentry", scope: !2987, file: !44, line: 679, baseType: !700, size: 64)
!2990 = !DIDerivedType(tag: DW_TAG_member, name: "i_rcu", scope: !2987, file: !44, line: 680, baseType: !429, size: 128, align: 64)
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "i_version", scope: !494, file: !44, line: 682, baseType: !794, size: 64, offset: 2240)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "i_sequence", scope: !494, file: !44, line: 683, baseType: !794, size: 64, offset: 2304)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "i_count", scope: !494, file: !44, line: 684, baseType: !861, size: 32, offset: 2368)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "i_dio_count", scope: !494, file: !44, line: 685, baseType: !861, size: 32, offset: 2400)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "i_writecount", scope: !494, file: !44, line: 686, baseType: !861, size: 32, offset: 2432)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "i_readcount", scope: !494, file: !44, line: 688, baseType: !861, size: 32, offset: 2464)
!2997 = !DIDerivedType(tag: DW_TAG_member, scope: !494, file: !44, line: 690, baseType: !2998, size: 64, offset: 2496)
!2998 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !494, file: !44, line: 690, size: 64, elements: !2999)
!2999 = !{!3000, !3222}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "i_fop", scope: !2998, file: !44, line: 691, baseType: !3001, size: 64)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3002, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3003)
!3003 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_operations", file: !44, line: 1822, size: 2048, elements: !3004)
!3004 = !{!3005, !3006, !3010, !3014, !3018, !3019, !3020, !3024, !3037, !3038, !3046, !3050, !3051, !3055, !3056, !3060, !3065, !3066, !3070, !3074, !3182, !3186, !3187, !3191, !3192, !3196, !3200, !3205, !3209, !3213, !3217, !3221}
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3003, file: !44, line: 1823, baseType: !695, size: 64)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "llseek", scope: !3003, file: !44, line: 1824, baseType: !3007, size: 64, offset: 64)
!3007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3008, size: 64)
!3008 = !DISubroutineType(types: !3009)
!3009 = !{!593, !416, !593, !234}
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3003, file: !44, line: 1825, baseType: !3011, size: 64, offset: 128)
!3011 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3012, size: 64)
!3012 = !DISubroutineType(types: !3013)
!3013 = !{!369, !416, !338, !385, !810}
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3003, file: !44, line: 1826, baseType: !3015, size: 64, offset: 192)
!3015 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3016, size: 64)
!3016 = !DISubroutineType(types: !3017)
!3017 = !{!369, !416, !280, !385, !810}
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "read_iter", scope: !3003, file: !44, line: 1827, baseType: !951, size: 64, offset: 256)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "write_iter", scope: !3003, file: !44, line: 1828, baseType: !951, size: 64, offset: 320)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "iopoll", scope: !3003, file: !44, line: 1829, baseType: !3021, size: 64, offset: 384)
!3021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3022, size: 64)
!3022 = !DISubroutineType(types: !3023)
!3023 = !{!234, !954, !261}
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "iterate", scope: !3003, file: !44, line: 1830, baseType: !3025, size: 64, offset: 448)
!3025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3026, size: 64)
!3026 = !DISubroutineType(types: !3027)
!3027 = !{!234, !416, !3028}
!3028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3029, size: 64)
!3029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dir_context", file: !44, line: 1776, size: 128, elements: !3030)
!3030 = !{!3031, !3036}
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "actor", scope: !3029, file: !44, line: 1777, baseType: !3032, size: 64)
!3032 = !DIDerivedType(tag: DW_TAG_typedef, name: "filldir_t", file: !44, line: 1773, baseType: !3033)
!3033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3034, size: 64)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{!234, !3028, !280, !234, !593, !485, !7}
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !3029, file: !44, line: 1778, baseType: !593, size: 64, offset: 64)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "iterate_shared", scope: !3003, file: !44, line: 1831, baseType: !3025, size: 64, offset: 512)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3003, file: !44, line: 1832, baseType: !3039, size: 64, offset: 576)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{!3042, !416, !3044}
!3042 = !DIDerivedType(tag: DW_TAG_typedef, name: "__poll_t", file: !3043, line: 52, baseType: !7)
!3043 = !DIFile(filename: "./include/uapi/linux/types.h", directory: "/home/lizy2001/genbc/linux")
!3044 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3045, size: 64)
!3045 = !DICompositeType(tag: DW_TAG_structure_type, name: "poll_table_struct", file: !681, line: 27, flags: DIFlagFwdDecl)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "unlocked_ioctl", scope: !3003, file: !44, line: 1833, baseType: !3047, size: 64, offset: 640)
!3047 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3048, size: 64)
!3048 = !DISubroutineType(types: !3049)
!3049 = !{!373, !416, !7, !388}
!3050 = !DIDerivedType(tag: DW_TAG_member, name: "compat_ioctl", scope: !3003, file: !44, line: 1834, baseType: !3047, size: 64, offset: 704)
!3051 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3003, file: !44, line: 1835, baseType: !3052, size: 64, offset: 768)
!3052 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3053, size: 64)
!3053 = !DISubroutineType(types: !3054)
!3054 = !{!234, !416, !1129}
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_supported_flags", scope: !3003, file: !44, line: 1836, baseType: !388, size: 64, offset: 832)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3003, file: !44, line: 1837, baseType: !3057, size: 64, offset: 896)
!3057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3058, size: 64)
!3058 = !DISubroutineType(types: !3059)
!3059 = !{!234, !493, !416}
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "flush", scope: !3003, file: !44, line: 1838, baseType: !3061, size: 64, offset: 960)
!3061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3062, size: 64)
!3062 = !DISubroutineType(types: !3063)
!3063 = !{!234, !416, !3064}
!3064 = !DIDerivedType(tag: DW_TAG_typedef, name: "fl_owner_t", file: !44, line: 1007, baseType: !228)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3003, file: !44, line: 1839, baseType: !3057, size: 64, offset: 1024)
!3066 = !DIDerivedType(tag: DW_TAG_member, name: "fsync", scope: !3003, file: !44, line: 1840, baseType: !3067, size: 64, offset: 1088)
!3067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3068, size: 64)
!3068 = !DISubroutineType(types: !3069)
!3069 = !{!234, !416, !593, !593, !234}
!3070 = !DIDerivedType(tag: DW_TAG_member, name: "fasync", scope: !3003, file: !44, line: 1841, baseType: !3071, size: 64, offset: 1152)
!3071 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3072, size: 64)
!3072 = !DISubroutineType(types: !3073)
!3073 = !{!234, !234, !416, !234}
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3003, file: !44, line: 1842, baseType: !3075, size: 64, offset: 1216)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DISubroutineType(types: !3077)
!3077 = !{!234, !416, !234, !3078}
!3078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3079, size: 64)
!3079 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock", file: !44, line: 1062, size: 1664, elements: !3080)
!3080 = !{!3081, !3082, !3083, !3084, !3085, !3086, !3087, !3088, !3089, !3090, !3091, !3092, !3093, !3094, !3095, !3112, !3113, !3114, !3127, !3158}
!3081 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocker", scope: !3079, file: !44, line: 1063, baseType: !3078, size: 64)
!3082 = !DIDerivedType(tag: DW_TAG_member, name: "fl_list", scope: !3079, file: !44, line: 1064, baseType: !284, size: 128, offset: 64)
!3083 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link", scope: !3079, file: !44, line: 1065, baseType: !704, size: 128, offset: 192)
!3084 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_requests", scope: !3079, file: !44, line: 1066, baseType: !284, size: 128, offset: 320)
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "fl_blocked_member", scope: !3079, file: !44, line: 1069, baseType: !284, size: 128, offset: 448)
!3086 = !DIDerivedType(tag: DW_TAG_member, name: "fl_owner", scope: !3079, file: !44, line: 1072, baseType: !3064, size: 64, offset: 576)
!3087 = !DIDerivedType(tag: DW_TAG_member, name: "fl_flags", scope: !3079, file: !44, line: 1073, baseType: !7, size: 32, offset: 640)
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "fl_type", scope: !3079, file: !44, line: 1074, baseType: !491, size: 8, offset: 672)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "fl_pid", scope: !3079, file: !44, line: 1075, baseType: !7, size: 32, offset: 704)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "fl_link_cpu", scope: !3079, file: !44, line: 1076, baseType: !234, size: 32, offset: 736)
!3091 = !DIDerivedType(tag: DW_TAG_member, name: "fl_wait", scope: !3079, file: !44, line: 1077, baseType: !1622, size: 128, offset: 768)
!3092 = !DIDerivedType(tag: DW_TAG_member, name: "fl_file", scope: !3079, file: !44, line: 1078, baseType: !416, size: 64, offset: 896)
!3093 = !DIDerivedType(tag: DW_TAG_member, name: "fl_start", scope: !3079, file: !44, line: 1079, baseType: !593, size: 64, offset: 960)
!3094 = !DIDerivedType(tag: DW_TAG_member, name: "fl_end", scope: !3079, file: !44, line: 1080, baseType: !593, size: 64, offset: 1024)
!3095 = !DIDerivedType(tag: DW_TAG_member, name: "fl_fasync", scope: !3079, file: !44, line: 1082, baseType: !3096, size: 64, offset: 1088)
!3096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3097, size: 64)
!3097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fasync_struct", file: !44, line: 1314, size: 320, elements: !3098)
!3098 = !{!3099, !3107, !3108, !3109, !3110, !3111}
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "fa_lock", scope: !3097, file: !44, line: 1315, baseType: !3100)
!3100 = !DIDerivedType(tag: DW_TAG_typedef, name: "rwlock_t", file: !3101, line: 20, baseType: !3102)
!3101 = !DIFile(filename: "./include/linux/rwlock_types.h", directory: "/home/lizy2001/genbc/linux")
!3102 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3101, line: 11, elements: !3103)
!3103 = !{!3104}
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "raw_lock", scope: !3102, file: !3101, line: 12, baseType: !3105)
!3105 = !DIDerivedType(tag: DW_TAG_typedef, name: "arch_rwlock_t", file: !309, line: 33, baseType: !3106)
!3106 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !309, line: 31, elements: !311)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "magic", scope: !3097, file: !44, line: 1316, baseType: !234, size: 32)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "fa_fd", scope: !3097, file: !44, line: 1317, baseType: !234, size: 32, offset: 32)
!3109 = !DIDerivedType(tag: DW_TAG_member, name: "fa_next", scope: !3097, file: !44, line: 1318, baseType: !3096, size: 64, offset: 64)
!3110 = !DIDerivedType(tag: DW_TAG_member, name: "fa_file", scope: !3097, file: !44, line: 1319, baseType: !416, size: 64, offset: 128)
!3111 = !DIDerivedType(tag: DW_TAG_member, name: "fa_rcu", scope: !3097, file: !44, line: 1320, baseType: !429, size: 128, align: 64, offset: 192)
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "fl_break_time", scope: !3079, file: !44, line: 1084, baseType: !388, size: 64, offset: 1152)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "fl_downgrade_time", scope: !3079, file: !44, line: 1085, baseType: !388, size: 64, offset: 1216)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "fl_ops", scope: !3079, file: !44, line: 1087, baseType: !3115, size: 64, offset: 1280)
!3115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3116, size: 64)
!3116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3117)
!3117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_operations", file: !44, line: 1011, size: 128, elements: !3118)
!3118 = !{!3119, !3123}
!3119 = !DIDerivedType(tag: DW_TAG_member, name: "fl_copy_lock", scope: !3117, file: !44, line: 1012, baseType: !3120, size: 64)
!3120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3121, size: 64)
!3121 = !DISubroutineType(types: !3122)
!3122 = !{null, !3078, !3078}
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "fl_release_private", scope: !3117, file: !44, line: 1013, baseType: !3124, size: 64, offset: 64)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = !DISubroutineType(types: !3126)
!3126 = !{null, !3078}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "fl_lmops", scope: !3079, file: !44, line: 1088, baseType: !3128, size: 64, offset: 1344)
!3128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3129, size: 64)
!3129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3130)
!3130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lock_manager_operations", file: !44, line: 1016, size: 512, elements: !3131)
!3131 = !{!3132, !3136, !3140, !3141, !3145, !3149, !3153, !3157}
!3132 = !DIDerivedType(tag: DW_TAG_member, name: "lm_get_owner", scope: !3130, file: !44, line: 1017, baseType: !3133, size: 64)
!3133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3134, size: 64)
!3134 = !DISubroutineType(types: !3135)
!3135 = !{!3064, !3064}
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "lm_put_owner", scope: !3130, file: !44, line: 1018, baseType: !3137, size: 64, offset: 64)
!3137 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3138, size: 64)
!3138 = !DISubroutineType(types: !3139)
!3139 = !{null, !3064}
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "lm_notify", scope: !3130, file: !44, line: 1019, baseType: !3124, size: 64, offset: 128)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "lm_grant", scope: !3130, file: !44, line: 1020, baseType: !3142, size: 64, offset: 192)
!3142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3143, size: 64)
!3143 = !DISubroutineType(types: !3144)
!3144 = !{!234, !3078, !234}
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "lm_break", scope: !3130, file: !44, line: 1021, baseType: !3146, size: 64, offset: 256)
!3146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3147, size: 64)
!3147 = !DISubroutineType(types: !3148)
!3148 = !{!261, !3078}
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "lm_change", scope: !3130, file: !44, line: 1022, baseType: !3150, size: 64, offset: 320)
!3150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3151, size: 64)
!3151 = !DISubroutineType(types: !3152)
!3152 = !{!234, !3078, !234, !287}
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "lm_setup", scope: !3130, file: !44, line: 1023, baseType: !3154, size: 64, offset: 384)
!3154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3155, size: 64)
!3155 = !DISubroutineType(types: !3156)
!3156 = !{null, !3078, !928}
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "lm_breaker_owns_lease", scope: !3130, file: !44, line: 1024, baseType: !3146, size: 64, offset: 448)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "fl_u", scope: !3079, file: !44, line: 1097, baseType: !3159, size: 256, offset: 1408)
!3159 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3079, file: !44, line: 1089, size: 256, elements: !3160)
!3160 = !{!3161, !3170, !3176}
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "nfs_fl", scope: !3159, file: !44, line: 1090, baseType: !3162, size: 256)
!3162 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs_lock_info", file: !3163, line: 10, size: 256, elements: !3164)
!3163 = !DIFile(filename: "./include/linux/nfs_fs_i.h", directory: "/home/lizy2001/genbc/linux")
!3164 = !{!3165, !3166, !3169}
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3162, file: !3163, line: 11, baseType: !479, size: 32)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3162, file: !3163, line: 12, baseType: !3167, size: 64, offset: 64)
!3167 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3168, size: 64)
!3168 = !DICompositeType(tag: DW_TAG_structure_type, name: "nlm_lockowner", file: !3163, line: 5, flags: DIFlagFwdDecl)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3162, file: !3163, line: 13, baseType: !284, size: 128, offset: 128)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "nfs4_fl", scope: !3159, file: !44, line: 1091, baseType: !3171, size: 64)
!3171 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_info", file: !3163, line: 17, size: 64, elements: !3172)
!3172 = !{!3173}
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3171, file: !3163, line: 18, baseType: !3174, size: 64)
!3174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3175, size: 64)
!3175 = !DICompositeType(tag: DW_TAG_structure_type, name: "nfs4_lock_state", file: !3163, line: 16, flags: DIFlagFwdDecl)
!3176 = !DIDerivedType(tag: DW_TAG_member, name: "afs", scope: !3159, file: !44, line: 1096, baseType: !3177, size: 192)
!3177 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3159, file: !44, line: 1092, size: 192, elements: !3178)
!3178 = !{!3179, !3180, !3181}
!3179 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3177, file: !44, line: 1093, baseType: !284, size: 128)
!3180 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3177, file: !44, line: 1094, baseType: !234, size: 32, offset: 128)
!3181 = !DIDerivedType(tag: DW_TAG_member, name: "debug_id", scope: !3177, file: !44, line: 1095, baseType: !7, size: 32, offset: 160)
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "sendpage", scope: !3003, file: !44, line: 1843, baseType: !3183, size: 64, offset: 1280)
!3183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3184, size: 64)
!3184 = !DISubroutineType(types: !3185)
!3185 = !{!369, !416, !835, !234, !385, !810, !234}
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "get_unmapped_area", scope: !3003, file: !44, line: 1844, baseType: !1249, size: 64, offset: 1344)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "check_flags", scope: !3003, file: !44, line: 1845, baseType: !3188, size: 64, offset: 1408)
!3188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3189, size: 64)
!3189 = !DISubroutineType(types: !3190)
!3190 = !{!234, !234}
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "flock", scope: !3003, file: !44, line: 1846, baseType: !3075, size: 64, offset: 1472)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "splice_write", scope: !3003, file: !44, line: 1847, baseType: !3193, size: 64, offset: 1536)
!3193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3194, size: 64)
!3194 = !DISubroutineType(types: !3195)
!3195 = !{!369, !1006, !416, !810, !385, !7}
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "splice_read", scope: !3003, file: !44, line: 1848, baseType: !3197, size: 64, offset: 1600)
!3197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3198, size: 64)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{!369, !416, !810, !1006, !385, !7}
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "setlease", scope: !3003, file: !44, line: 1849, baseType: !3201, size: 64, offset: 1664)
!3201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3202, size: 64)
!3202 = !DISubroutineType(types: !3203)
!3203 = !{!234, !416, !373, !3204, !928}
!3204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3078, size: 64)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "fallocate", scope: !3003, file: !44, line: 1850, baseType: !3206, size: 64, offset: 1728)
!3206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3207, size: 64)
!3207 = !DISubroutineType(types: !3208)
!3208 = !{!373, !416, !234, !593, !593}
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "show_fdinfo", scope: !3003, file: !44, line: 1852, baseType: !3210, size: 64, offset: 1792)
!3210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3211, size: 64)
!3211 = !DISubroutineType(types: !3212)
!3212 = !{null, !776, !416}
!3213 = !DIDerivedType(tag: DW_TAG_member, name: "copy_file_range", scope: !3003, file: !44, line: 1856, baseType: !3214, size: 64, offset: 1856)
!3214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3215, size: 64)
!3215 = !DISubroutineType(types: !3216)
!3216 = !{!369, !416, !593, !416, !593, !385, !7}
!3217 = !DIDerivedType(tag: DW_TAG_member, name: "remap_file_range", scope: !3003, file: !44, line: 1858, baseType: !3218, size: 64, offset: 1920)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = !DISubroutineType(types: !3220)
!3220 = !{!593, !416, !593, !416, !593, !593, !7}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "fadvise", scope: !3003, file: !44, line: 1861, baseType: !3067, size: 64, offset: 1984)
!3222 = !DIDerivedType(tag: DW_TAG_member, name: "free_inode", scope: !2998, file: !44, line: 692, baseType: !729, size: 64)
!3223 = !DIDerivedType(tag: DW_TAG_member, name: "i_flctx", scope: !494, file: !44, line: 694, baseType: !3224, size: 64, offset: 2560)
!3224 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3225, size: 64)
!3225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_lock_context", file: !44, line: 1100, size: 384, elements: !3226)
!3226 = !{!3227, !3228, !3229, !3230}
!3227 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lock", scope: !3225, file: !44, line: 1101, baseType: !297)
!3228 = !DIDerivedType(tag: DW_TAG_member, name: "flc_flock", scope: !3225, file: !44, line: 1102, baseType: !284, size: 128)
!3229 = !DIDerivedType(tag: DW_TAG_member, name: "flc_posix", scope: !3225, file: !44, line: 1103, baseType: !284, size: 128, offset: 128)
!3230 = !DIDerivedType(tag: DW_TAG_member, name: "flc_lease", scope: !3225, file: !44, line: 1104, baseType: !284, size: 128, offset: 256)
!3231 = !DIDerivedType(tag: DW_TAG_member, name: "i_data", scope: !494, file: !44, line: 695, baseType: !849, size: 1216, align: 64, offset: 2624)
!3232 = !DIDerivedType(tag: DW_TAG_member, name: "i_devices", scope: !494, file: !44, line: 696, baseType: !284, size: 128, offset: 3840)
!3233 = !DIDerivedType(tag: DW_TAG_member, scope: !494, file: !44, line: 697, baseType: !3234, size: 64, offset: 3968)
!3234 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !494, file: !44, line: 697, size: 64, elements: !3235)
!3235 = !{!3236, !3237, !3238, !3249, !3250}
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "i_pipe", scope: !3234, file: !44, line: 698, baseType: !1006, size: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "i_bdev", scope: !3234, file: !44, line: 699, baseType: !2753, size: 64)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "i_cdev", scope: !3234, file: !44, line: 700, baseType: !3239, size: 64)
!3239 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3240, size: 64)
!3240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cdev", file: !3241, line: 14, size: 832, elements: !3242)
!3241 = !DIFile(filename: "./include/linux/cdev.h", directory: "/home/lizy2001/genbc/linux")
!3242 = !{!3243, !3244, !3245, !3246, !3247, !3248}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3240, file: !3241, line: 15, baseType: !276, size: 512)
!3244 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3240, file: !3241, line: 16, baseType: !695, size: 64, offset: 512)
!3245 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3240, file: !3241, line: 17, baseType: !3001, size: 64, offset: 576)
!3246 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3240, file: !3241, line: 18, baseType: !284, size: 128, offset: 640)
!3247 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3240, file: !3241, line: 19, baseType: !575, size: 32, offset: 768)
!3248 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3240, file: !3241, line: 20, baseType: !7, size: 32, offset: 800)
!3249 = !DIDerivedType(tag: DW_TAG_member, name: "i_link", scope: !3234, file: !44, line: 701, baseType: !338, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_member, name: "i_dir_seq", scope: !3234, file: !44, line: 702, baseType: !7, size: 32)
!3251 = !DIDerivedType(tag: DW_TAG_member, name: "i_generation", scope: !494, file: !44, line: 705, baseType: !481, size: 32, offset: 4032)
!3252 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_mask", scope: !494, file: !44, line: 708, baseType: !481, size: 32, offset: 4064)
!3253 = !DIDerivedType(tag: DW_TAG_member, name: "i_fsnotify_marks", scope: !494, file: !44, line: 709, baseType: !2835, size: 64, offset: 4096)
!3254 = !DIDerivedType(tag: DW_TAG_member, name: "i_private", scope: !494, file: !44, line: 720, baseType: !228, size: 64, offset: 4160)
!3255 = !DIDerivedType(tag: DW_TAG_member, name: "d_iname", scope: !447, file: !444, line: 98, baseType: !3256, size: 256, offset: 448)
!3256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !491, size: 256, elements: !2368)
!3257 = !DIDerivedType(tag: DW_TAG_member, name: "d_lockref", scope: !447, file: !444, line: 101, baseType: !3258, size: 32, offset: 704)
!3258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "lockref", file: !3259, line: 25, size: 32, elements: !3260)
!3259 = !DIFile(filename: "./include/linux/lockref.h", directory: "/home/lizy2001/genbc/linux")
!3260 = !{!3261}
!3261 = !DIDerivedType(tag: DW_TAG_member, scope: !3258, file: !3259, line: 26, baseType: !3262, size: 32)
!3262 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3258, file: !3259, line: 26, size: 32, elements: !3263)
!3263 = !{!3264}
!3264 = !DIDerivedType(tag: DW_TAG_member, scope: !3262, file: !3259, line: 30, baseType: !3265, size: 32)
!3265 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3262, file: !3259, line: 30, size: 32, elements: !3266)
!3266 = !{!3267, !3268}
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3265, file: !3259, line: 31, baseType: !297)
!3268 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3265, file: !3259, line: 32, baseType: !234, size: 32)
!3269 = !DIDerivedType(tag: DW_TAG_member, name: "d_op", scope: !447, file: !444, line: 102, baseType: !2852, size: 64, offset: 768)
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "d_sb", scope: !447, file: !444, line: 103, baseType: !661, size: 64, offset: 832)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "d_time", scope: !447, file: !444, line: 104, baseType: !388, size: 64, offset: 896)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "d_fsdata", scope: !447, file: !444, line: 105, baseType: !228, size: 64, offset: 960)
!3273 = !DIDerivedType(tag: DW_TAG_member, scope: !447, file: !444, line: 107, baseType: !3274, size: 128, offset: 1024)
!3274 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !444, line: 107, size: 128, elements: !3275)
!3275 = !{!3276, !3277}
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "d_lru", scope: !3274, file: !444, line: 108, baseType: !284, size: 128)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "d_wait", scope: !3274, file: !444, line: 109, baseType: !3278, size: 64)
!3278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1622, size: 64)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "d_child", scope: !447, file: !444, line: 111, baseType: !284, size: 128, offset: 1152)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "d_subdirs", scope: !447, file: !444, line: 112, baseType: !284, size: 128, offset: 1280)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "d_u", scope: !447, file: !444, line: 120, baseType: !3282, size: 128, offset: 1408)
!3282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !447, file: !444, line: 116, size: 128, elements: !3283)
!3283 = !{!3284, !3285, !3286}
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "d_alias", scope: !3282, file: !444, line: 117, baseType: !704, size: 128)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "d_in_lookup_hash", scope: !3282, file: !444, line: 118, baseType: !461, size: 128)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "d_rcu", scope: !3282, file: !444, line: 119, baseType: !429, size: 128, align: 64)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "f_inode", scope: !417, file: !44, line: 922, baseType: !493, size: 64, offset: 256)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "f_op", scope: !417, file: !44, line: 923, baseType: !3001, size: 64, offset: 320)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "f_lock", scope: !417, file: !44, line: 929, baseType: !297, offset: 384)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "f_write_hint", scope: !417, file: !44, line: 930, baseType: !43, size: 32, offset: 384)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "f_count", scope: !417, file: !44, line: 931, baseType: !792, size: 64, offset: 448)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "f_flags", scope: !417, file: !44, line: 932, baseType: !7, size: 32, offset: 512)
!3293 = !DIDerivedType(tag: DW_TAG_member, name: "f_mode", scope: !417, file: !44, line: 933, baseType: !2848, size: 32, offset: 544)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos_lock", scope: !417, file: !44, line: 934, baseType: !788, size: 192, offset: 576)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "f_pos", scope: !417, file: !44, line: 935, baseType: !593, size: 64, offset: 768)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "f_owner", scope: !417, file: !44, line: 936, baseType: !3297, size: 192, offset: 832)
!3297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fown_struct", file: !44, line: 885, size: 192, elements: !3298)
!3298 = !{!3299, !3300, !3301, !3302, !3303, !3304}
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3297, file: !44, line: 886, baseType: !3100)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "pid", scope: !3297, file: !44, line: 887, baseType: !1612, size: 64)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "pid_type", scope: !3297, file: !44, line: 888, baseType: !52, size: 32, offset: 64)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !3297, file: !44, line: 889, baseType: !499, size: 32, offset: 96)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "euid", scope: !3297, file: !44, line: 889, baseType: !499, size: 32, offset: 128)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "signum", scope: !3297, file: !44, line: 890, baseType: !234, size: 32, offset: 160)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "f_cred", scope: !417, file: !44, line: 937, baseType: !1688, size: 64, offset: 1024)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "f_ra", scope: !417, file: !44, line: 938, baseType: !3307, size: 256, offset: 1088)
!3307 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "file_ra_state", file: !44, line: 896, size: 256, elements: !3308)
!3308 = !{!3309, !3310, !3311, !3312, !3313, !3314}
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3307, file: !44, line: 897, baseType: !388, size: 64)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3307, file: !44, line: 898, baseType: !7, size: 32, offset: 64)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "async_size", scope: !3307, file: !44, line: 899, baseType: !7, size: 32, offset: 96)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "ra_pages", scope: !3307, file: !44, line: 902, baseType: !7, size: 32, offset: 128)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "mmap_miss", scope: !3307, file: !44, line: 903, baseType: !7, size: 32, offset: 160)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "prev_pos", scope: !3307, file: !44, line: 904, baseType: !593, size: 64, offset: 192)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "f_version", scope: !417, file: !44, line: 940, baseType: !485, size: 64, offset: 1344)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "private_data", scope: !417, file: !44, line: 945, baseType: !228, size: 64, offset: 1408)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "f_ep_links", scope: !417, file: !44, line: 949, baseType: !284, size: 128, offset: 1472)
!3318 = !DIDerivedType(tag: DW_TAG_member, name: "f_tfile_llink", scope: !417, file: !44, line: 950, baseType: !284, size: 128, offset: 1600)
!3319 = !DIDerivedType(tag: DW_TAG_member, name: "f_mapping", scope: !417, file: !44, line: 952, baseType: !848, size: 64, offset: 1728)
!3320 = !DIDerivedType(tag: DW_TAG_member, name: "f_wb_err", scope: !417, file: !44, line: 953, baseType: !1056, size: 32, offset: 1792)
!3321 = !DIDerivedType(tag: DW_TAG_member, name: "f_sb_err", scope: !417, file: !44, line: 954, baseType: !1056, size: 32, offset: 1824)
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !407, file: !363, line: 174, baseType: !413, size: 64, offset: 320)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !407, file: !363, line: 176, baseType: !3324, size: 64, offset: 384)
!3324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3325, size: 64)
!3325 = !DISubroutineType(types: !3326)
!3326 = !{!234, !416, !290, !406, !1129}
!3327 = !DIDerivedType(tag: DW_TAG_member, name: "attrs", scope: !395, file: !363, line: 90, baseType: !390, size: 64, offset: 192)
!3328 = !DIDerivedType(tag: DW_TAG_member, name: "bin_attrs", scope: !395, file: !363, line: 91, baseType: !3329, size: 64, offset: 256)
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "child_ns_type", scope: !353, file: !277, line: 143, baseType: !3331, size: 64, offset: 256)
!3331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3332, size: 64)
!3332 = !DISubroutineType(types: !3333)
!3333 = !{!3334, !290}
!3334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3335, size: 64)
!3335 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3336)
!3336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kobj_ns_type_operations", file: !61, line: 39, size: 384, elements: !3337)
!3337 = !{!3338, !3339, !3343, !3347, !3353, !3357}
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3336, file: !61, line: 40, baseType: !60, size: 32)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "current_may_mount", scope: !3336, file: !61, line: 41, baseType: !3340, size: 64, offset: 64)
!3340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3341, size: 64)
!3341 = !DISubroutineType(types: !3342)
!3342 = !{!261}
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "grab_current_ns", scope: !3336, file: !61, line: 42, baseType: !3344, size: 64, offset: 128)
!3344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3345, size: 64)
!3345 = !DISubroutineType(types: !3346)
!3346 = !{!228}
!3347 = !DIDerivedType(tag: DW_TAG_member, name: "netlink_ns", scope: !3336, file: !61, line: 43, baseType: !3348, size: 64, offset: 192)
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = !DISubroutineType(types: !3350)
!3350 = !{!269, !3351}
!3351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3352, size: 64)
!3352 = !DICompositeType(tag: DW_TAG_structure_type, name: "sock", file: !61, line: 19, flags: DIFlagFwdDecl)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "initial_ns", scope: !3336, file: !61, line: 44, baseType: !3354, size: 64, offset: 256)
!3354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3355, size: 64)
!3355 = !DISubroutineType(types: !3356)
!3356 = !{!269}
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "drop_ns", scope: !3336, file: !61, line: 45, baseType: !532, size: 64, offset: 320)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !353, file: !277, line: 144, baseType: !3359, size: 64, offset: 320)
!3359 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3360, size: 64)
!3360 = !DISubroutineType(types: !3361)
!3361 = !{!269, !290}
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !353, file: !277, line: 145, baseType: !3363, size: 64, offset: 384)
!3363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3364, size: 64)
!3364 = !DISubroutineType(types: !3365)
!3365 = !{null, !290, !3366, !3367}
!3366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !499, size: 64)
!3367 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !507, size: 64)
!3368 = !DIDerivedType(tag: DW_TAG_member, name: "sd", scope: !276, file: !277, line: 70, baseType: !3369, size: 64, offset: 384)
!3369 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3370, size: 64)
!3370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_node", file: !681, line: 123, size: 1024, elements: !3371)
!3371 = !{!3372, !3373, !3374, !3375, !3376, !3377, !3378, !3379, !3488, !3489, !3490, !3491, !3492}
!3372 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !3370, file: !681, line: 124, baseType: !861, size: 32)
!3373 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3370, file: !681, line: 125, baseType: !861, size: 32, offset: 32)
!3374 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3370, file: !681, line: 135, baseType: !3369, size: 64, offset: 64)
!3375 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3370, file: !681, line: 136, baseType: !280, size: 64, offset: 128)
!3376 = !DIDerivedType(tag: DW_TAG_member, name: "rb", scope: !3370, file: !681, line: 138, baseType: !874, size: 192, align: 64, offset: 192)
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "ns", scope: !3370, file: !681, line: 140, baseType: !269, size: 64, offset: 384)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !3370, file: !681, line: 141, baseType: !7, size: 32, offset: 448)
!3379 = !DIDerivedType(tag: DW_TAG_member, scope: !3370, file: !681, line: 142, baseType: !3380, size: 256, offset: 512)
!3380 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3370, file: !681, line: 142, size: 256, elements: !3381)
!3381 = !{!3382, !3428, !3432}
!3382 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !3380, file: !681, line: 143, baseType: !3383, size: 192)
!3383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_dir", file: !681, line: 91, size: 192, elements: !3384)
!3384 = !{!3385, !3386, !3387}
!3385 = !DIDerivedType(tag: DW_TAG_member, name: "subdirs", scope: !3383, file: !681, line: 92, baseType: !388, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3383, file: !681, line: 94, baseType: !870, size: 64, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3383, file: !681, line: 100, baseType: !3388, size: 64, offset: 128)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_root", file: !681, line: 180, size: 704, elements: !3390)
!3390 = !{!3391, !3392, !3393, !3400, !3401, !3402, !3426, !3427}
!3391 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3389, file: !681, line: 182, baseType: !3369, size: 64)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3389, file: !681, line: 183, baseType: !7, size: 32, offset: 64)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "ino_idr", scope: !3389, file: !681, line: 186, baseType: !3394, size: 192, offset: 128)
!3394 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "idr", file: !3395, line: 19, size: 192, elements: !3396)
!3395 = !DIFile(filename: "./include/linux/idr.h", directory: "/home/lizy2001/genbc/linux")
!3396 = !{!3397, !3398, !3399}
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "idr_rt", scope: !3394, file: !3395, line: 20, baseType: !853, size: 128)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "idr_base", scope: !3394, file: !3395, line: 21, baseType: !7, size: 32, offset: 128)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "idr_next", scope: !3394, file: !3395, line: 22, baseType: !7, size: 32, offset: 160)
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "last_id_lowbits", scope: !3389, file: !681, line: 187, baseType: !479, size: 32, offset: 320)
!3401 = !DIDerivedType(tag: DW_TAG_member, name: "id_highbits", scope: !3389, file: !681, line: 188, baseType: !479, size: 32, offset: 352)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "syscall_ops", scope: !3389, file: !681, line: 189, baseType: !3403, size: 64, offset: 384)
!3403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3404, size: 64)
!3404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_syscall_ops", file: !681, line: 168, size: 320, elements: !3405)
!3405 = !{!3406, !3410, !3414, !3418, !3422}
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "show_options", scope: !3404, file: !681, line: 169, baseType: !3407, size: 64)
!3407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3408, size: 64)
!3408 = !DISubroutineType(types: !3409)
!3409 = !{!234, !776, !3388}
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "mkdir", scope: !3404, file: !681, line: 171, baseType: !3411, size: 64, offset: 64)
!3411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3412, size: 64)
!3412 = !DISubroutineType(types: !3413)
!3413 = !{!234, !3369, !280, !379}
!3414 = !DIDerivedType(tag: DW_TAG_member, name: "rmdir", scope: !3404, file: !681, line: 173, baseType: !3415, size: 64, offset: 128)
!3415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3416, size: 64)
!3416 = !DISubroutineType(types: !3417)
!3417 = !{!234, !3369}
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "rename", scope: !3404, file: !681, line: 174, baseType: !3419, size: 64, offset: 192)
!3419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3420, size: 64)
!3420 = !DISubroutineType(types: !3421)
!3421 = !{!234, !3369, !3369, !280}
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "show_path", scope: !3404, file: !681, line: 176, baseType: !3423, size: 64, offset: 256)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!234, !776, !3369, !3388}
!3426 = !DIDerivedType(tag: DW_TAG_member, name: "supers", scope: !3389, file: !681, line: 192, baseType: !284, size: 128, offset: 448)
!3427 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate_waitq", scope: !3389, file: !681, line: 194, baseType: !1622, size: 128, offset: 576)
!3428 = !DIDerivedType(tag: DW_TAG_member, name: "symlink", scope: !3380, file: !681, line: 144, baseType: !3429, size: 64)
!3429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_symlink", file: !681, line: 103, size: 64, elements: !3430)
!3430 = !{!3431}
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "target_kn", scope: !3429, file: !681, line: 104, baseType: !3369, size: 64)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3380, file: !681, line: 145, baseType: !3433, size: 256)
!3433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_elem_attr", file: !681, line: 107, size: 256, elements: !3434)
!3434 = !{!3435, !3483, !3486, !3487}
!3435 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3433, file: !681, line: 108, baseType: !3436, size: 64)
!3436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3437, size: 64)
!3437 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3438)
!3438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_ops", file: !681, line: 217, size: 768, elements: !3439)
!3439 = !{!3440, !3460, !3464, !3465, !3466, !3467, !3468, !3472, !3473, !3474, !3475, !3479}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3438, file: !681, line: 222, baseType: !3441, size: 64)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{!234, !3444}
!3444 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3445, size: 64)
!3445 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_file", file: !681, line: 197, size: 1088, elements: !3446)
!3446 = !{!3447, !3448, !3449, !3450, !3451, !3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459}
!3447 = !DIDerivedType(tag: DW_TAG_member, name: "kn", scope: !3445, file: !681, line: 199, baseType: !3369, size: 64)
!3448 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !3445, file: !681, line: 200, baseType: !416, size: 64, offset: 64)
!3449 = !DIDerivedType(tag: DW_TAG_member, name: "seq_file", scope: !3445, file: !681, line: 201, baseType: !776, size: 64, offset: 128)
!3450 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3445, file: !681, line: 202, baseType: !228, size: 64, offset: 192)
!3451 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !3445, file: !681, line: 205, baseType: !788, size: 192, offset: 256)
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_mutex", scope: !3445, file: !681, line: 206, baseType: !788, size: 192, offset: 448)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3445, file: !681, line: 207, baseType: !234, size: 32, offset: 640)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3445, file: !681, line: 208, baseType: !284, size: 128, offset: 704)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc_buf", scope: !3445, file: !681, line: 209, baseType: !338, size: 64, offset: 832)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3445, file: !681, line: 211, baseType: !385, size: 64, offset: 896)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "mmapped", scope: !3445, file: !681, line: 212, baseType: !261, size: 1, offset: 960, flags: DIFlagBitField, extraData: i64 960)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "released", scope: !3445, file: !681, line: 213, baseType: !261, size: 1, offset: 961, flags: DIFlagBitField, extraData: i64 960)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "vm_ops", scope: !3445, file: !681, line: 214, baseType: !1157, size: 64, offset: 1024)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3438, file: !681, line: 223, baseType: !3461, size: 64, offset: 64)
!3461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3462, size: 64)
!3462 = !DISubroutineType(types: !3463)
!3463 = !{null, !3444}
!3464 = !DIDerivedType(tag: DW_TAG_member, name: "seq_show", scope: !3438, file: !681, line: 236, baseType: !820, size: 64, offset: 128)
!3465 = !DIDerivedType(tag: DW_TAG_member, name: "seq_start", scope: !3438, file: !681, line: 238, baseType: !807, size: 64, offset: 192)
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "seq_next", scope: !3438, file: !681, line: 239, baseType: !816, size: 64, offset: 256)
!3467 = !DIDerivedType(tag: DW_TAG_member, name: "seq_stop", scope: !3438, file: !681, line: 240, baseType: !812, size: 64, offset: 320)
!3468 = !DIDerivedType(tag: DW_TAG_member, name: "read", scope: !3438, file: !681, line: 242, baseType: !3469, size: 64, offset: 384)
!3469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3470, size: 64)
!3470 = !DISubroutineType(types: !3471)
!3471 = !{!369, !3444, !338, !385, !593}
!3472 = !DIDerivedType(tag: DW_TAG_member, name: "atomic_write_len", scope: !3438, file: !681, line: 252, baseType: !385, size: 64, offset: 448)
!3473 = !DIDerivedType(tag: DW_TAG_member, name: "prealloc", scope: !3438, file: !681, line: 259, baseType: !261, size: 8, offset: 512)
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "write", scope: !3438, file: !681, line: 260, baseType: !3469, size: 64, offset: 576)
!3475 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3438, file: !681, line: 263, baseType: !3476, size: 64, offset: 640)
!3476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3477, size: 64)
!3477 = !DISubroutineType(types: !3478)
!3478 = !{!3042, !3444, !3044}
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "mmap", scope: !3438, file: !681, line: 266, baseType: !3480, size: 64, offset: 704)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!234, !3444, !1129}
!3483 = !DIDerivedType(tag: DW_TAG_member, name: "open", scope: !3433, file: !681, line: 109, baseType: !3484, size: 64, offset: 64)
!3484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3485, size: 64)
!3485 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_open_node", file: !681, line: 31, flags: DIFlagFwdDecl)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3433, file: !681, line: 110, baseType: !593, size: 64, offset: 128)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "notify_next", scope: !3433, file: !681, line: 111, baseType: !3369, size: 64, offset: 192)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !3370, file: !681, line: 148, baseType: !228, size: 64, offset: 768)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3370, file: !681, line: 154, baseType: !485, size: 64, offset: 832)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3370, file: !681, line: 156, baseType: !380, size: 16, offset: 896)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3370, file: !681, line: 157, baseType: !379, size: 16, offset: 912)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "iattr", scope: !3370, file: !681, line: 158, baseType: !3493, size: 64, offset: 960)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DICompositeType(tag: DW_TAG_structure_type, name: "kernfs_iattrs", file: !681, line: 32, flags: DIFlagFwdDecl)
!3495 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !276, file: !277, line: 71, baseType: !3496, size: 32, offset: 448)
!3496 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kref", file: !3497, line: 19, size: 32, elements: !3498)
!3497 = !DIFile(filename: "./include/linux/kref.h", directory: "/home/lizy2001/genbc/linux")
!3498 = !{!3499}
!3499 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3496, file: !3497, line: 20, baseType: !1371, size: 32)
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "state_initialized", scope: !276, file: !277, line: 75, baseType: !7, size: 1, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "state_in_sysfs", scope: !276, file: !277, line: 76, baseType: !7, size: 1, offset: 481, flags: DIFlagBitField, extraData: i64 480)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "state_add_uevent_sent", scope: !276, file: !277, line: 77, baseType: !7, size: 1, offset: 482, flags: DIFlagBitField, extraData: i64 480)
!3503 = !DIDerivedType(tag: DW_TAG_member, name: "state_remove_uevent_sent", scope: !276, file: !277, line: 78, baseType: !7, size: 1, offset: 483, flags: DIFlagBitField, extraData: i64 480)
!3504 = !DIDerivedType(tag: DW_TAG_member, name: "uevent_suppress", scope: !276, file: !277, line: 79, baseType: !7, size: 1, offset: 484, flags: DIFlagBitField, extraData: i64 480)
!3505 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !273, file: !73, line: 463, baseType: !3506, size: 64, offset: 512)
!3506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !273, file: !73, line: 465, baseType: !3508, size: 64, offset: 576)
!3508 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3509, size: 64)
!3509 = !DICompositeType(tag: DW_TAG_structure_type, name: "device_private", file: !73, line: 36, flags: DIFlagFwdDecl)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !273, file: !73, line: 467, baseType: !280, size: 64, offset: 640)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !273, file: !73, line: 468, baseType: !3512, size: 64, offset: 704)
!3512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3513, size: 64)
!3513 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3514)
!3514 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_type", file: !73, line: 87, size: 384, elements: !3515)
!3515 = !{!3516, !3517, !3518, !3522, !3527, !3531}
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3514, file: !73, line: 88, baseType: !280, size: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3514, file: !73, line: 89, baseType: !392, size: 64, offset: 64)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3514, file: !73, line: 90, baseType: !3519, size: 64, offset: 128)
!3519 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3520, size: 64)
!3520 = !DISubroutineType(types: !3521)
!3521 = !{!234, !3506, !333}
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !3514, file: !73, line: 91, baseType: !3523, size: 64, offset: 192)
!3523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3524, size: 64)
!3524 = !DISubroutineType(types: !3525)
!3525 = !{!338, !3506, !3526, !3366, !3367}
!3526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3514, file: !73, line: 93, baseType: !3528, size: 64, offset: 256)
!3528 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3529, size: 64)
!3529 = !DISubroutineType(types: !3530)
!3530 = !{null, !3506}
!3531 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3514, file: !73, line: 95, baseType: !3532, size: 64, offset: 320)
!3532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3533, size: 64)
!3533 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3534)
!3534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_ops", file: !80, line: 278, size: 1472, elements: !3535)
!3535 = !{!3536, !3540, !3541, !3542, !3543, !3544, !3545, !3546, !3547, !3548, !3549, !3550, !3551, !3552, !3553, !3554, !3555, !3556, !3557, !3558, !3559, !3560, !3561}
!3536 = !DIDerivedType(tag: DW_TAG_member, name: "prepare", scope: !3534, file: !80, line: 279, baseType: !3537, size: 64)
!3537 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3538, size: 64)
!3538 = !DISubroutineType(types: !3539)
!3539 = !{!234, !3506}
!3540 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !3534, file: !80, line: 280, baseType: !3528, size: 64, offset: 64)
!3541 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3534, file: !80, line: 281, baseType: !3537, size: 64, offset: 128)
!3542 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3534, file: !80, line: 282, baseType: !3537, size: 64, offset: 192)
!3543 = !DIDerivedType(tag: DW_TAG_member, name: "freeze", scope: !3534, file: !80, line: 283, baseType: !3537, size: 64, offset: 256)
!3544 = !DIDerivedType(tag: DW_TAG_member, name: "thaw", scope: !3534, file: !80, line: 284, baseType: !3537, size: 64, offset: 320)
!3545 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff", scope: !3534, file: !80, line: 285, baseType: !3537, size: 64, offset: 384)
!3546 = !DIDerivedType(tag: DW_TAG_member, name: "restore", scope: !3534, file: !80, line: 286, baseType: !3537, size: 64, offset: 448)
!3547 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_late", scope: !3534, file: !80, line: 287, baseType: !3537, size: 64, offset: 512)
!3548 = !DIDerivedType(tag: DW_TAG_member, name: "resume_early", scope: !3534, file: !80, line: 288, baseType: !3537, size: 64, offset: 576)
!3549 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_late", scope: !3534, file: !80, line: 289, baseType: !3537, size: 64, offset: 640)
!3550 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_early", scope: !3534, file: !80, line: 290, baseType: !3537, size: 64, offset: 704)
!3551 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_late", scope: !3534, file: !80, line: 291, baseType: !3537, size: 64, offset: 768)
!3552 = !DIDerivedType(tag: DW_TAG_member, name: "restore_early", scope: !3534, file: !80, line: 292, baseType: !3537, size: 64, offset: 832)
!3553 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_noirq", scope: !3534, file: !80, line: 293, baseType: !3537, size: 64, offset: 896)
!3554 = !DIDerivedType(tag: DW_TAG_member, name: "resume_noirq", scope: !3534, file: !80, line: 294, baseType: !3537, size: 64, offset: 960)
!3555 = !DIDerivedType(tag: DW_TAG_member, name: "freeze_noirq", scope: !3534, file: !80, line: 295, baseType: !3537, size: 64, offset: 1024)
!3556 = !DIDerivedType(tag: DW_TAG_member, name: "thaw_noirq", scope: !3534, file: !80, line: 296, baseType: !3537, size: 64, offset: 1088)
!3557 = !DIDerivedType(tag: DW_TAG_member, name: "poweroff_noirq", scope: !3534, file: !80, line: 297, baseType: !3537, size: 64, offset: 1152)
!3558 = !DIDerivedType(tag: DW_TAG_member, name: "restore_noirq", scope: !3534, file: !80, line: 298, baseType: !3537, size: 64, offset: 1216)
!3559 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_suspend", scope: !3534, file: !80, line: 299, baseType: !3537, size: 64, offset: 1280)
!3560 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_resume", scope: !3534, file: !80, line: 300, baseType: !3537, size: 64, offset: 1344)
!3561 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_idle", scope: !3534, file: !80, line: 301, baseType: !3537, size: 64, offset: 1408)
!3562 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !273, file: !73, line: 470, baseType: !3563, size: 64, offset: 768)
!3563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3564, size: 64)
!3564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bus_type", file: !3565, line: 82, size: 1408, elements: !3566)
!3565 = !DIFile(filename: "./include/linux/device/bus.h", directory: "/home/lizy2001/genbc/linux")
!3566 = !{!3567, !3568, !3569, !3570, !3571, !3572, !3573, !3632, !3633, !3634, !3635, !3636, !3637, !3638, !3639, !3640, !3641, !3642, !3643, !3644, !3648, !3651, !3652}
!3567 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3564, file: !3565, line: 83, baseType: !280, size: 64)
!3568 = !DIDerivedType(tag: DW_TAG_member, name: "dev_name", scope: !3564, file: !3565, line: 84, baseType: !280, size: 64, offset: 64)
!3569 = !DIDerivedType(tag: DW_TAG_member, name: "dev_root", scope: !3564, file: !3565, line: 85, baseType: !3506, size: 64, offset: 128)
!3570 = !DIDerivedType(tag: DW_TAG_member, name: "bus_groups", scope: !3564, file: !3565, line: 86, baseType: !392, size: 64, offset: 192)
!3571 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3564, file: !3565, line: 87, baseType: !392, size: 64, offset: 256)
!3572 = !DIDerivedType(tag: DW_TAG_member, name: "drv_groups", scope: !3564, file: !3565, line: 88, baseType: !392, size: 64, offset: 320)
!3573 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3564, file: !3565, line: 90, baseType: !3574, size: 64, offset: 384)
!3574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3575, size: 64)
!3575 = !DISubroutineType(types: !3576)
!3576 = !{!234, !3506, !3577}
!3577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3578, size: 64)
!3578 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_driver", file: !67, line: 95, size: 1152, elements: !3579)
!3579 = !{!3580, !3581, !3582, !3583, !3584, !3585, !3586, !3599, !3612, !3613, !3614, !3615, !3616, !3624, !3625, !3626, !3627, !3628, !3629}
!3580 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3578, file: !67, line: 96, baseType: !280, size: 64)
!3581 = !DIDerivedType(tag: DW_TAG_member, name: "bus", scope: !3578, file: !67, line: 97, baseType: !3563, size: 64, offset: 64)
!3582 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3578, file: !67, line: 99, baseType: !695, size: 64, offset: 128)
!3583 = !DIDerivedType(tag: DW_TAG_member, name: "mod_name", scope: !3578, file: !67, line: 100, baseType: !280, size: 64, offset: 192)
!3584 = !DIDerivedType(tag: DW_TAG_member, name: "suppress_bind_attrs", scope: !3578, file: !67, line: 102, baseType: !261, size: 8, offset: 256)
!3585 = !DIDerivedType(tag: DW_TAG_member, name: "probe_type", scope: !3578, file: !67, line: 103, baseType: !66, size: 32, offset: 288)
!3586 = !DIDerivedType(tag: DW_TAG_member, name: "of_match_table", scope: !3578, file: !67, line: 105, baseType: !3587, size: 64, offset: 320)
!3587 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3588, size: 64)
!3588 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3589)
!3589 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "of_device_id", file: !3590, line: 262, size: 1600, elements: !3591)
!3590 = !DIFile(filename: "./include/linux/mod_devicetable.h", directory: "/home/lizy2001/genbc/linux")
!3591 = !{!3592, !3593, !3594, !3598}
!3592 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3589, file: !3590, line: 263, baseType: !2838, size: 256)
!3593 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3589, file: !3590, line: 264, baseType: !2838, size: 256, offset: 256)
!3594 = !DIDerivedType(tag: DW_TAG_member, name: "compatible", scope: !3589, file: !3590, line: 265, baseType: !3595, size: 1024, offset: 512)
!3595 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 1024, elements: !3596)
!3596 = !{!3597}
!3597 = !DISubrange(count: 128)
!3598 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3589, file: !3590, line: 266, baseType: !269, size: 64, offset: 1536)
!3599 = !DIDerivedType(tag: DW_TAG_member, name: "acpi_match_table", scope: !3578, file: !67, line: 106, baseType: !3600, size: 64, offset: 384)
!3600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3601, size: 64)
!3601 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3602)
!3602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_id", file: !3590, line: 210, size: 256, elements: !3603)
!3603 = !{!3604, !3608, !3610, !3611}
!3604 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3602, file: !3590, line: 211, baseType: !3605, size: 72)
!3605 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1494, size: 72, elements: !3606)
!3606 = !{!3607}
!3607 = !DISubrange(count: 9)
!3608 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !3602, file: !3590, line: 212, baseType: !3609, size: 64, offset: 128)
!3609 = !DIDerivedType(tag: DW_TAG_typedef, name: "kernel_ulong_t", file: !3590, line: 14, baseType: !388)
!3610 = !DIDerivedType(tag: DW_TAG_member, name: "cls", scope: !3602, file: !3590, line: 213, baseType: !481, size: 32, offset: 192)
!3611 = !DIDerivedType(tag: DW_TAG_member, name: "cls_msk", scope: !3602, file: !3590, line: 214, baseType: !481, size: 32, offset: 224)
!3612 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3578, file: !67, line: 108, baseType: !3537, size: 64, offset: 448)
!3613 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3578, file: !67, line: 109, baseType: !3528, size: 64, offset: 512)
!3614 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3578, file: !67, line: 110, baseType: !3537, size: 64, offset: 576)
!3615 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3578, file: !67, line: 111, baseType: !3528, size: 64, offset: 640)
!3616 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3578, file: !67, line: 112, baseType: !3617, size: 64, offset: 704)
!3617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3618, size: 64)
!3618 = !DISubroutineType(types: !3619)
!3619 = !{!234, !3506, !3620}
!3620 = !DIDerivedType(tag: DW_TAG_typedef, name: "pm_message_t", file: !80, line: 52, baseType: !3621)
!3621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_message", file: !80, line: 50, size: 32, elements: !3622)
!3622 = !{!3623}
!3623 = !DIDerivedType(tag: DW_TAG_member, name: "event", scope: !3621, file: !80, line: 51, baseType: !234, size: 32)
!3624 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3578, file: !67, line: 113, baseType: !3537, size: 64, offset: 768)
!3625 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !3578, file: !67, line: 114, baseType: !392, size: 64, offset: 832)
!3626 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !3578, file: !67, line: 115, baseType: !392, size: 64, offset: 896)
!3627 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3578, file: !67, line: 117, baseType: !3532, size: 64, offset: 960)
!3628 = !DIDerivedType(tag: DW_TAG_member, name: "coredump", scope: !3578, file: !67, line: 118, baseType: !3528, size: 64, offset: 1024)
!3629 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3578, file: !67, line: 120, baseType: !3630, size: 64, offset: 1088)
!3630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3631, size: 64)
!3631 = !DICompositeType(tag: DW_TAG_structure_type, name: "driver_private", file: !67, line: 120, flags: DIFlagFwdDecl)
!3632 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !3564, file: !3565, line: 91, baseType: !3519, size: 64, offset: 448)
!3633 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !3564, file: !3565, line: 92, baseType: !3537, size: 64, offset: 512)
!3634 = !DIDerivedType(tag: DW_TAG_member, name: "sync_state", scope: !3564, file: !3565, line: 93, baseType: !3528, size: 64, offset: 576)
!3635 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !3564, file: !3565, line: 94, baseType: !3537, size: 64, offset: 640)
!3636 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !3564, file: !3565, line: 95, baseType: !3528, size: 64, offset: 704)
!3637 = !DIDerivedType(tag: DW_TAG_member, name: "online", scope: !3564, file: !3565, line: 97, baseType: !3537, size: 64, offset: 768)
!3638 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !3564, file: !3565, line: 98, baseType: !3537, size: 64, offset: 832)
!3639 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3564, file: !3565, line: 100, baseType: !3617, size: 64, offset: 896)
!3640 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3564, file: !3565, line: 101, baseType: !3537, size: 64, offset: 960)
!3641 = !DIDerivedType(tag: DW_TAG_member, name: "num_vf", scope: !3564, file: !3565, line: 103, baseType: !3537, size: 64, offset: 1024)
!3642 = !DIDerivedType(tag: DW_TAG_member, name: "dma_configure", scope: !3564, file: !3565, line: 105, baseType: !3537, size: 64, offset: 1088)
!3643 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !3564, file: !3565, line: 107, baseType: !3532, size: 64, offset: 1152)
!3644 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_ops", scope: !3564, file: !3565, line: 109, baseType: !3645, size: 64, offset: 1216)
!3645 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3646, size: 64)
!3646 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3647)
!3647 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_ops", file: !3565, line: 109, flags: DIFlagFwdDecl)
!3648 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !3564, file: !3565, line: 111, baseType: !3649, size: 64, offset: 1280)
!3649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3650, size: 64)
!3650 = !DICompositeType(tag: DW_TAG_structure_type, name: "subsys_private", file: !3565, line: 111, flags: DIFlagFwdDecl)
!3651 = !DIDerivedType(tag: DW_TAG_member, name: "lock_key", scope: !3564, file: !3565, line: 112, baseType: !710, offset: 1344)
!3652 = !DIDerivedType(tag: DW_TAG_member, name: "need_parent_lock", scope: !3564, file: !3565, line: 114, baseType: !261, size: 8, offset: 1344)
!3653 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !273, file: !73, line: 471, baseType: !3577, size: 64, offset: 832)
!3654 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !273, file: !73, line: 473, baseType: !228, size: 64, offset: 896)
!3655 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !273, file: !73, line: 475, baseType: !228, size: 64, offset: 960)
!3656 = !DIDerivedType(tag: DW_TAG_member, name: "mutex", scope: !273, file: !73, line: 480, baseType: !788, size: 192, offset: 1024)
!3657 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !273, file: !73, line: 484, baseType: !3658, size: 576, offset: 1216)
!3658 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_links_info", file: !73, line: 361, size: 576, elements: !3659)
!3659 = !{!3660, !3661, !3662, !3663, !3664, !3665}
!3660 = !DIDerivedType(tag: DW_TAG_member, name: "suppliers", scope: !3658, file: !73, line: 362, baseType: !284, size: 128)
!3661 = !DIDerivedType(tag: DW_TAG_member, name: "consumers", scope: !3658, file: !73, line: 363, baseType: !284, size: 128, offset: 128)
!3662 = !DIDerivedType(tag: DW_TAG_member, name: "needs_suppliers", scope: !3658, file: !73, line: 364, baseType: !284, size: 128, offset: 256)
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "defer_hook", scope: !3658, file: !73, line: 365, baseType: !284, size: 128, offset: 384)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "need_for_probe", scope: !3658, file: !73, line: 366, baseType: !261, size: 8, offset: 512)
!3665 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !3658, file: !73, line: 367, baseType: !72, size: 32, offset: 544)
!3666 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !273, file: !73, line: 485, baseType: !3667, size: 2304, offset: 1792)
!3667 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_info", file: !80, line: 565, size: 2304, elements: !3668)
!3668 = !{!3669, !3670, !3671, !3672, !3673, !3674, !3675, !3676, !3677, !3678, !3679, !3680, !3681, !3682, !3683, !3684, !3722, !3723, !3724, !3725, !3726, !3727, !3728, !3729, !3730, !3731, !3732, !3733, !3734, !3735, !3736, !3737, !3738, !3739, !3740, !3741, !3742, !3743, !3744, !3745, !3746, !3747, !3748, !3749, !3750, !3751, !3752, !3753, !3754, !3768, !3772}
!3669 = !DIDerivedType(tag: DW_TAG_member, name: "power_state", scope: !3667, file: !80, line: 566, baseType: !3620, size: 32)
!3670 = !DIDerivedType(tag: DW_TAG_member, name: "can_wakeup", scope: !3667, file: !80, line: 567, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 32)
!3671 = !DIDerivedType(tag: DW_TAG_member, name: "async_suspend", scope: !3667, file: !80, line: 568, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 32)
!3672 = !DIDerivedType(tag: DW_TAG_member, name: "in_dpm_list", scope: !3667, file: !80, line: 569, baseType: !261, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 32)
!3673 = !DIDerivedType(tag: DW_TAG_member, name: "is_prepared", scope: !3667, file: !80, line: 570, baseType: !261, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 32)
!3674 = !DIDerivedType(tag: DW_TAG_member, name: "is_suspended", scope: !3667, file: !80, line: 571, baseType: !261, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 32)
!3675 = !DIDerivedType(tag: DW_TAG_member, name: "is_noirq_suspended", scope: !3667, file: !80, line: 572, baseType: !261, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 32)
!3676 = !DIDerivedType(tag: DW_TAG_member, name: "is_late_suspended", scope: !3667, file: !80, line: 573, baseType: !261, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 32)
!3677 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm", scope: !3667, file: !80, line: 574, baseType: !261, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 32)
!3678 = !DIDerivedType(tag: DW_TAG_member, name: "early_init", scope: !3667, file: !80, line: 575, baseType: !261, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 32)
!3679 = !DIDerivedType(tag: DW_TAG_member, name: "direct_complete", scope: !3667, file: !80, line: 576, baseType: !261, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 32)
!3680 = !DIDerivedType(tag: DW_TAG_member, name: "driver_flags", scope: !3667, file: !80, line: 577, baseType: !479, size: 32, offset: 64)
!3681 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3667, file: !80, line: 578, baseType: !297, offset: 96)
!3682 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3667, file: !80, line: 580, baseType: !284, size: 128, offset: 128)
!3683 = !DIDerivedType(tag: DW_TAG_member, name: "completion", scope: !3667, file: !80, line: 581, baseType: !1643, size: 192, offset: 256)
!3684 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !3667, file: !80, line: 582, baseType: !3685, size: 64, offset: 448)
!3685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3686, size: 64)
!3686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wakeup_source", file: !3687, line: 43, size: 1472, elements: !3688)
!3687 = !DIFile(filename: "./include/linux/pm_wakeup.h", directory: "/home/lizy2001/genbc/linux")
!3688 = !{!3689, !3690, !3691, !3692, !3693, !3696, !3708, !3709, !3710, !3711, !3712, !3713, !3714, !3715, !3716, !3717, !3718, !3719, !3720, !3721}
!3689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3686, file: !3687, line: 44, baseType: !280, size: 64)
!3690 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3686, file: !3687, line: 45, baseType: !234, size: 32, offset: 64)
!3691 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3686, file: !3687, line: 46, baseType: !284, size: 128, offset: 128)
!3692 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3686, file: !3687, line: 47, baseType: !297, offset: 256)
!3693 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3686, file: !3687, line: 48, baseType: !3694, size: 64, offset: 256)
!3694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3695, size: 64)
!3695 = !DICompositeType(tag: DW_TAG_structure_type, name: "wake_irq", file: !80, line: 533, flags: DIFlagFwdDecl)
!3696 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !3686, file: !3687, line: 49, baseType: !3697, size: 320, offset: 320)
!3697 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "timer_list", file: !3698, line: 11, size: 320, elements: !3699)
!3698 = !DIFile(filename: "./include/linux/timer.h", directory: "/home/lizy2001/genbc/linux")
!3699 = !{!3700, !3701, !3702, !3707}
!3700 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !3697, file: !3698, line: 16, baseType: !704, size: 128)
!3701 = !DIDerivedType(tag: DW_TAG_member, name: "expires", scope: !3697, file: !3698, line: 17, baseType: !388, size: 64, offset: 128)
!3702 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !3697, file: !3698, line: 18, baseType: !3703, size: 64, offset: 192)
!3703 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3704, size: 64)
!3704 = !DISubroutineType(types: !3705)
!3705 = !{null, !3706}
!3706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3697, size: 64)
!3707 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3697, file: !3698, line: 19, baseType: !479, size: 32, offset: 256)
!3708 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3686, file: !3687, line: 50, baseType: !388, size: 64, offset: 640)
!3709 = !DIDerivedType(tag: DW_TAG_member, name: "total_time", scope: !3686, file: !3687, line: 51, baseType: !1441, size: 64, offset: 704)
!3710 = !DIDerivedType(tag: DW_TAG_member, name: "max_time", scope: !3686, file: !3687, line: 52, baseType: !1441, size: 64, offset: 768)
!3711 = !DIDerivedType(tag: DW_TAG_member, name: "last_time", scope: !3686, file: !3687, line: 53, baseType: !1441, size: 64, offset: 832)
!3712 = !DIDerivedType(tag: DW_TAG_member, name: "start_prevent_time", scope: !3686, file: !3687, line: 54, baseType: !1441, size: 64, offset: 896)
!3713 = !DIDerivedType(tag: DW_TAG_member, name: "prevent_sleep_time", scope: !3686, file: !3687, line: 55, baseType: !1441, size: 64, offset: 960)
!3714 = !DIDerivedType(tag: DW_TAG_member, name: "event_count", scope: !3686, file: !3687, line: 56, baseType: !388, size: 64, offset: 1024)
!3715 = !DIDerivedType(tag: DW_TAG_member, name: "active_count", scope: !3686, file: !3687, line: 57, baseType: !388, size: 64, offset: 1088)
!3716 = !DIDerivedType(tag: DW_TAG_member, name: "relax_count", scope: !3686, file: !3687, line: 58, baseType: !388, size: 64, offset: 1152)
!3717 = !DIDerivedType(tag: DW_TAG_member, name: "expire_count", scope: !3686, file: !3687, line: 59, baseType: !388, size: 64, offset: 1216)
!3718 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_count", scope: !3686, file: !3687, line: 60, baseType: !388, size: 64, offset: 1280)
!3719 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3686, file: !3687, line: 61, baseType: !3506, size: 64, offset: 1344)
!3720 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3686, file: !3687, line: 62, baseType: !261, size: 1, offset: 1408, flags: DIFlagBitField, extraData: i64 1408)
!3721 = !DIDerivedType(tag: DW_TAG_member, name: "autosleep_enabled", scope: !3686, file: !3687, line: 63, baseType: !261, size: 1, offset: 1409, flags: DIFlagBitField, extraData: i64 1408)
!3722 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_path", scope: !3667, file: !80, line: 583, baseType: !261, size: 1, offset: 512, flags: DIFlagBitField, extraData: i64 512)
!3723 = !DIDerivedType(tag: DW_TAG_member, name: "syscore", scope: !3667, file: !80, line: 584, baseType: !261, size: 1, offset: 513, flags: DIFlagBitField, extraData: i64 512)
!3724 = !DIDerivedType(tag: DW_TAG_member, name: "no_pm_callbacks", scope: !3667, file: !80, line: 585, baseType: !261, size: 1, offset: 514, flags: DIFlagBitField, extraData: i64 512)
!3725 = !DIDerivedType(tag: DW_TAG_member, name: "must_resume", scope: !3667, file: !80, line: 586, baseType: !7, size: 1, offset: 515, flags: DIFlagBitField, extraData: i64 512)
!3726 = !DIDerivedType(tag: DW_TAG_member, name: "may_skip_resume", scope: !3667, file: !80, line: 587, baseType: !7, size: 1, offset: 516, flags: DIFlagBitField, extraData: i64 512)
!3727 = !DIDerivedType(tag: DW_TAG_member, name: "suspend_timer", scope: !3667, file: !80, line: 592, baseType: !1433, size: 512, offset: 576)
!3728 = !DIDerivedType(tag: DW_TAG_member, name: "timer_expires", scope: !3667, file: !80, line: 593, baseType: !485, size: 64, offset: 1088)
!3729 = !DIDerivedType(tag: DW_TAG_member, name: "work", scope: !3667, file: !80, line: 594, baseType: !2099, size: 256, offset: 1152)
!3730 = !DIDerivedType(tag: DW_TAG_member, name: "wait_queue", scope: !3667, file: !80, line: 595, baseType: !1622, size: 128, offset: 1408)
!3731 = !DIDerivedType(tag: DW_TAG_member, name: "wakeirq", scope: !3667, file: !80, line: 596, baseType: !3694, size: 64, offset: 1536)
!3732 = !DIDerivedType(tag: DW_TAG_member, name: "usage_count", scope: !3667, file: !80, line: 597, baseType: !861, size: 32, offset: 1600)
!3733 = !DIDerivedType(tag: DW_TAG_member, name: "child_count", scope: !3667, file: !80, line: 598, baseType: !861, size: 32, offset: 1632)
!3734 = !DIDerivedType(tag: DW_TAG_member, name: "disable_depth", scope: !3667, file: !80, line: 599, baseType: !7, size: 3, offset: 1664, flags: DIFlagBitField, extraData: i64 1664)
!3735 = !DIDerivedType(tag: DW_TAG_member, name: "idle_notification", scope: !3667, file: !80, line: 600, baseType: !7, size: 1, offset: 1667, flags: DIFlagBitField, extraData: i64 1664)
!3736 = !DIDerivedType(tag: DW_TAG_member, name: "request_pending", scope: !3667, file: !80, line: 601, baseType: !7, size: 1, offset: 1668, flags: DIFlagBitField, extraData: i64 1664)
!3737 = !DIDerivedType(tag: DW_TAG_member, name: "deferred_resume", scope: !3667, file: !80, line: 602, baseType: !7, size: 1, offset: 1669, flags: DIFlagBitField, extraData: i64 1664)
!3738 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_auto", scope: !3667, file: !80, line: 603, baseType: !7, size: 1, offset: 1670, flags: DIFlagBitField, extraData: i64 1664)
!3739 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_children", scope: !3667, file: !80, line: 604, baseType: !261, size: 1, offset: 1671, flags: DIFlagBitField, extraData: i64 1664)
!3740 = !DIDerivedType(tag: DW_TAG_member, name: "no_callbacks", scope: !3667, file: !80, line: 605, baseType: !7, size: 1, offset: 1672, flags: DIFlagBitField, extraData: i64 1664)
!3741 = !DIDerivedType(tag: DW_TAG_member, name: "irq_safe", scope: !3667, file: !80, line: 606, baseType: !7, size: 1, offset: 1673, flags: DIFlagBitField, extraData: i64 1664)
!3742 = !DIDerivedType(tag: DW_TAG_member, name: "use_autosuspend", scope: !3667, file: !80, line: 607, baseType: !7, size: 1, offset: 1674, flags: DIFlagBitField, extraData: i64 1664)
!3743 = !DIDerivedType(tag: DW_TAG_member, name: "timer_autosuspends", scope: !3667, file: !80, line: 608, baseType: !7, size: 1, offset: 1675, flags: DIFlagBitField, extraData: i64 1664)
!3744 = !DIDerivedType(tag: DW_TAG_member, name: "memalloc_noio", scope: !3667, file: !80, line: 609, baseType: !7, size: 1, offset: 1676, flags: DIFlagBitField, extraData: i64 1664)
!3745 = !DIDerivedType(tag: DW_TAG_member, name: "links_count", scope: !3667, file: !80, line: 610, baseType: !7, size: 32, offset: 1696)
!3746 = !DIDerivedType(tag: DW_TAG_member, name: "request", scope: !3667, file: !80, line: 611, baseType: !79, size: 32, offset: 1728)
!3747 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_status", scope: !3667, file: !80, line: 612, baseType: !87, size: 32, offset: 1760)
!3748 = !DIDerivedType(tag: DW_TAG_member, name: "runtime_error", scope: !3667, file: !80, line: 613, baseType: !234, size: 32, offset: 1792)
!3749 = !DIDerivedType(tag: DW_TAG_member, name: "autosuspend_delay", scope: !3667, file: !80, line: 614, baseType: !234, size: 32, offset: 1824)
!3750 = !DIDerivedType(tag: DW_TAG_member, name: "last_busy", scope: !3667, file: !80, line: 615, baseType: !485, size: 64, offset: 1856)
!3751 = !DIDerivedType(tag: DW_TAG_member, name: "active_time", scope: !3667, file: !80, line: 616, baseType: !485, size: 64, offset: 1920)
!3752 = !DIDerivedType(tag: DW_TAG_member, name: "suspended_time", scope: !3667, file: !80, line: 617, baseType: !485, size: 64, offset: 1984)
!3753 = !DIDerivedType(tag: DW_TAG_member, name: "accounting_timestamp", scope: !3667, file: !80, line: 618, baseType: !485, size: 64, offset: 2048)
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "subsys_data", scope: !3667, file: !80, line: 620, baseType: !3755, size: 64, offset: 2112)
!3755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3756, size: 64)
!3756 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_subsys_data", file: !80, line: 536, size: 256, elements: !3757)
!3757 = !{!3758, !3759, !3760, !3761}
!3758 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3756, file: !80, line: 537, baseType: !297)
!3759 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !3756, file: !80, line: 538, baseType: !7, size: 32)
!3760 = !DIDerivedType(tag: DW_TAG_member, name: "clock_list", scope: !3756, file: !80, line: 540, baseType: !284, size: 128, offset: 64)
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "domain_data", scope: !3756, file: !80, line: 543, baseType: !3762, size: 64, offset: 192)
!3762 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3763, size: 64)
!3763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pm_domain_data", file: !3764, line: 182, size: 192, elements: !3765)
!3764 = !DIFile(filename: "./include/linux/pm_domain.h", directory: "/home/lizy2001/genbc/linux")
!3765 = !{!3766, !3767}
!3766 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !3763, file: !3764, line: 183, baseType: !284, size: 128)
!3767 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !3763, file: !3764, line: 184, baseType: !3506, size: 64, offset: 128)
!3768 = !DIDerivedType(tag: DW_TAG_member, name: "set_latency_tolerance", scope: !3667, file: !80, line: 621, baseType: !3769, size: 64, offset: 2176)
!3769 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3770, size: 64)
!3770 = !DISubroutineType(types: !3771)
!3771 = !{null, !3506, !1585}
!3772 = !DIDerivedType(tag: DW_TAG_member, name: "qos", scope: !3667, file: !80, line: 622, baseType: !3773, size: 64, offset: 2240)
!3773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3774, size: 64)
!3774 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_qos", file: !80, line: 622, flags: DIFlagFwdDecl)
!3775 = !DIDerivedType(tag: DW_TAG_member, name: "pm_domain", scope: !273, file: !73, line: 486, baseType: !3776, size: 64, offset: 4096)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3777, size: 64)
!3777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_pm_domain", file: !80, line: 642, size: 1792, elements: !3778)
!3778 = !{!3779, !3780, !3781, !3785, !3786, !3787}
!3779 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3777, file: !80, line: 643, baseType: !3534, size: 1472)
!3780 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3777, file: !80, line: 644, baseType: !3537, size: 64, offset: 1472)
!3781 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !3777, file: !80, line: 645, baseType: !3782, size: 64, offset: 1536)
!3782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3783, size: 64)
!3783 = !DISubroutineType(types: !3784)
!3784 = !{null, !3506, !261}
!3785 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3777, file: !80, line: 646, baseType: !3537, size: 64, offset: 1600)
!3786 = !DIDerivedType(tag: DW_TAG_member, name: "sync", scope: !3777, file: !80, line: 647, baseType: !3528, size: 64, offset: 1664)
!3787 = !DIDerivedType(tag: DW_TAG_member, name: "dismiss", scope: !3777, file: !80, line: 648, baseType: !3528, size: 64, offset: 1728)
!3788 = !DIDerivedType(tag: DW_TAG_member, name: "msi_domain", scope: !273, file: !73, line: 493, baseType: !3789, size: 64, offset: 4160)
!3789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3790, size: 64)
!3790 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain", file: !94, line: 162, size: 1088, elements: !3791)
!3791 = !{!3792, !3793, !3794, !3977, !3978, !3979, !3980, !3981, !3982, !4089, !4090, !4091, !4092, !4093, !4094, !4095}
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !3790, file: !94, line: 163, baseType: !284, size: 128)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3790, file: !94, line: 164, baseType: !280, size: 64, offset: 128)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !3790, file: !94, line: 165, baseType: !3795, size: 64, offset: 192)
!3795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3796, size: 64)
!3796 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3797)
!3797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_ops", file: !94, line: 105, size: 640, elements: !3798)
!3798 = !{!3799, !3828, !3839, !3844, !3848, !3855, !3859, !3863, !3969, !3973}
!3799 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !3797, file: !94, line: 106, baseType: !3800, size: 64)
!3800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3801, size: 64)
!3801 = !DISubroutineType(types: !3802)
!3802 = !{!234, !3789, !3803, !93}
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_node", file: !3805, line: 51, size: 1344, elements: !3806)
!3805 = !DIFile(filename: "./include/linux/of.h", directory: "/home/lizy2001/genbc/linux")
!3806 = !{!3807, !3808, !3810, !3811, !3812, !3821, !3822, !3823, !3824, !3825, !3826, !3827}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3804, file: !3805, line: 52, baseType: !280, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_member, name: "phandle", scope: !3804, file: !3805, line: 53, baseType: !3809, size: 32, offset: 64)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "phandle", file: !3805, line: 28, baseType: !479)
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "full_name", scope: !3804, file: !3805, line: 54, baseType: !280, size: 64, offset: 128)
!3811 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3804, file: !3805, line: 55, baseType: !239, size: 192, offset: 192)
!3812 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3804, file: !3805, line: 57, baseType: !3813, size: 64, offset: 384)
!3813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3814, size: 64)
!3814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property", file: !3805, line: 31, size: 704, elements: !3815)
!3815 = !{!3816, !3817, !3818, !3819, !3820}
!3816 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3814, file: !3805, line: 32, baseType: !338, size: 64)
!3817 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !3814, file: !3805, line: 33, baseType: !234, size: 32, offset: 64)
!3818 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3814, file: !3805, line: 34, baseType: !228, size: 64, offset: 128)
!3819 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3814, file: !3805, line: 35, baseType: !3813, size: 64, offset: 192)
!3820 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !3814, file: !3805, line: 43, baseType: !407, size: 448, offset: 256)
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "deadprops", scope: !3804, file: !3805, line: 58, baseType: !3813, size: 64, offset: 448)
!3822 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3804, file: !3805, line: 59, baseType: !3803, size: 64, offset: 512)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3804, file: !3805, line: 60, baseType: !3803, size: 64, offset: 576)
!3824 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !3804, file: !3805, line: 61, baseType: !3803, size: 64, offset: 640)
!3825 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !3804, file: !3805, line: 63, baseType: !276, size: 512, offset: 704)
!3826 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !3804, file: !3805, line: 65, baseType: !388, size: 64, offset: 1216)
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3804, file: !3805, line: 66, baseType: !228, size: 64, offset: 1280)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "select", scope: !3797, file: !94, line: 108, baseType: !3829, size: 64, offset: 64)
!3829 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3830, size: 64)
!3830 = !DISubroutineType(types: !3831)
!3831 = !{!234, !3789, !3832, !93}
!3832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3833, size: 64)
!3833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_fwspec", file: !94, line: 63, size: 640, elements: !3834)
!3834 = !{!3835, !3836, !3837}
!3835 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3833, file: !94, line: 64, baseType: !243, size: 64)
!3836 = !DIDerivedType(tag: DW_TAG_member, name: "param_count", scope: !3833, file: !94, line: 65, baseType: !234, size: 32, offset: 64)
!3837 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !3833, file: !94, line: 66, baseType: !3838, size: 512, offset: 96)
!3838 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 512, elements: !1876)
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !3797, file: !94, line: 110, baseType: !3840, size: 64, offset: 128)
!3840 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3841, size: 64)
!3841 = !DISubroutineType(types: !3842)
!3842 = !{!234, !3789, !7, !3843}
!3843 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_hw_number_t", file: !227, line: 164, baseType: !388)
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !3797, file: !94, line: 111, baseType: !3845, size: 64, offset: 192)
!3845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3846, size: 64)
!3846 = !DISubroutineType(types: !3847)
!3847 = !{null, !3789, !7}
!3848 = !DIDerivedType(tag: DW_TAG_member, name: "xlate", scope: !3797, file: !94, line: 112, baseType: !3849, size: 64, offset: 256)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DISubroutineType(types: !3851)
!3851 = !{!234, !3789, !3803, !3852, !7, !3854, !2821}
!3852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3853, size: 64)
!3853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !479)
!3854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3797, file: !94, line: 117, baseType: !3856, size: 64, offset: 320)
!3856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3857, size: 64)
!3857 = !DISubroutineType(types: !3858)
!3858 = !{!234, !3789, !7, !7, !228}
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3797, file: !94, line: 119, baseType: !3860, size: 64, offset: 384)
!3860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3861, size: 64)
!3861 = !DISubroutineType(types: !3862)
!3862 = !{null, !3789, !7, !7}
!3863 = !DIDerivedType(tag: DW_TAG_member, name: "activate", scope: !3797, file: !94, line: 121, baseType: !3864, size: 64, offset: 448)
!3864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3865, size: 64)
!3865 = !DISubroutineType(types: !3866)
!3866 = !{!234, !3789, !3867, !261}
!3867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3868, size: 64)
!3868 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_data", file: !108, line: 175, size: 448, elements: !3869)
!3869 = !{!3870, !3871, !3872, !3873, !3885, !3966, !3967, !3968}
!3870 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3868, file: !108, line: 176, baseType: !479, size: 32)
!3871 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !3868, file: !108, line: 177, baseType: !7, size: 32, offset: 32)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq", scope: !3868, file: !108, line: 178, baseType: !388, size: 64, offset: 64)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !3868, file: !108, line: 179, baseType: !3874, size: 64, offset: 128)
!3874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3875, size: 64)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_common_data", file: !108, line: 145, size: 256, elements: !3876)
!3876 = !{!3877, !3878, !3879, !3882}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "state_use_accessors", scope: !3875, file: !108, line: 146, baseType: !7, size: 32)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "handler_data", scope: !3875, file: !108, line: 150, baseType: !228, size: 64, offset: 64)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "msi_desc", scope: !3875, file: !108, line: 151, baseType: !3880, size: 64, offset: 128)
!3880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3881, size: 64)
!3881 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_desc", file: !108, line: 127, flags: DIFlagFwdDecl)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "affinity", scope: !3875, file: !108, line: 152, baseType: !3883, size: 64, offset: 192)
!3883 = !DIDerivedType(tag: DW_TAG_typedef, name: "cpumask_var_t", file: !1507, line: 756, baseType: !3884)
!3884 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1508, size: 64, elements: !1512)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !3868, file: !108, line: 180, baseType: !3886, size: 64, offset: 192)
!3886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3887, size: 64)
!3887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip", file: !108, line: 503, size: 2304, elements: !3888)
!3888 = !{!3889, !3890, !3891, !3895, !3899, !3900, !3901, !3902, !3903, !3904, !3905, !3906, !3912, !3916, !3920, !3921, !3922, !3923, !3924, !3925, !3926, !3927, !3928, !3929, !3933, !3934, !3935, !3941, !3942, !3947, !3951, !3955, !3959, !3963, !3964, !3965}
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "parent_device", scope: !3887, file: !108, line: 504, baseType: !3506, size: 64)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3887, file: !108, line: 505, baseType: !280, size: 64, offset: 64)
!3891 = !DIDerivedType(tag: DW_TAG_member, name: "irq_startup", scope: !3887, file: !108, line: 506, baseType: !3892, size: 64, offset: 128)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DISubroutineType(types: !3894)
!3894 = !{!7, !3867}
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "irq_shutdown", scope: !3887, file: !108, line: 507, baseType: !3896, size: 64, offset: 192)
!3896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3897, size: 64)
!3897 = !DISubroutineType(types: !3898)
!3898 = !{null, !3867}
!3899 = !DIDerivedType(tag: DW_TAG_member, name: "irq_enable", scope: !3887, file: !108, line: 508, baseType: !3896, size: 64, offset: 256)
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "irq_disable", scope: !3887, file: !108, line: 509, baseType: !3896, size: 64, offset: 320)
!3901 = !DIDerivedType(tag: DW_TAG_member, name: "irq_ack", scope: !3887, file: !108, line: 511, baseType: !3896, size: 64, offset: 384)
!3902 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask", scope: !3887, file: !108, line: 512, baseType: !3896, size: 64, offset: 448)
!3903 = !DIDerivedType(tag: DW_TAG_member, name: "irq_mask_ack", scope: !3887, file: !108, line: 513, baseType: !3896, size: 64, offset: 512)
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "irq_unmask", scope: !3887, file: !108, line: 514, baseType: !3896, size: 64, offset: 576)
!3905 = !DIDerivedType(tag: DW_TAG_member, name: "irq_eoi", scope: !3887, file: !108, line: 515, baseType: !3896, size: 64, offset: 640)
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_affinity", scope: !3887, file: !108, line: 517, baseType: !3907, size: 64, offset: 704)
!3907 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3908, size: 64)
!3908 = !DISubroutineType(types: !3909)
!3909 = !{!234, !3867, !3910, !261}
!3910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3911, size: 64)
!3911 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1508)
!3912 = !DIDerivedType(tag: DW_TAG_member, name: "irq_retrigger", scope: !3887, file: !108, line: 518, baseType: !3913, size: 64, offset: 768)
!3913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3914, size: 64)
!3914 = !DISubroutineType(types: !3915)
!3915 = !{!234, !3867}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_type", scope: !3887, file: !108, line: 519, baseType: !3917, size: 64, offset: 832)
!3917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3918, size: 64)
!3918 = !DISubroutineType(types: !3919)
!3919 = !{!234, !3867, !7}
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_wake", scope: !3887, file: !108, line: 520, baseType: !3917, size: 64, offset: 896)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_lock", scope: !3887, file: !108, line: 522, baseType: !3896, size: 64, offset: 960)
!3922 = !DIDerivedType(tag: DW_TAG_member, name: "irq_bus_sync_unlock", scope: !3887, file: !108, line: 523, baseType: !3896, size: 64, offset: 1024)
!3923 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_online", scope: !3887, file: !108, line: 525, baseType: !3896, size: 64, offset: 1088)
!3924 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cpu_offline", scope: !3887, file: !108, line: 526, baseType: !3896, size: 64, offset: 1152)
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "irq_suspend", scope: !3887, file: !108, line: 528, baseType: !3896, size: 64, offset: 1216)
!3926 = !DIDerivedType(tag: DW_TAG_member, name: "irq_resume", scope: !3887, file: !108, line: 529, baseType: !3896, size: 64, offset: 1280)
!3927 = !DIDerivedType(tag: DW_TAG_member, name: "irq_pm_shutdown", scope: !3887, file: !108, line: 530, baseType: !3896, size: 64, offset: 1344)
!3928 = !DIDerivedType(tag: DW_TAG_member, name: "irq_calc_mask", scope: !3887, file: !108, line: 532, baseType: !3896, size: 64, offset: 1408)
!3929 = !DIDerivedType(tag: DW_TAG_member, name: "irq_print_chip", scope: !3887, file: !108, line: 534, baseType: !3930, size: 64, offset: 1472)
!3930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3931, size: 64)
!3931 = !DISubroutineType(types: !3932)
!3932 = !{null, !3867, !776}
!3933 = !DIDerivedType(tag: DW_TAG_member, name: "irq_request_resources", scope: !3887, file: !108, line: 535, baseType: !3913, size: 64, offset: 1536)
!3934 = !DIDerivedType(tag: DW_TAG_member, name: "irq_release_resources", scope: !3887, file: !108, line: 536, baseType: !3896, size: 64, offset: 1600)
!3935 = !DIDerivedType(tag: DW_TAG_member, name: "irq_compose_msi_msg", scope: !3887, file: !108, line: 538, baseType: !3936, size: 64, offset: 1664)
!3936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3937, size: 64)
!3937 = !DISubroutineType(types: !3938)
!3938 = !{null, !3867, !3939}
!3939 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3940, size: 64)
!3940 = !DICompositeType(tag: DW_TAG_structure_type, name: "msi_msg", file: !108, line: 29, flags: DIFlagFwdDecl)
!3941 = !DIDerivedType(tag: DW_TAG_member, name: "irq_write_msi_msg", scope: !3887, file: !108, line: 539, baseType: !3936, size: 64, offset: 1728)
!3942 = !DIDerivedType(tag: DW_TAG_member, name: "irq_get_irqchip_state", scope: !3887, file: !108, line: 541, baseType: !3943, size: 64, offset: 1792)
!3943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3944, size: 64)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!234, !3867, !3946, !1038}
!3946 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "irqchip_irq_state", file: !108, line: 31, flags: DIFlagFwdDecl)
!3947 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_irqchip_state", scope: !3887, file: !108, line: 542, baseType: !3948, size: 64, offset: 1856)
!3948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3949, size: 64)
!3949 = !DISubroutineType(types: !3950)
!3950 = !{!234, !3867, !3946, !261}
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "irq_set_vcpu_affinity", scope: !3887, file: !108, line: 544, baseType: !3952, size: 64, offset: 1920)
!3952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3953, size: 64)
!3953 = !DISubroutineType(types: !3954)
!3954 = !{!234, !3867, !228}
!3955 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_single", scope: !3887, file: !108, line: 546, baseType: !3956, size: 64, offset: 1984)
!3956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3957, size: 64)
!3957 = !DISubroutineType(types: !3958)
!3958 = !{null, !3867, !7}
!3959 = !DIDerivedType(tag: DW_TAG_member, name: "ipi_send_mask", scope: !3887, file: !108, line: 547, baseType: !3960, size: 64, offset: 2048)
!3960 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3961, size: 64)
!3961 = !DISubroutineType(types: !3962)
!3962 = !{null, !3867, !3910}
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_setup", scope: !3887, file: !108, line: 549, baseType: !3913, size: 64, offset: 2112)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "irq_nmi_teardown", scope: !3887, file: !108, line: 550, baseType: !3896, size: 64, offset: 2176)
!3965 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3887, file: !108, line: 552, baseType: !388, size: 64, offset: 2240)
!3966 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3868, file: !108, line: 181, baseType: !3789, size: 64, offset: 256)
!3967 = !DIDerivedType(tag: DW_TAG_member, name: "parent_data", scope: !3868, file: !108, line: 183, baseType: !3867, size: 64, offset: 320)
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "chip_data", scope: !3868, file: !108, line: 185, baseType: !228, size: 64, offset: 384)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "deactivate", scope: !3797, file: !94, line: 122, baseType: !3970, size: 64, offset: 512)
!3970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3971, size: 64)
!3971 = !DISubroutineType(types: !3972)
!3972 = !{null, !3789, !3867}
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "translate", scope: !3797, file: !94, line: 123, baseType: !3974, size: 64, offset: 576)
!3974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3975, size: 64)
!3975 = !DISubroutineType(types: !3976)
!3976 = !{!234, !3789, !3832, !3854, !2821}
!3977 = !DIDerivedType(tag: DW_TAG_member, name: "host_data", scope: !3790, file: !94, line: 166, baseType: !228, size: 64, offset: 256)
!3978 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !3790, file: !94, line: 167, baseType: !7, size: 32, offset: 320)
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "mapcount", scope: !3790, file: !94, line: 168, baseType: !7, size: 32, offset: 352)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !3790, file: !94, line: 171, baseType: !243, size: 64, offset: 384)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "bus_token", scope: !3790, file: !94, line: 172, baseType: !93, size: 32, offset: 448)
!3982 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3790, file: !94, line: 173, baseType: !3983, size: 64, offset: 512)
!3983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3984, size: 64)
!3984 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_domain_chip_generic", file: !108, line: 1101, size: 192, elements: !3985)
!3985 = !{!3986, !3987, !3988, !3989, !3990, !3991}
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_per_chip", scope: !3984, file: !108, line: 1102, baseType: !7, size: 32)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "num_chips", scope: !3984, file: !108, line: 1103, baseType: !7, size: 32, offset: 32)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_clear", scope: !3984, file: !108, line: 1104, baseType: !7, size: 32, offset: 64)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags_to_set", scope: !3984, file: !108, line: 1105, baseType: !7, size: 32, offset: 96)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "gc_flags", scope: !3984, file: !108, line: 1106, baseType: !107, size: 32, offset: 128)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "gc", scope: !3984, file: !108, line: 1107, baseType: !3992, offset: 192)
!3992 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3993, elements: !2469)
!3993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3994, size: 64)
!3994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_generic", file: !108, line: 1051, size: 960, elements: !3995)
!3995 = !{!3996, !3997, !3998, !4002, !4006, !4010, !4011, !4012, !4013, !4014, !4015, !4016, !4017, !4018, !4019, !4020, !4021, !4022, !4023, !4024}
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3994, file: !108, line: 1052, baseType: !887)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "reg_base", scope: !3994, file: !108, line: 1053, baseType: !228, size: 64)
!3998 = !DIDerivedType(tag: DW_TAG_member, name: "reg_readl", scope: !3994, file: !108, line: 1054, baseType: !3999, size: 64, offset: 64)
!3999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4000, size: 64)
!4000 = !DISubroutineType(types: !4001)
!4001 = !{!479, !228}
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "reg_writel", scope: !3994, file: !108, line: 1055, baseType: !4003, size: 64, offset: 128)
!4003 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4004, size: 64)
!4004 = !DISubroutineType(types: !4005)
!4005 = !{null, !479, !228}
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "suspend", scope: !3994, file: !108, line: 1056, baseType: !4007, size: 64, offset: 192)
!4007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4008, size: 64)
!4008 = !DISubroutineType(types: !4009)
!4009 = !{null, !3993}
!4010 = !DIDerivedType(tag: DW_TAG_member, name: "resume", scope: !3994, file: !108, line: 1057, baseType: !4007, size: 64, offset: 256)
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "irq_base", scope: !3994, file: !108, line: 1058, baseType: !7, size: 32, offset: 320)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "irq_cnt", scope: !3994, file: !108, line: 1059, baseType: !7, size: 32, offset: 352)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !3994, file: !108, line: 1060, baseType: !479, size: 32, offset: 384)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "type_cache", scope: !3994, file: !108, line: 1061, baseType: !479, size: 32, offset: 416)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "polarity_cache", scope: !3994, file: !108, line: 1062, baseType: !479, size: 32, offset: 448)
!4016 = !DIDerivedType(tag: DW_TAG_member, name: "wake_enabled", scope: !3994, file: !108, line: 1063, baseType: !479, size: 32, offset: 480)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "wake_active", scope: !3994, file: !108, line: 1064, baseType: !479, size: 32, offset: 512)
!4018 = !DIDerivedType(tag: DW_TAG_member, name: "num_ct", scope: !3994, file: !108, line: 1065, baseType: !7, size: 32, offset: 544)
!4019 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !3994, file: !108, line: 1066, baseType: !228, size: 64, offset: 576)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "installed", scope: !3994, file: !108, line: 1067, baseType: !388, size: 64, offset: 640)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "unused", scope: !3994, file: !108, line: 1068, baseType: !388, size: 64, offset: 704)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "domain", scope: !3994, file: !108, line: 1069, baseType: !3789, size: 64, offset: 768)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3994, file: !108, line: 1070, baseType: !284, size: 128, offset: 832)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "chip_types", scope: !3994, file: !108, line: 1071, baseType: !4025, offset: 960)
!4025 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4026, elements: !2469)
!4026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_type", file: !108, line: 1009, size: 2944, elements: !4027)
!4027 = !{!4028, !4029, !4039, !4086, !4087, !4088}
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "chip", scope: !4026, file: !108, line: 1010, baseType: !3887, size: 2304)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !4026, file: !108, line: 1011, baseType: !4030, size: 448, offset: 2304)
!4030 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_chip_regs", file: !108, line: 986, size: 448, elements: !4031)
!4031 = !{!4032, !4033, !4034, !4035, !4036, !4037, !4038}
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "enable", scope: !4030, file: !108, line: 987, baseType: !388, size: 64)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "disable", scope: !4030, file: !108, line: 988, baseType: !388, size: 64, offset: 64)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !4030, file: !108, line: 989, baseType: !388, size: 64, offset: 128)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "ack", scope: !4030, file: !108, line: 990, baseType: !388, size: 64, offset: 192)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "eoi", scope: !4030, file: !108, line: 991, baseType: !388, size: 64, offset: 256)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4030, file: !108, line: 992, baseType: !388, size: 64, offset: 320)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !4030, file: !108, line: 993, baseType: !388, size: 64, offset: 384)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !4026, file: !108, line: 1012, baseType: !4040, size: 64, offset: 2752)
!4040 = !DIDerivedType(tag: DW_TAG_typedef, name: "irq_flow_handler_t", file: !4041, line: 12, baseType: !4042)
!4041 = !DIFile(filename: "./include/linux/irqhandler.h", directory: "/home/lizy2001/genbc/linux")
!4042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4043, size: 64)
!4043 = !DISubroutineType(types: !4044)
!4044 = !{null, !4045}
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4046, size: 64)
!4046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "irq_desc", file: !4047, line: 55, size: 2880, elements: !4048)
!4047 = !DIFile(filename: "./include/linux/irqdesc.h", directory: "/home/lizy2001/genbc/linux")
!4048 = !{!4049, !4050, !4051, !4052, !4053, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4066, !4067, !4069, !4070, !4071, !4072, !4073, !4074, !4075, !4076, !4077, !4080, !4081, !4082, !4083, !4084, !4085}
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "irq_common_data", scope: !4046, file: !4047, line: 56, baseType: !3875, size: 256)
!4050 = !DIDerivedType(tag: DW_TAG_member, name: "irq_data", scope: !4046, file: !4047, line: 57, baseType: !3868, size: 448, offset: 256)
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "kstat_irqs", scope: !4046, file: !4047, line: 58, baseType: !2821, size: 64, offset: 704)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "handle_irq", scope: !4046, file: !4047, line: 59, baseType: !4040, size: 64, offset: 768)
!4053 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !4046, file: !4047, line: 60, baseType: !4054, size: 64, offset: 832)
!4054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4055, size: 64)
!4055 = !DICompositeType(tag: DW_TAG_structure_type, name: "irqaction", file: !4047, line: 60, flags: DIFlagFwdDecl)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "status_use_accessors", scope: !4046, file: !4047, line: 61, baseType: !7, size: 32, offset: 896)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "core_internal_state__do_not_mess_with_it", scope: !4046, file: !4047, line: 62, baseType: !7, size: 32, offset: 928)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !4046, file: !4047, line: 63, baseType: !7, size: 32, offset: 960)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "wake_depth", scope: !4046, file: !4047, line: 64, baseType: !7, size: 32, offset: 992)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "tot_count", scope: !4046, file: !4047, line: 65, baseType: !7, size: 32, offset: 1024)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "irq_count", scope: !4046, file: !4047, line: 66, baseType: !7, size: 32, offset: 1056)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "last_unhandled", scope: !4046, file: !4047, line: 67, baseType: !388, size: 64, offset: 1088)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "irqs_unhandled", scope: !4046, file: !4047, line: 68, baseType: !7, size: 32, offset: 1152)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled", scope: !4046, file: !4047, line: 69, baseType: !861, size: 32, offset: 1184)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "threads_handled_last", scope: !4046, file: !4047, line: 70, baseType: !234, size: 32, offset: 1216)
!4066 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4046, file: !4047, line: 71, baseType: !887, offset: 1248)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_enabled", scope: !4046, file: !4047, line: 72, baseType: !4068, size: 64, offset: 1280)
!4068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1508, size: 64)
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "percpu_affinity", scope: !4046, file: !4047, line: 73, baseType: !3910, size: 64, offset: 1344)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "threads_oneshot", scope: !4046, file: !4047, line: 81, baseType: !388, size: 64, offset: 1408)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "threads_active", scope: !4046, file: !4047, line: 82, baseType: !861, size: 32, offset: 1472)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "wait_for_threads", scope: !4046, file: !4047, line: 83, baseType: !1622, size: 128, offset: 1536)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "nr_actions", scope: !4046, file: !4047, line: 85, baseType: !7, size: 32, offset: 1664)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "no_suspend_depth", scope: !4046, file: !4047, line: 86, baseType: !7, size: 32, offset: 1696)
!4075 = !DIDerivedType(tag: DW_TAG_member, name: "cond_suspend_depth", scope: !4046, file: !4047, line: 87, baseType: !7, size: 32, offset: 1728)
!4076 = !DIDerivedType(tag: DW_TAG_member, name: "force_resume_depth", scope: !4046, file: !4047, line: 88, baseType: !7, size: 32, offset: 1760)
!4077 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4046, file: !4047, line: 91, baseType: !4078, size: 64, offset: 1792)
!4078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4079, size: 64)
!4079 = !DICompositeType(tag: DW_TAG_structure_type, name: "proc_dir_entry", file: !4047, line: 14, flags: DIFlagFwdDecl)
!4080 = !DIDerivedType(tag: DW_TAG_member, name: "rcu", scope: !4046, file: !4047, line: 98, baseType: !429, size: 128, align: 64, offset: 1856)
!4081 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4046, file: !4047, line: 99, baseType: !276, size: 512, offset: 1984)
!4082 = !DIDerivedType(tag: DW_TAG_member, name: "request_mutex", scope: !4046, file: !4047, line: 101, baseType: !788, size: 192, offset: 2496)
!4083 = !DIDerivedType(tag: DW_TAG_member, name: "parent_irq", scope: !4046, file: !4047, line: 102, baseType: !234, size: 32, offset: 2688)
!4084 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4046, file: !4047, line: 103, baseType: !695, size: 64, offset: 2752)
!4085 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4046, file: !4047, line: 104, baseType: !280, size: 64, offset: 2816)
!4086 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4026, file: !108, line: 1013, baseType: !479, size: 32, offset: 2816)
!4087 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache_priv", scope: !4026, file: !108, line: 1014, baseType: !479, size: 32, offset: 2848)
!4088 = !DIDerivedType(tag: DW_TAG_member, name: "mask_cache", scope: !4026, file: !108, line: 1015, baseType: !1556, size: 64, offset: 2880)
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3790, file: !94, line: 175, baseType: !3789, size: 64, offset: 576)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "hwirq_max", scope: !3790, file: !94, line: 182, baseType: !3843, size: 64, offset: 640)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_direct_max_irq", scope: !3790, file: !94, line: 183, baseType: !7, size: 32, offset: 704)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_size", scope: !3790, file: !94, line: 184, baseType: !7, size: 32, offset: 736)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree", scope: !3790, file: !94, line: 185, baseType: !853, size: 128, offset: 768)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "revmap_tree_mutex", scope: !3790, file: !94, line: 186, baseType: !788, size: 192, offset: 896)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "linear_revmap", scope: !3790, file: !94, line: 187, baseType: !4096, offset: 1088)
!4096 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !2469)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "msi_list", scope: !273, file: !73, line: 499, baseType: !284, size: 128, offset: 4224)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "dma_ops", scope: !273, file: !73, line: 502, baseType: !4099, size: 64, offset: 4352)
!4099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4100, size: 64)
!4100 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4101)
!4101 = !DICompositeType(tag: DW_TAG_structure_type, name: "dma_map_ops", file: !73, line: 502, flags: DIFlagFwdDecl)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "dma_mask", scope: !273, file: !73, line: 504, baseType: !4103, size: 64, offset: 4416)
!4103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !485, size: 64)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma_mask", scope: !273, file: !73, line: 505, baseType: !485, size: 64, offset: 4480)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "bus_dma_limit", scope: !273, file: !73, line: 510, baseType: !485, size: 64, offset: 4544)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "dma_range_map", scope: !273, file: !73, line: 511, baseType: !4107, size: 64, offset: 4608)
!4107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4108, size: 64)
!4108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4109)
!4109 = !DICompositeType(tag: DW_TAG_structure_type, name: "bus_dma_region", file: !73, line: 511, flags: DIFlagFwdDecl)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "dma_parms", scope: !273, file: !73, line: 513, baseType: !4111, size: 64, offset: 4672)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_dma_parameters", file: !73, line: 288, size: 128, elements: !4113)
!4113 = !{!4114, !4115}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "max_segment_size", scope: !4112, file: !73, line: 293, baseType: !7, size: 32)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "segment_boundary_mask", scope: !4112, file: !73, line: 294, baseType: !388, size: 64, offset: 64)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "dma_pools", scope: !273, file: !73, line: 515, baseType: !284, size: 128, offset: 4736)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "archdata", scope: !273, file: !73, line: 526, baseType: !4118, offset: 4864)
!4118 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dev_archdata", file: !4119, line: 5, elements: !311)
!4119 = !DIFile(filename: "./arch/x86/include/asm/device.h", directory: "/home/lizy2001/genbc/linux")
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "of_node", scope: !273, file: !73, line: 528, baseType: !3803, size: 64, offset: 4864)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !273, file: !73, line: 529, baseType: !243, size: 64, offset: 4928)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "devt", scope: !273, file: !73, line: 534, baseType: !575, size: 32, offset: 4992)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !273, file: !73, line: 535, baseType: !479, size: 32, offset: 5024)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "devres_lock", scope: !273, file: !73, line: 537, baseType: !297, offset: 5056)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "devres_head", scope: !273, file: !73, line: 538, baseType: !284, size: 128, offset: 5056)
!4126 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !273, file: !73, line: 540, baseType: !4127, size: 64, offset: 5184)
!4127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4128, size: 64)
!4128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "class", file: !4129, line: 54, size: 960, elements: !4130)
!4129 = !DIFile(filename: "./include/linux/device/class.h", directory: "/home/lizy2001/genbc/linux")
!4130 = !{!4131, !4132, !4133, !4134, !4135, !4136, !4137, !4141, !4145, !4146, !4147, !4148, !4152, !4156, !4157}
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4128, file: !4129, line: 55, baseType: !280, size: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4128, file: !4129, line: 56, baseType: !695, size: 64, offset: 64)
!4133 = !DIDerivedType(tag: DW_TAG_member, name: "class_groups", scope: !4128, file: !4129, line: 58, baseType: !392, size: 64, offset: 128)
!4134 = !DIDerivedType(tag: DW_TAG_member, name: "dev_groups", scope: !4128, file: !4129, line: 59, baseType: !392, size: 64, offset: 192)
!4135 = !DIDerivedType(tag: DW_TAG_member, name: "dev_kobj", scope: !4128, file: !4129, line: 60, baseType: !290, size: 64, offset: 256)
!4136 = !DIDerivedType(tag: DW_TAG_member, name: "dev_uevent", scope: !4128, file: !4129, line: 62, baseType: !3519, size: 64, offset: 320)
!4137 = !DIDerivedType(tag: DW_TAG_member, name: "devnode", scope: !4128, file: !4129, line: 63, baseType: !4138, size: 64, offset: 384)
!4138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4139, size: 64)
!4139 = !DISubroutineType(types: !4140)
!4140 = !{!338, !3506, !3526}
!4141 = !DIDerivedType(tag: DW_TAG_member, name: "class_release", scope: !4128, file: !4129, line: 65, baseType: !4142, size: 64, offset: 448)
!4142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4143, size: 64)
!4143 = !DISubroutineType(types: !4144)
!4144 = !{null, !4127}
!4145 = !DIDerivedType(tag: DW_TAG_member, name: "dev_release", scope: !4128, file: !4129, line: 66, baseType: !3528, size: 64, offset: 512)
!4146 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown_pre", scope: !4128, file: !4129, line: 68, baseType: !3537, size: 64, offset: 576)
!4147 = !DIDerivedType(tag: DW_TAG_member, name: "ns_type", scope: !4128, file: !4129, line: 70, baseType: !3334, size: 64, offset: 640)
!4148 = !DIDerivedType(tag: DW_TAG_member, name: "namespace", scope: !4128, file: !4129, line: 71, baseType: !4149, size: 64, offset: 704)
!4149 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!269, !3506}
!4152 = !DIDerivedType(tag: DW_TAG_member, name: "get_ownership", scope: !4128, file: !4129, line: 73, baseType: !4153, size: 64, offset: 768)
!4153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4154, size: 64)
!4154 = !DISubroutineType(types: !4155)
!4155 = !{null, !3506, !3366, !3367}
!4156 = !DIDerivedType(tag: DW_TAG_member, name: "pm", scope: !4128, file: !4129, line: 75, baseType: !3532, size: 64, offset: 832)
!4157 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !4128, file: !4129, line: 77, baseType: !3649, size: 64, offset: 896)
!4158 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !273, file: !73, line: 541, baseType: !392, size: 64, offset: 5248)
!4159 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !273, file: !73, line: 543, baseType: !3528, size: 64, offset: 5312)
!4160 = !DIDerivedType(tag: DW_TAG_member, name: "iommu_group", scope: !273, file: !73, line: 544, baseType: !4161, size: 64, offset: 5376)
!4161 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4162, size: 64)
!4162 = !DICompositeType(tag: DW_TAG_structure_type, name: "iommu_group", file: !73, line: 45, flags: DIFlagFwdDecl)
!4163 = !DIDerivedType(tag: DW_TAG_member, name: "iommu", scope: !273, file: !73, line: 545, baseType: !4164, size: 64, offset: 5440)
!4164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4165, size: 64)
!4165 = !DICompositeType(tag: DW_TAG_structure_type, name: "dev_iommu", file: !73, line: 47, flags: DIFlagFwdDecl)
!4166 = !DIDerivedType(tag: DW_TAG_member, name: "offline_disabled", scope: !273, file: !73, line: 547, baseType: !261, size: 1, offset: 5504, flags: DIFlagBitField, extraData: i64 5504)
!4167 = !DIDerivedType(tag: DW_TAG_member, name: "offline", scope: !273, file: !73, line: 548, baseType: !261, size: 1, offset: 5505, flags: DIFlagBitField, extraData: i64 5504)
!4168 = !DIDerivedType(tag: DW_TAG_member, name: "of_node_reused", scope: !273, file: !73, line: 549, baseType: !261, size: 1, offset: 5506, flags: DIFlagBitField, extraData: i64 5504)
!4169 = !DIDerivedType(tag: DW_TAG_member, name: "state_synced", scope: !273, file: !73, line: 550, baseType: !261, size: 1, offset: 5507, flags: DIFlagBitField, extraData: i64 5504)
!4170 = !DIDerivedType(tag: DW_TAG_member, name: "property_present", scope: !247, file: !240, line: 116, baseType: !4171, size: 64, offset: 256)
!4171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4172, size: 64)
!4172 = !DISubroutineType(types: !4173)
!4173 = !{!261, !263, !280}
!4174 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_int_array", scope: !247, file: !240, line: 118, baseType: !4175, size: 64, offset: 320)
!4175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4176, size: 64)
!4176 = !DISubroutineType(types: !4177)
!4177 = !{!234, !263, !280, !7, !228, !385}
!4178 = !DIDerivedType(tag: DW_TAG_member, name: "property_read_string_array", scope: !247, file: !240, line: 123, baseType: !4179, size: 64, offset: 384)
!4179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4180, size: 64)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!234, !263, !280, !4182, !385}
!4182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !280, size: 64)
!4183 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !247, file: !240, line: 126, baseType: !4184, size: 64, offset: 448)
!4184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4185, size: 64)
!4185 = !DISubroutineType(types: !4186)
!4186 = !{!280, !263}
!4187 = !DIDerivedType(tag: DW_TAG_member, name: "get_name_prefix", scope: !247, file: !240, line: 127, baseType: !4184, size: 64, offset: 512)
!4188 = !DIDerivedType(tag: DW_TAG_member, name: "get_parent", scope: !247, file: !240, line: 128, baseType: !4189, size: 64, offset: 576)
!4189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4190, size: 64)
!4190 = !DISubroutineType(types: !4191)
!4191 = !{!243, !263}
!4192 = !DIDerivedType(tag: DW_TAG_member, name: "get_next_child_node", scope: !247, file: !240, line: 130, baseType: !4193, size: 64, offset: 640)
!4193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4194, size: 64)
!4194 = !DISubroutineType(types: !4195)
!4195 = !{!243, !263, !243}
!4196 = !DIDerivedType(tag: DW_TAG_member, name: "get_named_child_node", scope: !247, file: !240, line: 133, baseType: !4197, size: 64, offset: 704)
!4197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4198, size: 64)
!4198 = !DISubroutineType(types: !4199)
!4199 = !{!243, !263, !280}
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "get_reference_args", scope: !247, file: !240, line: 135, baseType: !4201, size: 64, offset: 768)
!4201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4202, size: 64)
!4202 = !DISubroutineType(types: !4203)
!4203 = !{!234, !263, !280, !280, !7, !7, !4204}
!4204 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4205, size: 64)
!4205 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_reference_args", file: !240, line: 43, size: 640, elements: !4206)
!4206 = !{!4207, !4208, !4209}
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "fwnode", scope: !4205, file: !240, line: 44, baseType: !243, size: 64)
!4208 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !4205, file: !240, line: 45, baseType: !7, size: 32, offset: 64)
!4209 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !4205, file: !240, line: 46, baseType: !4210, size: 512, offset: 128)
!4210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 512, elements: !1471)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_next_endpoint", scope: !247, file: !240, line: 140, baseType: !4193, size: 64, offset: 832)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_remote_endpoint", scope: !247, file: !240, line: 143, baseType: !4189, size: 64, offset: 896)
!4213 = !DIDerivedType(tag: DW_TAG_member, name: "graph_get_port_parent", scope: !247, file: !240, line: 145, baseType: !250, size: 64, offset: 960)
!4214 = !DIDerivedType(tag: DW_TAG_member, name: "graph_parse_endpoint", scope: !247, file: !240, line: 146, baseType: !4215, size: 64, offset: 1024)
!4215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4216, size: 64)
!4216 = !DISubroutineType(types: !4217)
!4217 = !{!234, !263, !4218}
!4218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4219, size: 64)
!4219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fwnode_endpoint", file: !240, line: 29, size: 128, elements: !4220)
!4220 = !{!4221, !4222, !4223}
!4221 = !DIDerivedType(tag: DW_TAG_member, name: "port", scope: !4219, file: !240, line: 30, baseType: !7, size: 32)
!4222 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4219, file: !240, line: 31, baseType: !7, size: 32, offset: 32)
!4223 = !DIDerivedType(tag: DW_TAG_member, name: "local_fwnode", scope: !4219, file: !240, line: 32, baseType: !263, size: 64, offset: 64)
!4224 = !DIDerivedType(tag: DW_TAG_member, name: "add_links", scope: !247, file: !240, line: 148, baseType: !4225, size: 64, offset: 1088)
!4225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4226, size: 64)
!4226 = !DISubroutineType(types: !4227)
!4227 = !{!234, !263, !3506}
!4228 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !239, file: !240, line: 20, baseType: !3506, size: 64, offset: 128)
!4229 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !230, file: !231, line: 355, baseType: !229, size: 64, offset: 320)
!4230 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !230, file: !231, line: 356, baseType: !284, size: 128, offset: 384)
!4231 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !230, file: !231, line: 357, baseType: !284, size: 128, offset: 512)
!4232 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup_list", scope: !230, file: !231, line: 358, baseType: !284, size: 128, offset: 640)
!4233 = !DIDerivedType(tag: DW_TAG_member, name: "del_list", scope: !230, file: !231, line: 359, baseType: !284, size: 128, offset: 768)
!4234 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !230, file: !231, line: 360, baseType: !4235, size: 32, offset: 896)
!4235 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_status", file: !231, line: 179, size: 32, elements: !4236)
!4236 = !{!4237, !4238, !4239, !4240, !4241, !4242}
!4237 = !DIDerivedType(tag: DW_TAG_member, name: "present", scope: !4235, file: !231, line: 180, baseType: !479, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4238 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4235, file: !231, line: 181, baseType: !479, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4239 = !DIDerivedType(tag: DW_TAG_member, name: "show_in_ui", scope: !4235, file: !231, line: 182, baseType: !479, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4240 = !DIDerivedType(tag: DW_TAG_member, name: "functional", scope: !4235, file: !231, line: 183, baseType: !479, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4241 = !DIDerivedType(tag: DW_TAG_member, name: "battery_present", scope: !4235, file: !231, line: 184, baseType: !479, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4242 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4235, file: !231, line: 185, baseType: !479, size: 27, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !230, file: !231, line: 361, baseType: !4244, size: 32, offset: 928)
!4244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_flags", file: !231, line: 190, size: 32, elements: !4245)
!4245 = !{!4246, !4247, !4248, !4249, !4250, !4251, !4252, !4253, !4254, !4255, !4256, !4257, !4258, !4259}
!4246 = !DIDerivedType(tag: DW_TAG_member, name: "dynamic_status", scope: !4244, file: !231, line: 191, baseType: !479, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "removable", scope: !4244, file: !231, line: 192, baseType: !479, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4248 = !DIDerivedType(tag: DW_TAG_member, name: "ejectable", scope: !4244, file: !231, line: 193, baseType: !479, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4249 = !DIDerivedType(tag: DW_TAG_member, name: "power_manageable", scope: !4244, file: !231, line: 194, baseType: !479, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "match_driver", scope: !4244, file: !231, line: 195, baseType: !479, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4251 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !4244, file: !231, line: 196, baseType: !479, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4252 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !4244, file: !231, line: 197, baseType: !479, size: 1, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4253 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug_notify", scope: !4244, file: !231, line: 198, baseType: !479, size: 1, offset: 7, flags: DIFlagBitField, extraData: i64 0)
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "is_dock_station", scope: !4244, file: !231, line: 199, baseType: !479, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible_ok", scope: !4244, file: !231, line: 200, baseType: !479, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "coherent_dma", scope: !4244, file: !231, line: 201, baseType: !479, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "cca_seen", scope: !4244, file: !231, line: 202, baseType: !479, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "enumeration_by_parent", scope: !4244, file: !231, line: 203, baseType: !479, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4244, file: !231, line: 204, baseType: !479, size: 19, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "pnp", scope: !230, file: !231, line: 362, baseType: !4261, size: 960, offset: 960)
!4261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_pnp", file: !231, line: 234, size: 960, elements: !4262)
!4262 = !{!4263, !4265, !4272, !4274, !4275, !4276, !4281, !4284}
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "bus_id", scope: !4261, file: !231, line: 235, baseType: !4264, size: 64)
!4264 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_id", file: !231, line: 217, baseType: !2174)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4261, file: !231, line: 236, baseType: !4266, size: 32, offset: 64)
!4266 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_pnp_type", file: !231, line: 227, size: 32, elements: !4267)
!4267 = !{!4268, !4269, !4270, !4271}
!4268 = !DIDerivedType(tag: DW_TAG_member, name: "hardware_id", scope: !4266, file: !231, line: 228, baseType: !479, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4266, file: !231, line: 229, baseType: !479, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4270 = !DIDerivedType(tag: DW_TAG_member, name: "platform_id", scope: !4266, file: !231, line: 230, baseType: !479, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4271 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4266, file: !231, line: 231, baseType: !479, size: 29, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4272 = !DIDerivedType(tag: DW_TAG_member, name: "bus_address", scope: !4261, file: !231, line: 237, baseType: !4273, size: 64, offset: 128)
!4273 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_bus_address", file: !231, line: 218, baseType: !485)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "unique_id", scope: !4261, file: !231, line: 238, baseType: !338, size: 64, offset: 192)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4261, file: !231, line: 239, baseType: !284, size: 128, offset: 256)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "device_name", scope: !4261, file: !231, line: 240, baseType: !4277, size: 320, offset: 384)
!4277 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_name", file: !231, line: 219, baseType: !4278)
!4278 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 320, elements: !4279)
!4279 = !{!4280}
!4280 = !DISubrange(count: 40)
!4281 = !DIDerivedType(tag: DW_TAG_member, name: "device_class", scope: !4261, file: !231, line: 241, baseType: !4282, size: 160, offset: 704)
!4282 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_device_class", file: !231, line: 220, baseType: !4283)
!4283 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 160, elements: !2339)
!4284 = !DIDerivedType(tag: DW_TAG_member, name: "str_obj", scope: !4261, file: !231, line: 242, baseType: !4285, size: 64, offset: 896)
!4285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4286, size: 64)
!4286 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_object", file: !237, line: 899, size: 192, elements: !4287)
!4287 = !{!4288, !4290, !4295, !4301, !4308, !4314, !4320, !4328}
!4288 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4286, file: !237, line: 900, baseType: !4289, size: 32)
!4289 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_object_type", file: !237, line: 635, baseType: !479)
!4290 = !DIDerivedType(tag: DW_TAG_member, name: "integer", scope: !4286, file: !237, line: 904, baseType: !4291, size: 128)
!4291 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4286, file: !237, line: 901, size: 128, elements: !4292)
!4292 = !{!4293, !4294}
!4293 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4291, file: !237, line: 902, baseType: !4289, size: 32)
!4294 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4291, file: !237, line: 903, baseType: !485, size: 64, offset: 64)
!4295 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4286, file: !237, line: 910, baseType: !4296, size: 128)
!4296 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4286, file: !237, line: 906, size: 128, elements: !4297)
!4297 = !{!4298, !4299, !4300}
!4298 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4296, file: !237, line: 907, baseType: !4289, size: 32)
!4299 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4296, file: !237, line: 908, baseType: !479, size: 32, offset: 32)
!4300 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4296, file: !237, line: 909, baseType: !338, size: 64, offset: 64)
!4301 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4286, file: !237, line: 916, baseType: !4302, size: 128)
!4302 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4286, file: !237, line: 912, size: 128, elements: !4303)
!4303 = !{!4304, !4305, !4306}
!4304 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4302, file: !237, line: 913, baseType: !4289, size: 32)
!4305 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4302, file: !237, line: 914, baseType: !479, size: 32, offset: 32)
!4306 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4302, file: !237, line: 915, baseType: !4307, size: 64, offset: 64)
!4307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1493, size: 64)
!4308 = !DIDerivedType(tag: DW_TAG_member, name: "package", scope: !4286, file: !237, line: 922, baseType: !4309, size: 128)
!4309 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4286, file: !237, line: 918, size: 128, elements: !4310)
!4310 = !{!4311, !4312, !4313}
!4311 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4309, file: !237, line: 919, baseType: !4289, size: 32)
!4312 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4309, file: !237, line: 920, baseType: !479, size: 32, offset: 32)
!4313 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !4309, file: !237, line: 921, baseType: !4285, size: 64, offset: 64)
!4314 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !4286, file: !237, line: 928, baseType: !4315, size: 128)
!4315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4286, file: !237, line: 924, size: 128, elements: !4316)
!4316 = !{!4317, !4318, !4319}
!4317 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4315, file: !237, line: 925, baseType: !4289, size: 32)
!4318 = !DIDerivedType(tag: DW_TAG_member, name: "actual_type", scope: !4315, file: !237, line: 926, baseType: !4289, size: 32, offset: 32)
!4319 = !DIDerivedType(tag: DW_TAG_member, name: "handle", scope: !4315, file: !237, line: 927, baseType: !236, size: 64, offset: 64)
!4320 = !DIDerivedType(tag: DW_TAG_member, name: "processor", scope: !4286, file: !237, line: 935, baseType: !4321, size: 192)
!4321 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4286, file: !237, line: 930, size: 192, elements: !4322)
!4322 = !{!4323, !4324, !4325, !4327}
!4323 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4321, file: !237, line: 931, baseType: !4289, size: 32)
!4324 = !DIDerivedType(tag: DW_TAG_member, name: "proc_id", scope: !4321, file: !237, line: 932, baseType: !479, size: 32, offset: 32)
!4325 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_address", scope: !4321, file: !237, line: 933, baseType: !4326, size: 64, offset: 64)
!4326 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_io_address", file: !237, line: 128, baseType: !485)
!4327 = !DIDerivedType(tag: DW_TAG_member, name: "pblk_length", scope: !4321, file: !237, line: 934, baseType: !479, size: 32, offset: 128)
!4328 = !DIDerivedType(tag: DW_TAG_member, name: "power_resource", scope: !4286, file: !237, line: 941, baseType: !4329, size: 96)
!4329 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4286, file: !237, line: 937, size: 96, elements: !4330)
!4330 = !{!4331, !4332, !4333}
!4331 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4329, file: !237, line: 938, baseType: !4289, size: 32)
!4332 = !DIDerivedType(tag: DW_TAG_member, name: "system_level", scope: !4329, file: !237, line: 939, baseType: !479, size: 32, offset: 32)
!4333 = !DIDerivedType(tag: DW_TAG_member, name: "resource_order", scope: !4329, file: !237, line: 940, baseType: !479, size: 32, offset: 64)
!4334 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !230, file: !231, line: 363, baseType: !4335, size: 1344, offset: 1920)
!4335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power", file: !231, line: 275, size: 1344, elements: !4336)
!4336 = !{!4337, !4338, !4348}
!4337 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4335, file: !231, line: 276, baseType: !234, size: 32)
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4335, file: !231, line: 277, baseType: !4339, size: 32, offset: 32)
!4339 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_flags", file: !231, line: 254, size: 32, elements: !4340)
!4340 = !{!4341, !4342, !4343, !4344, !4345, !4346, !4347}
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_get", scope: !4339, file: !231, line: 255, baseType: !479, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4342 = !DIDerivedType(tag: DW_TAG_member, name: "power_resources", scope: !4339, file: !231, line: 256, baseType: !479, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4343 = !DIDerivedType(tag: DW_TAG_member, name: "inrush_current", scope: !4339, file: !231, line: 257, baseType: !479, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "power_removed", scope: !4339, file: !231, line: 258, baseType: !479, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "ignore_parent", scope: !4339, file: !231, line: 259, baseType: !479, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "dsw_present", scope: !4339, file: !231, line: 260, baseType: !479, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4339, file: !231, line: 261, baseType: !479, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4335, file: !231, line: 278, baseType: !4349, size: 1280, offset: 64)
!4349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4350, size: 1280, elements: !4361)
!4350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_power_state", file: !231, line: 264, size: 256, elements: !4351)
!4351 = !{!4352, !4358, !4359, !4360}
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4350, file: !231, line: 269, baseType: !4353, size: 8)
!4353 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4350, file: !231, line: 265, size: 8, elements: !4354)
!4354 = !{!4355, !4356, !4357}
!4355 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4353, file: !231, line: 266, baseType: !1493, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "explicit_set", scope: !4353, file: !231, line: 267, baseType: !1493, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4353, file: !231, line: 268, baseType: !1493, size: 6, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!4358 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4350, file: !231, line: 270, baseType: !234, size: 32, offset: 32)
!4359 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4350, file: !231, line: 271, baseType: !234, size: 32, offset: 64)
!4360 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4350, file: !231, line: 272, baseType: !284, size: 128, offset: 128)
!4361 = !{!4362}
!4362 = !DISubrange(count: 5)
!4363 = !DIDerivedType(tag: DW_TAG_member, name: "wakeup", scope: !230, file: !231, line: 364, baseType: !4364, size: 640, offset: 3264)
!4364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup", file: !231, line: 315, size: 640, elements: !4365)
!4365 = !{!4366, !4367, !4368, !4369, !4370, !4375, !4384, !4385, !4386}
!4366 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_device", scope: !4364, file: !231, line: 316, baseType: !236, size: 64)
!4367 = !DIDerivedType(tag: DW_TAG_member, name: "gpe_number", scope: !4364, file: !231, line: 317, baseType: !485, size: 64, offset: 64)
!4368 = !DIDerivedType(tag: DW_TAG_member, name: "sleep_state", scope: !4364, file: !231, line: 318, baseType: !485, size: 64, offset: 128)
!4369 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4364, file: !231, line: 319, baseType: !284, size: 128, offset: 192)
!4370 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4364, file: !231, line: 320, baseType: !4371, size: 8, offset: 320)
!4371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_flags", file: !231, line: 305, size: 8, elements: !4372)
!4372 = !{!4373, !4374}
!4373 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4371, file: !231, line: 306, baseType: !1493, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4374 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_present", scope: !4371, file: !231, line: 307, baseType: !1493, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4375 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4364, file: !231, line: 321, baseType: !4376, size: 128, offset: 384)
!4376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_wakeup_context", file: !231, line: 310, size: 128, elements: !4377)
!4377 = !{!4378, !4383}
!4378 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4376, file: !231, line: 311, baseType: !4379, size: 64)
!4379 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4380, size: 64)
!4380 = !DISubroutineType(types: !4381)
!4381 = !{null, !4382}
!4382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4376, size: 64)
!4383 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4376, file: !231, line: 312, baseType: !3506, size: 64, offset: 64)
!4384 = !DIDerivedType(tag: DW_TAG_member, name: "ws", scope: !4364, file: !231, line: 322, baseType: !3685, size: 64, offset: 512)
!4385 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_count", scope: !4364, file: !231, line: 323, baseType: !234, size: 32, offset: 576)
!4386 = !DIDerivedType(tag: DW_TAG_member, name: "enable_count", scope: !4364, file: !231, line: 324, baseType: !234, size: 32, offset: 608)
!4387 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !230, file: !231, line: 365, baseType: !4388, size: 192, offset: 3904)
!4388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf", file: !231, line: 297, size: 192, elements: !4389)
!4389 = !{!4390, !4391, !4395, !4396}
!4390 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4388, file: !231, line: 298, baseType: !234, size: 32)
!4391 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4388, file: !231, line: 299, baseType: !4392, size: 8, offset: 32)
!4392 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_flags", file: !231, line: 283, size: 8, elements: !4393)
!4393 = !{!4394}
!4394 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4392, file: !231, line: 284, baseType: !1493, size: 8, flags: DIFlagBitField, extraData: i64 0)
!4395 = !DIDerivedType(tag: DW_TAG_member, name: "state_count", scope: !4388, file: !231, line: 300, baseType: !234, size: 32, offset: 64)
!4396 = !DIDerivedType(tag: DW_TAG_member, name: "states", scope: !4388, file: !231, line: 301, baseType: !4397, size: 64, offset: 128)
!4397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4398, size: 64)
!4398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_perf_state", file: !231, line: 287, size: 64, elements: !4399)
!4399 = !{!4400, !4405, !4406, !4407}
!4400 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4398, file: !231, line: 291, baseType: !4401, size: 8)
!4401 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4398, file: !231, line: 288, size: 8, elements: !4402)
!4402 = !{!4403, !4404}
!4403 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4401, file: !231, line: 289, baseType: !1493, size: 1, flags: DIFlagBitField, extraData: i64 0)
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "reserved", scope: !4401, file: !231, line: 290, baseType: !1493, size: 7, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!4405 = !DIDerivedType(tag: DW_TAG_member, name: "power", scope: !4398, file: !231, line: 292, baseType: !1493, size: 8, offset: 8)
!4406 = !DIDerivedType(tag: DW_TAG_member, name: "performance", scope: !4398, file: !231, line: 293, baseType: !1493, size: 8, offset: 16)
!4407 = !DIDerivedType(tag: DW_TAG_member, name: "latency", scope: !4398, file: !231, line: 294, baseType: !234, size: 32, offset: 32)
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !230, file: !231, line: 366, baseType: !4409, size: 64, offset: 4096)
!4409 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_dir", file: !231, line: 209, size: 64, elements: !4410)
!4410 = !{!4411}
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !4409, file: !231, line: 210, baseType: !4078, size: 64)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !230, file: !231, line: 367, baseType: !4413, size: 384, offset: 4160)
!4413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_data", file: !231, line: 341, size: 384, elements: !4414)
!4414 = !{!4415, !4418, !4419, !4420}
!4415 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !4413, file: !231, line: 342, baseType: !4416, size: 64)
!4416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4417, size: 64)
!4417 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4286)
!4418 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4413, file: !231, line: 343, baseType: !284, size: 128, offset: 64)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "of_compatible", scope: !4413, file: !231, line: 344, baseType: !4416, size: 64, offset: 192)
!4420 = !DIDerivedType(tag: DW_TAG_member, name: "subnodes", scope: !4413, file: !231, line: 345, baseType: !284, size: 128, offset: 256)
!4421 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !230, file: !231, line: 368, baseType: !4422, size: 64, offset: 4544)
!4422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4423, size: 64)
!4423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_scan_handler", file: !231, line: 122, size: 1216, elements: !4424)
!4424 = !{!4425, !4426, !4427, !4432, !4436, !4440, !4441, !4442}
!4425 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4423, file: !231, line: 123, baseType: !3600, size: 64)
!4426 = !DIDerivedType(tag: DW_TAG_member, name: "list_node", scope: !4423, file: !231, line: 124, baseType: !284, size: 128, offset: 64)
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "match", scope: !4423, file: !231, line: 125, baseType: !4428, size: 64, offset: 192)
!4428 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4429, size: 64)
!4429 = !DISubroutineType(types: !4430)
!4430 = !{!261, !280, !4431}
!4431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3600, size: 64)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4423, file: !231, line: 126, baseType: !4433, size: 64, offset: 256)
!4433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4434, size: 64)
!4434 = !DISubroutineType(types: !4435)
!4435 = !{!234, !229, !3600}
!4436 = !DIDerivedType(tag: DW_TAG_member, name: "detach", scope: !4423, file: !231, line: 127, baseType: !4437, size: 64, offset: 320)
!4437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4438, size: 64)
!4438 = !DISubroutineType(types: !4439)
!4439 = !{null, !229}
!4440 = !DIDerivedType(tag: DW_TAG_member, name: "bind", scope: !4423, file: !231, line: 128, baseType: !3528, size: 64, offset: 384)
!4441 = !DIDerivedType(tag: DW_TAG_member, name: "unbind", scope: !4423, file: !231, line: 129, baseType: !3528, size: 64, offset: 448)
!4442 = !DIDerivedType(tag: DW_TAG_member, name: "hotplug", scope: !4423, file: !231, line: 130, baseType: !4443, size: 704, offset: 512)
!4443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_profile", file: !231, line: 108, size: 704, elements: !4444)
!4444 = !{!4445, !4446, !4450, !4451, !4452}
!4445 = !DIDerivedType(tag: DW_TAG_member, name: "kobj", scope: !4443, file: !231, line: 109, baseType: !276, size: 512)
!4446 = !DIDerivedType(tag: DW_TAG_member, name: "scan_dependent", scope: !4443, file: !231, line: 110, baseType: !4447, size: 64, offset: 512)
!4447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4448, size: 64)
!4448 = !DISubroutineType(types: !4449)
!4449 = !{!234, !229}
!4450 = !DIDerivedType(tag: DW_TAG_member, name: "notify_online", scope: !4443, file: !231, line: 111, baseType: !4437, size: 64, offset: 576)
!4451 = !DIDerivedType(tag: DW_TAG_member, name: "enabled", scope: !4443, file: !231, line: 112, baseType: !261, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!4452 = !DIDerivedType(tag: DW_TAG_member, name: "demand_offline", scope: !4443, file: !231, line: 113, baseType: !261, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!4453 = !DIDerivedType(tag: DW_TAG_member, name: "hp", scope: !230, file: !231, line: 369, baseType: !4454, size: 64, offset: 4608)
!4454 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4455, size: 64)
!4455 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_hotplug_context", file: !231, line: 138, size: 256, elements: !4456)
!4456 = !{!4457, !4458, !4462, !4466}
!4457 = !DIDerivedType(tag: DW_TAG_member, name: "self", scope: !4455, file: !231, line: 139, baseType: !229, size: 64)
!4458 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4455, file: !231, line: 140, baseType: !4459, size: 64, offset: 64)
!4459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4460, size: 64)
!4460 = !DISubroutineType(types: !4461)
!4461 = !{!234, !229, !479}
!4462 = !DIDerivedType(tag: DW_TAG_member, name: "uevent", scope: !4455, file: !231, line: 141, baseType: !4463, size: 64, offset: 128)
!4463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4464, size: 64)
!4464 = !DISubroutineType(types: !4465)
!4465 = !{null, !229, !479}
!4466 = !DIDerivedType(tag: DW_TAG_member, name: "fixup", scope: !4455, file: !231, line: 142, baseType: !4437, size: 64, offset: 192)
!4467 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !230, file: !231, line: 370, baseType: !4468, size: 64, offset: 4672)
!4468 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4469, size: 64)
!4469 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_driver", file: !231, line: 162, size: 2816, elements: !4470)
!4470 = !{!4471, !4475, !4476, !4477, !4478, !4487, !4488}
!4471 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4469, file: !231, line: 163, baseType: !4472, size: 640)
!4472 = !DICompositeType(tag: DW_TAG_array_type, baseType: !282, size: 640, elements: !4473)
!4473 = !{!4474}
!4474 = !DISubrange(count: 80)
!4475 = !DIDerivedType(tag: DW_TAG_member, name: "class", scope: !4469, file: !231, line: 164, baseType: !4472, size: 640, offset: 640)
!4476 = !DIDerivedType(tag: DW_TAG_member, name: "ids", scope: !4469, file: !231, line: 165, baseType: !3600, size: 64, offset: 1280)
!4477 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4469, file: !231, line: 166, baseType: !7, size: 32, offset: 1344)
!4478 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !4469, file: !231, line: 167, baseType: !4479, size: 192, offset: 1408)
!4479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_device_ops", file: !231, line: 154, size: 192, elements: !4480)
!4480 = !{!4481, !4483, !4485}
!4481 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !4479, file: !231, line: 155, baseType: !4482, size: 64)
!4482 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_add", file: !231, line: 150, baseType: !4447)
!4483 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !4479, file: !231, line: 156, baseType: !4484, size: 64, offset: 64)
!4484 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_remove", file: !231, line: 151, baseType: !4447)
!4485 = !DIDerivedType(tag: DW_TAG_member, name: "notify", scope: !4479, file: !231, line: 157, baseType: !4486, size: 64, offset: 128)
!4486 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_op_notify", file: !231, line: 152, baseType: !4463)
!4487 = !DIDerivedType(tag: DW_TAG_member, name: "drv", scope: !4469, file: !231, line: 168, baseType: !3578, size: 1152, offset: 1600)
!4488 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4469, file: !231, line: 169, baseType: !695, size: 64, offset: 2752)
!4489 = !DIDerivedType(tag: DW_TAG_member, name: "driver_gpios", scope: !230, file: !231, line: 371, baseType: !4490, size: 64, offset: 4736)
!4490 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4491, size: 64)
!4491 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4492)
!4492 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_mapping", file: !210, line: 663, size: 192, elements: !4493)
!4493 = !{!4494, !4495, !4503, !4504}
!4494 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4492, file: !210, line: 664, baseType: !280, size: 64)
!4495 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4492, file: !210, line: 665, baseType: !4496, size: 64, offset: 64)
!4496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4497, size: 64)
!4497 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4498)
!4498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_gpio_params", file: !210, line: 657, size: 96, elements: !4499)
!4499 = !{!4500, !4501, !4502}
!4500 = !DIDerivedType(tag: DW_TAG_member, name: "crs_entry_index", scope: !4498, file: !210, line: 658, baseType: !7, size: 32)
!4501 = !DIDerivedType(tag: DW_TAG_member, name: "line_index", scope: !4498, file: !210, line: 659, baseType: !7, size: 32, offset: 32)
!4502 = !DIDerivedType(tag: DW_TAG_member, name: "active_low", scope: !4498, file: !210, line: 660, baseType: !261, size: 8, offset: 64)
!4503 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4492, file: !210, line: 666, baseType: !7, size: 32, offset: 128)
!4504 = !DIDerivedType(tag: DW_TAG_member, name: "quirks", scope: !4492, file: !210, line: 678, baseType: !7, size: 32, offset: 160)
!4505 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !230, file: !231, line: 372, baseType: !228, size: 64, offset: 4800)
!4506 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !230, file: !231, line: 373, baseType: !273, size: 5568, offset: 4864)
!4507 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_count", scope: !230, file: !231, line: 374, baseType: !7, size: 32, offset: 10432)
!4508 = !DIDerivedType(tag: DW_TAG_member, name: "dep_unmet", scope: !230, file: !231, line: 375, baseType: !7, size: 32, offset: 10464)
!4509 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_list", scope: !230, file: !231, line: 376, baseType: !284, size: 128, offset: 10496)
!4510 = !DIDerivedType(tag: DW_TAG_member, name: "physical_node_lock", scope: !230, file: !231, line: 377, baseType: !788, size: 192, offset: 10624)
!4511 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !230, file: !231, line: 378, baseType: !4437, size: 64, offset: 10816)
!4512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4513, size: 64)
!4513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_controller", file: !4514, line: 466, size: 11072, elements: !4515)
!4514 = !DIFile(filename: "./include/linux/spi/spi.h", directory: "/home/lizy2001/genbc/linux")
!4515 = !{!4516, !4517, !4518, !4519, !4520, !4521, !4522, !4523, !4524, !4525, !4526, !4527, !4528, !4576, !4577, !4578, !4579, !4580, !4581, !4585, !4590, !4608, !4612, !4662, !4663, !4685, !4686, !4687, !4688, !4689, !4690, !4691, !4692, !4693, !4694, !4695, !4696, !4697, !4698, !4699, !4700, !4701, !4705, !4709, !4710, !4711, !4712, !4713, !4717, !4721, !4725, !4817, !4818, !4819, !4820, !4821, !4823, !4824, !4825, !4826, !4827, !5112, !5113, !5114, !5115, !5119, !5120}
!4516 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4513, file: !4514, line: 467, baseType: !273, size: 5568)
!4517 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !4513, file: !4514, line: 469, baseType: !284, size: 128, offset: 5568)
!4518 = !DIDerivedType(tag: DW_TAG_member, name: "bus_num", scope: !4513, file: !4514, line: 477, baseType: !1345, size: 16, offset: 5696)
!4519 = !DIDerivedType(tag: DW_TAG_member, name: "num_chipselect", scope: !4513, file: !4514, line: 482, baseType: !966, size: 16, offset: 5712)
!4520 = !DIDerivedType(tag: DW_TAG_member, name: "dma_alignment", scope: !4513, file: !4514, line: 487, baseType: !966, size: 16, offset: 5728)
!4521 = !DIDerivedType(tag: DW_TAG_member, name: "mode_bits", scope: !4513, file: !4514, line: 490, baseType: !479, size: 32, offset: 5760)
!4522 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth_override_bits", scope: !4513, file: !4514, line: 493, baseType: !479, size: 32, offset: 5792)
!4523 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_word_mask", scope: !4513, file: !4514, line: 496, baseType: !479, size: 32, offset: 5824)
!4524 = !DIDerivedType(tag: DW_TAG_member, name: "min_speed_hz", scope: !4513, file: !4514, line: 501, baseType: !479, size: 32, offset: 5856)
!4525 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed_hz", scope: !4513, file: !4514, line: 502, baseType: !479, size: 32, offset: 5888)
!4526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4513, file: !4514, line: 505, baseType: !966, size: 16, offset: 5920)
!4527 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4513, file: !4514, line: 515, baseType: !261, size: 8, offset: 5936)
!4528 = !DIDerivedType(tag: DW_TAG_member, name: "max_transfer_size", scope: !4513, file: !4514, line: 521, baseType: !4529, size: 64, offset: 5952)
!4529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4530, size: 64)
!4530 = !DISubroutineType(types: !4531)
!4531 = !{!385, !4532}
!4532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4533, size: 64)
!4533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_device", file: !4514, line: 159, size: 8256, elements: !4534)
!4534 = !{!4535, !4536, !4537, !4538, !4539, !4540, !4541, !4542, !4543, !4544, !4545, !4546, !4547, !4548, !4549, !4552, !4557}
!4535 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4533, file: !4514, line: 160, baseType: !273, size: 5568)
!4536 = !DIDerivedType(tag: DW_TAG_member, name: "controller", scope: !4533, file: !4514, line: 161, baseType: !4512, size: 64, offset: 5568)
!4537 = !DIDerivedType(tag: DW_TAG_member, name: "master", scope: !4533, file: !4514, line: 162, baseType: !4512, size: 64, offset: 5632)
!4538 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed_hz", scope: !4533, file: !4514, line: 163, baseType: !479, size: 32, offset: 5696)
!4539 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !4533, file: !4514, line: 164, baseType: !1493, size: 8, offset: 5728)
!4540 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_word", scope: !4533, file: !4514, line: 165, baseType: !1493, size: 8, offset: 5736)
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !4533, file: !4514, line: 166, baseType: !261, size: 8, offset: 5744)
!4542 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !4533, file: !4514, line: 167, baseType: !479, size: 32, offset: 5760)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !4533, file: !4514, line: 188, baseType: !234, size: 32, offset: 5792)
!4544 = !DIDerivedType(tag: DW_TAG_member, name: "controller_state", scope: !4533, file: !4514, line: 189, baseType: !228, size: 64, offset: 5824)
!4545 = !DIDerivedType(tag: DW_TAG_member, name: "controller_data", scope: !4533, file: !4514, line: 190, baseType: !228, size: 64, offset: 5888)
!4546 = !DIDerivedType(tag: DW_TAG_member, name: "modalias", scope: !4533, file: !4514, line: 191, baseType: !2838, size: 256, offset: 5952)
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "driver_override", scope: !4533, file: !4514, line: 192, baseType: !280, size: 64, offset: 6208)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpio", scope: !4533, file: !4514, line: 193, baseType: !234, size: 32, offset: 6272)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpiod", scope: !4533, file: !4514, line: 194, baseType: !4550, size: 64, offset: 6336)
!4550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4551, size: 64)
!4551 = !DICompositeType(tag: DW_TAG_structure_type, name: "gpio_desc", file: !210, line: 19, flags: DIFlagFwdDecl)
!4552 = !DIDerivedType(tag: DW_TAG_member, name: "word_delay", scope: !4533, file: !4514, line: 195, baseType: !4553, size: 32, offset: 6400)
!4553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_delay", file: !4514, line: 98, size: 32, elements: !4554)
!4554 = !{!4555, !4556}
!4555 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !4553, file: !4514, line: 102, baseType: !966, size: 16)
!4556 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !4553, file: !4514, line: 103, baseType: !1493, size: 8, offset: 16)
!4557 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !4533, file: !4514, line: 198, baseType: !4558, size: 1792, offset: 6464)
!4558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_statistics", file: !4514, line: 56, size: 1792, elements: !4559)
!4559 = !{!4560, !4561, !4562, !4563, !4564, !4565, !4566, !4567, !4568, !4569, !4570, !4571, !4575}
!4560 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4558, file: !4514, line: 57, baseType: !297)
!4561 = !DIDerivedType(tag: DW_TAG_member, name: "messages", scope: !4558, file: !4514, line: 59, baseType: !388, size: 64)
!4562 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !4558, file: !4514, line: 60, baseType: !388, size: 64, offset: 64)
!4563 = !DIDerivedType(tag: DW_TAG_member, name: "errors", scope: !4558, file: !4514, line: 61, baseType: !388, size: 64, offset: 128)
!4564 = !DIDerivedType(tag: DW_TAG_member, name: "timedout", scope: !4558, file: !4514, line: 62, baseType: !388, size: 64, offset: 192)
!4565 = !DIDerivedType(tag: DW_TAG_member, name: "spi_sync", scope: !4558, file: !4514, line: 64, baseType: !388, size: 64, offset: 256)
!4566 = !DIDerivedType(tag: DW_TAG_member, name: "spi_sync_immediate", scope: !4558, file: !4514, line: 65, baseType: !388, size: 64, offset: 320)
!4567 = !DIDerivedType(tag: DW_TAG_member, name: "spi_async", scope: !4558, file: !4514, line: 66, baseType: !388, size: 64, offset: 384)
!4568 = !DIDerivedType(tag: DW_TAG_member, name: "bytes", scope: !4558, file: !4514, line: 68, baseType: !487, size: 64, offset: 448)
!4569 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_rx", scope: !4558, file: !4514, line: 69, baseType: !487, size: 64, offset: 512)
!4570 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_tx", scope: !4558, file: !4514, line: 70, baseType: !487, size: 64, offset: 576)
!4571 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_bytes_histo", scope: !4558, file: !4514, line: 73, baseType: !4572, size: 1088, offset: 640)
!4572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !388, size: 1088, elements: !4573)
!4573 = !{!4574}
!4574 = !DISubrange(count: 17)
!4575 = !DIDerivedType(tag: DW_TAG_member, name: "transfers_split_maxsize", scope: !4558, file: !4514, line: 75, baseType: !388, size: 64, offset: 1728)
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "max_message_size", scope: !4513, file: !4514, line: 522, baseType: !4529, size: 64, offset: 6016)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "io_mutex", scope: !4513, file: !4514, line: 525, baseType: !788, size: 192, offset: 6080)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock_spinlock", scope: !4513, file: !4514, line: 528, baseType: !297, offset: 6272)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock_mutex", scope: !4513, file: !4514, line: 529, baseType: !788, size: 192, offset: 6272)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "bus_lock_flag", scope: !4513, file: !4514, line: 532, baseType: !261, size: 8, offset: 6464)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "setup", scope: !4513, file: !4514, line: 540, baseType: !4582, size: 64, offset: 6528)
!4582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4583, size: 64)
!4583 = !DISubroutineType(types: !4584)
!4584 = !{!234, !4532}
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "set_cs_timing", scope: !4513, file: !4514, line: 550, baseType: !4586, size: 64, offset: 6592)
!4586 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4587, size: 64)
!4587 = !DISubroutineType(types: !4588)
!4588 = !{!234, !4532, !4589, !4589, !4589}
!4589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4553, size: 64)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "transfer", scope: !4513, file: !4514, line: 572, baseType: !4591, size: 64, offset: 6656)
!4591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4592, size: 64)
!4592 = !DISubroutineType(types: !4593)
!4593 = !{!234, !4532, !4594}
!4594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4595, size: 64)
!4595 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_message", file: !4514, line: 999, size: 832, elements: !4596)
!4596 = !{!4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607}
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "transfers", scope: !4595, file: !4514, line: 1000, baseType: !284, size: 128)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4595, file: !4514, line: 1002, baseType: !4532, size: 64, offset: 128)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "is_dma_mapped", scope: !4595, file: !4514, line: 1004, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "complete", scope: !4595, file: !4514, line: 1018, baseType: !532, size: 64, offset: 256)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !4595, file: !4514, line: 1019, baseType: !228, size: 64, offset: 320)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "frame_length", scope: !4595, file: !4514, line: 1020, baseType: !7, size: 32, offset: 384)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "actual_length", scope: !4595, file: !4514, line: 1021, baseType: !7, size: 32, offset: 416)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "status", scope: !4595, file: !4514, line: 1022, baseType: !234, size: 32, offset: 448)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4595, file: !4514, line: 1028, baseType: !284, size: 128, offset: 512)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !4595, file: !4514, line: 1029, baseType: !228, size: 64, offset: 640)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "resources", scope: !4595, file: !4514, line: 1032, baseType: !284, size: 128, offset: 704)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !4513, file: !4514, line: 576, baseType: !4609, size: 64, offset: 6720)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DISubroutineType(types: !4611)
!4611 = !{null, !4532}
!4612 = !DIDerivedType(tag: DW_TAG_member, name: "can_dma", scope: !4513, file: !4514, line: 585, baseType: !4613, size: 64, offset: 6784)
!4613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4614, size: 64)
!4614 = !DISubroutineType(types: !4615)
!4615 = !{!261, !4512, !4532, !4616}
!4616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4617, size: 64)
!4617 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_transfer", file: !4514, line: 926, size: 1152, elements: !4618)
!4618 = !{!4619, !4620, !4621, !4622, !4623, !4624, !4639, !4640, !4641, !4642, !4643, !4644, !4645, !4646, !4647, !4648, !4649, !4650, !4651, !4652, !4659, !4660, !4661}
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "tx_buf", scope: !4617, file: !4514, line: 932, baseType: !269, size: 64)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "rx_buf", scope: !4617, file: !4514, line: 933, baseType: !228, size: 64, offset: 64)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4617, file: !4514, line: 934, baseType: !7, size: 32, offset: 128)
!4622 = !DIDerivedType(tag: DW_TAG_member, name: "tx_dma", scope: !4617, file: !4514, line: 936, baseType: !1067, size: 64, offset: 192)
!4623 = !DIDerivedType(tag: DW_TAG_member, name: "rx_dma", scope: !4617, file: !4514, line: 937, baseType: !1067, size: 64, offset: 256)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "tx_sg", scope: !4617, file: !4514, line: 938, baseType: !4625, size: 128, offset: 320)
!4625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sg_table", file: !4626, line: 42, size: 128, elements: !4627)
!4626 = !DIFile(filename: "./include/linux/scatterlist.h", directory: "/home/lizy2001/genbc/linux")
!4627 = !{!4628, !4637, !4638}
!4628 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !4625, file: !4626, line: 43, baseType: !4629, size: 64)
!4629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4630, size: 64)
!4630 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "scatterlist", file: !4626, line: 11, size: 256, elements: !4631)
!4631 = !{!4632, !4633, !4634, !4635, !4636}
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "page_link", scope: !4630, file: !4626, line: 12, baseType: !388, size: 64)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4630, file: !4626, line: 13, baseType: !7, size: 32, offset: 64)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4630, file: !4626, line: 14, baseType: !7, size: 32, offset: 96)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "dma_address", scope: !4630, file: !4626, line: 15, baseType: !1067, size: 64, offset: 128)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "dma_length", scope: !4630, file: !4626, line: 17, baseType: !7, size: 32, offset: 192)
!4637 = !DIDerivedType(tag: DW_TAG_member, name: "nents", scope: !4625, file: !4626, line: 44, baseType: !7, size: 32, offset: 64)
!4638 = !DIDerivedType(tag: DW_TAG_member, name: "orig_nents", scope: !4625, file: !4626, line: 45, baseType: !7, size: 32, offset: 96)
!4639 = !DIDerivedType(tag: DW_TAG_member, name: "rx_sg", scope: !4617, file: !4514, line: 939, baseType: !4625, size: 128, offset: 448)
!4640 = !DIDerivedType(tag: DW_TAG_member, name: "cs_change", scope: !4617, file: !4514, line: 941, baseType: !7, size: 1, offset: 576, flags: DIFlagBitField, extraData: i64 576)
!4641 = !DIDerivedType(tag: DW_TAG_member, name: "tx_nbits", scope: !4617, file: !4514, line: 942, baseType: !7, size: 3, offset: 577, flags: DIFlagBitField, extraData: i64 576)
!4642 = !DIDerivedType(tag: DW_TAG_member, name: "rx_nbits", scope: !4617, file: !4514, line: 943, baseType: !7, size: 3, offset: 580, flags: DIFlagBitField, extraData: i64 576)
!4643 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_word", scope: !4617, file: !4514, line: 947, baseType: !1493, size: 8, offset: 584)
!4644 = !DIDerivedType(tag: DW_TAG_member, name: "delay_usecs", scope: !4617, file: !4514, line: 948, baseType: !966, size: 16, offset: 592)
!4645 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !4617, file: !4514, line: 949, baseType: !4553, size: 32, offset: 608)
!4646 = !DIDerivedType(tag: DW_TAG_member, name: "cs_change_delay", scope: !4617, file: !4514, line: 950, baseType: !4553, size: 32, offset: 640)
!4647 = !DIDerivedType(tag: DW_TAG_member, name: "word_delay", scope: !4617, file: !4514, line: 951, baseType: !4553, size: 32, offset: 672)
!4648 = !DIDerivedType(tag: DW_TAG_member, name: "speed_hz", scope: !4617, file: !4514, line: 952, baseType: !479, size: 32, offset: 704)
!4649 = !DIDerivedType(tag: DW_TAG_member, name: "effective_speed_hz", scope: !4617, file: !4514, line: 954, baseType: !479, size: 32, offset: 736)
!4650 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts_word_pre", scope: !4617, file: !4514, line: 956, baseType: !7, size: 32, offset: 768)
!4651 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts_word_post", scope: !4617, file: !4514, line: 957, baseType: !7, size: 32, offset: 800)
!4652 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts", scope: !4617, file: !4514, line: 959, baseType: !4653, size: 64, offset: 832)
!4653 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4654, size: 64)
!4654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptp_system_timestamp", file: !4655, line: 33, size: 256, elements: !4656)
!4655 = !DIFile(filename: "./include/linux/ptp_clock_kernel.h", directory: "/home/lizy2001/genbc/linux")
!4656 = !{!4657, !4658}
!4657 = !DIDerivedType(tag: DW_TAG_member, name: "pre_ts", scope: !4654, file: !4655, line: 34, baseType: !597, size: 128)
!4658 = !DIDerivedType(tag: DW_TAG_member, name: "post_ts", scope: !4654, file: !4655, line: 35, baseType: !597, size: 128, offset: 128)
!4659 = !DIDerivedType(tag: DW_TAG_member, name: "timestamped", scope: !4617, file: !4514, line: 961, baseType: !261, size: 8, offset: 896)
!4660 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_list", scope: !4617, file: !4514, line: 963, baseType: !284, size: 128, offset: 960)
!4661 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !4617, file: !4514, line: 966, baseType: !966, size: 16, offset: 1088)
!4662 = !DIDerivedType(tag: DW_TAG_member, name: "queued", scope: !4513, file: !4514, line: 595, baseType: !261, size: 8, offset: 6848)
!4663 = !DIDerivedType(tag: DW_TAG_member, name: "kworker", scope: !4513, file: !4514, line: 596, baseType: !4664, size: 64, offset: 6912)
!4664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4665, size: 64)
!4665 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kthread_worker", file: !4666, line: 89, size: 448, elements: !4667)
!4666 = !DIFile(filename: "./include/linux/kthread.h", directory: "/home/lizy2001/genbc/linux")
!4667 = !{!4668, !4669, !4670, !4671, !4672, !4673}
!4668 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4665, file: !4666, line: 90, baseType: !7, size: 32)
!4669 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4665, file: !4666, line: 91, baseType: !887, offset: 32)
!4670 = !DIDerivedType(tag: DW_TAG_member, name: "work_list", scope: !4665, file: !4666, line: 92, baseType: !284, size: 128, offset: 64)
!4671 = !DIDerivedType(tag: DW_TAG_member, name: "delayed_work_list", scope: !4665, file: !4666, line: 93, baseType: !284, size: 128, offset: 192)
!4672 = !DIDerivedType(tag: DW_TAG_member, name: "task", scope: !4665, file: !4666, line: 94, baseType: !1358, size: 64, offset: 320)
!4673 = !DIDerivedType(tag: DW_TAG_member, name: "current_work", scope: !4665, file: !4666, line: 95, baseType: !4674, size: 64, offset: 384)
!4674 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4675, size: 64)
!4675 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "kthread_work", file: !4666, line: 98, size: 320, elements: !4676)
!4676 = !{!4677, !4678, !4683, !4684}
!4677 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4675, file: !4666, line: 99, baseType: !284, size: 128)
!4678 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !4675, file: !4666, line: 100, baseType: !4679, size: 64, offset: 128)
!4679 = !DIDerivedType(tag: DW_TAG_typedef, name: "kthread_work_func_t", file: !4666, line: 82, baseType: !4680)
!4680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4681, size: 64)
!4681 = !DISubroutineType(types: !4682)
!4682 = !{null, !4674}
!4683 = !DIDerivedType(tag: DW_TAG_member, name: "worker", scope: !4675, file: !4666, line: 101, baseType: !4664, size: 64, offset: 192)
!4684 = !DIDerivedType(tag: DW_TAG_member, name: "canceling", scope: !4675, file: !4666, line: 103, baseType: !234, size: 32, offset: 256)
!4685 = !DIDerivedType(tag: DW_TAG_member, name: "pump_messages", scope: !4513, file: !4514, line: 597, baseType: !4675, size: 320, offset: 6976)
!4686 = !DIDerivedType(tag: DW_TAG_member, name: "queue_lock", scope: !4513, file: !4514, line: 598, baseType: !297, offset: 7296)
!4687 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !4513, file: !4514, line: 599, baseType: !284, size: 128, offset: 7296)
!4688 = !DIDerivedType(tag: DW_TAG_member, name: "cur_msg", scope: !4513, file: !4514, line: 600, baseType: !4594, size: 64, offset: 7424)
!4689 = !DIDerivedType(tag: DW_TAG_member, name: "idling", scope: !4513, file: !4514, line: 601, baseType: !261, size: 8, offset: 7488)
!4690 = !DIDerivedType(tag: DW_TAG_member, name: "busy", scope: !4513, file: !4514, line: 602, baseType: !261, size: 8, offset: 7496)
!4691 = !DIDerivedType(tag: DW_TAG_member, name: "running", scope: !4513, file: !4514, line: 603, baseType: !261, size: 8, offset: 7504)
!4692 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !4513, file: !4514, line: 604, baseType: !261, size: 8, offset: 7512)
!4693 = !DIDerivedType(tag: DW_TAG_member, name: "auto_runtime_pm", scope: !4513, file: !4514, line: 605, baseType: !261, size: 8, offset: 7520)
!4694 = !DIDerivedType(tag: DW_TAG_member, name: "cur_msg_prepared", scope: !4513, file: !4514, line: 606, baseType: !261, size: 8, offset: 7528)
!4695 = !DIDerivedType(tag: DW_TAG_member, name: "cur_msg_mapped", scope: !4513, file: !4514, line: 607, baseType: !261, size: 8, offset: 7536)
!4696 = !DIDerivedType(tag: DW_TAG_member, name: "last_cs_enable", scope: !4513, file: !4514, line: 608, baseType: !261, size: 8, offset: 7544)
!4697 = !DIDerivedType(tag: DW_TAG_member, name: "last_cs_mode_high", scope: !4513, file: !4514, line: 609, baseType: !261, size: 8, offset: 7552)
!4698 = !DIDerivedType(tag: DW_TAG_member, name: "fallback", scope: !4513, file: !4514, line: 610, baseType: !261, size: 8, offset: 7560)
!4699 = !DIDerivedType(tag: DW_TAG_member, name: "xfer_completion", scope: !4513, file: !4514, line: 611, baseType: !1643, size: 192, offset: 7616)
!4700 = !DIDerivedType(tag: DW_TAG_member, name: "max_dma_len", scope: !4513, file: !4514, line: 612, baseType: !385, size: 64, offset: 7808)
!4701 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_transfer_hardware", scope: !4513, file: !4514, line: 614, baseType: !4702, size: 64, offset: 7872)
!4702 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4703, size: 64)
!4703 = !DISubroutineType(types: !4704)
!4704 = !{!234, !4512}
!4705 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_one_message", scope: !4513, file: !4514, line: 615, baseType: !4706, size: 64, offset: 7936)
!4706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4707, size: 64)
!4707 = !DISubroutineType(types: !4708)
!4708 = !{!234, !4512, !4594}
!4709 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_transfer_hardware", scope: !4513, file: !4514, line: 617, baseType: !4702, size: 64, offset: 8000)
!4710 = !DIDerivedType(tag: DW_TAG_member, name: "prepare_message", scope: !4513, file: !4514, line: 618, baseType: !4706, size: 64, offset: 8064)
!4711 = !DIDerivedType(tag: DW_TAG_member, name: "unprepare_message", scope: !4513, file: !4514, line: 620, baseType: !4706, size: 64, offset: 8128)
!4712 = !DIDerivedType(tag: DW_TAG_member, name: "slave_abort", scope: !4513, file: !4514, line: 622, baseType: !4702, size: 64, offset: 8192)
!4713 = !DIDerivedType(tag: DW_TAG_member, name: "set_cs", scope: !4513, file: !4514, line: 628, baseType: !4714, size: 64, offset: 8256)
!4714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4715, size: 64)
!4715 = !DISubroutineType(types: !4716)
!4716 = !{null, !4532, !261}
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "transfer_one", scope: !4513, file: !4514, line: 629, baseType: !4718, size: 64, offset: 8320)
!4718 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4719, size: 64)
!4719 = !DISubroutineType(types: !4720)
!4720 = !{!234, !4512, !4532, !4616}
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "handle_err", scope: !4513, file: !4514, line: 631, baseType: !4722, size: 64, offset: 8384)
!4722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4723, size: 64)
!4723 = !DISubroutineType(types: !4724)
!4724 = !{null, !4512, !4594}
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "mem_ops", scope: !4513, file: !4514, line: 635, baseType: !4726, size: 64, offset: 8448)
!4726 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4727, size: 64)
!4727 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4728)
!4728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_controller_mem_ops", file: !116, line: 264, size: 512, elements: !4729)
!4729 = !{!4730, !4775, !4781, !4785, !4789, !4805, !4809, !4813}
!4730 = !DIDerivedType(tag: DW_TAG_member, name: "adjust_op_size", scope: !4728, file: !116, line: 265, baseType: !4731, size: 64)
!4731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4732, size: 64)
!4732 = !DISubroutineType(types: !4733)
!4733 = !{!234, !4734, !4740}
!4734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4735, size: 64)
!4735 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem", file: !116, line: 194, size: 192, elements: !4736)
!4736 = !{!4737, !4738, !4739}
!4737 = !DIDerivedType(tag: DW_TAG_member, name: "spi", scope: !4735, file: !116, line: 195, baseType: !4532, size: 64)
!4738 = !DIDerivedType(tag: DW_TAG_member, name: "drvpriv", scope: !4735, file: !116, line: 196, baseType: !228, size: 64, offset: 64)
!4739 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4735, file: !116, line: 197, baseType: !280, size: 64, offset: 128)
!4740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4741, size: 64)
!4741 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem_op", file: !116, line: 98, size: 448, elements: !4742)
!4742 = !{!4743, !4750, !4757, !4763}
!4743 = !DIDerivedType(tag: DW_TAG_member, name: "cmd", scope: !4741, file: !116, line: 104, baseType: !4744, size: 48)
!4744 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4741, file: !116, line: 99, size: 48, elements: !4745)
!4745 = !{!4746, !4747, !4748, !4749}
!4746 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4744, file: !116, line: 100, baseType: !1493, size: 8)
!4747 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4744, file: !116, line: 101, baseType: !1493, size: 8, offset: 8)
!4748 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4744, file: !116, line: 102, baseType: !1493, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!4749 = !DIDerivedType(tag: DW_TAG_member, name: "opcode", scope: !4744, file: !116, line: 103, baseType: !966, size: 16, offset: 32)
!4750 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4741, file: !116, line: 111, baseType: !4751, size: 128, offset: 64)
!4751 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4741, file: !116, line: 106, size: 128, elements: !4752)
!4752 = !{!4753, !4754, !4755, !4756}
!4753 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4751, file: !116, line: 107, baseType: !1493, size: 8)
!4754 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4751, file: !116, line: 108, baseType: !1493, size: 8, offset: 8)
!4755 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4751, file: !116, line: 109, baseType: !1493, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!4756 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !4751, file: !116, line: 110, baseType: !485, size: 64, offset: 64)
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !4741, file: !116, line: 117, baseType: !4758, size: 24, offset: 192)
!4758 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4741, file: !116, line: 113, size: 24, elements: !4759)
!4759 = !{!4760, !4761, !4762}
!4760 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4758, file: !116, line: 114, baseType: !1493, size: 8)
!4761 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4758, file: !116, line: 115, baseType: !1493, size: 8, offset: 8)
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4758, file: !116, line: 116, baseType: !1493, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 16)
!4763 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !4741, file: !116, line: 128, baseType: !4764, size: 192, offset: 256)
!4764 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4741, file: !116, line: 119, size: 192, elements: !4765)
!4765 = !{!4766, !4767, !4768, !4769, !4770}
!4766 = !DIDerivedType(tag: DW_TAG_member, name: "buswidth", scope: !4764, file: !116, line: 120, baseType: !1493, size: 8)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "dtr", scope: !4764, file: !116, line: 121, baseType: !1493, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 8)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !4764, file: !116, line: 122, baseType: !115, size: 32, offset: 32)
!4769 = !DIDerivedType(tag: DW_TAG_member, name: "nbytes", scope: !4764, file: !116, line: 123, baseType: !7, size: 32, offset: 64)
!4770 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !4764, file: !116, line: 127, baseType: !4771, size: 64, offset: 128)
!4771 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4764, file: !116, line: 124, size: 64, elements: !4772)
!4772 = !{!4773, !4774}
!4773 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !4771, file: !116, line: 125, baseType: !228, size: 64)
!4774 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !4771, file: !116, line: 126, baseType: !269, size: 64)
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "supports_op", scope: !4728, file: !116, line: 266, baseType: !4776, size: 64, offset: 64)
!4776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4777, size: 64)
!4777 = !DISubroutineType(types: !4778)
!4778 = !{!261, !4734, !4779}
!4779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4780, size: 64)
!4780 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4741)
!4781 = !DIDerivedType(tag: DW_TAG_member, name: "exec_op", scope: !4728, file: !116, line: 268, baseType: !4782, size: 64, offset: 128)
!4782 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4783, size: 64)
!4783 = !DISubroutineType(types: !4784)
!4784 = !{!234, !4734, !4779}
!4785 = !DIDerivedType(tag: DW_TAG_member, name: "get_name", scope: !4728, file: !116, line: 270, baseType: !4786, size: 64, offset: 192)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 64)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{!280, !4734}
!4789 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_create", scope: !4728, file: !116, line: 271, baseType: !4790, size: 64, offset: 256)
!4790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4791, size: 64)
!4791 = !DISubroutineType(types: !4792)
!4792 = !{!234, !4793}
!4793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4794, size: 64)
!4794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem_dirmap_desc", file: !116, line: 175, size: 768, elements: !4795)
!4795 = !{!4796, !4797, !4803, !4804}
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !4794, file: !116, line: 176, baseType: !4734, size: 64)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !4794, file: !116, line: 177, baseType: !4798, size: 576, offset: 64)
!4798 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_mem_dirmap_info", file: !116, line: 152, size: 576, elements: !4799)
!4799 = !{!4800, !4801, !4802}
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "op_tmpl", scope: !4798, file: !116, line: 153, baseType: !4741, size: 448)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !4798, file: !116, line: 154, baseType: !485, size: 64, offset: 448)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4798, file: !116, line: 155, baseType: !485, size: 64, offset: 512)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "nodirmap", scope: !4794, file: !116, line: 178, baseType: !7, size: 32, offset: 640)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "priv", scope: !4794, file: !116, line: 179, baseType: !228, size: 64, offset: 704)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_destroy", scope: !4728, file: !116, line: 272, baseType: !4806, size: 64, offset: 320)
!4806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4807, size: 64)
!4807 = !DISubroutineType(types: !4808)
!4808 = !{null, !4793}
!4809 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_read", scope: !4728, file: !116, line: 273, baseType: !4810, size: 64, offset: 384)
!4810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4811, size: 64)
!4811 = !DISubroutineType(types: !4812)
!4812 = !{!369, !4793, !485, !385, !228}
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "dirmap_write", scope: !4728, file: !116, line: 275, baseType: !4814, size: 64, offset: 448)
!4814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4815, size: 64)
!4815 = !DISubroutineType(types: !4816)
!4816 = !{!369, !4793, !485, !385, !269}
!4817 = !DIDerivedType(tag: DW_TAG_member, name: "cs_setup", scope: !4513, file: !4514, line: 638, baseType: !4553, size: 32, offset: 8512)
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "cs_hold", scope: !4513, file: !4514, line: 639, baseType: !4553, size: 32, offset: 8544)
!4819 = !DIDerivedType(tag: DW_TAG_member, name: "cs_inactive", scope: !4513, file: !4514, line: 640, baseType: !4553, size: 32, offset: 8576)
!4820 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpios", scope: !4513, file: !4514, line: 643, baseType: !770, size: 64, offset: 8640)
!4821 = !DIDerivedType(tag: DW_TAG_member, name: "cs_gpiods", scope: !4513, file: !4514, line: 644, baseType: !4822, size: 64, offset: 8704)
!4822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4550, size: 64)
!4823 = !DIDerivedType(tag: DW_TAG_member, name: "use_gpio_descriptors", scope: !4513, file: !4514, line: 645, baseType: !261, size: 8, offset: 8768)
!4824 = !DIDerivedType(tag: DW_TAG_member, name: "unused_native_cs", scope: !4513, file: !4514, line: 646, baseType: !1493, size: 8, offset: 8776)
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "max_native_cs", scope: !4513, file: !4514, line: 647, baseType: !1493, size: 8, offset: 8784)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "statistics", scope: !4513, file: !4514, line: 650, baseType: !4558, size: 1792, offset: 8832)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "dma_tx", scope: !4513, file: !4514, line: 653, baseType: !4828, size: 64, offset: 10624)
!4828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4829, size: 64)
!4829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan", file: !122, line: 329, size: 832, elements: !4830)
!4830 = !{!4831, !5080, !5081, !5082, !5083, !5084, !5091, !5092, !5093, !5099, !5100, !5101, !5110, !5111}
!4831 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !4829, file: !122, line: 330, baseType: !4832, size: 64)
!4832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4833, size: 64)
!4833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_device", file: !122, line: 844, size: 3072, elements: !4834)
!4834 = !{!4835, !4836, !4837, !4838, !4839, !4840, !4857, !4862, !4863, !4864, !4865, !4866, !4867, !4868, !4869, !4870, !4871, !4872, !4876, !4877, !4878, !4879, !4880, !4881, !4882, !4883, !4884, !4885, !4889, !4893, !4958, !4963, !4968, !4972, !4976, !4980, !4984, !4988, !4992, !4996, !5020, !5024, !5042, !5060, !5061, !5062, !5063, !5064, !5075, !5076}
!4835 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !4833, file: !122, line: 845, baseType: !3496, size: 32)
!4836 = !DIDerivedType(tag: DW_TAG_member, name: "chancnt", scope: !4833, file: !122, line: 846, baseType: !7, size: 32, offset: 32)
!4837 = !DIDerivedType(tag: DW_TAG_member, name: "privatecnt", scope: !4833, file: !122, line: 847, baseType: !7, size: 32, offset: 64)
!4838 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !4833, file: !122, line: 848, baseType: !284, size: 128, offset: 128)
!4839 = !DIDerivedType(tag: DW_TAG_member, name: "global_node", scope: !4833, file: !122, line: 849, baseType: !284, size: 128, offset: 256)
!4840 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !4833, file: !122, line: 850, baseType: !4841, size: 192, offset: 384)
!4841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_filter", file: !122, line: 762, size: 192, elements: !4842)
!4842 = !{!4843, !4848, !4849}
!4843 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4841, file: !122, line: 763, baseType: !4844, size: 64)
!4844 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_filter_fn", file: !122, line: 529, baseType: !4845)
!4845 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4846, size: 64)
!4846 = !DISubroutineType(types: !4847)
!4847 = !{!261, !4828, !228}
!4848 = !DIDerivedType(tag: DW_TAG_member, name: "mapcnt", scope: !4841, file: !122, line: 764, baseType: !234, size: 32, offset: 64)
!4849 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !4841, file: !122, line: 765, baseType: !4850, size: 64, offset: 128)
!4850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4851, size: 64)
!4851 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4852)
!4852 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_map", file: !122, line: 749, size: 192, elements: !4853)
!4853 = !{!4854, !4855, !4856}
!4854 = !DIDerivedType(tag: DW_TAG_member, name: "devname", scope: !4852, file: !122, line: 750, baseType: !280, size: 64)
!4855 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4852, file: !122, line: 751, baseType: !280, size: 64, offset: 64)
!4856 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !4852, file: !122, line: 752, baseType: !228, size: 64, offset: 128)
!4857 = !DIDerivedType(tag: DW_TAG_member, name: "cap_mask", scope: !4833, file: !122, line: 851, baseType: !4858, size: 64, offset: 576)
!4858 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cap_mask_t", file: !122, line: 230, baseType: !4859)
!4859 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !122, line: 230, size: 64, elements: !4860)
!4860 = !{!4861}
!4861 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !4859, file: !122, line: 230, baseType: !1511, size: 64)
!4862 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_modes", scope: !4833, file: !122, line: 852, baseType: !121, size: 32, offset: 640)
!4863 = !DIDerivedType(tag: DW_TAG_member, name: "max_xor", scope: !4833, file: !122, line: 853, baseType: !380, size: 16, offset: 672)
!4864 = !DIDerivedType(tag: DW_TAG_member, name: "max_pq", scope: !4833, file: !122, line: 854, baseType: !380, size: 16, offset: 688)
!4865 = !DIDerivedType(tag: DW_TAG_member, name: "copy_align", scope: !4833, file: !122, line: 855, baseType: !127, size: 32, offset: 704)
!4866 = !DIDerivedType(tag: DW_TAG_member, name: "xor_align", scope: !4833, file: !122, line: 856, baseType: !127, size: 32, offset: 736)
!4867 = !DIDerivedType(tag: DW_TAG_member, name: "pq_align", scope: !4833, file: !122, line: 857, baseType: !127, size: 32, offset: 768)
!4868 = !DIDerivedType(tag: DW_TAG_member, name: "fill_align", scope: !4833, file: !122, line: 858, baseType: !127, size: 32, offset: 800)
!4869 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !4833, file: !122, line: 861, baseType: !234, size: 32, offset: 832)
!4870 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4833, file: !122, line: 862, baseType: !3506, size: 64, offset: 896)
!4871 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !4833, file: !122, line: 863, baseType: !695, size: 64, offset: 960)
!4872 = !DIDerivedType(tag: DW_TAG_member, name: "chan_ida", scope: !4833, file: !122, line: 864, baseType: !4873, size: 128, offset: 1024)
!4873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ida", file: !3395, line: 244, size: 128, elements: !4874)
!4874 = !{!4875}
!4875 = !DIDerivedType(tag: DW_TAG_member, name: "xa", scope: !4873, file: !3395, line: 245, baseType: !853, size: 128)
!4876 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mutex", scope: !4833, file: !122, line: 865, baseType: !788, size: 192, offset: 1152)
!4877 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !4833, file: !122, line: 867, baseType: !479, size: 32, offset: 1344)
!4878 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !4833, file: !122, line: 868, baseType: !479, size: 32, offset: 1376)
!4879 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !4833, file: !122, line: 869, baseType: !479, size: 32, offset: 1408)
!4880 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !4833, file: !122, line: 870, baseType: !479, size: 32, offset: 1440)
!4881 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !4833, file: !122, line: 871, baseType: !479, size: 32, offset: 1472)
!4882 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !4833, file: !122, line: 872, baseType: !479, size: 32, offset: 1504)
!4883 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !4833, file: !122, line: 873, baseType: !261, size: 8, offset: 1536)
!4884 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !4833, file: !122, line: 874, baseType: !136, size: 32, offset: 1568)
!4885 = !DIDerivedType(tag: DW_TAG_member, name: "device_alloc_chan_resources", scope: !4833, file: !122, line: 876, baseType: !4886, size: 64, offset: 1600)
!4886 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4887, size: 64)
!4887 = !DISubroutineType(types: !4888)
!4888 = !{!234, !4828}
!4889 = !DIDerivedType(tag: DW_TAG_member, name: "device_free_chan_resources", scope: !4833, file: !122, line: 877, baseType: !4890, size: 64, offset: 1664)
!4890 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4891, size: 64)
!4891 = !DISubroutineType(types: !4892)
!4892 = !{null, !4828}
!4893 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memcpy", scope: !4833, file: !122, line: 879, baseType: !4894, size: 64, offset: 1728)
!4894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4895, size: 64)
!4895 = !DISubroutineType(types: !4896)
!4896 = !{!4897, !4828, !1067, !1067, !385, !388}
!4897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4898, size: 64)
!4898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_async_tx_descriptor", file: !122, line: 598, size: 704, elements: !4899)
!4899 = !{!4900, !4902, !4903, !4904, !4905, !4909, !4913, !4915, !4926, !4927, !4940, !4941}
!4900 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4898, file: !122, line: 599, baseType: !4901, size: 32)
!4901 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_cookie_t", file: !122, line: 22, baseType: !1585)
!4902 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4898, file: !122, line: 600, baseType: !141, size: 32, offset: 32)
!4903 = !DIDerivedType(tag: DW_TAG_member, name: "phys", scope: !4898, file: !122, line: 601, baseType: !1067, size: 64, offset: 64)
!4904 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !4898, file: !122, line: 602, baseType: !4828, size: 64, offset: 128)
!4905 = !DIDerivedType(tag: DW_TAG_member, name: "tx_submit", scope: !4898, file: !122, line: 603, baseType: !4906, size: 64, offset: 192)
!4906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4907, size: 64)
!4907 = !DISubroutineType(types: !4908)
!4908 = !{!4901, !4897}
!4909 = !DIDerivedType(tag: DW_TAG_member, name: "desc_free", scope: !4898, file: !122, line: 604, baseType: !4910, size: 64, offset: 256)
!4910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4911, size: 64)
!4911 = !DISubroutineType(types: !4912)
!4912 = !{!234, !4897}
!4913 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !4898, file: !122, line: 605, baseType: !4914, size: 64, offset: 320)
!4914 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback", file: !122, line: 531, baseType: !532)
!4915 = !DIDerivedType(tag: DW_TAG_member, name: "callback_result", scope: !4898, file: !122, line: 606, baseType: !4916, size: 64, offset: 384)
!4916 = !DIDerivedType(tag: DW_TAG_typedef, name: "dma_async_tx_callback_result", file: !122, line: 545, baseType: !4917)
!4917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4918, size: 64)
!4918 = !DISubroutineType(types: !4919)
!4919 = !{null, !228, !4920}
!4920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4921, size: 64)
!4921 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4922)
!4922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_result", file: !122, line: 540, size: 64, elements: !4923)
!4923 = !{!4924, !4925}
!4924 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !4922, file: !122, line: 541, baseType: !153, size: 32)
!4925 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !4922, file: !122, line: 542, baseType: !479, size: 32, offset: 32)
!4926 = !DIDerivedType(tag: DW_TAG_member, name: "callback_param", scope: !4898, file: !122, line: 607, baseType: !228, size: 64, offset: 448)
!4927 = !DIDerivedType(tag: DW_TAG_member, name: "unmap", scope: !4898, file: !122, line: 608, baseType: !4928, size: 64, offset: 512)
!4928 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4929, size: 64)
!4929 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dmaengine_unmap_data", file: !122, line: 548, size: 256, elements: !4930)
!4930 = !{!4931, !4932, !4933, !4934, !4935, !4936, !4937, !4938}
!4931 = !DIDerivedType(tag: DW_TAG_member, name: "map_cnt", scope: !4929, file: !122, line: 552, baseType: !1493, size: 8)
!4932 = !DIDerivedType(tag: DW_TAG_member, name: "to_cnt", scope: !4929, file: !122, line: 554, baseType: !1493, size: 8, offset: 8)
!4933 = !DIDerivedType(tag: DW_TAG_member, name: "from_cnt", scope: !4929, file: !122, line: 555, baseType: !1493, size: 8, offset: 16)
!4934 = !DIDerivedType(tag: DW_TAG_member, name: "bidi_cnt", scope: !4929, file: !122, line: 556, baseType: !1493, size: 8, offset: 24)
!4935 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4929, file: !122, line: 557, baseType: !3506, size: 64, offset: 64)
!4936 = !DIDerivedType(tag: DW_TAG_member, name: "kref", scope: !4929, file: !122, line: 558, baseType: !3496, size: 32, offset: 128)
!4937 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4929, file: !122, line: 559, baseType: !385, size: 64, offset: 192)
!4938 = !DIDerivedType(tag: DW_TAG_member, name: "addr", scope: !4929, file: !122, line: 560, baseType: !4939, offset: 256)
!4939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1067, elements: !2469)
!4940 = !DIDerivedType(tag: DW_TAG_member, name: "desc_metadata_mode", scope: !4898, file: !122, line: 609, baseType: !121, size: 32, offset: 576)
!4941 = !DIDerivedType(tag: DW_TAG_member, name: "metadata_ops", scope: !4898, file: !122, line: 610, baseType: !4942, size: 64, offset: 640)
!4942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4943, size: 64)
!4943 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_descriptor_metadata_ops", file: !122, line: 565, size: 192, elements: !4944)
!4944 = !{!4945, !4949, !4954}
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "attach", scope: !4943, file: !122, line: 566, baseType: !4946, size: 64)
!4946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4947, size: 64)
!4947 = !DISubroutineType(types: !4948)
!4948 = !{!234, !4897, !228, !385}
!4949 = !DIDerivedType(tag: DW_TAG_member, name: "get_ptr", scope: !4943, file: !122, line: 569, baseType: !4950, size: 64, offset: 64)
!4950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4951, size: 64)
!4951 = !DISubroutineType(types: !4952)
!4952 = !{!228, !4897, !4953, !4953}
!4953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !385, size: 64)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "set_len", scope: !4943, file: !122, line: 571, baseType: !4955, size: 64, offset: 128)
!4955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4956, size: 64)
!4956 = !DISubroutineType(types: !4957)
!4957 = !{!234, !4897, !385}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor", scope: !4833, file: !122, line: 882, baseType: !4959, size: 64, offset: 1792)
!4959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4960, size: 64)
!4960 = !DISubroutineType(types: !4961)
!4961 = !{!4897, !4828, !1067, !4962, !7, !385, !388}
!4962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!4963 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_xor_val", scope: !4833, file: !122, line: 885, baseType: !4964, size: 64, offset: 1856)
!4964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4965, size: 64)
!4965 = !DISubroutineType(types: !4966)
!4966 = !{!4897, !4828, !4962, !7, !385, !4967, !388}
!4967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq", scope: !4833, file: !122, line: 888, baseType: !4969, size: 64, offset: 1920)
!4969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4970, size: 64)
!4970 = !DISubroutineType(types: !4971)
!4971 = !{!4897, !4828, !4962, !4962, !7, !489, !385, !388}
!4972 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_pq_val", scope: !4833, file: !122, line: 892, baseType: !4973, size: 64, offset: 1984)
!4973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4974, size: 64)
!4974 = !DISubroutineType(types: !4975)
!4975 = !{!4897, !4828, !4962, !4962, !7, !489, !385, !4967, !388}
!4976 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset", scope: !4833, file: !122, line: 896, baseType: !4977, size: 64, offset: 2048)
!4977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4978, size: 64)
!4978 = !DISubroutineType(types: !4979)
!4979 = !{!4897, !4828, !1067, !234, !385, !388}
!4980 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_memset_sg", scope: !4833, file: !122, line: 899, baseType: !4981, size: 64, offset: 2112)
!4981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4982, size: 64)
!4982 = !DISubroutineType(types: !4983)
!4983 = !{!4897, !4828, !4629, !7, !234, !388}
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_interrupt", scope: !4833, file: !122, line: 902, baseType: !4985, size: 64, offset: 2176)
!4985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4986, size: 64)
!4986 = !DISubroutineType(types: !4987)
!4987 = !{!4897, !4828, !388}
!4988 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_slave_sg", scope: !4833, file: !122, line: 905, baseType: !4989, size: 64, offset: 2240)
!4989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4990, size: 64)
!4990 = !DISubroutineType(types: !4991)
!4991 = !{!4897, !4828, !4629, !7, !163, !388, !228}
!4992 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_cyclic", scope: !4833, file: !122, line: 909, baseType: !4993, size: 64, offset: 2304)
!4993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4994, size: 64)
!4994 = !DISubroutineType(types: !4995)
!4995 = !{!4897, !4828, !1067, !385, !385, !163, !388}
!4996 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_interleaved_dma", scope: !4833, file: !122, line: 913, baseType: !4997, size: 64, offset: 2368)
!4997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4998, size: 64)
!4998 = !DISubroutineType(types: !4999)
!4999 = !{!4897, !4828, !5000, !388}
!5000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5001, size: 64)
!5001 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_interleaved_template", file: !122, line: 150, size: 320, elements: !5002)
!5002 = !{!5003, !5004, !5005, !5006, !5007, !5008, !5009, !5010, !5011, !5012}
!5003 = !DIDerivedType(tag: DW_TAG_member, name: "src_start", scope: !5001, file: !122, line: 151, baseType: !1067, size: 64)
!5004 = !DIDerivedType(tag: DW_TAG_member, name: "dst_start", scope: !5001, file: !122, line: 152, baseType: !1067, size: 64, offset: 64)
!5005 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !5001, file: !122, line: 153, baseType: !163, size: 32, offset: 128)
!5006 = !DIDerivedType(tag: DW_TAG_member, name: "src_inc", scope: !5001, file: !122, line: 154, baseType: !261, size: 8, offset: 160)
!5007 = !DIDerivedType(tag: DW_TAG_member, name: "dst_inc", scope: !5001, file: !122, line: 155, baseType: !261, size: 8, offset: 168)
!5008 = !DIDerivedType(tag: DW_TAG_member, name: "src_sgl", scope: !5001, file: !122, line: 156, baseType: !261, size: 8, offset: 176)
!5009 = !DIDerivedType(tag: DW_TAG_member, name: "dst_sgl", scope: !5001, file: !122, line: 157, baseType: !261, size: 8, offset: 184)
!5010 = !DIDerivedType(tag: DW_TAG_member, name: "numf", scope: !5001, file: !122, line: 158, baseType: !385, size: 64, offset: 192)
!5011 = !DIDerivedType(tag: DW_TAG_member, name: "frame_size", scope: !5001, file: !122, line: 159, baseType: !385, size: 64, offset: 256)
!5012 = !DIDerivedType(tag: DW_TAG_member, name: "sgl", scope: !5001, file: !122, line: 160, baseType: !5013, offset: 320)
!5013 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5014, elements: !2469)
!5014 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "data_chunk", file: !122, line: 125, size: 256, elements: !5015)
!5015 = !{!5016, !5017, !5018, !5019}
!5016 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5014, file: !122, line: 126, baseType: !385, size: 64)
!5017 = !DIDerivedType(tag: DW_TAG_member, name: "icg", scope: !5014, file: !122, line: 127, baseType: !385, size: 64, offset: 64)
!5018 = !DIDerivedType(tag: DW_TAG_member, name: "dst_icg", scope: !5014, file: !122, line: 128, baseType: !385, size: 64, offset: 128)
!5019 = !DIDerivedType(tag: DW_TAG_member, name: "src_icg", scope: !5014, file: !122, line: 129, baseType: !385, size: 64, offset: 192)
!5020 = !DIDerivedType(tag: DW_TAG_member, name: "device_prep_dma_imm_data", scope: !4833, file: !122, line: 916, baseType: !5021, size: 64, offset: 2432)
!5021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5022, size: 64)
!5022 = !DISubroutineType(types: !5023)
!5023 = !{!4897, !4828, !1067, !485, !388}
!5024 = !DIDerivedType(tag: DW_TAG_member, name: "device_caps", scope: !4833, file: !122, line: 920, baseType: !5025, size: 64, offset: 2496)
!5025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5026, size: 64)
!5026 = !DISubroutineType(types: !5027)
!5027 = !{null, !4828, !5028}
!5028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5029, size: 64)
!5029 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_caps", file: !122, line: 497, size: 288, elements: !5030)
!5030 = !{!5031, !5032, !5033, !5034, !5035, !5036, !5037, !5038, !5039, !5040, !5041}
!5031 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_widths", scope: !5029, file: !122, line: 498, baseType: !479, size: 32)
!5032 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_widths", scope: !5029, file: !122, line: 499, baseType: !479, size: 32, offset: 32)
!5033 = !DIDerivedType(tag: DW_TAG_member, name: "directions", scope: !5029, file: !122, line: 500, baseType: !479, size: 32, offset: 64)
!5034 = !DIDerivedType(tag: DW_TAG_member, name: "min_burst", scope: !5029, file: !122, line: 501, baseType: !479, size: 32, offset: 96)
!5035 = !DIDerivedType(tag: DW_TAG_member, name: "max_burst", scope: !5029, file: !122, line: 502, baseType: !479, size: 32, offset: 128)
!5036 = !DIDerivedType(tag: DW_TAG_member, name: "max_sg_burst", scope: !5029, file: !122, line: 503, baseType: !479, size: 32, offset: 160)
!5037 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_pause", scope: !5029, file: !122, line: 504, baseType: !261, size: 8, offset: 192)
!5038 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_resume", scope: !5029, file: !122, line: 505, baseType: !261, size: 8, offset: 200)
!5039 = !DIDerivedType(tag: DW_TAG_member, name: "cmd_terminate", scope: !5029, file: !122, line: 506, baseType: !261, size: 8, offset: 208)
!5040 = !DIDerivedType(tag: DW_TAG_member, name: "residue_granularity", scope: !5029, file: !122, line: 507, baseType: !136, size: 32, offset: 224)
!5041 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_reuse", scope: !5029, file: !122, line: 508, baseType: !261, size: 8, offset: 256)
!5042 = !DIDerivedType(tag: DW_TAG_member, name: "device_config", scope: !4833, file: !122, line: 922, baseType: !5043, size: 64, offset: 2560)
!5043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5044, size: 64)
!5044 = !DISubroutineType(types: !5045)
!5045 = !{!234, !4828, !5046}
!5046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5047, size: 64)
!5047 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_slave_config", file: !122, line: 434, size: 448, elements: !5048)
!5048 = !{!5049, !5050, !5051, !5052, !5053, !5054, !5055, !5056, !5057, !5058, !5059}
!5049 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !5047, file: !122, line: 435, baseType: !163, size: 32)
!5050 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr", scope: !5047, file: !122, line: 436, baseType: !2265, size: 64, offset: 64)
!5051 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr", scope: !5047, file: !122, line: 437, baseType: !2265, size: 64, offset: 128)
!5052 = !DIDerivedType(tag: DW_TAG_member, name: "src_addr_width", scope: !5047, file: !122, line: 438, baseType: !170, size: 32, offset: 192)
!5053 = !DIDerivedType(tag: DW_TAG_member, name: "dst_addr_width", scope: !5047, file: !122, line: 439, baseType: !170, size: 32, offset: 224)
!5054 = !DIDerivedType(tag: DW_TAG_member, name: "src_maxburst", scope: !5047, file: !122, line: 440, baseType: !479, size: 32, offset: 256)
!5055 = !DIDerivedType(tag: DW_TAG_member, name: "dst_maxburst", scope: !5047, file: !122, line: 441, baseType: !479, size: 32, offset: 288)
!5056 = !DIDerivedType(tag: DW_TAG_member, name: "src_port_window_size", scope: !5047, file: !122, line: 442, baseType: !479, size: 32, offset: 320)
!5057 = !DIDerivedType(tag: DW_TAG_member, name: "dst_port_window_size", scope: !5047, file: !122, line: 443, baseType: !479, size: 32, offset: 352)
!5058 = !DIDerivedType(tag: DW_TAG_member, name: "device_fc", scope: !5047, file: !122, line: 444, baseType: !261, size: 8, offset: 384)
!5059 = !DIDerivedType(tag: DW_TAG_member, name: "slave_id", scope: !5047, file: !122, line: 445, baseType: !7, size: 32, offset: 416)
!5060 = !DIDerivedType(tag: DW_TAG_member, name: "device_pause", scope: !4833, file: !122, line: 924, baseType: !4886, size: 64, offset: 2624)
!5061 = !DIDerivedType(tag: DW_TAG_member, name: "device_resume", scope: !4833, file: !122, line: 925, baseType: !4886, size: 64, offset: 2688)
!5062 = !DIDerivedType(tag: DW_TAG_member, name: "device_terminate_all", scope: !4833, file: !122, line: 926, baseType: !4886, size: 64, offset: 2752)
!5063 = !DIDerivedType(tag: DW_TAG_member, name: "device_synchronize", scope: !4833, file: !122, line: 927, baseType: !4890, size: 64, offset: 2816)
!5064 = !DIDerivedType(tag: DW_TAG_member, name: "device_tx_status", scope: !4833, file: !122, line: 929, baseType: !5065, size: 64, offset: 2880)
!5065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5066, size: 64)
!5066 = !DISubroutineType(types: !5067)
!5067 = !{!181, !4828, !4901, !5068}
!5068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5069, size: 64)
!5069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_tx_state", file: !122, line: 721, size: 128, elements: !5070)
!5070 = !{!5071, !5072, !5073, !5074}
!5071 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !5069, file: !122, line: 722, baseType: !4901, size: 32)
!5072 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !5069, file: !122, line: 723, baseType: !4901, size: 32, offset: 32)
!5073 = !DIDerivedType(tag: DW_TAG_member, name: "residue", scope: !5069, file: !122, line: 724, baseType: !479, size: 32, offset: 64)
!5074 = !DIDerivedType(tag: DW_TAG_member, name: "in_flight_bytes", scope: !5069, file: !122, line: 725, baseType: !479, size: 32, offset: 96)
!5075 = !DIDerivedType(tag: DW_TAG_member, name: "device_issue_pending", scope: !4833, file: !122, line: 932, baseType: !4890, size: 64, offset: 2944)
!5076 = !DIDerivedType(tag: DW_TAG_member, name: "device_release", scope: !4833, file: !122, line: 933, baseType: !5077, size: 64, offset: 3008)
!5077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5078, size: 64)
!5078 = !DISubroutineType(types: !5079)
!5079 = !{null, !4832}
!5080 = !DIDerivedType(tag: DW_TAG_member, name: "slave", scope: !4829, file: !122, line: 331, baseType: !3506, size: 64, offset: 64)
!5081 = !DIDerivedType(tag: DW_TAG_member, name: "cookie", scope: !4829, file: !122, line: 332, baseType: !4901, size: 32, offset: 128)
!5082 = !DIDerivedType(tag: DW_TAG_member, name: "completed_cookie", scope: !4829, file: !122, line: 333, baseType: !4901, size: 32, offset: 160)
!5083 = !DIDerivedType(tag: DW_TAG_member, name: "chan_id", scope: !4829, file: !122, line: 336, baseType: !234, size: 32, offset: 192)
!5084 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !4829, file: !122, line: 337, baseType: !5085, size: 64, offset: 256)
!5085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5086, size: 64)
!5086 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_dev", file: !122, line: 361, size: 5696, elements: !5087)
!5087 = !{!5088, !5089, !5090}
!5088 = !DIDerivedType(tag: DW_TAG_member, name: "chan", scope: !5086, file: !122, line: 362, baseType: !4828, size: 64)
!5089 = !DIDerivedType(tag: DW_TAG_member, name: "device", scope: !5086, file: !122, line: 363, baseType: !273, size: 5568, offset: 64)
!5090 = !DIDerivedType(tag: DW_TAG_member, name: "dev_id", scope: !5086, file: !122, line: 364, baseType: !234, size: 32, offset: 5632)
!5091 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4829, file: !122, line: 338, baseType: !280, size: 64, offset: 320)
!5092 = !DIDerivedType(tag: DW_TAG_member, name: "device_node", scope: !4829, file: !122, line: 343, baseType: !284, size: 128, offset: 384)
!5093 = !DIDerivedType(tag: DW_TAG_member, name: "local", scope: !4829, file: !122, line: 344, baseType: !5094, size: 64, offset: 512)
!5094 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5095, size: 64)
!5095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_chan_percpu", file: !122, line: 294, size: 128, elements: !5096)
!5096 = !{!5097, !5098}
!5097 = !DIDerivedType(tag: DW_TAG_member, name: "memcpy_count", scope: !5095, file: !122, line: 296, baseType: !388, size: 64)
!5098 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_transferred", scope: !5095, file: !122, line: 297, baseType: !388, size: 64, offset: 64)
!5099 = !DIDerivedType(tag: DW_TAG_member, name: "client_count", scope: !4829, file: !122, line: 345, baseType: !234, size: 32, offset: 576)
!5100 = !DIDerivedType(tag: DW_TAG_member, name: "table_count", scope: !4829, file: !122, line: 346, baseType: !234, size: 32, offset: 608)
!5101 = !DIDerivedType(tag: DW_TAG_member, name: "router", scope: !4829, file: !122, line: 349, baseType: !5102, size: 64, offset: 640)
!5102 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5103, size: 64)
!5103 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dma_router", file: !122, line: 305, size: 128, elements: !5104)
!5104 = !{!5105, !5106}
!5105 = !DIDerivedType(tag: DW_TAG_member, name: "dev", scope: !5103, file: !122, line: 306, baseType: !3506, size: 64)
!5106 = !DIDerivedType(tag: DW_TAG_member, name: "route_free", scope: !5103, file: !122, line: 307, baseType: !5107, size: 64, offset: 64)
!5107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5108, size: 64)
!5108 = !DISubroutineType(types: !5109)
!5109 = !{null, !3506, !228}
!5110 = !DIDerivedType(tag: DW_TAG_member, name: "route_data", scope: !4829, file: !122, line: 350, baseType: !228, size: 64, offset: 704)
!5111 = !DIDerivedType(tag: DW_TAG_member, name: "private", scope: !4829, file: !122, line: 352, baseType: !228, size: 64, offset: 768)
!5112 = !DIDerivedType(tag: DW_TAG_member, name: "dma_rx", scope: !4513, file: !4514, line: 654, baseType: !4828, size: 64, offset: 10688)
!5113 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_rx", scope: !4513, file: !4514, line: 657, baseType: !228, size: 64, offset: 10752)
!5114 = !DIDerivedType(tag: DW_TAG_member, name: "dummy_tx", scope: !4513, file: !4514, line: 658, baseType: !228, size: 64, offset: 10816)
!5115 = !DIDerivedType(tag: DW_TAG_member, name: "fw_translate_cs", scope: !4513, file: !4514, line: 660, baseType: !5116, size: 64, offset: 10880)
!5116 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5117, size: 64)
!5117 = !DISubroutineType(types: !5118)
!5118 = !{!234, !4512, !7}
!5119 = !DIDerivedType(tag: DW_TAG_member, name: "ptp_sts_supported", scope: !4513, file: !4514, line: 666, baseType: !261, size: 8, offset: 10944)
!5120 = !DIDerivedType(tag: DW_TAG_member, name: "irq_flags", scope: !4513, file: !4514, line: 669, baseType: !388, size: 64, offset: 11008)
!5121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5122, size: 64)
!5122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5123)
!5123 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !287)
!5124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5125, size: 64)
!5125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "boardinfo", file: !3, line: 463, size: 704, elements: !5126)
!5126 = !{!5127, !5128}
!5127 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !5125, file: !3, line: 464, baseType: !284, size: 128)
!5128 = !DIDerivedType(tag: DW_TAG_member, name: "board_info", scope: !5125, file: !3, line: 465, baseType: !5129, size: 576, offset: 128)
!5129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_board_info", file: !4514, line: 1438, size: 576, elements: !5130)
!5130 = !{!5131, !5132, !5133, !5159, !5160, !5161, !5162, !5163, !5164}
!5131 = !DIDerivedType(tag: DW_TAG_member, name: "modalias", scope: !5129, file: !4514, line: 1447, baseType: !2838, size: 256)
!5132 = !DIDerivedType(tag: DW_TAG_member, name: "platform_data", scope: !5129, file: !4514, line: 1448, baseType: !269, size: 64, offset: 256)
!5133 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !5129, file: !4514, line: 1449, baseType: !5134, size: 64, offset: 320)
!5134 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5135, size: 64)
!5135 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5136)
!5136 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "property_entry", file: !189, line: 263, size: 256, elements: !5137)
!5137 = !{!5138, !5139, !5140, !5141, !5142}
!5138 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5136, file: !189, line: 264, baseType: !280, size: 64)
!5139 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !5136, file: !189, line: 265, baseType: !385, size: 64, offset: 64)
!5140 = !DIDerivedType(tag: DW_TAG_member, name: "is_inline", scope: !5136, file: !189, line: 266, baseType: !261, size: 8, offset: 128)
!5141 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5136, file: !189, line: 267, baseType: !188, size: 32, offset: 160)
!5142 = !DIDerivedType(tag: DW_TAG_member, scope: !5136, file: !189, line: 268, baseType: !5143, size: 64, offset: 192)
!5143 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5136, file: !189, line: 268, size: 64, elements: !5144)
!5144 = !{!5145, !5146}
!5145 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !5143, file: !189, line: 269, baseType: !269, size: 64)
!5146 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !5143, file: !189, line: 276, baseType: !5147, size: 64)
!5147 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5143, file: !189, line: 270, size: 64, elements: !5148)
!5148 = !{!5149, !5151, !5153, !5155, !5157}
!5149 = !DIDerivedType(tag: DW_TAG_member, name: "u8_data", scope: !5147, file: !189, line: 271, baseType: !5150, size: 64)
!5150 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 64, elements: !1471)
!5151 = !DIDerivedType(tag: DW_TAG_member, name: "u16_data", scope: !5147, file: !189, line: 272, baseType: !5152, size: 64)
!5152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !966, size: 64, elements: !1303)
!5153 = !DIDerivedType(tag: DW_TAG_member, name: "u32_data", scope: !5147, file: !189, line: 273, baseType: !5154, size: 64)
!5154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 64, elements: !1710)
!5155 = !DIDerivedType(tag: DW_TAG_member, name: "u64_data", scope: !5147, file: !189, line: 274, baseType: !5156, size: 64)
!5156 = !DICompositeType(tag: DW_TAG_array_type, baseType: !485, size: 64, elements: !1512)
!5157 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !5147, file: !189, line: 275, baseType: !5158, size: 64)
!5158 = !DICompositeType(tag: DW_TAG_array_type, baseType: !280, size: 64, elements: !1512)
!5159 = !DIDerivedType(tag: DW_TAG_member, name: "controller_data", scope: !5129, file: !4514, line: 1450, baseType: !228, size: 64, offset: 384)
!5160 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !5129, file: !4514, line: 1451, baseType: !234, size: 32, offset: 448)
!5161 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed_hz", scope: !5129, file: !4514, line: 1454, baseType: !479, size: 32, offset: 480)
!5162 = !DIDerivedType(tag: DW_TAG_member, name: "bus_num", scope: !5129, file: !4514, line: 1463, baseType: !966, size: 16, offset: 512)
!5163 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !5129, file: !4514, line: 1464, baseType: !966, size: 16, offset: 528)
!5164 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5129, file: !4514, line: 1469, baseType: !479, size: 32, offset: 544)
!5165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5166, size: 64)
!5166 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_res", file: !4514, line: 780, size: 192, elements: !5167)
!5167 = !{!5168, !5169, !5174}
!5168 = !DIDerivedType(tag: DW_TAG_member, name: "entry", scope: !5166, file: !4514, line: 781, baseType: !284, size: 128)
!5169 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !5166, file: !4514, line: 782, baseType: !5170, size: 64, offset: 128)
!5170 = !DIDerivedType(tag: DW_TAG_typedef, name: "spi_res_release_t", file: !4514, line: 767, baseType: !5171)
!5171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5172, size: 64)
!5172 = !DISubroutineType(types: !5173)
!5173 = !{null, !4512, !4594, !228}
!5174 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !5166, file: !4514, line: 783, baseType: !5175, offset: 192)
!5175 = !DICompositeType(tag: DW_TAG_array_type, baseType: !487, elements: !2469)
!5176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5177, size: 64)
!5177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_driver", file: !4514, line: 278, size: 1408, elements: !5178)
!5178 = !{!5179, !5186, !5187, !5188, !5189}
!5179 = !DIDerivedType(tag: DW_TAG_member, name: "id_table", scope: !5177, file: !4514, line: 279, baseType: !5180, size: 64)
!5180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5181, size: 64)
!5181 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5182)
!5182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_device_id", file: !3590, line: 494, size: 320, elements: !5183)
!5183 = !{!5184, !5185}
!5184 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !5182, file: !3590, line: 495, baseType: !2838, size: 256)
!5185 = !DIDerivedType(tag: DW_TAG_member, name: "driver_data", scope: !5182, file: !3590, line: 496, baseType: !3609, size: 64, offset: 256)
!5186 = !DIDerivedType(tag: DW_TAG_member, name: "probe", scope: !5177, file: !4514, line: 280, baseType: !4582, size: 64, offset: 64)
!5187 = !DIDerivedType(tag: DW_TAG_member, name: "remove", scope: !5177, file: !4514, line: 281, baseType: !4582, size: 64, offset: 128)
!5188 = !DIDerivedType(tag: DW_TAG_member, name: "shutdown", scope: !5177, file: !4514, line: 282, baseType: !4609, size: 64, offset: 192)
!5189 = !DIDerivedType(tag: DW_TAG_member, name: "driver", scope: !5177, file: !4514, line: 283, baseType: !3578, size: 1152, offset: 256)
!5190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5191, size: 64)
!5191 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !282)
!5192 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1368, size: 64)
!5193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5123, size: 64)
!5194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4512, size: 64)
!5195 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !227, line: 107, baseType: !485)
!5196 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_size", file: !237, line: 127, baseType: !485)
!5197 = !DIDerivedType(tag: DW_TAG_typedef, name: "acpi_status", file: !237, line: 421, baseType: !479)
!5198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5199, size: 64)
!5199 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5200)
!5200 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !234)
!5201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5202, size: 64)
!5202 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !479)
!5203 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5204, size: 64)
!5204 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !485)
!5205 = !{!5206, !5208, !5211, !5213, !5218, !5220, !0, !5222, !5224, !5227, !5241, !5243, !5245, !5250, !5252, !5254, !5256, !5258, !5260, !5262, !5264, !5266, !5268, !5270, !5272, !5274, !5276, !5278, !5280, !5282, !5284, !5286, !5288, !5290, !5292, !5294, !5296, !5298, !5300, !5302, !5304, !5306, !5308, !5310, !5312, !5314, !5316, !5319, !5321, !5323, !5325, !5327, !5329, !5331, !5333, !5335, !5337, !5339, !5341, !5343, !5345, !5347, !5349, !5351, !5353, !5355, !5357, !5359, !5361, !5363, !5365, !5367, !5369, !5371, !5373, !5375, !5377, !5379, !5381, !5386, !5391, !5396}
!5206 = !DIGlobalVariableExpression(var: !5207, expr: !DIExpression())
!5207 = distinct !DIGlobalVariable(name: "spi_bus_type", scope: !2, file: !3, line: 377, type: !3564, isLocal: false, isDefinition: true)
!5208 = !DIGlobalVariableExpression(var: !5209, expr: !DIExpression())
!5209 = distinct !DIGlobalVariable(name: "__key", scope: !5210, file: !3, line: 2702, type: !710, isLocal: true, isDefinition: true)
!5210 = distinct !DISubprogram(name: "spi_register_controller", scope: !3, file: !3, line: 2644, type: !4703, scopeLine: 2645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5211 = !DIGlobalVariableExpression(var: !5212, expr: !DIExpression())
!5212 = distinct !DIGlobalVariable(name: "__key", scope: !5210, file: !3, line: 2703, type: !710, isLocal: true, isDefinition: true)
!5213 = !DIGlobalVariableExpression(var: !5214, expr: !DIExpression())
!5214 = distinct !DIGlobalVariable(name: "lock", scope: !5215, file: !3, line: 3976, type: !788, isLocal: true, isDefinition: true)
!5215 = distinct !DISubprogram(name: "spi_write_then_read", scope: !3, file: !3, line: 3972, type: !5216, scopeLine: 3975, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5216 = !DISubroutineType(types: !5217)
!5217 = !{!234, !4532, !269, !7, !228, !7}
!5218 = !DIGlobalVariableExpression(var: !5219, expr: !DIExpression())
!5219 = distinct !DIGlobalVariable(name: "__UNIQUE_ID___addressable_spi_init383", scope: !2, file: !3, line: 4229, type: !228, isLocal: true, isDefinition: true)
!5220 = !DIGlobalVariableExpression(var: !5221, expr: !DIExpression())
!5221 = distinct !DIGlobalVariable(name: "buf", scope: !2, file: !3, line: 3950, type: !4307, isLocal: true, isDefinition: true)
!5222 = !DIGlobalVariableExpression(var: !5223, expr: !DIExpression())
!5223 = distinct !DIGlobalVariable(name: "spi_dev_group", scope: !2, file: !3, line: 203, type: !394, isLocal: true, isDefinition: true)
!5224 = !DIGlobalVariableExpression(var: !5225, expr: !DIExpression())
!5225 = distinct !DIGlobalVariable(name: "spi_dev_attrs", scope: !2, file: !3, line: 197, type: !5226, isLocal: true, isDefinition: true)
!5226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 192, elements: !339)
!5227 = !DIGlobalVariableExpression(var: !5228, expr: !DIExpression())
!5228 = distinct !DIGlobalVariable(name: "dev_attr_modalias", scope: !2, file: !3, line: 71, type: !5229, isLocal: true, isDefinition: true)
!5229 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "device_attribute", file: !73, line: 99, size: 256, elements: !5230)
!5230 = !{!5231, !5232, !5237}
!5231 = !DIDerivedType(tag: DW_TAG_member, name: "attr", scope: !5229, file: !73, line: 100, baseType: !375, size: 128)
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "show", scope: !5229, file: !73, line: 101, baseType: !5233, size: 64, offset: 128)
!5233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5234, size: 64)
!5234 = !DISubroutineType(types: !5235)
!5235 = !{!369, !3506, !5236, !338}
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5229, size: 64)
!5237 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !5229, file: !73, line: 103, baseType: !5238, size: 64, offset: 192)
!5238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5239, size: 64)
!5239 = !DISubroutineType(types: !5240)
!5240 = !{!369, !3506, !5236, !280, !385}
!5241 = !DIGlobalVariableExpression(var: !5242, expr: !DIExpression())
!5242 = distinct !DIGlobalVariable(name: "dev_attr_driver_override", scope: !2, file: !3, line: 116, type: !5229, isLocal: true, isDefinition: true)
!5243 = !DIGlobalVariableExpression(var: !5244, expr: !DIExpression())
!5244 = distinct !DIGlobalVariable(name: "spi_device_statistics_group", scope: !2, file: !3, line: 239, type: !394, isLocal: true, isDefinition: true)
!5245 = !DIGlobalVariableExpression(var: !5246, expr: !DIExpression())
!5246 = distinct !DIGlobalVariable(name: "spi_device_statistics_attrs", scope: !2, file: !3, line: 207, type: !5247, isLocal: true, isDefinition: true)
!5247 = !DICompositeType(tag: DW_TAG_array_type, baseType: !374, size: 1856, elements: !5248)
!5248 = !{!5249}
!5249 = !DISubrange(count: 29)
!5250 = !DIGlobalVariableExpression(var: !5251, expr: !DIExpression())
!5251 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_messages", scope: !2, file: !3, line: 160, type: !5229, isLocal: true, isDefinition: true)
!5252 = !DIGlobalVariableExpression(var: !5253, expr: !DIExpression())
!5253 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfers", scope: !2, file: !3, line: 161, type: !5229, isLocal: true, isDefinition: true)
!5254 = !DIGlobalVariableExpression(var: !5255, expr: !DIExpression())
!5255 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_errors", scope: !2, file: !3, line: 162, type: !5229, isLocal: true, isDefinition: true)
!5256 = !DIGlobalVariableExpression(var: !5257, expr: !DIExpression())
!5257 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_timedout", scope: !2, file: !3, line: 163, type: !5229, isLocal: true, isDefinition: true)
!5258 = !DIGlobalVariableExpression(var: !5259, expr: !DIExpression())
!5259 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_spi_sync", scope: !2, file: !3, line: 165, type: !5229, isLocal: true, isDefinition: true)
!5260 = !DIGlobalVariableExpression(var: !5261, expr: !DIExpression())
!5261 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_spi_sync_immediate", scope: !2, file: !3, line: 166, type: !5229, isLocal: true, isDefinition: true)
!5262 = !DIGlobalVariableExpression(var: !5263, expr: !DIExpression())
!5263 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_spi_async", scope: !2, file: !3, line: 167, type: !5229, isLocal: true, isDefinition: true)
!5264 = !DIGlobalVariableExpression(var: !5265, expr: !DIExpression())
!5265 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_bytes", scope: !2, file: !3, line: 169, type: !5229, isLocal: true, isDefinition: true)
!5266 = !DIGlobalVariableExpression(var: !5267, expr: !DIExpression())
!5267 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_bytes_rx", scope: !2, file: !3, line: 170, type: !5229, isLocal: true, isDefinition: true)
!5268 = !DIGlobalVariableExpression(var: !5269, expr: !DIExpression())
!5269 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_bytes_tx", scope: !2, file: !3, line: 171, type: !5229, isLocal: true, isDefinition: true)
!5270 = !DIGlobalVariableExpression(var: !5271, expr: !DIExpression())
!5271 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo0", scope: !2, file: !3, line: 177, type: !5229, isLocal: true, isDefinition: true)
!5272 = !DIGlobalVariableExpression(var: !5273, expr: !DIExpression())
!5273 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo1", scope: !2, file: !3, line: 178, type: !5229, isLocal: true, isDefinition: true)
!5274 = !DIGlobalVariableExpression(var: !5275, expr: !DIExpression())
!5275 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo2", scope: !2, file: !3, line: 179, type: !5229, isLocal: true, isDefinition: true)
!5276 = !DIGlobalVariableExpression(var: !5277, expr: !DIExpression())
!5277 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo3", scope: !2, file: !3, line: 180, type: !5229, isLocal: true, isDefinition: true)
!5278 = !DIGlobalVariableExpression(var: !5279, expr: !DIExpression())
!5279 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo4", scope: !2, file: !3, line: 181, type: !5229, isLocal: true, isDefinition: true)
!5280 = !DIGlobalVariableExpression(var: !5281, expr: !DIExpression())
!5281 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo5", scope: !2, file: !3, line: 182, type: !5229, isLocal: true, isDefinition: true)
!5282 = !DIGlobalVariableExpression(var: !5283, expr: !DIExpression())
!5283 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo6", scope: !2, file: !3, line: 183, type: !5229, isLocal: true, isDefinition: true)
!5284 = !DIGlobalVariableExpression(var: !5285, expr: !DIExpression())
!5285 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo7", scope: !2, file: !3, line: 184, type: !5229, isLocal: true, isDefinition: true)
!5286 = !DIGlobalVariableExpression(var: !5287, expr: !DIExpression())
!5287 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo8", scope: !2, file: !3, line: 185, type: !5229, isLocal: true, isDefinition: true)
!5288 = !DIGlobalVariableExpression(var: !5289, expr: !DIExpression())
!5289 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo9", scope: !2, file: !3, line: 186, type: !5229, isLocal: true, isDefinition: true)
!5290 = !DIGlobalVariableExpression(var: !5291, expr: !DIExpression())
!5291 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo10", scope: !2, file: !3, line: 187, type: !5229, isLocal: true, isDefinition: true)
!5292 = !DIGlobalVariableExpression(var: !5293, expr: !DIExpression())
!5293 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo11", scope: !2, file: !3, line: 188, type: !5229, isLocal: true, isDefinition: true)
!5294 = !DIGlobalVariableExpression(var: !5295, expr: !DIExpression())
!5295 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo12", scope: !2, file: !3, line: 189, type: !5229, isLocal: true, isDefinition: true)
!5296 = !DIGlobalVariableExpression(var: !5297, expr: !DIExpression())
!5297 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo13", scope: !2, file: !3, line: 190, type: !5229, isLocal: true, isDefinition: true)
!5298 = !DIGlobalVariableExpression(var: !5299, expr: !DIExpression())
!5299 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo14", scope: !2, file: !3, line: 191, type: !5229, isLocal: true, isDefinition: true)
!5300 = !DIGlobalVariableExpression(var: !5301, expr: !DIExpression())
!5301 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo15", scope: !2, file: !3, line: 192, type: !5229, isLocal: true, isDefinition: true)
!5302 = !DIGlobalVariableExpression(var: !5303, expr: !DIExpression())
!5303 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfer_bytes_histo16", scope: !2, file: !3, line: 193, type: !5229, isLocal: true, isDefinition: true)
!5304 = !DIGlobalVariableExpression(var: !5305, expr: !DIExpression())
!5305 = distinct !DIGlobalVariable(name: "dev_attr_spi_device_transfers_split_maxsize", scope: !2, file: !3, line: 195, type: !5229, isLocal: true, isDefinition: true)
!5306 = !DIGlobalVariableExpression(var: !5307, expr: !DIExpression())
!5307 = distinct !DIGlobalVariable(name: "spi_add_lock", scope: !2, file: !3, line: 482, type: !788, isLocal: true, isDefinition: true)
!5308 = !DIGlobalVariableExpression(var: !5309, expr: !DIExpression())
!5309 = distinct !DIGlobalVariable(name: "board_lock", scope: !2, file: !3, line: 476, type: !788, isLocal: true, isDefinition: true)
!5310 = !DIGlobalVariableExpression(var: !5311, expr: !DIExpression())
!5311 = distinct !DIGlobalVariable(name: "board_list", scope: !2, file: !3, line: 468, type: !284, isLocal: true, isDefinition: true)
!5312 = !DIGlobalVariableExpression(var: !5313, expr: !DIExpression())
!5313 = distinct !DIGlobalVariable(name: "spi_controller_list", scope: !2, file: !3, line: 469, type: !284, isLocal: true, isDefinition: true)
!5314 = !DIGlobalVariableExpression(var: !5315, expr: !DIExpression())
!5315 = distinct !DIGlobalVariable(name: "spi_master_class", scope: !2, file: !3, line: 2284, type: !4128, isLocal: true, isDefinition: true)
!5316 = !DIGlobalVariableExpression(var: !5317, expr: !DIExpression())
!5317 = distinct !DIGlobalVariable(name: "spi_master_groups", scope: !2, file: !3, line: 287, type: !5318, isLocal: true, isDefinition: true)
!5318 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 128, elements: !1710)
!5319 = !DIGlobalVariableExpression(var: !5320, expr: !DIExpression())
!5320 = distinct !DIGlobalVariable(name: "spi_controller_statistics_group", scope: !2, file: !3, line: 282, type: !394, isLocal: true, isDefinition: true)
!5321 = !DIGlobalVariableExpression(var: !5322, expr: !DIExpression())
!5322 = distinct !DIGlobalVariable(name: "spi_controller_statistics_attrs", scope: !2, file: !3, line: 250, type: !5247, isLocal: true, isDefinition: true)
!5323 = !DIGlobalVariableExpression(var: !5324, expr: !DIExpression())
!5324 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_messages", scope: !2, file: !3, line: 160, type: !5229, isLocal: true, isDefinition: true)
!5325 = !DIGlobalVariableExpression(var: !5326, expr: !DIExpression())
!5326 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfers", scope: !2, file: !3, line: 161, type: !5229, isLocal: true, isDefinition: true)
!5327 = !DIGlobalVariableExpression(var: !5328, expr: !DIExpression())
!5328 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_errors", scope: !2, file: !3, line: 162, type: !5229, isLocal: true, isDefinition: true)
!5329 = !DIGlobalVariableExpression(var: !5330, expr: !DIExpression())
!5330 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_timedout", scope: !2, file: !3, line: 163, type: !5229, isLocal: true, isDefinition: true)
!5331 = !DIGlobalVariableExpression(var: !5332, expr: !DIExpression())
!5332 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_spi_sync", scope: !2, file: !3, line: 165, type: !5229, isLocal: true, isDefinition: true)
!5333 = !DIGlobalVariableExpression(var: !5334, expr: !DIExpression())
!5334 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_spi_sync_immediate", scope: !2, file: !3, line: 166, type: !5229, isLocal: true, isDefinition: true)
!5335 = !DIGlobalVariableExpression(var: !5336, expr: !DIExpression())
!5336 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_spi_async", scope: !2, file: !3, line: 167, type: !5229, isLocal: true, isDefinition: true)
!5337 = !DIGlobalVariableExpression(var: !5338, expr: !DIExpression())
!5338 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_bytes", scope: !2, file: !3, line: 169, type: !5229, isLocal: true, isDefinition: true)
!5339 = !DIGlobalVariableExpression(var: !5340, expr: !DIExpression())
!5340 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_bytes_rx", scope: !2, file: !3, line: 170, type: !5229, isLocal: true, isDefinition: true)
!5341 = !DIGlobalVariableExpression(var: !5342, expr: !DIExpression())
!5342 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_bytes_tx", scope: !2, file: !3, line: 171, type: !5229, isLocal: true, isDefinition: true)
!5343 = !DIGlobalVariableExpression(var: !5344, expr: !DIExpression())
!5344 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo0", scope: !2, file: !3, line: 177, type: !5229, isLocal: true, isDefinition: true)
!5345 = !DIGlobalVariableExpression(var: !5346, expr: !DIExpression())
!5346 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo1", scope: !2, file: !3, line: 178, type: !5229, isLocal: true, isDefinition: true)
!5347 = !DIGlobalVariableExpression(var: !5348, expr: !DIExpression())
!5348 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo2", scope: !2, file: !3, line: 179, type: !5229, isLocal: true, isDefinition: true)
!5349 = !DIGlobalVariableExpression(var: !5350, expr: !DIExpression())
!5350 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo3", scope: !2, file: !3, line: 180, type: !5229, isLocal: true, isDefinition: true)
!5351 = !DIGlobalVariableExpression(var: !5352, expr: !DIExpression())
!5352 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo4", scope: !2, file: !3, line: 181, type: !5229, isLocal: true, isDefinition: true)
!5353 = !DIGlobalVariableExpression(var: !5354, expr: !DIExpression())
!5354 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo5", scope: !2, file: !3, line: 182, type: !5229, isLocal: true, isDefinition: true)
!5355 = !DIGlobalVariableExpression(var: !5356, expr: !DIExpression())
!5356 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo6", scope: !2, file: !3, line: 183, type: !5229, isLocal: true, isDefinition: true)
!5357 = !DIGlobalVariableExpression(var: !5358, expr: !DIExpression())
!5358 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo7", scope: !2, file: !3, line: 184, type: !5229, isLocal: true, isDefinition: true)
!5359 = !DIGlobalVariableExpression(var: !5360, expr: !DIExpression())
!5360 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo8", scope: !2, file: !3, line: 185, type: !5229, isLocal: true, isDefinition: true)
!5361 = !DIGlobalVariableExpression(var: !5362, expr: !DIExpression())
!5362 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo9", scope: !2, file: !3, line: 186, type: !5229, isLocal: true, isDefinition: true)
!5363 = !DIGlobalVariableExpression(var: !5364, expr: !DIExpression())
!5364 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo10", scope: !2, file: !3, line: 187, type: !5229, isLocal: true, isDefinition: true)
!5365 = !DIGlobalVariableExpression(var: !5366, expr: !DIExpression())
!5366 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo11", scope: !2, file: !3, line: 188, type: !5229, isLocal: true, isDefinition: true)
!5367 = !DIGlobalVariableExpression(var: !5368, expr: !DIExpression())
!5368 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo12", scope: !2, file: !3, line: 189, type: !5229, isLocal: true, isDefinition: true)
!5369 = !DIGlobalVariableExpression(var: !5370, expr: !DIExpression())
!5370 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo13", scope: !2, file: !3, line: 190, type: !5229, isLocal: true, isDefinition: true)
!5371 = !DIGlobalVariableExpression(var: !5372, expr: !DIExpression())
!5372 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo14", scope: !2, file: !3, line: 191, type: !5229, isLocal: true, isDefinition: true)
!5373 = !DIGlobalVariableExpression(var: !5374, expr: !DIExpression())
!5374 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo15", scope: !2, file: !3, line: 192, type: !5229, isLocal: true, isDefinition: true)
!5375 = !DIGlobalVariableExpression(var: !5376, expr: !DIExpression())
!5376 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfer_bytes_histo16", scope: !2, file: !3, line: 193, type: !5229, isLocal: true, isDefinition: true)
!5377 = !DIGlobalVariableExpression(var: !5378, expr: !DIExpression())
!5378 = distinct !DIGlobalVariable(name: "dev_attr_spi_controller_transfers_split_maxsize", scope: !2, file: !3, line: 195, type: !5229, isLocal: true, isDefinition: true)
!5379 = !DIGlobalVariableExpression(var: !5380, expr: !DIExpression())
!5380 = distinct !DIGlobalVariable(name: "spi_master_idr", scope: !2, file: !3, line: 44, type: !3394, isLocal: true, isDefinition: true)
!5381 = !DIGlobalVariableExpression(var: !5382, expr: !DIExpression())
!5382 = distinct !DIGlobalVariable(name: "__key", scope: !5383, file: !1644, line: 88, type: !710, isLocal: true, isDefinition: true)
!5383 = distinct !DISubprogram(name: "__init_completion", scope: !1644, file: !1644, line: 85, type: !5384, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5384 = !DISubroutineType(types: !5385)
!5385 = !{null, !1642}
!5386 = !DIGlobalVariableExpression(var: !5387, expr: !DIExpression())
!5387 = distinct !DIGlobalVariable(name: "__print_once", scope: !5388, file: !3, line: 1218, type: !261, isLocal: true, isDefinition: true)
!5388 = distinct !DISubprogram(name: "_spi_transfer_cs_change_delay", scope: !3, file: !3, line: 1202, type: !5389, scopeLine: 1204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5389 = !DISubroutineType(types: !5390)
!5390 = !{null, !4594, !4616}
!5391 = !DIGlobalVariableExpression(var: !5392, expr: !DIExpression())
!5392 = distinct !DIGlobalVariable(name: "__key", scope: !5393, file: !3, line: 4194, type: !710, isLocal: true, isDefinition: true)
!5393 = distinct !DISubprogram(name: "spi_init", scope: !3, file: !3, line: 4180, type: !5394, scopeLine: 4181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5394 = !DISubroutineType(types: !5395)
!5395 = !{!234}
!5396 = !DIGlobalVariableExpression(var: !5397, expr: !DIExpression())
!5397 = distinct !DIGlobalVariable(name: "spi_acpi_notifier", scope: !2, file: !3, line: 4173, type: !5398, isLocal: true, isDefinition: true)
!5398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "notifier_block", file: !5399, line: 54, size: 192, elements: !5400)
!5399 = !DIFile(filename: "./include/linux/notifier.h", directory: "/home/lizy2001/genbc/linux")
!5400 = !{!5401, !5407, !5408}
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "notifier_call", scope: !5398, file: !5399, line: 55, baseType: !5402, size: 64)
!5402 = !DIDerivedType(tag: DW_TAG_typedef, name: "notifier_fn_t", file: !5399, line: 51, baseType: !5403)
!5403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5404, size: 64)
!5404 = !DISubroutineType(types: !5405)
!5405 = !{!234, !5406, !388, !228}
!5406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5398, size: 64)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5398, file: !5399, line: 56, baseType: !5406, size: 64, offset: 64)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "priority", scope: !5398, file: !5399, line: 57, baseType: !234, size: 32, offset: 128)
!5409 = !DICompositeType(tag: DW_TAG_array_type, baseType: !393, size: 192, elements: !339)
!5410 = !{!"rsp"}
!5411 = !{i32 7, !"Dwarf Version", i32 4}
!5412 = !{i32 2, !"Debug Info Version", i32 3}
!5413 = !{i32 1, !"wchar_size", i32 2}
!5414 = !{i32 1, !"Code Model", i32 2}
!5415 = !{!"clang version 10.0.1 (https://github.com/llvm/llvm-project.git ef32c611aa214dea855364efd7ba451ec5ec3f74)"}
!5416 = distinct !DISubprogram(name: "spi_statistics_add_transfer_stats", scope: !3, file: !3, line: 292, type: !5417, scopeLine: 295, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{null, !5419, !4616, !4512}
!5419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4558, size: 64)
!5420 = !DILocalVariable(name: "lock", arg: 1, scope: !5421, file: !5422, line: 407, type: !1212)
!5421 = distinct !DISubprogram(name: "spin_unlock_irqrestore", scope: !5422, file: !5422, line: 407, type: !5423, scopeLine: 408, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5422 = !DIFile(filename: "./include/linux/spinlock.h", directory: "/home/lizy2001/genbc/linux")
!5423 = !DISubroutineType(types: !5424)
!5424 = !{null, !1212, !388}
!5425 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !5426)
!5426 = distinct !DILocation(line: 315, column: 2, scope: !5416)
!5427 = !DILocalVariable(name: "flags", arg: 2, scope: !5421, file: !5422, line: 407, type: !388)
!5428 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !5426)
!5429 = !DILocalVariable(name: "lock", arg: 1, scope: !5430, file: !5422, line: 327, type: !1212)
!5430 = distinct !DISubprogram(name: "spinlock_check", scope: !5422, file: !5422, line: 327, type: !5431, scopeLine: 328, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5431 = !DISubroutineType(types: !5432)
!5432 = !{!5433, !1212}
!5433 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !887, size: 64)
!5434 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !5435)
!5435 = distinct !DILocation(line: 302, column: 2, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 302, column: 2)
!5437 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 302, column: 2)
!5438 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 302, column: 2)
!5439 = distinct !DILexicalBlock(scope: !5440, file: !3, line: 302, column: 2)
!5440 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 302, column: 2)
!5441 = !DILocalVariable(name: "x", arg: 1, scope: !5442, file: !5443, line: 324, type: !7)
!5442 = distinct !DISubprogram(name: "fls", scope: !5443, file: !5443, line: 324, type: !5444, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5443 = !DIFile(filename: "./arch/x86/include/asm/bitops.h", directory: "/home/lizy2001/genbc/linux")
!5444 = !DISubroutineType(types: !5445)
!5445 = !{!234, !7}
!5446 = !DILocation(line: 324, column: 45, scope: !5442, inlinedAt: !5447)
!5447 = distinct !DILocation(line: 297, column: 14, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 297, column: 14)
!5449 = !DILocalVariable(name: "r", scope: !5442, file: !5443, line: 326, type: !234)
!5450 = !DILocation(line: 326, column: 6, scope: !5442, inlinedAt: !5447)
!5451 = !DILocalVariable(name: "stats", arg: 1, scope: !5416, file: !3, line: 292, type: !5419)
!5452 = !DILocation(line: 292, column: 63, scope: !5416)
!5453 = !DILocalVariable(name: "xfer", arg: 2, scope: !5416, file: !3, line: 293, type: !4616)
!5454 = !DILocation(line: 293, column: 33, scope: !5416)
!5455 = !DILocalVariable(name: "ctlr", arg: 3, scope: !5416, file: !3, line: 294, type: !4512)
!5456 = !DILocation(line: 294, column: 35, scope: !5416)
!5457 = !DILocalVariable(name: "flags", scope: !5416, file: !3, line: 296, type: !388)
!5458 = !DILocation(line: 296, column: 16, scope: !5416)
!5459 = !DILocalVariable(name: "l2len", scope: !5416, file: !3, line: 297, type: !234)
!5460 = !DILocation(line: 297, column: 6, scope: !5416)
!5461 = !DILocalVariable(name: "__UNIQUE_ID___x290", scope: !5448, file: !3, line: 297, type: !234)
!5462 = !DILocation(line: 297, column: 14, scope: !5448)
!5463 = !DILocation(line: 340, column: 14, scope: !5442, inlinedAt: !5447)
!5464 = !DILocation(line: 338, column: 2, scope: !5442, inlinedAt: !5447)
!5465 = !{i32 353560}
!5466 = !DILocation(line: 351, column: 9, scope: !5442, inlinedAt: !5447)
!5467 = !DILocation(line: 351, column: 11, scope: !5442, inlinedAt: !5447)
!5468 = !DILocalVariable(name: "__UNIQUE_ID___y291", scope: !5448, file: !3, line: 297, type: !234)
!5469 = !DILocation(line: 297, column: 61, scope: !5416)
!5470 = !DILocation(line: 299, column: 6, scope: !5471)
!5471 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 299, column: 6)
!5472 = !DILocation(line: 299, column: 12, scope: !5471)
!5473 = !DILocation(line: 299, column: 6, scope: !5416)
!5474 = !DILocation(line: 300, column: 9, scope: !5471)
!5475 = !DILocation(line: 300, column: 3, scope: !5471)
!5476 = !DILocation(line: 302, column: 2, scope: !5416)
!5477 = !DILocation(line: 302, column: 2, scope: !5440)
!5478 = !DILocalVariable(name: "__dummy", scope: !5479, file: !3, line: 302, type: !388)
!5479 = distinct !DILexicalBlock(scope: !5439, file: !3, line: 302, column: 2)
!5480 = !DILocation(line: 302, column: 2, scope: !5479)
!5481 = !DILocalVariable(name: "__dummy2", scope: !5479, file: !3, line: 302, type: !388)
!5482 = !DILocation(line: 302, column: 2, scope: !5439)
!5483 = !DILocation(line: 302, column: 2, scope: !5438)
!5484 = !DILocation(line: 302, column: 2, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5438, file: !3, line: 302, column: 2)
!5486 = !DILocalVariable(name: "__dummy", scope: !5487, file: !3, line: 302, type: !388)
!5487 = distinct !DILexicalBlock(scope: !5488, file: !3, line: 302, column: 2)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 302, column: 2)
!5489 = !DILocation(line: 302, column: 2, scope: !5487)
!5490 = !DILocalVariable(name: "__dummy2", scope: !5487, file: !3, line: 302, type: !388)
!5491 = !DILocation(line: 302, column: 2, scope: !5488)
!5492 = !DILocation(line: 302, column: 2, scope: !5437)
!5493 = !{i32 -2140587772}
!5494 = !DILocation(line: 302, column: 2, scope: !5436)
!5495 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !5435)
!5496 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !5435)
!5497 = !DILocation(line: 304, column: 2, scope: !5416)
!5498 = !DILocation(line: 304, column: 9, scope: !5416)
!5499 = !DILocation(line: 304, column: 18, scope: !5416)
!5500 = !DILocation(line: 305, column: 2, scope: !5416)
!5501 = !DILocation(line: 305, column: 9, scope: !5416)
!5502 = !DILocation(line: 305, column: 30, scope: !5416)
!5503 = !DILocation(line: 305, column: 36, scope: !5416)
!5504 = !DILocation(line: 307, column: 18, scope: !5416)
!5505 = !DILocation(line: 307, column: 24, scope: !5416)
!5506 = !DILocation(line: 307, column: 2, scope: !5416)
!5507 = !DILocation(line: 307, column: 9, scope: !5416)
!5508 = !DILocation(line: 307, column: 15, scope: !5416)
!5509 = !DILocation(line: 308, column: 7, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 308, column: 6)
!5511 = !DILocation(line: 308, column: 13, scope: !5510)
!5512 = !DILocation(line: 308, column: 6, scope: !5510)
!5513 = !DILocation(line: 308, column: 21, scope: !5510)
!5514 = !DILocation(line: 309, column: 7, scope: !5510)
!5515 = !DILocation(line: 309, column: 13, scope: !5510)
!5516 = !DILocation(line: 309, column: 23, scope: !5510)
!5517 = !DILocation(line: 309, column: 29, scope: !5510)
!5518 = !DILocation(line: 309, column: 20, scope: !5510)
!5519 = !DILocation(line: 308, column: 6, scope: !5416)
!5520 = !DILocation(line: 310, column: 22, scope: !5510)
!5521 = !DILocation(line: 310, column: 28, scope: !5510)
!5522 = !DILocation(line: 310, column: 3, scope: !5510)
!5523 = !DILocation(line: 310, column: 10, scope: !5510)
!5524 = !DILocation(line: 310, column: 19, scope: !5510)
!5525 = !DILocation(line: 311, column: 7, scope: !5526)
!5526 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 311, column: 6)
!5527 = !DILocation(line: 311, column: 13, scope: !5526)
!5528 = !DILocation(line: 311, column: 6, scope: !5526)
!5529 = !DILocation(line: 311, column: 21, scope: !5526)
!5530 = !DILocation(line: 312, column: 7, scope: !5526)
!5531 = !DILocation(line: 312, column: 13, scope: !5526)
!5532 = !DILocation(line: 312, column: 23, scope: !5526)
!5533 = !DILocation(line: 312, column: 29, scope: !5526)
!5534 = !DILocation(line: 312, column: 20, scope: !5526)
!5535 = !DILocation(line: 311, column: 6, scope: !5416)
!5536 = !DILocation(line: 313, column: 22, scope: !5526)
!5537 = !DILocation(line: 313, column: 28, scope: !5526)
!5538 = !DILocation(line: 313, column: 3, scope: !5526)
!5539 = !DILocation(line: 313, column: 10, scope: !5526)
!5540 = !DILocation(line: 313, column: 19, scope: !5526)
!5541 = !DILocation(line: 315, column: 26, scope: !5416)
!5542 = !DILocation(line: 315, column: 33, scope: !5416)
!5543 = !DILocation(line: 315, column: 39, scope: !5416)
!5544 = !DILocalVariable(name: "__dummy", scope: !5545, file: !5422, line: 409, type: !388)
!5545 = distinct !DILexicalBlock(scope: !5546, file: !5422, line: 409, column: 2)
!5546 = distinct !DILexicalBlock(scope: !5421, file: !5422, line: 409, column: 2)
!5547 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !5426)
!5548 = !DILocalVariable(name: "__dummy2", scope: !5545, file: !5422, line: 409, type: !388)
!5549 = !DILocalVariable(name: "__dummy", scope: !5550, file: !5422, line: 409, type: !388)
!5550 = distinct !DILexicalBlock(scope: !5551, file: !5422, line: 409, column: 2)
!5551 = distinct !DILexicalBlock(scope: !5552, file: !5422, line: 409, column: 2)
!5552 = distinct !DILexicalBlock(scope: !5553, file: !5422, line: 409, column: 2)
!5553 = distinct !DILexicalBlock(scope: !5546, file: !5422, line: 409, column: 2)
!5554 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !5426)
!5555 = !DILocalVariable(name: "__dummy2", scope: !5550, file: !5422, line: 409, type: !388)
!5556 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !5426)
!5557 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !5426)
!5558 = distinct !DILexicalBlock(scope: !5553, file: !5422, line: 409, column: 2)
!5559 = !{i32 -2145182837}
!5560 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !5426)
!5561 = distinct !DILexicalBlock(scope: !5558, file: !5422, line: 409, column: 2)
!5562 = !DILocation(line: 316, column: 1, scope: !5416)
!5563 = distinct !DISubprogram(name: "arch_local_irq_save", scope: !5564, file: !5564, line: 666, type: !5565, scopeLine: 667, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5564 = !DIFile(filename: "./arch/x86/include/asm/paravirt.h", directory: "/home/lizy2001/genbc/linux")
!5565 = !DISubroutineType(types: !5566)
!5566 = !{!388}
!5567 = !DILocalVariable(name: "f", scope: !5563, file: !5564, line: 668, type: !388)
!5568 = !DILocation(line: 668, column: 16, scope: !5563)
!5569 = !DILocation(line: 670, column: 6, scope: !5563)
!5570 = !DILocation(line: 670, column: 4, scope: !5563)
!5571 = !DILocation(line: 671, column: 2, scope: !5563)
!5572 = !DILocation(line: 672, column: 9, scope: !5563)
!5573 = !DILocation(line: 672, column: 2, scope: !5563)
!5574 = distinct !DISubprogram(name: "spi_get_device_id", scope: !3, file: !3, line: 334, type: !5575, scopeLine: 335, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5575 = !DISubroutineType(types: !5576)
!5576 = !{!5180, !5577}
!5577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5578, size: 64)
!5578 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4533)
!5579 = !DILocalVariable(name: "sdev", arg: 1, scope: !5574, file: !3, line: 334, type: !5577)
!5580 = !DILocation(line: 334, column: 72, scope: !5574)
!5581 = !DILocalVariable(name: "sdrv", scope: !5574, file: !3, line: 336, type: !5582)
!5582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5583, size: 64)
!5583 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5177)
!5584 = !DILocation(line: 336, column: 27, scope: !5574)
!5585 = !DILocation(line: 336, column: 48, scope: !5574)
!5586 = !DILocation(line: 336, column: 54, scope: !5574)
!5587 = !DILocation(line: 336, column: 58, scope: !5574)
!5588 = !DILocation(line: 336, column: 34, scope: !5574)
!5589 = !DILocation(line: 338, column: 22, scope: !5574)
!5590 = !DILocation(line: 338, column: 28, scope: !5574)
!5591 = !DILocation(line: 338, column: 38, scope: !5574)
!5592 = !DILocation(line: 338, column: 9, scope: !5574)
!5593 = !DILocation(line: 338, column: 2, scope: !5574)
!5594 = distinct !DISubprogram(name: "to_spi_driver", scope: !4514, file: !4514, line: 286, type: !5595, scopeLine: 287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5595 = !DISubroutineType(types: !5596)
!5596 = !{!5176, !3577}
!5597 = !DILocalVariable(name: "drv", arg: 1, scope: !5594, file: !4514, line: 286, type: !3577)
!5598 = !DILocation(line: 286, column: 70, scope: !5594)
!5599 = !DILocation(line: 288, column: 9, scope: !5594)
!5600 = !DILocalVariable(name: "__mptr", scope: !5601, file: !4514, line: 288, type: !228)
!5601 = distinct !DILexicalBlock(scope: !5594, file: !4514, line: 288, column: 15)
!5602 = !DILocation(line: 288, column: 15, scope: !5601)
!5603 = !DILocation(line: 288, column: 15, scope: !5604)
!5604 = distinct !DILexicalBlock(scope: !5601, file: !4514, line: 288, column: 15)
!5605 = !DILocation(line: 288, column: 2, scope: !5594)
!5606 = distinct !DISubprogram(name: "spi_match_id", scope: !3, file: !3, line: 323, type: !5607, scopeLine: 325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5607 = !DISubroutineType(types: !5608)
!5608 = !{!5180, !5180, !5577}
!5609 = !DILocalVariable(name: "id", arg: 1, scope: !5606, file: !3, line: 323, type: !5180)
!5610 = !DILocation(line: 323, column: 77, scope: !5606)
!5611 = !DILocalVariable(name: "sdev", arg: 2, scope: !5606, file: !3, line: 324, type: !5577)
!5612 = !DILocation(line: 324, column: 32, scope: !5606)
!5613 = !DILocation(line: 326, column: 2, scope: !5606)
!5614 = !DILocation(line: 326, column: 9, scope: !5606)
!5615 = !DILocation(line: 326, column: 13, scope: !5606)
!5616 = !DILocation(line: 327, column: 15, scope: !5617)
!5617 = distinct !DILexicalBlock(scope: !5618, file: !3, line: 327, column: 7)
!5618 = distinct !DILexicalBlock(scope: !5606, file: !3, line: 326, column: 22)
!5619 = !DILocation(line: 327, column: 21, scope: !5617)
!5620 = !DILocation(line: 327, column: 31, scope: !5617)
!5621 = !DILocation(line: 327, column: 35, scope: !5617)
!5622 = !DILocation(line: 327, column: 8, scope: !5617)
!5623 = !DILocation(line: 327, column: 7, scope: !5618)
!5624 = !DILocation(line: 328, column: 11, scope: !5617)
!5625 = !DILocation(line: 328, column: 4, scope: !5617)
!5626 = !DILocation(line: 329, column: 5, scope: !5618)
!5627 = distinct !{!5627, !5613, !5628}
!5628 = !DILocation(line: 330, column: 2, scope: !5606)
!5629 = !DILocation(line: 331, column: 2, scope: !5606)
!5630 = !DILocation(line: 332, column: 1, scope: !5606)
!5631 = distinct !DISubprogram(name: "spi_match_device", scope: !3, file: !3, line: 342, type: !3575, scopeLine: 343, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5632 = !DILocalVariable(name: "dev", arg: 1, scope: !5631, file: !3, line: 342, type: !3506)
!5633 = !DILocation(line: 342, column: 44, scope: !5631)
!5634 = !DILocalVariable(name: "drv", arg: 2, scope: !5631, file: !3, line: 342, type: !3577)
!5635 = !DILocation(line: 342, column: 71, scope: !5631)
!5636 = !DILocalVariable(name: "spi", scope: !5631, file: !3, line: 344, type: !5577)
!5637 = !DILocation(line: 344, column: 27, scope: !5631)
!5638 = !DILocation(line: 344, column: 47, scope: !5631)
!5639 = !DILocation(line: 344, column: 33, scope: !5631)
!5640 = !DILocalVariable(name: "sdrv", scope: !5631, file: !3, line: 345, type: !5582)
!5641 = !DILocation(line: 345, column: 27, scope: !5631)
!5642 = !DILocation(line: 345, column: 48, scope: !5631)
!5643 = !DILocation(line: 345, column: 34, scope: !5631)
!5644 = !DILocation(line: 348, column: 6, scope: !5645)
!5645 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 348, column: 6)
!5646 = !DILocation(line: 348, column: 11, scope: !5645)
!5647 = !DILocation(line: 348, column: 6, scope: !5631)
!5648 = !DILocation(line: 349, column: 17, scope: !5645)
!5649 = !DILocation(line: 349, column: 22, scope: !5645)
!5650 = !DILocation(line: 349, column: 39, scope: !5645)
!5651 = !DILocation(line: 349, column: 44, scope: !5645)
!5652 = !DILocation(line: 349, column: 10, scope: !5645)
!5653 = !DILocation(line: 349, column: 50, scope: !5645)
!5654 = !DILocation(line: 349, column: 3, scope: !5645)
!5655 = !DILocation(line: 352, column: 29, scope: !5656)
!5656 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 352, column: 6)
!5657 = !DILocation(line: 352, column: 34, scope: !5656)
!5658 = !DILocation(line: 352, column: 6, scope: !5656)
!5659 = !DILocation(line: 352, column: 6, scope: !5631)
!5660 = !DILocation(line: 353, column: 3, scope: !5656)
!5661 = !DILocation(line: 356, column: 31, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 356, column: 6)
!5663 = !DILocation(line: 356, column: 36, scope: !5662)
!5664 = !DILocation(line: 356, column: 6, scope: !5662)
!5665 = !DILocation(line: 356, column: 6, scope: !5631)
!5666 = !DILocation(line: 357, column: 3, scope: !5662)
!5667 = !DILocation(line: 359, column: 6, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5631, file: !3, line: 359, column: 6)
!5669 = !DILocation(line: 359, column: 12, scope: !5668)
!5670 = !DILocation(line: 359, column: 6, scope: !5631)
!5671 = !DILocation(line: 360, column: 25, scope: !5668)
!5672 = !DILocation(line: 360, column: 31, scope: !5668)
!5673 = !DILocation(line: 360, column: 41, scope: !5668)
!5674 = !DILocation(line: 360, column: 12, scope: !5668)
!5675 = !DILocation(line: 360, column: 11, scope: !5668)
!5676 = !DILocation(line: 360, column: 10, scope: !5668)
!5677 = !DILocation(line: 360, column: 3, scope: !5668)
!5678 = !DILocation(line: 362, column: 16, scope: !5631)
!5679 = !DILocation(line: 362, column: 21, scope: !5631)
!5680 = !DILocation(line: 362, column: 31, scope: !5631)
!5681 = !DILocation(line: 362, column: 36, scope: !5631)
!5682 = !DILocation(line: 362, column: 9, scope: !5631)
!5683 = !DILocation(line: 362, column: 42, scope: !5631)
!5684 = !DILocation(line: 362, column: 2, scope: !5631)
!5685 = !DILocation(line: 363, column: 1, scope: !5631)
!5686 = distinct !DISubprogram(name: "spi_uevent", scope: !3, file: !3, line: 365, type: !3520, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5687 = !DILocalVariable(name: "dev", arg: 1, scope: !5686, file: !3, line: 365, type: !3506)
!5688 = !DILocation(line: 365, column: 38, scope: !5686)
!5689 = !DILocalVariable(name: "env", arg: 2, scope: !5686, file: !3, line: 365, type: !333)
!5690 = !DILocation(line: 365, column: 67, scope: !5686)
!5691 = !DILocalVariable(name: "spi", scope: !5686, file: !3, line: 367, type: !5577)
!5692 = !DILocation(line: 367, column: 28, scope: !5686)
!5693 = !DILocation(line: 367, column: 48, scope: !5686)
!5694 = !DILocation(line: 367, column: 34, scope: !5686)
!5695 = !DILocalVariable(name: "rc", scope: !5686, file: !3, line: 368, type: !234)
!5696 = !DILocation(line: 368, column: 6, scope: !5686)
!5697 = !DILocation(line: 370, column: 35, scope: !5686)
!5698 = !DILocation(line: 370, column: 40, scope: !5686)
!5699 = !DILocation(line: 370, column: 7, scope: !5686)
!5700 = !DILocation(line: 370, column: 5, scope: !5686)
!5701 = !DILocation(line: 371, column: 6, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5686, file: !3, line: 371, column: 6)
!5703 = !DILocation(line: 371, column: 9, scope: !5702)
!5704 = !DILocation(line: 371, column: 6, scope: !5686)
!5705 = !DILocation(line: 372, column: 10, scope: !5702)
!5706 = !DILocation(line: 372, column: 3, scope: !5702)
!5707 = !DILocation(line: 374, column: 24, scope: !5686)
!5708 = !DILocation(line: 374, column: 65, scope: !5686)
!5709 = !DILocation(line: 374, column: 70, scope: !5686)
!5710 = !DILocation(line: 374, column: 9, scope: !5686)
!5711 = !DILocation(line: 374, column: 2, scope: !5686)
!5712 = !DILocation(line: 375, column: 1, scope: !5686)
!5713 = distinct !DISubprogram(name: "__spi_register_driver", scope: !3, file: !3, line: 441, type: !5714, scopeLine: 442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5714 = !DISubroutineType(types: !5715)
!5715 = !{!234, !695, !5176}
!5716 = !DILocalVariable(name: "owner", arg: 1, scope: !5713, file: !3, line: 441, type: !695)
!5717 = !DILocation(line: 441, column: 42, scope: !5713)
!5718 = !DILocalVariable(name: "sdrv", arg: 2, scope: !5713, file: !3, line: 441, type: !5176)
!5719 = !DILocation(line: 441, column: 68, scope: !5713)
!5720 = !DILocation(line: 443, column: 23, scope: !5713)
!5721 = !DILocation(line: 443, column: 2, scope: !5713)
!5722 = !DILocation(line: 443, column: 8, scope: !5713)
!5723 = !DILocation(line: 443, column: 15, scope: !5713)
!5724 = !DILocation(line: 443, column: 21, scope: !5713)
!5725 = !DILocation(line: 444, column: 2, scope: !5713)
!5726 = !DILocation(line: 444, column: 8, scope: !5713)
!5727 = !DILocation(line: 444, column: 15, scope: !5713)
!5728 = !DILocation(line: 444, column: 19, scope: !5713)
!5729 = !DILocation(line: 445, column: 6, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 445, column: 6)
!5731 = !DILocation(line: 445, column: 12, scope: !5730)
!5732 = !DILocation(line: 445, column: 6, scope: !5713)
!5733 = !DILocation(line: 446, column: 3, scope: !5730)
!5734 = !DILocation(line: 446, column: 9, scope: !5730)
!5735 = !DILocation(line: 446, column: 16, scope: !5730)
!5736 = !DILocation(line: 446, column: 22, scope: !5730)
!5737 = !DILocation(line: 447, column: 6, scope: !5738)
!5738 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 447, column: 6)
!5739 = !DILocation(line: 447, column: 12, scope: !5738)
!5740 = !DILocation(line: 447, column: 6, scope: !5713)
!5741 = !DILocation(line: 448, column: 3, scope: !5738)
!5742 = !DILocation(line: 448, column: 9, scope: !5738)
!5743 = !DILocation(line: 448, column: 16, scope: !5738)
!5744 = !DILocation(line: 448, column: 23, scope: !5738)
!5745 = !DILocation(line: 449, column: 6, scope: !5746)
!5746 = distinct !DILexicalBlock(scope: !5713, file: !3, line: 449, column: 6)
!5747 = !DILocation(line: 449, column: 12, scope: !5746)
!5748 = !DILocation(line: 449, column: 6, scope: !5713)
!5749 = !DILocation(line: 450, column: 3, scope: !5746)
!5750 = !DILocation(line: 450, column: 9, scope: !5746)
!5751 = !DILocation(line: 450, column: 16, scope: !5746)
!5752 = !DILocation(line: 450, column: 25, scope: !5746)
!5753 = !DILocation(line: 451, column: 26, scope: !5713)
!5754 = !DILocation(line: 451, column: 32, scope: !5713)
!5755 = !DILocation(line: 451, column: 9, scope: !5713)
!5756 = !DILocation(line: 451, column: 2, scope: !5713)
!5757 = distinct !DISubprogram(name: "spi_drv_probe", scope: !3, file: !3, line: 386, type: !3538, scopeLine: 387, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5758 = !DILocalVariable(name: "dev", arg: 1, scope: !5757, file: !3, line: 386, type: !3506)
!5759 = !DILocation(line: 386, column: 41, scope: !5757)
!5760 = !DILocalVariable(name: "sdrv", scope: !5757, file: !3, line: 388, type: !5582)
!5761 = !DILocation(line: 388, column: 28, scope: !5757)
!5762 = !DILocation(line: 388, column: 49, scope: !5757)
!5763 = !DILocation(line: 388, column: 54, scope: !5757)
!5764 = !DILocation(line: 388, column: 35, scope: !5757)
!5765 = !DILocalVariable(name: "spi", scope: !5757, file: !3, line: 389, type: !4532)
!5766 = !DILocation(line: 389, column: 22, scope: !5757)
!5767 = !DILocation(line: 389, column: 42, scope: !5757)
!5768 = !DILocation(line: 389, column: 28, scope: !5757)
!5769 = !DILocalVariable(name: "ret", scope: !5757, file: !3, line: 390, type: !234)
!5770 = !DILocation(line: 390, column: 6, scope: !5757)
!5771 = !DILocation(line: 392, column: 28, scope: !5757)
!5772 = !DILocation(line: 392, column: 33, scope: !5757)
!5773 = !DILocation(line: 392, column: 8, scope: !5757)
!5774 = !DILocation(line: 392, column: 6, scope: !5757)
!5775 = !DILocation(line: 393, column: 6, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 393, column: 6)
!5777 = !DILocation(line: 393, column: 6, scope: !5757)
!5778 = !DILocation(line: 394, column: 10, scope: !5776)
!5779 = !DILocation(line: 394, column: 3, scope: !5776)
!5780 = !DILocation(line: 396, column: 6, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 396, column: 6)
!5782 = !DILocation(line: 396, column: 11, scope: !5781)
!5783 = !DILocation(line: 396, column: 6, scope: !5757)
!5784 = !DILocation(line: 397, column: 25, scope: !5785)
!5785 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 396, column: 20)
!5786 = !DILocation(line: 397, column: 30, scope: !5785)
!5787 = !DILocation(line: 397, column: 14, scope: !5785)
!5788 = !DILocation(line: 397, column: 3, scope: !5785)
!5789 = !DILocation(line: 397, column: 8, scope: !5785)
!5790 = !DILocation(line: 397, column: 12, scope: !5785)
!5791 = !DILocation(line: 398, column: 7, scope: !5792)
!5792 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 398, column: 7)
!5793 = !DILocation(line: 398, column: 12, scope: !5792)
!5794 = !DILocation(line: 398, column: 16, scope: !5792)
!5795 = !DILocation(line: 398, column: 7, scope: !5785)
!5796 = !DILocation(line: 399, column: 4, scope: !5792)
!5797 = !DILocation(line: 400, column: 7, scope: !5798)
!5798 = distinct !DILexicalBlock(scope: !5785, file: !3, line: 400, column: 7)
!5799 = !DILocation(line: 400, column: 12, scope: !5798)
!5800 = !DILocation(line: 400, column: 16, scope: !5798)
!5801 = !DILocation(line: 400, column: 7, scope: !5785)
!5802 = !DILocation(line: 401, column: 4, scope: !5798)
!5803 = !DILocation(line: 401, column: 9, scope: !5798)
!5804 = !DILocation(line: 401, column: 13, scope: !5798)
!5805 = !DILocation(line: 402, column: 2, scope: !5785)
!5806 = !DILocation(line: 404, column: 29, scope: !5757)
!5807 = !DILocation(line: 404, column: 8, scope: !5757)
!5808 = !DILocation(line: 404, column: 6, scope: !5757)
!5809 = !DILocation(line: 405, column: 6, scope: !5810)
!5810 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 405, column: 6)
!5811 = !DILocation(line: 405, column: 6, scope: !5757)
!5812 = !DILocation(line: 406, column: 10, scope: !5810)
!5813 = !DILocation(line: 406, column: 3, scope: !5810)
!5814 = !DILocation(line: 408, column: 8, scope: !5757)
!5815 = !DILocation(line: 408, column: 14, scope: !5757)
!5816 = !DILocation(line: 408, column: 20, scope: !5757)
!5817 = !DILocation(line: 408, column: 6, scope: !5757)
!5818 = !DILocation(line: 409, column: 6, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5757, file: !3, line: 409, column: 6)
!5820 = !DILocation(line: 409, column: 6, scope: !5757)
!5821 = !DILocation(line: 410, column: 24, scope: !5819)
!5822 = !DILocation(line: 410, column: 3, scope: !5819)
!5823 = !DILocation(line: 412, column: 9, scope: !5757)
!5824 = !DILocation(line: 412, column: 2, scope: !5757)
!5825 = !DILocation(line: 413, column: 1, scope: !5757)
!5826 = distinct !DISubprogram(name: "spi_drv_remove", scope: !3, file: !3, line: 415, type: !3538, scopeLine: 416, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5827 = !DILocalVariable(name: "dev", arg: 1, scope: !5826, file: !3, line: 415, type: !3506)
!5828 = !DILocation(line: 415, column: 42, scope: !5826)
!5829 = !DILocalVariable(name: "sdrv", scope: !5826, file: !3, line: 417, type: !5582)
!5830 = !DILocation(line: 417, column: 28, scope: !5826)
!5831 = !DILocation(line: 417, column: 49, scope: !5826)
!5832 = !DILocation(line: 417, column: 54, scope: !5826)
!5833 = !DILocation(line: 417, column: 35, scope: !5826)
!5834 = !DILocalVariable(name: "ret", scope: !5826, file: !3, line: 418, type: !234)
!5835 = !DILocation(line: 418, column: 6, scope: !5826)
!5836 = !DILocation(line: 420, column: 8, scope: !5826)
!5837 = !DILocation(line: 420, column: 14, scope: !5826)
!5838 = !DILocation(line: 420, column: 35, scope: !5826)
!5839 = !DILocation(line: 420, column: 21, scope: !5826)
!5840 = !DILocation(line: 420, column: 6, scope: !5826)
!5841 = !DILocation(line: 421, column: 23, scope: !5826)
!5842 = !DILocation(line: 421, column: 2, scope: !5826)
!5843 = !DILocation(line: 423, column: 9, scope: !5826)
!5844 = !DILocation(line: 423, column: 2, scope: !5826)
!5845 = distinct !DISubprogram(name: "spi_drv_shutdown", scope: !3, file: !3, line: 426, type: !3529, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5846 = !DILocalVariable(name: "dev", arg: 1, scope: !5845, file: !3, line: 426, type: !3506)
!5847 = !DILocation(line: 426, column: 45, scope: !5845)
!5848 = !DILocalVariable(name: "sdrv", scope: !5845, file: !3, line: 428, type: !5582)
!5849 = !DILocation(line: 428, column: 28, scope: !5845)
!5850 = !DILocation(line: 428, column: 49, scope: !5845)
!5851 = !DILocation(line: 428, column: 54, scope: !5845)
!5852 = !DILocation(line: 428, column: 35, scope: !5845)
!5853 = !DILocation(line: 430, column: 2, scope: !5845)
!5854 = !DILocation(line: 430, column: 8, scope: !5845)
!5855 = !DILocation(line: 430, column: 31, scope: !5845)
!5856 = !DILocation(line: 430, column: 17, scope: !5845)
!5857 = !DILocation(line: 431, column: 1, scope: !5845)
!5858 = distinct !DISubprogram(name: "spi_alloc_device", scope: !3, file: !3, line: 501, type: !5859, scopeLine: 502, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5859 = !DISubroutineType(types: !5860)
!5860 = !{!4532, !4512}
!5861 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !5862)
!5862 = distinct !DILocation(line: 521, column: 2, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 521, column: 2)
!5864 = !DILocalVariable(name: "ctlr", arg: 1, scope: !5858, file: !3, line: 501, type: !4512)
!5865 = !DILocation(line: 501, column: 60, scope: !5858)
!5866 = !DILocalVariable(name: "spi", scope: !5858, file: !3, line: 503, type: !4532)
!5867 = !DILocation(line: 503, column: 21, scope: !5858)
!5868 = !DILocation(line: 505, column: 26, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 505, column: 6)
!5870 = !DILocation(line: 505, column: 7, scope: !5869)
!5871 = !DILocation(line: 505, column: 6, scope: !5858)
!5872 = !DILocation(line: 506, column: 3, scope: !5869)
!5873 = !DILocation(line: 508, column: 8, scope: !5858)
!5874 = !DILocation(line: 508, column: 6, scope: !5858)
!5875 = !DILocation(line: 509, column: 7, scope: !5876)
!5876 = distinct !DILexicalBlock(scope: !5858, file: !3, line: 509, column: 6)
!5877 = !DILocation(line: 509, column: 6, scope: !5858)
!5878 = !DILocation(line: 510, column: 22, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5876, file: !3, line: 509, column: 12)
!5880 = !DILocation(line: 510, column: 3, scope: !5879)
!5881 = !DILocation(line: 511, column: 3, scope: !5879)
!5882 = !DILocation(line: 514, column: 34, scope: !5858)
!5883 = !DILocation(line: 514, column: 16, scope: !5858)
!5884 = !DILocation(line: 514, column: 21, scope: !5858)
!5885 = !DILocation(line: 514, column: 32, scope: !5858)
!5886 = !DILocation(line: 514, column: 2, scope: !5858)
!5887 = !DILocation(line: 514, column: 7, scope: !5858)
!5888 = !DILocation(line: 514, column: 14, scope: !5858)
!5889 = !DILocation(line: 515, column: 21, scope: !5858)
!5890 = !DILocation(line: 515, column: 27, scope: !5858)
!5891 = !DILocation(line: 515, column: 2, scope: !5858)
!5892 = !DILocation(line: 515, column: 7, scope: !5858)
!5893 = !DILocation(line: 515, column: 11, scope: !5858)
!5894 = !DILocation(line: 515, column: 18, scope: !5858)
!5895 = !DILocation(line: 516, column: 2, scope: !5858)
!5896 = !DILocation(line: 516, column: 7, scope: !5858)
!5897 = !DILocation(line: 516, column: 11, scope: !5858)
!5898 = !DILocation(line: 516, column: 15, scope: !5858)
!5899 = !DILocation(line: 517, column: 2, scope: !5858)
!5900 = !DILocation(line: 517, column: 7, scope: !5858)
!5901 = !DILocation(line: 517, column: 11, scope: !5858)
!5902 = !DILocation(line: 517, column: 19, scope: !5858)
!5903 = !DILocation(line: 518, column: 2, scope: !5858)
!5904 = !DILocation(line: 518, column: 7, scope: !5858)
!5905 = !DILocation(line: 518, column: 15, scope: !5858)
!5906 = !DILocation(line: 519, column: 14, scope: !5858)
!5907 = !DILocation(line: 519, column: 20, scope: !5858)
!5908 = !DILocation(line: 519, column: 2, scope: !5858)
!5909 = !DILocation(line: 519, column: 7, scope: !5858)
!5910 = !DILocation(line: 519, column: 12, scope: !5858)
!5911 = !DILocation(line: 521, column: 2, scope: !5858)
!5912 = !DILocation(line: 521, column: 2, scope: !5863)
!5913 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !5862)
!5914 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !5862)
!5915 = !DILocation(line: 523, column: 21, scope: !5858)
!5916 = !DILocation(line: 523, column: 26, scope: !5858)
!5917 = !DILocation(line: 523, column: 2, scope: !5858)
!5918 = !DILocation(line: 524, column: 9, scope: !5858)
!5919 = !DILocation(line: 524, column: 2, scope: !5858)
!5920 = !DILocation(line: 525, column: 1, scope: !5858)
!5921 = distinct !DISubprogram(name: "spi_controller_get", scope: !4514, file: !4514, line: 683, type: !5922, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5922 = !DISubroutineType(types: !5923)
!5923 = !{!4512, !4512}
!5924 = !DILocalVariable(name: "ctlr", arg: 1, scope: !5921, file: !4514, line: 683, type: !4512)
!5925 = !DILocation(line: 683, column: 80, scope: !5921)
!5926 = !DILocation(line: 685, column: 7, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5921, file: !4514, line: 685, column: 6)
!5928 = !DILocation(line: 685, column: 12, scope: !5927)
!5929 = !DILocation(line: 685, column: 28, scope: !5927)
!5930 = !DILocation(line: 685, column: 34, scope: !5927)
!5931 = !DILocation(line: 685, column: 16, scope: !5927)
!5932 = !DILocation(line: 685, column: 6, scope: !5921)
!5933 = !DILocation(line: 686, column: 3, scope: !5927)
!5934 = !DILocation(line: 687, column: 9, scope: !5921)
!5935 = !DILocation(line: 687, column: 2, scope: !5921)
!5936 = !DILocation(line: 688, column: 1, scope: !5921)
!5937 = distinct !DISubprogram(name: "kzalloc", scope: !219, file: !219, line: 662, type: !5938, scopeLine: 663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5938 = !DISubroutineType(types: !5939)
!5939 = !{!228, !385, !226}
!5940 = !DILocalVariable(name: "s", arg: 1, scope: !5941, file: !219, line: 445, type: !1082)
!5941 = distinct !DISubprogram(name: "kmem_cache_alloc_trace", scope: !219, file: !219, line: 445, type: !5942, scopeLine: 447, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5942 = !DISubroutineType(types: !5943)
!5943 = !{!228, !1082, !226, !385}
!5944 = !DILocation(line: 445, column: 72, scope: !5941, inlinedAt: !5945)
!5945 = distinct !DILocation(line: 552, column: 10, scope: !5946, inlinedAt: !5949)
!5946 = distinct !DILexicalBlock(scope: !5947, file: !219, line: 540, column: 34)
!5947 = distinct !DILexicalBlock(scope: !5948, file: !219, line: 540, column: 6)
!5948 = distinct !DISubprogram(name: "kmalloc", scope: !219, file: !219, line: 538, type: !5938, scopeLine: 539, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5949 = distinct !DILocation(line: 664, column: 9, scope: !5937)
!5950 = !DILocalVariable(name: "flags", arg: 2, scope: !5941, file: !219, line: 446, type: !226)
!5951 = !DILocation(line: 446, column: 9, scope: !5941, inlinedAt: !5945)
!5952 = !DILocalVariable(name: "size", arg: 3, scope: !5941, file: !219, line: 446, type: !385)
!5953 = !DILocation(line: 446, column: 23, scope: !5941, inlinedAt: !5945)
!5954 = !DILocalVariable(name: "ret", scope: !5941, file: !219, line: 448, type: !228)
!5955 = !DILocation(line: 448, column: 8, scope: !5941, inlinedAt: !5945)
!5956 = !DILocalVariable(name: "flags", arg: 1, scope: !5957, file: !219, line: 318, type: !226)
!5957 = distinct !DISubprogram(name: "kmalloc_type", scope: !219, file: !219, line: 318, type: !5958, scopeLine: 319, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5958 = !DISubroutineType(types: !5959)
!5959 = !{!218, !226}
!5960 = !DILocation(line: 318, column: 67, scope: !5957, inlinedAt: !5961)
!5961 = distinct !DILocation(line: 553, column: 20, scope: !5946, inlinedAt: !5949)
!5962 = !DILocalVariable(name: "size", arg: 1, scope: !5963, file: !219, line: 346, type: !385)
!5963 = distinct !DISubprogram(name: "kmalloc_index", scope: !219, file: !219, line: 346, type: !5964, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5964 = !DISubroutineType(types: !5965)
!5965 = !{!7, !385}
!5966 = !DILocation(line: 346, column: 58, scope: !5963, inlinedAt: !5967)
!5967 = distinct !DILocation(line: 547, column: 11, scope: !5946, inlinedAt: !5949)
!5968 = !DILocalVariable(name: "size", arg: 1, scope: !5969, file: !219, line: 472, type: !385)
!5969 = distinct !DISubprogram(name: "kmalloc_order_trace", scope: !219, file: !219, line: 472, type: !5970, scopeLine: 473, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5970 = !DISubroutineType(types: !5971)
!5971 = !{!228, !385, !226, !7}
!5972 = !DILocation(line: 472, column: 28, scope: !5969, inlinedAt: !5973)
!5973 = distinct !DILocation(line: 481, column: 9, scope: !5974, inlinedAt: !5975)
!5974 = distinct !DISubprogram(name: "kmalloc_large", scope: !219, file: !219, line: 478, type: !5938, scopeLine: 479, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!5975 = distinct !DILocation(line: 545, column: 11, scope: !5976, inlinedAt: !5949)
!5976 = distinct !DILexicalBlock(scope: !5946, file: !219, line: 544, column: 7)
!5977 = !DILocalVariable(name: "flags", arg: 2, scope: !5969, file: !219, line: 472, type: !226)
!5978 = !DILocation(line: 472, column: 40, scope: !5969, inlinedAt: !5973)
!5979 = !DILocalVariable(name: "order", arg: 3, scope: !5969, file: !219, line: 472, type: !7)
!5980 = !DILocation(line: 472, column: 60, scope: !5969, inlinedAt: !5973)
!5981 = !DILocalVariable(name: "size", arg: 1, scope: !5974, file: !219, line: 478, type: !385)
!5982 = !DILocation(line: 478, column: 51, scope: !5974, inlinedAt: !5975)
!5983 = !DILocalVariable(name: "flags", arg: 2, scope: !5974, file: !219, line: 478, type: !226)
!5984 = !DILocation(line: 478, column: 63, scope: !5974, inlinedAt: !5975)
!5985 = !DILocalVariable(name: "order", scope: !5974, file: !219, line: 480, type: !7)
!5986 = !DILocation(line: 480, column: 15, scope: !5974, inlinedAt: !5975)
!5987 = !DILocalVariable(name: "size", arg: 1, scope: !5948, file: !219, line: 538, type: !385)
!5988 = !DILocation(line: 538, column: 45, scope: !5948, inlinedAt: !5949)
!5989 = !DILocalVariable(name: "flags", arg: 2, scope: !5948, file: !219, line: 538, type: !226)
!5990 = !DILocation(line: 538, column: 57, scope: !5948, inlinedAt: !5949)
!5991 = !DILocalVariable(name: "index", scope: !5946, file: !219, line: 542, type: !7)
!5992 = !DILocation(line: 542, column: 16, scope: !5946, inlinedAt: !5949)
!5993 = !DILocalVariable(name: "size", arg: 1, scope: !5937, file: !219, line: 662, type: !385)
!5994 = !DILocation(line: 662, column: 36, scope: !5937)
!5995 = !DILocalVariable(name: "flags", arg: 2, scope: !5937, file: !219, line: 662, type: !226)
!5996 = !DILocation(line: 662, column: 48, scope: !5937)
!5997 = !DILocation(line: 664, column: 17, scope: !5937)
!5998 = !DILocation(line: 664, column: 23, scope: !5937)
!5999 = !DILocation(line: 664, column: 29, scope: !5937)
!6000 = !DILocation(line: 540, column: 27, scope: !5947, inlinedAt: !5949)
!6001 = !DILocation(line: 540, column: 6, scope: !5947, inlinedAt: !5949)
!6002 = !DILocation(line: 540, column: 6, scope: !5948, inlinedAt: !5949)
!6003 = !DILocation(line: 544, column: 7, scope: !5976, inlinedAt: !5949)
!6004 = !DILocation(line: 544, column: 12, scope: !5976, inlinedAt: !5949)
!6005 = !DILocation(line: 544, column: 7, scope: !5946, inlinedAt: !5949)
!6006 = !DILocation(line: 545, column: 25, scope: !5976, inlinedAt: !5949)
!6007 = !DILocation(line: 545, column: 31, scope: !5976, inlinedAt: !5949)
!6008 = !DILocation(line: 480, column: 33, scope: !5974, inlinedAt: !5975)
!6009 = !DILocation(line: 480, column: 23, scope: !5974, inlinedAt: !5975)
!6010 = !DILocation(line: 481, column: 29, scope: !5974, inlinedAt: !5975)
!6011 = !DILocation(line: 481, column: 35, scope: !5974, inlinedAt: !5975)
!6012 = !DILocation(line: 481, column: 42, scope: !5974, inlinedAt: !5975)
!6013 = !DILocation(line: 474, column: 23, scope: !5969, inlinedAt: !5973)
!6014 = !DILocation(line: 474, column: 29, scope: !5969, inlinedAt: !5973)
!6015 = !DILocation(line: 474, column: 36, scope: !5969, inlinedAt: !5973)
!6016 = !DILocation(line: 474, column: 9, scope: !5969, inlinedAt: !5973)
!6017 = !DILocation(line: 545, column: 4, scope: !5976, inlinedAt: !5949)
!6018 = !DILocation(line: 547, column: 25, scope: !5946, inlinedAt: !5949)
!6019 = !DILocation(line: 348, column: 7, scope: !6020, inlinedAt: !5967)
!6020 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 348, column: 6)
!6021 = !DILocation(line: 348, column: 6, scope: !5963, inlinedAt: !5967)
!6022 = !DILocation(line: 349, column: 3, scope: !6020, inlinedAt: !5967)
!6023 = !DILocation(line: 351, column: 6, scope: !6024, inlinedAt: !5967)
!6024 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 351, column: 6)
!6025 = !DILocation(line: 351, column: 11, scope: !6024, inlinedAt: !5967)
!6026 = !DILocation(line: 351, column: 6, scope: !5963, inlinedAt: !5967)
!6027 = !DILocation(line: 352, column: 3, scope: !6024, inlinedAt: !5967)
!6028 = !DILocation(line: 354, column: 32, scope: !6029, inlinedAt: !5967)
!6029 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 354, column: 6)
!6030 = !DILocation(line: 354, column: 37, scope: !6029, inlinedAt: !5967)
!6031 = !DILocation(line: 354, column: 42, scope: !6029, inlinedAt: !5967)
!6032 = !DILocation(line: 354, column: 45, scope: !6029, inlinedAt: !5967)
!6033 = !DILocation(line: 354, column: 50, scope: !6029, inlinedAt: !5967)
!6034 = !DILocation(line: 354, column: 6, scope: !5963, inlinedAt: !5967)
!6035 = !DILocation(line: 355, column: 3, scope: !6029, inlinedAt: !5967)
!6036 = !DILocation(line: 356, column: 32, scope: !6037, inlinedAt: !5967)
!6037 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 356, column: 6)
!6038 = !DILocation(line: 356, column: 37, scope: !6037, inlinedAt: !5967)
!6039 = !DILocation(line: 356, column: 43, scope: !6037, inlinedAt: !5967)
!6040 = !DILocation(line: 356, column: 46, scope: !6037, inlinedAt: !5967)
!6041 = !DILocation(line: 356, column: 51, scope: !6037, inlinedAt: !5967)
!6042 = !DILocation(line: 356, column: 6, scope: !5963, inlinedAt: !5967)
!6043 = !DILocation(line: 357, column: 3, scope: !6037, inlinedAt: !5967)
!6044 = !DILocation(line: 358, column: 6, scope: !6045, inlinedAt: !5967)
!6045 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 358, column: 6)
!6046 = !DILocation(line: 358, column: 11, scope: !6045, inlinedAt: !5967)
!6047 = !DILocation(line: 358, column: 6, scope: !5963, inlinedAt: !5967)
!6048 = !DILocation(line: 358, column: 26, scope: !6045, inlinedAt: !5967)
!6049 = !DILocation(line: 359, column: 6, scope: !6050, inlinedAt: !5967)
!6050 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 359, column: 6)
!6051 = !DILocation(line: 359, column: 11, scope: !6050, inlinedAt: !5967)
!6052 = !DILocation(line: 359, column: 6, scope: !5963, inlinedAt: !5967)
!6053 = !DILocation(line: 359, column: 26, scope: !6050, inlinedAt: !5967)
!6054 = !DILocation(line: 360, column: 6, scope: !6055, inlinedAt: !5967)
!6055 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 360, column: 6)
!6056 = !DILocation(line: 360, column: 11, scope: !6055, inlinedAt: !5967)
!6057 = !DILocation(line: 360, column: 6, scope: !5963, inlinedAt: !5967)
!6058 = !DILocation(line: 360, column: 26, scope: !6055, inlinedAt: !5967)
!6059 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !5967)
!6060 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 361, column: 6)
!6061 = !DILocation(line: 361, column: 11, scope: !6060, inlinedAt: !5967)
!6062 = !DILocation(line: 361, column: 6, scope: !5963, inlinedAt: !5967)
!6063 = !DILocation(line: 361, column: 26, scope: !6060, inlinedAt: !5967)
!6064 = !DILocation(line: 362, column: 6, scope: !6065, inlinedAt: !5967)
!6065 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 362, column: 6)
!6066 = !DILocation(line: 362, column: 11, scope: !6065, inlinedAt: !5967)
!6067 = !DILocation(line: 362, column: 6, scope: !5963, inlinedAt: !5967)
!6068 = !DILocation(line: 362, column: 26, scope: !6065, inlinedAt: !5967)
!6069 = !DILocation(line: 363, column: 6, scope: !6070, inlinedAt: !5967)
!6070 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 363, column: 6)
!6071 = !DILocation(line: 363, column: 11, scope: !6070, inlinedAt: !5967)
!6072 = !DILocation(line: 363, column: 6, scope: !5963, inlinedAt: !5967)
!6073 = !DILocation(line: 363, column: 26, scope: !6070, inlinedAt: !5967)
!6074 = !DILocation(line: 364, column: 6, scope: !6075, inlinedAt: !5967)
!6075 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 364, column: 6)
!6076 = !DILocation(line: 364, column: 11, scope: !6075, inlinedAt: !5967)
!6077 = !DILocation(line: 364, column: 6, scope: !5963, inlinedAt: !5967)
!6078 = !DILocation(line: 364, column: 26, scope: !6075, inlinedAt: !5967)
!6079 = !DILocation(line: 365, column: 6, scope: !6080, inlinedAt: !5967)
!6080 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 365, column: 6)
!6081 = !DILocation(line: 365, column: 11, scope: !6080, inlinedAt: !5967)
!6082 = !DILocation(line: 365, column: 6, scope: !5963, inlinedAt: !5967)
!6083 = !DILocation(line: 365, column: 26, scope: !6080, inlinedAt: !5967)
!6084 = !DILocation(line: 366, column: 6, scope: !6085, inlinedAt: !5967)
!6085 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 366, column: 6)
!6086 = !DILocation(line: 366, column: 11, scope: !6085, inlinedAt: !5967)
!6087 = !DILocation(line: 366, column: 6, scope: !5963, inlinedAt: !5967)
!6088 = !DILocation(line: 366, column: 26, scope: !6085, inlinedAt: !5967)
!6089 = !DILocation(line: 367, column: 6, scope: !6090, inlinedAt: !5967)
!6090 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 367, column: 6)
!6091 = !DILocation(line: 367, column: 11, scope: !6090, inlinedAt: !5967)
!6092 = !DILocation(line: 367, column: 6, scope: !5963, inlinedAt: !5967)
!6093 = !DILocation(line: 367, column: 26, scope: !6090, inlinedAt: !5967)
!6094 = !DILocation(line: 368, column: 6, scope: !6095, inlinedAt: !5967)
!6095 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 368, column: 6)
!6096 = !DILocation(line: 368, column: 11, scope: !6095, inlinedAt: !5967)
!6097 = !DILocation(line: 368, column: 6, scope: !5963, inlinedAt: !5967)
!6098 = !DILocation(line: 368, column: 26, scope: !6095, inlinedAt: !5967)
!6099 = !DILocation(line: 369, column: 6, scope: !6100, inlinedAt: !5967)
!6100 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 369, column: 6)
!6101 = !DILocation(line: 369, column: 11, scope: !6100, inlinedAt: !5967)
!6102 = !DILocation(line: 369, column: 6, scope: !5963, inlinedAt: !5967)
!6103 = !DILocation(line: 369, column: 26, scope: !6100, inlinedAt: !5967)
!6104 = !DILocation(line: 370, column: 6, scope: !6105, inlinedAt: !5967)
!6105 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 370, column: 6)
!6106 = !DILocation(line: 370, column: 11, scope: !6105, inlinedAt: !5967)
!6107 = !DILocation(line: 370, column: 6, scope: !5963, inlinedAt: !5967)
!6108 = !DILocation(line: 370, column: 26, scope: !6105, inlinedAt: !5967)
!6109 = !DILocation(line: 371, column: 6, scope: !6110, inlinedAt: !5967)
!6110 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 371, column: 6)
!6111 = !DILocation(line: 371, column: 11, scope: !6110, inlinedAt: !5967)
!6112 = !DILocation(line: 371, column: 6, scope: !5963, inlinedAt: !5967)
!6113 = !DILocation(line: 371, column: 26, scope: !6110, inlinedAt: !5967)
!6114 = !DILocation(line: 372, column: 6, scope: !6115, inlinedAt: !5967)
!6115 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 372, column: 6)
!6116 = !DILocation(line: 372, column: 11, scope: !6115, inlinedAt: !5967)
!6117 = !DILocation(line: 372, column: 6, scope: !5963, inlinedAt: !5967)
!6118 = !DILocation(line: 372, column: 26, scope: !6115, inlinedAt: !5967)
!6119 = !DILocation(line: 373, column: 6, scope: !6120, inlinedAt: !5967)
!6120 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 373, column: 6)
!6121 = !DILocation(line: 373, column: 11, scope: !6120, inlinedAt: !5967)
!6122 = !DILocation(line: 373, column: 6, scope: !5963, inlinedAt: !5967)
!6123 = !DILocation(line: 373, column: 26, scope: !6120, inlinedAt: !5967)
!6124 = !DILocation(line: 374, column: 6, scope: !6125, inlinedAt: !5967)
!6125 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 374, column: 6)
!6126 = !DILocation(line: 374, column: 11, scope: !6125, inlinedAt: !5967)
!6127 = !DILocation(line: 374, column: 6, scope: !5963, inlinedAt: !5967)
!6128 = !DILocation(line: 374, column: 26, scope: !6125, inlinedAt: !5967)
!6129 = !DILocation(line: 375, column: 6, scope: !6130, inlinedAt: !5967)
!6130 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 375, column: 6)
!6131 = !DILocation(line: 375, column: 11, scope: !6130, inlinedAt: !5967)
!6132 = !DILocation(line: 375, column: 6, scope: !5963, inlinedAt: !5967)
!6133 = !DILocation(line: 375, column: 27, scope: !6130, inlinedAt: !5967)
!6134 = !DILocation(line: 376, column: 6, scope: !6135, inlinedAt: !5967)
!6135 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 376, column: 6)
!6136 = !DILocation(line: 376, column: 11, scope: !6135, inlinedAt: !5967)
!6137 = !DILocation(line: 376, column: 6, scope: !5963, inlinedAt: !5967)
!6138 = !DILocation(line: 376, column: 32, scope: !6135, inlinedAt: !5967)
!6139 = !DILocation(line: 377, column: 6, scope: !6140, inlinedAt: !5967)
!6140 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 377, column: 6)
!6141 = !DILocation(line: 377, column: 11, scope: !6140, inlinedAt: !5967)
!6142 = !DILocation(line: 377, column: 6, scope: !5963, inlinedAt: !5967)
!6143 = !DILocation(line: 377, column: 32, scope: !6140, inlinedAt: !5967)
!6144 = !DILocation(line: 378, column: 6, scope: !6145, inlinedAt: !5967)
!6145 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 378, column: 6)
!6146 = !DILocation(line: 378, column: 11, scope: !6145, inlinedAt: !5967)
!6147 = !DILocation(line: 378, column: 6, scope: !5963, inlinedAt: !5967)
!6148 = !DILocation(line: 378, column: 32, scope: !6145, inlinedAt: !5967)
!6149 = !DILocation(line: 379, column: 6, scope: !6150, inlinedAt: !5967)
!6150 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 379, column: 6)
!6151 = !DILocation(line: 379, column: 11, scope: !6150, inlinedAt: !5967)
!6152 = !DILocation(line: 379, column: 6, scope: !5963, inlinedAt: !5967)
!6153 = !DILocation(line: 379, column: 33, scope: !6150, inlinedAt: !5967)
!6154 = !DILocation(line: 380, column: 6, scope: !6155, inlinedAt: !5967)
!6155 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 380, column: 6)
!6156 = !DILocation(line: 380, column: 11, scope: !6155, inlinedAt: !5967)
!6157 = !DILocation(line: 380, column: 6, scope: !5963, inlinedAt: !5967)
!6158 = !DILocation(line: 380, column: 33, scope: !6155, inlinedAt: !5967)
!6159 = !DILocation(line: 381, column: 6, scope: !6160, inlinedAt: !5967)
!6160 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 381, column: 6)
!6161 = !DILocation(line: 381, column: 11, scope: !6160, inlinedAt: !5967)
!6162 = !DILocation(line: 381, column: 6, scope: !5963, inlinedAt: !5967)
!6163 = !DILocation(line: 381, column: 33, scope: !6160, inlinedAt: !5967)
!6164 = !DILocation(line: 382, column: 2, scope: !6165, inlinedAt: !5967)
!6165 = distinct !DILexicalBlock(scope: !6166, file: !219, line: 382, column: 2)
!6166 = distinct !DILexicalBlock(scope: !5963, file: !219, line: 382, column: 2)
!6167 = !{i32 -2141882620, i32 -2141882591, i32 -2141882545, i32 -2141882487, i32 -2141882433, i32 -2141882379, i32 -2141882324, i32 -2141882293}
!6168 = !DILocation(line: 382, column: 2, scope: !6169, inlinedAt: !5967)
!6169 = distinct !DILexicalBlock(scope: !6170, file: !219, line: 382, column: 2)
!6170 = distinct !DILexicalBlock(scope: !6166, file: !219, line: 382, column: 2)
!6171 = !{i32 -2141881850, i32 -2141881843, i32 -2141881789, i32 -2141881758, i32 -2141881728}
!6172 = !DILocation(line: 382, column: 2, scope: !6170, inlinedAt: !5967)
!6173 = !DILocation(line: 386, column: 1, scope: !5963, inlinedAt: !5967)
!6174 = !DILocation(line: 547, column: 9, scope: !5946, inlinedAt: !5949)
!6175 = !DILocation(line: 549, column: 8, scope: !6176, inlinedAt: !5949)
!6176 = distinct !DILexicalBlock(scope: !5946, file: !219, line: 549, column: 7)
!6177 = !DILocation(line: 549, column: 7, scope: !5946, inlinedAt: !5949)
!6178 = !DILocation(line: 550, column: 4, scope: !6176, inlinedAt: !5949)
!6179 = !DILocation(line: 553, column: 33, scope: !5946, inlinedAt: !5949)
!6180 = !DILocation(line: 325, column: 6, scope: !6181, inlinedAt: !5961)
!6181 = distinct !DILexicalBlock(scope: !5957, file: !219, line: 325, column: 6)
!6182 = !DILocation(line: 325, column: 6, scope: !5957, inlinedAt: !5961)
!6183 = !DILocation(line: 326, column: 3, scope: !6181, inlinedAt: !5961)
!6184 = !DILocation(line: 332, column: 9, scope: !5957, inlinedAt: !5961)
!6185 = !DILocation(line: 332, column: 15, scope: !5957, inlinedAt: !5961)
!6186 = !DILocation(line: 332, column: 2, scope: !5957, inlinedAt: !5961)
!6187 = !DILocation(line: 336, column: 1, scope: !5957, inlinedAt: !5961)
!6188 = !DILocation(line: 553, column: 5, scope: !5946, inlinedAt: !5949)
!6189 = !DILocation(line: 553, column: 41, scope: !5946, inlinedAt: !5949)
!6190 = !DILocation(line: 554, column: 5, scope: !5946, inlinedAt: !5949)
!6191 = !DILocation(line: 554, column: 12, scope: !5946, inlinedAt: !5949)
!6192 = !DILocation(line: 448, column: 31, scope: !5941, inlinedAt: !5945)
!6193 = !DILocation(line: 448, column: 34, scope: !5941, inlinedAt: !5945)
!6194 = !DILocation(line: 448, column: 14, scope: !5941, inlinedAt: !5945)
!6195 = !DILocation(line: 450, column: 22, scope: !5941, inlinedAt: !5945)
!6196 = !DILocation(line: 450, column: 25, scope: !5941, inlinedAt: !5945)
!6197 = !DILocation(line: 450, column: 30, scope: !5941, inlinedAt: !5945)
!6198 = !DILocation(line: 450, column: 36, scope: !5941, inlinedAt: !5945)
!6199 = !DILocation(line: 450, column: 8, scope: !5941, inlinedAt: !5945)
!6200 = !DILocation(line: 450, column: 6, scope: !5941, inlinedAt: !5945)
!6201 = !DILocation(line: 451, column: 9, scope: !5941, inlinedAt: !5945)
!6202 = !DILocation(line: 552, column: 3, scope: !5946, inlinedAt: !5949)
!6203 = !DILocation(line: 557, column: 19, scope: !5948, inlinedAt: !5949)
!6204 = !DILocation(line: 557, column: 25, scope: !5948, inlinedAt: !5949)
!6205 = !DILocation(line: 557, column: 9, scope: !5948, inlinedAt: !5949)
!6206 = !DILocation(line: 557, column: 2, scope: !5948, inlinedAt: !5949)
!6207 = !DILocation(line: 558, column: 1, scope: !5948, inlinedAt: !5949)
!6208 = !DILocation(line: 664, column: 2, scope: !5937)
!6209 = distinct !DISubprogram(name: "spi_controller_put", scope: !4514, file: !4514, line: 690, type: !6210, scopeLine: 691, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{null, !4512}
!6212 = !DILocalVariable(name: "ctlr", arg: 1, scope: !6209, file: !4514, line: 690, type: !4512)
!6213 = !DILocation(line: 690, column: 62, scope: !6209)
!6214 = !DILocation(line: 692, column: 6, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6209, file: !4514, line: 692, column: 6)
!6216 = !DILocation(line: 692, column: 6, scope: !6209)
!6217 = !DILocation(line: 693, column: 15, scope: !6215)
!6218 = !DILocation(line: 693, column: 21, scope: !6215)
!6219 = !DILocation(line: 693, column: 3, scope: !6215)
!6220 = !DILocation(line: 694, column: 1, scope: !6209)
!6221 = distinct !DISubprogram(name: "spidev_release", scope: !3, file: !3, line: 46, type: !3529, scopeLine: 47, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6222 = !DILocalVariable(name: "dev", arg: 1, scope: !6221, file: !3, line: 46, type: !3506)
!6223 = !DILocation(line: 46, column: 43, scope: !6221)
!6224 = !DILocalVariable(name: "spi", scope: !6221, file: !3, line: 48, type: !4532)
!6225 = !DILocation(line: 48, column: 21, scope: !6221)
!6226 = !DILocation(line: 48, column: 41, scope: !6221)
!6227 = !DILocation(line: 48, column: 27, scope: !6221)
!6228 = !DILocation(line: 51, column: 6, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6221, file: !3, line: 51, column: 6)
!6230 = !DILocation(line: 51, column: 11, scope: !6229)
!6231 = !DILocation(line: 51, column: 23, scope: !6229)
!6232 = !DILocation(line: 51, column: 6, scope: !6221)
!6233 = !DILocation(line: 52, column: 3, scope: !6229)
!6234 = !DILocation(line: 52, column: 8, scope: !6229)
!6235 = !DILocation(line: 52, column: 20, scope: !6229)
!6236 = !DILocation(line: 52, column: 28, scope: !6229)
!6237 = !DILocation(line: 54, column: 21, scope: !6221)
!6238 = !DILocation(line: 54, column: 26, scope: !6221)
!6239 = !DILocation(line: 54, column: 2, scope: !6221)
!6240 = !DILocation(line: 55, column: 8, scope: !6221)
!6241 = !DILocation(line: 55, column: 13, scope: !6221)
!6242 = !DILocation(line: 55, column: 2, scope: !6221)
!6243 = !DILocation(line: 56, column: 8, scope: !6221)
!6244 = !DILocation(line: 56, column: 2, scope: !6221)
!6245 = !DILocation(line: 57, column: 1, scope: !6221)
!6246 = distinct !DISubprogram(name: "spi_add_device", scope: !3, file: !3, line: 561, type: !4583, scopeLine: 562, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6247 = !DILocalVariable(name: "spi", arg: 1, scope: !6246, file: !3, line: 561, type: !4532)
!6248 = !DILocation(line: 561, column: 39, scope: !6246)
!6249 = !DILocalVariable(name: "ctlr", scope: !6246, file: !3, line: 563, type: !4512)
!6250 = !DILocation(line: 563, column: 25, scope: !6246)
!6251 = !DILocation(line: 563, column: 32, scope: !6246)
!6252 = !DILocation(line: 563, column: 37, scope: !6246)
!6253 = !DILocalVariable(name: "dev", scope: !6246, file: !3, line: 564, type: !3506)
!6254 = !DILocation(line: 564, column: 17, scope: !6246)
!6255 = !DILocation(line: 564, column: 23, scope: !6246)
!6256 = !DILocation(line: 564, column: 29, scope: !6246)
!6257 = !DILocation(line: 564, column: 33, scope: !6246)
!6258 = !DILocalVariable(name: "status", scope: !6246, file: !3, line: 565, type: !234)
!6259 = !DILocation(line: 565, column: 6, scope: !6246)
!6260 = !DILocation(line: 568, column: 6, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 568, column: 6)
!6262 = !DILocation(line: 568, column: 11, scope: !6261)
!6263 = !DILocation(line: 568, column: 26, scope: !6261)
!6264 = !DILocation(line: 568, column: 32, scope: !6261)
!6265 = !DILocation(line: 568, column: 23, scope: !6261)
!6266 = !DILocation(line: 568, column: 6, scope: !6246)
!6267 = !DILocation(line: 569, column: 3, scope: !6268)
!6268 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 568, column: 48)
!6269 = !DILocation(line: 571, column: 3, scope: !6268)
!6270 = !DILocation(line: 575, column: 19, scope: !6246)
!6271 = !DILocation(line: 575, column: 2, scope: !6246)
!6272 = !DILocation(line: 581, column: 2, scope: !6246)
!6273 = !DILocation(line: 583, column: 49, scope: !6246)
!6274 = !DILocation(line: 583, column: 11, scope: !6246)
!6275 = !DILocation(line: 583, column: 9, scope: !6246)
!6276 = !DILocation(line: 584, column: 6, scope: !6277)
!6277 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 584, column: 6)
!6278 = !DILocation(line: 584, column: 6, scope: !6246)
!6279 = !DILocation(line: 585, column: 3, scope: !6280)
!6280 = distinct !DILexicalBlock(scope: !6277, file: !3, line: 584, column: 14)
!6281 = !DILocation(line: 587, column: 3, scope: !6280)
!6282 = !DILocation(line: 592, column: 29, scope: !6283)
!6283 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 591, column: 6)
!6284 = !DILocation(line: 592, column: 35, scope: !6283)
!6285 = !DILocation(line: 592, column: 7, scope: !6283)
!6286 = !DILocation(line: 591, column: 6, scope: !6246)
!6287 = !DILocation(line: 593, column: 10, scope: !6288)
!6288 = distinct !DILexicalBlock(scope: !6283, file: !3, line: 592, column: 41)
!6289 = !DILocation(line: 594, column: 3, scope: !6288)
!6290 = !DILocation(line: 598, column: 6, scope: !6291)
!6291 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 598, column: 6)
!6292 = !DILocation(line: 598, column: 12, scope: !6291)
!6293 = !DILocation(line: 598, column: 6, scope: !6246)
!6294 = !DILocation(line: 599, column: 19, scope: !6291)
!6295 = !DILocation(line: 599, column: 25, scope: !6291)
!6296 = !DILocation(line: 599, column: 35, scope: !6291)
!6297 = !DILocation(line: 599, column: 40, scope: !6291)
!6298 = !DILocation(line: 599, column: 3, scope: !6291)
!6299 = !DILocation(line: 599, column: 8, scope: !6291)
!6300 = !DILocation(line: 599, column: 17, scope: !6291)
!6301 = !DILocation(line: 600, column: 11, scope: !6302)
!6302 = distinct !DILexicalBlock(scope: !6291, file: !3, line: 600, column: 11)
!6303 = !DILocation(line: 600, column: 17, scope: !6302)
!6304 = !DILocation(line: 600, column: 11, scope: !6291)
!6305 = !DILocation(line: 601, column: 18, scope: !6302)
!6306 = !DILocation(line: 601, column: 24, scope: !6302)
!6307 = !DILocation(line: 601, column: 33, scope: !6302)
!6308 = !DILocation(line: 601, column: 38, scope: !6302)
!6309 = !DILocation(line: 601, column: 3, scope: !6302)
!6310 = !DILocation(line: 601, column: 8, scope: !6302)
!6311 = !DILocation(line: 601, column: 16, scope: !6302)
!6312 = !DILocation(line: 607, column: 21, scope: !6246)
!6313 = !DILocation(line: 607, column: 11, scope: !6246)
!6314 = !DILocation(line: 607, column: 9, scope: !6246)
!6315 = !DILocation(line: 608, column: 6, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 608, column: 6)
!6317 = !DILocation(line: 608, column: 13, scope: !6316)
!6318 = !DILocation(line: 608, column: 6, scope: !6246)
!6319 = !DILocation(line: 609, column: 3, scope: !6320)
!6320 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 608, column: 18)
!6321 = !DILocation(line: 611, column: 3, scope: !6320)
!6322 = !DILocation(line: 615, column: 23, scope: !6246)
!6323 = !DILocation(line: 615, column: 28, scope: !6246)
!6324 = !DILocation(line: 615, column: 11, scope: !6246)
!6325 = !DILocation(line: 615, column: 9, scope: !6246)
!6326 = !DILocation(line: 616, column: 6, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6246, file: !3, line: 616, column: 6)
!6328 = !DILocation(line: 616, column: 13, scope: !6327)
!6329 = !DILocation(line: 616, column: 6, scope: !6246)
!6330 = !DILocation(line: 617, column: 3, scope: !6327)
!6331 = !DILocation(line: 616, column: 15, scope: !6327)
!6332 = !DILabel(scope: !6246, name: "done", file: !3, line: 622)
!6333 = !DILocation(line: 622, column: 1, scope: !6246)
!6334 = !DILocation(line: 623, column: 2, scope: !6246)
!6335 = !DILocation(line: 624, column: 9, scope: !6246)
!6336 = !DILocation(line: 624, column: 2, scope: !6246)
!6337 = !DILocation(line: 625, column: 1, scope: !6246)
!6338 = distinct !DISubprogram(name: "spi_dev_set_name", scope: !3, file: !3, line: 528, type: !4610, scopeLine: 529, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6339 = !DILocalVariable(name: "spi", arg: 1, scope: !6338, file: !3, line: 528, type: !4532)
!6340 = !DILocation(line: 528, column: 49, scope: !6338)
!6341 = !DILocalVariable(name: "adev", scope: !6338, file: !3, line: 530, type: !229)
!6342 = !DILocation(line: 530, column: 22, scope: !6338)
!6343 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !6344, file: !3, line: 530, type: !243)
!6344 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 530, column: 29)
!6345 = !DILocation(line: 530, column: 29, scope: !6344)
!6346 = !DILocalVariable(name: "__mptr", scope: !6347, file: !3, line: 530, type: !228)
!6347 = distinct !DILexicalBlock(scope: !6344, file: !3, line: 530, column: 29)
!6348 = !DILocation(line: 530, column: 29, scope: !6347)
!6349 = !DILocation(line: 530, column: 29, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6347, file: !3, line: 530, column: 29)
!6351 = !DILocation(line: 532, column: 6, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6338, file: !3, line: 532, column: 6)
!6353 = !DILocation(line: 532, column: 6, scope: !6338)
!6354 = !DILocation(line: 533, column: 17, scope: !6355)
!6355 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 532, column: 12)
!6356 = !DILocation(line: 533, column: 22, scope: !6355)
!6357 = !DILocation(line: 533, column: 51, scope: !6355)
!6358 = !DILocation(line: 533, column: 37, scope: !6355)
!6359 = !DILocation(line: 533, column: 3, scope: !6355)
!6360 = !DILocation(line: 534, column: 3, scope: !6355)
!6361 = !DILocation(line: 537, column: 16, scope: !6338)
!6362 = !DILocation(line: 537, column: 21, scope: !6338)
!6363 = !DILocation(line: 537, column: 45, scope: !6338)
!6364 = !DILocation(line: 537, column: 50, scope: !6338)
!6365 = !DILocation(line: 537, column: 62, scope: !6338)
!6366 = !DILocation(line: 537, column: 35, scope: !6338)
!6367 = !DILocation(line: 538, column: 8, scope: !6338)
!6368 = !DILocation(line: 538, column: 13, scope: !6338)
!6369 = !DILocation(line: 537, column: 2, scope: !6338)
!6370 = !DILocation(line: 539, column: 1, scope: !6338)
!6371 = distinct !DISubprogram(name: "spi_dev_check", scope: !3, file: !3, line: 541, type: !6372, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6372 = !DISubroutineType(types: !6373)
!6373 = !{!234, !3506, !228}
!6374 = !DILocalVariable(name: "dev", arg: 1, scope: !6371, file: !3, line: 541, type: !3506)
!6375 = !DILocation(line: 541, column: 41, scope: !6371)
!6376 = !DILocalVariable(name: "data", arg: 2, scope: !6371, file: !3, line: 541, type: !228)
!6377 = !DILocation(line: 541, column: 52, scope: !6371)
!6378 = !DILocalVariable(name: "spi", scope: !6371, file: !3, line: 543, type: !4532)
!6379 = !DILocation(line: 543, column: 21, scope: !6371)
!6380 = !DILocation(line: 543, column: 41, scope: !6371)
!6381 = !DILocation(line: 543, column: 27, scope: !6371)
!6382 = !DILocalVariable(name: "new_spi", scope: !6371, file: !3, line: 544, type: !4532)
!6383 = !DILocation(line: 544, column: 21, scope: !6371)
!6384 = !DILocation(line: 544, column: 31, scope: !6371)
!6385 = !DILocation(line: 546, column: 6, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6371, file: !3, line: 546, column: 6)
!6387 = !DILocation(line: 546, column: 11, scope: !6386)
!6388 = !DILocation(line: 546, column: 25, scope: !6386)
!6389 = !DILocation(line: 546, column: 34, scope: !6386)
!6390 = !DILocation(line: 546, column: 22, scope: !6386)
!6391 = !DILocation(line: 546, column: 45, scope: !6386)
!6392 = !DILocation(line: 547, column: 6, scope: !6386)
!6393 = !DILocation(line: 547, column: 11, scope: !6386)
!6394 = !DILocation(line: 547, column: 26, scope: !6386)
!6395 = !DILocation(line: 547, column: 35, scope: !6386)
!6396 = !DILocation(line: 547, column: 23, scope: !6386)
!6397 = !DILocation(line: 546, column: 6, scope: !6371)
!6398 = !DILocation(line: 548, column: 3, scope: !6386)
!6399 = !DILocation(line: 549, column: 2, scope: !6371)
!6400 = !DILocation(line: 550, column: 1, scope: !6371)
!6401 = distinct !DISubprogram(name: "device_is_registered", scope: !73, file: !73, line: 680, type: !3538, scopeLine: 681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6402 = !DILocalVariable(name: "dev", arg: 1, scope: !6401, file: !73, line: 680, type: !3506)
!6403 = !DILocation(line: 680, column: 55, scope: !6401)
!6404 = !DILocation(line: 682, column: 9, scope: !6401)
!6405 = !DILocation(line: 682, column: 14, scope: !6401)
!6406 = !DILocation(line: 682, column: 19, scope: !6401)
!6407 = !DILocation(line: 682, column: 2, scope: !6401)
!6408 = distinct !DISubprogram(name: "spi_setup", scope: !3, file: !3, line: 3318, type: !4583, scopeLine: 3319, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6409 = !DILocalVariable(name: "spi", arg: 1, scope: !6408, file: !3, line: 3318, type: !4532)
!6410 = !DILocation(line: 3318, column: 34, scope: !6408)
!6411 = !DILocalVariable(name: "bad_bits", scope: !6408, file: !3, line: 3320, type: !7)
!6412 = !DILocation(line: 3320, column: 11, scope: !6408)
!6413 = !DILocalVariable(name: "ugly_bits", scope: !6408, file: !3, line: 3320, type: !7)
!6414 = !DILocation(line: 3320, column: 21, scope: !6408)
!6415 = !DILocalVariable(name: "status", scope: !6408, file: !3, line: 3321, type: !234)
!6416 = !DILocation(line: 3321, column: 7, scope: !6408)
!6417 = !DILocation(line: 3325, column: 8, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3325, column: 6)
!6419 = !DILocation(line: 3325, column: 13, scope: !6418)
!6420 = !DILocation(line: 3325, column: 18, scope: !6418)
!6421 = !DILocation(line: 3325, column: 33, scope: !6418)
!6422 = !DILocation(line: 3325, column: 37, scope: !6418)
!6423 = !DILocation(line: 3325, column: 42, scope: !6418)
!6424 = !DILocation(line: 3325, column: 47, scope: !6418)
!6425 = !DILocation(line: 3325, column: 63, scope: !6418)
!6426 = !DILocation(line: 3326, column: 5, scope: !6418)
!6427 = !DILocation(line: 3326, column: 10, scope: !6418)
!6428 = !DILocation(line: 3326, column: 15, scope: !6418)
!6429 = !DILocation(line: 3326, column: 30, scope: !6418)
!6430 = !DILocation(line: 3326, column: 34, scope: !6418)
!6431 = !DILocation(line: 3326, column: 39, scope: !6418)
!6432 = !DILocation(line: 3326, column: 44, scope: !6418)
!6433 = !DILocation(line: 3325, column: 6, scope: !6408)
!6434 = !DILocation(line: 3327, column: 3, scope: !6435)
!6435 = distinct !DILexicalBlock(scope: !6418, file: !3, line: 3326, column: 61)
!6436 = !DILocation(line: 3329, column: 3, scope: !6435)
!6437 = !DILocation(line: 3333, column: 7, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3333, column: 6)
!6439 = !DILocation(line: 3333, column: 12, scope: !6438)
!6440 = !DILocation(line: 3333, column: 17, scope: !6438)
!6441 = !DILocation(line: 3333, column: 30, scope: !6438)
!6442 = !DILocation(line: 3333, column: 34, scope: !6438)
!6443 = !DILocation(line: 3333, column: 39, scope: !6438)
!6444 = !DILocation(line: 3333, column: 44, scope: !6438)
!6445 = !DILocation(line: 3333, column: 6, scope: !6408)
!6446 = !DILocation(line: 3336, column: 3, scope: !6438)
!6447 = !DILocation(line: 3342, column: 13, scope: !6408)
!6448 = !DILocation(line: 3342, column: 18, scope: !6408)
!6449 = !DILocation(line: 3342, column: 27, scope: !6408)
!6450 = !DILocation(line: 3342, column: 32, scope: !6408)
!6451 = !DILocation(line: 3342, column: 44, scope: !6408)
!6452 = !DILocation(line: 3342, column: 54, scope: !6408)
!6453 = !DILocation(line: 3342, column: 25, scope: !6408)
!6454 = !DILocation(line: 3342, column: 23, scope: !6408)
!6455 = !DILocation(line: 3342, column: 11, scope: !6408)
!6456 = !DILocation(line: 3346, column: 20, scope: !6457)
!6457 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3346, column: 6)
!6458 = !DILocation(line: 3346, column: 25, scope: !6457)
!6459 = !DILocation(line: 3346, column: 6, scope: !6457)
!6460 = !DILocation(line: 3346, column: 6, scope: !6408)
!6461 = !DILocation(line: 3347, column: 12, scope: !6457)
!6462 = !DILocation(line: 3347, column: 3, scope: !6457)
!6463 = !DILocation(line: 3348, column: 14, scope: !6408)
!6464 = !DILocation(line: 3348, column: 23, scope: !6408)
!6465 = !DILocation(line: 3348, column: 12, scope: !6408)
!6466 = !DILocation(line: 3351, column: 6, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3351, column: 6)
!6468 = !DILocation(line: 3351, column: 6, scope: !6408)
!6469 = !DILocation(line: 3352, column: 3, scope: !6470)
!6470 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 3351, column: 17)
!6471 = !DILocation(line: 3355, column: 17, scope: !6470)
!6472 = !DILocation(line: 3355, column: 16, scope: !6470)
!6473 = !DILocation(line: 3355, column: 3, scope: !6470)
!6474 = !DILocation(line: 3355, column: 8, scope: !6470)
!6475 = !DILocation(line: 3355, column: 13, scope: !6470)
!6476 = !DILocation(line: 3356, column: 16, scope: !6470)
!6477 = !DILocation(line: 3356, column: 15, scope: !6470)
!6478 = !DILocation(line: 3356, column: 12, scope: !6470)
!6479 = !DILocation(line: 3357, column: 2, scope: !6470)
!6480 = !DILocation(line: 3358, column: 6, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3358, column: 6)
!6482 = !DILocation(line: 3358, column: 6, scope: !6408)
!6483 = !DILocation(line: 3359, column: 3, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 3358, column: 16)
!6485 = !DILocation(line: 3361, column: 3, scope: !6484)
!6486 = !DILocation(line: 3364, column: 7, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3364, column: 6)
!6488 = !DILocation(line: 3364, column: 12, scope: !6487)
!6489 = !DILocation(line: 3364, column: 6, scope: !6408)
!6490 = !DILocation(line: 3365, column: 3, scope: !6487)
!6491 = !DILocation(line: 3365, column: 8, scope: !6487)
!6492 = !DILocation(line: 3365, column: 22, scope: !6487)
!6493 = !DILocation(line: 3367, column: 40, scope: !6408)
!6494 = !DILocation(line: 3367, column: 45, scope: !6408)
!6495 = !DILocation(line: 3368, column: 12, scope: !6408)
!6496 = !DILocation(line: 3368, column: 17, scope: !6408)
!6497 = !DILocation(line: 3367, column: 11, scope: !6408)
!6498 = !DILocation(line: 3367, column: 9, scope: !6408)
!6499 = !DILocation(line: 3369, column: 6, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3369, column: 6)
!6501 = !DILocation(line: 3369, column: 6, scope: !6408)
!6502 = !DILocation(line: 3370, column: 10, scope: !6500)
!6503 = !DILocation(line: 3370, column: 3, scope: !6500)
!6504 = !DILocation(line: 3372, column: 7, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3372, column: 6)
!6506 = !DILocation(line: 3372, column: 12, scope: !6505)
!6507 = !DILocation(line: 3372, column: 6, scope: !6408)
!6508 = !DILocation(line: 3373, column: 23, scope: !6505)
!6509 = !DILocation(line: 3373, column: 28, scope: !6505)
!6510 = !DILocation(line: 3373, column: 40, scope: !6505)
!6511 = !DILocation(line: 3373, column: 3, scope: !6505)
!6512 = !DILocation(line: 3373, column: 8, scope: !6505)
!6513 = !DILocation(line: 3373, column: 21, scope: !6505)
!6514 = !DILocation(line: 3375, column: 14, scope: !6408)
!6515 = !DILocation(line: 3375, column: 19, scope: !6408)
!6516 = !DILocation(line: 3375, column: 31, scope: !6408)
!6517 = !DILocation(line: 3375, column: 2, scope: !6408)
!6518 = !DILocation(line: 3377, column: 6, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3377, column: 6)
!6520 = !DILocation(line: 3377, column: 11, scope: !6519)
!6521 = !DILocation(line: 3377, column: 23, scope: !6519)
!6522 = !DILocation(line: 3377, column: 6, scope: !6408)
!6523 = !DILocation(line: 3378, column: 12, scope: !6519)
!6524 = !DILocation(line: 3378, column: 17, scope: !6519)
!6525 = !DILocation(line: 3378, column: 29, scope: !6519)
!6526 = !DILocation(line: 3378, column: 35, scope: !6519)
!6527 = !DILocation(line: 3378, column: 10, scope: !6519)
!6528 = !DILocation(line: 3378, column: 3, scope: !6519)
!6529 = !DILocation(line: 3380, column: 6, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3380, column: 6)
!6531 = !DILocation(line: 3380, column: 11, scope: !6530)
!6532 = !DILocation(line: 3380, column: 23, scope: !6530)
!6533 = !DILocation(line: 3380, column: 39, scope: !6530)
!6534 = !DILocation(line: 3380, column: 42, scope: !6530)
!6535 = !DILocation(line: 3380, column: 47, scope: !6530)
!6536 = !DILocation(line: 3380, column: 59, scope: !6530)
!6537 = !DILocation(line: 3380, column: 6, scope: !6408)
!6538 = !DILocation(line: 3381, column: 32, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 3380, column: 67)
!6540 = !DILocation(line: 3381, column: 37, scope: !6539)
!6541 = !DILocation(line: 3381, column: 49, scope: !6539)
!6542 = !DILocation(line: 3381, column: 53, scope: !6539)
!6543 = !DILocation(line: 3381, column: 12, scope: !6539)
!6544 = !DILocation(line: 3381, column: 10, scope: !6539)
!6545 = !DILocation(line: 3382, column: 7, scope: !6546)
!6546 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 3382, column: 7)
!6547 = !DILocation(line: 3382, column: 14, scope: !6546)
!6548 = !DILocation(line: 3382, column: 7, scope: !6539)
!6549 = !DILocation(line: 3383, column: 18, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !6546, file: !3, line: 3382, column: 19)
!6551 = !DILocation(line: 3383, column: 23, scope: !6550)
!6552 = !DILocation(line: 3383, column: 35, scope: !6550)
!6553 = !DILocation(line: 3383, column: 4, scope: !6550)
!6554 = !DILocation(line: 3384, column: 26, scope: !6550)
!6555 = !DILocation(line: 3384, column: 31, scope: !6550)
!6556 = !DILocation(line: 3384, column: 43, scope: !6550)
!6557 = !DILocation(line: 3384, column: 47, scope: !6550)
!6558 = !DILocation(line: 3384, column: 4, scope: !6550)
!6559 = !DILocation(line: 3385, column: 4, scope: !6550)
!6560 = !DILocation(line: 3387, column: 11, scope: !6550)
!6561 = !DILocation(line: 3387, column: 4, scope: !6550)
!6562 = !DILocation(line: 3396, column: 10, scope: !6539)
!6563 = !DILocation(line: 3398, column: 14, scope: !6539)
!6564 = !DILocation(line: 3398, column: 3, scope: !6539)
!6565 = !DILocation(line: 3399, column: 29, scope: !6539)
!6566 = !DILocation(line: 3399, column: 34, scope: !6539)
!6567 = !DILocation(line: 3399, column: 46, scope: !6539)
!6568 = !DILocation(line: 3399, column: 50, scope: !6539)
!6569 = !DILocation(line: 3399, column: 3, scope: !6539)
!6570 = !DILocation(line: 3400, column: 30, scope: !6539)
!6571 = !DILocation(line: 3400, column: 35, scope: !6539)
!6572 = !DILocation(line: 3400, column: 47, scope: !6539)
!6573 = !DILocation(line: 3400, column: 51, scope: !6539)
!6574 = !DILocation(line: 3400, column: 3, scope: !6539)
!6575 = !DILocation(line: 3401, column: 2, scope: !6539)
!6576 = !DILocation(line: 3402, column: 14, scope: !6577)
!6577 = distinct !DILexicalBlock(scope: !6530, file: !3, line: 3401, column: 9)
!6578 = !DILocation(line: 3402, column: 3, scope: !6577)
!6579 = !DILocation(line: 3405, column: 16, scope: !6408)
!6580 = !DILocation(line: 3405, column: 21, scope: !6408)
!6581 = !DILocation(line: 3405, column: 33, scope: !6408)
!6582 = !DILocation(line: 3405, column: 2, scope: !6408)
!6583 = !DILocation(line: 3407, column: 6, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 3407, column: 6)
!6585 = !DILocation(line: 3407, column: 11, scope: !6584)
!6586 = !DILocation(line: 3407, column: 14, scope: !6584)
!6587 = !DILocation(line: 3407, column: 18, scope: !6584)
!6588 = !DILocation(line: 3407, column: 23, scope: !6584)
!6589 = !DILocation(line: 3407, column: 35, scope: !6584)
!6590 = !DILocation(line: 3407, column: 6, scope: !6408)
!6591 = !DILocation(line: 3408, column: 3, scope: !6592)
!6592 = distinct !DILexicalBlock(scope: !6584, file: !3, line: 3407, column: 39)
!6593 = !DILocation(line: 3408, column: 8, scope: !6592)
!6594 = !DILocation(line: 3408, column: 20, scope: !6592)
!6595 = !DILocation(line: 3408, column: 23, scope: !6592)
!6596 = !DILocation(line: 3409, column: 21, scope: !6592)
!6597 = !DILocation(line: 3409, column: 26, scope: !6592)
!6598 = !DILocation(line: 3409, column: 3, scope: !6592)
!6599 = !DILocation(line: 3410, column: 2, scope: !6592)
!6600 = !DILocation(line: 3421, column: 9, scope: !6408)
!6601 = !DILocation(line: 3421, column: 2, scope: !6408)
!6602 = !DILocation(line: 3422, column: 1, scope: !6408)
!6603 = distinct !DISubprogram(name: "dev_name", scope: !73, file: !73, line: 609, type: !6604, scopeLine: 610, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6604 = !DISubroutineType(types: !6605)
!6605 = !{!280, !271}
!6606 = !DILocalVariable(name: "dev", arg: 1, scope: !6603, file: !73, line: 609, type: !271)
!6607 = !DILocation(line: 609, column: 57, scope: !6603)
!6608 = !DILocation(line: 612, column: 6, scope: !6609)
!6609 = distinct !DILexicalBlock(scope: !6603, file: !73, line: 612, column: 6)
!6610 = !DILocation(line: 612, column: 11, scope: !6609)
!6611 = !DILocation(line: 612, column: 6, scope: !6603)
!6612 = !DILocation(line: 613, column: 10, scope: !6609)
!6613 = !DILocation(line: 613, column: 15, scope: !6609)
!6614 = !DILocation(line: 613, column: 3, scope: !6609)
!6615 = !DILocation(line: 615, column: 23, scope: !6603)
!6616 = !DILocation(line: 615, column: 28, scope: !6603)
!6617 = !DILocation(line: 615, column: 9, scope: !6603)
!6618 = !DILocation(line: 615, column: 2, scope: !6603)
!6619 = !DILocation(line: 616, column: 1, scope: !6603)
!6620 = distinct !DISubprogram(name: "spi_new_device", scope: !3, file: !3, line: 642, type: !6621, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6621 = !DISubroutineType(types: !6622)
!6622 = !{!4532, !4512, !6623}
!6623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5129, size: 64)
!6624 = !DILocalVariable(name: "ctlr", arg: 1, scope: !6620, file: !3, line: 642, type: !4512)
!6625 = !DILocation(line: 642, column: 58, scope: !6620)
!6626 = !DILocalVariable(name: "chip", arg: 2, scope: !6620, file: !3, line: 643, type: !6623)
!6627 = !DILocation(line: 643, column: 30, scope: !6620)
!6628 = !DILocalVariable(name: "proxy", scope: !6620, file: !3, line: 645, type: !4532)
!6629 = !DILocation(line: 645, column: 21, scope: !6620)
!6630 = !DILocalVariable(name: "status", scope: !6620, file: !3, line: 646, type: !234)
!6631 = !DILocation(line: 646, column: 8, scope: !6620)
!6632 = !DILocation(line: 655, column: 27, scope: !6620)
!6633 = !DILocation(line: 655, column: 10, scope: !6620)
!6634 = !DILocation(line: 655, column: 8, scope: !6620)
!6635 = !DILocation(line: 656, column: 7, scope: !6636)
!6636 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 656, column: 6)
!6637 = !DILocation(line: 656, column: 6, scope: !6620)
!6638 = !DILocation(line: 657, column: 3, scope: !6636)
!6639 = !DILocalVariable(name: "__ret_warn_on", scope: !6640, file: !3, line: 659, type: !234)
!6640 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 659, column: 2)
!6641 = !DILocation(line: 659, column: 2, scope: !6640)
!6642 = !DILocation(line: 659, column: 2, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6640, file: !3, line: 659, column: 2)
!6644 = !DILocation(line: 659, column: 2, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 659, column: 2)
!6646 = !DILocation(line: 659, column: 2, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 659, column: 2)
!6648 = !DILocation(line: 659, column: 2, scope: !6649)
!6649 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 659, column: 2)
!6650 = !{i32 -2140580613, i32 -2140580584, i32 -2140580538, i32 -2140580480, i32 -2140580426, i32 -2140580372, i32 -2140580317, i32 -2140580286}
!6651 = !DILocation(line: 659, column: 2, scope: !6652)
!6652 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 659, column: 2)
!6653 = !{i32 -2140579887, i32 -2140579880, i32 -2140579828, i32 -2140579797, i32 -2140579767}
!6654 = !DILocation(line: 659, column: 2, scope: !6655)
!6655 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 659, column: 2)
!6656 = !DILocation(line: 661, column: 23, scope: !6620)
!6657 = !DILocation(line: 661, column: 29, scope: !6620)
!6658 = !DILocation(line: 661, column: 2, scope: !6620)
!6659 = !DILocation(line: 661, column: 9, scope: !6620)
!6660 = !DILocation(line: 661, column: 21, scope: !6620)
!6661 = !DILocation(line: 662, column: 24, scope: !6620)
!6662 = !DILocation(line: 662, column: 30, scope: !6620)
!6663 = !DILocation(line: 662, column: 2, scope: !6620)
!6664 = !DILocation(line: 662, column: 9, scope: !6620)
!6665 = !DILocation(line: 662, column: 22, scope: !6620)
!6666 = !DILocation(line: 663, column: 16, scope: !6620)
!6667 = !DILocation(line: 663, column: 22, scope: !6620)
!6668 = !DILocation(line: 663, column: 2, scope: !6620)
!6669 = !DILocation(line: 663, column: 9, scope: !6620)
!6670 = !DILocation(line: 663, column: 14, scope: !6620)
!6671 = !DILocation(line: 664, column: 15, scope: !6620)
!6672 = !DILocation(line: 664, column: 21, scope: !6620)
!6673 = !DILocation(line: 664, column: 2, scope: !6620)
!6674 = !DILocation(line: 664, column: 9, scope: !6620)
!6675 = !DILocation(line: 664, column: 13, scope: !6620)
!6676 = !DILocation(line: 665, column: 10, scope: !6620)
!6677 = !DILocation(line: 665, column: 17, scope: !6620)
!6678 = !DILocation(line: 665, column: 27, scope: !6620)
!6679 = !DILocation(line: 665, column: 33, scope: !6620)
!6680 = !DILocation(line: 665, column: 2, scope: !6620)
!6681 = !DILocation(line: 666, column: 38, scope: !6620)
!6682 = !DILocation(line: 666, column: 44, scope: !6620)
!6683 = !DILocation(line: 666, column: 2, scope: !6620)
!6684 = !DILocation(line: 666, column: 9, scope: !6620)
!6685 = !DILocation(line: 666, column: 13, scope: !6620)
!6686 = !DILocation(line: 666, column: 27, scope: !6620)
!6687 = !DILocation(line: 667, column: 27, scope: !6620)
!6688 = !DILocation(line: 667, column: 33, scope: !6620)
!6689 = !DILocation(line: 667, column: 2, scope: !6620)
!6690 = !DILocation(line: 667, column: 9, scope: !6620)
!6691 = !DILocation(line: 667, column: 25, scope: !6620)
!6692 = !DILocation(line: 668, column: 2, scope: !6620)
!6693 = !DILocation(line: 668, column: 9, scope: !6620)
!6694 = !DILocation(line: 668, column: 26, scope: !6620)
!6695 = !DILocation(line: 670, column: 6, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 670, column: 6)
!6697 = !DILocation(line: 670, column: 12, scope: !6696)
!6698 = !DILocation(line: 670, column: 6, scope: !6620)
!6699 = !DILocation(line: 671, column: 35, scope: !6700)
!6700 = distinct !DILexicalBlock(scope: !6696, file: !3, line: 670, column: 24)
!6701 = !DILocation(line: 671, column: 42, scope: !6700)
!6702 = !DILocation(line: 671, column: 47, scope: !6700)
!6703 = !DILocation(line: 671, column: 53, scope: !6700)
!6704 = !DILocation(line: 671, column: 12, scope: !6700)
!6705 = !DILocation(line: 671, column: 10, scope: !6700)
!6706 = !DILocation(line: 672, column: 7, scope: !6707)
!6707 = distinct !DILexicalBlock(scope: !6700, file: !3, line: 672, column: 7)
!6708 = !DILocation(line: 672, column: 7, scope: !6700)
!6709 = !DILocation(line: 673, column: 4, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6707, file: !3, line: 672, column: 15)
!6711 = !DILocation(line: 676, column: 4, scope: !6710)
!6712 = !DILocation(line: 678, column: 2, scope: !6700)
!6713 = !DILocation(line: 680, column: 26, scope: !6620)
!6714 = !DILocation(line: 680, column: 11, scope: !6620)
!6715 = !DILocation(line: 680, column: 9, scope: !6620)
!6716 = !DILocation(line: 681, column: 6, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 681, column: 6)
!6718 = !DILocation(line: 681, column: 13, scope: !6717)
!6719 = !DILocation(line: 681, column: 6, scope: !6620)
!6720 = !DILocation(line: 682, column: 3, scope: !6717)
!6721 = !DILocation(line: 684, column: 9, scope: !6620)
!6722 = !DILocation(line: 684, column: 2, scope: !6620)
!6723 = !DILabel(scope: !6620, name: "err_remove_props", file: !3, line: 686)
!6724 = !DILocation(line: 686, column: 1, scope: !6620)
!6725 = !DILocation(line: 687, column: 6, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6620, file: !3, line: 687, column: 6)
!6727 = !DILocation(line: 687, column: 12, scope: !6726)
!6728 = !DILocation(line: 687, column: 6, scope: !6620)
!6729 = !DILocation(line: 688, column: 29, scope: !6726)
!6730 = !DILocation(line: 688, column: 36, scope: !6726)
!6731 = !DILocation(line: 688, column: 3, scope: !6726)
!6732 = !DILabel(scope: !6620, name: "err_dev_put", file: !3, line: 689)
!6733 = !DILocation(line: 689, column: 1, scope: !6620)
!6734 = !DILocation(line: 690, column: 14, scope: !6620)
!6735 = !DILocation(line: 690, column: 2, scope: !6620)
!6736 = !DILocation(line: 691, column: 2, scope: !6620)
!6737 = !DILocation(line: 692, column: 1, scope: !6620)
!6738 = distinct !DISubprogram(name: "spi_dev_put", scope: !4514, file: !4514, line: 221, type: !4610, scopeLine: 222, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6739 = !DILocalVariable(name: "spi", arg: 1, scope: !6738, file: !4514, line: 221, type: !4532)
!6740 = !DILocation(line: 221, column: 51, scope: !6738)
!6741 = !DILocation(line: 223, column: 6, scope: !6742)
!6742 = distinct !DILexicalBlock(scope: !6738, file: !4514, line: 223, column: 6)
!6743 = !DILocation(line: 223, column: 6, scope: !6738)
!6744 = !DILocation(line: 224, column: 15, scope: !6742)
!6745 = !DILocation(line: 224, column: 20, scope: !6742)
!6746 = !DILocation(line: 224, column: 3, scope: !6742)
!6747 = !DILocation(line: 225, column: 1, scope: !6738)
!6748 = distinct !DISubprogram(name: "spi_unregister_device", scope: !3, file: !3, line: 702, type: !4610, scopeLine: 703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6749 = !DILocalVariable(name: "spi", arg: 1, scope: !6748, file: !3, line: 702, type: !4532)
!6750 = !DILocation(line: 702, column: 47, scope: !6748)
!6751 = !DILocation(line: 704, column: 7, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 704, column: 6)
!6753 = !DILocation(line: 704, column: 6, scope: !6748)
!6754 = !DILocation(line: 705, column: 3, scope: !6752)
!6755 = !DILocation(line: 707, column: 6, scope: !6756)
!6756 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 707, column: 6)
!6757 = !DILocation(line: 707, column: 11, scope: !6756)
!6758 = !DILocation(line: 707, column: 15, scope: !6756)
!6759 = !DILocation(line: 707, column: 6, scope: !6748)
!6760 = !DILocation(line: 708, column: 22, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6756, file: !3, line: 707, column: 24)
!6762 = !DILocation(line: 708, column: 27, scope: !6761)
!6763 = !DILocation(line: 708, column: 31, scope: !6761)
!6764 = !DILocation(line: 708, column: 3, scope: !6761)
!6765 = !DILocation(line: 709, column: 15, scope: !6761)
!6766 = !DILocation(line: 709, column: 20, scope: !6761)
!6767 = !DILocation(line: 709, column: 24, scope: !6761)
!6768 = !DILocation(line: 709, column: 3, scope: !6761)
!6769 = !DILocation(line: 710, column: 2, scope: !6761)
!6770 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !6771, file: !3, line: 711, type: !243)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 711, column: 6)
!6772 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 711, column: 6)
!6773 = !DILocation(line: 711, column: 6, scope: !6771)
!6774 = !DILocalVariable(name: "__mptr", scope: !6775, file: !3, line: 711, type: !228)
!6775 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 711, column: 6)
!6776 = !DILocation(line: 711, column: 6, scope: !6775)
!6777 = !DILocation(line: 711, column: 6, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 711, column: 6)
!6779 = !DILocation(line: 711, column: 6, scope: !6772)
!6780 = !DILocation(line: 711, column: 6, scope: !6748)
!6781 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !6782, file: !3, line: 712, type: !243)
!6782 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 712, column: 32)
!6783 = !DILocation(line: 712, column: 32, scope: !6782)
!6784 = !DILocalVariable(name: "__mptr", scope: !6785, file: !3, line: 712, type: !228)
!6785 = distinct !DILexicalBlock(scope: !6782, file: !3, line: 712, column: 32)
!6786 = !DILocation(line: 712, column: 32, scope: !6785)
!6787 = !DILocation(line: 712, column: 32, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 712, column: 32)
!6789 = !DILocation(line: 712, column: 3, scope: !6772)
!6790 = !DILocation(line: 713, column: 21, scope: !6748)
!6791 = !DILocation(line: 713, column: 26, scope: !6748)
!6792 = !DILocation(line: 713, column: 2, scope: !6748)
!6793 = !DILocation(line: 714, column: 1, scope: !6748)
!6794 = distinct !DISubprogram(name: "of_node_clear_flag", scope: !3805, file: !3805, line: 204, type: !6795, scopeLine: 205, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6795 = !DISubroutineType(types: !6796)
!6796 = !{null, !3803, !388}
!6797 = !DILocalVariable(name: "n", arg: 1, scope: !6794, file: !3805, line: 204, type: !3803)
!6798 = !DILocation(line: 204, column: 59, scope: !6794)
!6799 = !DILocalVariable(name: "flag", arg: 2, scope: !6794, file: !3805, line: 204, type: !388)
!6800 = !DILocation(line: 204, column: 76, scope: !6794)
!6801 = !DILocation(line: 206, column: 12, scope: !6794)
!6802 = !DILocation(line: 206, column: 19, scope: !6794)
!6803 = !DILocation(line: 206, column: 22, scope: !6794)
!6804 = !DILocation(line: 206, column: 2, scope: !6794)
!6805 = !DILocation(line: 207, column: 1, scope: !6794)
!6806 = distinct !DISubprogram(name: "of_node_put", scope: !3805, file: !3805, line: 129, type: !6807, scopeLine: 129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6807 = !DISubroutineType(types: !6808)
!6808 = !{null, !3803}
!6809 = !DILocalVariable(name: "node", arg: 1, scope: !6806, file: !3805, line: 129, type: !3803)
!6810 = !DILocation(line: 129, column: 52, scope: !6806)
!6811 = !DILocation(line: 129, column: 60, scope: !6806)
!6812 = distinct !DISubprogram(name: "acpi_device_clear_enumerated", scope: !6813, file: !6813, line: 669, type: !4438, scopeLine: 670, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6813 = !DIFile(filename: "./include/linux/acpi.h", directory: "/home/lizy2001/genbc/linux")
!6814 = !DILocalVariable(name: "adev", arg: 1, scope: !6812, file: !6813, line: 669, type: !229)
!6815 = !DILocation(line: 669, column: 69, scope: !6812)
!6816 = !DILocation(line: 671, column: 2, scope: !6812)
!6817 = !DILocation(line: 671, column: 8, scope: !6812)
!6818 = !DILocation(line: 671, column: 14, scope: !6812)
!6819 = !DILocation(line: 671, column: 22, scope: !6812)
!6820 = !DILocation(line: 672, column: 1, scope: !6812)
!6821 = distinct !DISubprogram(name: "spi_register_board_info", scope: !3, file: !3, line: 753, type: !6822, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6822 = !DISubroutineType(types: !6823)
!6823 = !{!234, !6824, !7}
!6824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6825, size: 64)
!6825 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5129)
!6826 = !DILocalVariable(name: "info", arg: 1, scope: !6821, file: !3, line: 753, type: !6824)
!6827 = !DILocation(line: 753, column: 58, scope: !6821)
!6828 = !DILocalVariable(name: "n", arg: 2, scope: !6821, file: !3, line: 753, type: !7)
!6829 = !DILocation(line: 753, column: 73, scope: !6821)
!6830 = !DILocalVariable(name: "bi", scope: !6821, file: !3, line: 755, type: !5124)
!6831 = !DILocation(line: 755, column: 20, scope: !6821)
!6832 = !DILocalVariable(name: "i", scope: !6821, file: !3, line: 756, type: !234)
!6833 = !DILocation(line: 756, column: 6, scope: !6821)
!6834 = !DILocation(line: 758, column: 7, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 758, column: 6)
!6836 = !DILocation(line: 758, column: 6, scope: !6821)
!6837 = !DILocation(line: 759, column: 3, scope: !6835)
!6838 = !DILocation(line: 761, column: 15, scope: !6821)
!6839 = !DILocation(line: 761, column: 7, scope: !6821)
!6840 = !DILocation(line: 761, column: 5, scope: !6821)
!6841 = !DILocation(line: 762, column: 7, scope: !6842)
!6842 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 762, column: 6)
!6843 = !DILocation(line: 762, column: 6, scope: !6821)
!6844 = !DILocation(line: 763, column: 3, scope: !6842)
!6845 = !DILocation(line: 765, column: 9, scope: !6846)
!6846 = distinct !DILexicalBlock(scope: !6821, file: !3, line: 765, column: 2)
!6847 = !DILocation(line: 765, column: 7, scope: !6846)
!6848 = !DILocation(line: 765, column: 14, scope: !6849)
!6849 = distinct !DILexicalBlock(scope: !6846, file: !3, line: 765, column: 2)
!6850 = !DILocation(line: 765, column: 18, scope: !6849)
!6851 = !DILocation(line: 765, column: 16, scope: !6849)
!6852 = !DILocation(line: 765, column: 2, scope: !6846)
!6853 = !DILocalVariable(name: "ctlr", scope: !6854, file: !3, line: 766, type: !4512)
!6854 = distinct !DILexicalBlock(scope: !6849, file: !3, line: 765, column: 40)
!6855 = !DILocation(line: 766, column: 26, scope: !6854)
!6856 = !DILocation(line: 768, column: 11, scope: !6854)
!6857 = !DILocation(line: 768, column: 15, scope: !6854)
!6858 = !DILocation(line: 768, column: 3, scope: !6854)
!6859 = !DILocation(line: 768, column: 27, scope: !6854)
!6860 = !DILocation(line: 769, column: 7, scope: !6861)
!6861 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 769, column: 7)
!6862 = !DILocation(line: 769, column: 13, scope: !6861)
!6863 = !DILocation(line: 769, column: 7, scope: !6854)
!6864 = !DILocation(line: 771, column: 27, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6861, file: !3, line: 769, column: 25)
!6866 = !DILocation(line: 771, column: 33, scope: !6865)
!6867 = !DILocation(line: 771, column: 6, scope: !6865)
!6868 = !DILocation(line: 770, column: 4, scope: !6865)
!6869 = !DILocation(line: 770, column: 8, scope: !6865)
!6870 = !DILocation(line: 770, column: 19, scope: !6865)
!6871 = !DILocation(line: 770, column: 30, scope: !6865)
!6872 = !DILocation(line: 772, column: 15, scope: !6873)
!6873 = distinct !DILexicalBlock(scope: !6865, file: !3, line: 772, column: 8)
!6874 = !DILocation(line: 772, column: 19, scope: !6873)
!6875 = !DILocation(line: 772, column: 30, scope: !6873)
!6876 = !DILocation(line: 772, column: 8, scope: !6873)
!6877 = !DILocation(line: 772, column: 8, scope: !6865)
!6878 = !DILocation(line: 773, column: 20, scope: !6873)
!6879 = !DILocation(line: 773, column: 24, scope: !6873)
!6880 = !DILocation(line: 773, column: 35, scope: !6873)
!6881 = !DILocation(line: 773, column: 12, scope: !6873)
!6882 = !DILocation(line: 773, column: 5, scope: !6873)
!6883 = !DILocation(line: 774, column: 3, scope: !6865)
!6884 = !DILocation(line: 776, column: 3, scope: !6854)
!6885 = !DILocation(line: 777, column: 18, scope: !6854)
!6886 = !DILocation(line: 777, column: 22, scope: !6854)
!6887 = !DILocation(line: 777, column: 3, scope: !6854)
!6888 = !DILocalVariable(name: "__mptr", scope: !6889, file: !3, line: 778, type: !228)
!6889 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 778, column: 3)
!6890 = distinct !DILexicalBlock(scope: !6854, file: !3, line: 778, column: 3)
!6891 = !DILocation(line: 778, column: 3, scope: !6889)
!6892 = !DILocation(line: 778, column: 3, scope: !6893)
!6893 = distinct !DILexicalBlock(scope: !6889, file: !3, line: 778, column: 3)
!6894 = !DILocation(line: 778, column: 3, scope: !6890)
!6895 = !DILocation(line: 778, column: 3, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6890, file: !3, line: 778, column: 3)
!6897 = !DILocation(line: 779, column: 38, scope: !6896)
!6898 = !DILocation(line: 780, column: 11, scope: !6896)
!6899 = !DILocation(line: 780, column: 15, scope: !6896)
!6900 = !DILocation(line: 779, column: 4, scope: !6896)
!6901 = !DILocalVariable(name: "__mptr", scope: !6902, file: !3, line: 778, type: !228)
!6902 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 778, column: 3)
!6903 = !DILocation(line: 778, column: 3, scope: !6902)
!6904 = !DILocation(line: 778, column: 3, scope: !6905)
!6905 = distinct !DILexicalBlock(scope: !6902, file: !3, line: 778, column: 3)
!6906 = distinct !{!6906, !6894, !6907}
!6907 = !DILocation(line: 780, column: 25, scope: !6890)
!6908 = !DILocation(line: 781, column: 3, scope: !6854)
!6909 = !DILocation(line: 782, column: 2, scope: !6854)
!6910 = !DILocation(line: 765, column: 22, scope: !6849)
!6911 = !DILocation(line: 765, column: 28, scope: !6849)
!6912 = !DILocation(line: 765, column: 36, scope: !6849)
!6913 = !DILocation(line: 765, column: 2, scope: !6849)
!6914 = distinct !{!6914, !6852, !6915}
!6915 = !DILocation(line: 782, column: 2, scope: !6846)
!6916 = !DILocation(line: 784, column: 2, scope: !6821)
!6917 = !DILocation(line: 785, column: 1, scope: !6821)
!6918 = distinct !DISubprogram(name: "kcalloc", scope: !219, file: !219, line: 601, type: !6919, scopeLine: 602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6919 = !DISubroutineType(types: !6920)
!6920 = !{!228, !385, !385, !226}
!6921 = !DILocalVariable(name: "n", arg: 1, scope: !6918, file: !219, line: 601, type: !385)
!6922 = !DILocation(line: 601, column: 36, scope: !6918)
!6923 = !DILocalVariable(name: "size", arg: 2, scope: !6918, file: !219, line: 601, type: !385)
!6924 = !DILocation(line: 601, column: 46, scope: !6918)
!6925 = !DILocalVariable(name: "flags", arg: 3, scope: !6918, file: !219, line: 601, type: !226)
!6926 = !DILocation(line: 601, column: 58, scope: !6918)
!6927 = !DILocation(line: 603, column: 23, scope: !6918)
!6928 = !DILocation(line: 603, column: 26, scope: !6918)
!6929 = !DILocation(line: 603, column: 32, scope: !6918)
!6930 = !DILocation(line: 603, column: 38, scope: !6918)
!6931 = !DILocation(line: 603, column: 9, scope: !6918)
!6932 = !DILocation(line: 603, column: 2, scope: !6918)
!6933 = distinct !DISubprogram(name: "IS_ERR", scope: !6934, file: !6934, line: 34, type: !6935, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6934 = !DIFile(filename: "./include/linux/err.h", directory: "/home/lizy2001/genbc/linux")
!6935 = !DISubroutineType(types: !6936)
!6936 = !{!261, !269}
!6937 = !DILocalVariable(name: "ptr", arg: 1, scope: !6933, file: !6934, line: 34, type: !269)
!6938 = !DILocation(line: 34, column: 60, scope: !6933)
!6939 = !DILocation(line: 36, column: 9, scope: !6933)
!6940 = !DILocation(line: 36, column: 2, scope: !6933)
!6941 = distinct !DISubprogram(name: "PTR_ERR", scope: !6934, file: !6934, line: 29, type: !6942, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6942 = !DISubroutineType(types: !6943)
!6943 = !{!373, !269}
!6944 = !DILocalVariable(name: "ptr", arg: 1, scope: !6941, file: !6934, line: 29, type: !269)
!6945 = !DILocation(line: 29, column: 61, scope: !6941)
!6946 = !DILocation(line: 31, column: 16, scope: !6941)
!6947 = !DILocation(line: 31, column: 9, scope: !6941)
!6948 = !DILocation(line: 31, column: 2, scope: !6941)
!6949 = distinct !DISubprogram(name: "list_add_tail", scope: !6950, file: !6950, line: 98, type: !6951, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6950 = !DIFile(filename: "./include/linux/list.h", directory: "/home/lizy2001/genbc/linux")
!6951 = !DISubroutineType(types: !6952)
!6952 = !{null, !287, !287}
!6953 = !DILocalVariable(name: "new", arg: 1, scope: !6949, file: !6950, line: 98, type: !287)
!6954 = !DILocation(line: 98, column: 52, scope: !6949)
!6955 = !DILocalVariable(name: "head", arg: 2, scope: !6949, file: !6950, line: 98, type: !287)
!6956 = !DILocation(line: 98, column: 75, scope: !6949)
!6957 = !DILocation(line: 100, column: 13, scope: !6949)
!6958 = !DILocation(line: 100, column: 18, scope: !6949)
!6959 = !DILocation(line: 100, column: 24, scope: !6949)
!6960 = !DILocation(line: 100, column: 30, scope: !6949)
!6961 = !DILocation(line: 100, column: 2, scope: !6949)
!6962 = !DILocation(line: 101, column: 1, scope: !6949)
!6963 = distinct !DISubprogram(name: "spi_match_controller_to_boardinfo", scope: !3, file: !3, line: 717, type: !6964, scopeLine: 719, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6964 = !DISubroutineType(types: !6965)
!6965 = !{null, !4512, !6623}
!6966 = !DILocalVariable(name: "ctlr", arg: 1, scope: !6963, file: !3, line: 717, type: !4512)
!6967 = !DILocation(line: 717, column: 70, scope: !6963)
!6968 = !DILocalVariable(name: "bi", arg: 2, scope: !6963, file: !3, line: 718, type: !6623)
!6969 = !DILocation(line: 718, column: 35, scope: !6963)
!6970 = !DILocalVariable(name: "dev", scope: !6963, file: !3, line: 720, type: !4532)
!6971 = !DILocation(line: 720, column: 21, scope: !6963)
!6972 = !DILocation(line: 722, column: 6, scope: !6973)
!6973 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 722, column: 6)
!6974 = !DILocation(line: 722, column: 12, scope: !6973)
!6975 = !DILocation(line: 722, column: 23, scope: !6973)
!6976 = !DILocation(line: 722, column: 27, scope: !6973)
!6977 = !DILocation(line: 722, column: 20, scope: !6973)
!6978 = !DILocation(line: 722, column: 6, scope: !6963)
!6979 = !DILocation(line: 723, column: 3, scope: !6973)
!6980 = !DILocation(line: 725, column: 23, scope: !6963)
!6981 = !DILocation(line: 725, column: 29, scope: !6963)
!6982 = !DILocation(line: 725, column: 8, scope: !6963)
!6983 = !DILocation(line: 725, column: 6, scope: !6963)
!6984 = !DILocation(line: 726, column: 7, scope: !6985)
!6985 = distinct !DILexicalBlock(scope: !6963, file: !3, line: 726, column: 6)
!6986 = !DILocation(line: 726, column: 6, scope: !6963)
!6987 = !DILocation(line: 727, column: 3, scope: !6985)
!6988 = !DILocation(line: 729, column: 1, scope: !6963)
!6989 = distinct !DISubprogram(name: "spi_map_buf", scope: !3, file: !3, line: 842, type: !6990, scopeLine: 845, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!6990 = !DISubroutineType(types: !6991)
!6991 = !{!234, !4512, !3506, !6992, !228, !385, !197}
!6992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4625, size: 64)
!6993 = !DILocalVariable(name: "ctlr", arg: 1, scope: !6989, file: !3, line: 842, type: !4512)
!6994 = !DILocation(line: 842, column: 40, scope: !6989)
!6995 = !DILocalVariable(name: "dev", arg: 2, scope: !6989, file: !3, line: 842, type: !3506)
!6996 = !DILocation(line: 842, column: 61, scope: !6989)
!6997 = !DILocalVariable(name: "sgt", arg: 3, scope: !6989, file: !3, line: 843, type: !6992)
!6998 = !DILocation(line: 843, column: 20, scope: !6989)
!6999 = !DILocalVariable(name: "buf", arg: 4, scope: !6989, file: !3, line: 843, type: !228)
!7000 = !DILocation(line: 843, column: 31, scope: !6989)
!7001 = !DILocalVariable(name: "len", arg: 5, scope: !6989, file: !3, line: 843, type: !385)
!7002 = !DILocation(line: 843, column: 43, scope: !6989)
!7003 = !DILocalVariable(name: "dir", arg: 6, scope: !6989, file: !3, line: 844, type: !197)
!7004 = !DILocation(line: 844, column: 27, scope: !6989)
!7005 = !DILocalVariable(name: "vmalloced_buf", scope: !6989, file: !3, line: 846, type: !7006)
!7006 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !261)
!7007 = !DILocation(line: 846, column: 13, scope: !6989)
!7008 = !DILocation(line: 846, column: 45, scope: !6989)
!7009 = !DILocation(line: 846, column: 29, scope: !6989)
!7010 = !DILocalVariable(name: "max_seg_size", scope: !6989, file: !3, line: 847, type: !7)
!7011 = !DILocation(line: 847, column: 15, scope: !6989)
!7012 = !DILocation(line: 847, column: 51, scope: !6989)
!7013 = !DILocation(line: 847, column: 30, scope: !6989)
!7014 = !DILocalVariable(name: "kmap_buf", scope: !6989, file: !3, line: 853, type: !7006)
!7015 = !DILocation(line: 853, column: 13, scope: !6989)
!7016 = !DILocalVariable(name: "desc_len", scope: !6989, file: !3, line: 855, type: !234)
!7017 = !DILocation(line: 855, column: 6, scope: !6989)
!7018 = !DILocalVariable(name: "sgs", scope: !6989, file: !3, line: 856, type: !234)
!7019 = !DILocation(line: 856, column: 6, scope: !6989)
!7020 = !DILocalVariable(name: "vm_page", scope: !6989, file: !3, line: 857, type: !835)
!7021 = !DILocation(line: 857, column: 15, scope: !6989)
!7022 = !DILocalVariable(name: "sg", scope: !6989, file: !3, line: 858, type: !4629)
!7023 = !DILocation(line: 858, column: 22, scope: !6989)
!7024 = !DILocalVariable(name: "sg_buf", scope: !6989, file: !3, line: 859, type: !228)
!7025 = !DILocation(line: 859, column: 8, scope: !6989)
!7026 = !DILocalVariable(name: "min", scope: !6989, file: !3, line: 860, type: !385)
!7027 = !DILocation(line: 860, column: 9, scope: !6989)
!7028 = !DILocalVariable(name: "i", scope: !6989, file: !3, line: 861, type: !234)
!7029 = !DILocation(line: 861, column: 6, scope: !6989)
!7030 = !DILocalVariable(name: "ret", scope: !6989, file: !3, line: 861, type: !234)
!7031 = !DILocation(line: 861, column: 9, scope: !6989)
!7032 = !DILocation(line: 863, column: 6, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 863, column: 6)
!7034 = !DILocation(line: 863, column: 6, scope: !6989)
!7035 = !DILocalVariable(name: "__UNIQUE_ID___x298", scope: !7036, file: !3, line: 864, type: !234)
!7036 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 864, column: 14)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 863, column: 33)
!7038 = !DILocation(line: 864, column: 14, scope: !7036)
!7039 = !DILocalVariable(name: "__UNIQUE_ID___y299", scope: !7036, file: !3, line: 864, type: !234)
!7040 = !DILocation(line: 864, column: 12, scope: !7037)
!7041 = !DILocation(line: 865, column: 9, scope: !7037)
!7042 = !DILocation(line: 865, column: 7, scope: !7037)
!7043 = !DILocation(line: 866, column: 2, scope: !7037)
!7044 = !DILocation(line: 866, column: 13, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 866, column: 13)
!7046 = !DILocation(line: 866, column: 13, scope: !7033)
!7047 = !DILocalVariable(name: "__UNIQUE_ID___x300", scope: !7048, file: !3, line: 867, type: !234)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 867, column: 14)
!7049 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 866, column: 35)
!7050 = !DILocation(line: 867, column: 14, scope: !7048)
!7051 = !DILocalVariable(name: "__UNIQUE_ID___y301", scope: !7048, file: !3, line: 867, type: !234)
!7052 = !DILocation(line: 867, column: 12, scope: !7049)
!7053 = !DILocation(line: 868, column: 9, scope: !7049)
!7054 = !DILocation(line: 868, column: 7, scope: !7049)
!7055 = !DILocation(line: 869, column: 2, scope: !7049)
!7056 = !DILocation(line: 870, column: 3, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 869, column: 9)
!7058 = !DILocation(line: 873, column: 23, scope: !6989)
!7059 = !DILocation(line: 873, column: 28, scope: !6989)
!7060 = !DILocation(line: 873, column: 8, scope: !6989)
!7061 = !DILocation(line: 873, column: 6, scope: !6989)
!7062 = !DILocation(line: 874, column: 6, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 874, column: 6)
!7064 = !DILocation(line: 874, column: 10, scope: !7063)
!7065 = !DILocation(line: 874, column: 6, scope: !6989)
!7066 = !DILocation(line: 875, column: 10, scope: !7063)
!7067 = !DILocation(line: 875, column: 3, scope: !7063)
!7068 = !DILocation(line: 877, column: 8, scope: !6989)
!7069 = !DILocation(line: 877, column: 13, scope: !6989)
!7070 = !DILocation(line: 877, column: 5, scope: !6989)
!7071 = !DILocation(line: 878, column: 9, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 878, column: 2)
!7073 = !DILocation(line: 878, column: 7, scope: !7072)
!7074 = !DILocation(line: 878, column: 14, scope: !7075)
!7075 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 878, column: 2)
!7076 = !DILocation(line: 878, column: 18, scope: !7075)
!7077 = !DILocation(line: 878, column: 16, scope: !7075)
!7078 = !DILocation(line: 878, column: 2, scope: !7072)
!7079 = !DILocation(line: 880, column: 7, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 880, column: 7)
!7081 = distinct !DILexicalBlock(scope: !7075, file: !3, line: 878, column: 28)
!7082 = !DILocation(line: 880, column: 7, scope: !7081)
!7083 = !DILocalVariable(name: "__UNIQUE_ID___x304", scope: !7084, file: !3, line: 886, type: !385)
!7084 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 886, column: 10)
!7085 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 880, column: 34)
!7086 = !DILocation(line: 886, column: 10, scope: !7084)
!7087 = !DILocalVariable(name: "__UNIQUE_ID___y305", scope: !7084, file: !3, line: 886, type: !385)
!7088 = !DILocalVariable(name: "__UNIQUE_ID___x302", scope: !7089, file: !3, line: 886, type: !385)
!7089 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 886, column: 10)
!7090 = !DILocation(line: 886, column: 10, scope: !7089)
!7091 = !DILocalVariable(name: "__UNIQUE_ID___y303", scope: !7089, file: !3, line: 886, type: !385)
!7092 = !DILocation(line: 886, column: 8, scope: !7085)
!7093 = !DILocation(line: 889, column: 8, scope: !7094)
!7094 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 889, column: 8)
!7095 = !DILocation(line: 889, column: 8, scope: !7085)
!7096 = !DILocation(line: 890, column: 31, scope: !7094)
!7097 = !DILocation(line: 890, column: 15, scope: !7094)
!7098 = !DILocation(line: 890, column: 13, scope: !7094)
!7099 = !DILocation(line: 890, column: 5, scope: !7094)
!7100 = !DILocation(line: 892, column: 28, scope: !7094)
!7101 = !DILocation(line: 892, column: 15, scope: !7094)
!7102 = !DILocation(line: 892, column: 13, scope: !7094)
!7103 = !DILocation(line: 893, column: 9, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7085, file: !3, line: 893, column: 8)
!7105 = !DILocation(line: 893, column: 8, scope: !7085)
!7106 = !DILocation(line: 894, column: 19, scope: !7107)
!7107 = distinct !DILexicalBlock(scope: !7104, file: !3, line: 893, column: 18)
!7108 = !DILocation(line: 894, column: 5, scope: !7107)
!7109 = !DILocation(line: 895, column: 5, scope: !7107)
!7110 = !DILocation(line: 897, column: 16, scope: !7085)
!7111 = !DILocation(line: 897, column: 20, scope: !7085)
!7112 = !DILocation(line: 898, column: 9, scope: !7085)
!7113 = !DILocation(line: 898, column: 14, scope: !7085)
!7114 = !DILocation(line: 897, column: 4, scope: !7085)
!7115 = !DILocation(line: 899, column: 3, scope: !7085)
!7116 = !DILocalVariable(name: "__UNIQUE_ID___x306", scope: !7117, file: !3, line: 900, type: !385)
!7117 = distinct !DILexicalBlock(scope: !7118, file: !3, line: 900, column: 10)
!7118 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 899, column: 10)
!7119 = !DILocation(line: 900, column: 10, scope: !7117)
!7120 = !DILocalVariable(name: "__UNIQUE_ID___y307", scope: !7117, file: !3, line: 900, type: !385)
!7121 = !DILocation(line: 900, column: 8, scope: !7118)
!7122 = !DILocation(line: 901, column: 13, scope: !7118)
!7123 = !DILocation(line: 901, column: 11, scope: !7118)
!7124 = !DILocation(line: 902, column: 15, scope: !7118)
!7125 = !DILocation(line: 902, column: 19, scope: !7118)
!7126 = !DILocation(line: 902, column: 27, scope: !7118)
!7127 = !DILocation(line: 902, column: 4, scope: !7118)
!7128 = !DILocation(line: 905, column: 10, scope: !7081)
!7129 = !DILocation(line: 905, column: 7, scope: !7081)
!7130 = !DILocation(line: 906, column: 10, scope: !7081)
!7131 = !DILocation(line: 906, column: 7, scope: !7081)
!7132 = !DILocation(line: 907, column: 16, scope: !7081)
!7133 = !DILocation(line: 907, column: 8, scope: !7081)
!7134 = !DILocation(line: 907, column: 6, scope: !7081)
!7135 = !DILocation(line: 908, column: 2, scope: !7081)
!7136 = !DILocation(line: 878, column: 24, scope: !7075)
!7137 = !DILocation(line: 878, column: 2, scope: !7075)
!7138 = distinct !{!7138, !7078, !7139}
!7139 = !DILocation(line: 908, column: 2, scope: !7072)
!7140 = !DILocation(line: 910, column: 8, scope: !6989)
!7141 = !DILocation(line: 910, column: 6, scope: !6989)
!7142 = !DILocation(line: 911, column: 7, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 911, column: 6)
!7144 = !DILocation(line: 911, column: 6, scope: !6989)
!7145 = !DILocation(line: 912, column: 7, scope: !7143)
!7146 = !DILocation(line: 912, column: 3, scope: !7143)
!7147 = !DILocation(line: 913, column: 6, scope: !7148)
!7148 = distinct !DILexicalBlock(scope: !6989, file: !3, line: 913, column: 6)
!7149 = !DILocation(line: 913, column: 10, scope: !7148)
!7150 = !DILocation(line: 913, column: 6, scope: !6989)
!7151 = !DILocation(line: 914, column: 17, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7148, file: !3, line: 913, column: 15)
!7153 = !DILocation(line: 914, column: 3, scope: !7152)
!7154 = !DILocation(line: 915, column: 10, scope: !7152)
!7155 = !DILocation(line: 915, column: 3, scope: !7152)
!7156 = !DILocation(line: 918, column: 15, scope: !6989)
!7157 = !DILocation(line: 918, column: 2, scope: !6989)
!7158 = !DILocation(line: 918, column: 7, scope: !6989)
!7159 = !DILocation(line: 918, column: 13, scope: !6989)
!7160 = !DILocation(line: 920, column: 2, scope: !6989)
!7161 = !DILocation(line: 921, column: 1, scope: !6989)
!7162 = distinct !DISubprogram(name: "dma_get_max_seg_size", scope: !7163, file: !7163, line: 452, type: !7164, scopeLine: 453, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7163 = !DIFile(filename: "./include/linux/dma-mapping.h", directory: "/home/lizy2001/genbc/linux")
!7164 = !DISubroutineType(types: !7165)
!7165 = !{!7, !3506}
!7166 = !DILocalVariable(name: "dev", arg: 1, scope: !7162, file: !7163, line: 452, type: !3506)
!7167 = !DILocation(line: 452, column: 64, scope: !7162)
!7168 = !DILocation(line: 454, column: 6, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7162, file: !7163, line: 454, column: 6)
!7170 = !DILocation(line: 454, column: 11, scope: !7169)
!7171 = !DILocation(line: 454, column: 21, scope: !7169)
!7172 = !DILocation(line: 454, column: 24, scope: !7169)
!7173 = !DILocation(line: 454, column: 29, scope: !7169)
!7174 = !DILocation(line: 454, column: 40, scope: !7169)
!7175 = !DILocation(line: 454, column: 6, scope: !7162)
!7176 = !DILocation(line: 455, column: 10, scope: !7169)
!7177 = !DILocation(line: 455, column: 15, scope: !7169)
!7178 = !DILocation(line: 455, column: 26, scope: !7169)
!7179 = !DILocation(line: 455, column: 3, scope: !7169)
!7180 = !DILocation(line: 456, column: 2, scope: !7162)
!7181 = !DILocation(line: 457, column: 1, scope: !7162)
!7182 = distinct !DISubprogram(name: "kmap_to_page", scope: !7183, file: !7183, line: 130, type: !7184, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7183 = !DIFile(filename: "./include/linux/highmem.h", directory: "/home/lizy2001/genbc/linux")
!7184 = !DISubroutineType(types: !7185)
!7185 = !{!835, !228}
!7186 = !DILocalVariable(name: "addr", arg: 1, scope: !7182, file: !7183, line: 130, type: !228)
!7187 = !DILocation(line: 130, column: 47, scope: !7182)
!7188 = !DILocation(line: 132, column: 9, scope: !7182)
!7189 = !DILocation(line: 132, column: 2, scope: !7182)
!7190 = distinct !DISubprogram(name: "sg_set_page", scope: !4626, file: !4626, line: 116, type: !7191, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7191 = !DISubroutineType(types: !7192)
!7192 = !{null, !4629, !835, !7, !7}
!7193 = !DILocalVariable(name: "sg", arg: 1, scope: !7190, file: !4626, line: 116, type: !4629)
!7194 = !DILocation(line: 116, column: 52, scope: !7190)
!7195 = !DILocalVariable(name: "page", arg: 2, scope: !7190, file: !4626, line: 116, type: !835)
!7196 = !DILocation(line: 116, column: 69, scope: !7190)
!7197 = !DILocalVariable(name: "len", arg: 3, scope: !7190, file: !4626, line: 117, type: !7)
!7198 = !DILocation(line: 117, column: 24, scope: !7190)
!7199 = !DILocalVariable(name: "offset", arg: 4, scope: !7190, file: !4626, line: 117, type: !7)
!7200 = !DILocation(line: 117, column: 42, scope: !7190)
!7201 = !DILocation(line: 119, column: 17, scope: !7190)
!7202 = !DILocation(line: 119, column: 21, scope: !7190)
!7203 = !DILocation(line: 119, column: 2, scope: !7190)
!7204 = !DILocation(line: 120, column: 15, scope: !7190)
!7205 = !DILocation(line: 120, column: 2, scope: !7190)
!7206 = !DILocation(line: 120, column: 6, scope: !7190)
!7207 = !DILocation(line: 120, column: 13, scope: !7190)
!7208 = !DILocation(line: 121, column: 15, scope: !7190)
!7209 = !DILocation(line: 121, column: 2, scope: !7190)
!7210 = !DILocation(line: 121, column: 6, scope: !7190)
!7211 = !DILocation(line: 121, column: 13, scope: !7190)
!7212 = !DILocation(line: 122, column: 1, scope: !7190)
!7213 = distinct !DISubprogram(name: "sg_set_buf", scope: !4626, file: !4626, line: 139, type: !7214, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7214 = !DISubroutineType(types: !7215)
!7215 = !{null, !4629, !269, !7}
!7216 = !DILocalVariable(name: "sg", arg: 1, scope: !7213, file: !4626, line: 139, type: !4629)
!7217 = !DILocation(line: 139, column: 51, scope: !7213)
!7218 = !DILocalVariable(name: "buf", arg: 2, scope: !7213, file: !4626, line: 139, type: !269)
!7219 = !DILocation(line: 139, column: 67, scope: !7213)
!7220 = !DILocalVariable(name: "buflen", arg: 3, scope: !7213, file: !4626, line: 140, type: !7)
!7221 = !DILocation(line: 140, column: 23, scope: !7213)
!7222 = !DILocation(line: 145, column: 14, scope: !7213)
!7223 = !DILocation(line: 145, column: 18, scope: !7213)
!7224 = !DILocation(line: 145, column: 37, scope: !7213)
!7225 = !DILocation(line: 145, column: 45, scope: !7213)
!7226 = !DILocation(line: 145, column: 2, scope: !7213)
!7227 = !DILocation(line: 146, column: 1, scope: !7213)
!7228 = distinct !DISubprogram(name: "spi_unmap_buf", scope: !3, file: !3, line: 923, type: !7229, scopeLine: 925, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7229 = !DISubroutineType(types: !7230)
!7230 = !{null, !4512, !3506, !6992, !197}
!7231 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7228, file: !3, line: 923, type: !4512)
!7232 = !DILocation(line: 923, column: 43, scope: !7228)
!7233 = !DILocalVariable(name: "dev", arg: 2, scope: !7228, file: !3, line: 923, type: !3506)
!7234 = !DILocation(line: 923, column: 64, scope: !7228)
!7235 = !DILocalVariable(name: "sgt", arg: 3, scope: !7228, file: !3, line: 924, type: !6992)
!7236 = !DILocation(line: 924, column: 23, scope: !7228)
!7237 = !DILocalVariable(name: "dir", arg: 4, scope: !7228, file: !3, line: 924, type: !197)
!7238 = !DILocation(line: 924, column: 52, scope: !7228)
!7239 = !DILocation(line: 926, column: 6, scope: !7240)
!7240 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 926, column: 6)
!7241 = !DILocation(line: 926, column: 11, scope: !7240)
!7242 = !DILocation(line: 926, column: 6, scope: !7228)
!7243 = !DILocation(line: 927, column: 3, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7240, file: !3, line: 926, column: 23)
!7245 = !DILocation(line: 928, column: 17, scope: !7244)
!7246 = !DILocation(line: 928, column: 3, scope: !7244)
!7247 = !DILocation(line: 929, column: 2, scope: !7244)
!7248 = !DILocation(line: 930, column: 1, scope: !7228)
!7249 = distinct !DISubprogram(name: "spi_delay_to_ns", scope: !3, file: !3, line: 1148, type: !7250, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7250 = !DISubroutineType(types: !7251)
!7251 = !{!234, !4589, !4616}
!7252 = !DILocalVariable(name: "_delay", arg: 1, scope: !7249, file: !3, line: 1148, type: !4589)
!7253 = !DILocation(line: 1148, column: 39, scope: !7249)
!7254 = !DILocalVariable(name: "xfer", arg: 2, scope: !7249, file: !3, line: 1148, type: !4616)
!7255 = !DILocation(line: 1148, column: 68, scope: !7249)
!7256 = !DILocalVariable(name: "delay", scope: !7249, file: !3, line: 1150, type: !479)
!7257 = !DILocation(line: 1150, column: 6, scope: !7249)
!7258 = !DILocation(line: 1150, column: 14, scope: !7249)
!7259 = !DILocation(line: 1150, column: 22, scope: !7249)
!7260 = !DILocalVariable(name: "unit", scope: !7249, file: !3, line: 1151, type: !479)
!7261 = !DILocation(line: 1151, column: 6, scope: !7249)
!7262 = !DILocation(line: 1151, column: 13, scope: !7249)
!7263 = !DILocation(line: 1151, column: 21, scope: !7249)
!7264 = !DILocalVariable(name: "hz", scope: !7249, file: !3, line: 1152, type: !479)
!7265 = !DILocation(line: 1152, column: 6, scope: !7249)
!7266 = !DILocation(line: 1154, column: 7, scope: !7267)
!7267 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 1154, column: 6)
!7268 = !DILocation(line: 1154, column: 6, scope: !7249)
!7269 = !DILocation(line: 1155, column: 3, scope: !7267)
!7270 = !DILocation(line: 1157, column: 10, scope: !7249)
!7271 = !DILocation(line: 1157, column: 2, scope: !7249)
!7272 = !DILocation(line: 1159, column: 9, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7249, file: !3, line: 1157, column: 16)
!7274 = !DILocation(line: 1160, column: 3, scope: !7273)
!7275 = !DILocation(line: 1162, column: 3, scope: !7273)
!7276 = !DILocation(line: 1165, column: 8, scope: !7277)
!7277 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 1165, column: 7)
!7278 = !DILocation(line: 1165, column: 7, scope: !7273)
!7279 = !DILocation(line: 1166, column: 4, scope: !7277)
!7280 = !DILocation(line: 1170, column: 8, scope: !7273)
!7281 = !DILocation(line: 1170, column: 14, scope: !7273)
!7282 = !DILocation(line: 1170, column: 36, scope: !7273)
!7283 = !DILocation(line: 1170, column: 42, scope: !7273)
!7284 = !DILocation(line: 1170, column: 51, scope: !7273)
!7285 = !DILocation(line: 1170, column: 6, scope: !7273)
!7286 = !DILocation(line: 1171, column: 8, scope: !7287)
!7287 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 1171, column: 7)
!7288 = !DILocation(line: 1171, column: 7, scope: !7273)
!7289 = !DILocation(line: 1172, column: 4, scope: !7287)
!7290 = !DILocation(line: 1173, column: 12, scope: !7273)
!7291 = !DILocation(line: 1173, column: 9, scope: !7273)
!7292 = !DILocation(line: 1174, column: 3, scope: !7273)
!7293 = !DILocation(line: 1176, column: 3, scope: !7273)
!7294 = !DILocation(line: 1179, column: 9, scope: !7249)
!7295 = !DILocation(line: 1179, column: 2, scope: !7249)
!7296 = !DILocation(line: 1180, column: 1, scope: !7249)
!7297 = distinct !DISubprogram(name: "spi_delay_exec", scope: !3, file: !3, line: 1183, type: !7250, scopeLine: 1184, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7298 = !DILocalVariable(name: "_delay", arg: 1, scope: !7297, file: !3, line: 1183, type: !4589)
!7299 = !DILocation(line: 1183, column: 38, scope: !7297)
!7300 = !DILocalVariable(name: "xfer", arg: 2, scope: !7297, file: !3, line: 1183, type: !4616)
!7301 = !DILocation(line: 1183, column: 67, scope: !7297)
!7302 = !DILocalVariable(name: "delay", scope: !7297, file: !3, line: 1185, type: !234)
!7303 = !DILocation(line: 1185, column: 6, scope: !7297)
!7304 = !DILocation(line: 1187, column: 2, scope: !7297)
!7305 = !DILocation(line: 1187, column: 2, scope: !7306)
!7306 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 1187, column: 2)
!7307 = !DILocation(line: 1187, column: 2, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7306, file: !3, line: 1187, column: 2)
!7309 = !DILocation(line: 1189, column: 7, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 1189, column: 6)
!7311 = !DILocation(line: 1189, column: 6, scope: !7297)
!7312 = !DILocation(line: 1190, column: 3, scope: !7310)
!7313 = !DILocation(line: 1192, column: 26, scope: !7297)
!7314 = !DILocation(line: 1192, column: 34, scope: !7297)
!7315 = !DILocation(line: 1192, column: 10, scope: !7297)
!7316 = !DILocation(line: 1192, column: 8, scope: !7297)
!7317 = !DILocation(line: 1193, column: 6, scope: !7318)
!7318 = distinct !DILexicalBlock(scope: !7297, file: !3, line: 1193, column: 6)
!7319 = !DILocation(line: 1193, column: 12, scope: !7318)
!7320 = !DILocation(line: 1193, column: 6, scope: !7297)
!7321 = !DILocation(line: 1194, column: 10, scope: !7318)
!7322 = !DILocation(line: 1194, column: 3, scope: !7318)
!7323 = !DILocation(line: 1196, column: 25, scope: !7297)
!7324 = !DILocation(line: 1196, column: 2, scope: !7297)
!7325 = !DILocation(line: 1198, column: 2, scope: !7297)
!7326 = !DILocation(line: 1199, column: 1, scope: !7297)
!7327 = distinct !DISubprogram(name: "_spi_transfer_delay_ns", scope: !3, file: !3, line: 1132, type: !7328, scopeLine: 1133, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7328 = !DISubroutineType(types: !7329)
!7329 = !{null, !479}
!7330 = !DILocalVariable(name: "ns", arg: 1, scope: !7327, file: !3, line: 1132, type: !479)
!7331 = !DILocation(line: 1132, column: 40, scope: !7327)
!7332 = !DILocation(line: 1134, column: 7, scope: !7333)
!7333 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1134, column: 6)
!7334 = !DILocation(line: 1134, column: 6, scope: !7327)
!7335 = !DILocation(line: 1135, column: 3, scope: !7333)
!7336 = !DILocation(line: 1136, column: 6, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7327, file: !3, line: 1136, column: 6)
!7338 = !DILocation(line: 1136, column: 9, scope: !7337)
!7339 = !DILocation(line: 1136, column: 6, scope: !7327)
!7340 = !DILocation(line: 1137, column: 3, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 1137, column: 3)
!7342 = distinct !DILexicalBlock(scope: !7343, file: !3, line: 1137, column: 3)
!7343 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 1136, column: 18)
!7344 = !DILocation(line: 1137, column: 3, scope: !7342)
!7345 = !DILocation(line: 1137, column: 3, scope: !7346)
!7346 = distinct !DILexicalBlock(scope: !7347, file: !3, line: 1137, column: 3)
!7347 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 1137, column: 3)
!7348 = !DILocation(line: 1137, column: 3, scope: !7347)
!7349 = !DILocation(line: 1137, column: 3, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 1137, column: 3)
!7351 = !DILocation(line: 1138, column: 2, scope: !7343)
!7352 = !DILocalVariable(name: "us", scope: !7353, file: !3, line: 1139, type: !479)
!7353 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 1138, column: 9)
!7354 = !DILocation(line: 1139, column: 7, scope: !7353)
!7355 = !DILocation(line: 1139, column: 12, scope: !7353)
!7356 = !DILocation(line: 1141, column: 7, scope: !7357)
!7357 = distinct !DILexicalBlock(scope: !7353, file: !3, line: 1141, column: 7)
!7358 = !DILocation(line: 1141, column: 10, scope: !7357)
!7359 = !DILocation(line: 1141, column: 7, scope: !7353)
!7360 = !DILocation(line: 1142, column: 4, scope: !7361)
!7361 = distinct !DILexicalBlock(scope: !7362, file: !3, line: 1142, column: 4)
!7362 = distinct !DILexicalBlock(scope: !7357, file: !3, line: 1142, column: 4)
!7363 = !DILocation(line: 1142, column: 4, scope: !7362)
!7364 = !DILocation(line: 1142, column: 4, scope: !7365)
!7365 = distinct !DILexicalBlock(scope: !7366, file: !3, line: 1142, column: 4)
!7366 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 1142, column: 4)
!7367 = !DILocation(line: 1142, column: 4, scope: !7366)
!7368 = !DILocation(line: 1142, column: 4, scope: !7369)
!7369 = distinct !DILexicalBlock(scope: !7361, file: !3, line: 1142, column: 4)
!7370 = !DILocation(line: 1142, column: 4, scope: !7357)
!7371 = !DILocation(line: 1144, column: 17, scope: !7357)
!7372 = !DILocation(line: 1144, column: 21, scope: !7357)
!7373 = !DILocation(line: 1144, column: 26, scope: !7357)
!7374 = !DILocation(line: 1144, column: 24, scope: !7357)
!7375 = !DILocation(line: 1144, column: 4, scope: !7357)
!7376 = !DILocation(line: 1146, column: 1, scope: !7327)
!7377 = distinct !DISubprogram(name: "spi_finalize_current_transfer", scope: !3, file: !3, line: 1341, type: !6210, scopeLine: 1342, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7378 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7377, file: !3, line: 1341, type: !4512)
!7379 = !DILocation(line: 1341, column: 59, scope: !7377)
!7380 = !DILocation(line: 1343, column: 12, scope: !7377)
!7381 = !DILocation(line: 1343, column: 18, scope: !7377)
!7382 = !DILocation(line: 1343, column: 2, scope: !7377)
!7383 = !DILocation(line: 1344, column: 1, scope: !7377)
!7384 = distinct !DISubprogram(name: "spi_take_timestamp_pre", scope: !3, file: !3, line: 1556, type: !7385, scopeLine: 1559, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7385 = !DISubroutineType(types: !7386)
!7386 = !{null, !4512, !4616, !385, !261}
!7387 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7384, file: !3, line: 1556, type: !4512)
!7388 = !DILocation(line: 1556, column: 52, scope: !7384)
!7389 = !DILocalVariable(name: "xfer", arg: 2, scope: !7384, file: !3, line: 1557, type: !4616)
!7390 = !DILocation(line: 1557, column: 29, scope: !7384)
!7391 = !DILocalVariable(name: "progress", arg: 3, scope: !7384, file: !3, line: 1558, type: !385)
!7392 = !DILocation(line: 1558, column: 15, scope: !7384)
!7393 = !DILocalVariable(name: "irqs_off", arg: 4, scope: !7384, file: !3, line: 1558, type: !261)
!7394 = !DILocation(line: 1558, column: 30, scope: !7384)
!7395 = !DILocation(line: 1560, column: 7, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 1560, column: 6)
!7397 = !DILocation(line: 1560, column: 13, scope: !7396)
!7398 = !DILocation(line: 1560, column: 6, scope: !7384)
!7399 = !DILocation(line: 1561, column: 3, scope: !7396)
!7400 = !DILocation(line: 1563, column: 6, scope: !7401)
!7401 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 1563, column: 6)
!7402 = !DILocation(line: 1563, column: 12, scope: !7401)
!7403 = !DILocation(line: 1563, column: 6, scope: !7384)
!7404 = !DILocation(line: 1564, column: 3, scope: !7401)
!7405 = !DILocation(line: 1566, column: 6, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 1566, column: 6)
!7407 = !DILocation(line: 1566, column: 17, scope: !7406)
!7408 = !DILocation(line: 1566, column: 23, scope: !7406)
!7409 = !DILocation(line: 1566, column: 15, scope: !7406)
!7410 = !DILocation(line: 1566, column: 6, scope: !7384)
!7411 = !DILocation(line: 1567, column: 3, scope: !7406)
!7412 = !DILocation(line: 1570, column: 27, scope: !7384)
!7413 = !DILocation(line: 1570, column: 2, scope: !7384)
!7414 = !DILocation(line: 1570, column: 8, scope: !7384)
!7415 = !DILocation(line: 1570, column: 25, scope: !7384)
!7416 = !DILocation(line: 1572, column: 6, scope: !7417)
!7417 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 1572, column: 6)
!7418 = !DILocation(line: 1572, column: 6, scope: !7384)
!7419 = !DILocation(line: 1573, column: 3, scope: !7420)
!7420 = distinct !DILexicalBlock(scope: !7417, file: !3, line: 1572, column: 16)
!7421 = !DILocation(line: 1573, column: 3, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7420, file: !3, line: 1573, column: 3)
!7423 = !DILocalVariable(name: "__dummy", scope: !7424, file: !3, line: 1573, type: !388)
!7424 = distinct !DILexicalBlock(scope: !7425, file: !3, line: 1573, column: 3)
!7425 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 1573, column: 3)
!7426 = !DILocation(line: 1573, column: 3, scope: !7424)
!7427 = !DILocalVariable(name: "__dummy2", scope: !7424, file: !3, line: 1573, type: !388)
!7428 = !DILocation(line: 1573, column: 3, scope: !7425)
!7429 = !DILocation(line: 1574, column: 3, scope: !7420)
!7430 = !{i32 -2140495338}
!7431 = !DILocation(line: 1575, column: 2, scope: !7420)
!7432 = !DILocation(line: 1577, column: 24, scope: !7384)
!7433 = !DILocation(line: 1577, column: 30, scope: !7384)
!7434 = !DILocation(line: 1577, column: 2, scope: !7384)
!7435 = !DILocation(line: 1578, column: 1, scope: !7384)
!7436 = distinct !DISubprogram(name: "ptp_read_system_prets", scope: !4655, file: !4655, line: 298, type: !7437, scopeLine: 299, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7437 = !DISubroutineType(types: !7438)
!7438 = !{null, !4653}
!7439 = !DILocalVariable(name: "sts", arg: 1, scope: !7436, file: !4655, line: 298, type: !4653)
!7440 = !DILocation(line: 298, column: 71, scope: !7436)
!7441 = !DILocation(line: 300, column: 6, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7436, file: !4655, line: 300, column: 6)
!7443 = !DILocation(line: 300, column: 6, scope: !7436)
!7444 = !DILocation(line: 301, column: 24, scope: !7442)
!7445 = !DILocation(line: 301, column: 29, scope: !7442)
!7446 = !DILocation(line: 301, column: 3, scope: !7442)
!7447 = !DILocation(line: 302, column: 1, scope: !7436)
!7448 = distinct !DISubprogram(name: "spi_take_timestamp_post", scope: !3, file: !3, line: 1593, type: !7385, scopeLine: 1596, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7449 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7448, file: !3, line: 1593, type: !4512)
!7450 = !DILocation(line: 1593, column: 53, scope: !7448)
!7451 = !DILocalVariable(name: "xfer", arg: 2, scope: !7448, file: !3, line: 1594, type: !4616)
!7452 = !DILocation(line: 1594, column: 30, scope: !7448)
!7453 = !DILocalVariable(name: "progress", arg: 3, scope: !7448, file: !3, line: 1595, type: !385)
!7454 = !DILocation(line: 1595, column: 16, scope: !7448)
!7455 = !DILocalVariable(name: "irqs_off", arg: 4, scope: !7448, file: !3, line: 1595, type: !261)
!7456 = !DILocation(line: 1595, column: 31, scope: !7448)
!7457 = !DILocation(line: 1597, column: 7, scope: !7458)
!7458 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 1597, column: 6)
!7459 = !DILocation(line: 1597, column: 13, scope: !7458)
!7460 = !DILocation(line: 1597, column: 6, scope: !7448)
!7461 = !DILocation(line: 1598, column: 3, scope: !7458)
!7462 = !DILocation(line: 1600, column: 6, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 1600, column: 6)
!7464 = !DILocation(line: 1600, column: 12, scope: !7463)
!7465 = !DILocation(line: 1600, column: 6, scope: !7448)
!7466 = !DILocation(line: 1601, column: 3, scope: !7463)
!7467 = !DILocation(line: 1603, column: 6, scope: !7468)
!7468 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 1603, column: 6)
!7469 = !DILocation(line: 1603, column: 17, scope: !7468)
!7470 = !DILocation(line: 1603, column: 23, scope: !7468)
!7471 = !DILocation(line: 1603, column: 15, scope: !7468)
!7472 = !DILocation(line: 1603, column: 6, scope: !7448)
!7473 = !DILocation(line: 1604, column: 3, scope: !7468)
!7474 = !DILocation(line: 1606, column: 25, scope: !7448)
!7475 = !DILocation(line: 1606, column: 31, scope: !7448)
!7476 = !DILocation(line: 1606, column: 2, scope: !7448)
!7477 = !DILocation(line: 1608, column: 6, scope: !7478)
!7478 = distinct !DILexicalBlock(scope: !7448, file: !3, line: 1608, column: 6)
!7479 = !DILocation(line: 1608, column: 6, scope: !7448)
!7480 = !DILocation(line: 1609, column: 3, scope: !7481)
!7481 = distinct !DILexicalBlock(scope: !7478, file: !3, line: 1608, column: 16)
!7482 = !DILocation(line: 1609, column: 3, scope: !7483)
!7483 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 1609, column: 3)
!7484 = !DILocalVariable(name: "__dummy", scope: !7485, file: !3, line: 1609, type: !388)
!7485 = distinct !DILexicalBlock(scope: !7486, file: !3, line: 1609, column: 3)
!7486 = distinct !DILexicalBlock(scope: !7483, file: !3, line: 1609, column: 3)
!7487 = !DILocation(line: 1609, column: 3, scope: !7485)
!7488 = !DILocalVariable(name: "__dummy2", scope: !7485, file: !3, line: 1609, type: !388)
!7489 = !DILocation(line: 1609, column: 3, scope: !7486)
!7490 = !DILocation(line: 1610, column: 3, scope: !7481)
!7491 = !{i32 -2140494869}
!7492 = !DILocation(line: 1611, column: 2, scope: !7481)
!7493 = !DILocation(line: 1614, column: 28, scope: !7448)
!7494 = !DILocation(line: 1614, column: 2, scope: !7448)
!7495 = !DILocation(line: 1614, column: 8, scope: !7448)
!7496 = !DILocation(line: 1614, column: 26, scope: !7448)
!7497 = !DILocation(line: 1616, column: 2, scope: !7448)
!7498 = !DILocation(line: 1616, column: 8, scope: !7448)
!7499 = !DILocation(line: 1616, column: 20, scope: !7448)
!7500 = !DILocation(line: 1617, column: 1, scope: !7448)
!7501 = distinct !DISubprogram(name: "ptp_read_system_postts", scope: !4655, file: !4655, line: 304, type: !7437, scopeLine: 305, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7502 = !DILocalVariable(name: "sts", arg: 1, scope: !7501, file: !4655, line: 304, type: !4653)
!7503 = !DILocation(line: 304, column: 72, scope: !7501)
!7504 = !DILocation(line: 306, column: 6, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7501, file: !4655, line: 306, column: 6)
!7506 = !DILocation(line: 306, column: 6, scope: !7501)
!7507 = !DILocation(line: 307, column: 24, scope: !7505)
!7508 = !DILocation(line: 307, column: 29, scope: !7505)
!7509 = !DILocation(line: 307, column: 3, scope: !7505)
!7510 = !DILocation(line: 308, column: 1, scope: !7501)
!7511 = distinct !DISubprogram(name: "arch_local_irq_restore", scope: !5564, file: !5564, line: 651, type: !7512, scopeLine: 652, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7512 = !DISubroutineType(types: !7513)
!7513 = !{null, !388}
!7514 = !DILocalVariable(name: "f", arg: 1, scope: !7511, file: !5564, line: 651, type: !388)
!7515 = !DILocation(line: 651, column: 65, scope: !7511)
!7516 = !DILocalVariable(name: "__edi", scope: !7517, file: !5564, line: 653, type: !388)
!7517 = distinct !DILexicalBlock(scope: !7511, file: !5564, line: 653, column: 2)
!7518 = !DILocation(line: 653, column: 2, scope: !7517)
!7519 = !DILocalVariable(name: "__esi", scope: !7517, file: !5564, line: 653, type: !388)
!7520 = !DILocalVariable(name: "__edx", scope: !7517, file: !5564, line: 653, type: !388)
!7521 = !DILocalVariable(name: "__ecx", scope: !7517, file: !5564, line: 653, type: !388)
!7522 = !DILocalVariable(name: "__eax", scope: !7517, file: !5564, line: 653, type: !388)
!7523 = !{i32 -2145655213, i32 -2145654463, i32 -2145654229, i32 -2145654178, i32 -2145654150, i32 -2145654125, i32 -2145654441, i32 -2145654428, i32 -2145653990, i32 -2145653871, i32 -2145654336, i32 -2145654309, i32 -2145654281, i32 -2145654251}
!7524 = !DILocation(line: 654, column: 1, scope: !7511)
!7525 = distinct !DISubprogram(name: "spi_get_next_queued_message", scope: !3, file: !3, line: 1678, type: !7526, scopeLine: 1679, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7526 = !DISubroutineType(types: !7527)
!7527 = !{!4594, !4512}
!7528 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7529)
!7529 = distinct !DILocation(line: 1687, column: 2, scope: !7525)
!7530 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7529)
!7531 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !7532)
!7532 = distinct !DILocation(line: 1684, column: 2, scope: !7533)
!7533 = distinct !DILexicalBlock(scope: !7534, file: !3, line: 1684, column: 2)
!7534 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 1684, column: 2)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 1684, column: 2)
!7536 = distinct !DILexicalBlock(scope: !7537, file: !3, line: 1684, column: 2)
!7537 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 1684, column: 2)
!7538 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7525, file: !3, line: 1678, type: !4512)
!7539 = !DILocation(line: 1678, column: 72, scope: !7525)
!7540 = !DILocalVariable(name: "next", scope: !7525, file: !3, line: 1680, type: !4594)
!7541 = !DILocation(line: 1680, column: 22, scope: !7525)
!7542 = !DILocalVariable(name: "flags", scope: !7525, file: !3, line: 1681, type: !388)
!7543 = !DILocation(line: 1681, column: 16, scope: !7525)
!7544 = !DILocation(line: 1684, column: 2, scope: !7525)
!7545 = !DILocation(line: 1684, column: 2, scope: !7537)
!7546 = !DILocalVariable(name: "__dummy", scope: !7547, file: !3, line: 1684, type: !388)
!7547 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 1684, column: 2)
!7548 = !DILocation(line: 1684, column: 2, scope: !7547)
!7549 = !DILocalVariable(name: "__dummy2", scope: !7547, file: !3, line: 1684, type: !388)
!7550 = !DILocation(line: 1684, column: 2, scope: !7536)
!7551 = !DILocation(line: 1684, column: 2, scope: !7535)
!7552 = !DILocation(line: 1684, column: 2, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 1684, column: 2)
!7554 = !DILocalVariable(name: "__dummy", scope: !7555, file: !3, line: 1684, type: !388)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1684, column: 2)
!7556 = distinct !DILexicalBlock(scope: !7553, file: !3, line: 1684, column: 2)
!7557 = !DILocation(line: 1684, column: 2, scope: !7555)
!7558 = !DILocalVariable(name: "__dummy2", scope: !7555, file: !3, line: 1684, type: !388)
!7559 = !DILocation(line: 1684, column: 2, scope: !7556)
!7560 = !DILocation(line: 1684, column: 2, scope: !7534)
!7561 = !{i32 -2140493296}
!7562 = !DILocation(line: 1684, column: 2, scope: !7533)
!7563 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !7532)
!7564 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !7532)
!7565 = !DILocalVariable(name: "head__", scope: !7566, file: !3, line: 1685, type: !287)
!7566 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 1685, column: 9)
!7567 = !DILocation(line: 1685, column: 9, scope: !7566)
!7568 = !DILocalVariable(name: "pos__", scope: !7566, file: !3, line: 1685, type: !287)
!7569 = !DILocation(line: 1685, column: 9, scope: !7570)
!7570 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 1685, column: 9)
!7571 = !DILocation(line: 1685, column: 9, scope: !7572)
!7572 = distinct !DILexicalBlock(scope: !7570, file: !3, line: 1685, column: 9)
!7573 = !DILocalVariable(name: "__mptr", scope: !7574, file: !3, line: 1685, type: !228)
!7574 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 1685, column: 9)
!7575 = !DILocation(line: 1685, column: 9, scope: !7574)
!7576 = !DILocation(line: 1685, column: 9, scope: !7577)
!7577 = distinct !DILexicalBlock(scope: !7574, file: !3, line: 1685, column: 9)
!7578 = !DILocation(line: 1685, column: 7, scope: !7525)
!7579 = !DILocation(line: 1687, column: 26, scope: !7525)
!7580 = !DILocation(line: 1687, column: 32, scope: !7525)
!7581 = !DILocation(line: 1687, column: 44, scope: !7525)
!7582 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7529)
!7583 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7529)
!7584 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7529)
!7585 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7529)
!7586 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7529)
!7587 = !DILocation(line: 1689, column: 9, scope: !7525)
!7588 = !DILocation(line: 1689, column: 2, scope: !7525)
!7589 = distinct !DISubprogram(name: "spi_finalize_current_message", scope: !3, file: !3, line: 1700, type: !6210, scopeLine: 1701, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7590 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7591)
!7591 = distinct !DILocation(line: 1744, column: 2, scope: !7589)
!7592 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7591)
!7593 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !7594)
!7594 = distinct !DILocation(line: 1739, column: 2, scope: !7595)
!7595 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 1739, column: 2)
!7596 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 1739, column: 2)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 1739, column: 2)
!7598 = distinct !DILexicalBlock(scope: !7599, file: !3, line: 1739, column: 2)
!7599 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 1739, column: 2)
!7600 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7601)
!7601 = distinct !DILocation(line: 1709, column: 2, scope: !7589)
!7602 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7601)
!7603 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !7604)
!7604 = distinct !DILocation(line: 1707, column: 2, scope: !7605)
!7605 = distinct !DILexicalBlock(scope: !7606, file: !3, line: 1707, column: 2)
!7606 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 1707, column: 2)
!7607 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 1707, column: 2)
!7608 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 1707, column: 2)
!7609 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 1707, column: 2)
!7610 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7589, file: !3, line: 1700, type: !4512)
!7611 = !DILocation(line: 1700, column: 58, scope: !7589)
!7612 = !DILocalVariable(name: "xfer", scope: !7589, file: !3, line: 1702, type: !4616)
!7613 = !DILocation(line: 1702, column: 23, scope: !7589)
!7614 = !DILocalVariable(name: "mesg", scope: !7589, file: !3, line: 1703, type: !4594)
!7615 = !DILocation(line: 1703, column: 22, scope: !7589)
!7616 = !DILocalVariable(name: "flags", scope: !7589, file: !3, line: 1704, type: !388)
!7617 = !DILocation(line: 1704, column: 16, scope: !7589)
!7618 = !DILocalVariable(name: "ret", scope: !7589, file: !3, line: 1705, type: !234)
!7619 = !DILocation(line: 1705, column: 6, scope: !7589)
!7620 = !DILocation(line: 1707, column: 2, scope: !7589)
!7621 = !DILocation(line: 1707, column: 2, scope: !7609)
!7622 = !DILocalVariable(name: "__dummy", scope: !7623, file: !3, line: 1707, type: !388)
!7623 = distinct !DILexicalBlock(scope: !7608, file: !3, line: 1707, column: 2)
!7624 = !DILocation(line: 1707, column: 2, scope: !7623)
!7625 = !DILocalVariable(name: "__dummy2", scope: !7623, file: !3, line: 1707, type: !388)
!7626 = !DILocation(line: 1707, column: 2, scope: !7608)
!7627 = !DILocation(line: 1707, column: 2, scope: !7607)
!7628 = !DILocation(line: 1707, column: 2, scope: !7629)
!7629 = distinct !DILexicalBlock(scope: !7607, file: !3, line: 1707, column: 2)
!7630 = !DILocalVariable(name: "__dummy", scope: !7631, file: !3, line: 1707, type: !388)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 1707, column: 2)
!7632 = distinct !DILexicalBlock(scope: !7629, file: !3, line: 1707, column: 2)
!7633 = !DILocation(line: 1707, column: 2, scope: !7631)
!7634 = !DILocalVariable(name: "__dummy2", scope: !7631, file: !3, line: 1707, type: !388)
!7635 = !DILocation(line: 1707, column: 2, scope: !7632)
!7636 = !DILocation(line: 1707, column: 2, scope: !7606)
!7637 = !{i32 -2140488368}
!7638 = !DILocation(line: 1707, column: 2, scope: !7605)
!7639 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !7604)
!7640 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !7604)
!7641 = !DILocation(line: 1708, column: 9, scope: !7589)
!7642 = !DILocation(line: 1708, column: 15, scope: !7589)
!7643 = !DILocation(line: 1708, column: 7, scope: !7589)
!7644 = !DILocation(line: 1709, column: 26, scope: !7589)
!7645 = !DILocation(line: 1709, column: 32, scope: !7589)
!7646 = !DILocation(line: 1709, column: 44, scope: !7589)
!7647 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7601)
!7648 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7601)
!7649 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7601)
!7650 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7601)
!7651 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7601)
!7652 = !DILocation(line: 1711, column: 7, scope: !7653)
!7653 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 1711, column: 6)
!7654 = !DILocation(line: 1711, column: 13, scope: !7653)
!7655 = !DILocation(line: 1711, column: 31, scope: !7653)
!7656 = !DILocation(line: 1711, column: 35, scope: !7653)
!7657 = !DILocation(line: 1711, column: 41, scope: !7653)
!7658 = !DILocation(line: 1711, column: 6, scope: !7589)
!7659 = !DILocalVariable(name: "__mptr", scope: !7660, file: !3, line: 1712, type: !228)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 1712, column: 3)
!7661 = distinct !DILexicalBlock(scope: !7662, file: !3, line: 1712, column: 3)
!7662 = distinct !DILexicalBlock(scope: !7653, file: !3, line: 1711, column: 55)
!7663 = !DILocation(line: 1712, column: 3, scope: !7660)
!7664 = !DILocation(line: 1712, column: 3, scope: !7665)
!7665 = distinct !DILexicalBlock(scope: !7660, file: !3, line: 1712, column: 3)
!7666 = !DILocation(line: 1712, column: 3, scope: !7661)
!7667 = !DILocation(line: 1712, column: 3, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 1712, column: 3)
!7669 = !DILocation(line: 1713, column: 27, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1712, column: 62)
!7671 = !DILocation(line: 1713, column: 33, scope: !7670)
!7672 = !DILocation(line: 1713, column: 4, scope: !7670)
!7673 = !DILocation(line: 1714, column: 30, scope: !7670)
!7674 = !DILocation(line: 1714, column: 36, scope: !7670)
!7675 = !DILocation(line: 1714, column: 4, scope: !7670)
!7676 = !DILocation(line: 1714, column: 10, scope: !7670)
!7677 = !DILocation(line: 1714, column: 28, scope: !7670)
!7678 = !DILocation(line: 1715, column: 3, scope: !7670)
!7679 = !DILocalVariable(name: "__mptr", scope: !7680, file: !3, line: 1712, type: !228)
!7680 = distinct !DILexicalBlock(scope: !7668, file: !3, line: 1712, column: 3)
!7681 = !DILocation(line: 1712, column: 3, scope: !7680)
!7682 = !DILocation(line: 1712, column: 3, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 1712, column: 3)
!7684 = distinct !{!7684, !7666, !7685}
!7685 = !DILocation(line: 1715, column: 3, scope: !7661)
!7686 = !DILocation(line: 1716, column: 2, scope: !7662)
!7687 = !DILocation(line: 1718, column: 6, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 1718, column: 6)
!7689 = !DILocation(line: 1718, column: 6, scope: !7589)
!7690 = !DILocalVariable(name: "__mptr", scope: !7691, file: !3, line: 1719, type: !228)
!7691 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 1719, column: 3)
!7692 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 1719, column: 3)
!7693 = !DILocation(line: 1719, column: 3, scope: !7691)
!7694 = !DILocation(line: 1719, column: 3, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7691, file: !3, line: 1719, column: 3)
!7696 = !DILocation(line: 1719, column: 3, scope: !7692)
!7697 = !DILocation(line: 1719, column: 3, scope: !7698)
!7698 = distinct !DILexicalBlock(scope: !7692, file: !3, line: 1719, column: 3)
!7699 = !DILocalVariable(name: "__ret_warn_on", scope: !7700, file: !3, line: 1720, type: !234)
!7700 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 1720, column: 4)
!7701 = !DILocation(line: 1720, column: 4, scope: !7700)
!7702 = !DILocation(line: 0, scope: !7700)
!7703 = !DILocation(line: 1720, column: 4, scope: !7704)
!7704 = distinct !DILexicalBlock(scope: !7700, file: !3, line: 1720, column: 4)
!7705 = !DILocation(line: 1720, column: 4, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7704, file: !3, line: 1720, column: 4)
!7707 = !DILocation(line: 1720, column: 4, scope: !7708)
!7708 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 1720, column: 4)
!7709 = !DILocation(line: 1720, column: 4, scope: !7710)
!7710 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 1720, column: 4)
!7711 = !{i32 -2140479178, i32 -2140479149, i32 -2140479103, i32 -2140479045, i32 -2140478991, i32 -2140478937, i32 -2140478882, i32 -2140478851}
!7712 = !DILocation(line: 1720, column: 4, scope: !7713)
!7713 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 1720, column: 4)
!7714 = !{i32 -2140478440, i32 -2140478433, i32 -2140478381, i32 -2140478350, i32 -2140478320}
!7715 = !DILocation(line: 1720, column: 4, scope: !7716)
!7716 = distinct !DILexicalBlock(scope: !7706, file: !3, line: 1720, column: 4)
!7717 = !DILocation(line: 1720, column: 4, scope: !7698)
!7718 = !DILocalVariable(name: "__mptr", scope: !7719, file: !3, line: 1719, type: !228)
!7719 = distinct !DILexicalBlock(scope: !7698, file: !3, line: 1719, column: 3)
!7720 = !DILocation(line: 1719, column: 3, scope: !7719)
!7721 = !DILocation(line: 1719, column: 3, scope: !7722)
!7722 = distinct !DILexicalBlock(scope: !7719, file: !3, line: 1719, column: 3)
!7723 = distinct !{!7723, !7696, !7724}
!7724 = !DILocation(line: 1720, column: 4, scope: !7692)
!7725 = !DILocation(line: 1722, column: 16, scope: !7589)
!7726 = !DILocation(line: 1722, column: 22, scope: !7589)
!7727 = !DILocation(line: 1722, column: 2, scope: !7589)
!7728 = !DILocation(line: 1729, column: 18, scope: !7589)
!7729 = !DILocation(line: 1729, column: 24, scope: !7589)
!7730 = !DILocation(line: 1729, column: 2, scope: !7589)
!7731 = !DILocation(line: 1731, column: 6, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 1731, column: 6)
!7733 = !DILocation(line: 1731, column: 12, scope: !7732)
!7734 = !DILocation(line: 1731, column: 29, scope: !7732)
!7735 = !DILocation(line: 1731, column: 32, scope: !7732)
!7736 = !DILocation(line: 1731, column: 38, scope: !7732)
!7737 = !DILocation(line: 1731, column: 6, scope: !7589)
!7738 = !DILocation(line: 1732, column: 9, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 1731, column: 57)
!7740 = !DILocation(line: 1732, column: 15, scope: !7739)
!7741 = !DILocation(line: 1732, column: 33, scope: !7739)
!7742 = !DILocation(line: 1732, column: 39, scope: !7739)
!7743 = !DILocation(line: 1732, column: 7, scope: !7739)
!7744 = !DILocation(line: 1733, column: 7, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 1733, column: 7)
!7746 = !DILocation(line: 1733, column: 7, scope: !7739)
!7747 = !DILocation(line: 1734, column: 4, scope: !7748)
!7748 = distinct !DILexicalBlock(scope: !7745, file: !3, line: 1733, column: 12)
!7749 = !DILocation(line: 1736, column: 3, scope: !7748)
!7750 = !DILocation(line: 1737, column: 2, scope: !7739)
!7751 = !DILocation(line: 1739, column: 2, scope: !7589)
!7752 = !DILocation(line: 1739, column: 2, scope: !7599)
!7753 = !DILocalVariable(name: "__dummy", scope: !7754, file: !3, line: 1739, type: !388)
!7754 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 1739, column: 2)
!7755 = !DILocation(line: 1739, column: 2, scope: !7754)
!7756 = !DILocalVariable(name: "__dummy2", scope: !7754, file: !3, line: 1739, type: !388)
!7757 = !DILocation(line: 1739, column: 2, scope: !7598)
!7758 = !DILocation(line: 1739, column: 2, scope: !7597)
!7759 = !DILocation(line: 1739, column: 2, scope: !7760)
!7760 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 1739, column: 2)
!7761 = !DILocalVariable(name: "__dummy", scope: !7762, file: !3, line: 1739, type: !388)
!7762 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 1739, column: 2)
!7763 = distinct !DILexicalBlock(scope: !7760, file: !3, line: 1739, column: 2)
!7764 = !DILocation(line: 1739, column: 2, scope: !7762)
!7765 = !DILocalVariable(name: "__dummy2", scope: !7762, file: !3, line: 1739, type: !388)
!7766 = !DILocation(line: 1739, column: 2, scope: !7763)
!7767 = !DILocation(line: 1739, column: 2, scope: !7596)
!7768 = !{i32 -2140477175}
!7769 = !DILocation(line: 1739, column: 2, scope: !7595)
!7770 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !7594)
!7771 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !7594)
!7772 = !DILocation(line: 1740, column: 2, scope: !7589)
!7773 = !DILocation(line: 1740, column: 8, scope: !7589)
!7774 = !DILocation(line: 1740, column: 16, scope: !7589)
!7775 = !DILocation(line: 1741, column: 2, scope: !7589)
!7776 = !DILocation(line: 1741, column: 8, scope: !7589)
!7777 = !DILocation(line: 1741, column: 25, scope: !7589)
!7778 = !DILocation(line: 1742, column: 2, scope: !7589)
!7779 = !DILocation(line: 1742, column: 8, scope: !7589)
!7780 = !DILocation(line: 1742, column: 17, scope: !7589)
!7781 = !DILocation(line: 1743, column: 21, scope: !7589)
!7782 = !DILocation(line: 1743, column: 27, scope: !7589)
!7783 = !DILocation(line: 1743, column: 37, scope: !7589)
!7784 = !DILocation(line: 1743, column: 43, scope: !7589)
!7785 = !DILocation(line: 1743, column: 2, scope: !7589)
!7786 = !DILocation(line: 1744, column: 26, scope: !7589)
!7787 = !DILocation(line: 1744, column: 32, scope: !7589)
!7788 = !DILocation(line: 1744, column: 44, scope: !7589)
!7789 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7591)
!7790 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7591)
!7791 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7591)
!7792 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7591)
!7793 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7591)
!7794 = !DILocation(line: 1746, column: 25, scope: !7589)
!7795 = !DILocation(line: 1746, column: 2, scope: !7589)
!7796 = !DILocation(line: 1748, column: 2, scope: !7589)
!7797 = !DILocation(line: 1748, column: 8, scope: !7589)
!7798 = !DILocation(line: 1748, column: 14, scope: !7589)
!7799 = !DILocation(line: 1749, column: 6, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7589, file: !3, line: 1749, column: 6)
!7801 = !DILocation(line: 1749, column: 12, scope: !7800)
!7802 = !DILocation(line: 1749, column: 6, scope: !7589)
!7803 = !DILocation(line: 1750, column: 3, scope: !7800)
!7804 = !DILocation(line: 1750, column: 9, scope: !7800)
!7805 = !DILocation(line: 1750, column: 18, scope: !7800)
!7806 = !DILocation(line: 1750, column: 24, scope: !7800)
!7807 = !DILocation(line: 1751, column: 1, scope: !7589)
!7808 = distinct !DISubprogram(name: "spi_unmap_msg", scope: !3, file: !3, line: 1024, type: !4707, scopeLine: 1026, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7809 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7808, file: !3, line: 1024, type: !4512)
!7810 = !DILocation(line: 1024, column: 56, scope: !7808)
!7811 = !DILocalVariable(name: "msg", arg: 2, scope: !7808, file: !3, line: 1025, type: !4594)
!7812 = !DILocation(line: 1025, column: 25, scope: !7808)
!7813 = !DILocalVariable(name: "xfer", scope: !7808, file: !3, line: 1027, type: !4616)
!7814 = !DILocation(line: 1027, column: 23, scope: !7808)
!7815 = !DILocalVariable(name: "__mptr", scope: !7816, file: !3, line: 1029, type: !228)
!7816 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 1029, column: 2)
!7817 = distinct !DILexicalBlock(scope: !7808, file: !3, line: 1029, column: 2)
!7818 = !DILocation(line: 1029, column: 2, scope: !7816)
!7819 = !DILocation(line: 1029, column: 2, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7816, file: !3, line: 1029, column: 2)
!7821 = !DILocation(line: 1029, column: 2, scope: !7817)
!7822 = !DILocation(line: 1029, column: 2, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7817, file: !3, line: 1029, column: 2)
!7824 = !DILocation(line: 1034, column: 7, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 1034, column: 7)
!7826 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 1029, column: 60)
!7827 = !DILocation(line: 1034, column: 13, scope: !7825)
!7828 = !DILocation(line: 1034, column: 23, scope: !7825)
!7829 = !DILocation(line: 1034, column: 29, scope: !7825)
!7830 = !DILocation(line: 1034, column: 20, scope: !7825)
!7831 = !DILocation(line: 1034, column: 7, scope: !7826)
!7832 = !DILocation(line: 1035, column: 4, scope: !7825)
!7833 = !DILocation(line: 1035, column: 10, scope: !7825)
!7834 = !DILocation(line: 1035, column: 17, scope: !7825)
!7835 = !DILocation(line: 1036, column: 7, scope: !7836)
!7836 = distinct !DILexicalBlock(scope: !7826, file: !3, line: 1036, column: 7)
!7837 = !DILocation(line: 1036, column: 13, scope: !7836)
!7838 = !DILocation(line: 1036, column: 23, scope: !7836)
!7839 = !DILocation(line: 1036, column: 29, scope: !7836)
!7840 = !DILocation(line: 1036, column: 20, scope: !7836)
!7841 = !DILocation(line: 1036, column: 7, scope: !7826)
!7842 = !DILocation(line: 1037, column: 4, scope: !7836)
!7843 = !DILocation(line: 1037, column: 10, scope: !7836)
!7844 = !DILocation(line: 1037, column: 17, scope: !7836)
!7845 = !DILocation(line: 1038, column: 2, scope: !7826)
!7846 = !DILocalVariable(name: "__mptr", scope: !7847, file: !3, line: 1029, type: !228)
!7847 = distinct !DILexicalBlock(scope: !7823, file: !3, line: 1029, column: 2)
!7848 = !DILocation(line: 1029, column: 2, scope: !7847)
!7849 = !DILocation(line: 1029, column: 2, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7847, file: !3, line: 1029, column: 2)
!7851 = distinct !{!7851, !7821, !7852}
!7852 = !DILocation(line: 1038, column: 2, scope: !7817)
!7853 = !DILocation(line: 1040, column: 25, scope: !7808)
!7854 = !DILocation(line: 1040, column: 31, scope: !7808)
!7855 = !DILocation(line: 1040, column: 9, scope: !7808)
!7856 = !DILocation(line: 1040, column: 2, scope: !7808)
!7857 = distinct !DISubprogram(name: "spi_res_release", scope: !3, file: !3, line: 3027, type: !4723, scopeLine: 3028, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7858 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7857, file: !3, line: 3027, type: !4512)
!7859 = !DILocation(line: 3027, column: 45, scope: !7857)
!7860 = !DILocalVariable(name: "message", arg: 2, scope: !7857, file: !3, line: 3027, type: !4594)
!7861 = !DILocation(line: 3027, column: 71, scope: !7857)
!7862 = !DILocalVariable(name: "res", scope: !7857, file: !3, line: 3029, type: !5165)
!7863 = !DILocation(line: 3029, column: 18, scope: !7857)
!7864 = !DILocalVariable(name: "tmp", scope: !7857, file: !3, line: 3029, type: !5165)
!7865 = !DILocation(line: 3029, column: 24, scope: !7857)
!7866 = !DILocalVariable(name: "__mptr", scope: !7867, file: !3, line: 3031, type: !228)
!7867 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3031, column: 2)
!7868 = distinct !DILexicalBlock(scope: !7857, file: !3, line: 3031, column: 2)
!7869 = !DILocation(line: 3031, column: 2, scope: !7867)
!7870 = !DILocation(line: 3031, column: 2, scope: !7871)
!7871 = distinct !DILexicalBlock(scope: !7867, file: !3, line: 3031, column: 2)
!7872 = !DILocation(line: 3031, column: 2, scope: !7868)
!7873 = !DILocalVariable(name: "__mptr", scope: !7874, file: !3, line: 3031, type: !228)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3031, column: 2)
!7875 = !DILocation(line: 3031, column: 2, scope: !7874)
!7876 = !DILocation(line: 3031, column: 2, scope: !7877)
!7877 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3031, column: 2)
!7878 = !DILocation(line: 3031, column: 2, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 3031, column: 2)
!7880 = !DILocation(line: 3032, column: 7, scope: !7881)
!7881 = distinct !DILexicalBlock(scope: !7882, file: !3, line: 3032, column: 7)
!7882 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 3031, column: 73)
!7883 = !DILocation(line: 3032, column: 12, scope: !7881)
!7884 = !DILocation(line: 3032, column: 7, scope: !7882)
!7885 = !DILocation(line: 3033, column: 4, scope: !7881)
!7886 = !DILocation(line: 3033, column: 9, scope: !7881)
!7887 = !DILocation(line: 3033, column: 17, scope: !7881)
!7888 = !DILocation(line: 3033, column: 23, scope: !7881)
!7889 = !DILocation(line: 3033, column: 32, scope: !7881)
!7890 = !DILocation(line: 3033, column: 37, scope: !7881)
!7891 = !DILocation(line: 3035, column: 13, scope: !7882)
!7892 = !DILocation(line: 3035, column: 18, scope: !7882)
!7893 = !DILocation(line: 3035, column: 3, scope: !7882)
!7894 = !DILocation(line: 3037, column: 9, scope: !7882)
!7895 = !DILocation(line: 3037, column: 3, scope: !7882)
!7896 = !DILocation(line: 3038, column: 2, scope: !7882)
!7897 = !DILocalVariable(name: "__mptr", scope: !7898, file: !3, line: 3031, type: !228)
!7898 = distinct !DILexicalBlock(scope: !7879, file: !3, line: 3031, column: 2)
!7899 = !DILocation(line: 3031, column: 2, scope: !7898)
!7900 = !DILocation(line: 3031, column: 2, scope: !7901)
!7901 = distinct !DILexicalBlock(scope: !7898, file: !3, line: 3031, column: 2)
!7902 = distinct !{!7902, !7872, !7903}
!7903 = !DILocation(line: 3038, column: 2, scope: !7868)
!7904 = !DILocation(line: 3039, column: 1, scope: !7857)
!7905 = distinct !DISubprogram(name: "trace_spi_message_done", scope: !7906, file: !7906, line: 84, type: !7907, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7906 = !DIFile(filename: "./include/trace/events/spi.h", directory: "/home/lizy2001/genbc/linux")
!7907 = !DISubroutineType(types: !7908)
!7908 = !{null, !4594}
!7909 = !DILocalVariable(name: "msg", arg: 1, scope: !7905, file: !7906, line: 84, type: !4594)
!7910 = !DILocation(line: 84, column: 1, scope: !7905)
!7911 = distinct !DISubprogram(name: "spi_flush_queue", scope: !3, file: !3, line: 1905, type: !6210, scopeLine: 1906, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7912 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7911, file: !3, line: 1905, type: !4512)
!7913 = !DILocation(line: 1905, column: 45, scope: !7911)
!7914 = !DILocation(line: 1907, column: 6, scope: !7915)
!7915 = distinct !DILexicalBlock(scope: !7911, file: !3, line: 1907, column: 6)
!7916 = !DILocation(line: 1907, column: 12, scope: !7915)
!7917 = !DILocation(line: 1907, column: 21, scope: !7915)
!7918 = !DILocation(line: 1907, column: 6, scope: !7911)
!7919 = !DILocation(line: 1908, column: 23, scope: !7915)
!7920 = !DILocation(line: 1908, column: 3, scope: !7915)
!7921 = !DILocation(line: 1909, column: 1, scope: !7911)
!7922 = distinct !DISubprogram(name: "spi_queued_transfer", scope: !3, file: !3, line: 1861, type: !4592, scopeLine: 1862, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7923 = !DILocalVariable(name: "spi", arg: 1, scope: !7922, file: !3, line: 1861, type: !4532)
!7924 = !DILocation(line: 1861, column: 51, scope: !7922)
!7925 = !DILocalVariable(name: "msg", arg: 2, scope: !7922, file: !3, line: 1861, type: !4594)
!7926 = !DILocation(line: 1861, column: 76, scope: !7922)
!7927 = !DILocation(line: 1863, column: 31, scope: !7922)
!7928 = !DILocation(line: 1863, column: 36, scope: !7922)
!7929 = !DILocation(line: 1863, column: 9, scope: !7922)
!7930 = !DILocation(line: 1863, column: 2, scope: !7922)
!7931 = distinct !DISubprogram(name: "__spi_pump_messages", scope: !3, file: !3, line: 1368, type: !7932, scopeLine: 1369, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!7932 = !DISubroutineType(types: !7933)
!7933 = !{null, !4512, !261}
!7934 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7935)
!7935 = distinct !DILocation(line: 1444, column: 2, scope: !7931)
!7936 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7935)
!7937 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7938)
!7938 = distinct !DILocation(line: 1431, column: 3, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7940, file: !3, line: 1393, column: 50)
!7940 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1393, column: 6)
!7941 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7938)
!7942 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !7943)
!7943 = distinct !DILocation(line: 1429, column: 3, scope: !7944)
!7944 = distinct !DILexicalBlock(scope: !7945, file: !3, line: 1429, column: 3)
!7945 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 1429, column: 3)
!7946 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 1429, column: 3)
!7947 = distinct !DILexicalBlock(scope: !7948, file: !3, line: 1429, column: 3)
!7948 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1429, column: 3)
!7949 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7950)
!7950 = distinct !DILocation(line: 1416, column: 3, scope: !7939)
!7951 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7950)
!7952 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7953)
!7953 = distinct !DILocation(line: 1410, column: 4, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 1400, column: 20)
!7955 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1400, column: 7)
!7956 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7953)
!7957 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7958)
!7958 = distinct !DILocation(line: 1395, column: 4, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7960, file: !3, line: 1394, column: 20)
!7960 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1394, column: 7)
!7961 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7958)
!7962 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7963)
!7963 = distinct !DILocation(line: 1388, column: 3, scope: !7964)
!7964 = distinct !DILexicalBlock(scope: !7965, file: !3, line: 1386, column: 20)
!7965 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1386, column: 6)
!7966 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7963)
!7967 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !7968)
!7968 = distinct !DILocation(line: 1381, column: 3, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 1380, column: 21)
!7970 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1380, column: 6)
!7971 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !7968)
!7972 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !7973)
!7973 = distinct !DILocation(line: 1377, column: 2, scope: !7974)
!7974 = distinct !DILexicalBlock(scope: !7975, file: !3, line: 1377, column: 2)
!7975 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 1377, column: 2)
!7976 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 1377, column: 2)
!7977 = distinct !DILexicalBlock(scope: !7978, file: !3, line: 1377, column: 2)
!7978 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1377, column: 2)
!7979 = !DILocalVariable(name: "ctlr", arg: 1, scope: !7931, file: !3, line: 1368, type: !4512)
!7980 = !DILocation(line: 1368, column: 56, scope: !7931)
!7981 = !DILocalVariable(name: "in_kthread", arg: 2, scope: !7931, file: !3, line: 1368, type: !261)
!7982 = !DILocation(line: 1368, column: 67, scope: !7931)
!7983 = !DILocalVariable(name: "xfer", scope: !7931, file: !3, line: 1370, type: !4616)
!7984 = !DILocation(line: 1370, column: 23, scope: !7931)
!7985 = !DILocalVariable(name: "msg", scope: !7931, file: !3, line: 1371, type: !4594)
!7986 = !DILocation(line: 1371, column: 22, scope: !7931)
!7987 = !DILocalVariable(name: "was_busy", scope: !7931, file: !3, line: 1372, type: !261)
!7988 = !DILocation(line: 1372, column: 7, scope: !7931)
!7989 = !DILocalVariable(name: "flags", scope: !7931, file: !3, line: 1373, type: !388)
!7990 = !DILocation(line: 1373, column: 16, scope: !7931)
!7991 = !DILocalVariable(name: "ret", scope: !7931, file: !3, line: 1374, type: !234)
!7992 = !DILocation(line: 1374, column: 6, scope: !7931)
!7993 = !DILocation(line: 1377, column: 2, scope: !7931)
!7994 = !DILocation(line: 1377, column: 2, scope: !7978)
!7995 = !DILocalVariable(name: "__dummy", scope: !7996, file: !3, line: 1377, type: !388)
!7996 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 1377, column: 2)
!7997 = !DILocation(line: 1377, column: 2, scope: !7996)
!7998 = !DILocalVariable(name: "__dummy2", scope: !7996, file: !3, line: 1377, type: !388)
!7999 = !DILocation(line: 1377, column: 2, scope: !7977)
!8000 = !DILocation(line: 1377, column: 2, scope: !7976)
!8001 = !DILocation(line: 1377, column: 2, scope: !8002)
!8002 = distinct !DILexicalBlock(scope: !7976, file: !3, line: 1377, column: 2)
!8003 = !DILocalVariable(name: "__dummy", scope: !8004, file: !3, line: 1377, type: !388)
!8004 = distinct !DILexicalBlock(scope: !8005, file: !3, line: 1377, column: 2)
!8005 = distinct !DILexicalBlock(scope: !8002, file: !3, line: 1377, column: 2)
!8006 = !DILocation(line: 1377, column: 2, scope: !8004)
!8007 = !DILocalVariable(name: "__dummy2", scope: !8004, file: !3, line: 1377, type: !388)
!8008 = !DILocation(line: 1377, column: 2, scope: !8005)
!8009 = !DILocation(line: 1377, column: 2, scope: !7975)
!8010 = !{i32 -2140505289}
!8011 = !DILocation(line: 1377, column: 2, scope: !7974)
!8012 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !7973)
!8013 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !7973)
!8014 = !DILocation(line: 1380, column: 6, scope: !7970)
!8015 = !DILocation(line: 1380, column: 12, scope: !7970)
!8016 = !DILocation(line: 1380, column: 6, scope: !7931)
!8017 = !DILocation(line: 1381, column: 27, scope: !7969)
!8018 = !DILocation(line: 1381, column: 33, scope: !7969)
!8019 = !DILocation(line: 1381, column: 45, scope: !7969)
!8020 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7968)
!8021 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7968)
!8022 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7968)
!8023 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7968)
!8024 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7968)
!8025 = !DILocation(line: 1382, column: 3, scope: !7969)
!8026 = !DILocation(line: 1386, column: 6, scope: !7965)
!8027 = !DILocation(line: 1386, column: 12, scope: !7965)
!8028 = !DILocation(line: 1386, column: 6, scope: !7931)
!8029 = !DILocation(line: 1387, column: 22, scope: !7964)
!8030 = !DILocation(line: 1387, column: 28, scope: !7964)
!8031 = !DILocation(line: 1387, column: 38, scope: !7964)
!8032 = !DILocation(line: 1387, column: 44, scope: !7964)
!8033 = !DILocation(line: 1387, column: 3, scope: !7964)
!8034 = !DILocation(line: 1388, column: 27, scope: !7964)
!8035 = !DILocation(line: 1388, column: 33, scope: !7964)
!8036 = !DILocation(line: 1388, column: 45, scope: !7964)
!8037 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7963)
!8038 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7963)
!8039 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7963)
!8040 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7963)
!8041 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7963)
!8042 = !DILocation(line: 1389, column: 3, scope: !7964)
!8043 = !DILocation(line: 1393, column: 18, scope: !7940)
!8044 = !DILocation(line: 1393, column: 24, scope: !7940)
!8045 = !DILocation(line: 1393, column: 6, scope: !7940)
!8046 = !DILocation(line: 1393, column: 31, scope: !7940)
!8047 = !DILocation(line: 1393, column: 35, scope: !7940)
!8048 = !DILocation(line: 1393, column: 41, scope: !7940)
!8049 = !DILocation(line: 1393, column: 6, scope: !7931)
!8050 = !DILocation(line: 1394, column: 8, scope: !7960)
!8051 = !DILocation(line: 1394, column: 14, scope: !7960)
!8052 = !DILocation(line: 1394, column: 7, scope: !7939)
!8053 = !DILocation(line: 1395, column: 28, scope: !7959)
!8054 = !DILocation(line: 1395, column: 34, scope: !7959)
!8055 = !DILocation(line: 1395, column: 46, scope: !7959)
!8056 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7958)
!8057 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7958)
!8058 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7958)
!8059 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7958)
!8060 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7958)
!8061 = !DILocation(line: 1396, column: 4, scope: !7959)
!8062 = !DILocation(line: 1400, column: 8, scope: !7955)
!8063 = !DILocation(line: 1400, column: 7, scope: !7939)
!8064 = !DILocation(line: 1401, column: 9, scope: !8065)
!8065 = distinct !DILexicalBlock(scope: !7954, file: !3, line: 1401, column: 8)
!8066 = !DILocation(line: 1401, column: 15, scope: !8065)
!8067 = !DILocation(line: 1401, column: 24, scope: !8065)
!8068 = !DILocation(line: 1401, column: 28, scope: !8065)
!8069 = !DILocation(line: 1401, column: 34, scope: !8065)
!8070 = !DILocation(line: 1401, column: 43, scope: !8065)
!8071 = !DILocation(line: 1402, column: 9, scope: !8065)
!8072 = !DILocation(line: 1402, column: 15, scope: !8065)
!8073 = !DILocation(line: 1401, column: 8, scope: !7954)
!8074 = !DILocation(line: 1403, column: 25, scope: !8075)
!8075 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 1402, column: 44)
!8076 = !DILocation(line: 1403, column: 5, scope: !8075)
!8077 = !DILocation(line: 1404, column: 5, scope: !8075)
!8078 = !DILocation(line: 1404, column: 11, scope: !8075)
!8079 = !DILocation(line: 1404, column: 16, scope: !8075)
!8080 = !DILocation(line: 1405, column: 31, scope: !8075)
!8081 = !DILocation(line: 1405, column: 5, scope: !8075)
!8082 = !DILocation(line: 1406, column: 4, scope: !8075)
!8083 = !DILocation(line: 1407, column: 24, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8065, file: !3, line: 1406, column: 11)
!8085 = !DILocation(line: 1407, column: 30, scope: !8084)
!8086 = !DILocation(line: 1408, column: 11, scope: !8084)
!8087 = !DILocation(line: 1408, column: 17, scope: !8084)
!8088 = !DILocation(line: 1407, column: 5, scope: !8084)
!8089 = !DILocation(line: 1410, column: 28, scope: !7954)
!8090 = !DILocation(line: 1410, column: 34, scope: !7954)
!8091 = !DILocation(line: 1410, column: 46, scope: !7954)
!8092 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7953)
!8093 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7953)
!8094 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7953)
!8095 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7953)
!8096 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7953)
!8097 = !DILocation(line: 1411, column: 4, scope: !7954)
!8098 = !DILocation(line: 1414, column: 3, scope: !7939)
!8099 = !DILocation(line: 1414, column: 9, scope: !7939)
!8100 = !DILocation(line: 1414, column: 14, scope: !7939)
!8101 = !DILocation(line: 1415, column: 3, scope: !7939)
!8102 = !DILocation(line: 1415, column: 9, scope: !7939)
!8103 = !DILocation(line: 1415, column: 16, scope: !7939)
!8104 = !DILocation(line: 1416, column: 27, scope: !7939)
!8105 = !DILocation(line: 1416, column: 33, scope: !7939)
!8106 = !DILocation(line: 1416, column: 45, scope: !7939)
!8107 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7950)
!8108 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7950)
!8109 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7950)
!8110 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7950)
!8111 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7950)
!8112 = !DILocation(line: 1418, column: 9, scope: !7939)
!8113 = !DILocation(line: 1418, column: 15, scope: !7939)
!8114 = !DILocation(line: 1418, column: 3, scope: !7939)
!8115 = !DILocation(line: 1419, column: 3, scope: !7939)
!8116 = !DILocation(line: 1419, column: 9, scope: !7939)
!8117 = !DILocation(line: 1419, column: 18, scope: !7939)
!8118 = !DILocation(line: 1420, column: 9, scope: !7939)
!8119 = !DILocation(line: 1420, column: 15, scope: !7939)
!8120 = !DILocation(line: 1420, column: 3, scope: !7939)
!8121 = !DILocation(line: 1421, column: 3, scope: !7939)
!8122 = !DILocation(line: 1421, column: 9, scope: !7939)
!8123 = !DILocation(line: 1421, column: 18, scope: !7939)
!8124 = !DILocation(line: 1422, column: 7, scope: !8125)
!8125 = distinct !DILexicalBlock(scope: !7939, file: !3, line: 1422, column: 7)
!8126 = !DILocation(line: 1422, column: 13, scope: !8125)
!8127 = !DILocation(line: 1422, column: 41, scope: !8125)
!8128 = !DILocation(line: 1423, column: 7, scope: !8125)
!8129 = !DILocation(line: 1423, column: 13, scope: !8125)
!8130 = !DILocation(line: 1423, column: 41, scope: !8125)
!8131 = !DILocation(line: 1422, column: 7, scope: !7939)
!8132 = !DILocation(line: 1424, column: 4, scope: !8125)
!8133 = !DILocation(line: 1426, column: 23, scope: !7939)
!8134 = !DILocation(line: 1426, column: 3, scope: !7939)
!8135 = !DILocation(line: 1427, column: 29, scope: !7939)
!8136 = !DILocation(line: 1427, column: 3, scope: !7939)
!8137 = !DILocation(line: 1429, column: 3, scope: !7939)
!8138 = !DILocation(line: 1429, column: 3, scope: !7948)
!8139 = !DILocalVariable(name: "__dummy", scope: !8140, file: !3, line: 1429, type: !388)
!8140 = distinct !DILexicalBlock(scope: !7947, file: !3, line: 1429, column: 3)
!8141 = !DILocation(line: 1429, column: 3, scope: !8140)
!8142 = !DILocalVariable(name: "__dummy2", scope: !8140, file: !3, line: 1429, type: !388)
!8143 = !DILocation(line: 1429, column: 3, scope: !7947)
!8144 = !DILocation(line: 1429, column: 3, scope: !7946)
!8145 = !DILocation(line: 1429, column: 3, scope: !8146)
!8146 = distinct !DILexicalBlock(scope: !7946, file: !3, line: 1429, column: 3)
!8147 = !DILocalVariable(name: "__dummy", scope: !8148, file: !3, line: 1429, type: !388)
!8148 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 1429, column: 3)
!8149 = distinct !DILexicalBlock(scope: !8146, file: !3, line: 1429, column: 3)
!8150 = !DILocation(line: 1429, column: 3, scope: !8148)
!8151 = !DILocalVariable(name: "__dummy2", scope: !8148, file: !3, line: 1429, type: !388)
!8152 = !DILocation(line: 1429, column: 3, scope: !8149)
!8153 = !DILocation(line: 1429, column: 3, scope: !7945)
!8154 = !{i32 -2140504062}
!8155 = !DILocation(line: 1429, column: 3, scope: !7944)
!8156 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !7943)
!8157 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !7943)
!8158 = !DILocation(line: 1430, column: 3, scope: !7939)
!8159 = !DILocation(line: 1430, column: 9, scope: !7939)
!8160 = !DILocation(line: 1430, column: 16, scope: !7939)
!8161 = !DILocation(line: 1431, column: 27, scope: !7939)
!8162 = !DILocation(line: 1431, column: 33, scope: !7939)
!8163 = !DILocation(line: 1431, column: 45, scope: !7939)
!8164 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7938)
!8165 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7938)
!8166 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7938)
!8167 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7938)
!8168 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7938)
!8169 = !DILocation(line: 1432, column: 3, scope: !7939)
!8170 = !DILocalVariable(name: "__mptr", scope: !8171, file: !3, line: 1436, type: !228)
!8171 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1436, column: 8)
!8172 = !DILocation(line: 1436, column: 8, scope: !8171)
!8173 = !DILocation(line: 1436, column: 8, scope: !8174)
!8174 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 1436, column: 8)
!8175 = !DILocation(line: 1436, column: 6, scope: !7931)
!8176 = !DILocation(line: 1437, column: 18, scope: !7931)
!8177 = !DILocation(line: 1437, column: 2, scope: !7931)
!8178 = !DILocation(line: 1437, column: 8, scope: !7931)
!8179 = !DILocation(line: 1437, column: 16, scope: !7931)
!8180 = !DILocation(line: 1439, column: 17, scope: !7931)
!8181 = !DILocation(line: 1439, column: 22, scope: !7931)
!8182 = !DILocation(line: 1439, column: 2, scope: !7931)
!8183 = !DILocation(line: 1440, column: 6, scope: !8184)
!8184 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1440, column: 6)
!8185 = !DILocation(line: 1440, column: 12, scope: !8184)
!8186 = !DILocation(line: 1440, column: 6, scope: !7931)
!8187 = !DILocation(line: 1441, column: 12, scope: !8184)
!8188 = !DILocation(line: 1441, column: 3, scope: !8184)
!8189 = !DILocation(line: 1443, column: 3, scope: !8184)
!8190 = !DILocation(line: 1443, column: 9, scope: !8184)
!8191 = !DILocation(line: 1443, column: 14, scope: !8184)
!8192 = !DILocation(line: 1444, column: 26, scope: !7931)
!8193 = !DILocation(line: 1444, column: 32, scope: !7931)
!8194 = !DILocation(line: 1444, column: 44, scope: !7931)
!8195 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !7935)
!8196 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !7935)
!8197 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !7935)
!8198 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !7935)
!8199 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !7935)
!8200 = !DILocation(line: 1446, column: 14, scope: !7931)
!8201 = !DILocation(line: 1446, column: 20, scope: !7931)
!8202 = !DILocation(line: 1446, column: 2, scope: !7931)
!8203 = !DILocation(line: 1448, column: 7, scope: !8204)
!8204 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1448, column: 6)
!8205 = !DILocation(line: 1448, column: 16, scope: !8204)
!8206 = !DILocation(line: 1448, column: 19, scope: !8204)
!8207 = !DILocation(line: 1448, column: 25, scope: !8204)
!8208 = !DILocation(line: 1448, column: 6, scope: !7931)
!8209 = !DILocation(line: 1449, column: 29, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8204, file: !3, line: 1448, column: 42)
!8211 = !DILocation(line: 1449, column: 35, scope: !8210)
!8212 = !DILocation(line: 1449, column: 39, scope: !8210)
!8213 = !DILocation(line: 1449, column: 9, scope: !8210)
!8214 = !DILocation(line: 1449, column: 7, scope: !8210)
!8215 = !DILocation(line: 1450, column: 7, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8210, file: !3, line: 1450, column: 7)
!8217 = !DILocation(line: 1450, column: 11, scope: !8216)
!8218 = !DILocation(line: 1450, column: 7, scope: !8210)
!8219 = !DILocation(line: 1451, column: 26, scope: !8220)
!8220 = distinct !DILexicalBlock(scope: !8216, file: !3, line: 1450, column: 16)
!8221 = !DILocation(line: 1451, column: 32, scope: !8220)
!8222 = !DILocation(line: 1451, column: 36, scope: !8220)
!8223 = !DILocation(line: 1451, column: 4, scope: !8220)
!8224 = !DILocation(line: 1452, column: 4, scope: !8220)
!8225 = !DILocation(line: 1454, column: 18, scope: !8220)
!8226 = !DILocation(line: 1454, column: 24, scope: !8220)
!8227 = !DILocation(line: 1454, column: 4, scope: !8220)
!8228 = !DILocation(line: 1455, column: 4, scope: !8220)
!8229 = !DILocation(line: 1457, column: 2, scope: !8210)
!8230 = !DILocation(line: 1459, column: 7, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1459, column: 6)
!8232 = !DILocation(line: 1459, column: 6, scope: !7931)
!8233 = !DILocation(line: 1460, column: 29, scope: !8231)
!8234 = !DILocation(line: 1460, column: 3, scope: !8231)
!8235 = !DILocation(line: 1462, column: 7, scope: !8236)
!8236 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1462, column: 6)
!8237 = !DILocation(line: 1462, column: 16, scope: !8236)
!8238 = !DILocation(line: 1462, column: 19, scope: !8236)
!8239 = !DILocation(line: 1462, column: 25, scope: !8236)
!8240 = !DILocation(line: 1462, column: 6, scope: !7931)
!8241 = !DILocation(line: 1463, column: 9, scope: !8242)
!8242 = distinct !DILexicalBlock(scope: !8236, file: !3, line: 1462, column: 52)
!8243 = !DILocation(line: 1463, column: 15, scope: !8242)
!8244 = !DILocation(line: 1463, column: 41, scope: !8242)
!8245 = !DILocation(line: 1463, column: 7, scope: !8242)
!8246 = !DILocation(line: 1464, column: 7, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8242, file: !3, line: 1464, column: 7)
!8248 = !DILocation(line: 1464, column: 7, scope: !8242)
!8249 = !DILocation(line: 1465, column: 4, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 1464, column: 12)
!8251 = !DILocation(line: 1469, column: 8, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8250, file: !3, line: 1469, column: 8)
!8253 = !DILocation(line: 1469, column: 14, scope: !8252)
!8254 = !DILocation(line: 1469, column: 8, scope: !8250)
!8255 = !DILocation(line: 1470, column: 20, scope: !8252)
!8256 = !DILocation(line: 1470, column: 26, scope: !8252)
!8257 = !DILocation(line: 1470, column: 30, scope: !8252)
!8258 = !DILocation(line: 1470, column: 5, scope: !8252)
!8259 = !DILocation(line: 1472, column: 18, scope: !8250)
!8260 = !DILocation(line: 1472, column: 4, scope: !8250)
!8261 = !DILocation(line: 1472, column: 9, scope: !8250)
!8262 = !DILocation(line: 1472, column: 16, scope: !8250)
!8263 = !DILocation(line: 1473, column: 33, scope: !8250)
!8264 = !DILocation(line: 1473, column: 4, scope: !8250)
!8265 = !DILocation(line: 1475, column: 18, scope: !8250)
!8266 = !DILocation(line: 1475, column: 24, scope: !8250)
!8267 = !DILocation(line: 1475, column: 4, scope: !8250)
!8268 = !DILocation(line: 1476, column: 4, scope: !8250)
!8269 = !DILocation(line: 1478, column: 2, scope: !8242)
!8270 = !DILocation(line: 1480, column: 26, scope: !7931)
!8271 = !DILocation(line: 1480, column: 2, scope: !7931)
!8272 = !DILocation(line: 1482, column: 6, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1482, column: 6)
!8274 = !DILocation(line: 1482, column: 12, scope: !8273)
!8275 = !DILocation(line: 1482, column: 6, scope: !7931)
!8276 = !DILocation(line: 1483, column: 9, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !3, line: 1482, column: 29)
!8278 = !DILocation(line: 1483, column: 15, scope: !8277)
!8279 = !DILocation(line: 1483, column: 31, scope: !8277)
!8280 = !DILocation(line: 1483, column: 37, scope: !8277)
!8281 = !DILocation(line: 1483, column: 7, scope: !8277)
!8282 = !DILocation(line: 1484, column: 7, scope: !8283)
!8283 = distinct !DILexicalBlock(scope: !8277, file: !3, line: 1484, column: 7)
!8284 = !DILocation(line: 1484, column: 7, scope: !8277)
!8285 = !DILocation(line: 1485, column: 4, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8283, file: !3, line: 1484, column: 12)
!8287 = !DILocation(line: 1487, column: 18, scope: !8286)
!8288 = !DILocation(line: 1487, column: 4, scope: !8286)
!8289 = !DILocation(line: 1487, column: 9, scope: !8286)
!8290 = !DILocation(line: 1487, column: 16, scope: !8286)
!8291 = !DILocation(line: 1488, column: 33, scope: !8286)
!8292 = !DILocation(line: 1488, column: 4, scope: !8286)
!8293 = !DILocation(line: 1489, column: 4, scope: !8286)
!8294 = !DILocation(line: 1491, column: 3, scope: !8277)
!8295 = !DILocation(line: 1491, column: 9, scope: !8277)
!8296 = !DILocation(line: 1491, column: 26, scope: !8277)
!8297 = !DILocation(line: 1492, column: 2, scope: !8277)
!8298 = !DILocation(line: 1494, column: 20, scope: !7931)
!8299 = !DILocation(line: 1494, column: 26, scope: !7931)
!8300 = !DILocation(line: 1494, column: 8, scope: !7931)
!8301 = !DILocation(line: 1494, column: 6, scope: !7931)
!8302 = !DILocation(line: 1495, column: 6, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1495, column: 6)
!8304 = !DILocation(line: 1495, column: 6, scope: !7931)
!8305 = !DILocation(line: 1496, column: 17, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8303, file: !3, line: 1495, column: 11)
!8307 = !DILocation(line: 1496, column: 3, scope: !8306)
!8308 = !DILocation(line: 1496, column: 8, scope: !8306)
!8309 = !DILocation(line: 1496, column: 15, scope: !8306)
!8310 = !DILocation(line: 1497, column: 32, scope: !8306)
!8311 = !DILocation(line: 1497, column: 3, scope: !8306)
!8312 = !DILocation(line: 1498, column: 3, scope: !8306)
!8313 = !DILocation(line: 1501, column: 7, scope: !8314)
!8314 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1501, column: 6)
!8315 = !DILocation(line: 1501, column: 13, scope: !8314)
!8316 = !DILocation(line: 1501, column: 31, scope: !8314)
!8317 = !DILocation(line: 1501, column: 35, scope: !8314)
!8318 = !DILocation(line: 1501, column: 41, scope: !8314)
!8319 = !DILocation(line: 1501, column: 6, scope: !7931)
!8320 = !DILocalVariable(name: "__mptr", scope: !8321, file: !3, line: 1502, type: !228)
!8321 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 1502, column: 3)
!8322 = distinct !DILexicalBlock(scope: !8323, file: !3, line: 1502, column: 3)
!8323 = distinct !DILexicalBlock(scope: !8314, file: !3, line: 1501, column: 55)
!8324 = !DILocation(line: 1502, column: 3, scope: !8321)
!8325 = !DILocation(line: 1502, column: 3, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8321, file: !3, line: 1502, column: 3)
!8327 = !DILocation(line: 1502, column: 3, scope: !8322)
!8328 = !DILocation(line: 1502, column: 3, scope: !8329)
!8329 = distinct !DILexicalBlock(scope: !8322, file: !3, line: 1502, column: 3)
!8330 = !DILocation(line: 1503, column: 4, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 1502, column: 61)
!8332 = !DILocation(line: 1503, column: 10, scope: !8331)
!8333 = !DILocation(line: 1503, column: 27, scope: !8331)
!8334 = !DILocation(line: 1504, column: 26, scope: !8331)
!8335 = !DILocation(line: 1504, column: 32, scope: !8331)
!8336 = !DILocation(line: 1504, column: 4, scope: !8331)
!8337 = !DILocation(line: 1505, column: 3, scope: !8331)
!8338 = !DILocalVariable(name: "__mptr", scope: !8339, file: !3, line: 1502, type: !228)
!8339 = distinct !DILexicalBlock(scope: !8329, file: !3, line: 1502, column: 3)
!8340 = !DILocation(line: 1502, column: 3, scope: !8339)
!8341 = !DILocation(line: 1502, column: 3, scope: !8342)
!8342 = distinct !DILexicalBlock(scope: !8339, file: !3, line: 1502, column: 3)
!8343 = distinct !{!8343, !8327, !8344}
!8344 = !DILocation(line: 1505, column: 3, scope: !8322)
!8345 = !DILocation(line: 1506, column: 2, scope: !8323)
!8346 = !DILocation(line: 1508, column: 8, scope: !7931)
!8347 = !DILocation(line: 1508, column: 14, scope: !7931)
!8348 = !DILocation(line: 1508, column: 35, scope: !7931)
!8349 = !DILocation(line: 1508, column: 41, scope: !7931)
!8350 = !DILocation(line: 1508, column: 6, scope: !7931)
!8351 = !DILocation(line: 1509, column: 6, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1509, column: 6)
!8353 = !DILocation(line: 1509, column: 6, scope: !7931)
!8354 = !DILocation(line: 1510, column: 3, scope: !8355)
!8355 = distinct !DILexicalBlock(scope: !8352, file: !3, line: 1509, column: 11)
!8356 = !DILocation(line: 1512, column: 3, scope: !8355)
!8357 = !DILabel(scope: !7931, name: "out", file: !3, line: 1515)
!8358 = !DILocation(line: 1515, column: 1, scope: !7931)
!8359 = !DILocation(line: 1516, column: 16, scope: !7931)
!8360 = !DILocation(line: 1516, column: 22, scope: !7931)
!8361 = !DILocation(line: 1516, column: 2, scope: !7931)
!8362 = !DILocation(line: 1519, column: 7, scope: !8363)
!8363 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 1519, column: 6)
!8364 = !DILocation(line: 1519, column: 6, scope: !7931)
!8365 = !DILocation(line: 1520, column: 3, scope: !8366)
!8366 = distinct !DILexicalBlock(scope: !8363, file: !3, line: 1520, column: 3)
!8367 = !DILocation(line: 1520, column: 3, scope: !8363)
!8368 = !DILocation(line: 1521, column: 1, scope: !7931)
!8369 = distinct !DISubprogram(name: "__spi_alloc_controller", scope: !3, file: !3, line: 2416, type: !8370, scopeLine: 2418, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8370 = !DISubroutineType(types: !8371)
!8371 = !{!4512, !3506, !7, !261}
!8372 = !DILocalVariable(name: "dev", arg: 1, scope: !8369, file: !3, line: 2416, type: !3506)
!8373 = !DILocation(line: 2416, column: 62, scope: !8369)
!8374 = !DILocalVariable(name: "size", arg: 2, scope: !8369, file: !3, line: 2417, type: !7)
!8375 = !DILocation(line: 2417, column: 25, scope: !8369)
!8376 = !DILocalVariable(name: "slave", arg: 3, scope: !8369, file: !3, line: 2417, type: !261)
!8377 = !DILocation(line: 2417, column: 36, scope: !8369)
!8378 = !DILocalVariable(name: "ctlr", scope: !8369, file: !3, line: 2419, type: !4512)
!8379 = !DILocation(line: 2419, column: 25, scope: !8369)
!8380 = !DILocalVariable(name: "ctlr_size", scope: !8369, file: !3, line: 2420, type: !385)
!8381 = !DILocation(line: 2420, column: 9, scope: !8369)
!8382 = !DILocation(line: 2420, column: 21, scope: !8369)
!8383 = !DILocation(line: 2422, column: 7, scope: !8384)
!8384 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 2422, column: 6)
!8385 = !DILocation(line: 2422, column: 6, scope: !8369)
!8386 = !DILocation(line: 2423, column: 3, scope: !8384)
!8387 = !DILocation(line: 2425, column: 17, scope: !8369)
!8388 = !DILocation(line: 2425, column: 24, scope: !8369)
!8389 = !DILocation(line: 2425, column: 22, scope: !8369)
!8390 = !DILocation(line: 2425, column: 9, scope: !8369)
!8391 = !DILocation(line: 2425, column: 7, scope: !8369)
!8392 = !DILocation(line: 2426, column: 7, scope: !8393)
!8393 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 2426, column: 6)
!8394 = !DILocation(line: 2426, column: 6, scope: !8369)
!8395 = !DILocation(line: 2427, column: 3, scope: !8393)
!8396 = !DILocation(line: 2429, column: 21, scope: !8369)
!8397 = !DILocation(line: 2429, column: 27, scope: !8369)
!8398 = !DILocation(line: 2429, column: 2, scope: !8369)
!8399 = !DILocation(line: 2430, column: 2, scope: !8369)
!8400 = !DILocation(line: 2430, column: 8, scope: !8369)
!8401 = !DILocation(line: 2430, column: 16, scope: !8369)
!8402 = !DILocation(line: 2431, column: 2, scope: !8369)
!8403 = !DILocation(line: 2431, column: 8, scope: !8369)
!8404 = !DILocation(line: 2431, column: 23, scope: !8369)
!8405 = !DILocation(line: 2432, column: 16, scope: !8369)
!8406 = !DILocation(line: 2432, column: 2, scope: !8369)
!8407 = !DILocation(line: 2432, column: 8, scope: !8369)
!8408 = !DILocation(line: 2432, column: 14, scope: !8369)
!8409 = !DILocation(line: 2436, column: 3, scope: !8410)
!8410 = distinct !DILexicalBlock(scope: !8369, file: !3, line: 2433, column: 6)
!8411 = !DILocation(line: 2436, column: 9, scope: !8410)
!8412 = !DILocation(line: 2436, column: 13, scope: !8410)
!8413 = !DILocation(line: 2436, column: 19, scope: !8410)
!8414 = !DILocation(line: 2437, column: 21, scope: !8369)
!8415 = !DILocation(line: 2437, column: 2, scope: !8369)
!8416 = !DILocation(line: 2437, column: 8, scope: !8369)
!8417 = !DILocation(line: 2437, column: 12, scope: !8369)
!8418 = !DILocation(line: 2437, column: 19, scope: !8369)
!8419 = !DILocation(line: 2438, column: 30, scope: !8369)
!8420 = !DILocation(line: 2438, column: 36, scope: !8369)
!8421 = !DILocation(line: 2438, column: 2, scope: !8369)
!8422 = !DILocation(line: 2439, column: 29, scope: !8369)
!8423 = !DILocation(line: 2439, column: 43, scope: !8369)
!8424 = !DILocation(line: 2439, column: 35, scope: !8369)
!8425 = !DILocation(line: 2439, column: 50, scope: !8369)
!8426 = !DILocation(line: 2439, column: 48, scope: !8369)
!8427 = !DILocation(line: 2439, column: 2, scope: !8369)
!8428 = !DILocation(line: 2441, column: 9, scope: !8369)
!8429 = !DILocation(line: 2441, column: 2, scope: !8369)
!8430 = !DILocation(line: 2442, column: 1, scope: !8369)
!8431 = distinct !DISubprogram(name: "dma_get_cache_alignment", scope: !7163, file: !7163, line: 503, type: !5394, scopeLine: 504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8432 = !DILocation(line: 508, column: 2, scope: !8431)
!8433 = distinct !DISubprogram(name: "pm_suspend_ignore_children", scope: !8434, file: !8434, line: 83, type: !3783, scopeLine: 84, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8434 = !DIFile(filename: "./include/linux/pm_runtime.h", directory: "/home/lizy2001/genbc/linux")
!8435 = !DILocalVariable(name: "dev", arg: 1, scope: !8433, file: !8434, line: 83, type: !3506)
!8436 = !DILocation(line: 83, column: 62, scope: !8433)
!8437 = !DILocalVariable(name: "enable", arg: 2, scope: !8433, file: !8434, line: 83, type: !261)
!8438 = !DILocation(line: 83, column: 72, scope: !8433)
!8439 = !DILocation(line: 85, column: 31, scope: !8433)
!8440 = !DILocation(line: 85, column: 2, scope: !8433)
!8441 = !DILocation(line: 85, column: 7, scope: !8433)
!8442 = !DILocation(line: 85, column: 13, scope: !8433)
!8443 = !DILocation(line: 85, column: 29, scope: !8433)
!8444 = !DILocation(line: 86, column: 1, scope: !8433)
!8445 = distinct !DISubprogram(name: "spi_controller_set_devdata", scope: !4514, file: !4514, line: 677, type: !8446, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8446 = !DISubroutineType(types: !8447)
!8447 = !{null, !4512, !228}
!8448 = !DILocalVariable(name: "ctlr", arg: 1, scope: !8445, file: !4514, line: 677, type: !4512)
!8449 = !DILocation(line: 677, column: 70, scope: !8445)
!8450 = !DILocalVariable(name: "data", arg: 2, scope: !8445, file: !4514, line: 678, type: !228)
!8451 = !DILocation(line: 678, column: 18, scope: !8445)
!8452 = !DILocation(line: 680, column: 19, scope: !8445)
!8453 = !DILocation(line: 680, column: 25, scope: !8445)
!8454 = !DILocation(line: 680, column: 30, scope: !8445)
!8455 = !DILocation(line: 680, column: 2, scope: !8445)
!8456 = !DILocation(line: 681, column: 1, scope: !8445)
!8457 = distinct !DISubprogram(name: "__devm_spi_alloc_controller", scope: !3, file: !3, line: 2465, type: !8370, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8458 = !DILocalVariable(name: "dev", arg: 1, scope: !8457, file: !3, line: 2465, type: !3506)
!8459 = !DILocation(line: 2465, column: 67, scope: !8457)
!8460 = !DILocalVariable(name: "size", arg: 2, scope: !8457, file: !3, line: 2466, type: !7)
!8461 = !DILocation(line: 2466, column: 23, scope: !8457)
!8462 = !DILocalVariable(name: "slave", arg: 3, scope: !8457, file: !3, line: 2467, type: !261)
!8463 = !DILocation(line: 2467, column: 15, scope: !8457)
!8464 = !DILocalVariable(name: "ptr", scope: !8457, file: !3, line: 2469, type: !5194)
!8465 = !DILocation(line: 2469, column: 26, scope: !8457)
!8466 = !DILocalVariable(name: "ctlr", scope: !8457, file: !3, line: 2469, type: !4512)
!8467 = !DILocation(line: 2469, column: 32, scope: !8457)
!8468 = !DILocation(line: 2471, column: 8, scope: !8457)
!8469 = !DILocation(line: 2471, column: 6, scope: !8457)
!8470 = !DILocation(line: 2473, column: 7, scope: !8471)
!8471 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 2473, column: 6)
!8472 = !DILocation(line: 2473, column: 6, scope: !8457)
!8473 = !DILocation(line: 2474, column: 3, scope: !8471)
!8474 = !DILocation(line: 2476, column: 32, scope: !8457)
!8475 = !DILocation(line: 2476, column: 37, scope: !8457)
!8476 = !DILocation(line: 2476, column: 43, scope: !8457)
!8477 = !DILocation(line: 2476, column: 9, scope: !8457)
!8478 = !DILocation(line: 2476, column: 7, scope: !8457)
!8479 = !DILocation(line: 2477, column: 6, scope: !8480)
!8480 = distinct !DILexicalBlock(scope: !8457, file: !3, line: 2477, column: 6)
!8481 = !DILocation(line: 2477, column: 6, scope: !8457)
!8482 = !DILocation(line: 2478, column: 10, scope: !8483)
!8483 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 2477, column: 12)
!8484 = !DILocation(line: 2478, column: 4, scope: !8483)
!8485 = !DILocation(line: 2478, column: 8, scope: !8483)
!8486 = !DILocation(line: 2479, column: 14, scope: !8483)
!8487 = !DILocation(line: 2479, column: 19, scope: !8483)
!8488 = !DILocation(line: 2479, column: 3, scope: !8483)
!8489 = !DILocation(line: 2480, column: 2, scope: !8483)
!8490 = !DILocation(line: 2481, column: 15, scope: !8491)
!8491 = distinct !DILexicalBlock(scope: !8480, file: !3, line: 2480, column: 9)
!8492 = !DILocation(line: 2481, column: 3, scope: !8491)
!8493 = !DILocation(line: 2484, column: 9, scope: !8457)
!8494 = !DILocation(line: 2484, column: 2, scope: !8457)
!8495 = !DILocation(line: 2485, column: 1, scope: !8457)
!8496 = distinct !DISubprogram(name: "devres_alloc", scope: !73, file: !73, line: 178, type: !8497, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8497 = !DISubroutineType(types: !8498)
!8498 = !{!228, !8499, !385, !226}
!8499 = !DIDerivedType(tag: DW_TAG_typedef, name: "dr_release_t", file: !73, line: 165, baseType: !5107)
!8500 = !DILocalVariable(name: "release", arg: 1, scope: !8496, file: !73, line: 178, type: !8499)
!8501 = !DILocation(line: 178, column: 47, scope: !8496)
!8502 = !DILocalVariable(name: "size", arg: 2, scope: !8496, file: !73, line: 178, type: !385)
!8503 = !DILocation(line: 178, column: 63, scope: !8496)
!8504 = !DILocalVariable(name: "gfp", arg: 3, scope: !8496, file: !73, line: 178, type: !226)
!8505 = !DILocation(line: 178, column: 75, scope: !8496)
!8506 = !DILocation(line: 180, column: 27, scope: !8496)
!8507 = !DILocation(line: 180, column: 36, scope: !8496)
!8508 = !DILocation(line: 180, column: 42, scope: !8496)
!8509 = !DILocation(line: 180, column: 9, scope: !8496)
!8510 = !DILocation(line: 180, column: 2, scope: !8496)
!8511 = distinct !DISubprogram(name: "devm_spi_release_controller", scope: !3, file: !3, line: 2445, type: !5108, scopeLine: 2446, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8512 = !DILocalVariable(name: "dev", arg: 1, scope: !8511, file: !3, line: 2445, type: !3506)
!8513 = !DILocation(line: 2445, column: 56, scope: !8511)
!8514 = !DILocalVariable(name: "ctlr", arg: 2, scope: !8511, file: !3, line: 2445, type: !228)
!8515 = !DILocation(line: 2445, column: 67, scope: !8511)
!8516 = !DILocation(line: 2447, column: 48, scope: !8511)
!8517 = !DILocation(line: 2447, column: 22, scope: !8511)
!8518 = !DILocation(line: 2447, column: 21, scope: !8511)
!8519 = !DILocation(line: 2447, column: 2, scope: !8511)
!8520 = !DILocation(line: 2448, column: 1, scope: !8511)
!8521 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !8522)
!8522 = distinct !DILocation(line: 2763, column: 2, scope: !8523)
!8523 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2763, column: 2)
!8524 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !8525)
!8525 = distinct !DILocation(line: 2701, column: 2, scope: !8526)
!8526 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2701, column: 2)
!8527 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !8528)
!8528 = distinct !DILocation(line: 2700, column: 2, scope: !8529)
!8529 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2700, column: 2)
!8530 = !DILocalVariable(name: "ctlr", arg: 1, scope: !5210, file: !3, line: 2644, type: !4512)
!8531 = !DILocation(line: 2644, column: 52, scope: !5210)
!8532 = !DILocalVariable(name: "dev", scope: !5210, file: !3, line: 2646, type: !3506)
!8533 = !DILocation(line: 2646, column: 18, scope: !5210)
!8534 = !DILocation(line: 2646, column: 24, scope: !5210)
!8535 = !DILocation(line: 2646, column: 30, scope: !5210)
!8536 = !DILocation(line: 2646, column: 34, scope: !5210)
!8537 = !DILocalVariable(name: "bi", scope: !5210, file: !3, line: 2647, type: !5124)
!8538 = !DILocation(line: 2647, column: 20, scope: !5210)
!8539 = !DILocalVariable(name: "status", scope: !5210, file: !3, line: 2648, type: !234)
!8540 = !DILocation(line: 2648, column: 8, scope: !5210)
!8541 = !DILocalVariable(name: "id", scope: !5210, file: !3, line: 2649, type: !234)
!8542 = !DILocation(line: 2649, column: 8, scope: !5210)
!8543 = !DILocalVariable(name: "first_dynamic", scope: !5210, file: !3, line: 2649, type: !234)
!8544 = !DILocation(line: 2649, column: 12, scope: !5210)
!8545 = !DILocation(line: 2651, column: 7, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2651, column: 6)
!8547 = !DILocation(line: 2651, column: 6, scope: !5210)
!8548 = !DILocation(line: 2652, column: 3, scope: !8546)
!8549 = !DILocation(line: 2658, column: 36, scope: !5210)
!8550 = !DILocation(line: 2658, column: 11, scope: !5210)
!8551 = !DILocation(line: 2658, column: 9, scope: !5210)
!8552 = !DILocation(line: 2659, column: 6, scope: !8553)
!8553 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2659, column: 6)
!8554 = !DILocation(line: 2659, column: 6, scope: !5210)
!8555 = !DILocation(line: 2660, column: 10, scope: !8553)
!8556 = !DILocation(line: 2660, column: 3, scope: !8553)
!8557 = !DILocation(line: 2662, column: 6, scope: !8558)
!8558 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2662, column: 6)
!8559 = !DILocation(line: 2662, column: 12, scope: !8558)
!8560 = !DILocation(line: 2662, column: 20, scope: !8558)
!8561 = !DILocation(line: 2662, column: 6, scope: !5210)
!8562 = !DILocation(line: 2664, column: 3, scope: !8563)
!8563 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 2662, column: 26)
!8564 = !DILocation(line: 2665, column: 35, scope: !8563)
!8565 = !DILocation(line: 2665, column: 41, scope: !8563)
!8566 = !DILocation(line: 2665, column: 47, scope: !8563)
!8567 = !DILocation(line: 2666, column: 4, scope: !8563)
!8568 = !DILocation(line: 2666, column: 10, scope: !8563)
!8569 = !DILocation(line: 2666, column: 18, scope: !8563)
!8570 = !DILocation(line: 2665, column: 8, scope: !8563)
!8571 = !DILocation(line: 2665, column: 6, scope: !8563)
!8572 = !DILocation(line: 2667, column: 3, scope: !8563)
!8573 = !DILocalVariable(name: "__ret_warn_on", scope: !8574, file: !3, line: 2668, type: !234)
!8574 = distinct !DILexicalBlock(scope: !8575, file: !3, line: 2668, column: 7)
!8575 = distinct !DILexicalBlock(scope: !8563, file: !3, line: 2668, column: 7)
!8576 = !DILocation(line: 2668, column: 7, scope: !8574)
!8577 = !DILocation(line: 2668, column: 7, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8574, file: !3, line: 2668, column: 7)
!8579 = !DILocation(line: 2668, column: 7, scope: !8580)
!8580 = distinct !DILexicalBlock(scope: !8578, file: !3, line: 2668, column: 7)
!8581 = !DILocation(line: 2668, column: 7, scope: !8582)
!8582 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 2668, column: 7)
!8583 = !DILocation(line: 2668, column: 7, scope: !8584)
!8584 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 2668, column: 7)
!8585 = !DILocation(line: 2668, column: 7, scope: !8586)
!8586 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 2668, column: 7)
!8587 = !DILocation(line: 2668, column: 7, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 2668, column: 7)
!8589 = !{i32 -2140454579, i32 -2140454550, i32 -2140454504, i32 -2140454446, i32 -2140454392, i32 -2140454338, i32 -2140454283, i32 -2140454252}
!8590 = !DILocation(line: 2668, column: 7, scope: !8591)
!8591 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 2668, column: 7)
!8592 = !{i32 -2140453841, i32 -2140453834, i32 -2140453782, i32 -2140453751, i32 -2140453721}
!8593 = !DILocation(line: 2668, column: 7, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8584, file: !3, line: 2668, column: 7)
!8595 = !DILocation(line: 2668, column: 7, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8580, file: !3, line: 2668, column: 7)
!8597 = !DILocation(line: 2668, column: 7, scope: !8575)
!8598 = !DILocation(line: 2668, column: 7, scope: !8563)
!8599 = !DILocation(line: 2669, column: 11, scope: !8575)
!8600 = !DILocation(line: 2669, column: 14, scope: !8575)
!8601 = !DILocation(line: 2669, column: 36, scope: !8575)
!8602 = !DILocation(line: 2669, column: 4, scope: !8575)
!8603 = !DILocation(line: 2670, column: 19, scope: !8563)
!8604 = !DILocation(line: 2670, column: 3, scope: !8563)
!8605 = !DILocation(line: 2670, column: 9, scope: !8563)
!8606 = !DILocation(line: 2670, column: 17, scope: !8563)
!8607 = !DILocation(line: 2671, column: 2, scope: !8563)
!8608 = !DILocation(line: 2671, column: 13, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8558, file: !3, line: 2671, column: 13)
!8610 = !DILocation(line: 2671, column: 19, scope: !8609)
!8611 = !DILocation(line: 2671, column: 23, scope: !8609)
!8612 = !DILocation(line: 2671, column: 13, scope: !8558)
!8613 = !DILocation(line: 2673, column: 24, scope: !8614)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 2671, column: 32)
!8615 = !DILocation(line: 2673, column: 30, scope: !8614)
!8616 = !DILocation(line: 2673, column: 34, scope: !8614)
!8617 = !DILocation(line: 2673, column: 8, scope: !8614)
!8618 = !DILocation(line: 2673, column: 6, scope: !8614)
!8619 = !DILocation(line: 2674, column: 7, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 2674, column: 7)
!8621 = !DILocation(line: 2674, column: 10, scope: !8620)
!8622 = !DILocation(line: 2674, column: 7, scope: !8614)
!8623 = !DILocation(line: 2675, column: 20, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8620, file: !3, line: 2674, column: 16)
!8625 = !DILocation(line: 2675, column: 4, scope: !8624)
!8626 = !DILocation(line: 2675, column: 10, scope: !8624)
!8627 = !DILocation(line: 2675, column: 18, scope: !8624)
!8628 = !DILocation(line: 2676, column: 4, scope: !8624)
!8629 = !DILocation(line: 2677, column: 36, scope: !8624)
!8630 = !DILocation(line: 2677, column: 42, scope: !8624)
!8631 = !DILocation(line: 2677, column: 48, scope: !8624)
!8632 = !DILocation(line: 2678, column: 12, scope: !8624)
!8633 = !DILocation(line: 2678, column: 18, scope: !8624)
!8634 = !DILocation(line: 2678, column: 26, scope: !8624)
!8635 = !DILocation(line: 2677, column: 9, scope: !8624)
!8636 = !DILocation(line: 2677, column: 7, scope: !8624)
!8637 = !DILocation(line: 2679, column: 4, scope: !8624)
!8638 = !DILocalVariable(name: "__ret_warn_on", scope: !8639, file: !3, line: 2680, type: !234)
!8639 = distinct !DILexicalBlock(scope: !8640, file: !3, line: 2680, column: 8)
!8640 = distinct !DILexicalBlock(scope: !8624, file: !3, line: 2680, column: 8)
!8641 = !DILocation(line: 2680, column: 8, scope: !8639)
!8642 = !DILocation(line: 2680, column: 8, scope: !8643)
!8643 = distinct !DILexicalBlock(scope: !8639, file: !3, line: 2680, column: 8)
!8644 = !DILocation(line: 2680, column: 8, scope: !8645)
!8645 = distinct !DILexicalBlock(scope: !8643, file: !3, line: 2680, column: 8)
!8646 = !DILocation(line: 2680, column: 8, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2680, column: 8)
!8648 = !DILocation(line: 2680, column: 8, scope: !8649)
!8649 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2680, column: 8)
!8650 = !DILocation(line: 2680, column: 8, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2680, column: 8)
!8652 = !DILocation(line: 2680, column: 8, scope: !8653)
!8653 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2680, column: 8)
!8654 = !{i32 -2140452708, i32 -2140452679, i32 -2140452633, i32 -2140452575, i32 -2140452521, i32 -2140452467, i32 -2140452412, i32 -2140452381}
!8655 = !DILocation(line: 2680, column: 8, scope: !8656)
!8656 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2680, column: 8)
!8657 = !{i32 -2140451970, i32 -2140451963, i32 -2140451911, i32 -2140451880, i32 -2140451850}
!8658 = !DILocation(line: 2680, column: 8, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8649, file: !3, line: 2680, column: 8)
!8660 = !DILocation(line: 2680, column: 8, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8645, file: !3, line: 2680, column: 8)
!8662 = !DILocation(line: 2680, column: 8, scope: !8640)
!8663 = !DILocation(line: 2680, column: 8, scope: !8624)
!8664 = !DILocation(line: 2681, column: 12, scope: !8640)
!8665 = !DILocation(line: 2681, column: 15, scope: !8640)
!8666 = !DILocation(line: 2681, column: 37, scope: !8640)
!8667 = !DILocation(line: 2681, column: 5, scope: !8640)
!8668 = !DILocation(line: 2682, column: 3, scope: !8624)
!8669 = !DILocation(line: 2683, column: 2, scope: !8614)
!8670 = !DILocation(line: 2684, column: 6, scope: !8671)
!8671 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2684, column: 6)
!8672 = !DILocation(line: 2684, column: 12, scope: !8671)
!8673 = !DILocation(line: 2684, column: 20, scope: !8671)
!8674 = !DILocation(line: 2684, column: 6, scope: !5210)
!8675 = !DILocation(line: 2685, column: 19, scope: !8676)
!8676 = distinct !DILexicalBlock(scope: !8671, file: !3, line: 2684, column: 25)
!8677 = !DILocation(line: 2685, column: 17, scope: !8676)
!8678 = !DILocation(line: 2686, column: 7, scope: !8679)
!8679 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 2686, column: 7)
!8680 = !DILocation(line: 2686, column: 21, scope: !8679)
!8681 = !DILocation(line: 2686, column: 7, scope: !8676)
!8682 = !DILocation(line: 2687, column: 18, scope: !8679)
!8683 = !DILocation(line: 2687, column: 4, scope: !8679)
!8684 = !DILocation(line: 2689, column: 17, scope: !8679)
!8685 = !DILocation(line: 2691, column: 3, scope: !8676)
!8686 = !DILocation(line: 2692, column: 35, scope: !8676)
!8687 = !DILocation(line: 2692, column: 41, scope: !8676)
!8688 = !DILocation(line: 2692, column: 8, scope: !8676)
!8689 = !DILocation(line: 2692, column: 6, scope: !8676)
!8690 = !DILocation(line: 2694, column: 3, scope: !8676)
!8691 = !DILocalVariable(name: "__ret_warn_on", scope: !8692, file: !3, line: 2695, type: !234)
!8692 = distinct !DILexicalBlock(scope: !8693, file: !3, line: 2695, column: 7)
!8693 = distinct !DILexicalBlock(scope: !8676, file: !3, line: 2695, column: 7)
!8694 = !DILocation(line: 2695, column: 7, scope: !8692)
!8695 = !DILocation(line: 2695, column: 7, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8692, file: !3, line: 2695, column: 7)
!8697 = !DILocation(line: 2695, column: 7, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8696, file: !3, line: 2695, column: 7)
!8699 = !DILocation(line: 2695, column: 7, scope: !8700)
!8700 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 2695, column: 7)
!8701 = !DILocation(line: 2695, column: 7, scope: !8702)
!8702 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 2695, column: 7)
!8703 = !DILocation(line: 2695, column: 7, scope: !8704)
!8704 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2695, column: 7)
!8705 = !DILocation(line: 2695, column: 7, scope: !8706)
!8706 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2695, column: 7)
!8707 = !{i32 -2140450837, i32 -2140450808, i32 -2140450762, i32 -2140450704, i32 -2140450650, i32 -2140450596, i32 -2140450541, i32 -2140450510}
!8708 = !DILocation(line: 2695, column: 7, scope: !8709)
!8709 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2695, column: 7)
!8710 = !{i32 -2140450099, i32 -2140450092, i32 -2140450040, i32 -2140450009, i32 -2140449979}
!8711 = !DILocation(line: 2695, column: 7, scope: !8712)
!8712 = distinct !DILexicalBlock(scope: !8702, file: !3, line: 2695, column: 7)
!8713 = !DILocation(line: 2695, column: 7, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8698, file: !3, line: 2695, column: 7)
!8715 = !DILocation(line: 2695, column: 7, scope: !8693)
!8716 = !DILocation(line: 2695, column: 7, scope: !8676)
!8717 = !DILocation(line: 2696, column: 11, scope: !8693)
!8718 = !DILocation(line: 2696, column: 4, scope: !8693)
!8719 = !DILocation(line: 2697, column: 19, scope: !8676)
!8720 = !DILocation(line: 2697, column: 3, scope: !8676)
!8721 = !DILocation(line: 2697, column: 9, scope: !8676)
!8722 = !DILocation(line: 2697, column: 17, scope: !8676)
!8723 = !DILocation(line: 2698, column: 2, scope: !8676)
!8724 = !DILocation(line: 2699, column: 18, scope: !5210)
!8725 = !DILocation(line: 2699, column: 24, scope: !5210)
!8726 = !DILocation(line: 2699, column: 2, scope: !5210)
!8727 = !DILocation(line: 2700, column: 2, scope: !5210)
!8728 = !DILocation(line: 2700, column: 2, scope: !8529)
!8729 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !8528)
!8730 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !8528)
!8731 = !DILocation(line: 2701, column: 2, scope: !5210)
!8732 = !DILocation(line: 2701, column: 2, scope: !8526)
!8733 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !8525)
!8734 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !8525)
!8735 = !DILocation(line: 2702, column: 2, scope: !5210)
!8736 = !DILocation(line: 2702, column: 2, scope: !8737)
!8737 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2702, column: 2)
!8738 = !DILocation(line: 2703, column: 2, scope: !5210)
!8739 = !DILocation(line: 2703, column: 2, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2703, column: 2)
!8741 = !DILocation(line: 2704, column: 2, scope: !5210)
!8742 = !DILocation(line: 2704, column: 8, scope: !5210)
!8743 = !DILocation(line: 2704, column: 22, scope: !5210)
!8744 = !DILocation(line: 2705, column: 2, scope: !5210)
!8745 = !DILocation(line: 2706, column: 7, scope: !8746)
!8746 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2706, column: 6)
!8747 = !DILocation(line: 2706, column: 13, scope: !8746)
!8748 = !DILocation(line: 2706, column: 6, scope: !5210)
!8749 = !DILocation(line: 2707, column: 3, scope: !8746)
!8750 = !DILocation(line: 2707, column: 9, scope: !8746)
!8751 = !DILocation(line: 2707, column: 21, scope: !8746)
!8752 = !DILocation(line: 2712, column: 16, scope: !5210)
!8753 = !DILocation(line: 2712, column: 22, scope: !5210)
!8754 = !DILocation(line: 2712, column: 36, scope: !5210)
!8755 = !DILocation(line: 2712, column: 42, scope: !5210)
!8756 = !DILocation(line: 2712, column: 2, scope: !5210)
!8757 = !DILocation(line: 2714, column: 31, scope: !8758)
!8758 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2714, column: 6)
!8759 = !DILocation(line: 2714, column: 7, scope: !8758)
!8760 = !DILocation(line: 2714, column: 6, scope: !5210)
!8761 = !DILocation(line: 2715, column: 7, scope: !8762)
!8762 = distinct !DILexicalBlock(scope: !8763, file: !3, line: 2715, column: 7)
!8763 = distinct !DILexicalBlock(scope: !8758, file: !3, line: 2714, column: 38)
!8764 = !DILocation(line: 2715, column: 13, scope: !8762)
!8765 = !DILocation(line: 2715, column: 7, scope: !8763)
!8766 = !DILocation(line: 2716, column: 32, scope: !8767)
!8767 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 2715, column: 35)
!8768 = !DILocation(line: 2716, column: 13, scope: !8767)
!8769 = !DILocation(line: 2716, column: 11, scope: !8767)
!8770 = !DILocation(line: 2717, column: 8, scope: !8771)
!8771 = distinct !DILexicalBlock(scope: !8767, file: !3, line: 2717, column: 8)
!8772 = !DILocation(line: 2717, column: 8, scope: !8767)
!8773 = !DILocation(line: 2718, column: 5, scope: !8771)
!8774 = !DILocation(line: 2723, column: 4, scope: !8767)
!8775 = !DILocation(line: 2723, column: 10, scope: !8767)
!8776 = !DILocation(line: 2723, column: 20, scope: !8767)
!8777 = !DILocation(line: 2724, column: 3, scope: !8767)
!8778 = !DILocation(line: 2726, column: 37, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8762, file: !3, line: 2724, column: 10)
!8780 = !DILocation(line: 2726, column: 13, scope: !8779)
!8781 = !DILocation(line: 2726, column: 11, scope: !8779)
!8782 = !DILocation(line: 2727, column: 8, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 2727, column: 8)
!8784 = !DILocation(line: 2727, column: 8, scope: !8779)
!8785 = !DILocation(line: 2728, column: 5, scope: !8783)
!8786 = !DILocation(line: 2730, column: 2, scope: !8763)
!8787 = !DILocation(line: 2736, column: 7, scope: !8788)
!8788 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2736, column: 6)
!8789 = !DILocation(line: 2736, column: 13, scope: !8788)
!8790 = !DILocation(line: 2736, column: 6, scope: !5210)
!8791 = !DILocation(line: 2737, column: 10, scope: !8792)
!8792 = distinct !DILexicalBlock(scope: !8788, file: !3, line: 2736, column: 29)
!8793 = !DILocation(line: 2738, column: 3, scope: !8792)
!8794 = !DILocation(line: 2741, column: 23, scope: !5210)
!8795 = !DILocation(line: 2741, column: 29, scope: !5210)
!8796 = !DILocation(line: 2741, column: 11, scope: !5210)
!8797 = !DILocation(line: 2741, column: 9, scope: !5210)
!8798 = !DILocation(line: 2742, column: 6, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2742, column: 6)
!8800 = !DILocation(line: 2742, column: 13, scope: !8799)
!8801 = !DILocation(line: 2742, column: 6, scope: !5210)
!8802 = !DILocation(line: 2743, column: 3, scope: !8799)
!8803 = !DILocation(line: 2753, column: 6, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2753, column: 6)
!8805 = !DILocation(line: 2753, column: 12, scope: !8804)
!8806 = !DILocation(line: 2753, column: 6, scope: !5210)
!8807 = !DILocation(line: 2754, column: 3, scope: !8808)
!8808 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 2753, column: 22)
!8809 = !DILocation(line: 2755, column: 2, scope: !8808)
!8810 = !DILocation(line: 2755, column: 13, scope: !8811)
!8811 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 2755, column: 13)
!8812 = !DILocation(line: 2755, column: 19, scope: !8811)
!8813 = !DILocation(line: 2755, column: 32, scope: !8811)
!8814 = !DILocation(line: 2755, column: 35, scope: !8811)
!8815 = !DILocation(line: 2755, column: 41, scope: !8811)
!8816 = !DILocation(line: 2755, column: 13, scope: !8804)
!8817 = !DILocation(line: 2756, column: 44, scope: !8818)
!8818 = distinct !DILexicalBlock(scope: !8811, file: !3, line: 2755, column: 63)
!8819 = !DILocation(line: 2756, column: 12, scope: !8818)
!8820 = !DILocation(line: 2756, column: 10, scope: !8818)
!8821 = !DILocation(line: 2757, column: 7, scope: !8822)
!8822 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 2757, column: 7)
!8823 = !DILocation(line: 2757, column: 7, scope: !8818)
!8824 = !DILocation(line: 2758, column: 16, scope: !8825)
!8825 = distinct !DILexicalBlock(scope: !8822, file: !3, line: 2757, column: 15)
!8826 = !DILocation(line: 2758, column: 22, scope: !8825)
!8827 = !DILocation(line: 2758, column: 4, scope: !8825)
!8828 = !DILocation(line: 2759, column: 4, scope: !8825)
!8829 = !DILocation(line: 2761, column: 2, scope: !8818)
!8830 = !DILocation(line: 2763, column: 2, scope: !5210)
!8831 = !DILocation(line: 2763, column: 2, scope: !8523)
!8832 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !8522)
!8833 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !8522)
!8834 = !DILocation(line: 2765, column: 2, scope: !5210)
!8835 = !DILocation(line: 2766, column: 17, scope: !5210)
!8836 = !DILocation(line: 2766, column: 23, scope: !5210)
!8837 = !DILocation(line: 2766, column: 2, scope: !5210)
!8838 = !DILocalVariable(name: "__mptr", scope: !8839, file: !3, line: 2767, type: !228)
!8839 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 2767, column: 2)
!8840 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 2767, column: 2)
!8841 = !DILocation(line: 2767, column: 2, scope: !8839)
!8842 = !DILocation(line: 2767, column: 2, scope: !8843)
!8843 = distinct !DILexicalBlock(scope: !8839, file: !3, line: 2767, column: 2)
!8844 = !DILocation(line: 2767, column: 2, scope: !8840)
!8845 = !DILocation(line: 2767, column: 2, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 2767, column: 2)
!8847 = !DILocation(line: 2768, column: 37, scope: !8846)
!8848 = !DILocation(line: 2768, column: 44, scope: !8846)
!8849 = !DILocation(line: 2768, column: 48, scope: !8846)
!8850 = !DILocation(line: 2768, column: 3, scope: !8846)
!8851 = !DILocalVariable(name: "__mptr", scope: !8852, file: !3, line: 2767, type: !228)
!8852 = distinct !DILexicalBlock(scope: !8846, file: !3, line: 2767, column: 2)
!8853 = !DILocation(line: 2767, column: 2, scope: !8852)
!8854 = !DILocation(line: 2767, column: 2, scope: !8855)
!8855 = distinct !DILexicalBlock(scope: !8852, file: !3, line: 2767, column: 2)
!8856 = distinct !{!8856, !8844, !8857}
!8857 = !DILocation(line: 2768, column: 58, scope: !8840)
!8858 = !DILocation(line: 2769, column: 2, scope: !5210)
!8859 = !DILocation(line: 2772, column: 26, scope: !5210)
!8860 = !DILocation(line: 2772, column: 2, scope: !5210)
!8861 = !DILocation(line: 2773, column: 28, scope: !5210)
!8862 = !DILocation(line: 2773, column: 2, scope: !5210)
!8863 = !DILocation(line: 2774, column: 9, scope: !5210)
!8864 = !DILocation(line: 2774, column: 2, scope: !5210)
!8865 = !DILabel(scope: !5210, name: "free_bus_id", file: !3, line: 2776)
!8866 = !DILocation(line: 2776, column: 1, scope: !5210)
!8867 = !DILocation(line: 2777, column: 2, scope: !5210)
!8868 = !DILocation(line: 2778, column: 30, scope: !5210)
!8869 = !DILocation(line: 2778, column: 36, scope: !5210)
!8870 = !DILocation(line: 2778, column: 2, scope: !5210)
!8871 = !DILocation(line: 2779, column: 2, scope: !5210)
!8872 = !DILocation(line: 2780, column: 9, scope: !5210)
!8873 = !DILocation(line: 2780, column: 2, scope: !5210)
!8874 = !DILocation(line: 2781, column: 1, scope: !5210)
!8875 = distinct !DISubprogram(name: "spi_controller_check_ops", scope: !3, file: !3, line: 2601, type: !4703, scopeLine: 2602, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8876 = !DILocalVariable(name: "ctlr", arg: 1, scope: !8875, file: !3, line: 2601, type: !4512)
!8877 = !DILocation(line: 2601, column: 60, scope: !8875)
!8878 = !DILocation(line: 2610, column: 6, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8875, file: !3, line: 2610, column: 6)
!8880 = !DILocation(line: 2610, column: 12, scope: !8879)
!8881 = !DILocation(line: 2610, column: 6, scope: !8875)
!8882 = !DILocation(line: 2611, column: 8, scope: !8883)
!8883 = distinct !DILexicalBlock(scope: !8884, file: !3, line: 2611, column: 7)
!8884 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2610, column: 21)
!8885 = !DILocation(line: 2611, column: 14, scope: !8883)
!8886 = !DILocation(line: 2611, column: 23, scope: !8883)
!8887 = !DILocation(line: 2611, column: 7, scope: !8884)
!8888 = !DILocation(line: 2612, column: 4, scope: !8883)
!8889 = !DILocation(line: 2613, column: 2, scope: !8884)
!8890 = !DILocation(line: 2613, column: 14, scope: !8891)
!8891 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 2613, column: 13)
!8892 = !DILocation(line: 2613, column: 20, scope: !8891)
!8893 = !DILocation(line: 2613, column: 29, scope: !8891)
!8894 = !DILocation(line: 2613, column: 33, scope: !8891)
!8895 = !DILocation(line: 2613, column: 39, scope: !8891)
!8896 = !DILocation(line: 2613, column: 52, scope: !8891)
!8897 = !DILocation(line: 2614, column: 7, scope: !8891)
!8898 = !DILocation(line: 2614, column: 13, scope: !8891)
!8899 = !DILocation(line: 2613, column: 13, scope: !8879)
!8900 = !DILocation(line: 2615, column: 3, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8891, file: !3, line: 2614, column: 35)
!8902 = !DILocation(line: 2618, column: 2, scope: !8875)
!8903 = !DILocation(line: 2619, column: 1, scope: !8875)
!8904 = distinct !DISubprogram(name: "INIT_LIST_HEAD", scope: !6950, file: !6950, line: 33, type: !8905, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8905 = !DISubroutineType(types: !8906)
!8906 = !{null, !287}
!8907 = !DILocalVariable(name: "list", arg: 1, scope: !8904, file: !6950, line: 33, type: !287)
!8908 = !DILocation(line: 33, column: 53, scope: !8904)
!8909 = !DILocation(line: 35, column: 2, scope: !8904)
!8910 = !DILocation(line: 35, column: 2, scope: !8911)
!8911 = distinct !DILexicalBlock(scope: !8904, file: !6950, line: 35, column: 2)
!8912 = !DILocation(line: 35, column: 2, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8911, file: !6950, line: 35, column: 2)
!8914 = !DILocation(line: 35, column: 2, scope: !8915)
!8915 = distinct !DILexicalBlock(scope: !8911, file: !6950, line: 35, column: 2)
!8916 = !DILocation(line: 36, column: 15, scope: !8904)
!8917 = !DILocation(line: 36, column: 2, scope: !8904)
!8918 = !DILocation(line: 36, column: 8, scope: !8904)
!8919 = !DILocation(line: 36, column: 13, scope: !8904)
!8920 = !DILocation(line: 37, column: 1, scope: !8904)
!8921 = !DILocalVariable(name: "x", arg: 1, scope: !5383, file: !1644, line: 85, type: !1642)
!8922 = !DILocation(line: 85, column: 57, scope: !5383)
!8923 = !DILocation(line: 87, column: 2, scope: !5383)
!8924 = !DILocation(line: 87, column: 5, scope: !5383)
!8925 = !DILocation(line: 87, column: 10, scope: !5383)
!8926 = !DILocation(line: 88, column: 2, scope: !5383)
!8927 = !DILocation(line: 88, column: 2, scope: !8928)
!8928 = distinct !DILexicalBlock(scope: !5383, file: !1644, line: 88, column: 2)
!8929 = !DILocation(line: 89, column: 1, scope: !5383)
!8930 = distinct !DISubprogram(name: "spi_controller_is_slave", scope: !4514, file: !4514, line: 696, type: !8931, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8931 = !DISubroutineType(types: !8932)
!8932 = !{!261, !4512}
!8933 = !DILocalVariable(name: "ctlr", arg: 1, scope: !8930, file: !4514, line: 696, type: !4512)
!8934 = !DILocation(line: 696, column: 67, scope: !8930)
!8935 = !DILocation(line: 698, column: 2, scope: !8930)
!8936 = distinct !DISubprogram(name: "spi_get_gpio_descs", scope: !3, file: !3, line: 2532, type: !4703, scopeLine: 2533, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8937 = !DILocalVariable(name: "word", arg: 1, scope: !8938, file: !5443, line: 247, type: !388)
!8938 = distinct !DISubprogram(name: "ffz", scope: !5443, file: !5443, line: 247, type: !8939, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!8939 = !DISubroutineType(types: !8940)
!8940 = !{!388, !388}
!8941 = !DILocation(line: 247, column: 56, scope: !8938, inlinedAt: !8942)
!8942 = distinct !DILocation(line: 2591, column: 27, scope: !8936)
!8943 = !DILocalVariable(name: "ctlr", arg: 1, scope: !8936, file: !3, line: 2532, type: !4512)
!8944 = !DILocation(line: 2532, column: 54, scope: !8936)
!8945 = !DILocalVariable(name: "nb", scope: !8936, file: !3, line: 2534, type: !234)
!8946 = !DILocation(line: 2534, column: 6, scope: !8936)
!8947 = !DILocalVariable(name: "i", scope: !8936, file: !3, line: 2534, type: !234)
!8948 = !DILocation(line: 2534, column: 10, scope: !8936)
!8949 = !DILocalVariable(name: "cs", scope: !8936, file: !3, line: 2535, type: !4822)
!8950 = !DILocation(line: 2535, column: 21, scope: !8936)
!8951 = !DILocalVariable(name: "dev", scope: !8936, file: !3, line: 2536, type: !3506)
!8952 = !DILocation(line: 2536, column: 17, scope: !8936)
!8953 = !DILocation(line: 2536, column: 24, scope: !8936)
!8954 = !DILocation(line: 2536, column: 30, scope: !8936)
!8955 = !DILocalVariable(name: "native_cs_mask", scope: !8936, file: !3, line: 2537, type: !388)
!8956 = !DILocation(line: 2537, column: 16, scope: !8936)
!8957 = !DILocalVariable(name: "num_cs_gpios", scope: !8936, file: !3, line: 2538, type: !7)
!8958 = !DILocation(line: 2538, column: 15, scope: !8936)
!8959 = !DILocation(line: 2540, column: 19, scope: !8936)
!8960 = !DILocation(line: 2540, column: 7, scope: !8936)
!8961 = !DILocation(line: 2540, column: 5, scope: !8936)
!8962 = !DILocalVariable(name: "__UNIQUE_ID___x341", scope: !8963, file: !3, line: 2541, type: !234)
!8963 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 2541, column: 25)
!8964 = !DILocation(line: 2541, column: 25, scope: !8963)
!8965 = !DILocalVariable(name: "__UNIQUE_ID___y342", scope: !8963, file: !3, line: 2541, type: !234)
!8966 = !DILocation(line: 2541, column: 25, scope: !8936)
!8967 = !DILocation(line: 2541, column: 2, scope: !8936)
!8968 = !DILocation(line: 2541, column: 8, scope: !8936)
!8969 = !DILocation(line: 2541, column: 23, scope: !8936)
!8970 = !DILocation(line: 2544, column: 6, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 2544, column: 6)
!8972 = !DILocation(line: 2544, column: 9, scope: !8971)
!8973 = !DILocation(line: 2544, column: 14, scope: !8971)
!8974 = !DILocation(line: 2544, column: 17, scope: !8971)
!8975 = !DILocation(line: 2544, column: 20, scope: !8971)
!8976 = !DILocation(line: 2544, column: 6, scope: !8936)
!8977 = !DILocation(line: 2545, column: 3, scope: !8971)
!8978 = !DILocation(line: 2546, column: 11, scope: !8979)
!8979 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 2546, column: 11)
!8980 = !DILocation(line: 2546, column: 14, scope: !8979)
!8981 = !DILocation(line: 2546, column: 11, scope: !8971)
!8982 = !DILocation(line: 2547, column: 10, scope: !8979)
!8983 = !DILocation(line: 2547, column: 3, scope: !8979)
!8984 = !DILocation(line: 2549, column: 20, scope: !8936)
!8985 = !DILocation(line: 2549, column: 25, scope: !8936)
!8986 = !DILocation(line: 2549, column: 31, scope: !8936)
!8987 = !DILocation(line: 2549, column: 7, scope: !8936)
!8988 = !DILocation(line: 2549, column: 5, scope: !8936)
!8989 = !DILocation(line: 2551, column: 7, scope: !8990)
!8990 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 2551, column: 6)
!8991 = !DILocation(line: 2551, column: 6, scope: !8936)
!8992 = !DILocation(line: 2552, column: 3, scope: !8990)
!8993 = !DILocation(line: 2553, column: 20, scope: !8936)
!8994 = !DILocation(line: 2553, column: 2, scope: !8936)
!8995 = !DILocation(line: 2553, column: 8, scope: !8936)
!8996 = !DILocation(line: 2553, column: 18, scope: !8936)
!8997 = !DILocation(line: 2555, column: 9, scope: !8998)
!8998 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 2555, column: 2)
!8999 = !DILocation(line: 2555, column: 7, scope: !8998)
!9000 = !DILocation(line: 2555, column: 14, scope: !9001)
!9001 = distinct !DILexicalBlock(scope: !8998, file: !3, line: 2555, column: 2)
!9002 = !DILocation(line: 2555, column: 18, scope: !9001)
!9003 = !DILocation(line: 2555, column: 16, scope: !9001)
!9004 = !DILocation(line: 2555, column: 2, scope: !8998)
!9005 = !DILocation(line: 2563, column: 41, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !9001, file: !3, line: 2555, column: 27)
!9007 = !DILocation(line: 2563, column: 52, scope: !9006)
!9008 = !DILocation(line: 2563, column: 11, scope: !9006)
!9009 = !DILocation(line: 2563, column: 3, scope: !9006)
!9010 = !DILocation(line: 2563, column: 6, scope: !9006)
!9011 = !DILocation(line: 2563, column: 9, scope: !9006)
!9012 = !DILocation(line: 2565, column: 14, scope: !9013)
!9013 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 2565, column: 7)
!9014 = !DILocation(line: 2565, column: 17, scope: !9013)
!9015 = !DILocation(line: 2565, column: 7, scope: !9013)
!9016 = !DILocation(line: 2565, column: 7, scope: !9006)
!9017 = !DILocation(line: 2566, column: 19, scope: !9013)
!9018 = !DILocation(line: 2566, column: 22, scope: !9013)
!9019 = !DILocation(line: 2566, column: 11, scope: !9013)
!9020 = !DILocation(line: 2566, column: 4, scope: !9013)
!9021 = !DILocation(line: 2568, column: 7, scope: !9022)
!9022 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 2568, column: 7)
!9023 = !DILocation(line: 2568, column: 10, scope: !9022)
!9024 = !DILocation(line: 2568, column: 7, scope: !9006)
!9025 = !DILocalVariable(name: "gpioname", scope: !9026, file: !3, line: 2573, type: !338)
!9026 = distinct !DILexicalBlock(scope: !9022, file: !3, line: 2568, column: 14)
!9027 = !DILocation(line: 2573, column: 10, scope: !9026)
!9028 = !DILocation(line: 2575, column: 30, scope: !9026)
!9029 = !DILocation(line: 2576, column: 18, scope: !9026)
!9030 = !DILocation(line: 2576, column: 9, scope: !9026)
!9031 = !DILocation(line: 2576, column: 24, scope: !9026)
!9032 = !DILocation(line: 2575, column: 15, scope: !9026)
!9033 = !DILocation(line: 2575, column: 13, scope: !9026)
!9034 = !DILocation(line: 2577, column: 9, scope: !9035)
!9035 = distinct !DILexicalBlock(scope: !9026, file: !3, line: 2577, column: 8)
!9036 = !DILocation(line: 2577, column: 8, scope: !9026)
!9037 = !DILocation(line: 2578, column: 5, scope: !9035)
!9038 = !DILocation(line: 2579, column: 28, scope: !9026)
!9039 = !DILocation(line: 2579, column: 31, scope: !9026)
!9040 = !DILocation(line: 2579, column: 35, scope: !9026)
!9041 = !DILocation(line: 2579, column: 4, scope: !9026)
!9042 = !DILocation(line: 2580, column: 16, scope: !9026)
!9043 = !DILocation(line: 2581, column: 4, scope: !9026)
!9044 = !DILocation(line: 2584, column: 7, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 2584, column: 7)
!9046 = !DILocation(line: 2584, column: 13, scope: !9045)
!9047 = !DILocation(line: 2584, column: 27, scope: !9045)
!9048 = !DILocation(line: 2584, column: 30, scope: !9045)
!9049 = !DILocation(line: 2584, column: 35, scope: !9045)
!9050 = !DILocation(line: 2584, column: 41, scope: !9045)
!9051 = !DILocation(line: 2584, column: 32, scope: !9045)
!9052 = !DILocation(line: 2584, column: 7, scope: !9006)
!9053 = !DILocation(line: 2585, column: 4, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 2584, column: 56)
!9055 = !DILocation(line: 2586, column: 4, scope: !9054)
!9056 = !DILocation(line: 2588, column: 21, scope: !9006)
!9057 = !DILocation(line: 2588, column: 18, scope: !9006)
!9058 = !DILocation(line: 2589, column: 2, scope: !9006)
!9059 = !DILocation(line: 2555, column: 23, scope: !9001)
!9060 = !DILocation(line: 2555, column: 2, scope: !9001)
!9061 = distinct !{!9061, !9004, !9062}
!9062 = !DILocation(line: 2589, column: 2, scope: !8998)
!9063 = !DILocation(line: 2591, column: 31, scope: !8936)
!9064 = !DILocation(line: 251, column: 11, scope: !8938, inlinedAt: !8942)
!9065 = !DILocation(line: 251, column: 10, scope: !8938, inlinedAt: !8942)
!9066 = !DILocation(line: 249, column: 2, scope: !8938, inlinedAt: !8942)
!9067 = !{i32 351276}
!9068 = !DILocation(line: 252, column: 9, scope: !8938, inlinedAt: !8942)
!9069 = !DILocation(line: 2591, column: 27, scope: !8936)
!9070 = !DILocation(line: 2591, column: 2, scope: !8936)
!9071 = !DILocation(line: 2591, column: 8, scope: !8936)
!9072 = !DILocation(line: 2591, column: 25, scope: !8936)
!9073 = !DILocation(line: 2592, column: 6, scope: !9074)
!9074 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 2592, column: 6)
!9075 = !DILocation(line: 2592, column: 19, scope: !9074)
!9076 = !DILocation(line: 2592, column: 22, scope: !9074)
!9077 = !DILocation(line: 2592, column: 28, scope: !9074)
!9078 = !DILocation(line: 2592, column: 42, scope: !9074)
!9079 = !DILocation(line: 2593, column: 6, scope: !9074)
!9080 = !DILocation(line: 2593, column: 12, scope: !9074)
!9081 = !DILocation(line: 2593, column: 32, scope: !9074)
!9082 = !DILocation(line: 2593, column: 38, scope: !9074)
!9083 = !DILocation(line: 2593, column: 29, scope: !9074)
!9084 = !DILocation(line: 2592, column: 6, scope: !8936)
!9085 = !DILocation(line: 2594, column: 3, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9074, file: !3, line: 2593, column: 53)
!9087 = !DILocation(line: 2595, column: 3, scope: !9086)
!9088 = !DILocation(line: 2598, column: 2, scope: !8936)
!9089 = !DILocation(line: 2599, column: 1, scope: !8936)
!9090 = distinct !DISubprogram(name: "of_spi_get_gpio_numbers", scope: !3, file: !3, line: 2489, type: !4703, scopeLine: 2490, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9091 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9090, file: !3, line: 2489, type: !4512)
!9092 = !DILocation(line: 2489, column: 59, scope: !9090)
!9093 = !DILocalVariable(name: "nb", scope: !9090, file: !3, line: 2491, type: !234)
!9094 = !DILocation(line: 2491, column: 6, scope: !9090)
!9095 = !DILocalVariable(name: "i", scope: !9090, file: !3, line: 2491, type: !234)
!9096 = !DILocation(line: 2491, column: 10, scope: !9090)
!9097 = !DILocalVariable(name: "cs", scope: !9090, file: !3, line: 2491, type: !770)
!9098 = !DILocation(line: 2491, column: 14, scope: !9090)
!9099 = !DILocalVariable(name: "np", scope: !9090, file: !3, line: 2492, type: !3803)
!9100 = !DILocation(line: 2492, column: 22, scope: !9090)
!9101 = !DILocation(line: 2492, column: 27, scope: !9090)
!9102 = !DILocation(line: 2492, column: 33, scope: !9090)
!9103 = !DILocation(line: 2492, column: 37, scope: !9090)
!9104 = !DILocation(line: 2494, column: 7, scope: !9105)
!9105 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2494, column: 6)
!9106 = !DILocation(line: 2494, column: 6, scope: !9090)
!9107 = !DILocation(line: 2495, column: 3, scope: !9105)
!9108 = !DILocation(line: 2497, column: 27, scope: !9090)
!9109 = !DILocation(line: 2497, column: 7, scope: !9090)
!9110 = !DILocation(line: 2497, column: 5, scope: !9090)
!9111 = !DILocalVariable(name: "__UNIQUE_ID___x339", scope: !9112, file: !3, line: 2498, type: !234)
!9112 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2498, column: 25)
!9113 = !DILocation(line: 2498, column: 25, scope: !9112)
!9114 = !DILocalVariable(name: "__UNIQUE_ID___y340", scope: !9112, file: !3, line: 2498, type: !234)
!9115 = !DILocation(line: 2498, column: 25, scope: !9090)
!9116 = !DILocation(line: 2498, column: 2, scope: !9090)
!9117 = !DILocation(line: 2498, column: 8, scope: !9090)
!9118 = !DILocation(line: 2498, column: 23, scope: !9090)
!9119 = !DILocation(line: 2501, column: 6, scope: !9120)
!9120 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2501, column: 6)
!9121 = !DILocation(line: 2501, column: 9, scope: !9120)
!9122 = !DILocation(line: 2501, column: 14, scope: !9120)
!9123 = !DILocation(line: 2501, column: 17, scope: !9120)
!9124 = !DILocation(line: 2501, column: 20, scope: !9120)
!9125 = !DILocation(line: 2501, column: 6, scope: !9090)
!9126 = !DILocation(line: 2502, column: 3, scope: !9120)
!9127 = !DILocation(line: 2503, column: 11, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9120, file: !3, line: 2503, column: 11)
!9129 = !DILocation(line: 2503, column: 14, scope: !9128)
!9130 = !DILocation(line: 2503, column: 11, scope: !9120)
!9131 = !DILocation(line: 2504, column: 10, scope: !9128)
!9132 = !DILocation(line: 2504, column: 3, scope: !9128)
!9133 = !DILocation(line: 2506, column: 21, scope: !9090)
!9134 = !DILocation(line: 2506, column: 27, scope: !9090)
!9135 = !DILocation(line: 2506, column: 32, scope: !9090)
!9136 = !DILocation(line: 2506, column: 38, scope: !9090)
!9137 = !DILocation(line: 2506, column: 7, scope: !9090)
!9138 = !DILocation(line: 2506, column: 5, scope: !9090)
!9139 = !DILocation(line: 2508, column: 19, scope: !9090)
!9140 = !DILocation(line: 2508, column: 2, scope: !9090)
!9141 = !DILocation(line: 2508, column: 8, scope: !9090)
!9142 = !DILocation(line: 2508, column: 17, scope: !9090)
!9143 = !DILocation(line: 2510, column: 7, scope: !9144)
!9144 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2510, column: 6)
!9145 = !DILocation(line: 2510, column: 13, scope: !9144)
!9146 = !DILocation(line: 2510, column: 6, scope: !9090)
!9147 = !DILocation(line: 2511, column: 3, scope: !9144)
!9148 = !DILocation(line: 2513, column: 9, scope: !9149)
!9149 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2513, column: 2)
!9150 = !DILocation(line: 2513, column: 7, scope: !9149)
!9151 = !DILocation(line: 2513, column: 14, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9149, file: !3, line: 2513, column: 2)
!9153 = !DILocation(line: 2513, column: 18, scope: !9152)
!9154 = !DILocation(line: 2513, column: 24, scope: !9152)
!9155 = !DILocation(line: 2513, column: 16, scope: !9152)
!9156 = !DILocation(line: 2513, column: 2, scope: !9149)
!9157 = !DILocation(line: 2514, column: 3, scope: !9152)
!9158 = !DILocation(line: 2514, column: 6, scope: !9152)
!9159 = !DILocation(line: 2514, column: 9, scope: !9152)
!9160 = !DILocation(line: 2513, column: 41, scope: !9152)
!9161 = !DILocation(line: 2513, column: 2, scope: !9152)
!9162 = distinct !{!9162, !9156, !9163}
!9163 = !DILocation(line: 2514, column: 12, scope: !9149)
!9164 = !DILocation(line: 2516, column: 9, scope: !9165)
!9165 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 2516, column: 2)
!9166 = !DILocation(line: 2516, column: 7, scope: !9165)
!9167 = !DILocation(line: 2516, column: 14, scope: !9168)
!9168 = distinct !DILexicalBlock(scope: !9165, file: !3, line: 2516, column: 2)
!9169 = !DILocation(line: 2516, column: 18, scope: !9168)
!9170 = !DILocation(line: 2516, column: 16, scope: !9168)
!9171 = !DILocation(line: 2516, column: 2, scope: !9165)
!9172 = !DILocation(line: 2517, column: 29, scope: !9168)
!9173 = !DILocation(line: 2517, column: 45, scope: !9168)
!9174 = !DILocation(line: 2517, column: 11, scope: !9168)
!9175 = !DILocation(line: 2517, column: 3, scope: !9168)
!9176 = !DILocation(line: 2517, column: 6, scope: !9168)
!9177 = !DILocation(line: 2517, column: 9, scope: !9168)
!9178 = !DILocation(line: 2516, column: 23, scope: !9168)
!9179 = !DILocation(line: 2516, column: 2, scope: !9168)
!9180 = distinct !{!9180, !9171, !9181}
!9181 = !DILocation(line: 2517, column: 46, scope: !9165)
!9182 = !DILocation(line: 2519, column: 2, scope: !9090)
!9183 = !DILocation(line: 2520, column: 1, scope: !9090)
!9184 = distinct !DISubprogram(name: "spi_controller_initialize_queue", scope: !3, file: !3, line: 1866, type: !4703, scopeLine: 1867, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9185 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9184, file: !3, line: 1866, type: !4512)
!9186 = !DILocation(line: 1866, column: 67, scope: !9184)
!9187 = !DILocalVariable(name: "ret", scope: !9184, file: !3, line: 1868, type: !234)
!9188 = !DILocation(line: 1868, column: 6, scope: !9184)
!9189 = !DILocation(line: 1870, column: 2, scope: !9184)
!9190 = !DILocation(line: 1870, column: 8, scope: !9184)
!9191 = !DILocation(line: 1870, column: 17, scope: !9184)
!9192 = !DILocation(line: 1871, column: 7, scope: !9193)
!9193 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1871, column: 6)
!9194 = !DILocation(line: 1871, column: 13, scope: !9193)
!9195 = !DILocation(line: 1871, column: 6, scope: !9184)
!9196 = !DILocation(line: 1872, column: 3, scope: !9193)
!9197 = !DILocation(line: 1872, column: 9, scope: !9193)
!9198 = !DILocation(line: 1872, column: 30, scope: !9193)
!9199 = !DILocation(line: 1875, column: 23, scope: !9184)
!9200 = !DILocation(line: 1875, column: 8, scope: !9184)
!9201 = !DILocation(line: 1875, column: 6, scope: !9184)
!9202 = !DILocation(line: 1876, column: 6, scope: !9203)
!9203 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1876, column: 6)
!9204 = !DILocation(line: 1876, column: 6, scope: !9184)
!9205 = !DILocation(line: 1877, column: 3, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9203, file: !3, line: 1876, column: 11)
!9207 = !DILocation(line: 1878, column: 3, scope: !9206)
!9208 = !DILocation(line: 1880, column: 2, scope: !9184)
!9209 = !DILocation(line: 1880, column: 8, scope: !9184)
!9210 = !DILocation(line: 1880, column: 15, scope: !9184)
!9211 = !DILocation(line: 1881, column: 24, scope: !9184)
!9212 = !DILocation(line: 1881, column: 8, scope: !9184)
!9213 = !DILocation(line: 1881, column: 6, scope: !9184)
!9214 = !DILocation(line: 1882, column: 6, scope: !9215)
!9215 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 1882, column: 6)
!9216 = !DILocation(line: 1882, column: 6, scope: !9184)
!9217 = !DILocation(line: 1883, column: 3, scope: !9218)
!9218 = distinct !DILexicalBlock(scope: !9215, file: !3, line: 1882, column: 11)
!9219 = !DILocation(line: 1884, column: 3, scope: !9218)
!9220 = !DILocation(line: 1887, column: 2, scope: !9184)
!9221 = !DILabel(scope: !9184, name: "err_start_queue", file: !3, line: 1889)
!9222 = !DILocation(line: 1889, column: 1, scope: !9184)
!9223 = !DILocation(line: 1890, column: 20, scope: !9184)
!9224 = !DILocation(line: 1890, column: 2, scope: !9184)
!9225 = !DILabel(scope: !9184, name: "err_init_queue", file: !3, line: 1891)
!9226 = !DILocation(line: 1891, column: 1, scope: !9184)
!9227 = !DILocation(line: 1892, column: 9, scope: !9184)
!9228 = !DILocation(line: 1892, column: 2, scope: !9184)
!9229 = !DILocation(line: 1893, column: 1, scope: !9184)
!9230 = distinct !DISubprogram(name: "of_register_spi_devices", scope: !3, file: !3, line: 2053, type: !6210, scopeLine: 2054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9231 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9230, file: !3, line: 2053, type: !4512)
!9232 = !DILocation(line: 2053, column: 60, scope: !9230)
!9233 = !DILocalVariable(name: "spi", scope: !9230, file: !3, line: 2055, type: !4532)
!9234 = !DILocation(line: 2055, column: 21, scope: !9230)
!9235 = !DILocalVariable(name: "nc", scope: !9230, file: !3, line: 2056, type: !3803)
!9236 = !DILocation(line: 2056, column: 22, scope: !9230)
!9237 = !DILocation(line: 2058, column: 7, scope: !9238)
!9238 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 2058, column: 6)
!9239 = !DILocation(line: 2058, column: 13, scope: !9238)
!9240 = !DILocation(line: 2058, column: 17, scope: !9238)
!9241 = !DILocation(line: 2058, column: 6, scope: !9230)
!9242 = !DILocation(line: 2059, column: 3, scope: !9238)
!9243 = !DILocation(line: 2061, column: 2, scope: !9244)
!9244 = distinct !DILexicalBlock(scope: !9230, file: !3, line: 2061, column: 2)
!9245 = !DILocation(line: 2061, column: 2, scope: !9246)
!9246 = distinct !DILexicalBlock(scope: !9244, file: !3, line: 2061, column: 2)
!9247 = !DILocation(line: 2062, column: 33, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 2062, column: 7)
!9249 = distinct !DILexicalBlock(scope: !9246, file: !3, line: 2061, column: 58)
!9250 = !DILocation(line: 2062, column: 7, scope: !9248)
!9251 = !DILocation(line: 2062, column: 7, scope: !9249)
!9252 = !DILocation(line: 2063, column: 4, scope: !9248)
!9253 = !DILocation(line: 2064, column: 32, scope: !9249)
!9254 = !DILocation(line: 2064, column: 38, scope: !9249)
!9255 = !DILocation(line: 2064, column: 9, scope: !9249)
!9256 = !DILocation(line: 2064, column: 7, scope: !9249)
!9257 = !DILocation(line: 2065, column: 14, scope: !9258)
!9258 = distinct !DILexicalBlock(scope: !9249, file: !3, line: 2065, column: 7)
!9259 = !DILocation(line: 2065, column: 7, scope: !9258)
!9260 = !DILocation(line: 2065, column: 7, scope: !9249)
!9261 = !DILocation(line: 2066, column: 4, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9258, file: !3, line: 2065, column: 20)
!9263 = !DILocation(line: 2068, column: 23, scope: !9262)
!9264 = !DILocation(line: 2068, column: 4, scope: !9262)
!9265 = !DILocation(line: 2069, column: 3, scope: !9262)
!9266 = !DILocation(line: 2070, column: 2, scope: !9249)
!9267 = distinct !{!9267, !9243, !9268}
!9268 = !DILocation(line: 2070, column: 2, scope: !9244)
!9269 = !DILocation(line: 2071, column: 1, scope: !9230)
!9270 = distinct !DISubprogram(name: "acpi_register_spi_devices", scope: !3, file: !3, line: 2257, type: !6210, scopeLine: 2258, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9271 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9270, file: !3, line: 2257, type: !4512)
!9272 = !DILocation(line: 2257, column: 62, scope: !9270)
!9273 = !DILocalVariable(name: "status", scope: !9270, file: !3, line: 2259, type: !5197)
!9274 = !DILocation(line: 2259, column: 14, scope: !9270)
!9275 = !DILocalVariable(name: "handle", scope: !9270, file: !3, line: 2260, type: !236)
!9276 = !DILocation(line: 2260, column: 14, scope: !9270)
!9277 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !9278, file: !3, line: 2262, type: !243)
!9278 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2262, column: 11)
!9279 = !DILocation(line: 2262, column: 11, scope: !9278)
!9280 = !DILocalVariable(name: "__mptr", scope: !9281, file: !3, line: 2262, type: !228)
!9281 = distinct !DILexicalBlock(scope: !9278, file: !3, line: 2262, column: 11)
!9282 = !DILocation(line: 2262, column: 11, scope: !9281)
!9283 = !DILocation(line: 2262, column: 11, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9281, file: !3, line: 2262, column: 11)
!9285 = !DILocation(line: 2262, column: 11, scope: !9270)
!9286 = !DILocation(line: 2262, column: 9, scope: !9270)
!9287 = !DILocation(line: 2263, column: 7, scope: !9288)
!9288 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2263, column: 6)
!9289 = !DILocation(line: 2263, column: 6, scope: !9270)
!9290 = !DILocation(line: 2264, column: 3, scope: !9288)
!9291 = !DILocation(line: 2268, column: 37, scope: !9270)
!9292 = !DILocation(line: 2266, column: 11, scope: !9270)
!9293 = !DILocation(line: 2266, column: 9, scope: !9270)
!9294 = !DILocation(line: 2269, column: 6, scope: !9295)
!9295 = distinct !DILexicalBlock(scope: !9270, file: !3, line: 2269, column: 6)
!9296 = !DILocation(line: 2269, column: 6, scope: !9270)
!9297 = !DILocation(line: 2270, column: 3, scope: !9295)
!9298 = !DILocation(line: 2271, column: 1, scope: !9270)
!9299 = distinct !DISubprogram(name: "devm_spi_register_controller", scope: !3, file: !3, line: 2802, type: !9300, scopeLine: 2804, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9300 = !DISubroutineType(types: !9301)
!9301 = !{!234, !3506, !4512}
!9302 = !DILocalVariable(name: "dev", arg: 1, scope: !9299, file: !3, line: 2802, type: !3506)
!9303 = !DILocation(line: 2802, column: 49, scope: !9299)
!9304 = !DILocalVariable(name: "ctlr", arg: 2, scope: !9299, file: !3, line: 2803, type: !4512)
!9305 = !DILocation(line: 2803, column: 29, scope: !9299)
!9306 = !DILocalVariable(name: "ptr", scope: !9299, file: !3, line: 2805, type: !5194)
!9307 = !DILocation(line: 2805, column: 26, scope: !9299)
!9308 = !DILocalVariable(name: "ret", scope: !9299, file: !3, line: 2806, type: !234)
!9309 = !DILocation(line: 2806, column: 6, scope: !9299)
!9310 = !DILocation(line: 2808, column: 8, scope: !9299)
!9311 = !DILocation(line: 2808, column: 6, scope: !9299)
!9312 = !DILocation(line: 2809, column: 7, scope: !9313)
!9313 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2809, column: 6)
!9314 = !DILocation(line: 2809, column: 6, scope: !9299)
!9315 = !DILocation(line: 2810, column: 3, scope: !9313)
!9316 = !DILocation(line: 2812, column: 32, scope: !9299)
!9317 = !DILocation(line: 2812, column: 8, scope: !9299)
!9318 = !DILocation(line: 2812, column: 6, scope: !9299)
!9319 = !DILocation(line: 2813, column: 7, scope: !9320)
!9320 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 2813, column: 6)
!9321 = !DILocation(line: 2813, column: 6, scope: !9299)
!9322 = !DILocation(line: 2814, column: 10, scope: !9323)
!9323 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 2813, column: 12)
!9324 = !DILocation(line: 2814, column: 4, scope: !9323)
!9325 = !DILocation(line: 2814, column: 8, scope: !9323)
!9326 = !DILocation(line: 2815, column: 14, scope: !9323)
!9327 = !DILocation(line: 2815, column: 19, scope: !9323)
!9328 = !DILocation(line: 2815, column: 3, scope: !9323)
!9329 = !DILocation(line: 2816, column: 2, scope: !9323)
!9330 = !DILocation(line: 2817, column: 15, scope: !9331)
!9331 = distinct !DILexicalBlock(scope: !9320, file: !3, line: 2816, column: 9)
!9332 = !DILocation(line: 2817, column: 3, scope: !9331)
!9333 = !DILocation(line: 2820, column: 9, scope: !9299)
!9334 = !DILocation(line: 2820, column: 2, scope: !9299)
!9335 = !DILocation(line: 2821, column: 1, scope: !9299)
!9336 = distinct !DISubprogram(name: "devm_spi_unregister", scope: !3, file: !3, line: 2784, type: !5108, scopeLine: 2785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9337 = !DILocalVariable(name: "dev", arg: 1, scope: !9336, file: !3, line: 2784, type: !3506)
!9338 = !DILocation(line: 2784, column: 48, scope: !9336)
!9339 = !DILocalVariable(name: "res", arg: 2, scope: !9336, file: !3, line: 2784, type: !228)
!9340 = !DILocation(line: 2784, column: 59, scope: !9336)
!9341 = !DILocation(line: 2786, column: 55, scope: !9336)
!9342 = !DILocation(line: 2786, column: 29, scope: !9336)
!9343 = !DILocation(line: 2786, column: 28, scope: !9336)
!9344 = !DILocation(line: 2786, column: 2, scope: !9336)
!9345 = !DILocation(line: 2787, column: 1, scope: !9336)
!9346 = distinct !DISubprogram(name: "spi_unregister_controller", scope: !3, file: !3, line: 2847, type: !6210, scopeLine: 2848, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9347 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9346, file: !3, line: 2847, type: !4512)
!9348 = !DILocation(line: 2847, column: 55, scope: !9346)
!9349 = !DILocalVariable(name: "found", scope: !9346, file: !3, line: 2849, type: !4512)
!9350 = !DILocation(line: 2849, column: 25, scope: !9346)
!9351 = !DILocalVariable(name: "id", scope: !9346, file: !3, line: 2850, type: !234)
!9352 = !DILocation(line: 2850, column: 6, scope: !9346)
!9353 = !DILocation(line: 2850, column: 11, scope: !9346)
!9354 = !DILocation(line: 2850, column: 17, scope: !9346)
!9355 = !DILocation(line: 2854, column: 3, scope: !9356)
!9356 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 2853, column: 6)
!9357 = !DILocation(line: 2856, column: 25, scope: !9346)
!9358 = !DILocation(line: 2856, column: 31, scope: !9346)
!9359 = !DILocation(line: 2856, column: 2, scope: !9346)
!9360 = !DILocation(line: 2859, column: 2, scope: !9346)
!9361 = !DILocation(line: 2860, column: 36, scope: !9346)
!9362 = !DILocation(line: 2860, column: 10, scope: !9346)
!9363 = !DILocation(line: 2860, column: 8, scope: !9346)
!9364 = !DILocation(line: 2861, column: 2, scope: !9346)
!9365 = !DILocation(line: 2862, column: 6, scope: !9366)
!9366 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 2862, column: 6)
!9367 = !DILocation(line: 2862, column: 12, scope: !9366)
!9368 = !DILocation(line: 2862, column: 6, scope: !9346)
!9369 = !DILocation(line: 2863, column: 25, scope: !9370)
!9370 = distinct !DILexicalBlock(scope: !9371, file: !3, line: 2863, column: 7)
!9371 = distinct !DILexicalBlock(scope: !9366, file: !3, line: 2862, column: 20)
!9372 = !DILocation(line: 2863, column: 7, scope: !9370)
!9373 = !DILocation(line: 2863, column: 7, scope: !9371)
!9374 = !DILocation(line: 2864, column: 4, scope: !9370)
!9375 = !DILocation(line: 2865, column: 2, scope: !9371)
!9376 = !DILocation(line: 2866, column: 2, scope: !9346)
!9377 = !DILocation(line: 2867, column: 12, scope: !9346)
!9378 = !DILocation(line: 2867, column: 18, scope: !9346)
!9379 = !DILocation(line: 2867, column: 2, scope: !9346)
!9380 = !DILocation(line: 2868, column: 2, scope: !9346)
!9381 = !DILocation(line: 2870, column: 14, scope: !9346)
!9382 = !DILocation(line: 2870, column: 20, scope: !9346)
!9383 = !DILocation(line: 2870, column: 2, scope: !9346)
!9384 = !DILocation(line: 2875, column: 19, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 2875, column: 6)
!9386 = !DILocation(line: 2875, column: 25, scope: !9385)
!9387 = !DILocation(line: 2875, column: 29, scope: !9385)
!9388 = !DILocation(line: 2876, column: 32, scope: !9385)
!9389 = !DILocation(line: 2875, column: 7, scope: !9385)
!9390 = !DILocation(line: 2875, column: 6, scope: !9346)
!9391 = !DILocation(line: 2877, column: 15, scope: !9385)
!9392 = !DILocation(line: 2877, column: 21, scope: !9385)
!9393 = !DILocation(line: 2877, column: 3, scope: !9385)
!9394 = !DILocation(line: 2880, column: 2, scope: !9346)
!9395 = !DILocation(line: 2881, column: 6, scope: !9396)
!9396 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 2881, column: 6)
!9397 = !DILocation(line: 2881, column: 15, scope: !9396)
!9398 = !DILocation(line: 2881, column: 12, scope: !9396)
!9399 = !DILocation(line: 2881, column: 6, scope: !9346)
!9400 = !DILocation(line: 2882, column: 31, scope: !9396)
!9401 = !DILocation(line: 2882, column: 3, scope: !9396)
!9402 = !DILocation(line: 2883, column: 2, scope: !9346)
!9403 = !DILocation(line: 2886, column: 3, scope: !9404)
!9404 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 2885, column: 6)
!9405 = !DILocation(line: 2887, column: 1, scope: !9346)
!9406 = distinct !DISubprogram(name: "__unregister", scope: !3, file: !3, line: 2829, type: !6372, scopeLine: 2830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9407 = !DILocalVariable(name: "dev", arg: 1, scope: !9406, file: !3, line: 2829, type: !3506)
!9408 = !DILocation(line: 2829, column: 40, scope: !9406)
!9409 = !DILocalVariable(name: "null", arg: 2, scope: !9406, file: !3, line: 2829, type: !228)
!9410 = !DILocation(line: 2829, column: 51, scope: !9406)
!9411 = !DILocation(line: 2831, column: 38, scope: !9406)
!9412 = !DILocation(line: 2831, column: 24, scope: !9406)
!9413 = !DILocation(line: 2831, column: 2, scope: !9406)
!9414 = !DILocation(line: 2832, column: 2, scope: !9406)
!9415 = distinct !DISubprogram(name: "spi_destroy_queue", scope: !3, file: !3, line: 1808, type: !4703, scopeLine: 1809, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9416 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9415, file: !3, line: 1808, type: !4512)
!9417 = !DILocation(line: 1808, column: 53, scope: !9415)
!9418 = !DILocalVariable(name: "ret", scope: !9415, file: !3, line: 1810, type: !234)
!9419 = !DILocation(line: 1810, column: 6, scope: !9415)
!9420 = !DILocation(line: 1812, column: 23, scope: !9415)
!9421 = !DILocation(line: 1812, column: 8, scope: !9415)
!9422 = !DILocation(line: 1812, column: 6, scope: !9415)
!9423 = !DILocation(line: 1820, column: 6, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9415, file: !3, line: 1820, column: 6)
!9425 = !DILocation(line: 1820, column: 6, scope: !9415)
!9426 = !DILocation(line: 1821, column: 3, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 1820, column: 11)
!9428 = !DILocation(line: 1822, column: 10, scope: !9427)
!9429 = !DILocation(line: 1822, column: 3, scope: !9427)
!9430 = !DILocation(line: 1825, column: 25, scope: !9415)
!9431 = !DILocation(line: 1825, column: 31, scope: !9415)
!9432 = !DILocation(line: 1825, column: 2, scope: !9415)
!9433 = !DILocation(line: 1827, column: 2, scope: !9415)
!9434 = !DILocation(line: 1828, column: 1, scope: !9415)
!9435 = distinct !DISubprogram(name: "list_del", scope: !6950, file: !6950, line: 144, type: !8905, scopeLine: 145, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9436 = !DILocalVariable(name: "entry", arg: 1, scope: !9435, file: !6950, line: 144, type: !287)
!9437 = !DILocation(line: 144, column: 47, scope: !9435)
!9438 = !DILocation(line: 146, column: 19, scope: !9435)
!9439 = !DILocation(line: 146, column: 2, scope: !9435)
!9440 = !DILocation(line: 147, column: 2, scope: !9435)
!9441 = !DILocation(line: 147, column: 9, scope: !9435)
!9442 = !DILocation(line: 147, column: 14, scope: !9435)
!9443 = !DILocation(line: 148, column: 2, scope: !9435)
!9444 = !DILocation(line: 148, column: 9, scope: !9435)
!9445 = !DILocation(line: 148, column: 14, scope: !9435)
!9446 = !DILocation(line: 149, column: 1, scope: !9435)
!9447 = distinct !DISubprogram(name: "devm_spi_match_controller", scope: !3, file: !3, line: 2824, type: !9448, scopeLine: 2825, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9448 = !DISubroutineType(types: !9449)
!9449 = !{!234, !3506, !228, !228}
!9450 = !DILocalVariable(name: "dev", arg: 1, scope: !9447, file: !3, line: 2824, type: !3506)
!9451 = !DILocation(line: 2824, column: 53, scope: !9447)
!9452 = !DILocalVariable(name: "res", arg: 2, scope: !9447, file: !3, line: 2824, type: !228)
!9453 = !DILocation(line: 2824, column: 64, scope: !9447)
!9454 = !DILocalVariable(name: "ctlr", arg: 3, scope: !9447, file: !3, line: 2824, type: !228)
!9455 = !DILocation(line: 2824, column: 75, scope: !9447)
!9456 = !DILocation(line: 2826, column: 36, scope: !9447)
!9457 = !DILocation(line: 2826, column: 10, scope: !9447)
!9458 = !DILocation(line: 2826, column: 9, scope: !9447)
!9459 = !DILocation(line: 2826, column: 43, scope: !9447)
!9460 = !DILocation(line: 2826, column: 40, scope: !9447)
!9461 = !DILocation(line: 2826, column: 2, scope: !9447)
!9462 = distinct !DISubprogram(name: "spi_controller_suspend", scope: !3, file: !3, line: 2890, type: !4703, scopeLine: 2891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9463 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9462, file: !3, line: 2890, type: !4512)
!9464 = !DILocation(line: 2890, column: 51, scope: !9462)
!9465 = !DILocalVariable(name: "ret", scope: !9462, file: !3, line: 2892, type: !234)
!9466 = !DILocation(line: 2892, column: 6, scope: !9462)
!9467 = !DILocation(line: 2895, column: 7, scope: !9468)
!9468 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2895, column: 6)
!9469 = !DILocation(line: 2895, column: 13, scope: !9468)
!9470 = !DILocation(line: 2895, column: 6, scope: !9462)
!9471 = !DILocation(line: 2896, column: 3, scope: !9468)
!9472 = !DILocation(line: 2898, column: 23, scope: !9462)
!9473 = !DILocation(line: 2898, column: 8, scope: !9462)
!9474 = !DILocation(line: 2898, column: 6, scope: !9462)
!9475 = !DILocation(line: 2899, column: 6, scope: !9476)
!9476 = distinct !DILexicalBlock(scope: !9462, file: !3, line: 2899, column: 6)
!9477 = !DILocation(line: 2899, column: 6, scope: !9462)
!9478 = !DILocation(line: 2900, column: 3, scope: !9476)
!9479 = !DILocation(line: 2902, column: 9, scope: !9462)
!9480 = !DILocation(line: 2902, column: 2, scope: !9462)
!9481 = !DILocation(line: 2903, column: 1, scope: !9462)
!9482 = distinct !DISubprogram(name: "spi_stop_queue", scope: !3, file: !3, line: 1774, type: !4703, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9483 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !9484)
!9484 = distinct !DILocation(line: 1791, column: 3, scope: !9485)
!9485 = distinct !DILexicalBlock(scope: !9486, file: !3, line: 1791, column: 3)
!9486 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 1791, column: 3)
!9487 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1791, column: 3)
!9488 = distinct !DILexicalBlock(scope: !9489, file: !3, line: 1791, column: 3)
!9489 = distinct !DILexicalBlock(scope: !9490, file: !3, line: 1791, column: 3)
!9490 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 1788, column: 63)
!9491 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !9492)
!9492 = distinct !DILocation(line: 1789, column: 3, scope: !9490)
!9493 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !9492)
!9494 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !9495)
!9495 = distinct !DILocation(line: 1799, column: 2, scope: !9482)
!9496 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !9495)
!9497 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !9498)
!9498 = distinct !DILocation(line: 1780, column: 2, scope: !9499)
!9499 = distinct !DILexicalBlock(scope: !9500, file: !3, line: 1780, column: 2)
!9500 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 1780, column: 2)
!9501 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1780, column: 2)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 1780, column: 2)
!9503 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 1780, column: 2)
!9504 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9482, file: !3, line: 1774, type: !4512)
!9505 = !DILocation(line: 1774, column: 50, scope: !9482)
!9506 = !DILocalVariable(name: "flags", scope: !9482, file: !3, line: 1776, type: !388)
!9507 = !DILocation(line: 1776, column: 16, scope: !9482)
!9508 = !DILocalVariable(name: "limit", scope: !9482, file: !3, line: 1777, type: !7)
!9509 = !DILocation(line: 1777, column: 11, scope: !9482)
!9510 = !DILocalVariable(name: "ret", scope: !9482, file: !3, line: 1778, type: !234)
!9511 = !DILocation(line: 1778, column: 6, scope: !9482)
!9512 = !DILocation(line: 1780, column: 2, scope: !9482)
!9513 = !DILocation(line: 1780, column: 2, scope: !9503)
!9514 = !DILocalVariable(name: "__dummy", scope: !9515, file: !3, line: 1780, type: !388)
!9515 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1780, column: 2)
!9516 = !DILocation(line: 1780, column: 2, scope: !9515)
!9517 = !DILocalVariable(name: "__dummy2", scope: !9515, file: !3, line: 1780, type: !388)
!9518 = !DILocation(line: 1780, column: 2, scope: !9502)
!9519 = !DILocation(line: 1780, column: 2, scope: !9501)
!9520 = !DILocation(line: 1780, column: 2, scope: !9521)
!9521 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 1780, column: 2)
!9522 = !DILocalVariable(name: "__dummy", scope: !9523, file: !3, line: 1780, type: !388)
!9523 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 1780, column: 2)
!9524 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 1780, column: 2)
!9525 = !DILocation(line: 1780, column: 2, scope: !9523)
!9526 = !DILocalVariable(name: "__dummy2", scope: !9523, file: !3, line: 1780, type: !388)
!9527 = !DILocation(line: 1780, column: 2, scope: !9524)
!9528 = !DILocation(line: 1780, column: 2, scope: !9500)
!9529 = !{i32 -2140474891}
!9530 = !DILocation(line: 1780, column: 2, scope: !9499)
!9531 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !9498)
!9532 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !9498)
!9533 = !DILocation(line: 1788, column: 2, scope: !9482)
!9534 = !DILocation(line: 1788, column: 23, scope: !9482)
!9535 = !DILocation(line: 1788, column: 29, scope: !9482)
!9536 = !DILocation(line: 1788, column: 11, scope: !9482)
!9537 = !DILocation(line: 1788, column: 36, scope: !9482)
!9538 = !DILocation(line: 1788, column: 39, scope: !9482)
!9539 = !DILocation(line: 1788, column: 45, scope: !9482)
!9540 = !DILocation(line: 1788, column: 51, scope: !9482)
!9541 = !DILocation(line: 1788, column: 59, scope: !9482)
!9542 = !DILocation(line: 0, scope: !9482)
!9543 = !DILocation(line: 1789, column: 27, scope: !9490)
!9544 = !DILocation(line: 1789, column: 33, scope: !9490)
!9545 = !DILocation(line: 1789, column: 45, scope: !9490)
!9546 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !9492)
!9547 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !9492)
!9548 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !9492)
!9549 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !9492)
!9550 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !9492)
!9551 = !DILocation(line: 1790, column: 3, scope: !9490)
!9552 = !DILocation(line: 1791, column: 3, scope: !9490)
!9553 = !DILocation(line: 1791, column: 3, scope: !9489)
!9554 = !DILocalVariable(name: "__dummy", scope: !9555, file: !3, line: 1791, type: !388)
!9555 = distinct !DILexicalBlock(scope: !9488, file: !3, line: 1791, column: 3)
!9556 = !DILocation(line: 1791, column: 3, scope: !9555)
!9557 = !DILocalVariable(name: "__dummy2", scope: !9555, file: !3, line: 1791, type: !388)
!9558 = !DILocation(line: 1791, column: 3, scope: !9488)
!9559 = !DILocation(line: 1791, column: 3, scope: !9487)
!9560 = !DILocation(line: 1791, column: 3, scope: !9561)
!9561 = distinct !DILexicalBlock(scope: !9487, file: !3, line: 1791, column: 3)
!9562 = !DILocalVariable(name: "__dummy", scope: !9563, file: !3, line: 1791, type: !388)
!9563 = distinct !DILexicalBlock(scope: !9564, file: !3, line: 1791, column: 3)
!9564 = distinct !DILexicalBlock(scope: !9561, file: !3, line: 1791, column: 3)
!9565 = !DILocation(line: 1791, column: 3, scope: !9563)
!9566 = !DILocalVariable(name: "__dummy2", scope: !9563, file: !3, line: 1791, type: !388)
!9567 = !DILocation(line: 1791, column: 3, scope: !9564)
!9568 = !DILocation(line: 1791, column: 3, scope: !9486)
!9569 = !{i32 -2140473830}
!9570 = !DILocation(line: 1791, column: 3, scope: !9485)
!9571 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !9484)
!9572 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !9484)
!9573 = distinct !{!9573, !9533, !9574}
!9574 = !DILocation(line: 1792, column: 2, scope: !9482)
!9575 = !DILocation(line: 1794, column: 19, scope: !9576)
!9576 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 1794, column: 6)
!9577 = !DILocation(line: 1794, column: 25, scope: !9576)
!9578 = !DILocation(line: 1794, column: 7, scope: !9576)
!9579 = !DILocation(line: 1794, column: 32, scope: !9576)
!9580 = !DILocation(line: 1794, column: 35, scope: !9576)
!9581 = !DILocation(line: 1794, column: 41, scope: !9576)
!9582 = !DILocation(line: 1794, column: 6, scope: !9482)
!9583 = !DILocation(line: 1795, column: 7, scope: !9576)
!9584 = !DILocation(line: 1795, column: 3, scope: !9576)
!9585 = !DILocation(line: 1797, column: 3, scope: !9576)
!9586 = !DILocation(line: 1797, column: 9, scope: !9576)
!9587 = !DILocation(line: 1797, column: 17, scope: !9576)
!9588 = !DILocation(line: 1799, column: 26, scope: !9482)
!9589 = !DILocation(line: 1799, column: 32, scope: !9482)
!9590 = !DILocation(line: 1799, column: 44, scope: !9482)
!9591 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !9495)
!9592 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !9495)
!9593 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !9495)
!9594 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !9495)
!9595 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !9495)
!9596 = !DILocation(line: 1801, column: 6, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9482, file: !3, line: 1801, column: 6)
!9598 = !DILocation(line: 1801, column: 6, scope: !9482)
!9599 = !DILocation(line: 1802, column: 3, scope: !9600)
!9600 = distinct !DILexicalBlock(scope: !9597, file: !3, line: 1801, column: 11)
!9601 = !DILocation(line: 1803, column: 10, scope: !9600)
!9602 = !DILocation(line: 1803, column: 3, scope: !9600)
!9603 = !DILocation(line: 1805, column: 9, scope: !9482)
!9604 = !DILocation(line: 1805, column: 2, scope: !9482)
!9605 = !DILocation(line: 1806, column: 1, scope: !9482)
!9606 = distinct !DISubprogram(name: "spi_controller_resume", scope: !3, file: !3, line: 2906, type: !4703, scopeLine: 2907, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9607 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9606, file: !3, line: 2906, type: !4512)
!9608 = !DILocation(line: 2906, column: 50, scope: !9606)
!9609 = !DILocalVariable(name: "ret", scope: !9606, file: !3, line: 2908, type: !234)
!9610 = !DILocation(line: 2908, column: 6, scope: !9606)
!9611 = !DILocation(line: 2910, column: 7, scope: !9612)
!9612 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 2910, column: 6)
!9613 = !DILocation(line: 2910, column: 13, scope: !9612)
!9614 = !DILocation(line: 2910, column: 6, scope: !9606)
!9615 = !DILocation(line: 2911, column: 3, scope: !9612)
!9616 = !DILocation(line: 2913, column: 24, scope: !9606)
!9617 = !DILocation(line: 2913, column: 8, scope: !9606)
!9618 = !DILocation(line: 2913, column: 6, scope: !9606)
!9619 = !DILocation(line: 2914, column: 6, scope: !9620)
!9620 = distinct !DILexicalBlock(scope: !9606, file: !3, line: 2914, column: 6)
!9621 = !DILocation(line: 2914, column: 6, scope: !9606)
!9622 = !DILocation(line: 2915, column: 3, scope: !9620)
!9623 = !DILocation(line: 2917, column: 9, scope: !9606)
!9624 = !DILocation(line: 2917, column: 2, scope: !9606)
!9625 = !DILocation(line: 2918, column: 1, scope: !9606)
!9626 = distinct !DISubprogram(name: "spi_start_queue", scope: !3, file: !3, line: 1754, type: !4703, scopeLine: 1755, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9627 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !9628)
!9628 = distinct !DILocation(line: 1761, column: 3, scope: !9629)
!9629 = distinct !DILexicalBlock(scope: !9630, file: !3, line: 1760, column: 35)
!9630 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 1760, column: 6)
!9631 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !9628)
!9632 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !9633)
!9633 = distinct !DILocation(line: 1767, column: 2, scope: !9626)
!9634 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !9633)
!9635 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !9636)
!9636 = distinct !DILocation(line: 1758, column: 2, scope: !9637)
!9637 = distinct !DILexicalBlock(scope: !9638, file: !3, line: 1758, column: 2)
!9638 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 1758, column: 2)
!9639 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1758, column: 2)
!9640 = distinct !DILexicalBlock(scope: !9641, file: !3, line: 1758, column: 2)
!9641 = distinct !DILexicalBlock(scope: !9626, file: !3, line: 1758, column: 2)
!9642 = !DILocalVariable(name: "ctlr", arg: 1, scope: !9626, file: !3, line: 1754, type: !4512)
!9643 = !DILocation(line: 1754, column: 51, scope: !9626)
!9644 = !DILocalVariable(name: "flags", scope: !9626, file: !3, line: 1756, type: !388)
!9645 = !DILocation(line: 1756, column: 16, scope: !9626)
!9646 = !DILocation(line: 1758, column: 2, scope: !9626)
!9647 = !DILocation(line: 1758, column: 2, scope: !9641)
!9648 = !DILocalVariable(name: "__dummy", scope: !9649, file: !3, line: 1758, type: !388)
!9649 = distinct !DILexicalBlock(scope: !9640, file: !3, line: 1758, column: 2)
!9650 = !DILocation(line: 1758, column: 2, scope: !9649)
!9651 = !DILocalVariable(name: "__dummy2", scope: !9649, file: !3, line: 1758, type: !388)
!9652 = !DILocation(line: 1758, column: 2, scope: !9640)
!9653 = !DILocation(line: 1758, column: 2, scope: !9639)
!9654 = !DILocation(line: 1758, column: 2, scope: !9655)
!9655 = distinct !DILexicalBlock(scope: !9639, file: !3, line: 1758, column: 2)
!9656 = !DILocalVariable(name: "__dummy", scope: !9657, file: !3, line: 1758, type: !388)
!9657 = distinct !DILexicalBlock(scope: !9658, file: !3, line: 1758, column: 2)
!9658 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 1758, column: 2)
!9659 = !DILocation(line: 1758, column: 2, scope: !9657)
!9660 = !DILocalVariable(name: "__dummy2", scope: !9657, file: !3, line: 1758, type: !388)
!9661 = !DILocation(line: 1758, column: 2, scope: !9658)
!9662 = !DILocation(line: 1758, column: 2, scope: !9638)
!9663 = !{i32 -2140475967}
!9664 = !DILocation(line: 1758, column: 2, scope: !9637)
!9665 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !9636)
!9666 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !9636)
!9667 = !DILocation(line: 1760, column: 6, scope: !9630)
!9668 = !DILocation(line: 1760, column: 12, scope: !9630)
!9669 = !DILocation(line: 1760, column: 20, scope: !9630)
!9670 = !DILocation(line: 1760, column: 23, scope: !9630)
!9671 = !DILocation(line: 1760, column: 29, scope: !9630)
!9672 = !DILocation(line: 1760, column: 6, scope: !9626)
!9673 = !DILocation(line: 1761, column: 27, scope: !9629)
!9674 = !DILocation(line: 1761, column: 33, scope: !9629)
!9675 = !DILocation(line: 1761, column: 45, scope: !9629)
!9676 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !9628)
!9677 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !9628)
!9678 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !9628)
!9679 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !9628)
!9680 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !9628)
!9681 = !DILocation(line: 1762, column: 3, scope: !9629)
!9682 = !DILocation(line: 1765, column: 2, scope: !9626)
!9683 = !DILocation(line: 1765, column: 8, scope: !9626)
!9684 = !DILocation(line: 1765, column: 16, scope: !9626)
!9685 = !DILocation(line: 1766, column: 2, scope: !9626)
!9686 = !DILocation(line: 1766, column: 8, scope: !9626)
!9687 = !DILocation(line: 1766, column: 16, scope: !9626)
!9688 = !DILocation(line: 1767, column: 26, scope: !9626)
!9689 = !DILocation(line: 1767, column: 32, scope: !9626)
!9690 = !DILocation(line: 1767, column: 44, scope: !9626)
!9691 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !9633)
!9692 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !9633)
!9693 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !9633)
!9694 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !9633)
!9695 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !9633)
!9696 = !DILocation(line: 1769, column: 21, scope: !9626)
!9697 = !DILocation(line: 1769, column: 27, scope: !9626)
!9698 = !DILocation(line: 1769, column: 37, scope: !9626)
!9699 = !DILocation(line: 1769, column: 43, scope: !9626)
!9700 = !DILocation(line: 1769, column: 2, scope: !9626)
!9701 = !DILocation(line: 1771, column: 2, scope: !9626)
!9702 = !DILocation(line: 1772, column: 1, scope: !9626)
!9703 = distinct !DISubprogram(name: "spi_busnum_to_master", scope: !3, file: !3, line: 2942, type: !9704, scopeLine: 2943, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9704 = !DISubroutineType(types: !9705)
!9705 = !{!4512, !966}
!9706 = !DILocalVariable(name: "bus_num", arg: 1, scope: !9703, file: !3, line: 2942, type: !966)
!9707 = !DILocation(line: 2942, column: 49, scope: !9703)
!9708 = !DILocalVariable(name: "dev", scope: !9703, file: !3, line: 2944, type: !3506)
!9709 = !DILocation(line: 2944, column: 18, scope: !9703)
!9710 = !DILocalVariable(name: "ctlr", scope: !9703, file: !3, line: 2945, type: !4512)
!9711 = !DILocation(line: 2945, column: 25, scope: !9703)
!9712 = !DILocation(line: 2947, column: 51, scope: !9703)
!9713 = !DILocation(line: 2947, column: 8, scope: !9703)
!9714 = !DILocation(line: 2947, column: 6, scope: !9703)
!9715 = !DILocation(line: 2949, column: 6, scope: !9716)
!9716 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 2949, column: 6)
!9717 = !DILocation(line: 2949, column: 6, scope: !9703)
!9718 = !DILocalVariable(name: "__mptr", scope: !9719, file: !3, line: 2950, type: !228)
!9719 = distinct !DILexicalBlock(scope: !9716, file: !3, line: 2950, column: 10)
!9720 = !DILocation(line: 2950, column: 10, scope: !9719)
!9721 = !DILocation(line: 2950, column: 10, scope: !9722)
!9722 = distinct !DILexicalBlock(scope: !9719, file: !3, line: 2950, column: 10)
!9723 = !DILocation(line: 2950, column: 8, scope: !9716)
!9724 = !DILocation(line: 2950, column: 3, scope: !9716)
!9725 = !DILocation(line: 2952, column: 9, scope: !9703)
!9726 = !DILocation(line: 2952, column: 2, scope: !9703)
!9727 = distinct !DISubprogram(name: "__spi_controller_match", scope: !3, file: !3, line: 2921, type: !9728, scopeLine: 2922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9728 = !DISubroutineType(types: !9729)
!9729 = !{!234, !3506, !269}
!9730 = !DILocalVariable(name: "dev", arg: 1, scope: !9727, file: !3, line: 2921, type: !3506)
!9731 = !DILocation(line: 2921, column: 50, scope: !9727)
!9732 = !DILocalVariable(name: "data", arg: 2, scope: !9727, file: !3, line: 2921, type: !269)
!9733 = !DILocation(line: 2921, column: 67, scope: !9727)
!9734 = !DILocalVariable(name: "ctlr", scope: !9727, file: !3, line: 2923, type: !4512)
!9735 = !DILocation(line: 2923, column: 25, scope: !9727)
!9736 = !DILocalVariable(name: "bus_num", scope: !9727, file: !3, line: 2924, type: !9737)
!9737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9738, size: 64)
!9738 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !966)
!9739 = !DILocation(line: 2924, column: 13, scope: !9727)
!9740 = !DILocation(line: 2924, column: 23, scope: !9727)
!9741 = !DILocalVariable(name: "__mptr", scope: !9742, file: !3, line: 2926, type: !228)
!9742 = distinct !DILexicalBlock(scope: !9727, file: !3, line: 2926, column: 9)
!9743 = !DILocation(line: 2926, column: 9, scope: !9742)
!9744 = !DILocation(line: 2926, column: 9, scope: !9745)
!9745 = distinct !DILexicalBlock(scope: !9742, file: !3, line: 2926, column: 9)
!9746 = !DILocation(line: 2926, column: 7, scope: !9727)
!9747 = !DILocation(line: 2927, column: 9, scope: !9727)
!9748 = !DILocation(line: 2927, column: 15, scope: !9727)
!9749 = !DILocation(line: 2927, column: 27, scope: !9727)
!9750 = !DILocation(line: 2927, column: 26, scope: !9727)
!9751 = !DILocation(line: 2927, column: 23, scope: !9727)
!9752 = !DILocation(line: 2927, column: 2, scope: !9727)
!9753 = distinct !DISubprogram(name: "spi_res_alloc", scope: !3, file: !3, line: 2974, type: !9754, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9754 = !DISubroutineType(types: !9755)
!9755 = !{!228, !4532, !5170, !385, !226}
!9756 = !DILocalVariable(name: "spi", arg: 1, scope: !9753, file: !3, line: 2974, type: !4532)
!9757 = !DILocation(line: 2974, column: 40, scope: !9753)
!9758 = !DILocalVariable(name: "release", arg: 2, scope: !9753, file: !3, line: 2975, type: !5170)
!9759 = !DILocation(line: 2975, column: 25, scope: !9753)
!9760 = !DILocalVariable(name: "size", arg: 3, scope: !9753, file: !3, line: 2976, type: !385)
!9761 = !DILocation(line: 2976, column: 14, scope: !9753)
!9762 = !DILocalVariable(name: "gfp", arg: 4, scope: !9753, file: !3, line: 2976, type: !226)
!9763 = !DILocation(line: 2976, column: 26, scope: !9753)
!9764 = !DILocalVariable(name: "sres", scope: !9753, file: !3, line: 2978, type: !5165)
!9765 = !DILocation(line: 2978, column: 18, scope: !9753)
!9766 = !DILocation(line: 2980, column: 33, scope: !9753)
!9767 = !DILocation(line: 2980, column: 31, scope: !9753)
!9768 = !DILocation(line: 2980, column: 39, scope: !9753)
!9769 = !DILocation(line: 2980, column: 9, scope: !9753)
!9770 = !DILocation(line: 2980, column: 7, scope: !9753)
!9771 = !DILocation(line: 2981, column: 7, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9753, file: !3, line: 2981, column: 6)
!9773 = !DILocation(line: 2981, column: 6, scope: !9753)
!9774 = !DILocation(line: 2982, column: 3, scope: !9772)
!9775 = !DILocation(line: 2984, column: 18, scope: !9753)
!9776 = !DILocation(line: 2984, column: 24, scope: !9753)
!9777 = !DILocation(line: 2984, column: 2, scope: !9753)
!9778 = !DILocation(line: 2985, column: 18, scope: !9753)
!9779 = !DILocation(line: 2985, column: 2, scope: !9753)
!9780 = !DILocation(line: 2985, column: 8, scope: !9753)
!9781 = !DILocation(line: 2985, column: 16, scope: !9753)
!9782 = !DILocation(line: 2987, column: 9, scope: !9753)
!9783 = !DILocation(line: 2987, column: 15, scope: !9753)
!9784 = !DILocation(line: 2987, column: 2, scope: !9753)
!9785 = !DILocation(line: 2988, column: 1, scope: !9753)
!9786 = distinct !DISubprogram(name: "spi_res_free", scope: !3, file: !3, line: 2996, type: !533, scopeLine: 2997, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9787 = !DILocalVariable(name: "res", arg: 1, scope: !9786, file: !3, line: 2996, type: !228)
!9788 = !DILocation(line: 2996, column: 25, scope: !9786)
!9789 = !DILocalVariable(name: "sres", scope: !9786, file: !3, line: 2998, type: !5165)
!9790 = !DILocation(line: 2998, column: 18, scope: !9786)
!9791 = !DILocalVariable(name: "__mptr", scope: !9792, file: !3, line: 2998, type: !228)
!9792 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 2998, column: 25)
!9793 = !DILocation(line: 2998, column: 25, scope: !9792)
!9794 = !DILocation(line: 2998, column: 25, scope: !9795)
!9795 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 2998, column: 25)
!9796 = !DILocation(line: 3000, column: 7, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 3000, column: 6)
!9798 = !DILocation(line: 3000, column: 6, scope: !9786)
!9799 = !DILocation(line: 3001, column: 3, scope: !9797)
!9800 = !DILocalVariable(name: "__ret_warn_on", scope: !9801, file: !3, line: 3003, type: !234)
!9801 = distinct !DILexicalBlock(scope: !9786, file: !3, line: 3003, column: 2)
!9802 = !DILocation(line: 3003, column: 2, scope: !9801)
!9803 = !DILocation(line: 3003, column: 2, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9801, file: !3, line: 3003, column: 2)
!9805 = !DILocation(line: 3003, column: 2, scope: !9806)
!9806 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 3003, column: 2)
!9807 = !DILocation(line: 3003, column: 2, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3003, column: 2)
!9809 = !DILocation(line: 3003, column: 2, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3003, column: 2)
!9811 = !{i32 -2140432641, i32 -2140432612, i32 -2140432566, i32 -2140432508, i32 -2140432454, i32 -2140432400, i32 -2140432345, i32 -2140432314}
!9812 = !DILocation(line: 3003, column: 2, scope: !9813)
!9813 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3003, column: 2)
!9814 = !{i32 -2140431914, i32 -2140431907, i32 -2140431855, i32 -2140431824, i32 -2140431794}
!9815 = !DILocation(line: 3003, column: 2, scope: !9816)
!9816 = distinct !DILexicalBlock(scope: !9806, file: !3, line: 3003, column: 2)
!9817 = !DILocation(line: 3004, column: 8, scope: !9786)
!9818 = !DILocation(line: 3004, column: 2, scope: !9786)
!9819 = !DILocation(line: 3005, column: 1, scope: !9786)
!9820 = distinct !DISubprogram(name: "list_empty", scope: !6950, file: !6950, line: 280, type: !9821, scopeLine: 281, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9821 = !DISubroutineType(types: !9822)
!9822 = !{!234, !9823}
!9823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9824, size: 64)
!9824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !284)
!9825 = !DILocalVariable(name: "head", arg: 1, scope: !9820, file: !6950, line: 280, type: !9823)
!9826 = !DILocation(line: 280, column: 54, scope: !9820)
!9827 = !DILocation(line: 282, column: 9, scope: !9828)
!9828 = distinct !DILexicalBlock(scope: !9820, file: !6950, line: 282, column: 9)
!9829 = !DILocation(line: 282, column: 9, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9828, file: !6950, line: 282, column: 9)
!9831 = !DILocation(line: 282, column: 34, scope: !9820)
!9832 = !DILocation(line: 282, column: 31, scope: !9820)
!9833 = !DILocation(line: 282, column: 2, scope: !9820)
!9834 = distinct !DISubprogram(name: "spi_res_add", scope: !3, file: !3, line: 3013, type: !9835, scopeLine: 3014, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9835 = !DISubroutineType(types: !9836)
!9836 = !{null, !4594, !228}
!9837 = !DILocalVariable(name: "message", arg: 1, scope: !9834, file: !3, line: 3013, type: !4594)
!9838 = !DILocation(line: 3013, column: 38, scope: !9834)
!9839 = !DILocalVariable(name: "res", arg: 2, scope: !9834, file: !3, line: 3013, type: !228)
!9840 = !DILocation(line: 3013, column: 53, scope: !9834)
!9841 = !DILocalVariable(name: "sres", scope: !9834, file: !3, line: 3015, type: !5165)
!9842 = !DILocation(line: 3015, column: 18, scope: !9834)
!9843 = !DILocalVariable(name: "__mptr", scope: !9844, file: !3, line: 3015, type: !228)
!9844 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 3015, column: 25)
!9845 = !DILocation(line: 3015, column: 25, scope: !9844)
!9846 = !DILocation(line: 3015, column: 25, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9844, file: !3, line: 3015, column: 25)
!9848 = !DILocalVariable(name: "__ret_warn_on", scope: !9849, file: !3, line: 3017, type: !234)
!9849 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 3017, column: 2)
!9850 = !DILocation(line: 3017, column: 2, scope: !9849)
!9851 = !DILocation(line: 3017, column: 2, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 3017, column: 2)
!9853 = !DILocation(line: 3017, column: 2, scope: !9854)
!9854 = distinct !DILexicalBlock(scope: !9852, file: !3, line: 3017, column: 2)
!9855 = !DILocation(line: 3017, column: 2, scope: !9856)
!9856 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3017, column: 2)
!9857 = !DILocation(line: 3017, column: 2, scope: !9858)
!9858 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3017, column: 2)
!9859 = !{i32 -2140429695, i32 -2140429666, i32 -2140429620, i32 -2140429562, i32 -2140429508, i32 -2140429454, i32 -2140429399, i32 -2140429368}
!9860 = !DILocation(line: 3017, column: 2, scope: !9861)
!9861 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3017, column: 2)
!9862 = !{i32 -2140428968, i32 -2140428961, i32 -2140428909, i32 -2140428878, i32 -2140428848}
!9863 = !DILocation(line: 3017, column: 2, scope: !9864)
!9864 = distinct !DILexicalBlock(scope: !9854, file: !3, line: 3017, column: 2)
!9865 = !DILocation(line: 3018, column: 17, scope: !9834)
!9866 = !DILocation(line: 3018, column: 23, scope: !9834)
!9867 = !DILocation(line: 3018, column: 31, scope: !9834)
!9868 = !DILocation(line: 3018, column: 40, scope: !9834)
!9869 = !DILocation(line: 3018, column: 2, scope: !9834)
!9870 = !DILocation(line: 3019, column: 1, scope: !9834)
!9871 = distinct !DISubprogram(name: "spi_replace_transfers", scope: !3, file: !3, line: 3080, type: !9872, scopeLine: 3088, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!9872 = !DISubroutineType(types: !9873)
!9873 = !{!9874, !4594, !4616, !385, !385, !9878, !385, !226}
!9874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9875, size: 64)
!9875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "spi_replaced_transfers", file: !4514, line: 1202, size: 384, elements: !9876)
!9876 = !{!9877, !9882, !9883, !9884, !9885, !9886}
!9877 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !9875, file: !4514, line: 1203, baseType: !9878, size: 64)
!9878 = !DIDerivedType(tag: DW_TAG_typedef, name: "spi_replaced_release_t", file: !4514, line: 1180, baseType: !9879)
!9879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9880, size: 64)
!9880 = !DISubroutineType(types: !9881)
!9881 = !{null, !4512, !4594, !9874}
!9882 = !DIDerivedType(tag: DW_TAG_member, name: "extradata", scope: !9875, file: !4514, line: 1204, baseType: !228, size: 64, offset: 64)
!9883 = !DIDerivedType(tag: DW_TAG_member, name: "replaced_transfers", scope: !9875, file: !4514, line: 1205, baseType: !284, size: 128, offset: 128)
!9884 = !DIDerivedType(tag: DW_TAG_member, name: "replaced_after", scope: !9875, file: !4514, line: 1206, baseType: !287, size: 64, offset: 256)
!9885 = !DIDerivedType(tag: DW_TAG_member, name: "inserted", scope: !9875, file: !4514, line: 1207, baseType: !385, size: 64, offset: 320)
!9886 = !DIDerivedType(tag: DW_TAG_member, name: "inserted_transfers", scope: !9875, file: !4514, line: 1208, baseType: !9887, offset: 384)
!9887 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4617, elements: !2469)
!9888 = !DILocalVariable(name: "msg", arg: 1, scope: !9871, file: !3, line: 3081, type: !4594)
!9889 = !DILocation(line: 3081, column: 22, scope: !9871)
!9890 = !DILocalVariable(name: "xfer_first", arg: 2, scope: !9871, file: !3, line: 3082, type: !4616)
!9891 = !DILocation(line: 3082, column: 23, scope: !9871)
!9892 = !DILocalVariable(name: "remove", arg: 3, scope: !9871, file: !3, line: 3083, type: !385)
!9893 = !DILocation(line: 3083, column: 9, scope: !9871)
!9894 = !DILocalVariable(name: "insert", arg: 4, scope: !9871, file: !3, line: 3084, type: !385)
!9895 = !DILocation(line: 3084, column: 9, scope: !9871)
!9896 = !DILocalVariable(name: "release", arg: 5, scope: !9871, file: !3, line: 3085, type: !9878)
!9897 = !DILocation(line: 3085, column: 25, scope: !9871)
!9898 = !DILocalVariable(name: "extradatasize", arg: 6, scope: !9871, file: !3, line: 3086, type: !385)
!9899 = !DILocation(line: 3086, column: 9, scope: !9871)
!9900 = !DILocalVariable(name: "gfp", arg: 7, scope: !9871, file: !3, line: 3087, type: !226)
!9901 = !DILocation(line: 3087, column: 8, scope: !9871)
!9902 = !DILocalVariable(name: "rxfer", scope: !9871, file: !3, line: 3089, type: !9874)
!9903 = !DILocation(line: 3089, column: 33, scope: !9871)
!9904 = !DILocalVariable(name: "xfer", scope: !9871, file: !3, line: 3090, type: !4616)
!9905 = !DILocation(line: 3090, column: 23, scope: !9871)
!9906 = !DILocalVariable(name: "i", scope: !9871, file: !3, line: 3091, type: !385)
!9907 = !DILocation(line: 3091, column: 9, scope: !9871)
!9908 = !DILocation(line: 3094, column: 24, scope: !9871)
!9909 = !DILocation(line: 3094, column: 29, scope: !9871)
!9910 = !DILocation(line: 3095, column: 10, scope: !9871)
!9911 = !DILocation(line: 3096, column: 12, scope: !9871)
!9912 = !DILocation(line: 3096, column: 10, scope: !9871)
!9913 = !DILocation(line: 3097, column: 10, scope: !9871)
!9914 = !DILocation(line: 3094, column: 10, scope: !9871)
!9915 = !DILocation(line: 3094, column: 8, scope: !9871)
!9916 = !DILocation(line: 3098, column: 7, scope: !9917)
!9917 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 3098, column: 6)
!9918 = !DILocation(line: 3098, column: 6, scope: !9871)
!9919 = !DILocation(line: 3099, column: 10, scope: !9917)
!9920 = !DILocation(line: 3099, column: 3, scope: !9917)
!9921 = !DILocation(line: 3102, column: 19, scope: !9871)
!9922 = !DILocation(line: 3102, column: 2, scope: !9871)
!9923 = !DILocation(line: 3102, column: 9, scope: !9871)
!9924 = !DILocation(line: 3102, column: 17, scope: !9871)
!9925 = !DILocation(line: 3105, column: 6, scope: !9926)
!9926 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 3105, column: 6)
!9927 = !DILocation(line: 3105, column: 6, scope: !9871)
!9928 = !DILocation(line: 3107, column: 5, scope: !9926)
!9929 = !DILocation(line: 3107, column: 12, scope: !9926)
!9930 = !DILocation(line: 3107, column: 31, scope: !9926)
!9931 = !DILocation(line: 3107, column: 4, scope: !9926)
!9932 = !DILocation(line: 3106, column: 3, scope: !9926)
!9933 = !DILocation(line: 3106, column: 10, scope: !9926)
!9934 = !DILocation(line: 3106, column: 20, scope: !9926)
!9935 = !DILocation(line: 3110, column: 18, scope: !9871)
!9936 = !DILocation(line: 3110, column: 25, scope: !9871)
!9937 = !DILocation(line: 3110, column: 2, scope: !9871)
!9938 = !DILocation(line: 3115, column: 26, scope: !9871)
!9939 = !DILocation(line: 3115, column: 38, scope: !9871)
!9940 = !DILocation(line: 3115, column: 52, scope: !9871)
!9941 = !DILocation(line: 3115, column: 2, scope: !9871)
!9942 = !DILocation(line: 3115, column: 9, scope: !9871)
!9943 = !DILocation(line: 3115, column: 24, scope: !9871)
!9944 = !DILocation(line: 3118, column: 9, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 3118, column: 2)
!9946 = !DILocation(line: 3118, column: 7, scope: !9945)
!9947 = !DILocation(line: 3118, column: 14, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 3118, column: 2)
!9949 = !DILocation(line: 3118, column: 18, scope: !9948)
!9950 = !DILocation(line: 3118, column: 16, scope: !9948)
!9951 = !DILocation(line: 3118, column: 2, scope: !9945)
!9952 = !DILocation(line: 3123, column: 7, scope: !9953)
!9953 = distinct !DILexicalBlock(scope: !9954, file: !3, line: 3123, column: 7)
!9954 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 3118, column: 31)
!9955 = !DILocation(line: 3123, column: 14, scope: !9953)
!9956 = !DILocation(line: 3123, column: 30, scope: !9953)
!9957 = !DILocation(line: 3123, column: 39, scope: !9953)
!9958 = !DILocation(line: 3123, column: 44, scope: !9953)
!9959 = !DILocation(line: 3123, column: 35, scope: !9953)
!9960 = !DILocation(line: 3123, column: 7, scope: !9954)
!9961 = !DILocation(line: 3124, column: 4, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 3123, column: 55)
!9963 = !DILocation(line: 3127, column: 17, scope: !9962)
!9964 = !DILocation(line: 3127, column: 24, scope: !9962)
!9965 = !DILocation(line: 3128, column: 9, scope: !9962)
!9966 = !DILocation(line: 3128, column: 16, scope: !9962)
!9967 = !DILocation(line: 3127, column: 4, scope: !9962)
!9968 = !DILocation(line: 3131, column: 17, scope: !9962)
!9969 = !DILocation(line: 3131, column: 4, scope: !9962)
!9970 = !DILocation(line: 3134, column: 11, scope: !9962)
!9971 = !DILocation(line: 3134, column: 4, scope: !9962)
!9972 = !DILocation(line: 3140, column: 18, scope: !9954)
!9973 = !DILocation(line: 3140, column: 25, scope: !9954)
!9974 = !DILocation(line: 3140, column: 41, scope: !9954)
!9975 = !DILocation(line: 3141, column: 12, scope: !9954)
!9976 = !DILocation(line: 3141, column: 19, scope: !9954)
!9977 = !DILocation(line: 3140, column: 3, scope: !9954)
!9978 = !DILocation(line: 3142, column: 2, scope: !9954)
!9979 = !DILocation(line: 3118, column: 27, scope: !9948)
!9980 = !DILocation(line: 3118, column: 2, scope: !9948)
!9981 = distinct !{!9981, !9951, !9982}
!9982 = !DILocation(line: 3142, column: 2, scope: !9945)
!9983 = !DILocation(line: 3147, column: 9, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 3147, column: 2)
!9985 = !DILocation(line: 3147, column: 7, scope: !9984)
!9986 = !DILocation(line: 3147, column: 14, scope: !9987)
!9987 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 3147, column: 2)
!9988 = !DILocation(line: 3147, column: 18, scope: !9987)
!9989 = !DILocation(line: 3147, column: 16, scope: !9987)
!9990 = !DILocation(line: 3147, column: 2, scope: !9984)
!9991 = !DILocation(line: 3149, column: 11, scope: !9992)
!9992 = distinct !DILexicalBlock(scope: !9987, file: !3, line: 3147, column: 31)
!9993 = !DILocation(line: 3149, column: 18, scope: !9992)
!9994 = !DILocation(line: 3149, column: 37, scope: !9992)
!9995 = !DILocation(line: 3149, column: 44, scope: !9992)
!9996 = !DILocation(line: 3149, column: 50, scope: !9992)
!9997 = !DILocation(line: 3149, column: 48, scope: !9992)
!9998 = !DILocation(line: 3149, column: 8, scope: !9992)
!9999 = !DILocation(line: 3152, column: 10, scope: !9992)
!10000 = !DILocation(line: 3152, column: 3, scope: !9992)
!10001 = !DILocation(line: 3152, column: 16, scope: !9992)
!10002 = !DILocation(line: 3155, column: 13, scope: !9992)
!10003 = !DILocation(line: 3155, column: 19, scope: !9992)
!10004 = !DILocation(line: 3155, column: 34, scope: !9992)
!10005 = !DILocation(line: 3155, column: 41, scope: !9992)
!10006 = !DILocation(line: 3155, column: 3, scope: !9992)
!10007 = !DILocation(line: 3158, column: 7, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !9992, file: !3, line: 3158, column: 7)
!10009 = !DILocation(line: 3158, column: 7, scope: !9992)
!10010 = !DILocation(line: 3159, column: 4, scope: !10011)
!10011 = distinct !DILexicalBlock(scope: !10008, file: !3, line: 3158, column: 10)
!10012 = !DILocation(line: 3159, column: 10, scope: !10011)
!10013 = !DILocation(line: 3159, column: 20, scope: !10011)
!10014 = !DILocation(line: 3160, column: 4, scope: !10011)
!10015 = !DILocation(line: 3160, column: 10, scope: !10011)
!10016 = !DILocation(line: 3160, column: 22, scope: !10011)
!10017 = !DILocation(line: 3161, column: 4, scope: !10011)
!10018 = !DILocation(line: 3161, column: 10, scope: !10011)
!10019 = !DILocation(line: 3161, column: 16, scope: !10011)
!10020 = !DILocation(line: 3161, column: 22, scope: !10011)
!10021 = !DILocation(line: 3162, column: 3, scope: !10011)
!10022 = !DILocation(line: 3163, column: 2, scope: !9992)
!10023 = !DILocation(line: 3147, column: 27, scope: !9987)
!10024 = !DILocation(line: 3147, column: 2, scope: !9987)
!10025 = distinct !{!10025, !9990, !10026}
!10026 = !DILocation(line: 3163, column: 2, scope: !9984)
!10027 = !DILocation(line: 3166, column: 20, scope: !9871)
!10028 = !DILocation(line: 3166, column: 2, scope: !9871)
!10029 = !DILocation(line: 3166, column: 9, scope: !9871)
!10030 = !DILocation(line: 3166, column: 18, scope: !9871)
!10031 = !DILocation(line: 3169, column: 14, scope: !9871)
!10032 = !DILocation(line: 3169, column: 19, scope: !9871)
!10033 = !DILocation(line: 3169, column: 2, scope: !9871)
!10034 = !DILocation(line: 3171, column: 9, scope: !9871)
!10035 = !DILocation(line: 3171, column: 2, scope: !9871)
!10036 = !DILocation(line: 3172, column: 1, scope: !9871)
!10037 = distinct !DISubprogram(name: "__spi_replace_transfers_release", scope: !3, file: !3, line: 3046, type: !5172, scopeLine: 3049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10038 = !DILocalVariable(name: "ctlr", arg: 1, scope: !10037, file: !3, line: 3046, type: !4512)
!10039 = !DILocation(line: 3046, column: 68, scope: !10037)
!10040 = !DILocalVariable(name: "msg", arg: 2, scope: !10037, file: !3, line: 3047, type: !4594)
!10041 = !DILocation(line: 3047, column: 30, scope: !10037)
!10042 = !DILocalVariable(name: "res", arg: 3, scope: !10037, file: !3, line: 3048, type: !228)
!10043 = !DILocation(line: 3048, column: 16, scope: !10037)
!10044 = !DILocalVariable(name: "rxfer", scope: !10037, file: !3, line: 3050, type: !9874)
!10045 = !DILocation(line: 3050, column: 33, scope: !10037)
!10046 = !DILocation(line: 3050, column: 41, scope: !10037)
!10047 = !DILocalVariable(name: "i", scope: !10037, file: !3, line: 3051, type: !385)
!10048 = !DILocation(line: 3051, column: 9, scope: !10037)
!10049 = !DILocation(line: 3054, column: 6, scope: !10050)
!10050 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 3054, column: 6)
!10051 = !DILocation(line: 3054, column: 13, scope: !10050)
!10052 = !DILocation(line: 3054, column: 6, scope: !10037)
!10053 = !DILocation(line: 3055, column: 3, scope: !10050)
!10054 = !DILocation(line: 3055, column: 10, scope: !10050)
!10055 = !DILocation(line: 3055, column: 18, scope: !10050)
!10056 = !DILocation(line: 3055, column: 24, scope: !10050)
!10057 = !DILocation(line: 3055, column: 29, scope: !10050)
!10058 = !DILocation(line: 3058, column: 15, scope: !10037)
!10059 = !DILocation(line: 3058, column: 22, scope: !10037)
!10060 = !DILocation(line: 3058, column: 42, scope: !10037)
!10061 = !DILocation(line: 3058, column: 49, scope: !10037)
!10062 = !DILocation(line: 3058, column: 2, scope: !10037)
!10063 = !DILocation(line: 3061, column: 9, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10037, file: !3, line: 3061, column: 2)
!10065 = !DILocation(line: 3061, column: 7, scope: !10064)
!10066 = !DILocation(line: 3061, column: 14, scope: !10067)
!10067 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 3061, column: 2)
!10068 = !DILocation(line: 3061, column: 18, scope: !10067)
!10069 = !DILocation(line: 3061, column: 25, scope: !10067)
!10070 = !DILocation(line: 3061, column: 16, scope: !10067)
!10071 = !DILocation(line: 3061, column: 2, scope: !10064)
!10072 = !DILocation(line: 3062, column: 13, scope: !10067)
!10073 = !DILocation(line: 3062, column: 20, scope: !10067)
!10074 = !DILocation(line: 3062, column: 39, scope: !10067)
!10075 = !DILocation(line: 3062, column: 42, scope: !10067)
!10076 = !DILocation(line: 3062, column: 3, scope: !10067)
!10077 = !DILocation(line: 3061, column: 36, scope: !10067)
!10078 = !DILocation(line: 3061, column: 2, scope: !10067)
!10079 = distinct !{!10079, !10071, !10080}
!10080 = !DILocation(line: 3062, column: 55, scope: !10064)
!10081 = !DILocation(line: 3063, column: 1, scope: !10037)
!10082 = distinct !DISubprogram(name: "__ab_c_size", scope: !10083, file: !10083, line: 301, type: !10084, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10083 = !DIFile(filename: "./include/linux/overflow.h", directory: "/home/lizy2001/genbc/linux")
!10084 = !DISubroutineType(types: !10085)
!10085 = !{!385, !385, !385, !385}
!10086 = !DILocalVariable(name: "a", arg: 1, scope: !10082, file: !10083, line: 301, type: !385)
!10087 = !DILocation(line: 301, column: 54, scope: !10082)
!10088 = !DILocalVariable(name: "b", arg: 2, scope: !10082, file: !10083, line: 301, type: !385)
!10089 = !DILocation(line: 301, column: 64, scope: !10082)
!10090 = !DILocalVariable(name: "c", arg: 3, scope: !10082, file: !10083, line: 301, type: !385)
!10091 = !DILocation(line: 301, column: 74, scope: !10082)
!10092 = !DILocalVariable(name: "bytes", scope: !10082, file: !10083, line: 303, type: !385)
!10093 = !DILocation(line: 303, column: 9, scope: !10082)
!10094 = !DILocalVariable(name: "__a", scope: !10095, file: !10083, line: 305, type: !385)
!10095 = distinct !DILexicalBlock(scope: !10096, file: !10083, line: 305, column: 6)
!10096 = distinct !DILexicalBlock(scope: !10082, file: !10083, line: 305, column: 6)
!10097 = !DILocation(line: 305, column: 6, scope: !10095)
!10098 = !DILocalVariable(name: "__b", scope: !10095, file: !10083, line: 305, type: !385)
!10099 = !DILocalVariable(name: "__d", scope: !10095, file: !10083, line: 305, type: !4953)
!10100 = !DILocation(line: 305, column: 6, scope: !10096)
!10101 = !DILocation(line: 305, column: 6, scope: !10082)
!10102 = !DILocation(line: 306, column: 3, scope: !10096)
!10103 = !DILocalVariable(name: "__a", scope: !10104, file: !10083, line: 307, type: !385)
!10104 = distinct !DILexicalBlock(scope: !10105, file: !10083, line: 307, column: 6)
!10105 = distinct !DILexicalBlock(scope: !10082, file: !10083, line: 307, column: 6)
!10106 = !DILocation(line: 307, column: 6, scope: !10104)
!10107 = !DILocalVariable(name: "__b", scope: !10104, file: !10083, line: 307, type: !385)
!10108 = !DILocalVariable(name: "__d", scope: !10104, file: !10083, line: 307, type: !4953)
!10109 = !DILocation(line: 307, column: 6, scope: !10105)
!10110 = !DILocation(line: 307, column: 6, scope: !10082)
!10111 = !DILocation(line: 308, column: 3, scope: !10105)
!10112 = !DILocation(line: 310, column: 9, scope: !10082)
!10113 = !DILocation(line: 310, column: 2, scope: !10082)
!10114 = !DILocation(line: 311, column: 1, scope: !10082)
!10115 = distinct !DISubprogram(name: "ERR_PTR", scope: !6934, file: !6934, line: 24, type: !10116, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10116 = !DISubroutineType(types: !10117)
!10117 = !{!228, !373}
!10118 = !DILocalVariable(name: "error", arg: 1, scope: !10115, file: !6934, line: 24, type: !373)
!10119 = !DILocation(line: 24, column: 48, scope: !10115)
!10120 = !DILocation(line: 26, column: 18, scope: !10115)
!10121 = !DILocation(line: 26, column: 9, scope: !10115)
!10122 = !DILocation(line: 26, column: 2, scope: !10115)
!10123 = distinct !DISubprogram(name: "list_splice", scope: !6950, file: !6950, line: 452, type: !10124, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10124 = !DISubroutineType(types: !10125)
!10125 = !{null, !9823, !287}
!10126 = !DILocalVariable(name: "list", arg: 1, scope: !10123, file: !6950, line: 452, type: !9823)
!10127 = !DILocation(line: 452, column: 56, scope: !10123)
!10128 = !DILocalVariable(name: "head", arg: 2, scope: !10123, file: !6950, line: 453, type: !287)
!10129 = !DILocation(line: 453, column: 23, scope: !10123)
!10130 = !DILocation(line: 455, column: 18, scope: !10131)
!10131 = distinct !DILexicalBlock(scope: !10123, file: !6950, line: 455, column: 6)
!10132 = !DILocation(line: 455, column: 7, scope: !10131)
!10133 = !DILocation(line: 455, column: 6, scope: !10123)
!10134 = !DILocation(line: 456, column: 17, scope: !10131)
!10135 = !DILocation(line: 456, column: 23, scope: !10131)
!10136 = !DILocation(line: 456, column: 29, scope: !10131)
!10137 = !DILocation(line: 456, column: 35, scope: !10131)
!10138 = !DILocation(line: 456, column: 3, scope: !10131)
!10139 = !DILocation(line: 457, column: 1, scope: !10123)
!10140 = distinct !DISubprogram(name: "list_move_tail", scope: !6950, file: !6950, line: 224, type: !6951, scopeLine: 226, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10141 = !DILocalVariable(name: "list", arg: 1, scope: !10140, file: !6950, line: 224, type: !287)
!10142 = !DILocation(line: 224, column: 53, scope: !10140)
!10143 = !DILocalVariable(name: "head", arg: 2, scope: !10140, file: !6950, line: 225, type: !287)
!10144 = !DILocation(line: 225, column: 25, scope: !10140)
!10145 = !DILocation(line: 227, column: 19, scope: !10140)
!10146 = !DILocation(line: 227, column: 2, scope: !10140)
!10147 = !DILocation(line: 228, column: 16, scope: !10140)
!10148 = !DILocation(line: 228, column: 22, scope: !10140)
!10149 = !DILocation(line: 228, column: 2, scope: !10140)
!10150 = !DILocation(line: 229, column: 1, scope: !10140)
!10151 = distinct !DISubprogram(name: "list_add", scope: !6950, file: !6950, line: 84, type: !6951, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10152 = !DILocalVariable(name: "new", arg: 1, scope: !10151, file: !6950, line: 84, type: !287)
!10153 = !DILocation(line: 84, column: 47, scope: !10151)
!10154 = !DILocalVariable(name: "head", arg: 2, scope: !10151, file: !6950, line: 84, type: !287)
!10155 = !DILocation(line: 84, column: 70, scope: !10151)
!10156 = !DILocation(line: 86, column: 13, scope: !10151)
!10157 = !DILocation(line: 86, column: 18, scope: !10151)
!10158 = !DILocation(line: 86, column: 24, scope: !10151)
!10159 = !DILocation(line: 86, column: 30, scope: !10151)
!10160 = !DILocation(line: 86, column: 2, scope: !10151)
!10161 = !DILocation(line: 87, column: 1, scope: !10151)
!10162 = distinct !DISubprogram(name: "spi_split_transfers_maxsize", scope: !3, file: !3, line: 3251, type: !10163, scopeLine: 3255, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10163 = !DISubroutineType(types: !10164)
!10164 = !{!234, !4512, !4594, !385, !226}
!10165 = !DILocalVariable(name: "ctlr", arg: 1, scope: !10162, file: !3, line: 3251, type: !4512)
!10166 = !DILocation(line: 3251, column: 56, scope: !10162)
!10167 = !DILocalVariable(name: "msg", arg: 2, scope: !10162, file: !3, line: 3252, type: !4594)
!10168 = !DILocation(line: 3252, column: 25, scope: !10162)
!10169 = !DILocalVariable(name: "maxsize", arg: 3, scope: !10162, file: !3, line: 3253, type: !385)
!10170 = !DILocation(line: 3253, column: 12, scope: !10162)
!10171 = !DILocalVariable(name: "gfp", arg: 4, scope: !10162, file: !3, line: 3254, type: !226)
!10172 = !DILocation(line: 3254, column: 11, scope: !10162)
!10173 = !DILocalVariable(name: "xfer", scope: !10162, file: !3, line: 3256, type: !4616)
!10174 = !DILocation(line: 3256, column: 23, scope: !10162)
!10175 = !DILocalVariable(name: "ret", scope: !10162, file: !3, line: 3257, type: !234)
!10176 = !DILocation(line: 3257, column: 6, scope: !10162)
!10177 = !DILocalVariable(name: "__mptr", scope: !10178, file: !3, line: 3265, type: !228)
!10178 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 3265, column: 2)
!10179 = distinct !DILexicalBlock(scope: !10162, file: !3, line: 3265, column: 2)
!10180 = !DILocation(line: 3265, column: 2, scope: !10178)
!10181 = !DILocation(line: 3265, column: 2, scope: !10182)
!10182 = distinct !DILexicalBlock(scope: !10178, file: !3, line: 3265, column: 2)
!10183 = !DILocation(line: 3265, column: 2, scope: !10179)
!10184 = !DILocation(line: 3265, column: 2, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10179, file: !3, line: 3265, column: 2)
!10186 = !DILocation(line: 3266, column: 7, scope: !10187)
!10187 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 3266, column: 7)
!10188 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 3265, column: 60)
!10189 = !DILocation(line: 3266, column: 13, scope: !10187)
!10190 = !DILocation(line: 3266, column: 19, scope: !10187)
!10191 = !DILocation(line: 3266, column: 17, scope: !10187)
!10192 = !DILocation(line: 3266, column: 7, scope: !10188)
!10193 = !DILocation(line: 3267, column: 39, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10187, file: !3, line: 3266, column: 28)
!10195 = !DILocation(line: 3267, column: 45, scope: !10194)
!10196 = !DILocation(line: 3268, column: 11, scope: !10194)
!10197 = !DILocation(line: 3268, column: 20, scope: !10194)
!10198 = !DILocation(line: 3267, column: 10, scope: !10194)
!10199 = !DILocation(line: 3267, column: 8, scope: !10194)
!10200 = !DILocation(line: 3269, column: 8, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10194, file: !3, line: 3269, column: 8)
!10202 = !DILocation(line: 3269, column: 8, scope: !10194)
!10203 = !DILocation(line: 3270, column: 12, scope: !10201)
!10204 = !DILocation(line: 3270, column: 5, scope: !10201)
!10205 = !DILocation(line: 3271, column: 3, scope: !10194)
!10206 = !DILocation(line: 3272, column: 2, scope: !10188)
!10207 = !DILocalVariable(name: "__mptr", scope: !10208, file: !3, line: 3265, type: !228)
!10208 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 3265, column: 2)
!10209 = !DILocation(line: 3265, column: 2, scope: !10208)
!10210 = !DILocation(line: 3265, column: 2, scope: !10211)
!10211 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 3265, column: 2)
!10212 = distinct !{!10212, !10183, !10213}
!10213 = !DILocation(line: 3272, column: 2, scope: !10179)
!10214 = !DILocation(line: 3274, column: 2, scope: !10162)
!10215 = !DILocation(line: 3275, column: 1, scope: !10162)
!10216 = distinct !DISubprogram(name: "__spi_split_transfer_maxsize", scope: !3, file: !3, line: 3175, type: !10217, scopeLine: 3180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10217 = !DISubroutineType(types: !10218)
!10218 = !{!234, !4512, !4594, !10219, !385, !226}
!10219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4616, size: 64)
!10220 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !10221)
!10221 = distinct !DILocation(line: 3234, column: 2, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !10223, file: !3, line: 3234, column: 2)
!10223 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 3234, column: 2)
!10224 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 3234, column: 2)
!10225 = distinct !DILexicalBlock(scope: !10226, file: !3, line: 3234, column: 2)
!10226 = distinct !DILexicalBlock(scope: !10227, file: !3, line: 3234, column: 2)
!10227 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 3234, column: 2)
!10228 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !10229)
!10229 = distinct !DILocation(line: 3232, column: 2, scope: !10230)
!10230 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 3232, column: 2)
!10231 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !10229)
!10232 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !10233)
!10233 = distinct !DILocation(line: 3234, column: 2, scope: !10227)
!10234 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !10233)
!10235 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !10236)
!10236 = distinct !DILocation(line: 3232, column: 2, scope: !10237)
!10237 = distinct !DILexicalBlock(scope: !10238, file: !3, line: 3232, column: 2)
!10238 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 3232, column: 2)
!10239 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 3232, column: 2)
!10240 = distinct !DILexicalBlock(scope: !10241, file: !3, line: 3232, column: 2)
!10241 = distinct !DILexicalBlock(scope: !10230, file: !3, line: 3232, column: 2)
!10242 = !DILocalVariable(name: "ctlr", arg: 1, scope: !10216, file: !3, line: 3175, type: !4512)
!10243 = !DILocation(line: 3175, column: 64, scope: !10216)
!10244 = !DILocalVariable(name: "msg", arg: 2, scope: !10216, file: !3, line: 3176, type: !4594)
!10245 = !DILocation(line: 3176, column: 26, scope: !10216)
!10246 = !DILocalVariable(name: "xferp", arg: 3, scope: !10216, file: !3, line: 3177, type: !10219)
!10247 = !DILocation(line: 3177, column: 28, scope: !10216)
!10248 = !DILocalVariable(name: "maxsize", arg: 4, scope: !10216, file: !3, line: 3178, type: !385)
!10249 = !DILocation(line: 3178, column: 13, scope: !10216)
!10250 = !DILocalVariable(name: "gfp", arg: 5, scope: !10216, file: !3, line: 3179, type: !226)
!10251 = !DILocation(line: 3179, column: 12, scope: !10216)
!10252 = !DILocalVariable(name: "xfer", scope: !10216, file: !3, line: 3181, type: !4616)
!10253 = !DILocation(line: 3181, column: 23, scope: !10216)
!10254 = !DILocation(line: 3181, column: 31, scope: !10216)
!10255 = !DILocation(line: 3181, column: 30, scope: !10216)
!10256 = !DILocalVariable(name: "xfers", scope: !10216, file: !3, line: 3181, type: !4616)
!10257 = !DILocation(line: 3181, column: 39, scope: !10216)
!10258 = !DILocalVariable(name: "srt", scope: !10216, file: !3, line: 3182, type: !9874)
!10259 = !DILocation(line: 3182, column: 33, scope: !10216)
!10260 = !DILocalVariable(name: "offset", scope: !10216, file: !3, line: 3183, type: !385)
!10261 = !DILocation(line: 3183, column: 9, scope: !10216)
!10262 = !DILocalVariable(name: "count", scope: !10216, file: !3, line: 3184, type: !385)
!10263 = !DILocation(line: 3184, column: 9, scope: !10216)
!10264 = !DILocalVariable(name: "i", scope: !10216, file: !3, line: 3184, type: !385)
!10265 = !DILocation(line: 3184, column: 16, scope: !10216)
!10266 = !DILocation(line: 3187, column: 10, scope: !10216)
!10267 = !DILocation(line: 3187, column: 8, scope: !10216)
!10268 = !DILocation(line: 3190, column: 30, scope: !10216)
!10269 = !DILocation(line: 3190, column: 35, scope: !10216)
!10270 = !DILocation(line: 3190, column: 44, scope: !10216)
!10271 = !DILocation(line: 3190, column: 60, scope: !10216)
!10272 = !DILocation(line: 3190, column: 8, scope: !10216)
!10273 = !DILocation(line: 3190, column: 6, scope: !10216)
!10274 = !DILocation(line: 3191, column: 13, scope: !10275)
!10275 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 3191, column: 6)
!10276 = !DILocation(line: 3191, column: 6, scope: !10275)
!10277 = !DILocation(line: 3191, column: 6, scope: !10216)
!10278 = !DILocation(line: 3192, column: 18, scope: !10275)
!10279 = !DILocation(line: 3192, column: 10, scope: !10275)
!10280 = !DILocation(line: 3192, column: 3, scope: !10275)
!10281 = !DILocation(line: 3193, column: 10, scope: !10216)
!10282 = !DILocation(line: 3193, column: 15, scope: !10216)
!10283 = !DILocation(line: 3193, column: 8, scope: !10216)
!10284 = !DILocalVariable(name: "__UNIQUE_ID___x357", scope: !10285, file: !3, line: 3208, type: !385)
!10285 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 3208, column: 17)
!10286 = !DILocation(line: 3208, column: 17, scope: !10285)
!10287 = !DILocalVariable(name: "__UNIQUE_ID___y358", scope: !10285, file: !3, line: 3208, type: !385)
!10288 = !DILocation(line: 3208, column: 17, scope: !10216)
!10289 = !DILocation(line: 3208, column: 2, scope: !10216)
!10290 = !DILocation(line: 3208, column: 11, scope: !10216)
!10291 = !DILocation(line: 3208, column: 15, scope: !10216)
!10292 = !DILocation(line: 3211, column: 9, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 3211, column: 2)
!10294 = !DILocation(line: 3211, column: 23, scope: !10293)
!10295 = !DILocation(line: 3211, column: 21, scope: !10293)
!10296 = !DILocation(line: 3211, column: 7, scope: !10293)
!10297 = !DILocation(line: 3211, column: 32, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 3211, column: 2)
!10299 = !DILocation(line: 3211, column: 36, scope: !10298)
!10300 = !DILocation(line: 3211, column: 34, scope: !10298)
!10301 = !DILocation(line: 3211, column: 2, scope: !10293)
!10302 = !DILocation(line: 3213, column: 7, scope: !10303)
!10303 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3213, column: 7)
!10304 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 3211, column: 67)
!10305 = !DILocation(line: 3213, column: 13, scope: !10303)
!10306 = !DILocation(line: 3213, column: 16, scope: !10303)
!10307 = !DILocation(line: 3213, column: 7, scope: !10304)
!10308 = !DILocation(line: 3214, column: 23, scope: !10303)
!10309 = !DILocation(line: 3214, column: 4, scope: !10303)
!10310 = !DILocation(line: 3214, column: 10, scope: !10303)
!10311 = !DILocation(line: 3214, column: 13, scope: !10303)
!10312 = !DILocation(line: 3214, column: 20, scope: !10303)
!10313 = !DILocation(line: 3215, column: 7, scope: !10314)
!10314 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3215, column: 7)
!10315 = !DILocation(line: 3215, column: 13, scope: !10314)
!10316 = !DILocation(line: 3215, column: 16, scope: !10314)
!10317 = !DILocation(line: 3215, column: 7, scope: !10304)
!10318 = !DILocation(line: 3216, column: 23, scope: !10314)
!10319 = !DILocation(line: 3216, column: 4, scope: !10314)
!10320 = !DILocation(line: 3216, column: 10, scope: !10314)
!10321 = !DILocation(line: 3216, column: 13, scope: !10314)
!10322 = !DILocation(line: 3216, column: 20, scope: !10314)
!10323 = !DILocation(line: 3217, column: 7, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3217, column: 7)
!10325 = !DILocation(line: 3217, column: 13, scope: !10324)
!10326 = !DILocation(line: 3217, column: 16, scope: !10324)
!10327 = !DILocation(line: 3217, column: 7, scope: !10304)
!10328 = !DILocation(line: 3218, column: 23, scope: !10324)
!10329 = !DILocation(line: 3218, column: 4, scope: !10324)
!10330 = !DILocation(line: 3218, column: 10, scope: !10324)
!10331 = !DILocation(line: 3218, column: 13, scope: !10324)
!10332 = !DILocation(line: 3218, column: 20, scope: !10324)
!10333 = !DILocation(line: 3219, column: 7, scope: !10334)
!10334 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3219, column: 7)
!10335 = !DILocation(line: 3219, column: 13, scope: !10334)
!10336 = !DILocation(line: 3219, column: 16, scope: !10334)
!10337 = !DILocation(line: 3219, column: 7, scope: !10304)
!10338 = !DILocation(line: 3220, column: 23, scope: !10334)
!10339 = !DILocation(line: 3220, column: 4, scope: !10334)
!10340 = !DILocation(line: 3220, column: 10, scope: !10334)
!10341 = !DILocation(line: 3220, column: 13, scope: !10334)
!10342 = !DILocation(line: 3220, column: 20, scope: !10334)
!10343 = !DILocalVariable(name: "__UNIQUE_ID___x359", scope: !10344, file: !3, line: 3223, type: !385)
!10344 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 3223, column: 18)
!10345 = !DILocation(line: 3223, column: 18, scope: !10344)
!10346 = !DILocalVariable(name: "__UNIQUE_ID___y360", scope: !10344, file: !3, line: 3223, type: !388)
!10347 = !DILocation(line: 3223, column: 18, scope: !10304)
!10348 = !DILocation(line: 3223, column: 3, scope: !10304)
!10349 = !DILocation(line: 3223, column: 9, scope: !10304)
!10350 = !DILocation(line: 3223, column: 12, scope: !10304)
!10351 = !DILocation(line: 3223, column: 16, scope: !10304)
!10352 = !DILocation(line: 3224, column: 2, scope: !10304)
!10353 = !DILocation(line: 3211, column: 53, scope: !10298)
!10354 = !DILocation(line: 3211, column: 50, scope: !10298)
!10355 = !DILocation(line: 3211, column: 63, scope: !10298)
!10356 = !DILocation(line: 3211, column: 2, scope: !10298)
!10357 = distinct !{!10357, !10301, !10358}
!10358 = !DILocation(line: 3224, column: 2, scope: !10293)
!10359 = !DILocation(line: 3229, column: 12, scope: !10216)
!10360 = !DILocation(line: 3229, column: 18, scope: !10216)
!10361 = !DILocation(line: 3229, column: 24, scope: !10216)
!10362 = !DILocation(line: 3229, column: 3, scope: !10216)
!10363 = !DILocation(line: 3229, column: 9, scope: !10216)
!10364 = !DILocation(line: 3232, column: 2, scope: !10216)
!10365 = !DILocalVariable(name: "flags", scope: !10230, file: !3, line: 3232, type: !388)
!10366 = !DILocation(line: 3232, column: 2, scope: !10230)
!10367 = !DILocation(line: 3232, column: 2, scope: !10241)
!10368 = !DILocalVariable(name: "__dummy", scope: !10369, file: !3, line: 3232, type: !388)
!10369 = distinct !DILexicalBlock(scope: !10240, file: !3, line: 3232, column: 2)
!10370 = !DILocation(line: 3232, column: 2, scope: !10369)
!10371 = !DILocalVariable(name: "__dummy2", scope: !10369, file: !3, line: 3232, type: !388)
!10372 = !DILocation(line: 3232, column: 2, scope: !10240)
!10373 = !DILocation(line: 3232, column: 2, scope: !10239)
!10374 = !DILocation(line: 3232, column: 2, scope: !10375)
!10375 = distinct !DILexicalBlock(scope: !10239, file: !3, line: 3232, column: 2)
!10376 = !DILocalVariable(name: "__dummy", scope: !10377, file: !3, line: 3232, type: !388)
!10377 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 3232, column: 2)
!10378 = distinct !DILexicalBlock(scope: !10375, file: !3, line: 3232, column: 2)
!10379 = !DILocation(line: 3232, column: 2, scope: !10377)
!10380 = !DILocalVariable(name: "__dummy2", scope: !10377, file: !3, line: 3232, type: !388)
!10381 = !DILocation(line: 3232, column: 2, scope: !10378)
!10382 = !DILocation(line: 3232, column: 2, scope: !10238)
!10383 = !{i32 -2140417185}
!10384 = !DILocation(line: 3232, column: 2, scope: !10237)
!10385 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !10236)
!10386 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !10236)
!10387 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !10229)
!10388 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !10229)
!10389 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !10229)
!10390 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !10229)
!10391 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !10229)
!10392 = !DILocation(line: 3234, column: 2, scope: !10216)
!10393 = !DILocalVariable(name: "flags", scope: !10227, file: !3, line: 3234, type: !388)
!10394 = !DILocation(line: 3234, column: 2, scope: !10227)
!10395 = !DILocation(line: 3234, column: 2, scope: !10226)
!10396 = !DILocalVariable(name: "__dummy", scope: !10397, file: !3, line: 3234, type: !388)
!10397 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 3234, column: 2)
!10398 = !DILocation(line: 3234, column: 2, scope: !10397)
!10399 = !DILocalVariable(name: "__dummy2", scope: !10397, file: !3, line: 3234, type: !388)
!10400 = !DILocation(line: 3234, column: 2, scope: !10225)
!10401 = !DILocation(line: 3234, column: 2, scope: !10224)
!10402 = !DILocation(line: 3234, column: 2, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10224, file: !3, line: 3234, column: 2)
!10404 = !DILocalVariable(name: "__dummy", scope: !10405, file: !3, line: 3234, type: !388)
!10405 = distinct !DILexicalBlock(scope: !10406, file: !3, line: 3234, column: 2)
!10406 = distinct !DILexicalBlock(scope: !10403, file: !3, line: 3234, column: 2)
!10407 = !DILocation(line: 3234, column: 2, scope: !10405)
!10408 = !DILocalVariable(name: "__dummy2", scope: !10405, file: !3, line: 3234, type: !388)
!10409 = !DILocation(line: 3234, column: 2, scope: !10406)
!10410 = !DILocation(line: 3234, column: 2, scope: !10223)
!10411 = !{i32 -2140415662}
!10412 = !DILocation(line: 3234, column: 2, scope: !10222)
!10413 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !10221)
!10414 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !10221)
!10415 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !10233)
!10416 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !10233)
!10417 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !10233)
!10418 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !10233)
!10419 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !10233)
!10420 = !DILocation(line: 3237, column: 2, scope: !10216)
!10421 = !DILocation(line: 3238, column: 1, scope: !10216)
!10422 = distinct !DISubprogram(name: "gpio_is_valid", scope: !10423, file: !10423, line: 44, type: !10424, scopeLine: 45, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10423 = !DIFile(filename: "./include/asm-generic/gpio.h", directory: "/home/lizy2001/genbc/linux")
!10424 = !DISubroutineType(types: !10425)
!10425 = !{!261, !234}
!10426 = !DILocalVariable(name: "number", arg: 1, scope: !10422, file: !10423, line: 44, type: !234)
!10427 = !DILocation(line: 44, column: 38, scope: !10422)
!10428 = !DILocation(line: 46, column: 9, scope: !10422)
!10429 = !DILocation(line: 46, column: 16, scope: !10422)
!10430 = !DILocation(line: 46, column: 21, scope: !10422)
!10431 = !DILocation(line: 46, column: 24, scope: !10422)
!10432 = !DILocation(line: 46, column: 31, scope: !10422)
!10433 = !DILocation(line: 0, scope: !10422)
!10434 = !DILocation(line: 46, column: 2, scope: !10422)
!10435 = distinct !DISubprogram(name: "__spi_validate_bits_per_word", scope: !3, file: !3, line: 3284, type: !10436, scopeLine: 3286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10436 = !DISubroutineType(types: !10437)
!10437 = !{!234, !4512, !1493}
!10438 = !DILocalVariable(name: "ctlr", arg: 1, scope: !10435, file: !3, line: 3284, type: !4512)
!10439 = !DILocation(line: 3284, column: 64, scope: !10435)
!10440 = !DILocalVariable(name: "bits_per_word", arg: 2, scope: !10435, file: !3, line: 3285, type: !1493)
!10441 = !DILocation(line: 3285, column: 9, scope: !10435)
!10442 = !DILocation(line: 3287, column: 6, scope: !10443)
!10443 = distinct !DILexicalBlock(scope: !10435, file: !3, line: 3287, column: 6)
!10444 = !DILocation(line: 3287, column: 12, scope: !10443)
!10445 = !DILocation(line: 3287, column: 6, scope: !10435)
!10446 = !DILocation(line: 3289, column: 7, scope: !10447)
!10447 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3289, column: 7)
!10448 = distinct !DILexicalBlock(scope: !10443, file: !3, line: 3287, column: 32)
!10449 = !DILocation(line: 3289, column: 21, scope: !10447)
!10450 = !DILocation(line: 3289, column: 7, scope: !10448)
!10451 = !DILocation(line: 3290, column: 4, scope: !10447)
!10452 = !DILocation(line: 3291, column: 9, scope: !10453)
!10453 = distinct !DILexicalBlock(scope: !10448, file: !3, line: 3291, column: 7)
!10454 = !DILocation(line: 3291, column: 15, scope: !10453)
!10455 = !DILocation(line: 3291, column: 36, scope: !10453)
!10456 = !DILocation(line: 3291, column: 34, scope: !10453)
!10457 = !DILocation(line: 3291, column: 7, scope: !10448)
!10458 = !DILocation(line: 3292, column: 4, scope: !10453)
!10459 = !DILocation(line: 3293, column: 2, scope: !10448)
!10460 = !DILocation(line: 3295, column: 2, scope: !10435)
!10461 = !DILocation(line: 3296, column: 1, scope: !10435)
!10462 = distinct !DISubprogram(name: "pm_runtime_get_sync", scope: !8434, file: !8434, line: 384, type: !3538, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10463 = !DILocalVariable(name: "dev", arg: 1, scope: !10462, file: !8434, line: 384, type: !3506)
!10464 = !DILocation(line: 384, column: 54, scope: !10462)
!10465 = !DILocation(line: 386, column: 29, scope: !10462)
!10466 = !DILocation(line: 386, column: 9, scope: !10462)
!10467 = !DILocation(line: 386, column: 2, scope: !10462)
!10468 = distinct !DISubprogram(name: "pm_runtime_put_noidle", scope: !8434, file: !8434, line: 103, type: !3529, scopeLine: 104, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10469 = !DILocalVariable(name: "v", arg: 1, scope: !10470, file: !10471, line: 200, type: !10474)
!10470 = distinct !DISubprogram(name: "arch_atomic_try_cmpxchg", scope: !10471, file: !10471, line: 200, type: !10472, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10471 = !DIFile(filename: "./arch/x86/include/asm/atomic.h", directory: "/home/lizy2001/genbc/linux")
!10472 = !DISubroutineType(types: !10473)
!10473 = !{!261, !10474, !770, !234}
!10474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !861, size: 64)
!10475 = !DILocation(line: 200, column: 63, scope: !10470, inlinedAt: !10476)
!10476 = distinct !DILocation(line: 1093, column: 12, scope: !10477, inlinedAt: !10481)
!10477 = distinct !DISubprogram(name: "arch_atomic_fetch_add_unless", scope: !10478, file: !10478, line: 1086, type: !10479, scopeLine: 1087, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10478 = !DIFile(filename: "./include/linux/atomic-arch-fallback.h", directory: "/home/lizy2001/genbc/linux")
!10479 = !DISubroutineType(types: !10480)
!10480 = !{!234, !10474, !234, !234}
!10481 = distinct !DILocation(line: 1113, column: 9, scope: !10482, inlinedAt: !10485)
!10482 = distinct !DISubprogram(name: "arch_atomic_add_unless", scope: !10478, file: !10478, line: 1111, type: !10483, scopeLine: 1112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10483 = !DISubroutineType(types: !10484)
!10484 = !{!261, !10474, !234, !234}
!10485 = distinct !DILocation(line: 789, column: 9, scope: !10486, inlinedAt: !10488)
!10486 = distinct !DISubprogram(name: "atomic_add_unless", scope: !10487, file: !10487, line: 786, type: !10483, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10487 = !DIFile(filename: "./include/asm-generic/atomic-instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10488 = distinct !DILocation(line: 105, column: 2, scope: !10468)
!10489 = !DILocalVariable(name: "old", arg: 2, scope: !10470, file: !10471, line: 200, type: !770)
!10490 = !DILocation(line: 200, column: 71, scope: !10470, inlinedAt: !10476)
!10491 = !DILocalVariable(name: "new", arg: 3, scope: !10470, file: !10471, line: 200, type: !234)
!10492 = !DILocation(line: 200, column: 80, scope: !10470, inlinedAt: !10476)
!10493 = !DILocalVariable(name: "success", scope: !10494, file: !10471, line: 202, type: !261)
!10494 = distinct !DILexicalBlock(scope: !10470, file: !10471, line: 202, column: 9)
!10495 = !DILocation(line: 202, column: 9, scope: !10494, inlinedAt: !10476)
!10496 = !DILocalVariable(name: "_old", scope: !10494, file: !10471, line: 202, type: !770)
!10497 = !DILocalVariable(name: "__old", scope: !10494, file: !10471, line: 202, type: !234)
!10498 = !DILocalVariable(name: "__new", scope: !10494, file: !10471, line: 202, type: !234)
!10499 = !DILocalVariable(name: "__ptr", scope: !10494, file: !10471, line: 202, type: !5201)
!10500 = !DILocalVariable(name: "v", arg: 1, scope: !10501, file: !10471, line: 23, type: !10504)
!10501 = distinct !DISubprogram(name: "arch_atomic_read", scope: !10471, file: !10471, line: 23, type: !10502, scopeLine: 24, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10502 = !DISubroutineType(types: !10503)
!10503 = !{!234, !10504}
!10504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10505, size: 64)
!10505 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !861)
!10506 = !DILocation(line: 23, column: 61, scope: !10501, inlinedAt: !10507)
!10507 = distinct !DILocation(line: 1088, column: 10, scope: !10477, inlinedAt: !10481)
!10508 = !DILocalVariable(name: "v", arg: 1, scope: !10477, file: !10478, line: 1086, type: !10474)
!10509 = !DILocation(line: 1086, column: 40, scope: !10477, inlinedAt: !10481)
!10510 = !DILocalVariable(name: "a", arg: 2, scope: !10477, file: !10478, line: 1086, type: !234)
!10511 = !DILocation(line: 1086, column: 47, scope: !10477, inlinedAt: !10481)
!10512 = !DILocalVariable(name: "u", arg: 3, scope: !10477, file: !10478, line: 1086, type: !234)
!10513 = !DILocation(line: 1086, column: 54, scope: !10477, inlinedAt: !10481)
!10514 = !DILocalVariable(name: "c", scope: !10477, file: !10478, line: 1088, type: !234)
!10515 = !DILocation(line: 1088, column: 6, scope: !10477, inlinedAt: !10481)
!10516 = !DILocalVariable(name: "v", arg: 1, scope: !10482, file: !10478, line: 1111, type: !10474)
!10517 = !DILocation(line: 1111, column: 34, scope: !10482, inlinedAt: !10485)
!10518 = !DILocalVariable(name: "a", arg: 2, scope: !10482, file: !10478, line: 1111, type: !234)
!10519 = !DILocation(line: 1111, column: 41, scope: !10482, inlinedAt: !10485)
!10520 = !DILocalVariable(name: "u", arg: 3, scope: !10482, file: !10478, line: 1111, type: !234)
!10521 = !DILocation(line: 1111, column: 48, scope: !10482, inlinedAt: !10485)
!10522 = !DILocalVariable(name: "v", arg: 1, scope: !10523, file: !10524, line: 99, type: !10527)
!10523 = distinct !DISubprogram(name: "instrument_atomic_read_write", scope: !10524, file: !10524, line: 99, type: !10525, scopeLine: 100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10524 = !DIFile(filename: "./include/linux/instrumented.h", directory: "/home/lizy2001/genbc/linux")
!10525 = !DISubroutineType(types: !10526)
!10526 = !{null, !10527, !385}
!10527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10528, size: 64)
!10528 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10529)
!10529 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: null)
!10530 = !DILocation(line: 99, column: 79, scope: !10523, inlinedAt: !10531)
!10531 = distinct !DILocation(line: 788, column: 2, scope: !10486, inlinedAt: !10488)
!10532 = !DILocalVariable(name: "size", arg: 2, scope: !10523, file: !10524, line: 99, type: !385)
!10533 = !DILocation(line: 99, column: 89, scope: !10523, inlinedAt: !10531)
!10534 = !DILocalVariable(name: "v", arg: 1, scope: !10486, file: !10487, line: 786, type: !10474)
!10535 = !DILocation(line: 786, column: 29, scope: !10486, inlinedAt: !10488)
!10536 = !DILocalVariable(name: "a", arg: 2, scope: !10486, file: !10487, line: 786, type: !234)
!10537 = !DILocation(line: 786, column: 36, scope: !10486, inlinedAt: !10488)
!10538 = !DILocalVariable(name: "u", arg: 3, scope: !10486, file: !10487, line: 786, type: !234)
!10539 = !DILocation(line: 786, column: 43, scope: !10486, inlinedAt: !10488)
!10540 = !DILocalVariable(name: "dev", arg: 1, scope: !10468, file: !8434, line: 103, type: !3506)
!10541 = !DILocation(line: 103, column: 57, scope: !10468)
!10542 = !DILocation(line: 105, column: 21, scope: !10468)
!10543 = !DILocation(line: 105, column: 26, scope: !10468)
!10544 = !DILocation(line: 105, column: 32, scope: !10468)
!10545 = !DILocation(line: 788, column: 31, scope: !10486, inlinedAt: !10488)
!10546 = !DILocation(line: 101, column: 20, scope: !10523, inlinedAt: !10531)
!10547 = !DILocation(line: 101, column: 23, scope: !10523, inlinedAt: !10531)
!10548 = !DILocation(line: 101, column: 2, scope: !10523, inlinedAt: !10531)
!10549 = !DILocation(line: 102, column: 2, scope: !10523, inlinedAt: !10531)
!10550 = !DILocation(line: 789, column: 32, scope: !10486, inlinedAt: !10488)
!10551 = !DILocation(line: 789, column: 35, scope: !10486, inlinedAt: !10488)
!10552 = !DILocation(line: 789, column: 38, scope: !10486, inlinedAt: !10488)
!10553 = !DILocation(line: 1113, column: 38, scope: !10482, inlinedAt: !10485)
!10554 = !DILocation(line: 1113, column: 41, scope: !10482, inlinedAt: !10485)
!10555 = !DILocation(line: 1113, column: 44, scope: !10482, inlinedAt: !10485)
!10556 = !DILocation(line: 1088, column: 27, scope: !10477, inlinedAt: !10481)
!10557 = !DILocation(line: 29, column: 9, scope: !10501, inlinedAt: !10507)
!10558 = !DILocation(line: 1090, column: 2, scope: !10477, inlinedAt: !10481)
!10559 = !DILocation(line: 1091, column: 7, scope: !10560, inlinedAt: !10481)
!10560 = distinct !DILexicalBlock(scope: !10561, file: !10478, line: 1091, column: 7)
!10561 = distinct !DILexicalBlock(scope: !10477, file: !10478, line: 1090, column: 5)
!10562 = !DILocation(line: 1091, column: 7, scope: !10561, inlinedAt: !10481)
!10563 = !DILocation(line: 1092, column: 4, scope: !10560, inlinedAt: !10481)
!10564 = !DILocation(line: 1093, column: 36, scope: !10477, inlinedAt: !10481)
!10565 = !DILocation(line: 1093, column: 43, scope: !10477, inlinedAt: !10481)
!10566 = !DILocation(line: 1093, column: 47, scope: !10477, inlinedAt: !10481)
!10567 = !DILocation(line: 1093, column: 45, scope: !10477, inlinedAt: !10481)
!10568 = !{i32 -2146533217, i32 -2146533062}
!10569 = !DILocation(line: 202, column: 9, scope: !10570, inlinedAt: !10476)
!10570 = distinct !DILexicalBlock(scope: !10494, file: !10471, line: 202, column: 9)
!10571 = !DILocation(line: 202, column: 9, scope: !10470, inlinedAt: !10476)
!10572 = !DILocation(line: 1093, column: 11, scope: !10477, inlinedAt: !10481)
!10573 = !DILocation(line: 1093, column: 2, scope: !10561, inlinedAt: !10481)
!10574 = distinct !{!10574, !10558, !10575}
!10575 = !DILocation(line: 1093, column: 49, scope: !10477, inlinedAt: !10481)
!10576 = !DILocation(line: 1095, column: 9, scope: !10477, inlinedAt: !10481)
!10577 = !DILocation(line: 1113, column: 50, scope: !10482, inlinedAt: !10485)
!10578 = !DILocation(line: 1113, column: 47, scope: !10482, inlinedAt: !10485)
!10579 = !DILocation(line: 106, column: 1, scope: !10468)
!10580 = distinct !DISubprogram(name: "spi_set_cs", scope: !3, file: !3, line: 789, type: !4715, scopeLine: 790, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10581 = !DILocalVariable(name: "spi", arg: 1, scope: !10580, file: !3, line: 789, type: !4532)
!10582 = !DILocation(line: 789, column: 43, scope: !10580)
!10583 = !DILocalVariable(name: "enable", arg: 2, scope: !10580, file: !3, line: 789, type: !261)
!10584 = !DILocation(line: 789, column: 53, scope: !10580)
!10585 = !DILocalVariable(name: "enable1", scope: !10580, file: !3, line: 791, type: !261)
!10586 = !DILocation(line: 791, column: 7, scope: !10580)
!10587 = !DILocation(line: 791, column: 17, scope: !10580)
!10588 = !DILocation(line: 797, column: 7, scope: !10589)
!10589 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 797, column: 6)
!10590 = !DILocation(line: 797, column: 12, scope: !10589)
!10591 = !DILocation(line: 797, column: 24, scope: !10589)
!10592 = !DILocation(line: 797, column: 42, scope: !10589)
!10593 = !DILocation(line: 797, column: 39, scope: !10589)
!10594 = !DILocation(line: 797, column: 50, scope: !10589)
!10595 = !DILocation(line: 798, column: 7, scope: !10589)
!10596 = !DILocation(line: 798, column: 12, scope: !10589)
!10597 = !DILocation(line: 798, column: 24, scope: !10589)
!10598 = !DILocation(line: 798, column: 46, scope: !10589)
!10599 = !DILocation(line: 798, column: 51, scope: !10589)
!10600 = !DILocation(line: 798, column: 56, scope: !10589)
!10601 = !DILocation(line: 798, column: 42, scope: !10589)
!10602 = !DILocation(line: 797, column: 6, scope: !10580)
!10603 = !DILocation(line: 799, column: 3, scope: !10589)
!10604 = !DILocation(line: 801, column: 36, scope: !10580)
!10605 = !DILocation(line: 801, column: 2, scope: !10580)
!10606 = !DILocation(line: 801, column: 7, scope: !10580)
!10607 = !DILocation(line: 801, column: 19, scope: !10580)
!10608 = !DILocation(line: 801, column: 34, scope: !10580)
!10609 = !DILocation(line: 802, column: 39, scope: !10580)
!10610 = !DILocation(line: 802, column: 44, scope: !10580)
!10611 = !DILocation(line: 802, column: 49, scope: !10580)
!10612 = !DILocation(line: 802, column: 2, scope: !10580)
!10613 = !DILocation(line: 802, column: 7, scope: !10580)
!10614 = !DILocation(line: 802, column: 19, scope: !10580)
!10615 = !DILocation(line: 802, column: 37, scope: !10580)
!10616 = !DILocation(line: 804, column: 7, scope: !10617)
!10617 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 804, column: 6)
!10618 = !DILocation(line: 804, column: 12, scope: !10617)
!10619 = !DILocation(line: 804, column: 24, scope: !10617)
!10620 = !DILocation(line: 804, column: 6, scope: !10580)
!10621 = !DILocation(line: 805, column: 7, scope: !10622)
!10622 = distinct !DILexicalBlock(scope: !10623, file: !3, line: 805, column: 7)
!10623 = distinct !DILexicalBlock(scope: !10617, file: !3, line: 804, column: 39)
!10624 = !DILocation(line: 805, column: 7, scope: !10623)
!10625 = !DILocation(line: 806, column: 20, scope: !10622)
!10626 = !DILocation(line: 806, column: 25, scope: !10622)
!10627 = !DILocation(line: 806, column: 37, scope: !10622)
!10628 = !DILocation(line: 806, column: 4, scope: !10622)
!10629 = !DILocation(line: 808, column: 20, scope: !10622)
!10630 = !DILocation(line: 808, column: 25, scope: !10622)
!10631 = !DILocation(line: 808, column: 37, scope: !10622)
!10632 = !DILocation(line: 808, column: 4, scope: !10622)
!10633 = !DILocation(line: 809, column: 2, scope: !10623)
!10634 = !DILocation(line: 811, column: 6, scope: !10635)
!10635 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 811, column: 6)
!10636 = !DILocation(line: 811, column: 11, scope: !10635)
!10637 = !DILocation(line: 811, column: 16, scope: !10635)
!10638 = !DILocation(line: 811, column: 6, scope: !10580)
!10639 = !DILocation(line: 812, column: 13, scope: !10635)
!10640 = !DILocation(line: 812, column: 12, scope: !10635)
!10641 = !DILocation(line: 812, column: 10, scope: !10635)
!10642 = !DILocation(line: 812, column: 3, scope: !10635)
!10643 = !DILocation(line: 814, column: 6, scope: !10644)
!10644 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 814, column: 6)
!10645 = !DILocation(line: 814, column: 11, scope: !10644)
!10646 = !DILocation(line: 814, column: 20, scope: !10644)
!10647 = !DILocation(line: 814, column: 37, scope: !10644)
!10648 = !DILocation(line: 814, column: 42, scope: !10644)
!10649 = !DILocation(line: 814, column: 23, scope: !10644)
!10650 = !DILocation(line: 814, column: 6, scope: !10580)
!10651 = !DILocation(line: 815, column: 9, scope: !10652)
!10652 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 815, column: 7)
!10653 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 814, column: 52)
!10654 = !DILocation(line: 815, column: 14, scope: !10652)
!10655 = !DILocation(line: 815, column: 19, scope: !10652)
!10656 = !DILocation(line: 815, column: 7, scope: !10653)
!10657 = !DILocation(line: 816, column: 8, scope: !10658)
!10658 = distinct !DILexicalBlock(scope: !10659, file: !3, line: 816, column: 8)
!10659 = distinct !DILexicalBlock(scope: !10652, file: !3, line: 815, column: 33)
!10660 = !DILocation(line: 816, column: 13, scope: !10658)
!10661 = !DILocation(line: 816, column: 8, scope: !10659)
!10662 = !DILocation(line: 818, column: 30, scope: !10658)
!10663 = !DILocation(line: 818, column: 35, scope: !10658)
!10664 = !DILocation(line: 819, column: 9, scope: !10658)
!10665 = !DILocation(line: 818, column: 5, scope: !10658)
!10666 = !DILocation(line: 825, column: 29, scope: !10658)
!10667 = !DILocation(line: 825, column: 34, scope: !10658)
!10668 = !DILocation(line: 825, column: 44, scope: !10658)
!10669 = !DILocation(line: 825, column: 43, scope: !10658)
!10670 = !DILocation(line: 825, column: 5, scope: !10658)
!10671 = !DILocation(line: 826, column: 3, scope: !10659)
!10672 = !DILocation(line: 828, column: 8, scope: !10673)
!10673 = distinct !DILexicalBlock(scope: !10653, file: !3, line: 828, column: 7)
!10674 = !DILocation(line: 828, column: 13, scope: !10673)
!10675 = !DILocation(line: 828, column: 25, scope: !10673)
!10676 = !DILocation(line: 828, column: 31, scope: !10673)
!10677 = !DILocation(line: 828, column: 53, scope: !10673)
!10678 = !DILocation(line: 829, column: 7, scope: !10673)
!10679 = !DILocation(line: 829, column: 12, scope: !10673)
!10680 = !DILocation(line: 829, column: 24, scope: !10673)
!10681 = !DILocation(line: 828, column: 7, scope: !10653)
!10682 = !DILocation(line: 830, column: 4, scope: !10673)
!10683 = !DILocation(line: 830, column: 9, scope: !10673)
!10684 = !DILocation(line: 830, column: 21, scope: !10673)
!10685 = !DILocation(line: 830, column: 28, scope: !10673)
!10686 = !DILocation(line: 830, column: 34, scope: !10673)
!10687 = !DILocation(line: 830, column: 33, scope: !10673)
!10688 = !DILocation(line: 831, column: 2, scope: !10653)
!10689 = !DILocation(line: 831, column: 13, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10644, file: !3, line: 831, column: 13)
!10691 = !DILocation(line: 831, column: 18, scope: !10690)
!10692 = !DILocation(line: 831, column: 30, scope: !10690)
!10693 = !DILocation(line: 831, column: 13, scope: !10644)
!10694 = !DILocation(line: 832, column: 3, scope: !10695)
!10695 = distinct !DILexicalBlock(scope: !10690, file: !3, line: 831, column: 38)
!10696 = !DILocation(line: 832, column: 8, scope: !10695)
!10697 = !DILocation(line: 832, column: 20, scope: !10695)
!10698 = !DILocation(line: 832, column: 27, scope: !10695)
!10699 = !DILocation(line: 832, column: 33, scope: !10695)
!10700 = !DILocation(line: 832, column: 32, scope: !10695)
!10701 = !DILocation(line: 833, column: 2, scope: !10695)
!10702 = !DILocation(line: 835, column: 7, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10580, file: !3, line: 835, column: 6)
!10704 = !DILocation(line: 835, column: 12, scope: !10703)
!10705 = !DILocation(line: 835, column: 24, scope: !10703)
!10706 = !DILocation(line: 835, column: 6, scope: !10580)
!10707 = !DILocation(line: 836, column: 8, scope: !10708)
!10708 = distinct !DILexicalBlock(scope: !10709, file: !3, line: 836, column: 7)
!10709 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 835, column: 39)
!10710 = !DILocation(line: 836, column: 7, scope: !10709)
!10711 = !DILocation(line: 837, column: 20, scope: !10708)
!10712 = !DILocation(line: 837, column: 25, scope: !10708)
!10713 = !DILocation(line: 837, column: 37, scope: !10708)
!10714 = !DILocation(line: 837, column: 4, scope: !10708)
!10715 = !DILocation(line: 838, column: 2, scope: !10709)
!10716 = !DILocation(line: 839, column: 1, scope: !10580)
!10717 = distinct !DISubprogram(name: "pm_runtime_mark_last_busy", scope: !8434, file: !8434, line: 194, type: !3529, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10718 = !DILocalVariable(name: "dev", arg: 1, scope: !10717, file: !8434, line: 194, type: !3506)
!10719 = !DILocation(line: 194, column: 61, scope: !10717)
!10720 = !DILocation(line: 196, column: 2, scope: !10717)
!10721 = !DILocation(line: 196, column: 2, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10717, file: !8434, line: 196, column: 2)
!10723 = !DILocation(line: 196, column: 2, scope: !10724)
!10724 = distinct !DILexicalBlock(scope: !10722, file: !8434, line: 196, column: 2)
!10725 = !DILocation(line: 196, column: 2, scope: !10726)
!10726 = distinct !DILexicalBlock(scope: !10722, file: !8434, line: 196, column: 2)
!10727 = !DILocation(line: 197, column: 1, scope: !10717)
!10728 = distinct !DISubprogram(name: "pm_runtime_put_autosuspend", scope: !8434, file: !8434, line: 429, type: !3538, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10729 = !DILocalVariable(name: "dev", arg: 1, scope: !10728, file: !8434, line: 429, type: !3506)
!10730 = !DILocation(line: 429, column: 61, scope: !10728)
!10731 = !DILocation(line: 431, column: 30, scope: !10728)
!10732 = !DILocation(line: 431, column: 9, scope: !10728)
!10733 = !DILocation(line: 431, column: 2, scope: !10728)
!10734 = distinct !DISubprogram(name: "spi_set_thread_rt", scope: !3, file: !3, line: 1635, type: !6210, scopeLine: 1636, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10735 = !DILocalVariable(name: "ctlr", arg: 1, scope: !10734, file: !3, line: 1635, type: !4512)
!10736 = !DILocation(line: 1635, column: 54, scope: !10734)
!10737 = !DILocation(line: 1637, column: 2, scope: !10734)
!10738 = !DILocation(line: 1639, column: 17, scope: !10734)
!10739 = !DILocation(line: 1639, column: 23, scope: !10734)
!10740 = !DILocation(line: 1639, column: 32, scope: !10734)
!10741 = !DILocation(line: 1639, column: 2, scope: !10734)
!10742 = !DILocation(line: 1640, column: 1, scope: !10734)
!10743 = distinct !DISubprogram(name: "spi_set_cs_timing", scope: !3, file: !3, line: 3434, type: !4587, scopeLine: 3436, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10744 = !DILocalVariable(name: "spi", arg: 1, scope: !10743, file: !3, line: 3434, type: !4532)
!10745 = !DILocation(line: 3434, column: 42, scope: !10743)
!10746 = !DILocalVariable(name: "setup", arg: 2, scope: !10743, file: !3, line: 3434, type: !4589)
!10747 = !DILocation(line: 3434, column: 65, scope: !10743)
!10748 = !DILocalVariable(name: "hold", arg: 3, scope: !10743, file: !3, line: 3435, type: !4589)
!10749 = !DILocation(line: 3435, column: 27, scope: !10743)
!10750 = !DILocalVariable(name: "inactive", arg: 4, scope: !10743, file: !3, line: 3435, type: !4589)
!10751 = !DILocation(line: 3435, column: 51, scope: !10743)
!10752 = !DILocalVariable(name: "len", scope: !10743, file: !3, line: 3437, type: !385)
!10753 = !DILocation(line: 3437, column: 9, scope: !10743)
!10754 = !DILocation(line: 3439, column: 6, scope: !10755)
!10755 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 3439, column: 6)
!10756 = !DILocation(line: 3439, column: 11, scope: !10755)
!10757 = !DILocation(line: 3439, column: 23, scope: !10755)
!10758 = !DILocation(line: 3439, column: 6, scope: !10743)
!10759 = !DILocation(line: 3440, column: 10, scope: !10755)
!10760 = !DILocation(line: 3440, column: 15, scope: !10755)
!10761 = !DILocation(line: 3440, column: 27, scope: !10755)
!10762 = !DILocation(line: 3440, column: 41, scope: !10755)
!10763 = !DILocation(line: 3440, column: 46, scope: !10755)
!10764 = !DILocation(line: 3440, column: 53, scope: !10755)
!10765 = !DILocation(line: 3441, column: 13, scope: !10755)
!10766 = !DILocation(line: 3440, column: 3, scope: !10755)
!10767 = !DILocation(line: 3443, column: 7, scope: !10768)
!10768 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 3443, column: 6)
!10769 = !DILocation(line: 3443, column: 13, scope: !10768)
!10770 = !DILocation(line: 3443, column: 16, scope: !10768)
!10771 = !DILocation(line: 3443, column: 23, scope: !10768)
!10772 = !DILocation(line: 3443, column: 28, scope: !10768)
!10773 = !DILocation(line: 3443, column: 51, scope: !10768)
!10774 = !DILocation(line: 3444, column: 7, scope: !10768)
!10775 = !DILocation(line: 3444, column: 12, scope: !10768)
!10776 = !DILocation(line: 3444, column: 15, scope: !10768)
!10777 = !DILocation(line: 3444, column: 21, scope: !10768)
!10778 = !DILocation(line: 3444, column: 26, scope: !10768)
!10779 = !DILocation(line: 3444, column: 49, scope: !10768)
!10780 = !DILocation(line: 3445, column: 7, scope: !10768)
!10781 = !DILocation(line: 3445, column: 16, scope: !10768)
!10782 = !DILocation(line: 3445, column: 19, scope: !10768)
!10783 = !DILocation(line: 3445, column: 29, scope: !10768)
!10784 = !DILocation(line: 3445, column: 34, scope: !10768)
!10785 = !DILocation(line: 3443, column: 6, scope: !10743)
!10786 = !DILocation(line: 3446, column: 3, scope: !10787)
!10787 = distinct !DILexicalBlock(scope: !10768, file: !3, line: 3445, column: 58)
!10788 = !DILocation(line: 3448, column: 3, scope: !10787)
!10789 = !DILocation(line: 3451, column: 6, scope: !10743)
!10790 = !DILocation(line: 3454, column: 6, scope: !10791)
!10791 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 3454, column: 6)
!10792 = !DILocation(line: 3454, column: 6, scope: !10743)
!10793 = !DILocation(line: 3455, column: 11, scope: !10791)
!10794 = !DILocation(line: 3455, column: 16, scope: !10791)
!10795 = !DILocation(line: 3455, column: 28, scope: !10791)
!10796 = !DILocation(line: 3455, column: 3, scope: !10791)
!10797 = !DILocation(line: 3455, column: 38, scope: !10791)
!10798 = !DILocation(line: 3455, column: 45, scope: !10791)
!10799 = !DILocation(line: 3457, column: 11, scope: !10791)
!10800 = !DILocation(line: 3457, column: 16, scope: !10791)
!10801 = !DILocation(line: 3457, column: 28, scope: !10791)
!10802 = !DILocation(line: 3457, column: 3, scope: !10791)
!10803 = !DILocation(line: 3457, column: 41, scope: !10791)
!10804 = !DILocation(line: 3459, column: 6, scope: !10805)
!10805 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 3459, column: 6)
!10806 = !DILocation(line: 3459, column: 6, scope: !10743)
!10807 = !DILocation(line: 3460, column: 11, scope: !10805)
!10808 = !DILocation(line: 3460, column: 16, scope: !10805)
!10809 = !DILocation(line: 3460, column: 28, scope: !10805)
!10810 = !DILocation(line: 3460, column: 3, scope: !10805)
!10811 = !DILocation(line: 3460, column: 37, scope: !10805)
!10812 = !DILocation(line: 3460, column: 43, scope: !10805)
!10813 = !DILocation(line: 3462, column: 11, scope: !10805)
!10814 = !DILocation(line: 3462, column: 16, scope: !10805)
!10815 = !DILocation(line: 3462, column: 28, scope: !10805)
!10816 = !DILocation(line: 3462, column: 3, scope: !10805)
!10817 = !DILocation(line: 3462, column: 40, scope: !10805)
!10818 = !DILocation(line: 3464, column: 6, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 3464, column: 6)
!10820 = !DILocation(line: 3464, column: 6, scope: !10743)
!10821 = !DILocation(line: 3465, column: 11, scope: !10819)
!10822 = !DILocation(line: 3465, column: 16, scope: !10819)
!10823 = !DILocation(line: 3465, column: 28, scope: !10819)
!10824 = !DILocation(line: 3465, column: 3, scope: !10819)
!10825 = !DILocation(line: 3465, column: 41, scope: !10819)
!10826 = !DILocation(line: 3465, column: 51, scope: !10819)
!10827 = !DILocation(line: 3467, column: 11, scope: !10819)
!10828 = !DILocation(line: 3467, column: 16, scope: !10819)
!10829 = !DILocation(line: 3467, column: 28, scope: !10819)
!10830 = !DILocation(line: 3467, column: 3, scope: !10819)
!10831 = !DILocation(line: 3467, column: 44, scope: !10819)
!10832 = !DILocation(line: 3469, column: 2, scope: !10743)
!10833 = !DILocation(line: 3470, column: 1, scope: !10743)
!10834 = distinct !DISubprogram(name: "spi_async", scope: !3, file: !3, line: 3697, type: !4592, scopeLine: 3698, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10835 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !10836)
!10836 = distinct !DILocation(line: 3714, column: 2, scope: !10834)
!10837 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !10836)
!10838 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !10839)
!10839 = distinct !DILocation(line: 3707, column: 2, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10841, file: !3, line: 3707, column: 2)
!10841 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3707, column: 2)
!10842 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 3707, column: 2)
!10843 = distinct !DILexicalBlock(scope: !10844, file: !3, line: 3707, column: 2)
!10844 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 3707, column: 2)
!10845 = !DILocalVariable(name: "spi", arg: 1, scope: !10834, file: !3, line: 3697, type: !4532)
!10846 = !DILocation(line: 3697, column: 34, scope: !10834)
!10847 = !DILocalVariable(name: "message", arg: 2, scope: !10834, file: !3, line: 3697, type: !4594)
!10848 = !DILocation(line: 3697, column: 59, scope: !10834)
!10849 = !DILocalVariable(name: "ctlr", scope: !10834, file: !3, line: 3699, type: !4512)
!10850 = !DILocation(line: 3699, column: 25, scope: !10834)
!10851 = !DILocation(line: 3699, column: 32, scope: !10834)
!10852 = !DILocation(line: 3699, column: 37, scope: !10834)
!10853 = !DILocalVariable(name: "ret", scope: !10834, file: !3, line: 3700, type: !234)
!10854 = !DILocation(line: 3700, column: 6, scope: !10834)
!10855 = !DILocalVariable(name: "flags", scope: !10834, file: !3, line: 3701, type: !388)
!10856 = !DILocation(line: 3701, column: 16, scope: !10834)
!10857 = !DILocation(line: 3703, column: 23, scope: !10834)
!10858 = !DILocation(line: 3703, column: 28, scope: !10834)
!10859 = !DILocation(line: 3703, column: 8, scope: !10834)
!10860 = !DILocation(line: 3703, column: 6, scope: !10834)
!10861 = !DILocation(line: 3704, column: 6, scope: !10862)
!10862 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 3704, column: 6)
!10863 = !DILocation(line: 3704, column: 10, scope: !10862)
!10864 = !DILocation(line: 3704, column: 6, scope: !10834)
!10865 = !DILocation(line: 3705, column: 10, scope: !10862)
!10866 = !DILocation(line: 3705, column: 3, scope: !10862)
!10867 = !DILocation(line: 3707, column: 2, scope: !10834)
!10868 = !DILocation(line: 3707, column: 2, scope: !10844)
!10869 = !DILocalVariable(name: "__dummy", scope: !10870, file: !3, line: 3707, type: !388)
!10870 = distinct !DILexicalBlock(scope: !10843, file: !3, line: 3707, column: 2)
!10871 = !DILocation(line: 3707, column: 2, scope: !10870)
!10872 = !DILocalVariable(name: "__dummy2", scope: !10870, file: !3, line: 3707, type: !388)
!10873 = !DILocation(line: 3707, column: 2, scope: !10843)
!10874 = !DILocation(line: 3707, column: 2, scope: !10842)
!10875 = !DILocation(line: 3707, column: 2, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 3707, column: 2)
!10877 = !DILocalVariable(name: "__dummy", scope: !10878, file: !3, line: 3707, type: !388)
!10878 = distinct !DILexicalBlock(scope: !10879, file: !3, line: 3707, column: 2)
!10879 = distinct !DILexicalBlock(scope: !10876, file: !3, line: 3707, column: 2)
!10880 = !DILocation(line: 3707, column: 2, scope: !10878)
!10881 = !DILocalVariable(name: "__dummy2", scope: !10878, file: !3, line: 3707, type: !388)
!10882 = !DILocation(line: 3707, column: 2, scope: !10879)
!10883 = !DILocation(line: 3707, column: 2, scope: !10841)
!10884 = !{i32 -2140387826}
!10885 = !DILocation(line: 3707, column: 2, scope: !10840)
!10886 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !10839)
!10887 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !10839)
!10888 = !DILocation(line: 3709, column: 6, scope: !10889)
!10889 = distinct !DILexicalBlock(scope: !10834, file: !3, line: 3709, column: 6)
!10890 = !DILocation(line: 3709, column: 12, scope: !10889)
!10891 = !DILocation(line: 3709, column: 6, scope: !10834)
!10892 = !DILocation(line: 3710, column: 7, scope: !10889)
!10893 = !DILocation(line: 3710, column: 3, scope: !10889)
!10894 = !DILocation(line: 3712, column: 21, scope: !10889)
!10895 = !DILocation(line: 3712, column: 26, scope: !10889)
!10896 = !DILocation(line: 3712, column: 9, scope: !10889)
!10897 = !DILocation(line: 3712, column: 7, scope: !10889)
!10898 = !DILocation(line: 3714, column: 26, scope: !10834)
!10899 = !DILocation(line: 3714, column: 32, scope: !10834)
!10900 = !DILocation(line: 3714, column: 51, scope: !10834)
!10901 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !10836)
!10902 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !10836)
!10903 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !10836)
!10904 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !10836)
!10905 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !10836)
!10906 = !DILocation(line: 3716, column: 9, scope: !10834)
!10907 = !DILocation(line: 3716, column: 2, scope: !10834)
!10908 = !DILocation(line: 3717, column: 1, scope: !10834)
!10909 = distinct !DISubprogram(name: "__spi_validate", scope: !3, file: !3, line: 3493, type: !4592, scopeLine: 3494, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!10910 = !DILocalVariable(name: "spi", arg: 1, scope: !10909, file: !3, line: 3493, type: !4532)
!10911 = !DILocation(line: 3493, column: 46, scope: !10909)
!10912 = !DILocalVariable(name: "message", arg: 2, scope: !10909, file: !3, line: 3493, type: !4594)
!10913 = !DILocation(line: 3493, column: 71, scope: !10909)
!10914 = !DILocalVariable(name: "ctlr", scope: !10909, file: !3, line: 3495, type: !4512)
!10915 = !DILocation(line: 3495, column: 25, scope: !10909)
!10916 = !DILocation(line: 3495, column: 32, scope: !10909)
!10917 = !DILocation(line: 3495, column: 37, scope: !10909)
!10918 = !DILocalVariable(name: "xfer", scope: !10909, file: !3, line: 3496, type: !4616)
!10919 = !DILocation(line: 3496, column: 23, scope: !10909)
!10920 = !DILocalVariable(name: "w_size", scope: !10909, file: !3, line: 3497, type: !234)
!10921 = !DILocation(line: 3497, column: 6, scope: !10909)
!10922 = !DILocation(line: 3499, column: 18, scope: !10923)
!10923 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 3499, column: 6)
!10924 = !DILocation(line: 3499, column: 27, scope: !10923)
!10925 = !DILocation(line: 3499, column: 6, scope: !10923)
!10926 = !DILocation(line: 3499, column: 6, scope: !10909)
!10927 = !DILocation(line: 3500, column: 3, scope: !10923)
!10928 = !DILocation(line: 3508, column: 7, scope: !10929)
!10929 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 3508, column: 6)
!10930 = !DILocation(line: 3508, column: 12, scope: !10929)
!10931 = !DILocation(line: 3508, column: 17, scope: !10929)
!10932 = !DILocation(line: 3508, column: 32, scope: !10929)
!10933 = !DILocation(line: 3508, column: 38, scope: !10929)
!10934 = !DILocation(line: 3508, column: 44, scope: !10929)
!10935 = !DILocation(line: 3508, column: 54, scope: !10929)
!10936 = !DILocation(line: 3508, column: 69, scope: !10929)
!10937 = !DILocation(line: 3509, column: 8, scope: !10929)
!10938 = !DILocation(line: 3509, column: 13, scope: !10929)
!10939 = !DILocation(line: 3509, column: 22, scope: !10929)
!10940 = !DILocation(line: 3510, column: 22, scope: !10929)
!10941 = !DILocation(line: 3510, column: 27, scope: !10929)
!10942 = !DILocation(line: 3510, column: 8, scope: !10929)
!10943 = !DILocation(line: 3508, column: 6, scope: !10909)
!10944 = !DILocalVariable(name: "maxsize", scope: !10945, file: !3, line: 3511, type: !385)
!10945 = distinct !DILexicalBlock(scope: !10929, file: !3, line: 3510, column: 38)
!10946 = !DILocation(line: 3511, column: 10, scope: !10945)
!10947 = !DILocalVariable(name: "ret", scope: !10945, file: !3, line: 3512, type: !234)
!10948 = !DILocation(line: 3512, column: 7, scope: !10945)
!10949 = !DILocation(line: 3514, column: 14, scope: !10945)
!10950 = !DILocation(line: 3514, column: 19, scope: !10945)
!10951 = !DILocation(line: 3514, column: 33, scope: !10945)
!10952 = !DILocation(line: 3514, column: 38, scope: !10945)
!10953 = !DILocation(line: 3514, column: 13, scope: !10945)
!10954 = !DILocation(line: 3514, column: 11, scope: !10945)
!10955 = !DILocation(line: 3517, column: 18, scope: !10945)
!10956 = !DILocation(line: 3517, column: 3, scope: !10945)
!10957 = !DILocation(line: 3517, column: 12, scope: !10945)
!10958 = !DILocation(line: 3517, column: 16, scope: !10945)
!10959 = !DILocation(line: 3519, column: 37, scope: !10945)
!10960 = !DILocation(line: 3519, column: 43, scope: !10945)
!10961 = !DILocation(line: 3519, column: 52, scope: !10945)
!10962 = !DILocation(line: 3519, column: 9, scope: !10945)
!10963 = !DILocation(line: 3519, column: 7, scope: !10945)
!10964 = !DILocation(line: 3521, column: 7, scope: !10965)
!10965 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 3521, column: 7)
!10966 = !DILocation(line: 3521, column: 7, scope: !10945)
!10967 = !DILocation(line: 3522, column: 11, scope: !10965)
!10968 = !DILocation(line: 3522, column: 4, scope: !10965)
!10969 = !DILocalVariable(name: "__mptr", scope: !10970, file: !3, line: 3524, type: !228)
!10970 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 3524, column: 3)
!10971 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 3524, column: 3)
!10972 = !DILocation(line: 3524, column: 3, scope: !10970)
!10973 = !DILocation(line: 3524, column: 3, scope: !10974)
!10974 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 3524, column: 3)
!10975 = !DILocation(line: 3524, column: 3, scope: !10971)
!10976 = !DILocation(line: 3524, column: 3, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10971, file: !3, line: 3524, column: 3)
!10978 = !DILocation(line: 3526, column: 22, scope: !10979)
!10979 = distinct !DILexicalBlock(scope: !10980, file: !3, line: 3526, column: 8)
!10980 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3524, column: 65)
!10981 = !DILocation(line: 3526, column: 28, scope: !10979)
!10982 = !DILocation(line: 3526, column: 44, scope: !10979)
!10983 = !DILocation(line: 3526, column: 53, scope: !10979)
!10984 = !DILocation(line: 3526, column: 8, scope: !10979)
!10985 = !DILocation(line: 3526, column: 8, scope: !10980)
!10986 = !DILocation(line: 3527, column: 5, scope: !10979)
!10987 = !DILocation(line: 3528, column: 4, scope: !10980)
!10988 = !DILocation(line: 3528, column: 10, scope: !10980)
!10989 = !DILocation(line: 3528, column: 20, scope: !10980)
!10990 = !DILocation(line: 3529, column: 3, scope: !10980)
!10991 = !DILocalVariable(name: "__mptr", scope: !10992, file: !3, line: 3524, type: !228)
!10992 = distinct !DILexicalBlock(scope: !10977, file: !3, line: 3524, column: 3)
!10993 = !DILocation(line: 3524, column: 3, scope: !10992)
!10994 = !DILocation(line: 3524, column: 3, scope: !10995)
!10995 = distinct !DILexicalBlock(scope: !10992, file: !3, line: 3524, column: 3)
!10996 = distinct !{!10996, !10975, !10997}
!10997 = !DILocation(line: 3529, column: 3, scope: !10971)
!10998 = !DILocation(line: 3530, column: 2, scope: !10945)
!10999 = !DILocation(line: 3537, column: 7, scope: !11000)
!11000 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 3537, column: 6)
!11001 = !DILocation(line: 3537, column: 13, scope: !11000)
!11002 = !DILocation(line: 3537, column: 19, scope: !11000)
!11003 = !DILocation(line: 3537, column: 49, scope: !11000)
!11004 = !DILocation(line: 3538, column: 7, scope: !11000)
!11005 = !DILocation(line: 3538, column: 12, scope: !11000)
!11006 = !DILocation(line: 3538, column: 17, scope: !11000)
!11007 = !DILocation(line: 3537, column: 6, scope: !10909)
!11008 = !DILocalVariable(name: "flags", scope: !11009, file: !3, line: 3539, type: !7)
!11009 = distinct !DILexicalBlock(scope: !11000, file: !3, line: 3538, column: 31)
!11010 = !DILocation(line: 3539, column: 12, scope: !11009)
!11011 = !DILocation(line: 3539, column: 20, scope: !11009)
!11012 = !DILocation(line: 3539, column: 26, scope: !11009)
!11013 = !DILocalVariable(name: "__mptr", scope: !11014, file: !3, line: 3541, type: !228)
!11014 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 3541, column: 3)
!11015 = distinct !DILexicalBlock(scope: !11009, file: !3, line: 3541, column: 3)
!11016 = !DILocation(line: 3541, column: 3, scope: !11014)
!11017 = !DILocation(line: 3541, column: 3, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11014, file: !3, line: 3541, column: 3)
!11019 = !DILocation(line: 3541, column: 3, scope: !11015)
!11020 = !DILocation(line: 3541, column: 3, scope: !11021)
!11021 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 3541, column: 3)
!11022 = !DILocation(line: 3542, column: 8, scope: !11023)
!11023 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 3542, column: 8)
!11024 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 3541, column: 65)
!11025 = !DILocation(line: 3542, column: 14, scope: !11023)
!11026 = !DILocation(line: 3542, column: 21, scope: !11023)
!11027 = !DILocation(line: 3542, column: 24, scope: !11023)
!11028 = !DILocation(line: 3542, column: 30, scope: !11023)
!11029 = !DILocation(line: 3542, column: 8, scope: !11024)
!11030 = !DILocation(line: 3543, column: 5, scope: !11023)
!11031 = !DILocation(line: 3544, column: 9, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 3544, column: 8)
!11033 = !DILocation(line: 3544, column: 15, scope: !11032)
!11034 = !DILocation(line: 3544, column: 39, scope: !11032)
!11035 = !DILocation(line: 3544, column: 42, scope: !11032)
!11036 = !DILocation(line: 3544, column: 48, scope: !11032)
!11037 = !DILocation(line: 3544, column: 8, scope: !11024)
!11038 = !DILocation(line: 3545, column: 5, scope: !11032)
!11039 = !DILocation(line: 3546, column: 9, scope: !11040)
!11040 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 3546, column: 8)
!11041 = !DILocation(line: 3546, column: 15, scope: !11040)
!11042 = !DILocation(line: 3546, column: 39, scope: !11040)
!11043 = !DILocation(line: 3546, column: 42, scope: !11040)
!11044 = !DILocation(line: 3546, column: 48, scope: !11040)
!11045 = !DILocation(line: 3546, column: 8, scope: !11024)
!11046 = !DILocation(line: 3547, column: 5, scope: !11040)
!11047 = !DILocation(line: 3548, column: 3, scope: !11024)
!11048 = !DILocalVariable(name: "__mptr", scope: !11049, file: !3, line: 3541, type: !228)
!11049 = distinct !DILexicalBlock(scope: !11021, file: !3, line: 3541, column: 3)
!11050 = !DILocation(line: 3541, column: 3, scope: !11049)
!11051 = !DILocation(line: 3541, column: 3, scope: !11052)
!11052 = distinct !DILexicalBlock(scope: !11049, file: !3, line: 3541, column: 3)
!11053 = distinct !{!11053, !11019, !11054}
!11054 = !DILocation(line: 3548, column: 3, scope: !11015)
!11055 = !DILocation(line: 3549, column: 2, scope: !11009)
!11056 = !DILocation(line: 3559, column: 2, scope: !10909)
!11057 = !DILocation(line: 3559, column: 11, scope: !10909)
!11058 = !DILocation(line: 3559, column: 24, scope: !10909)
!11059 = !DILocalVariable(name: "__mptr", scope: !11060, file: !3, line: 3560, type: !228)
!11060 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 3560, column: 2)
!11061 = distinct !DILexicalBlock(scope: !10909, file: !3, line: 3560, column: 2)
!11062 = !DILocation(line: 3560, column: 2, scope: !11060)
!11063 = !DILocation(line: 3560, column: 2, scope: !11064)
!11064 = distinct !DILexicalBlock(scope: !11060, file: !3, line: 3560, column: 2)
!11065 = !DILocation(line: 3560, column: 2, scope: !11061)
!11066 = !DILocation(line: 3560, column: 2, scope: !11067)
!11067 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 3560, column: 2)
!11068 = !DILocation(line: 3561, column: 3, scope: !11069)
!11069 = distinct !DILexicalBlock(scope: !11067, file: !3, line: 3560, column: 64)
!11070 = !DILocation(line: 3561, column: 9, scope: !11069)
!11071 = !DILocation(line: 3561, column: 28, scope: !11069)
!11072 = !DILocation(line: 3562, column: 28, scope: !11069)
!11073 = !DILocation(line: 3562, column: 34, scope: !11069)
!11074 = !DILocation(line: 3562, column: 3, scope: !11069)
!11075 = !DILocation(line: 3562, column: 12, scope: !11069)
!11076 = !DILocation(line: 3562, column: 25, scope: !11069)
!11077 = !DILocation(line: 3563, column: 8, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3563, column: 7)
!11079 = !DILocation(line: 3563, column: 14, scope: !11078)
!11080 = !DILocation(line: 3563, column: 7, scope: !11069)
!11081 = !DILocation(line: 3564, column: 26, scope: !11078)
!11082 = !DILocation(line: 3564, column: 31, scope: !11078)
!11083 = !DILocation(line: 3564, column: 4, scope: !11078)
!11084 = !DILocation(line: 3564, column: 10, scope: !11078)
!11085 = !DILocation(line: 3564, column: 24, scope: !11078)
!11086 = !DILocation(line: 3566, column: 8, scope: !11087)
!11087 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3566, column: 7)
!11088 = !DILocation(line: 3566, column: 14, scope: !11087)
!11089 = !DILocation(line: 3566, column: 7, scope: !11069)
!11090 = !DILocation(line: 3567, column: 21, scope: !11087)
!11091 = !DILocation(line: 3567, column: 26, scope: !11087)
!11092 = !DILocation(line: 3567, column: 4, scope: !11087)
!11093 = !DILocation(line: 3567, column: 10, scope: !11087)
!11094 = !DILocation(line: 3567, column: 19, scope: !11087)
!11095 = !DILocation(line: 3569, column: 7, scope: !11096)
!11096 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3569, column: 7)
!11097 = !DILocation(line: 3569, column: 13, scope: !11096)
!11098 = !DILocation(line: 3569, column: 26, scope: !11096)
!11099 = !DILocation(line: 3569, column: 29, scope: !11096)
!11100 = !DILocation(line: 3569, column: 35, scope: !11096)
!11101 = !DILocation(line: 3569, column: 46, scope: !11096)
!11102 = !DILocation(line: 3569, column: 52, scope: !11096)
!11103 = !DILocation(line: 3569, column: 44, scope: !11096)
!11104 = !DILocation(line: 3569, column: 7, scope: !11069)
!11105 = !DILocation(line: 3570, column: 21, scope: !11096)
!11106 = !DILocation(line: 3570, column: 27, scope: !11096)
!11107 = !DILocation(line: 3570, column: 4, scope: !11096)
!11108 = !DILocation(line: 3570, column: 10, scope: !11096)
!11109 = !DILocation(line: 3570, column: 19, scope: !11096)
!11110 = !DILocation(line: 3572, column: 36, scope: !11111)
!11111 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3572, column: 7)
!11112 = !DILocation(line: 3572, column: 42, scope: !11111)
!11113 = !DILocation(line: 3572, column: 48, scope: !11111)
!11114 = !DILocation(line: 3572, column: 7, scope: !11111)
!11115 = !DILocation(line: 3572, column: 7, scope: !11069)
!11116 = !DILocation(line: 3573, column: 4, scope: !11111)
!11117 = !DILocation(line: 3579, column: 7, scope: !11118)
!11118 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3579, column: 7)
!11119 = !DILocation(line: 3579, column: 13, scope: !11118)
!11120 = !DILocation(line: 3579, column: 27, scope: !11118)
!11121 = !DILocation(line: 3579, column: 7, scope: !11069)
!11122 = !DILocation(line: 3580, column: 11, scope: !11118)
!11123 = !DILocation(line: 3580, column: 4, scope: !11118)
!11124 = !DILocation(line: 3581, column: 12, scope: !11125)
!11125 = distinct !DILexicalBlock(scope: !11118, file: !3, line: 3581, column: 12)
!11126 = !DILocation(line: 3581, column: 18, scope: !11125)
!11127 = !DILocation(line: 3581, column: 32, scope: !11125)
!11128 = !DILocation(line: 3581, column: 12, scope: !11118)
!11129 = !DILocation(line: 3582, column: 11, scope: !11125)
!11130 = !DILocation(line: 3582, column: 4, scope: !11125)
!11131 = !DILocation(line: 3584, column: 11, scope: !11125)
!11132 = !DILocation(line: 3587, column: 7, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3587, column: 7)
!11134 = !DILocation(line: 3587, column: 13, scope: !11133)
!11135 = !DILocation(line: 3587, column: 19, scope: !11133)
!11136 = !DILocation(line: 3587, column: 17, scope: !11133)
!11137 = !DILocation(line: 3587, column: 7, scope: !11069)
!11138 = !DILocation(line: 3588, column: 4, scope: !11133)
!11139 = !DILocation(line: 3590, column: 7, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3590, column: 7)
!11141 = !DILocation(line: 3590, column: 13, scope: !11140)
!11142 = !DILocation(line: 3590, column: 22, scope: !11140)
!11143 = !DILocation(line: 3590, column: 25, scope: !11140)
!11144 = !DILocation(line: 3590, column: 31, scope: !11140)
!11145 = !DILocation(line: 3590, column: 44, scope: !11140)
!11146 = !DILocation(line: 3591, column: 7, scope: !11140)
!11147 = !DILocation(line: 3591, column: 13, scope: !11140)
!11148 = !DILocation(line: 3591, column: 24, scope: !11140)
!11149 = !DILocation(line: 3591, column: 30, scope: !11140)
!11150 = !DILocation(line: 3591, column: 22, scope: !11140)
!11151 = !DILocation(line: 3590, column: 7, scope: !11069)
!11152 = !DILocation(line: 3592, column: 4, scope: !11140)
!11153 = !DILocation(line: 3594, column: 7, scope: !11154)
!11154 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3594, column: 7)
!11155 = !DILocation(line: 3594, column: 13, scope: !11154)
!11156 = !DILocation(line: 3594, column: 20, scope: !11154)
!11157 = !DILocation(line: 3594, column: 24, scope: !11154)
!11158 = !DILocation(line: 3594, column: 30, scope: !11154)
!11159 = !DILocation(line: 3594, column: 7, scope: !11069)
!11160 = !DILocation(line: 3595, column: 4, scope: !11154)
!11161 = !DILocation(line: 3595, column: 10, scope: !11154)
!11162 = !DILocation(line: 3595, column: 19, scope: !11154)
!11163 = !DILocation(line: 3596, column: 7, scope: !11164)
!11164 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3596, column: 7)
!11165 = !DILocation(line: 3596, column: 13, scope: !11164)
!11166 = !DILocation(line: 3596, column: 20, scope: !11164)
!11167 = !DILocation(line: 3596, column: 24, scope: !11164)
!11168 = !DILocation(line: 3596, column: 30, scope: !11164)
!11169 = !DILocation(line: 3596, column: 7, scope: !11069)
!11170 = !DILocation(line: 3597, column: 4, scope: !11164)
!11171 = !DILocation(line: 3597, column: 10, scope: !11164)
!11172 = !DILocation(line: 3597, column: 19, scope: !11164)
!11173 = !DILocation(line: 3602, column: 7, scope: !11174)
!11174 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3602, column: 7)
!11175 = !DILocation(line: 3602, column: 13, scope: !11174)
!11176 = !DILocation(line: 3602, column: 7, scope: !11069)
!11177 = !DILocation(line: 3603, column: 8, scope: !11178)
!11178 = distinct !DILexicalBlock(scope: !11179, file: !3, line: 3603, column: 8)
!11179 = distinct !DILexicalBlock(scope: !11174, file: !3, line: 3602, column: 21)
!11180 = !DILocation(line: 3603, column: 14, scope: !11178)
!11181 = !DILocation(line: 3603, column: 23, scope: !11178)
!11182 = !DILocation(line: 3603, column: 43, scope: !11178)
!11183 = !DILocation(line: 3604, column: 5, scope: !11178)
!11184 = !DILocation(line: 3604, column: 11, scope: !11178)
!11185 = !DILocation(line: 3604, column: 20, scope: !11178)
!11186 = !DILocation(line: 3604, column: 38, scope: !11178)
!11187 = !DILocation(line: 3605, column: 5, scope: !11178)
!11188 = !DILocation(line: 3605, column: 11, scope: !11178)
!11189 = !DILocation(line: 3605, column: 20, scope: !11178)
!11190 = !DILocation(line: 3603, column: 8, scope: !11179)
!11191 = !DILocation(line: 3606, column: 5, scope: !11178)
!11192 = !DILocation(line: 3607, column: 9, scope: !11193)
!11193 = distinct !DILexicalBlock(scope: !11179, file: !3, line: 3607, column: 8)
!11194 = !DILocation(line: 3607, column: 15, scope: !11193)
!11195 = !DILocation(line: 3607, column: 24, scope: !11193)
!11196 = !DILocation(line: 3607, column: 43, scope: !11193)
!11197 = !DILocation(line: 3608, column: 7, scope: !11193)
!11198 = !DILocation(line: 3608, column: 12, scope: !11193)
!11199 = !DILocation(line: 3608, column: 17, scope: !11193)
!11200 = !DILocation(line: 3607, column: 8, scope: !11179)
!11201 = !DILocation(line: 3609, column: 5, scope: !11193)
!11202 = !DILocation(line: 3610, column: 9, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11179, file: !3, line: 3610, column: 8)
!11204 = !DILocation(line: 3610, column: 15, scope: !11203)
!11205 = !DILocation(line: 3610, column: 24, scope: !11203)
!11206 = !DILocation(line: 3610, column: 43, scope: !11203)
!11207 = !DILocation(line: 3611, column: 7, scope: !11203)
!11208 = !DILocation(line: 3611, column: 12, scope: !11203)
!11209 = !DILocation(line: 3611, column: 17, scope: !11203)
!11210 = !DILocation(line: 3610, column: 8, scope: !11179)
!11211 = !DILocation(line: 3612, column: 5, scope: !11203)
!11212 = !DILocation(line: 3613, column: 3, scope: !11179)
!11213 = !DILocation(line: 3615, column: 7, scope: !11214)
!11214 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3615, column: 7)
!11215 = !DILocation(line: 3615, column: 13, scope: !11214)
!11216 = !DILocation(line: 3615, column: 7, scope: !11069)
!11217 = !DILocation(line: 3616, column: 8, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11219, file: !3, line: 3616, column: 8)
!11219 = distinct !DILexicalBlock(scope: !11214, file: !3, line: 3615, column: 21)
!11220 = !DILocation(line: 3616, column: 14, scope: !11218)
!11221 = !DILocation(line: 3616, column: 23, scope: !11218)
!11222 = !DILocation(line: 3616, column: 43, scope: !11218)
!11223 = !DILocation(line: 3617, column: 5, scope: !11218)
!11224 = !DILocation(line: 3617, column: 11, scope: !11218)
!11225 = !DILocation(line: 3617, column: 20, scope: !11218)
!11226 = !DILocation(line: 3617, column: 38, scope: !11218)
!11227 = !DILocation(line: 3618, column: 5, scope: !11218)
!11228 = !DILocation(line: 3618, column: 11, scope: !11218)
!11229 = !DILocation(line: 3618, column: 20, scope: !11218)
!11230 = !DILocation(line: 3616, column: 8, scope: !11219)
!11231 = !DILocation(line: 3619, column: 5, scope: !11218)
!11232 = !DILocation(line: 3620, column: 9, scope: !11233)
!11233 = distinct !DILexicalBlock(scope: !11219, file: !3, line: 3620, column: 8)
!11234 = !DILocation(line: 3620, column: 15, scope: !11233)
!11235 = !DILocation(line: 3620, column: 24, scope: !11233)
!11236 = !DILocation(line: 3620, column: 43, scope: !11233)
!11237 = !DILocation(line: 3621, column: 7, scope: !11233)
!11238 = !DILocation(line: 3621, column: 12, scope: !11233)
!11239 = !DILocation(line: 3621, column: 17, scope: !11233)
!11240 = !DILocation(line: 3620, column: 8, scope: !11219)
!11241 = !DILocation(line: 3622, column: 5, scope: !11233)
!11242 = !DILocation(line: 3623, column: 9, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11219, file: !3, line: 3623, column: 8)
!11244 = !DILocation(line: 3623, column: 15, scope: !11243)
!11245 = !DILocation(line: 3623, column: 24, scope: !11243)
!11246 = !DILocation(line: 3623, column: 43, scope: !11243)
!11247 = !DILocation(line: 3624, column: 7, scope: !11243)
!11248 = !DILocation(line: 3624, column: 12, scope: !11243)
!11249 = !DILocation(line: 3624, column: 17, scope: !11243)
!11250 = !DILocation(line: 3623, column: 8, scope: !11219)
!11251 = !DILocation(line: 3625, column: 5, scope: !11243)
!11252 = !DILocation(line: 3626, column: 3, scope: !11219)
!11253 = !DILocation(line: 3628, column: 35, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11069, file: !3, line: 3628, column: 7)
!11255 = !DILocation(line: 3628, column: 41, scope: !11254)
!11256 = !DILocation(line: 3628, column: 7, scope: !11254)
!11257 = !DILocation(line: 3628, column: 7, scope: !11069)
!11258 = !DILocation(line: 3629, column: 4, scope: !11254)
!11259 = !DILocation(line: 3630, column: 2, scope: !11069)
!11260 = !DILocalVariable(name: "__mptr", scope: !11261, file: !3, line: 3560, type: !228)
!11261 = distinct !DILexicalBlock(scope: !11067, file: !3, line: 3560, column: 2)
!11262 = !DILocation(line: 3560, column: 2, scope: !11261)
!11263 = !DILocation(line: 3560, column: 2, scope: !11264)
!11264 = distinct !DILexicalBlock(scope: !11261, file: !3, line: 3560, column: 2)
!11265 = distinct !{!11265, !11065, !11266}
!11266 = !DILocation(line: 3630, column: 2, scope: !11061)
!11267 = !DILocation(line: 3632, column: 2, scope: !10909)
!11268 = !DILocation(line: 3632, column: 11, scope: !10909)
!11269 = !DILocation(line: 3632, column: 18, scope: !10909)
!11270 = !DILocation(line: 3634, column: 2, scope: !10909)
!11271 = !DILocation(line: 3635, column: 1, scope: !10909)
!11272 = distinct !DISubprogram(name: "__spi_async", scope: !3, file: !3, line: 3637, type: !4592, scopeLine: 3638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!11273 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11274)
!11274 = distinct !DILocation(line: 3652, column: 2, scope: !11275)
!11275 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 3652, column: 2)
!11276 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11274)
!11277 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11278)
!11278 = distinct !DILocation(line: 3652, column: 2, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11280, file: !3, line: 3652, column: 2)
!11280 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 3652, column: 2)
!11281 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 3652, column: 2)
!11282 = distinct !DILexicalBlock(scope: !11283, file: !3, line: 3652, column: 2)
!11283 = distinct !DILexicalBlock(scope: !11275, file: !3, line: 3652, column: 2)
!11284 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11285)
!11285 = distinct !DILocation(line: 3651, column: 2, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 3651, column: 2)
!11287 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11285)
!11288 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11289)
!11289 = distinct !DILocation(line: 3651, column: 2, scope: !11290)
!11290 = distinct !DILexicalBlock(scope: !11291, file: !3, line: 3651, column: 2)
!11291 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 3651, column: 2)
!11292 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 3651, column: 2)
!11293 = distinct !DILexicalBlock(scope: !11294, file: !3, line: 3651, column: 2)
!11294 = distinct !DILexicalBlock(scope: !11286, file: !3, line: 3651, column: 2)
!11295 = !DILocalVariable(name: "spi", arg: 1, scope: !11272, file: !3, line: 3637, type: !4532)
!11296 = !DILocation(line: 3637, column: 43, scope: !11272)
!11297 = !DILocalVariable(name: "message", arg: 2, scope: !11272, file: !3, line: 3637, type: !4594)
!11298 = !DILocation(line: 3637, column: 68, scope: !11272)
!11299 = !DILocalVariable(name: "ctlr", scope: !11272, file: !3, line: 3639, type: !4512)
!11300 = !DILocation(line: 3639, column: 25, scope: !11272)
!11301 = !DILocation(line: 3639, column: 32, scope: !11272)
!11302 = !DILocation(line: 3639, column: 37, scope: !11272)
!11303 = !DILocalVariable(name: "xfer", scope: !11272, file: !3, line: 3640, type: !4616)
!11304 = !DILocation(line: 3640, column: 23, scope: !11272)
!11305 = !DILocation(line: 3646, column: 7, scope: !11306)
!11306 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 3646, column: 6)
!11307 = !DILocation(line: 3646, column: 13, scope: !11306)
!11308 = !DILocation(line: 3646, column: 6, scope: !11272)
!11309 = !DILocation(line: 3647, column: 3, scope: !11306)
!11310 = !DILocation(line: 3649, column: 17, scope: !11272)
!11311 = !DILocation(line: 3649, column: 2, scope: !11272)
!11312 = !DILocation(line: 3649, column: 11, scope: !11272)
!11313 = !DILocation(line: 3649, column: 15, scope: !11272)
!11314 = !DILocation(line: 3651, column: 2, scope: !11272)
!11315 = !DILocalVariable(name: "flags", scope: !11286, file: !3, line: 3651, type: !388)
!11316 = !DILocation(line: 3651, column: 2, scope: !11286)
!11317 = !DILocation(line: 3651, column: 2, scope: !11294)
!11318 = !DILocalVariable(name: "__dummy", scope: !11319, file: !3, line: 3651, type: !388)
!11319 = distinct !DILexicalBlock(scope: !11293, file: !3, line: 3651, column: 2)
!11320 = !DILocation(line: 3651, column: 2, scope: !11319)
!11321 = !DILocalVariable(name: "__dummy2", scope: !11319, file: !3, line: 3651, type: !388)
!11322 = !DILocation(line: 3651, column: 2, scope: !11293)
!11323 = !DILocation(line: 3651, column: 2, scope: !11292)
!11324 = !DILocation(line: 3651, column: 2, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11292, file: !3, line: 3651, column: 2)
!11326 = !DILocalVariable(name: "__dummy", scope: !11327, file: !3, line: 3651, type: !388)
!11327 = distinct !DILexicalBlock(scope: !11328, file: !3, line: 3651, column: 2)
!11328 = distinct !DILexicalBlock(scope: !11325, file: !3, line: 3651, column: 2)
!11329 = !DILocation(line: 3651, column: 2, scope: !11327)
!11330 = !DILocalVariable(name: "__dummy2", scope: !11327, file: !3, line: 3651, type: !388)
!11331 = !DILocation(line: 3651, column: 2, scope: !11328)
!11332 = !DILocation(line: 3651, column: 2, scope: !11291)
!11333 = !{i32 -2140394667}
!11334 = !DILocation(line: 3651, column: 2, scope: !11290)
!11335 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11289)
!11336 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11289)
!11337 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11285)
!11338 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11285)
!11339 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11285)
!11340 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11285)
!11341 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11285)
!11342 = !DILocation(line: 3652, column: 2, scope: !11272)
!11343 = !DILocalVariable(name: "flags", scope: !11275, file: !3, line: 3652, type: !388)
!11344 = !DILocation(line: 3652, column: 2, scope: !11275)
!11345 = !DILocation(line: 3652, column: 2, scope: !11283)
!11346 = !DILocalVariable(name: "__dummy", scope: !11347, file: !3, line: 3652, type: !388)
!11347 = distinct !DILexicalBlock(scope: !11282, file: !3, line: 3652, column: 2)
!11348 = !DILocation(line: 3652, column: 2, scope: !11347)
!11349 = !DILocalVariable(name: "__dummy2", scope: !11347, file: !3, line: 3652, type: !388)
!11350 = !DILocation(line: 3652, column: 2, scope: !11282)
!11351 = !DILocation(line: 3652, column: 2, scope: !11281)
!11352 = !DILocation(line: 3652, column: 2, scope: !11353)
!11353 = distinct !DILexicalBlock(scope: !11281, file: !3, line: 3652, column: 2)
!11354 = !DILocalVariable(name: "__dummy", scope: !11355, file: !3, line: 3652, type: !388)
!11355 = distinct !DILexicalBlock(scope: !11356, file: !3, line: 3652, column: 2)
!11356 = distinct !DILexicalBlock(scope: !11353, file: !3, line: 3652, column: 2)
!11357 = !DILocation(line: 3652, column: 2, scope: !11355)
!11358 = !DILocalVariable(name: "__dummy2", scope: !11355, file: !3, line: 3652, type: !388)
!11359 = !DILocation(line: 3652, column: 2, scope: !11356)
!11360 = !DILocation(line: 3652, column: 2, scope: !11280)
!11361 = !{i32 -2140393217}
!11362 = !DILocation(line: 3652, column: 2, scope: !11279)
!11363 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11278)
!11364 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11278)
!11365 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11274)
!11366 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11274)
!11367 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11274)
!11368 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11274)
!11369 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11274)
!11370 = !DILocation(line: 3654, column: 27, scope: !11272)
!11371 = !DILocation(line: 3654, column: 2, scope: !11272)
!11372 = !DILocation(line: 3656, column: 7, scope: !11373)
!11373 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 3656, column: 6)
!11374 = !DILocation(line: 3656, column: 13, scope: !11373)
!11375 = !DILocation(line: 3656, column: 6, scope: !11272)
!11376 = !DILocalVariable(name: "__mptr", scope: !11377, file: !3, line: 3657, type: !228)
!11377 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 3657, column: 3)
!11378 = distinct !DILexicalBlock(scope: !11379, file: !3, line: 3657, column: 3)
!11379 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 3656, column: 32)
!11380 = !DILocation(line: 3657, column: 3, scope: !11377)
!11381 = !DILocation(line: 3657, column: 3, scope: !11382)
!11382 = distinct !DILexicalBlock(scope: !11377, file: !3, line: 3657, column: 3)
!11383 = !DILocation(line: 3657, column: 3, scope: !11378)
!11384 = !DILocation(line: 3657, column: 3, scope: !11385)
!11385 = distinct !DILexicalBlock(scope: !11378, file: !3, line: 3657, column: 3)
!11386 = !DILocation(line: 3658, column: 4, scope: !11387)
!11387 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 3657, column: 65)
!11388 = !DILocation(line: 3658, column: 10, scope: !11387)
!11389 = !DILocation(line: 3658, column: 27, scope: !11387)
!11390 = !DILocation(line: 3659, column: 26, scope: !11387)
!11391 = !DILocation(line: 3659, column: 32, scope: !11387)
!11392 = !DILocation(line: 3659, column: 4, scope: !11387)
!11393 = !DILocation(line: 3660, column: 3, scope: !11387)
!11394 = !DILocalVariable(name: "__mptr", scope: !11395, file: !3, line: 3657, type: !228)
!11395 = distinct !DILexicalBlock(scope: !11385, file: !3, line: 3657, column: 3)
!11396 = !DILocation(line: 3657, column: 3, scope: !11395)
!11397 = !DILocation(line: 3657, column: 3, scope: !11398)
!11398 = distinct !DILexicalBlock(scope: !11395, file: !3, line: 3657, column: 3)
!11399 = distinct !{!11399, !11383, !11400}
!11400 = !DILocation(line: 3660, column: 3, scope: !11378)
!11401 = !DILocation(line: 3661, column: 2, scope: !11379)
!11402 = !DILocation(line: 3663, column: 9, scope: !11272)
!11403 = !DILocation(line: 3663, column: 15, scope: !11272)
!11404 = !DILocation(line: 3663, column: 24, scope: !11272)
!11405 = !DILocation(line: 3663, column: 29, scope: !11272)
!11406 = !DILocation(line: 3663, column: 2, scope: !11272)
!11407 = !DILocation(line: 3664, column: 1, scope: !11272)
!11408 = distinct !DISubprogram(name: "spi_async_locked", scope: !3, file: !3, line: 3751, type: !4592, scopeLine: 3752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!11409 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11410)
!11410 = distinct !DILocation(line: 3765, column: 2, scope: !11408)
!11411 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11410)
!11412 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11413)
!11413 = distinct !DILocation(line: 3761, column: 2, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11415, file: !3, line: 3761, column: 2)
!11415 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 3761, column: 2)
!11416 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 3761, column: 2)
!11417 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 3761, column: 2)
!11418 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 3761, column: 2)
!11419 = !DILocalVariable(name: "spi", arg: 1, scope: !11408, file: !3, line: 3751, type: !4532)
!11420 = !DILocation(line: 3751, column: 41, scope: !11408)
!11421 = !DILocalVariable(name: "message", arg: 2, scope: !11408, file: !3, line: 3751, type: !4594)
!11422 = !DILocation(line: 3751, column: 66, scope: !11408)
!11423 = !DILocalVariable(name: "ctlr", scope: !11408, file: !3, line: 3753, type: !4512)
!11424 = !DILocation(line: 3753, column: 25, scope: !11408)
!11425 = !DILocation(line: 3753, column: 32, scope: !11408)
!11426 = !DILocation(line: 3753, column: 37, scope: !11408)
!11427 = !DILocalVariable(name: "ret", scope: !11408, file: !3, line: 3754, type: !234)
!11428 = !DILocation(line: 3754, column: 6, scope: !11408)
!11429 = !DILocalVariable(name: "flags", scope: !11408, file: !3, line: 3755, type: !388)
!11430 = !DILocation(line: 3755, column: 16, scope: !11408)
!11431 = !DILocation(line: 3757, column: 23, scope: !11408)
!11432 = !DILocation(line: 3757, column: 28, scope: !11408)
!11433 = !DILocation(line: 3757, column: 8, scope: !11408)
!11434 = !DILocation(line: 3757, column: 6, scope: !11408)
!11435 = !DILocation(line: 3758, column: 6, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11408, file: !3, line: 3758, column: 6)
!11437 = !DILocation(line: 3758, column: 10, scope: !11436)
!11438 = !DILocation(line: 3758, column: 6, scope: !11408)
!11439 = !DILocation(line: 3759, column: 10, scope: !11436)
!11440 = !DILocation(line: 3759, column: 3, scope: !11436)
!11441 = !DILocation(line: 3761, column: 2, scope: !11408)
!11442 = !DILocation(line: 3761, column: 2, scope: !11418)
!11443 = !DILocalVariable(name: "__dummy", scope: !11444, file: !3, line: 3761, type: !388)
!11444 = distinct !DILexicalBlock(scope: !11417, file: !3, line: 3761, column: 2)
!11445 = !DILocation(line: 3761, column: 2, scope: !11444)
!11446 = !DILocalVariable(name: "__dummy2", scope: !11444, file: !3, line: 3761, type: !388)
!11447 = !DILocation(line: 3761, column: 2, scope: !11417)
!11448 = !DILocation(line: 3761, column: 2, scope: !11416)
!11449 = !DILocation(line: 3761, column: 2, scope: !11450)
!11450 = distinct !DILexicalBlock(scope: !11416, file: !3, line: 3761, column: 2)
!11451 = !DILocalVariable(name: "__dummy", scope: !11452, file: !3, line: 3761, type: !388)
!11452 = distinct !DILexicalBlock(scope: !11453, file: !3, line: 3761, column: 2)
!11453 = distinct !DILexicalBlock(scope: !11450, file: !3, line: 3761, column: 2)
!11454 = !DILocation(line: 3761, column: 2, scope: !11452)
!11455 = !DILocalVariable(name: "__dummy2", scope: !11452, file: !3, line: 3761, type: !388)
!11456 = !DILocation(line: 3761, column: 2, scope: !11453)
!11457 = !DILocation(line: 3761, column: 2, scope: !11415)
!11458 = !{i32 -2140386628}
!11459 = !DILocation(line: 3761, column: 2, scope: !11414)
!11460 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11413)
!11461 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11413)
!11462 = !DILocation(line: 3763, column: 20, scope: !11408)
!11463 = !DILocation(line: 3763, column: 25, scope: !11408)
!11464 = !DILocation(line: 3763, column: 8, scope: !11408)
!11465 = !DILocation(line: 3763, column: 6, scope: !11408)
!11466 = !DILocation(line: 3765, column: 26, scope: !11408)
!11467 = !DILocation(line: 3765, column: 32, scope: !11408)
!11468 = !DILocation(line: 3765, column: 51, scope: !11408)
!11469 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11410)
!11470 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11410)
!11471 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11410)
!11472 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11410)
!11473 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11410)
!11474 = !DILocation(line: 3767, column: 9, scope: !11408)
!11475 = !DILocation(line: 3767, column: 2, scope: !11408)
!11476 = !DILocation(line: 3769, column: 1, scope: !11408)
!11477 = distinct !DISubprogram(name: "spi_sync", scope: !3, file: !3, line: 3859, type: !4592, scopeLine: 3860, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!11478 = !DILocalVariable(name: "spi", arg: 1, scope: !11477, file: !3, line: 3859, type: !4532)
!11479 = !DILocation(line: 3859, column: 33, scope: !11477)
!11480 = !DILocalVariable(name: "message", arg: 2, scope: !11477, file: !3, line: 3859, type: !4594)
!11481 = !DILocation(line: 3859, column: 58, scope: !11477)
!11482 = !DILocalVariable(name: "ret", scope: !11477, file: !3, line: 3861, type: !234)
!11483 = !DILocation(line: 3861, column: 6, scope: !11477)
!11484 = !DILocation(line: 3863, column: 14, scope: !11477)
!11485 = !DILocation(line: 3863, column: 19, scope: !11477)
!11486 = !DILocation(line: 3863, column: 31, scope: !11477)
!11487 = !DILocation(line: 3863, column: 2, scope: !11477)
!11488 = !DILocation(line: 3864, column: 19, scope: !11477)
!11489 = !DILocation(line: 3864, column: 24, scope: !11477)
!11490 = !DILocation(line: 3864, column: 8, scope: !11477)
!11491 = !DILocation(line: 3864, column: 6, scope: !11477)
!11492 = !DILocation(line: 3865, column: 16, scope: !11477)
!11493 = !DILocation(line: 3865, column: 21, scope: !11477)
!11494 = !DILocation(line: 3865, column: 33, scope: !11477)
!11495 = !DILocation(line: 3865, column: 2, scope: !11477)
!11496 = !DILocation(line: 3867, column: 9, scope: !11477)
!11497 = !DILocation(line: 3867, column: 2, scope: !11477)
!11498 = distinct !DISubprogram(name: "__spi_sync", scope: !3, file: !3, line: 3784, type: !4592, scopeLine: 3785, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!11499 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11500)
!11500 = distinct !DILocation(line: 3826, column: 4, scope: !11501)
!11501 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 3826, column: 4)
!11502 = distinct !DILexicalBlock(scope: !11503, file: !3, line: 3823, column: 46)
!11503 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 3823, column: 7)
!11504 = distinct !DILexicalBlock(scope: !11505, file: !3, line: 3819, column: 19)
!11505 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 3819, column: 6)
!11506 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11500)
!11507 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11508)
!11508 = distinct !DILocation(line: 3826, column: 4, scope: !11509)
!11509 = distinct !DILexicalBlock(scope: !11510, file: !3, line: 3826, column: 4)
!11510 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 3826, column: 4)
!11511 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 3826, column: 4)
!11512 = distinct !DILexicalBlock(scope: !11513, file: !3, line: 3826, column: 4)
!11513 = distinct !DILexicalBlock(scope: !11501, file: !3, line: 3826, column: 4)
!11514 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11515)
!11515 = distinct !DILocation(line: 3824, column: 4, scope: !11516)
!11516 = distinct !DILexicalBlock(scope: !11502, file: !3, line: 3824, column: 4)
!11517 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11515)
!11518 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11519)
!11519 = distinct !DILocation(line: 3824, column: 4, scope: !11520)
!11520 = distinct !DILexicalBlock(scope: !11521, file: !3, line: 3824, column: 4)
!11521 = distinct !DILexicalBlock(scope: !11522, file: !3, line: 3824, column: 4)
!11522 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 3824, column: 4)
!11523 = distinct !DILexicalBlock(scope: !11524, file: !3, line: 3824, column: 4)
!11524 = distinct !DILexicalBlock(scope: !11516, file: !3, line: 3824, column: 4)
!11525 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11526)
!11526 = distinct !DILocation(line: 3814, column: 3, scope: !11527)
!11527 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 3807, column: 45)
!11528 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 3807, column: 6)
!11529 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11526)
!11530 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11531)
!11531 = distinct !DILocation(line: 3808, column: 3, scope: !11532)
!11532 = distinct !DILexicalBlock(scope: !11533, file: !3, line: 3808, column: 3)
!11533 = distinct !DILexicalBlock(scope: !11534, file: !3, line: 3808, column: 3)
!11534 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 3808, column: 3)
!11535 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 3808, column: 3)
!11536 = distinct !DILexicalBlock(scope: !11527, file: !3, line: 3808, column: 3)
!11537 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11538)
!11538 = distinct !DILocation(line: 3800, column: 2, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 3800, column: 2)
!11540 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11538)
!11541 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11542)
!11542 = distinct !DILocation(line: 3800, column: 2, scope: !11543)
!11543 = distinct !DILexicalBlock(scope: !11544, file: !3, line: 3800, column: 2)
!11544 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3800, column: 2)
!11545 = distinct !DILexicalBlock(scope: !11546, file: !3, line: 3800, column: 2)
!11546 = distinct !DILexicalBlock(scope: !11547, file: !3, line: 3800, column: 2)
!11547 = distinct !DILexicalBlock(scope: !11539, file: !3, line: 3800, column: 2)
!11548 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11549)
!11549 = distinct !DILocation(line: 3799, column: 2, scope: !11550)
!11550 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 3799, column: 2)
!11551 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11549)
!11552 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11553)
!11553 = distinct !DILocation(line: 3799, column: 2, scope: !11554)
!11554 = distinct !DILexicalBlock(scope: !11555, file: !3, line: 3799, column: 2)
!11555 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3799, column: 2)
!11556 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 3799, column: 2)
!11557 = distinct !DILexicalBlock(scope: !11558, file: !3, line: 3799, column: 2)
!11558 = distinct !DILexicalBlock(scope: !11550, file: !3, line: 3799, column: 2)
!11559 = !DILocalVariable(name: "spi", arg: 1, scope: !11498, file: !3, line: 3784, type: !4532)
!11560 = !DILocation(line: 3784, column: 42, scope: !11498)
!11561 = !DILocalVariable(name: "message", arg: 2, scope: !11498, file: !3, line: 3784, type: !4594)
!11562 = !DILocation(line: 3784, column: 67, scope: !11498)
!11563 = !DILocalVariable(name: "done", scope: !11498, file: !3, line: 3786, type: !1643)
!11564 = !DILocation(line: 3786, column: 2, scope: !11498)
!11565 = !DILocalVariable(name: "status", scope: !11498, file: !3, line: 3787, type: !234)
!11566 = !DILocation(line: 3787, column: 6, scope: !11498)
!11567 = !DILocalVariable(name: "ctlr", scope: !11498, file: !3, line: 3788, type: !4512)
!11568 = !DILocation(line: 3788, column: 25, scope: !11498)
!11569 = !DILocation(line: 3788, column: 32, scope: !11498)
!11570 = !DILocation(line: 3788, column: 37, scope: !11498)
!11571 = !DILocalVariable(name: "flags", scope: !11498, file: !3, line: 3789, type: !388)
!11572 = !DILocation(line: 3789, column: 16, scope: !11498)
!11573 = !DILocation(line: 3791, column: 26, scope: !11498)
!11574 = !DILocation(line: 3791, column: 31, scope: !11498)
!11575 = !DILocation(line: 3791, column: 11, scope: !11498)
!11576 = !DILocation(line: 3791, column: 9, scope: !11498)
!11577 = !DILocation(line: 3792, column: 6, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11498, file: !3, line: 3792, column: 6)
!11579 = !DILocation(line: 3792, column: 13, scope: !11578)
!11580 = !DILocation(line: 3792, column: 6, scope: !11498)
!11581 = !DILocation(line: 3793, column: 10, scope: !11578)
!11582 = !DILocation(line: 3793, column: 3, scope: !11578)
!11583 = !DILocation(line: 3795, column: 2, scope: !11498)
!11584 = !DILocation(line: 3795, column: 11, scope: !11498)
!11585 = !DILocation(line: 3795, column: 20, scope: !11498)
!11586 = !DILocation(line: 3796, column: 21, scope: !11498)
!11587 = !DILocation(line: 3796, column: 2, scope: !11498)
!11588 = !DILocation(line: 3796, column: 11, scope: !11498)
!11589 = !DILocation(line: 3796, column: 19, scope: !11498)
!11590 = !DILocation(line: 3797, column: 17, scope: !11498)
!11591 = !DILocation(line: 3797, column: 2, scope: !11498)
!11592 = !DILocation(line: 3797, column: 11, scope: !11498)
!11593 = !DILocation(line: 3797, column: 15, scope: !11498)
!11594 = !DILocation(line: 3799, column: 2, scope: !11498)
!11595 = !DILocalVariable(name: "flags", scope: !11550, file: !3, line: 3799, type: !388)
!11596 = !DILocation(line: 3799, column: 2, scope: !11550)
!11597 = !DILocation(line: 3799, column: 2, scope: !11558)
!11598 = !DILocalVariable(name: "__dummy", scope: !11599, file: !3, line: 3799, type: !388)
!11599 = distinct !DILexicalBlock(scope: !11557, file: !3, line: 3799, column: 2)
!11600 = !DILocation(line: 3799, column: 2, scope: !11599)
!11601 = !DILocalVariable(name: "__dummy2", scope: !11599, file: !3, line: 3799, type: !388)
!11602 = !DILocation(line: 3799, column: 2, scope: !11557)
!11603 = !DILocation(line: 3799, column: 2, scope: !11556)
!11604 = !DILocation(line: 3799, column: 2, scope: !11605)
!11605 = distinct !DILexicalBlock(scope: !11556, file: !3, line: 3799, column: 2)
!11606 = !DILocalVariable(name: "__dummy", scope: !11607, file: !3, line: 3799, type: !388)
!11607 = distinct !DILexicalBlock(scope: !11608, file: !3, line: 3799, column: 2)
!11608 = distinct !DILexicalBlock(scope: !11605, file: !3, line: 3799, column: 2)
!11609 = !DILocation(line: 3799, column: 2, scope: !11607)
!11610 = !DILocalVariable(name: "__dummy2", scope: !11607, file: !3, line: 3799, type: !388)
!11611 = !DILocation(line: 3799, column: 2, scope: !11608)
!11612 = !DILocation(line: 3799, column: 2, scope: !11555)
!11613 = !{i32 -2140384481}
!11614 = !DILocation(line: 3799, column: 2, scope: !11554)
!11615 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11553)
!11616 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11553)
!11617 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11549)
!11618 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11549)
!11619 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11549)
!11620 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11549)
!11621 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11549)
!11622 = !DILocation(line: 3800, column: 2, scope: !11498)
!11623 = !DILocalVariable(name: "flags", scope: !11539, file: !3, line: 3800, type: !388)
!11624 = !DILocation(line: 3800, column: 2, scope: !11539)
!11625 = !DILocation(line: 3800, column: 2, scope: !11547)
!11626 = !DILocalVariable(name: "__dummy", scope: !11627, file: !3, line: 3800, type: !388)
!11627 = distinct !DILexicalBlock(scope: !11546, file: !3, line: 3800, column: 2)
!11628 = !DILocation(line: 3800, column: 2, scope: !11627)
!11629 = !DILocalVariable(name: "__dummy2", scope: !11627, file: !3, line: 3800, type: !388)
!11630 = !DILocation(line: 3800, column: 2, scope: !11546)
!11631 = !DILocation(line: 3800, column: 2, scope: !11545)
!11632 = !DILocation(line: 3800, column: 2, scope: !11633)
!11633 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 3800, column: 2)
!11634 = !DILocalVariable(name: "__dummy", scope: !11635, file: !3, line: 3800, type: !388)
!11635 = distinct !DILexicalBlock(scope: !11636, file: !3, line: 3800, column: 2)
!11636 = distinct !DILexicalBlock(scope: !11633, file: !3, line: 3800, column: 2)
!11637 = !DILocation(line: 3800, column: 2, scope: !11635)
!11638 = !DILocalVariable(name: "__dummy2", scope: !11635, file: !3, line: 3800, type: !388)
!11639 = !DILocation(line: 3800, column: 2, scope: !11636)
!11640 = !DILocation(line: 3800, column: 2, scope: !11544)
!11641 = !{i32 -2140383033}
!11642 = !DILocation(line: 3800, column: 2, scope: !11543)
!11643 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11542)
!11644 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11542)
!11645 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11538)
!11646 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11538)
!11647 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11538)
!11648 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11538)
!11649 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11538)
!11650 = !DILocation(line: 3807, column: 6, scope: !11528)
!11651 = !DILocation(line: 3807, column: 12, scope: !11528)
!11652 = !DILocation(line: 3807, column: 21, scope: !11528)
!11653 = !DILocation(line: 3807, column: 6, scope: !11498)
!11654 = !DILocation(line: 3808, column: 3, scope: !11527)
!11655 = !DILocation(line: 3808, column: 3, scope: !11536)
!11656 = !DILocalVariable(name: "__dummy", scope: !11657, file: !3, line: 3808, type: !388)
!11657 = distinct !DILexicalBlock(scope: !11535, file: !3, line: 3808, column: 3)
!11658 = !DILocation(line: 3808, column: 3, scope: !11657)
!11659 = !DILocalVariable(name: "__dummy2", scope: !11657, file: !3, line: 3808, type: !388)
!11660 = !DILocation(line: 3808, column: 3, scope: !11535)
!11661 = !DILocation(line: 3808, column: 3, scope: !11534)
!11662 = !DILocation(line: 3808, column: 3, scope: !11663)
!11663 = distinct !DILexicalBlock(scope: !11534, file: !3, line: 3808, column: 3)
!11664 = !DILocalVariable(name: "__dummy", scope: !11665, file: !3, line: 3808, type: !388)
!11665 = distinct !DILexicalBlock(scope: !11666, file: !3, line: 3808, column: 3)
!11666 = distinct !DILexicalBlock(scope: !11663, file: !3, line: 3808, column: 3)
!11667 = !DILocation(line: 3808, column: 3, scope: !11665)
!11668 = !DILocalVariable(name: "__dummy2", scope: !11665, file: !3, line: 3808, type: !388)
!11669 = !DILocation(line: 3808, column: 3, scope: !11666)
!11670 = !DILocation(line: 3808, column: 3, scope: !11533)
!11671 = !{i32 -2140381917}
!11672 = !DILocation(line: 3808, column: 3, scope: !11532)
!11673 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11531)
!11674 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11531)
!11675 = !DILocation(line: 3810, column: 28, scope: !11527)
!11676 = !DILocation(line: 3810, column: 3, scope: !11527)
!11677 = !DILocation(line: 3812, column: 34, scope: !11527)
!11678 = !DILocation(line: 3812, column: 39, scope: !11527)
!11679 = !DILocation(line: 3812, column: 12, scope: !11527)
!11680 = !DILocation(line: 3812, column: 10, scope: !11527)
!11681 = !DILocation(line: 3814, column: 27, scope: !11527)
!11682 = !DILocation(line: 3814, column: 33, scope: !11527)
!11683 = !DILocation(line: 3814, column: 52, scope: !11527)
!11684 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11526)
!11685 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11526)
!11686 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11526)
!11687 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11526)
!11688 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11526)
!11689 = !DILocation(line: 3815, column: 2, scope: !11527)
!11690 = !DILocation(line: 3816, column: 29, scope: !11691)
!11691 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 3815, column: 9)
!11692 = !DILocation(line: 3816, column: 34, scope: !11691)
!11693 = !DILocation(line: 3816, column: 12, scope: !11691)
!11694 = !DILocation(line: 3816, column: 10, scope: !11691)
!11695 = !DILocation(line: 3819, column: 6, scope: !11505)
!11696 = !DILocation(line: 3819, column: 13, scope: !11505)
!11697 = !DILocation(line: 3819, column: 6, scope: !11498)
!11698 = !DILocation(line: 3823, column: 7, scope: !11503)
!11699 = !DILocation(line: 3823, column: 13, scope: !11503)
!11700 = !DILocation(line: 3823, column: 22, scope: !11503)
!11701 = !DILocation(line: 3823, column: 7, scope: !11504)
!11702 = !DILocation(line: 3824, column: 4, scope: !11502)
!11703 = !DILocalVariable(name: "flags", scope: !11516, file: !3, line: 3824, type: !388)
!11704 = !DILocation(line: 3824, column: 4, scope: !11516)
!11705 = !DILocation(line: 3824, column: 4, scope: !11524)
!11706 = !DILocalVariable(name: "__dummy", scope: !11707, file: !3, line: 3824, type: !388)
!11707 = distinct !DILexicalBlock(scope: !11523, file: !3, line: 3824, column: 4)
!11708 = !DILocation(line: 3824, column: 4, scope: !11707)
!11709 = !DILocalVariable(name: "__dummy2", scope: !11707, file: !3, line: 3824, type: !388)
!11710 = !DILocation(line: 3824, column: 4, scope: !11523)
!11711 = !DILocation(line: 3824, column: 4, scope: !11522)
!11712 = !DILocation(line: 3824, column: 4, scope: !11713)
!11713 = distinct !DILexicalBlock(scope: !11522, file: !3, line: 3824, column: 4)
!11714 = !DILocalVariable(name: "__dummy", scope: !11715, file: !3, line: 3824, type: !388)
!11715 = distinct !DILexicalBlock(scope: !11716, file: !3, line: 3824, column: 4)
!11716 = distinct !DILexicalBlock(scope: !11713, file: !3, line: 3824, column: 4)
!11717 = !DILocation(line: 3824, column: 4, scope: !11715)
!11718 = !DILocalVariable(name: "__dummy2", scope: !11715, file: !3, line: 3824, type: !388)
!11719 = !DILocation(line: 3824, column: 4, scope: !11716)
!11720 = !DILocation(line: 3824, column: 4, scope: !11521)
!11721 = !{i32 -2140380448}
!11722 = !DILocation(line: 3824, column: 4, scope: !11520)
!11723 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11519)
!11724 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11519)
!11725 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11515)
!11726 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11515)
!11727 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11515)
!11728 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11515)
!11729 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11515)
!11730 = !DILocation(line: 3826, column: 4, scope: !11502)
!11731 = !DILocalVariable(name: "flags", scope: !11501, file: !3, line: 3826, type: !388)
!11732 = !DILocation(line: 3826, column: 4, scope: !11501)
!11733 = !DILocation(line: 3826, column: 4, scope: !11513)
!11734 = !DILocalVariable(name: "__dummy", scope: !11735, file: !3, line: 3826, type: !388)
!11735 = distinct !DILexicalBlock(scope: !11512, file: !3, line: 3826, column: 4)
!11736 = !DILocation(line: 3826, column: 4, scope: !11735)
!11737 = !DILocalVariable(name: "__dummy2", scope: !11735, file: !3, line: 3826, type: !388)
!11738 = !DILocation(line: 3826, column: 4, scope: !11512)
!11739 = !DILocation(line: 3826, column: 4, scope: !11511)
!11740 = !DILocation(line: 3826, column: 4, scope: !11741)
!11741 = distinct !DILexicalBlock(scope: !11511, file: !3, line: 3826, column: 4)
!11742 = !DILocalVariable(name: "__dummy", scope: !11743, file: !3, line: 3826, type: !388)
!11743 = distinct !DILexicalBlock(scope: !11744, file: !3, line: 3826, column: 4)
!11744 = distinct !DILexicalBlock(scope: !11741, file: !3, line: 3826, column: 4)
!11745 = !DILocation(line: 3826, column: 4, scope: !11743)
!11746 = !DILocalVariable(name: "__dummy2", scope: !11743, file: !3, line: 3826, type: !388)
!11747 = !DILocation(line: 3826, column: 4, scope: !11744)
!11748 = !DILocation(line: 3826, column: 4, scope: !11510)
!11749 = !{i32 -2140378980}
!11750 = !DILocation(line: 3826, column: 4, scope: !11509)
!11751 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11508)
!11752 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11508)
!11753 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11500)
!11754 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11500)
!11755 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11500)
!11756 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11500)
!11757 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11500)
!11758 = !DILocation(line: 3828, column: 24, scope: !11502)
!11759 = !DILocation(line: 3828, column: 4, scope: !11502)
!11760 = !DILocation(line: 3829, column: 3, scope: !11502)
!11761 = !DILocation(line: 3831, column: 3, scope: !11504)
!11762 = !DILocation(line: 3832, column: 12, scope: !11504)
!11763 = !DILocation(line: 3832, column: 21, scope: !11504)
!11764 = !DILocation(line: 3832, column: 10, scope: !11504)
!11765 = !DILocation(line: 3833, column: 2, scope: !11504)
!11766 = !DILocation(line: 3834, column: 2, scope: !11498)
!11767 = !DILocation(line: 3834, column: 11, scope: !11498)
!11768 = !DILocation(line: 3834, column: 19, scope: !11498)
!11769 = !DILocation(line: 3835, column: 9, scope: !11498)
!11770 = !DILocation(line: 3835, column: 2, scope: !11498)
!11771 = !DILocation(line: 3836, column: 1, scope: !11498)
!11772 = distinct !DISubprogram(name: "spi_sync_locked", scope: !3, file: !3, line: 3887, type: !4592, scopeLine: 3888, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!11773 = !DILocalVariable(name: "spi", arg: 1, scope: !11772, file: !3, line: 3887, type: !4532)
!11774 = !DILocation(line: 3887, column: 40, scope: !11772)
!11775 = !DILocalVariable(name: "message", arg: 2, scope: !11772, file: !3, line: 3887, type: !4594)
!11776 = !DILocation(line: 3887, column: 65, scope: !11772)
!11777 = !DILocation(line: 3889, column: 20, scope: !11772)
!11778 = !DILocation(line: 3889, column: 25, scope: !11772)
!11779 = !DILocation(line: 3889, column: 9, scope: !11772)
!11780 = !DILocation(line: 3889, column: 2, scope: !11772)
!11781 = distinct !DISubprogram(name: "spi_bus_lock", scope: !3, file: !3, line: 3908, type: !4703, scopeLine: 3909, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!11782 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !11783)
!11783 = distinct !DILocation(line: 3916, column: 2, scope: !11781)
!11784 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !11783)
!11785 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !11786)
!11786 = distinct !DILocation(line: 3914, column: 2, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11788, file: !3, line: 3914, column: 2)
!11788 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3914, column: 2)
!11789 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 3914, column: 2)
!11790 = distinct !DILexicalBlock(scope: !11791, file: !3, line: 3914, column: 2)
!11791 = distinct !DILexicalBlock(scope: !11781, file: !3, line: 3914, column: 2)
!11792 = !DILocalVariable(name: "ctlr", arg: 1, scope: !11781, file: !3, line: 3908, type: !4512)
!11793 = !DILocation(line: 3908, column: 41, scope: !11781)
!11794 = !DILocalVariable(name: "flags", scope: !11781, file: !3, line: 3910, type: !388)
!11795 = !DILocation(line: 3910, column: 16, scope: !11781)
!11796 = !DILocation(line: 3912, column: 14, scope: !11781)
!11797 = !DILocation(line: 3912, column: 20, scope: !11781)
!11798 = !DILocation(line: 3912, column: 2, scope: !11781)
!11799 = !DILocation(line: 3914, column: 2, scope: !11781)
!11800 = !DILocation(line: 3914, column: 2, scope: !11791)
!11801 = !DILocalVariable(name: "__dummy", scope: !11802, file: !3, line: 3914, type: !388)
!11802 = distinct !DILexicalBlock(scope: !11790, file: !3, line: 3914, column: 2)
!11803 = !DILocation(line: 3914, column: 2, scope: !11802)
!11804 = !DILocalVariable(name: "__dummy2", scope: !11802, file: !3, line: 3914, type: !388)
!11805 = !DILocation(line: 3914, column: 2, scope: !11790)
!11806 = !DILocation(line: 3914, column: 2, scope: !11789)
!11807 = !DILocation(line: 3914, column: 2, scope: !11808)
!11808 = distinct !DILexicalBlock(scope: !11789, file: !3, line: 3914, column: 2)
!11809 = !DILocalVariable(name: "__dummy", scope: !11810, file: !3, line: 3914, type: !388)
!11810 = distinct !DILexicalBlock(scope: !11811, file: !3, line: 3914, column: 2)
!11811 = distinct !DILexicalBlock(scope: !11808, file: !3, line: 3914, column: 2)
!11812 = !DILocation(line: 3914, column: 2, scope: !11810)
!11813 = !DILocalVariable(name: "__dummy2", scope: !11810, file: !3, line: 3914, type: !388)
!11814 = !DILocation(line: 3914, column: 2, scope: !11811)
!11815 = !DILocation(line: 3914, column: 2, scope: !11788)
!11816 = !{i32 -2140377672}
!11817 = !DILocation(line: 3914, column: 2, scope: !11787)
!11818 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !11786)
!11819 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !11786)
!11820 = !DILocation(line: 3915, column: 2, scope: !11781)
!11821 = !DILocation(line: 3915, column: 8, scope: !11781)
!11822 = !DILocation(line: 3915, column: 22, scope: !11781)
!11823 = !DILocation(line: 3916, column: 26, scope: !11781)
!11824 = !DILocation(line: 3916, column: 32, scope: !11781)
!11825 = !DILocation(line: 3916, column: 51, scope: !11781)
!11826 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !11783)
!11827 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !11783)
!11828 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !11783)
!11829 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !11783)
!11830 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !11783)
!11831 = !DILocation(line: 3920, column: 2, scope: !11781)
!11832 = distinct !DISubprogram(name: "spi_bus_unlock", scope: !3, file: !3, line: 3937, type: !4703, scopeLine: 3938, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!11833 = !DILocalVariable(name: "ctlr", arg: 1, scope: !11832, file: !3, line: 3937, type: !4512)
!11834 = !DILocation(line: 3937, column: 43, scope: !11832)
!11835 = !DILocation(line: 3939, column: 2, scope: !11832)
!11836 = !DILocation(line: 3939, column: 8, scope: !11832)
!11837 = !DILocation(line: 3939, column: 22, scope: !11832)
!11838 = !DILocation(line: 3941, column: 16, scope: !11832)
!11839 = !DILocation(line: 3941, column: 22, scope: !11832)
!11840 = !DILocation(line: 3941, column: 2, scope: !11832)
!11841 = !DILocation(line: 3943, column: 2, scope: !11832)
!11842 = !DILocation(line: 445, column: 72, scope: !5941, inlinedAt: !11843)
!11843 = distinct !DILocation(line: 552, column: 10, scope: !5946, inlinedAt: !11844)
!11844 = distinct !DILocation(line: 3989, column: 15, scope: !11845)
!11845 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 3988, column: 59)
!11846 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 3988, column: 6)
!11847 = !DILocation(line: 446, column: 9, scope: !5941, inlinedAt: !11843)
!11848 = !DILocation(line: 446, column: 23, scope: !5941, inlinedAt: !11843)
!11849 = !DILocation(line: 448, column: 8, scope: !5941, inlinedAt: !11843)
!11850 = !DILocation(line: 318, column: 67, scope: !5957, inlinedAt: !11851)
!11851 = distinct !DILocation(line: 553, column: 20, scope: !5946, inlinedAt: !11844)
!11852 = !DILocation(line: 346, column: 58, scope: !5963, inlinedAt: !11853)
!11853 = distinct !DILocation(line: 547, column: 11, scope: !5946, inlinedAt: !11844)
!11854 = !DILocation(line: 472, column: 28, scope: !5969, inlinedAt: !11855)
!11855 = distinct !DILocation(line: 481, column: 9, scope: !5974, inlinedAt: !11856)
!11856 = distinct !DILocation(line: 545, column: 11, scope: !5976, inlinedAt: !11844)
!11857 = !DILocation(line: 472, column: 40, scope: !5969, inlinedAt: !11855)
!11858 = !DILocation(line: 472, column: 60, scope: !5969, inlinedAt: !11855)
!11859 = !DILocation(line: 478, column: 51, scope: !5974, inlinedAt: !11856)
!11860 = !DILocation(line: 478, column: 63, scope: !5974, inlinedAt: !11856)
!11861 = !DILocation(line: 480, column: 15, scope: !5974, inlinedAt: !11856)
!11862 = !DILocation(line: 538, column: 45, scope: !5948, inlinedAt: !11844)
!11863 = !DILocation(line: 538, column: 57, scope: !5948, inlinedAt: !11844)
!11864 = !DILocation(line: 542, column: 16, scope: !5946, inlinedAt: !11844)
!11865 = !DILocalVariable(name: "spi", arg: 1, scope: !5215, file: !3, line: 3972, type: !4532)
!11866 = !DILocation(line: 3972, column: 44, scope: !5215)
!11867 = !DILocalVariable(name: "txbuf", arg: 2, scope: !5215, file: !3, line: 3973, type: !269)
!11868 = !DILocation(line: 3973, column: 15, scope: !5215)
!11869 = !DILocalVariable(name: "n_tx", arg: 3, scope: !5215, file: !3, line: 3973, type: !7)
!11870 = !DILocation(line: 3973, column: 31, scope: !5215)
!11871 = !DILocalVariable(name: "rxbuf", arg: 4, scope: !5215, file: !3, line: 3974, type: !228)
!11872 = !DILocation(line: 3974, column: 9, scope: !5215)
!11873 = !DILocalVariable(name: "n_rx", arg: 5, scope: !5215, file: !3, line: 3974, type: !7)
!11874 = !DILocation(line: 3974, column: 25, scope: !5215)
!11875 = !DILocalVariable(name: "status", scope: !5215, file: !3, line: 3978, type: !234)
!11876 = !DILocation(line: 3978, column: 8, scope: !5215)
!11877 = !DILocalVariable(name: "message", scope: !5215, file: !3, line: 3979, type: !4595)
!11878 = !DILocation(line: 3979, column: 21, scope: !5215)
!11879 = !DILocalVariable(name: "x", scope: !5215, file: !3, line: 3980, type: !11880)
!11880 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4617, size: 2304, elements: !1710)
!11881 = !DILocation(line: 3980, column: 22, scope: !5215)
!11882 = !DILocalVariable(name: "local_buf", scope: !5215, file: !3, line: 3981, type: !4307)
!11883 = !DILocation(line: 3981, column: 8, scope: !5215)
!11884 = !DILocation(line: 3988, column: 7, scope: !11846)
!11885 = !DILocation(line: 3988, column: 14, scope: !11846)
!11886 = !DILocation(line: 3988, column: 12, scope: !11846)
!11887 = !DILocation(line: 3988, column: 20, scope: !11846)
!11888 = !DILocation(line: 3988, column: 33, scope: !11846)
!11889 = !DILocation(line: 3988, column: 37, scope: !11846)
!11890 = !DILocation(line: 3988, column: 6, scope: !5215)
!11891 = !DILocalVariable(name: "__UNIQUE_ID___x375", scope: !11892, file: !3, line: 3989, type: !7)
!11892 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 3989, column: 23)
!11893 = !DILocation(line: 3989, column: 23, scope: !11892)
!11894 = !DILocalVariable(name: "__UNIQUE_ID___y376", scope: !11892, file: !3, line: 3989, type: !7)
!11895 = !DILocation(line: 3989, column: 23, scope: !11845)
!11896 = !DILocation(line: 540, column: 27, scope: !5947, inlinedAt: !11844)
!11897 = !DILocation(line: 540, column: 6, scope: !5947, inlinedAt: !11844)
!11898 = !DILocation(line: 540, column: 6, scope: !5948, inlinedAt: !11844)
!11899 = !DILocation(line: 544, column: 7, scope: !5976, inlinedAt: !11844)
!11900 = !DILocation(line: 544, column: 12, scope: !5976, inlinedAt: !11844)
!11901 = !DILocation(line: 544, column: 7, scope: !5946, inlinedAt: !11844)
!11902 = !DILocation(line: 545, column: 25, scope: !5976, inlinedAt: !11844)
!11903 = !DILocation(line: 545, column: 31, scope: !5976, inlinedAt: !11844)
!11904 = !DILocation(line: 480, column: 33, scope: !5974, inlinedAt: !11856)
!11905 = !DILocation(line: 480, column: 23, scope: !5974, inlinedAt: !11856)
!11906 = !DILocation(line: 481, column: 29, scope: !5974, inlinedAt: !11856)
!11907 = !DILocation(line: 481, column: 35, scope: !5974, inlinedAt: !11856)
!11908 = !DILocation(line: 481, column: 42, scope: !5974, inlinedAt: !11856)
!11909 = !DILocation(line: 474, column: 23, scope: !5969, inlinedAt: !11855)
!11910 = !DILocation(line: 474, column: 29, scope: !5969, inlinedAt: !11855)
!11911 = !DILocation(line: 474, column: 36, scope: !5969, inlinedAt: !11855)
!11912 = !DILocation(line: 474, column: 9, scope: !5969, inlinedAt: !11855)
!11913 = !DILocation(line: 545, column: 4, scope: !5976, inlinedAt: !11844)
!11914 = !DILocation(line: 547, column: 25, scope: !5946, inlinedAt: !11844)
!11915 = !DILocation(line: 348, column: 7, scope: !6020, inlinedAt: !11853)
!11916 = !DILocation(line: 348, column: 6, scope: !5963, inlinedAt: !11853)
!11917 = !DILocation(line: 349, column: 3, scope: !6020, inlinedAt: !11853)
!11918 = !DILocation(line: 351, column: 6, scope: !6024, inlinedAt: !11853)
!11919 = !DILocation(line: 351, column: 11, scope: !6024, inlinedAt: !11853)
!11920 = !DILocation(line: 351, column: 6, scope: !5963, inlinedAt: !11853)
!11921 = !DILocation(line: 352, column: 3, scope: !6024, inlinedAt: !11853)
!11922 = !DILocation(line: 354, column: 32, scope: !6029, inlinedAt: !11853)
!11923 = !DILocation(line: 354, column: 37, scope: !6029, inlinedAt: !11853)
!11924 = !DILocation(line: 354, column: 42, scope: !6029, inlinedAt: !11853)
!11925 = !DILocation(line: 354, column: 45, scope: !6029, inlinedAt: !11853)
!11926 = !DILocation(line: 354, column: 50, scope: !6029, inlinedAt: !11853)
!11927 = !DILocation(line: 354, column: 6, scope: !5963, inlinedAt: !11853)
!11928 = !DILocation(line: 355, column: 3, scope: !6029, inlinedAt: !11853)
!11929 = !DILocation(line: 356, column: 32, scope: !6037, inlinedAt: !11853)
!11930 = !DILocation(line: 356, column: 37, scope: !6037, inlinedAt: !11853)
!11931 = !DILocation(line: 356, column: 43, scope: !6037, inlinedAt: !11853)
!11932 = !DILocation(line: 356, column: 46, scope: !6037, inlinedAt: !11853)
!11933 = !DILocation(line: 356, column: 51, scope: !6037, inlinedAt: !11853)
!11934 = !DILocation(line: 356, column: 6, scope: !5963, inlinedAt: !11853)
!11935 = !DILocation(line: 357, column: 3, scope: !6037, inlinedAt: !11853)
!11936 = !DILocation(line: 358, column: 6, scope: !6045, inlinedAt: !11853)
!11937 = !DILocation(line: 358, column: 11, scope: !6045, inlinedAt: !11853)
!11938 = !DILocation(line: 358, column: 6, scope: !5963, inlinedAt: !11853)
!11939 = !DILocation(line: 358, column: 26, scope: !6045, inlinedAt: !11853)
!11940 = !DILocation(line: 359, column: 6, scope: !6050, inlinedAt: !11853)
!11941 = !DILocation(line: 359, column: 11, scope: !6050, inlinedAt: !11853)
!11942 = !DILocation(line: 359, column: 6, scope: !5963, inlinedAt: !11853)
!11943 = !DILocation(line: 359, column: 26, scope: !6050, inlinedAt: !11853)
!11944 = !DILocation(line: 360, column: 6, scope: !6055, inlinedAt: !11853)
!11945 = !DILocation(line: 360, column: 11, scope: !6055, inlinedAt: !11853)
!11946 = !DILocation(line: 360, column: 6, scope: !5963, inlinedAt: !11853)
!11947 = !DILocation(line: 360, column: 26, scope: !6055, inlinedAt: !11853)
!11948 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !11853)
!11949 = !DILocation(line: 361, column: 11, scope: !6060, inlinedAt: !11853)
!11950 = !DILocation(line: 361, column: 6, scope: !5963, inlinedAt: !11853)
!11951 = !DILocation(line: 361, column: 26, scope: !6060, inlinedAt: !11853)
!11952 = !DILocation(line: 362, column: 6, scope: !6065, inlinedAt: !11853)
!11953 = !DILocation(line: 362, column: 11, scope: !6065, inlinedAt: !11853)
!11954 = !DILocation(line: 362, column: 6, scope: !5963, inlinedAt: !11853)
!11955 = !DILocation(line: 362, column: 26, scope: !6065, inlinedAt: !11853)
!11956 = !DILocation(line: 363, column: 6, scope: !6070, inlinedAt: !11853)
!11957 = !DILocation(line: 363, column: 11, scope: !6070, inlinedAt: !11853)
!11958 = !DILocation(line: 363, column: 6, scope: !5963, inlinedAt: !11853)
!11959 = !DILocation(line: 363, column: 26, scope: !6070, inlinedAt: !11853)
!11960 = !DILocation(line: 364, column: 6, scope: !6075, inlinedAt: !11853)
!11961 = !DILocation(line: 364, column: 11, scope: !6075, inlinedAt: !11853)
!11962 = !DILocation(line: 364, column: 6, scope: !5963, inlinedAt: !11853)
!11963 = !DILocation(line: 364, column: 26, scope: !6075, inlinedAt: !11853)
!11964 = !DILocation(line: 365, column: 6, scope: !6080, inlinedAt: !11853)
!11965 = !DILocation(line: 365, column: 11, scope: !6080, inlinedAt: !11853)
!11966 = !DILocation(line: 365, column: 6, scope: !5963, inlinedAt: !11853)
!11967 = !DILocation(line: 365, column: 26, scope: !6080, inlinedAt: !11853)
!11968 = !DILocation(line: 366, column: 6, scope: !6085, inlinedAt: !11853)
!11969 = !DILocation(line: 366, column: 11, scope: !6085, inlinedAt: !11853)
!11970 = !DILocation(line: 366, column: 6, scope: !5963, inlinedAt: !11853)
!11971 = !DILocation(line: 366, column: 26, scope: !6085, inlinedAt: !11853)
!11972 = !DILocation(line: 367, column: 6, scope: !6090, inlinedAt: !11853)
!11973 = !DILocation(line: 367, column: 11, scope: !6090, inlinedAt: !11853)
!11974 = !DILocation(line: 367, column: 6, scope: !5963, inlinedAt: !11853)
!11975 = !DILocation(line: 367, column: 26, scope: !6090, inlinedAt: !11853)
!11976 = !DILocation(line: 368, column: 6, scope: !6095, inlinedAt: !11853)
!11977 = !DILocation(line: 368, column: 11, scope: !6095, inlinedAt: !11853)
!11978 = !DILocation(line: 368, column: 6, scope: !5963, inlinedAt: !11853)
!11979 = !DILocation(line: 368, column: 26, scope: !6095, inlinedAt: !11853)
!11980 = !DILocation(line: 369, column: 6, scope: !6100, inlinedAt: !11853)
!11981 = !DILocation(line: 369, column: 11, scope: !6100, inlinedAt: !11853)
!11982 = !DILocation(line: 369, column: 6, scope: !5963, inlinedAt: !11853)
!11983 = !DILocation(line: 369, column: 26, scope: !6100, inlinedAt: !11853)
!11984 = !DILocation(line: 370, column: 6, scope: !6105, inlinedAt: !11853)
!11985 = !DILocation(line: 370, column: 11, scope: !6105, inlinedAt: !11853)
!11986 = !DILocation(line: 370, column: 6, scope: !5963, inlinedAt: !11853)
!11987 = !DILocation(line: 370, column: 26, scope: !6105, inlinedAt: !11853)
!11988 = !DILocation(line: 371, column: 6, scope: !6110, inlinedAt: !11853)
!11989 = !DILocation(line: 371, column: 11, scope: !6110, inlinedAt: !11853)
!11990 = !DILocation(line: 371, column: 6, scope: !5963, inlinedAt: !11853)
!11991 = !DILocation(line: 371, column: 26, scope: !6110, inlinedAt: !11853)
!11992 = !DILocation(line: 372, column: 6, scope: !6115, inlinedAt: !11853)
!11993 = !DILocation(line: 372, column: 11, scope: !6115, inlinedAt: !11853)
!11994 = !DILocation(line: 372, column: 6, scope: !5963, inlinedAt: !11853)
!11995 = !DILocation(line: 372, column: 26, scope: !6115, inlinedAt: !11853)
!11996 = !DILocation(line: 373, column: 6, scope: !6120, inlinedAt: !11853)
!11997 = !DILocation(line: 373, column: 11, scope: !6120, inlinedAt: !11853)
!11998 = !DILocation(line: 373, column: 6, scope: !5963, inlinedAt: !11853)
!11999 = !DILocation(line: 373, column: 26, scope: !6120, inlinedAt: !11853)
!12000 = !DILocation(line: 374, column: 6, scope: !6125, inlinedAt: !11853)
!12001 = !DILocation(line: 374, column: 11, scope: !6125, inlinedAt: !11853)
!12002 = !DILocation(line: 374, column: 6, scope: !5963, inlinedAt: !11853)
!12003 = !DILocation(line: 374, column: 26, scope: !6125, inlinedAt: !11853)
!12004 = !DILocation(line: 375, column: 6, scope: !6130, inlinedAt: !11853)
!12005 = !DILocation(line: 375, column: 11, scope: !6130, inlinedAt: !11853)
!12006 = !DILocation(line: 375, column: 6, scope: !5963, inlinedAt: !11853)
!12007 = !DILocation(line: 375, column: 27, scope: !6130, inlinedAt: !11853)
!12008 = !DILocation(line: 376, column: 6, scope: !6135, inlinedAt: !11853)
!12009 = !DILocation(line: 376, column: 11, scope: !6135, inlinedAt: !11853)
!12010 = !DILocation(line: 376, column: 6, scope: !5963, inlinedAt: !11853)
!12011 = !DILocation(line: 376, column: 32, scope: !6135, inlinedAt: !11853)
!12012 = !DILocation(line: 377, column: 6, scope: !6140, inlinedAt: !11853)
!12013 = !DILocation(line: 377, column: 11, scope: !6140, inlinedAt: !11853)
!12014 = !DILocation(line: 377, column: 6, scope: !5963, inlinedAt: !11853)
!12015 = !DILocation(line: 377, column: 32, scope: !6140, inlinedAt: !11853)
!12016 = !DILocation(line: 378, column: 6, scope: !6145, inlinedAt: !11853)
!12017 = !DILocation(line: 378, column: 11, scope: !6145, inlinedAt: !11853)
!12018 = !DILocation(line: 378, column: 6, scope: !5963, inlinedAt: !11853)
!12019 = !DILocation(line: 378, column: 32, scope: !6145, inlinedAt: !11853)
!12020 = !DILocation(line: 379, column: 6, scope: !6150, inlinedAt: !11853)
!12021 = !DILocation(line: 379, column: 11, scope: !6150, inlinedAt: !11853)
!12022 = !DILocation(line: 379, column: 6, scope: !5963, inlinedAt: !11853)
!12023 = !DILocation(line: 379, column: 33, scope: !6150, inlinedAt: !11853)
!12024 = !DILocation(line: 380, column: 6, scope: !6155, inlinedAt: !11853)
!12025 = !DILocation(line: 380, column: 11, scope: !6155, inlinedAt: !11853)
!12026 = !DILocation(line: 380, column: 6, scope: !5963, inlinedAt: !11853)
!12027 = !DILocation(line: 380, column: 33, scope: !6155, inlinedAt: !11853)
!12028 = !DILocation(line: 381, column: 6, scope: !6160, inlinedAt: !11853)
!12029 = !DILocation(line: 381, column: 11, scope: !6160, inlinedAt: !11853)
!12030 = !DILocation(line: 381, column: 6, scope: !5963, inlinedAt: !11853)
!12031 = !DILocation(line: 381, column: 33, scope: !6160, inlinedAt: !11853)
!12032 = !DILocation(line: 382, column: 2, scope: !6165, inlinedAt: !11853)
!12033 = !DILocation(line: 382, column: 2, scope: !6169, inlinedAt: !11853)
!12034 = !DILocation(line: 382, column: 2, scope: !6170, inlinedAt: !11853)
!12035 = !DILocation(line: 386, column: 1, scope: !5963, inlinedAt: !11853)
!12036 = !DILocation(line: 547, column: 9, scope: !5946, inlinedAt: !11844)
!12037 = !DILocation(line: 549, column: 8, scope: !6176, inlinedAt: !11844)
!12038 = !DILocation(line: 549, column: 7, scope: !5946, inlinedAt: !11844)
!12039 = !DILocation(line: 550, column: 4, scope: !6176, inlinedAt: !11844)
!12040 = !DILocation(line: 553, column: 33, scope: !5946, inlinedAt: !11844)
!12041 = !DILocation(line: 325, column: 6, scope: !6181, inlinedAt: !11851)
!12042 = !DILocation(line: 325, column: 6, scope: !5957, inlinedAt: !11851)
!12043 = !DILocation(line: 326, column: 3, scope: !6181, inlinedAt: !11851)
!12044 = !DILocation(line: 332, column: 9, scope: !5957, inlinedAt: !11851)
!12045 = !DILocation(line: 332, column: 15, scope: !5957, inlinedAt: !11851)
!12046 = !DILocation(line: 332, column: 2, scope: !5957, inlinedAt: !11851)
!12047 = !DILocation(line: 336, column: 1, scope: !5957, inlinedAt: !11851)
!12048 = !DILocation(line: 553, column: 5, scope: !5946, inlinedAt: !11844)
!12049 = !DILocation(line: 553, column: 41, scope: !5946, inlinedAt: !11844)
!12050 = !DILocation(line: 554, column: 5, scope: !5946, inlinedAt: !11844)
!12051 = !DILocation(line: 554, column: 12, scope: !5946, inlinedAt: !11844)
!12052 = !DILocation(line: 448, column: 31, scope: !5941, inlinedAt: !11843)
!12053 = !DILocation(line: 448, column: 34, scope: !5941, inlinedAt: !11843)
!12054 = !DILocation(line: 448, column: 14, scope: !5941, inlinedAt: !11843)
!12055 = !DILocation(line: 450, column: 22, scope: !5941, inlinedAt: !11843)
!12056 = !DILocation(line: 450, column: 25, scope: !5941, inlinedAt: !11843)
!12057 = !DILocation(line: 450, column: 30, scope: !5941, inlinedAt: !11843)
!12058 = !DILocation(line: 450, column: 36, scope: !5941, inlinedAt: !11843)
!12059 = !DILocation(line: 450, column: 8, scope: !5941, inlinedAt: !11843)
!12060 = !DILocation(line: 450, column: 6, scope: !5941, inlinedAt: !11843)
!12061 = !DILocation(line: 451, column: 9, scope: !5941, inlinedAt: !11843)
!12062 = !DILocation(line: 552, column: 3, scope: !5946, inlinedAt: !11844)
!12063 = !DILocation(line: 557, column: 19, scope: !5948, inlinedAt: !11844)
!12064 = !DILocation(line: 557, column: 25, scope: !5948, inlinedAt: !11844)
!12065 = !DILocation(line: 557, column: 9, scope: !5948, inlinedAt: !11844)
!12066 = !DILocation(line: 557, column: 2, scope: !5948, inlinedAt: !11844)
!12067 = !DILocation(line: 558, column: 1, scope: !5948, inlinedAt: !11844)
!12068 = !DILocation(line: 3989, column: 13, scope: !11845)
!12069 = !DILocation(line: 3991, column: 8, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !11845, file: !3, line: 3991, column: 7)
!12071 = !DILocation(line: 3991, column: 7, scope: !11845)
!12072 = !DILocation(line: 3992, column: 4, scope: !12070)
!12073 = !DILocation(line: 3993, column: 2, scope: !11845)
!12074 = !DILocation(line: 3994, column: 15, scope: !12075)
!12075 = distinct !DILexicalBlock(scope: !11846, file: !3, line: 3993, column: 9)
!12076 = !DILocation(line: 3994, column: 13, scope: !12075)
!12077 = !DILocation(line: 3997, column: 2, scope: !5215)
!12078 = !DILocation(line: 3998, column: 2, scope: !5215)
!12079 = !DILocation(line: 3999, column: 6, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 3999, column: 6)
!12081 = !DILocation(line: 3999, column: 6, scope: !5215)
!12082 = !DILocation(line: 4000, column: 14, scope: !12083)
!12083 = distinct !DILexicalBlock(scope: !12080, file: !3, line: 3999, column: 12)
!12084 = !DILocation(line: 4000, column: 3, scope: !12083)
!12085 = !DILocation(line: 4000, column: 8, scope: !12083)
!12086 = !DILocation(line: 4000, column: 12, scope: !12083)
!12087 = !DILocation(line: 4001, column: 25, scope: !12083)
!12088 = !DILocation(line: 4001, column: 3, scope: !12083)
!12089 = !DILocation(line: 4002, column: 2, scope: !12083)
!12090 = !DILocation(line: 4003, column: 6, scope: !12091)
!12091 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 4003, column: 6)
!12092 = !DILocation(line: 4003, column: 6, scope: !5215)
!12093 = !DILocation(line: 4004, column: 14, scope: !12094)
!12094 = distinct !DILexicalBlock(scope: !12091, file: !3, line: 4003, column: 12)
!12095 = !DILocation(line: 4004, column: 3, scope: !12094)
!12096 = !DILocation(line: 4004, column: 8, scope: !12094)
!12097 = !DILocation(line: 4004, column: 12, scope: !12094)
!12098 = !DILocation(line: 4005, column: 25, scope: !12094)
!12099 = !DILocation(line: 4005, column: 3, scope: !12094)
!12100 = !DILocation(line: 4006, column: 2, scope: !12094)
!12101 = !DILocation(line: 4008, column: 9, scope: !5215)
!12102 = !DILocation(line: 4008, column: 20, scope: !5215)
!12103 = !DILocation(line: 4008, column: 27, scope: !5215)
!12104 = !DILocation(line: 4008, column: 2, scope: !5215)
!12105 = !DILocation(line: 4009, column: 16, scope: !5215)
!12106 = !DILocation(line: 4009, column: 2, scope: !5215)
!12107 = !DILocation(line: 4009, column: 7, scope: !5215)
!12108 = !DILocation(line: 4009, column: 14, scope: !5215)
!12109 = !DILocation(line: 4010, column: 16, scope: !5215)
!12110 = !DILocation(line: 4010, column: 28, scope: !5215)
!12111 = !DILocation(line: 4010, column: 26, scope: !5215)
!12112 = !DILocation(line: 4010, column: 2, scope: !5215)
!12113 = !DILocation(line: 4010, column: 7, scope: !5215)
!12114 = !DILocation(line: 4010, column: 14, scope: !5215)
!12115 = !DILocation(line: 4013, column: 20, scope: !5215)
!12116 = !DILocation(line: 4013, column: 11, scope: !5215)
!12117 = !DILocation(line: 4013, column: 9, scope: !5215)
!12118 = !DILocation(line: 4014, column: 6, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 4014, column: 6)
!12120 = !DILocation(line: 4014, column: 13, scope: !12119)
!12121 = !DILocation(line: 4014, column: 6, scope: !5215)
!12122 = !DILocation(line: 4015, column: 10, scope: !12119)
!12123 = !DILocation(line: 4015, column: 17, scope: !12119)
!12124 = !DILocation(line: 4015, column: 22, scope: !12119)
!12125 = !DILocation(line: 4015, column: 30, scope: !12119)
!12126 = !DILocation(line: 4015, column: 3, scope: !12119)
!12127 = !DILocation(line: 4017, column: 6, scope: !12128)
!12128 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 4017, column: 6)
!12129 = !DILocation(line: 4017, column: 11, scope: !12128)
!12130 = !DILocation(line: 4017, column: 21, scope: !12128)
!12131 = !DILocation(line: 4017, column: 18, scope: !12128)
!12132 = !DILocation(line: 4017, column: 6, scope: !5215)
!12133 = !DILocation(line: 4018, column: 3, scope: !12128)
!12134 = !DILocation(line: 4020, column: 9, scope: !12128)
!12135 = !DILocation(line: 4020, column: 3, scope: !12128)
!12136 = !DILocation(line: 4022, column: 9, scope: !5215)
!12137 = !DILocation(line: 4022, column: 2, scope: !5215)
!12138 = !DILocation(line: 4023, column: 1, scope: !5215)
!12139 = distinct !DISubprogram(name: "spi_message_init", scope: !4514, file: !4514, line: 1041, type: !7907, scopeLine: 1042, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12140 = !DILocalVariable(name: "m", arg: 1, scope: !12139, file: !4514, line: 1041, type: !4594)
!12141 = !DILocation(line: 1041, column: 57, scope: !12139)
!12142 = !DILocation(line: 1043, column: 9, scope: !12139)
!12143 = !DILocation(line: 1043, column: 2, scope: !12139)
!12144 = !DILocation(line: 1044, column: 29, scope: !12139)
!12145 = !DILocation(line: 1044, column: 2, scope: !12139)
!12146 = !DILocation(line: 1045, column: 1, scope: !12139)
!12147 = distinct !DISubprogram(name: "spi_message_add_tail", scope: !4514, file: !4514, line: 1048, type: !12148, scopeLine: 1049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12148 = !DISubroutineType(types: !12149)
!12149 = !{null, !4616, !4594}
!12150 = !DILocalVariable(name: "t", arg: 1, scope: !12147, file: !4514, line: 1048, type: !4616)
!12151 = !DILocation(line: 1048, column: 43, scope: !12147)
!12152 = !DILocalVariable(name: "m", arg: 2, scope: !12147, file: !4514, line: 1048, type: !4594)
!12153 = !DILocation(line: 1048, column: 66, scope: !12147)
!12154 = !DILocation(line: 1050, column: 17, scope: !12147)
!12155 = !DILocation(line: 1050, column: 20, scope: !12147)
!12156 = !DILocation(line: 1050, column: 36, scope: !12147)
!12157 = !DILocation(line: 1050, column: 39, scope: !12147)
!12158 = !DILocation(line: 1050, column: 2, scope: !12147)
!12159 = !DILocation(line: 1051, column: 1, scope: !12147)
!12160 = distinct !DISubprogram(name: "of_find_spi_device_by_node", scope: !3, file: !3, line: 4030, type: !12161, scopeLine: 4031, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12161 = !DISubroutineType(types: !12162)
!12162 = !{!4532, !3803}
!12163 = !DILocalVariable(name: "node", arg: 1, scope: !12160, file: !3, line: 4030, type: !3803)
!12164 = !DILocation(line: 4030, column: 67, scope: !12160)
!12165 = !DILocalVariable(name: "dev", scope: !12160, file: !3, line: 4032, type: !3506)
!12166 = !DILocation(line: 4032, column: 17, scope: !12160)
!12167 = !DILocation(line: 4032, column: 65, scope: !12160)
!12168 = !DILocation(line: 4032, column: 23, scope: !12160)
!12169 = !DILocation(line: 4034, column: 9, scope: !12160)
!12170 = !DILocation(line: 4034, column: 29, scope: !12160)
!12171 = !DILocation(line: 4034, column: 15, scope: !12160)
!12172 = !DILocation(line: 4034, column: 2, scope: !12160)
!12173 = distinct !DISubprogram(name: "bus_find_device_by_of_node", scope: !3565, file: !3565, line: 186, type: !12174, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12174 = !DISubroutineType(types: !12175)
!12175 = !{!3506, !3563, !12176}
!12176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12177, size: 64)
!12177 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3804)
!12178 = !DILocalVariable(name: "bus", arg: 1, scope: !12173, file: !3565, line: 186, type: !3563)
!12179 = !DILocation(line: 186, column: 45, scope: !12173)
!12180 = !DILocalVariable(name: "np", arg: 2, scope: !12173, file: !3565, line: 186, type: !12176)
!12181 = !DILocation(line: 186, column: 76, scope: !12173)
!12182 = !DILocation(line: 188, column: 25, scope: !12173)
!12183 = !DILocation(line: 188, column: 36, scope: !12173)
!12184 = !DILocation(line: 188, column: 9, scope: !12173)
!12185 = !DILocation(line: 188, column: 2, scope: !12173)
!12186 = distinct !DISubprogram(name: "to_spi_device", scope: !4514, file: !4514, line: 210, type: !12187, scopeLine: 211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12187 = !DISubroutineType(types: !12188)
!12188 = !{!4532, !3506}
!12189 = !DILocalVariable(name: "dev", arg: 1, scope: !12186, file: !4514, line: 210, type: !3506)
!12190 = !DILocation(line: 210, column: 63, scope: !12186)
!12191 = !DILocation(line: 212, column: 9, scope: !12186)
!12192 = !DILocalVariable(name: "__mptr", scope: !12193, file: !4514, line: 212, type: !228)
!12193 = distinct !DILexicalBlock(scope: !12186, file: !4514, line: 212, column: 15)
!12194 = !DILocation(line: 212, column: 15, scope: !12193)
!12195 = !DILocation(line: 212, column: 15, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12193, file: !4514, line: 212, column: 15)
!12197 = !DILocation(line: 212, column: 2, scope: !12186)
!12198 = !DILocation(line: 445, column: 72, scope: !5941, inlinedAt: !12199)
!12199 = distinct !DILocation(line: 552, column: 10, scope: !5946, inlinedAt: !12200)
!12200 = distinct !DILocation(line: 4184, column: 8, scope: !5393)
!12201 = !DILocation(line: 446, column: 9, scope: !5941, inlinedAt: !12199)
!12202 = !DILocation(line: 446, column: 23, scope: !5941, inlinedAt: !12199)
!12203 = !DILocation(line: 448, column: 8, scope: !5941, inlinedAt: !12199)
!12204 = !DILocation(line: 318, column: 67, scope: !5957, inlinedAt: !12205)
!12205 = distinct !DILocation(line: 553, column: 20, scope: !5946, inlinedAt: !12200)
!12206 = !DILocation(line: 346, column: 58, scope: !5963, inlinedAt: !12207)
!12207 = distinct !DILocation(line: 547, column: 11, scope: !5946, inlinedAt: !12200)
!12208 = !DILocation(line: 472, column: 28, scope: !5969, inlinedAt: !12209)
!12209 = distinct !DILocation(line: 481, column: 9, scope: !5974, inlinedAt: !12210)
!12210 = distinct !DILocation(line: 545, column: 11, scope: !5976, inlinedAt: !12200)
!12211 = !DILocation(line: 472, column: 40, scope: !5969, inlinedAt: !12209)
!12212 = !DILocation(line: 472, column: 60, scope: !5969, inlinedAt: !12209)
!12213 = !DILocation(line: 478, column: 51, scope: !5974, inlinedAt: !12210)
!12214 = !DILocation(line: 478, column: 63, scope: !5974, inlinedAt: !12210)
!12215 = !DILocation(line: 480, column: 15, scope: !5974, inlinedAt: !12210)
!12216 = !DILocation(line: 538, column: 45, scope: !5948, inlinedAt: !12200)
!12217 = !DILocation(line: 538, column: 57, scope: !5948, inlinedAt: !12200)
!12218 = !DILocation(line: 542, column: 16, scope: !5946, inlinedAt: !12200)
!12219 = !DILocalVariable(name: "status", scope: !5393, file: !3, line: 4182, type: !234)
!12220 = !DILocation(line: 4182, column: 6, scope: !5393)
!12221 = !DILocation(line: 540, column: 27, scope: !5947, inlinedAt: !12200)
!12222 = !DILocation(line: 540, column: 6, scope: !5947, inlinedAt: !12200)
!12223 = !DILocation(line: 540, column: 6, scope: !5948, inlinedAt: !12200)
!12224 = !DILocation(line: 544, column: 7, scope: !5976, inlinedAt: !12200)
!12225 = !DILocation(line: 544, column: 12, scope: !5976, inlinedAt: !12200)
!12226 = !DILocation(line: 544, column: 7, scope: !5946, inlinedAt: !12200)
!12227 = !DILocation(line: 545, column: 25, scope: !5976, inlinedAt: !12200)
!12228 = !DILocation(line: 545, column: 31, scope: !5976, inlinedAt: !12200)
!12229 = !DILocation(line: 480, column: 33, scope: !5974, inlinedAt: !12210)
!12230 = !DILocation(line: 480, column: 23, scope: !5974, inlinedAt: !12210)
!12231 = !DILocation(line: 481, column: 29, scope: !5974, inlinedAt: !12210)
!12232 = !DILocation(line: 481, column: 35, scope: !5974, inlinedAt: !12210)
!12233 = !DILocation(line: 481, column: 42, scope: !5974, inlinedAt: !12210)
!12234 = !DILocation(line: 474, column: 23, scope: !5969, inlinedAt: !12209)
!12235 = !DILocation(line: 474, column: 29, scope: !5969, inlinedAt: !12209)
!12236 = !DILocation(line: 474, column: 36, scope: !5969, inlinedAt: !12209)
!12237 = !DILocation(line: 474, column: 9, scope: !5969, inlinedAt: !12209)
!12238 = !DILocation(line: 545, column: 4, scope: !5976, inlinedAt: !12200)
!12239 = !DILocation(line: 547, column: 25, scope: !5946, inlinedAt: !12200)
!12240 = !DILocation(line: 348, column: 7, scope: !6020, inlinedAt: !12207)
!12241 = !DILocation(line: 348, column: 6, scope: !5963, inlinedAt: !12207)
!12242 = !DILocation(line: 349, column: 3, scope: !6020, inlinedAt: !12207)
!12243 = !DILocation(line: 351, column: 6, scope: !6024, inlinedAt: !12207)
!12244 = !DILocation(line: 351, column: 11, scope: !6024, inlinedAt: !12207)
!12245 = !DILocation(line: 351, column: 6, scope: !5963, inlinedAt: !12207)
!12246 = !DILocation(line: 352, column: 3, scope: !6024, inlinedAt: !12207)
!12247 = !DILocation(line: 354, column: 32, scope: !6029, inlinedAt: !12207)
!12248 = !DILocation(line: 354, column: 37, scope: !6029, inlinedAt: !12207)
!12249 = !DILocation(line: 354, column: 42, scope: !6029, inlinedAt: !12207)
!12250 = !DILocation(line: 354, column: 45, scope: !6029, inlinedAt: !12207)
!12251 = !DILocation(line: 354, column: 50, scope: !6029, inlinedAt: !12207)
!12252 = !DILocation(line: 354, column: 6, scope: !5963, inlinedAt: !12207)
!12253 = !DILocation(line: 355, column: 3, scope: !6029, inlinedAt: !12207)
!12254 = !DILocation(line: 356, column: 32, scope: !6037, inlinedAt: !12207)
!12255 = !DILocation(line: 356, column: 37, scope: !6037, inlinedAt: !12207)
!12256 = !DILocation(line: 356, column: 43, scope: !6037, inlinedAt: !12207)
!12257 = !DILocation(line: 356, column: 46, scope: !6037, inlinedAt: !12207)
!12258 = !DILocation(line: 356, column: 51, scope: !6037, inlinedAt: !12207)
!12259 = !DILocation(line: 356, column: 6, scope: !5963, inlinedAt: !12207)
!12260 = !DILocation(line: 357, column: 3, scope: !6037, inlinedAt: !12207)
!12261 = !DILocation(line: 358, column: 6, scope: !6045, inlinedAt: !12207)
!12262 = !DILocation(line: 358, column: 11, scope: !6045, inlinedAt: !12207)
!12263 = !DILocation(line: 358, column: 6, scope: !5963, inlinedAt: !12207)
!12264 = !DILocation(line: 358, column: 26, scope: !6045, inlinedAt: !12207)
!12265 = !DILocation(line: 359, column: 6, scope: !6050, inlinedAt: !12207)
!12266 = !DILocation(line: 359, column: 11, scope: !6050, inlinedAt: !12207)
!12267 = !DILocation(line: 359, column: 6, scope: !5963, inlinedAt: !12207)
!12268 = !DILocation(line: 359, column: 26, scope: !6050, inlinedAt: !12207)
!12269 = !DILocation(line: 360, column: 6, scope: !6055, inlinedAt: !12207)
!12270 = !DILocation(line: 360, column: 11, scope: !6055, inlinedAt: !12207)
!12271 = !DILocation(line: 360, column: 6, scope: !5963, inlinedAt: !12207)
!12272 = !DILocation(line: 360, column: 26, scope: !6055, inlinedAt: !12207)
!12273 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !12207)
!12274 = !DILocation(line: 361, column: 11, scope: !6060, inlinedAt: !12207)
!12275 = !DILocation(line: 361, column: 6, scope: !5963, inlinedAt: !12207)
!12276 = !DILocation(line: 361, column: 26, scope: !6060, inlinedAt: !12207)
!12277 = !DILocation(line: 362, column: 6, scope: !6065, inlinedAt: !12207)
!12278 = !DILocation(line: 362, column: 11, scope: !6065, inlinedAt: !12207)
!12279 = !DILocation(line: 362, column: 6, scope: !5963, inlinedAt: !12207)
!12280 = !DILocation(line: 362, column: 26, scope: !6065, inlinedAt: !12207)
!12281 = !DILocation(line: 363, column: 6, scope: !6070, inlinedAt: !12207)
!12282 = !DILocation(line: 363, column: 11, scope: !6070, inlinedAt: !12207)
!12283 = !DILocation(line: 363, column: 6, scope: !5963, inlinedAt: !12207)
!12284 = !DILocation(line: 363, column: 26, scope: !6070, inlinedAt: !12207)
!12285 = !DILocation(line: 364, column: 6, scope: !6075, inlinedAt: !12207)
!12286 = !DILocation(line: 364, column: 11, scope: !6075, inlinedAt: !12207)
!12287 = !DILocation(line: 364, column: 6, scope: !5963, inlinedAt: !12207)
!12288 = !DILocation(line: 364, column: 26, scope: !6075, inlinedAt: !12207)
!12289 = !DILocation(line: 365, column: 6, scope: !6080, inlinedAt: !12207)
!12290 = !DILocation(line: 365, column: 11, scope: !6080, inlinedAt: !12207)
!12291 = !DILocation(line: 365, column: 6, scope: !5963, inlinedAt: !12207)
!12292 = !DILocation(line: 365, column: 26, scope: !6080, inlinedAt: !12207)
!12293 = !DILocation(line: 366, column: 6, scope: !6085, inlinedAt: !12207)
!12294 = !DILocation(line: 366, column: 11, scope: !6085, inlinedAt: !12207)
!12295 = !DILocation(line: 366, column: 6, scope: !5963, inlinedAt: !12207)
!12296 = !DILocation(line: 366, column: 26, scope: !6085, inlinedAt: !12207)
!12297 = !DILocation(line: 367, column: 6, scope: !6090, inlinedAt: !12207)
!12298 = !DILocation(line: 367, column: 11, scope: !6090, inlinedAt: !12207)
!12299 = !DILocation(line: 367, column: 6, scope: !5963, inlinedAt: !12207)
!12300 = !DILocation(line: 367, column: 26, scope: !6090, inlinedAt: !12207)
!12301 = !DILocation(line: 368, column: 6, scope: !6095, inlinedAt: !12207)
!12302 = !DILocation(line: 368, column: 11, scope: !6095, inlinedAt: !12207)
!12303 = !DILocation(line: 368, column: 6, scope: !5963, inlinedAt: !12207)
!12304 = !DILocation(line: 368, column: 26, scope: !6095, inlinedAt: !12207)
!12305 = !DILocation(line: 369, column: 6, scope: !6100, inlinedAt: !12207)
!12306 = !DILocation(line: 369, column: 11, scope: !6100, inlinedAt: !12207)
!12307 = !DILocation(line: 369, column: 6, scope: !5963, inlinedAt: !12207)
!12308 = !DILocation(line: 369, column: 26, scope: !6100, inlinedAt: !12207)
!12309 = !DILocation(line: 370, column: 6, scope: !6105, inlinedAt: !12207)
!12310 = !DILocation(line: 370, column: 11, scope: !6105, inlinedAt: !12207)
!12311 = !DILocation(line: 370, column: 6, scope: !5963, inlinedAt: !12207)
!12312 = !DILocation(line: 370, column: 26, scope: !6105, inlinedAt: !12207)
!12313 = !DILocation(line: 371, column: 6, scope: !6110, inlinedAt: !12207)
!12314 = !DILocation(line: 371, column: 11, scope: !6110, inlinedAt: !12207)
!12315 = !DILocation(line: 371, column: 6, scope: !5963, inlinedAt: !12207)
!12316 = !DILocation(line: 371, column: 26, scope: !6110, inlinedAt: !12207)
!12317 = !DILocation(line: 372, column: 6, scope: !6115, inlinedAt: !12207)
!12318 = !DILocation(line: 372, column: 11, scope: !6115, inlinedAt: !12207)
!12319 = !DILocation(line: 372, column: 6, scope: !5963, inlinedAt: !12207)
!12320 = !DILocation(line: 372, column: 26, scope: !6115, inlinedAt: !12207)
!12321 = !DILocation(line: 373, column: 6, scope: !6120, inlinedAt: !12207)
!12322 = !DILocation(line: 373, column: 11, scope: !6120, inlinedAt: !12207)
!12323 = !DILocation(line: 373, column: 6, scope: !5963, inlinedAt: !12207)
!12324 = !DILocation(line: 373, column: 26, scope: !6120, inlinedAt: !12207)
!12325 = !DILocation(line: 374, column: 6, scope: !6125, inlinedAt: !12207)
!12326 = !DILocation(line: 374, column: 11, scope: !6125, inlinedAt: !12207)
!12327 = !DILocation(line: 374, column: 6, scope: !5963, inlinedAt: !12207)
!12328 = !DILocation(line: 374, column: 26, scope: !6125, inlinedAt: !12207)
!12329 = !DILocation(line: 375, column: 6, scope: !6130, inlinedAt: !12207)
!12330 = !DILocation(line: 375, column: 11, scope: !6130, inlinedAt: !12207)
!12331 = !DILocation(line: 375, column: 6, scope: !5963, inlinedAt: !12207)
!12332 = !DILocation(line: 375, column: 27, scope: !6130, inlinedAt: !12207)
!12333 = !DILocation(line: 376, column: 6, scope: !6135, inlinedAt: !12207)
!12334 = !DILocation(line: 376, column: 11, scope: !6135, inlinedAt: !12207)
!12335 = !DILocation(line: 376, column: 6, scope: !5963, inlinedAt: !12207)
!12336 = !DILocation(line: 376, column: 32, scope: !6135, inlinedAt: !12207)
!12337 = !DILocation(line: 377, column: 6, scope: !6140, inlinedAt: !12207)
!12338 = !DILocation(line: 377, column: 11, scope: !6140, inlinedAt: !12207)
!12339 = !DILocation(line: 377, column: 6, scope: !5963, inlinedAt: !12207)
!12340 = !DILocation(line: 377, column: 32, scope: !6140, inlinedAt: !12207)
!12341 = !DILocation(line: 378, column: 6, scope: !6145, inlinedAt: !12207)
!12342 = !DILocation(line: 378, column: 11, scope: !6145, inlinedAt: !12207)
!12343 = !DILocation(line: 378, column: 6, scope: !5963, inlinedAt: !12207)
!12344 = !DILocation(line: 378, column: 32, scope: !6145, inlinedAt: !12207)
!12345 = !DILocation(line: 379, column: 6, scope: !6150, inlinedAt: !12207)
!12346 = !DILocation(line: 379, column: 11, scope: !6150, inlinedAt: !12207)
!12347 = !DILocation(line: 379, column: 6, scope: !5963, inlinedAt: !12207)
!12348 = !DILocation(line: 379, column: 33, scope: !6150, inlinedAt: !12207)
!12349 = !DILocation(line: 380, column: 6, scope: !6155, inlinedAt: !12207)
!12350 = !DILocation(line: 380, column: 11, scope: !6155, inlinedAt: !12207)
!12351 = !DILocation(line: 380, column: 6, scope: !5963, inlinedAt: !12207)
!12352 = !DILocation(line: 380, column: 33, scope: !6155, inlinedAt: !12207)
!12353 = !DILocation(line: 381, column: 6, scope: !6160, inlinedAt: !12207)
!12354 = !DILocation(line: 381, column: 11, scope: !6160, inlinedAt: !12207)
!12355 = !DILocation(line: 381, column: 6, scope: !5963, inlinedAt: !12207)
!12356 = !DILocation(line: 381, column: 33, scope: !6160, inlinedAt: !12207)
!12357 = !DILocation(line: 382, column: 2, scope: !6165, inlinedAt: !12207)
!12358 = !DILocation(line: 382, column: 2, scope: !6169, inlinedAt: !12207)
!12359 = !DILocation(line: 382, column: 2, scope: !6170, inlinedAt: !12207)
!12360 = !DILocation(line: 386, column: 1, scope: !5963, inlinedAt: !12207)
!12361 = !DILocation(line: 547, column: 9, scope: !5946, inlinedAt: !12200)
!12362 = !DILocation(line: 549, column: 8, scope: !6176, inlinedAt: !12200)
!12363 = !DILocation(line: 549, column: 7, scope: !5946, inlinedAt: !12200)
!12364 = !DILocation(line: 550, column: 4, scope: !6176, inlinedAt: !12200)
!12365 = !DILocation(line: 553, column: 33, scope: !5946, inlinedAt: !12200)
!12366 = !DILocation(line: 325, column: 6, scope: !6181, inlinedAt: !12205)
!12367 = !DILocation(line: 325, column: 6, scope: !5957, inlinedAt: !12205)
!12368 = !DILocation(line: 326, column: 3, scope: !6181, inlinedAt: !12205)
!12369 = !DILocation(line: 332, column: 9, scope: !5957, inlinedAt: !12205)
!12370 = !DILocation(line: 332, column: 15, scope: !5957, inlinedAt: !12205)
!12371 = !DILocation(line: 332, column: 2, scope: !5957, inlinedAt: !12205)
!12372 = !DILocation(line: 336, column: 1, scope: !5957, inlinedAt: !12205)
!12373 = !DILocation(line: 553, column: 5, scope: !5946, inlinedAt: !12200)
!12374 = !DILocation(line: 553, column: 41, scope: !5946, inlinedAt: !12200)
!12375 = !DILocation(line: 554, column: 5, scope: !5946, inlinedAt: !12200)
!12376 = !DILocation(line: 554, column: 12, scope: !5946, inlinedAt: !12200)
!12377 = !DILocation(line: 448, column: 31, scope: !5941, inlinedAt: !12199)
!12378 = !DILocation(line: 448, column: 34, scope: !5941, inlinedAt: !12199)
!12379 = !DILocation(line: 448, column: 14, scope: !5941, inlinedAt: !12199)
!12380 = !DILocation(line: 450, column: 22, scope: !5941, inlinedAt: !12199)
!12381 = !DILocation(line: 450, column: 25, scope: !5941, inlinedAt: !12199)
!12382 = !DILocation(line: 450, column: 30, scope: !5941, inlinedAt: !12199)
!12383 = !DILocation(line: 450, column: 36, scope: !5941, inlinedAt: !12199)
!12384 = !DILocation(line: 450, column: 8, scope: !5941, inlinedAt: !12199)
!12385 = !DILocation(line: 450, column: 6, scope: !5941, inlinedAt: !12199)
!12386 = !DILocation(line: 451, column: 9, scope: !5941, inlinedAt: !12199)
!12387 = !DILocation(line: 552, column: 3, scope: !5946, inlinedAt: !12200)
!12388 = !DILocation(line: 557, column: 19, scope: !5948, inlinedAt: !12200)
!12389 = !DILocation(line: 557, column: 25, scope: !5948, inlinedAt: !12200)
!12390 = !DILocation(line: 557, column: 9, scope: !5948, inlinedAt: !12200)
!12391 = !DILocation(line: 557, column: 2, scope: !5948, inlinedAt: !12200)
!12392 = !DILocation(line: 558, column: 1, scope: !5948, inlinedAt: !12200)
!12393 = !DILocation(line: 4184, column: 6, scope: !5393)
!12394 = !DILocation(line: 4185, column: 7, scope: !12395)
!12395 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4185, column: 6)
!12396 = !DILocation(line: 4185, column: 6, scope: !5393)
!12397 = !DILocation(line: 4186, column: 10, scope: !12398)
!12398 = distinct !DILexicalBlock(scope: !12395, file: !3, line: 4185, column: 12)
!12399 = !DILocation(line: 4187, column: 3, scope: !12398)
!12400 = !DILocation(line: 4190, column: 11, scope: !5393)
!12401 = !DILocation(line: 4190, column: 9, scope: !5393)
!12402 = !DILocation(line: 4191, column: 6, scope: !12403)
!12403 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4191, column: 6)
!12404 = !DILocation(line: 4191, column: 13, scope: !12403)
!12405 = !DILocation(line: 4191, column: 6, scope: !5393)
!12406 = !DILocation(line: 4192, column: 3, scope: !12403)
!12407 = !DILocation(line: 4194, column: 11, scope: !12408)
!12408 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4194, column: 11)
!12409 = !DILocation(line: 4194, column: 9, scope: !5393)
!12410 = !DILocation(line: 4195, column: 6, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4195, column: 6)
!12412 = !DILocation(line: 4195, column: 13, scope: !12411)
!12413 = !DILocation(line: 4195, column: 6, scope: !5393)
!12414 = !DILocation(line: 4196, column: 3, scope: !12411)
!12415 = !DILocalVariable(name: "__ret_warn_on", scope: !12416, file: !3, line: 4207, type: !234)
!12416 = distinct !DILexicalBlock(scope: !12417, file: !3, line: 4207, column: 3)
!12417 = distinct !DILexicalBlock(scope: !5393, file: !3, line: 4206, column: 6)
!12418 = !DILocation(line: 4207, column: 3, scope: !12416)
!12419 = !DILocation(line: 4207, column: 3, scope: !12420)
!12420 = distinct !DILexicalBlock(scope: !12416, file: !3, line: 4207, column: 3)
!12421 = !DILocation(line: 4207, column: 3, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12420, file: !3, line: 4207, column: 3)
!12423 = !DILocation(line: 4207, column: 3, scope: !12424)
!12424 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 4207, column: 3)
!12425 = !DILocation(line: 4207, column: 3, scope: !12426)
!12426 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 4207, column: 3)
!12427 = !{i32 -2140352434, i32 -2140352405, i32 -2140352359, i32 -2140352301, i32 -2140352247, i32 -2140352193, i32 -2140352138, i32 -2140352107}
!12428 = !DILocation(line: 4207, column: 3, scope: !12429)
!12429 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 4207, column: 3)
!12430 = !{i32 -2140351707, i32 -2140351700, i32 -2140351648, i32 -2140351617, i32 -2140351587}
!12431 = !DILocation(line: 4207, column: 3, scope: !12432)
!12432 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 4207, column: 3)
!12433 = !DILocation(line: 4209, column: 2, scope: !5393)
!12434 = !DILabel(scope: !5393, name: "err3", file: !3, line: 4211)
!12435 = !DILocation(line: 4211, column: 1, scope: !5393)
!12436 = !DILocation(line: 4212, column: 2, scope: !5393)
!12437 = !DILabel(scope: !5393, name: "err2", file: !3, line: 4213)
!12438 = !DILocation(line: 4213, column: 1, scope: !5393)
!12439 = !DILocation(line: 4214, column: 2, scope: !5393)
!12440 = !DILabel(scope: !5393, name: "err1", file: !3, line: 4215)
!12441 = !DILocation(line: 4215, column: 1, scope: !5393)
!12442 = !DILocation(line: 4216, column: 8, scope: !5393)
!12443 = !DILocation(line: 4216, column: 2, scope: !5393)
!12444 = !DILocation(line: 4217, column: 6, scope: !5393)
!12445 = !DILocation(line: 4217, column: 2, scope: !5393)
!12446 = !DILabel(scope: !5393, name: "err0", file: !3, line: 4218)
!12447 = !DILocation(line: 4218, column: 1, scope: !5393)
!12448 = !DILocation(line: 4219, column: 9, scope: !5393)
!12449 = !DILocation(line: 4219, column: 2, scope: !5393)
!12450 = !DILocation(line: 4220, column: 1, scope: !5393)
!12451 = distinct !DISubprogram(name: "arch_local_save_flags", scope: !5564, file: !5564, line: 646, type: !5565, scopeLine: 647, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12452 = !DILocalVariable(name: "__ret", scope: !12453, file: !5564, line: 648, type: !388)
!12453 = distinct !DILexicalBlock(scope: !12451, file: !5564, line: 648, column: 9)
!12454 = !DILocation(line: 648, column: 9, scope: !12453)
!12455 = !DILocalVariable(name: "__edi", scope: !12453, file: !5564, line: 648, type: !388)
!12456 = !DILocalVariable(name: "__esi", scope: !12453, file: !5564, line: 648, type: !388)
!12457 = !DILocalVariable(name: "__edx", scope: !12453, file: !5564, line: 648, type: !388)
!12458 = !DILocalVariable(name: "__ecx", scope: !12453, file: !5564, line: 648, type: !388)
!12459 = !DILocalVariable(name: "__eax", scope: !12453, file: !5564, line: 648, type: !388)
!12460 = !DILocation(line: 648, column: 9, scope: !12461)
!12461 = distinct !DILexicalBlock(scope: !12462, file: !5564, line: 648, column: 9)
!12462 = distinct !DILexicalBlock(scope: !12453, file: !5564, line: 648, column: 9)
!12463 = !{i32 -2145659680, i32 -2145657365, i32 -2145657131, i32 -2145657080, i32 -2145657052, i32 -2145657027, i32 -2145657343, i32 -2145657330, i32 -2145656892, i32 -2145656773, i32 -2145657238, i32 -2145657211, i32 -2145657183, i32 -2145657153}
!12464 = !DILocalVariable(name: "__mask", scope: !12465, file: !5564, line: 648, type: !388)
!12465 = distinct !DILexicalBlock(scope: !12461, file: !5564, line: 648, column: 9)
!12466 = !DILocation(line: 648, column: 9, scope: !12465)
!12467 = !DILocation(line: 648, column: 9, scope: !12462)
!12468 = !DILocation(line: 648, column: 2, scope: !12451)
!12469 = distinct !DISubprogram(name: "arch_local_irq_disable", scope: !5564, file: !5564, line: 656, type: !2020, scopeLine: 657, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12470 = !DILocalVariable(name: "__edi", scope: !12471, file: !5564, line: 658, type: !388)
!12471 = distinct !DILexicalBlock(scope: !12469, file: !5564, line: 658, column: 2)
!12472 = !DILocation(line: 658, column: 2, scope: !12471)
!12473 = !DILocalVariable(name: "__esi", scope: !12471, file: !5564, line: 658, type: !388)
!12474 = !DILocalVariable(name: "__edx", scope: !12471, file: !5564, line: 658, type: !388)
!12475 = !DILocalVariable(name: "__ecx", scope: !12471, file: !5564, line: 658, type: !388)
!12476 = !DILocalVariable(name: "__eax", scope: !12471, file: !5564, line: 658, type: !388)
!12477 = !{i32 -2145652586, i32 -2145651854, i32 -2145651620, i32 -2145651569, i32 -2145651541, i32 -2145651516, i32 -2145651832, i32 -2145651819, i32 -2145651381, i32 -2145651262, i32 -2145651727, i32 -2145651700, i32 -2145651672, i32 -2145651642}
!12478 = !DILocation(line: 659, column: 1, scope: !12469)
!12479 = distinct !DISubprogram(name: "modalias_show", scope: !3, file: !3, line: 60, type: !5234, scopeLine: 61, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12480 = !DILocalVariable(name: "dev", arg: 1, scope: !12479, file: !3, line: 60, type: !3506)
!12481 = !DILocation(line: 60, column: 30, scope: !12479)
!12482 = !DILocalVariable(name: "a", arg: 2, scope: !12479, file: !3, line: 60, type: !5236)
!12483 = !DILocation(line: 60, column: 60, scope: !12479)
!12484 = !DILocalVariable(name: "buf", arg: 3, scope: !12479, file: !3, line: 60, type: !338)
!12485 = !DILocation(line: 60, column: 69, scope: !12479)
!12486 = !DILocalVariable(name: "spi", scope: !12479, file: !3, line: 62, type: !5577)
!12487 = !DILocation(line: 62, column: 27, scope: !12479)
!12488 = !DILocation(line: 62, column: 47, scope: !12479)
!12489 = !DILocation(line: 62, column: 33, scope: !12479)
!12490 = !DILocalVariable(name: "len", scope: !12479, file: !3, line: 63, type: !234)
!12491 = !DILocation(line: 63, column: 6, scope: !12479)
!12492 = !DILocation(line: 65, column: 29, scope: !12479)
!12493 = !DILocation(line: 65, column: 34, scope: !12479)
!12494 = !DILocation(line: 65, column: 8, scope: !12479)
!12495 = !DILocation(line: 65, column: 6, scope: !12479)
!12496 = !DILocation(line: 66, column: 6, scope: !12497)
!12497 = distinct !DILexicalBlock(scope: !12479, file: !3, line: 66, column: 6)
!12498 = !DILocation(line: 66, column: 10, scope: !12497)
!12499 = !DILocation(line: 66, column: 6, scope: !12479)
!12500 = !DILocation(line: 67, column: 10, scope: !12497)
!12501 = !DILocation(line: 67, column: 3, scope: !12497)
!12502 = !DILocation(line: 69, column: 17, scope: !12479)
!12503 = !DILocation(line: 69, column: 51, scope: !12479)
!12504 = !DILocation(line: 69, column: 56, scope: !12479)
!12505 = !DILocation(line: 69, column: 9, scope: !12479)
!12506 = !DILocation(line: 69, column: 2, scope: !12479)
!12507 = !DILocation(line: 70, column: 1, scope: !12479)
!12508 = distinct !DISubprogram(name: "driver_override_show", scope: !3, file: !3, line: 105, type: !5234, scopeLine: 107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12509 = !DILocalVariable(name: "dev", arg: 1, scope: !12508, file: !3, line: 105, type: !3506)
!12510 = !DILocation(line: 105, column: 52, scope: !12508)
!12511 = !DILocalVariable(name: "a", arg: 2, scope: !12508, file: !3, line: 106, type: !5236)
!12512 = !DILocation(line: 106, column: 34, scope: !12508)
!12513 = !DILocalVariable(name: "buf", arg: 3, scope: !12508, file: !3, line: 106, type: !338)
!12514 = !DILocation(line: 106, column: 43, scope: !12508)
!12515 = !DILocalVariable(name: "spi", scope: !12508, file: !3, line: 108, type: !5577)
!12516 = !DILocation(line: 108, column: 27, scope: !12508)
!12517 = !DILocation(line: 108, column: 47, scope: !12508)
!12518 = !DILocation(line: 108, column: 33, scope: !12508)
!12519 = !DILocalVariable(name: "len", scope: !12508, file: !3, line: 109, type: !369)
!12520 = !DILocation(line: 109, column: 10, scope: !12508)
!12521 = !DILocation(line: 111, column: 14, scope: !12508)
!12522 = !DILocation(line: 111, column: 2, scope: !12508)
!12523 = !DILocation(line: 112, column: 17, scope: !12508)
!12524 = !DILocation(line: 112, column: 41, scope: !12508)
!12525 = !DILocation(line: 112, column: 46, scope: !12508)
!12526 = !DILocation(line: 112, column: 8, scope: !12508)
!12527 = !DILocation(line: 112, column: 6, scope: !12508)
!12528 = !DILocation(line: 113, column: 16, scope: !12508)
!12529 = !DILocation(line: 113, column: 2, scope: !12508)
!12530 = !DILocation(line: 114, column: 9, scope: !12508)
!12531 = !DILocation(line: 114, column: 2, scope: !12508)
!12532 = distinct !DISubprogram(name: "driver_override_store", scope: !3, file: !3, line: 73, type: !5239, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12533 = !DILocalVariable(name: "dev", arg: 1, scope: !12532, file: !3, line: 73, type: !3506)
!12534 = !DILocation(line: 73, column: 53, scope: !12532)
!12535 = !DILocalVariable(name: "a", arg: 2, scope: !12532, file: !3, line: 74, type: !5236)
!12536 = !DILocation(line: 74, column: 35, scope: !12532)
!12537 = !DILocalVariable(name: "buf", arg: 3, scope: !12532, file: !3, line: 75, type: !280)
!12538 = !DILocation(line: 75, column: 22, scope: !12532)
!12539 = !DILocalVariable(name: "count", arg: 4, scope: !12532, file: !3, line: 75, type: !385)
!12540 = !DILocation(line: 75, column: 34, scope: !12532)
!12541 = !DILocalVariable(name: "spi", scope: !12532, file: !3, line: 77, type: !4532)
!12542 = !DILocation(line: 77, column: 21, scope: !12532)
!12543 = !DILocation(line: 77, column: 41, scope: !12532)
!12544 = !DILocation(line: 77, column: 27, scope: !12532)
!12545 = !DILocalVariable(name: "end", scope: !12532, file: !3, line: 78, type: !280)
!12546 = !DILocation(line: 78, column: 14, scope: !12532)
!12547 = !DILocation(line: 78, column: 27, scope: !12532)
!12548 = !DILocation(line: 78, column: 38, scope: !12532)
!12549 = !DILocation(line: 78, column: 20, scope: !12532)
!12550 = !DILocalVariable(name: "len", scope: !12532, file: !3, line: 79, type: !12551)
!12551 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !385)
!12552 = !DILocation(line: 79, column: 15, scope: !12532)
!12553 = !DILocation(line: 79, column: 21, scope: !12532)
!12554 = !DILocation(line: 79, column: 27, scope: !12532)
!12555 = !DILocation(line: 79, column: 33, scope: !12532)
!12556 = !DILocation(line: 79, column: 31, scope: !12532)
!12557 = !DILocation(line: 79, column: 39, scope: !12532)
!12558 = !DILocalVariable(name: "driver_override", scope: !12532, file: !3, line: 80, type: !280)
!12559 = !DILocation(line: 80, column: 14, scope: !12532)
!12560 = !DILocalVariable(name: "old", scope: !12532, file: !3, line: 80, type: !280)
!12561 = !DILocation(line: 80, column: 32, scope: !12532)
!12562 = !DILocation(line: 83, column: 6, scope: !12563)
!12563 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 83, column: 6)
!12564 = !DILocation(line: 83, column: 10, scope: !12563)
!12565 = !DILocation(line: 83, column: 6, scope: !12532)
!12566 = !DILocation(line: 84, column: 3, scope: !12563)
!12567 = !DILocation(line: 86, column: 29, scope: !12532)
!12568 = !DILocation(line: 86, column: 34, scope: !12532)
!12569 = !DILocation(line: 86, column: 20, scope: !12532)
!12570 = !DILocation(line: 86, column: 18, scope: !12532)
!12571 = !DILocation(line: 87, column: 7, scope: !12572)
!12572 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 87, column: 6)
!12573 = !DILocation(line: 87, column: 6, scope: !12532)
!12574 = !DILocation(line: 88, column: 3, scope: !12572)
!12575 = !DILocation(line: 90, column: 14, scope: !12532)
!12576 = !DILocation(line: 90, column: 2, scope: !12532)
!12577 = !DILocation(line: 91, column: 8, scope: !12532)
!12578 = !DILocation(line: 91, column: 13, scope: !12532)
!12579 = !DILocation(line: 91, column: 6, scope: !12532)
!12580 = !DILocation(line: 92, column: 6, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12532, file: !3, line: 92, column: 6)
!12582 = !DILocation(line: 92, column: 6, scope: !12532)
!12583 = !DILocation(line: 93, column: 26, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 92, column: 11)
!12585 = !DILocation(line: 93, column: 3, scope: !12584)
!12586 = !DILocation(line: 93, column: 8, scope: !12584)
!12587 = !DILocation(line: 93, column: 24, scope: !12584)
!12588 = !DILocation(line: 94, column: 2, scope: !12584)
!12589 = !DILocation(line: 96, column: 3, scope: !12590)
!12590 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 94, column: 9)
!12591 = !DILocation(line: 96, column: 8, scope: !12590)
!12592 = !DILocation(line: 96, column: 24, scope: !12590)
!12593 = !DILocation(line: 97, column: 9, scope: !12590)
!12594 = !DILocation(line: 97, column: 3, scope: !12590)
!12595 = !DILocation(line: 99, column: 16, scope: !12532)
!12596 = !DILocation(line: 99, column: 2, scope: !12532)
!12597 = !DILocation(line: 100, column: 8, scope: !12532)
!12598 = !DILocation(line: 100, column: 2, scope: !12532)
!12599 = !DILocation(line: 102, column: 9, scope: !12532)
!12600 = !DILocation(line: 102, column: 2, scope: !12532)
!12601 = !DILocation(line: 103, column: 1, scope: !12532)
!12602 = distinct !DISubprogram(name: "device_lock", scope: !73, file: !73, line: 729, type: !3529, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12603 = !DILocalVariable(name: "dev", arg: 1, scope: !12602, file: !73, line: 729, type: !3506)
!12604 = !DILocation(line: 729, column: 47, scope: !12602)
!12605 = !DILocation(line: 731, column: 14, scope: !12602)
!12606 = !DILocation(line: 731, column: 19, scope: !12602)
!12607 = !DILocation(line: 731, column: 2, scope: !12602)
!12608 = !DILocation(line: 732, column: 1, scope: !12602)
!12609 = distinct !DISubprogram(name: "device_unlock", scope: !73, file: !73, line: 744, type: !3529, scopeLine: 745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12610 = !DILocalVariable(name: "dev", arg: 1, scope: !12609, file: !73, line: 744, type: !3506)
!12611 = !DILocation(line: 744, column: 49, scope: !12609)
!12612 = !DILocation(line: 746, column: 16, scope: !12609)
!12613 = !DILocation(line: 746, column: 21, scope: !12609)
!12614 = !DILocation(line: 746, column: 2, scope: !12609)
!12615 = !DILocation(line: 747, column: 1, scope: !12609)
!12616 = distinct !DISubprogram(name: "spi_device_messages_show", scope: !3, file: !3, line: 160, type: !5234, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12617 = !DILocalVariable(name: "dev", arg: 1, scope: !12616, file: !3, line: 160, type: !3506)
!12618 = !DILocation(line: 160, column: 1, scope: !12616)
!12619 = !DILocalVariable(name: "attr", arg: 2, scope: !12616, file: !3, line: 160, type: !5236)
!12620 = !DILocalVariable(name: "buf", arg: 3, scope: !12616, file: !3, line: 160, type: !338)
!12621 = !DILocalVariable(name: "spi", scope: !12616, file: !3, line: 160, type: !4532)
!12622 = distinct !DISubprogram(name: "spi_statistics_messages_show", scope: !3, file: !3, line: 160, type: !12623, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12623 = !DISubroutineType(types: !12624)
!12624 = !{!369, !5419, !338}
!12625 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12626)
!12626 = distinct !DILocation(line: 160, column: 1, scope: !12622)
!12627 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12626)
!12628 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12629)
!12629 = distinct !DILocation(line: 160, column: 1, scope: !12630)
!12630 = distinct !DILexicalBlock(scope: !12631, file: !3, line: 160, column: 1)
!12631 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 160, column: 1)
!12632 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 160, column: 1)
!12633 = distinct !DILexicalBlock(scope: !12634, file: !3, line: 160, column: 1)
!12634 = distinct !DILexicalBlock(scope: !12622, file: !3, line: 160, column: 1)
!12635 = !DILocalVariable(name: "stat", arg: 1, scope: !12622, file: !3, line: 160, type: !5419)
!12636 = !DILocation(line: 160, column: 1, scope: !12622)
!12637 = !DILocalVariable(name: "buf", arg: 2, scope: !12622, file: !3, line: 160, type: !338)
!12638 = !DILocalVariable(name: "flags", scope: !12622, file: !3, line: 160, type: !388)
!12639 = !DILocalVariable(name: "len", scope: !12622, file: !3, line: 160, type: !369)
!12640 = !DILocation(line: 160, column: 1, scope: !12634)
!12641 = !DILocalVariable(name: "__dummy", scope: !12642, file: !3, line: 160, type: !388)
!12642 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 160, column: 1)
!12643 = !DILocation(line: 160, column: 1, scope: !12642)
!12644 = !DILocalVariable(name: "__dummy2", scope: !12642, file: !3, line: 160, type: !388)
!12645 = !DILocation(line: 160, column: 1, scope: !12633)
!12646 = !DILocation(line: 160, column: 1, scope: !12632)
!12647 = !DILocation(line: 160, column: 1, scope: !12648)
!12648 = distinct !DILexicalBlock(scope: !12632, file: !3, line: 160, column: 1)
!12649 = !DILocalVariable(name: "__dummy", scope: !12650, file: !3, line: 160, type: !388)
!12650 = distinct !DILexicalBlock(scope: !12651, file: !3, line: 160, column: 1)
!12651 = distinct !DILexicalBlock(scope: !12648, file: !3, line: 160, column: 1)
!12652 = !DILocation(line: 160, column: 1, scope: !12650)
!12653 = !DILocalVariable(name: "__dummy2", scope: !12650, file: !3, line: 160, type: !388)
!12654 = !DILocation(line: 160, column: 1, scope: !12651)
!12655 = !DILocation(line: 160, column: 1, scope: !12631)
!12656 = !{i32 -2140732494}
!12657 = !DILocation(line: 160, column: 1, scope: !12630)
!12658 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12629)
!12659 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12629)
!12660 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12626)
!12661 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12626)
!12662 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12626)
!12663 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12626)
!12664 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12626)
!12665 = distinct !DISubprogram(name: "spi_device_transfers_show", scope: !3, file: !3, line: 161, type: !5234, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12666 = !DILocalVariable(name: "dev", arg: 1, scope: !12665, file: !3, line: 161, type: !3506)
!12667 = !DILocation(line: 161, column: 1, scope: !12665)
!12668 = !DILocalVariable(name: "attr", arg: 2, scope: !12665, file: !3, line: 161, type: !5236)
!12669 = !DILocalVariable(name: "buf", arg: 3, scope: !12665, file: !3, line: 161, type: !338)
!12670 = !DILocalVariable(name: "spi", scope: !12665, file: !3, line: 161, type: !4532)
!12671 = distinct !DISubprogram(name: "spi_statistics_transfers_show", scope: !3, file: !3, line: 161, type: !12623, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12672 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12673)
!12673 = distinct !DILocation(line: 161, column: 1, scope: !12671)
!12674 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12673)
!12675 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12676)
!12676 = distinct !DILocation(line: 161, column: 1, scope: !12677)
!12677 = distinct !DILexicalBlock(scope: !12678, file: !3, line: 161, column: 1)
!12678 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 161, column: 1)
!12679 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 161, column: 1)
!12680 = distinct !DILexicalBlock(scope: !12681, file: !3, line: 161, column: 1)
!12681 = distinct !DILexicalBlock(scope: !12671, file: !3, line: 161, column: 1)
!12682 = !DILocalVariable(name: "stat", arg: 1, scope: !12671, file: !3, line: 161, type: !5419)
!12683 = !DILocation(line: 161, column: 1, scope: !12671)
!12684 = !DILocalVariable(name: "buf", arg: 2, scope: !12671, file: !3, line: 161, type: !338)
!12685 = !DILocalVariable(name: "flags", scope: !12671, file: !3, line: 161, type: !388)
!12686 = !DILocalVariable(name: "len", scope: !12671, file: !3, line: 161, type: !369)
!12687 = !DILocation(line: 161, column: 1, scope: !12681)
!12688 = !DILocalVariable(name: "__dummy", scope: !12689, file: !3, line: 161, type: !388)
!12689 = distinct !DILexicalBlock(scope: !12680, file: !3, line: 161, column: 1)
!12690 = !DILocation(line: 161, column: 1, scope: !12689)
!12691 = !DILocalVariable(name: "__dummy2", scope: !12689, file: !3, line: 161, type: !388)
!12692 = !DILocation(line: 161, column: 1, scope: !12680)
!12693 = !DILocation(line: 161, column: 1, scope: !12679)
!12694 = !DILocation(line: 161, column: 1, scope: !12695)
!12695 = distinct !DILexicalBlock(scope: !12679, file: !3, line: 161, column: 1)
!12696 = !DILocalVariable(name: "__dummy", scope: !12697, file: !3, line: 161, type: !388)
!12697 = distinct !DILexicalBlock(scope: !12698, file: !3, line: 161, column: 1)
!12698 = distinct !DILexicalBlock(scope: !12695, file: !3, line: 161, column: 1)
!12699 = !DILocation(line: 161, column: 1, scope: !12697)
!12700 = !DILocalVariable(name: "__dummy2", scope: !12697, file: !3, line: 161, type: !388)
!12701 = !DILocation(line: 161, column: 1, scope: !12698)
!12702 = !DILocation(line: 161, column: 1, scope: !12678)
!12703 = !{i32 -2140728167}
!12704 = !DILocation(line: 161, column: 1, scope: !12677)
!12705 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12676)
!12706 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12676)
!12707 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12673)
!12708 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12673)
!12709 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12673)
!12710 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12673)
!12711 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12673)
!12712 = distinct !DISubprogram(name: "spi_device_errors_show", scope: !3, file: !3, line: 162, type: !5234, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12713 = !DILocalVariable(name: "dev", arg: 1, scope: !12712, file: !3, line: 162, type: !3506)
!12714 = !DILocation(line: 162, column: 1, scope: !12712)
!12715 = !DILocalVariable(name: "attr", arg: 2, scope: !12712, file: !3, line: 162, type: !5236)
!12716 = !DILocalVariable(name: "buf", arg: 3, scope: !12712, file: !3, line: 162, type: !338)
!12717 = !DILocalVariable(name: "spi", scope: !12712, file: !3, line: 162, type: !4532)
!12718 = distinct !DISubprogram(name: "spi_statistics_errors_show", scope: !3, file: !3, line: 162, type: !12623, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12719 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12720)
!12720 = distinct !DILocation(line: 162, column: 1, scope: !12718)
!12721 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12720)
!12722 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12723)
!12723 = distinct !DILocation(line: 162, column: 1, scope: !12724)
!12724 = distinct !DILexicalBlock(scope: !12725, file: !3, line: 162, column: 1)
!12725 = distinct !DILexicalBlock(scope: !12726, file: !3, line: 162, column: 1)
!12726 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 162, column: 1)
!12727 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 162, column: 1)
!12728 = distinct !DILexicalBlock(scope: !12718, file: !3, line: 162, column: 1)
!12729 = !DILocalVariable(name: "stat", arg: 1, scope: !12718, file: !3, line: 162, type: !5419)
!12730 = !DILocation(line: 162, column: 1, scope: !12718)
!12731 = !DILocalVariable(name: "buf", arg: 2, scope: !12718, file: !3, line: 162, type: !338)
!12732 = !DILocalVariable(name: "flags", scope: !12718, file: !3, line: 162, type: !388)
!12733 = !DILocalVariable(name: "len", scope: !12718, file: !3, line: 162, type: !369)
!12734 = !DILocation(line: 162, column: 1, scope: !12728)
!12735 = !DILocalVariable(name: "__dummy", scope: !12736, file: !3, line: 162, type: !388)
!12736 = distinct !DILexicalBlock(scope: !12727, file: !3, line: 162, column: 1)
!12737 = !DILocation(line: 162, column: 1, scope: !12736)
!12738 = !DILocalVariable(name: "__dummy2", scope: !12736, file: !3, line: 162, type: !388)
!12739 = !DILocation(line: 162, column: 1, scope: !12727)
!12740 = !DILocation(line: 162, column: 1, scope: !12726)
!12741 = !DILocation(line: 162, column: 1, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12726, file: !3, line: 162, column: 1)
!12743 = !DILocalVariable(name: "__dummy", scope: !12744, file: !3, line: 162, type: !388)
!12744 = distinct !DILexicalBlock(scope: !12745, file: !3, line: 162, column: 1)
!12745 = distinct !DILexicalBlock(scope: !12742, file: !3, line: 162, column: 1)
!12746 = !DILocation(line: 162, column: 1, scope: !12744)
!12747 = !DILocalVariable(name: "__dummy2", scope: !12744, file: !3, line: 162, type: !388)
!12748 = !DILocation(line: 162, column: 1, scope: !12745)
!12749 = !DILocation(line: 162, column: 1, scope: !12725)
!12750 = !{i32 -2140723852}
!12751 = !DILocation(line: 162, column: 1, scope: !12724)
!12752 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12723)
!12753 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12723)
!12754 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12720)
!12755 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12720)
!12756 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12720)
!12757 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12720)
!12758 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12720)
!12759 = distinct !DISubprogram(name: "spi_device_timedout_show", scope: !3, file: !3, line: 163, type: !5234, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12760 = !DILocalVariable(name: "dev", arg: 1, scope: !12759, file: !3, line: 163, type: !3506)
!12761 = !DILocation(line: 163, column: 1, scope: !12759)
!12762 = !DILocalVariable(name: "attr", arg: 2, scope: !12759, file: !3, line: 163, type: !5236)
!12763 = !DILocalVariable(name: "buf", arg: 3, scope: !12759, file: !3, line: 163, type: !338)
!12764 = !DILocalVariable(name: "spi", scope: !12759, file: !3, line: 163, type: !4532)
!12765 = distinct !DISubprogram(name: "spi_statistics_timedout_show", scope: !3, file: !3, line: 163, type: !12623, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12766 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12767)
!12767 = distinct !DILocation(line: 163, column: 1, scope: !12765)
!12768 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12767)
!12769 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12770)
!12770 = distinct !DILocation(line: 163, column: 1, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12772, file: !3, line: 163, column: 1)
!12772 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 163, column: 1)
!12773 = distinct !DILexicalBlock(scope: !12774, file: !3, line: 163, column: 1)
!12774 = distinct !DILexicalBlock(scope: !12775, file: !3, line: 163, column: 1)
!12775 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 163, column: 1)
!12776 = !DILocalVariable(name: "stat", arg: 1, scope: !12765, file: !3, line: 163, type: !5419)
!12777 = !DILocation(line: 163, column: 1, scope: !12765)
!12778 = !DILocalVariable(name: "buf", arg: 2, scope: !12765, file: !3, line: 163, type: !338)
!12779 = !DILocalVariable(name: "flags", scope: !12765, file: !3, line: 163, type: !388)
!12780 = !DILocalVariable(name: "len", scope: !12765, file: !3, line: 163, type: !369)
!12781 = !DILocation(line: 163, column: 1, scope: !12775)
!12782 = !DILocalVariable(name: "__dummy", scope: !12783, file: !3, line: 163, type: !388)
!12783 = distinct !DILexicalBlock(scope: !12774, file: !3, line: 163, column: 1)
!12784 = !DILocation(line: 163, column: 1, scope: !12783)
!12785 = !DILocalVariable(name: "__dummy2", scope: !12783, file: !3, line: 163, type: !388)
!12786 = !DILocation(line: 163, column: 1, scope: !12774)
!12787 = !DILocation(line: 163, column: 1, scope: !12773)
!12788 = !DILocation(line: 163, column: 1, scope: !12789)
!12789 = distinct !DILexicalBlock(scope: !12773, file: !3, line: 163, column: 1)
!12790 = !DILocalVariable(name: "__dummy", scope: !12791, file: !3, line: 163, type: !388)
!12791 = distinct !DILexicalBlock(scope: !12792, file: !3, line: 163, column: 1)
!12792 = distinct !DILexicalBlock(scope: !12789, file: !3, line: 163, column: 1)
!12793 = !DILocation(line: 163, column: 1, scope: !12791)
!12794 = !DILocalVariable(name: "__dummy2", scope: !12791, file: !3, line: 163, type: !388)
!12795 = !DILocation(line: 163, column: 1, scope: !12792)
!12796 = !DILocation(line: 163, column: 1, scope: !12772)
!12797 = !{i32 -2140719571}
!12798 = !DILocation(line: 163, column: 1, scope: !12771)
!12799 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12770)
!12800 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12770)
!12801 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12767)
!12802 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12767)
!12803 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12767)
!12804 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12767)
!12805 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12767)
!12806 = distinct !DISubprogram(name: "spi_device_spi_sync_show", scope: !3, file: !3, line: 165, type: !5234, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12807 = !DILocalVariable(name: "dev", arg: 1, scope: !12806, file: !3, line: 165, type: !3506)
!12808 = !DILocation(line: 165, column: 1, scope: !12806)
!12809 = !DILocalVariable(name: "attr", arg: 2, scope: !12806, file: !3, line: 165, type: !5236)
!12810 = !DILocalVariable(name: "buf", arg: 3, scope: !12806, file: !3, line: 165, type: !338)
!12811 = !DILocalVariable(name: "spi", scope: !12806, file: !3, line: 165, type: !4532)
!12812 = distinct !DISubprogram(name: "spi_statistics_spi_sync_show", scope: !3, file: !3, line: 165, type: !12623, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12813 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12814)
!12814 = distinct !DILocation(line: 165, column: 1, scope: !12812)
!12815 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12814)
!12816 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12817)
!12817 = distinct !DILocation(line: 165, column: 1, scope: !12818)
!12818 = distinct !DILexicalBlock(scope: !12819, file: !3, line: 165, column: 1)
!12819 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 165, column: 1)
!12820 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 165, column: 1)
!12821 = distinct !DILexicalBlock(scope: !12822, file: !3, line: 165, column: 1)
!12822 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 165, column: 1)
!12823 = !DILocalVariable(name: "stat", arg: 1, scope: !12812, file: !3, line: 165, type: !5419)
!12824 = !DILocation(line: 165, column: 1, scope: !12812)
!12825 = !DILocalVariable(name: "buf", arg: 2, scope: !12812, file: !3, line: 165, type: !338)
!12826 = !DILocalVariable(name: "flags", scope: !12812, file: !3, line: 165, type: !388)
!12827 = !DILocalVariable(name: "len", scope: !12812, file: !3, line: 165, type: !369)
!12828 = !DILocation(line: 165, column: 1, scope: !12822)
!12829 = !DILocalVariable(name: "__dummy", scope: !12830, file: !3, line: 165, type: !388)
!12830 = distinct !DILexicalBlock(scope: !12821, file: !3, line: 165, column: 1)
!12831 = !DILocation(line: 165, column: 1, scope: !12830)
!12832 = !DILocalVariable(name: "__dummy2", scope: !12830, file: !3, line: 165, type: !388)
!12833 = !DILocation(line: 165, column: 1, scope: !12821)
!12834 = !DILocation(line: 165, column: 1, scope: !12820)
!12835 = !DILocation(line: 165, column: 1, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12820, file: !3, line: 165, column: 1)
!12837 = !DILocalVariable(name: "__dummy", scope: !12838, file: !3, line: 165, type: !388)
!12838 = distinct !DILexicalBlock(scope: !12839, file: !3, line: 165, column: 1)
!12839 = distinct !DILexicalBlock(scope: !12836, file: !3, line: 165, column: 1)
!12840 = !DILocation(line: 165, column: 1, scope: !12838)
!12841 = !DILocalVariable(name: "__dummy2", scope: !12838, file: !3, line: 165, type: !388)
!12842 = !DILocation(line: 165, column: 1, scope: !12839)
!12843 = !DILocation(line: 165, column: 1, scope: !12819)
!12844 = !{i32 -2140715254}
!12845 = !DILocation(line: 165, column: 1, scope: !12818)
!12846 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12817)
!12847 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12817)
!12848 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12814)
!12849 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12814)
!12850 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12814)
!12851 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12814)
!12852 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12814)
!12853 = distinct !DISubprogram(name: "spi_device_spi_sync_immediate_show", scope: !3, file: !3, line: 166, type: !5234, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12854 = !DILocalVariable(name: "dev", arg: 1, scope: !12853, file: !3, line: 166, type: !3506)
!12855 = !DILocation(line: 166, column: 1, scope: !12853)
!12856 = !DILocalVariable(name: "attr", arg: 2, scope: !12853, file: !3, line: 166, type: !5236)
!12857 = !DILocalVariable(name: "buf", arg: 3, scope: !12853, file: !3, line: 166, type: !338)
!12858 = !DILocalVariable(name: "spi", scope: !12853, file: !3, line: 166, type: !4532)
!12859 = distinct !DISubprogram(name: "spi_statistics_spi_sync_immediate_show", scope: !3, file: !3, line: 166, type: !12623, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12860 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12861)
!12861 = distinct !DILocation(line: 166, column: 1, scope: !12859)
!12862 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12861)
!12863 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12864)
!12864 = distinct !DILocation(line: 166, column: 1, scope: !12865)
!12865 = distinct !DILexicalBlock(scope: !12866, file: !3, line: 166, column: 1)
!12866 = distinct !DILexicalBlock(scope: !12867, file: !3, line: 166, column: 1)
!12867 = distinct !DILexicalBlock(scope: !12868, file: !3, line: 166, column: 1)
!12868 = distinct !DILexicalBlock(scope: !12869, file: !3, line: 166, column: 1)
!12869 = distinct !DILexicalBlock(scope: !12859, file: !3, line: 166, column: 1)
!12870 = !DILocalVariable(name: "stat", arg: 1, scope: !12859, file: !3, line: 166, type: !5419)
!12871 = !DILocation(line: 166, column: 1, scope: !12859)
!12872 = !DILocalVariable(name: "buf", arg: 2, scope: !12859, file: !3, line: 166, type: !338)
!12873 = !DILocalVariable(name: "flags", scope: !12859, file: !3, line: 166, type: !388)
!12874 = !DILocalVariable(name: "len", scope: !12859, file: !3, line: 166, type: !369)
!12875 = !DILocation(line: 166, column: 1, scope: !12869)
!12876 = !DILocalVariable(name: "__dummy", scope: !12877, file: !3, line: 166, type: !388)
!12877 = distinct !DILexicalBlock(scope: !12868, file: !3, line: 166, column: 1)
!12878 = !DILocation(line: 166, column: 1, scope: !12877)
!12879 = !DILocalVariable(name: "__dummy2", scope: !12877, file: !3, line: 166, type: !388)
!12880 = !DILocation(line: 166, column: 1, scope: !12868)
!12881 = !DILocation(line: 166, column: 1, scope: !12867)
!12882 = !DILocation(line: 166, column: 1, scope: !12883)
!12883 = distinct !DILexicalBlock(scope: !12867, file: !3, line: 166, column: 1)
!12884 = !DILocalVariable(name: "__dummy", scope: !12885, file: !3, line: 166, type: !388)
!12885 = distinct !DILexicalBlock(scope: !12886, file: !3, line: 166, column: 1)
!12886 = distinct !DILexicalBlock(scope: !12883, file: !3, line: 166, column: 1)
!12887 = !DILocation(line: 166, column: 1, scope: !12885)
!12888 = !DILocalVariable(name: "__dummy2", scope: !12885, file: !3, line: 166, type: !388)
!12889 = !DILocation(line: 166, column: 1, scope: !12886)
!12890 = !DILocation(line: 166, column: 1, scope: !12866)
!12891 = !{i32 -2140710837}
!12892 = !DILocation(line: 166, column: 1, scope: !12865)
!12893 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12864)
!12894 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12864)
!12895 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12861)
!12896 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12861)
!12897 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12861)
!12898 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12861)
!12899 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12861)
!12900 = distinct !DISubprogram(name: "spi_device_spi_async_show", scope: !3, file: !3, line: 167, type: !5234, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12901 = !DILocalVariable(name: "dev", arg: 1, scope: !12900, file: !3, line: 167, type: !3506)
!12902 = !DILocation(line: 167, column: 1, scope: !12900)
!12903 = !DILocalVariable(name: "attr", arg: 2, scope: !12900, file: !3, line: 167, type: !5236)
!12904 = !DILocalVariable(name: "buf", arg: 3, scope: !12900, file: !3, line: 167, type: !338)
!12905 = !DILocalVariable(name: "spi", scope: !12900, file: !3, line: 167, type: !4532)
!12906 = distinct !DISubprogram(name: "spi_statistics_spi_async_show", scope: !3, file: !3, line: 167, type: !12623, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12907 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12908)
!12908 = distinct !DILocation(line: 167, column: 1, scope: !12906)
!12909 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12908)
!12910 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12911)
!12911 = distinct !DILocation(line: 167, column: 1, scope: !12912)
!12912 = distinct !DILexicalBlock(scope: !12913, file: !3, line: 167, column: 1)
!12913 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 167, column: 1)
!12914 = distinct !DILexicalBlock(scope: !12915, file: !3, line: 167, column: 1)
!12915 = distinct !DILexicalBlock(scope: !12916, file: !3, line: 167, column: 1)
!12916 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 167, column: 1)
!12917 = !DILocalVariable(name: "stat", arg: 1, scope: !12906, file: !3, line: 167, type: !5419)
!12918 = !DILocation(line: 167, column: 1, scope: !12906)
!12919 = !DILocalVariable(name: "buf", arg: 2, scope: !12906, file: !3, line: 167, type: !338)
!12920 = !DILocalVariable(name: "flags", scope: !12906, file: !3, line: 167, type: !388)
!12921 = !DILocalVariable(name: "len", scope: !12906, file: !3, line: 167, type: !369)
!12922 = !DILocation(line: 167, column: 1, scope: !12916)
!12923 = !DILocalVariable(name: "__dummy", scope: !12924, file: !3, line: 167, type: !388)
!12924 = distinct !DILexicalBlock(scope: !12915, file: !3, line: 167, column: 1)
!12925 = !DILocation(line: 167, column: 1, scope: !12924)
!12926 = !DILocalVariable(name: "__dummy2", scope: !12924, file: !3, line: 167, type: !388)
!12927 = !DILocation(line: 167, column: 1, scope: !12915)
!12928 = !DILocation(line: 167, column: 1, scope: !12914)
!12929 = !DILocation(line: 167, column: 1, scope: !12930)
!12930 = distinct !DILexicalBlock(scope: !12914, file: !3, line: 167, column: 1)
!12931 = !DILocalVariable(name: "__dummy", scope: !12932, file: !3, line: 167, type: !388)
!12932 = distinct !DILexicalBlock(scope: !12933, file: !3, line: 167, column: 1)
!12933 = distinct !DILexicalBlock(scope: !12930, file: !3, line: 167, column: 1)
!12934 = !DILocation(line: 167, column: 1, scope: !12932)
!12935 = !DILocalVariable(name: "__dummy2", scope: !12932, file: !3, line: 167, type: !388)
!12936 = !DILocation(line: 167, column: 1, scope: !12933)
!12937 = !DILocation(line: 167, column: 1, scope: !12913)
!12938 = !{i32 -2140702269}
!12939 = !DILocation(line: 167, column: 1, scope: !12912)
!12940 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12911)
!12941 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12911)
!12942 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12908)
!12943 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12908)
!12944 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12908)
!12945 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12908)
!12946 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12908)
!12947 = distinct !DISubprogram(name: "spi_device_bytes_show", scope: !3, file: !3, line: 169, type: !5234, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12948 = !DILocalVariable(name: "dev", arg: 1, scope: !12947, file: !3, line: 169, type: !3506)
!12949 = !DILocation(line: 169, column: 1, scope: !12947)
!12950 = !DILocalVariable(name: "attr", arg: 2, scope: !12947, file: !3, line: 169, type: !5236)
!12951 = !DILocalVariable(name: "buf", arg: 3, scope: !12947, file: !3, line: 169, type: !338)
!12952 = !DILocalVariable(name: "spi", scope: !12947, file: !3, line: 169, type: !4532)
!12953 = distinct !DISubprogram(name: "spi_statistics_bytes_show", scope: !3, file: !3, line: 169, type: !12623, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12954 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !12955)
!12955 = distinct !DILocation(line: 169, column: 1, scope: !12953)
!12956 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !12955)
!12957 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !12958)
!12958 = distinct !DILocation(line: 169, column: 1, scope: !12959)
!12959 = distinct !DILexicalBlock(scope: !12960, file: !3, line: 169, column: 1)
!12960 = distinct !DILexicalBlock(scope: !12961, file: !3, line: 169, column: 1)
!12961 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 169, column: 1)
!12962 = distinct !DILexicalBlock(scope: !12963, file: !3, line: 169, column: 1)
!12963 = distinct !DILexicalBlock(scope: !12953, file: !3, line: 169, column: 1)
!12964 = !DILocalVariable(name: "stat", arg: 1, scope: !12953, file: !3, line: 169, type: !5419)
!12965 = !DILocation(line: 169, column: 1, scope: !12953)
!12966 = !DILocalVariable(name: "buf", arg: 2, scope: !12953, file: !3, line: 169, type: !338)
!12967 = !DILocalVariable(name: "flags", scope: !12953, file: !3, line: 169, type: !388)
!12968 = !DILocalVariable(name: "len", scope: !12953, file: !3, line: 169, type: !369)
!12969 = !DILocation(line: 169, column: 1, scope: !12963)
!12970 = !DILocalVariable(name: "__dummy", scope: !12971, file: !3, line: 169, type: !388)
!12971 = distinct !DILexicalBlock(scope: !12962, file: !3, line: 169, column: 1)
!12972 = !DILocation(line: 169, column: 1, scope: !12971)
!12973 = !DILocalVariable(name: "__dummy2", scope: !12971, file: !3, line: 169, type: !388)
!12974 = !DILocation(line: 169, column: 1, scope: !12962)
!12975 = !DILocation(line: 169, column: 1, scope: !12961)
!12976 = !DILocation(line: 169, column: 1, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12961, file: !3, line: 169, column: 1)
!12978 = !DILocalVariable(name: "__dummy", scope: !12979, file: !3, line: 169, type: !388)
!12979 = distinct !DILexicalBlock(scope: !12980, file: !3, line: 169, column: 1)
!12980 = distinct !DILexicalBlock(scope: !12977, file: !3, line: 169, column: 1)
!12981 = !DILocation(line: 169, column: 1, scope: !12979)
!12982 = !DILocalVariable(name: "__dummy2", scope: !12979, file: !3, line: 169, type: !388)
!12983 = !DILocation(line: 169, column: 1, scope: !12980)
!12984 = !DILocation(line: 169, column: 1, scope: !12960)
!12985 = !{i32 -2140697962}
!12986 = !DILocation(line: 169, column: 1, scope: !12959)
!12987 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !12958)
!12988 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !12958)
!12989 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !12955)
!12990 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !12955)
!12991 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !12955)
!12992 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !12955)
!12993 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !12955)
!12994 = distinct !DISubprogram(name: "spi_device_bytes_rx_show", scope: !3, file: !3, line: 170, type: !5234, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!12995 = !DILocalVariable(name: "dev", arg: 1, scope: !12994, file: !3, line: 170, type: !3506)
!12996 = !DILocation(line: 170, column: 1, scope: !12994)
!12997 = !DILocalVariable(name: "attr", arg: 2, scope: !12994, file: !3, line: 170, type: !5236)
!12998 = !DILocalVariable(name: "buf", arg: 3, scope: !12994, file: !3, line: 170, type: !338)
!12999 = !DILocalVariable(name: "spi", scope: !12994, file: !3, line: 170, type: !4532)
!13000 = distinct !DISubprogram(name: "spi_statistics_bytes_rx_show", scope: !3, file: !3, line: 170, type: !12623, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13001 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13002)
!13002 = distinct !DILocation(line: 170, column: 1, scope: !13000)
!13003 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13002)
!13004 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13005)
!13005 = distinct !DILocation(line: 170, column: 1, scope: !13006)
!13006 = distinct !DILexicalBlock(scope: !13007, file: !3, line: 170, column: 1)
!13007 = distinct !DILexicalBlock(scope: !13008, file: !3, line: 170, column: 1)
!13008 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 170, column: 1)
!13009 = distinct !DILexicalBlock(scope: !13010, file: !3, line: 170, column: 1)
!13010 = distinct !DILexicalBlock(scope: !13000, file: !3, line: 170, column: 1)
!13011 = !DILocalVariable(name: "stat", arg: 1, scope: !13000, file: !3, line: 170, type: !5419)
!13012 = !DILocation(line: 170, column: 1, scope: !13000)
!13013 = !DILocalVariable(name: "buf", arg: 2, scope: !13000, file: !3, line: 170, type: !338)
!13014 = !DILocalVariable(name: "flags", scope: !13000, file: !3, line: 170, type: !388)
!13015 = !DILocalVariable(name: "len", scope: !13000, file: !3, line: 170, type: !369)
!13016 = !DILocation(line: 170, column: 1, scope: !13010)
!13017 = !DILocalVariable(name: "__dummy", scope: !13018, file: !3, line: 170, type: !388)
!13018 = distinct !DILexicalBlock(scope: !13009, file: !3, line: 170, column: 1)
!13019 = !DILocation(line: 170, column: 1, scope: !13018)
!13020 = !DILocalVariable(name: "__dummy2", scope: !13018, file: !3, line: 170, type: !388)
!13021 = !DILocation(line: 170, column: 1, scope: !13009)
!13022 = !DILocation(line: 170, column: 1, scope: !13008)
!13023 = !DILocation(line: 170, column: 1, scope: !13024)
!13024 = distinct !DILexicalBlock(scope: !13008, file: !3, line: 170, column: 1)
!13025 = !DILocalVariable(name: "__dummy", scope: !13026, file: !3, line: 170, type: !388)
!13026 = distinct !DILexicalBlock(scope: !13027, file: !3, line: 170, column: 1)
!13027 = distinct !DILexicalBlock(scope: !13024, file: !3, line: 170, column: 1)
!13028 = !DILocation(line: 170, column: 1, scope: !13026)
!13029 = !DILocalVariable(name: "__dummy2", scope: !13026, file: !3, line: 170, type: !388)
!13030 = !DILocation(line: 170, column: 1, scope: !13027)
!13031 = !DILocation(line: 170, column: 1, scope: !13007)
!13032 = !{i32 -2140693697}
!13033 = !DILocation(line: 170, column: 1, scope: !13006)
!13034 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13005)
!13035 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13005)
!13036 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13002)
!13037 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13002)
!13038 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13002)
!13039 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13002)
!13040 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13002)
!13041 = distinct !DISubprogram(name: "spi_device_bytes_tx_show", scope: !3, file: !3, line: 171, type: !5234, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13042 = !DILocalVariable(name: "dev", arg: 1, scope: !13041, file: !3, line: 171, type: !3506)
!13043 = !DILocation(line: 171, column: 1, scope: !13041)
!13044 = !DILocalVariable(name: "attr", arg: 2, scope: !13041, file: !3, line: 171, type: !5236)
!13045 = !DILocalVariable(name: "buf", arg: 3, scope: !13041, file: !3, line: 171, type: !338)
!13046 = !DILocalVariable(name: "spi", scope: !13041, file: !3, line: 171, type: !4532)
!13047 = distinct !DISubprogram(name: "spi_statistics_bytes_tx_show", scope: !3, file: !3, line: 171, type: !12623, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13048 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13049)
!13049 = distinct !DILocation(line: 171, column: 1, scope: !13047)
!13050 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13049)
!13051 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13052)
!13052 = distinct !DILocation(line: 171, column: 1, scope: !13053)
!13053 = distinct !DILexicalBlock(scope: !13054, file: !3, line: 171, column: 1)
!13054 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 171, column: 1)
!13055 = distinct !DILexicalBlock(scope: !13056, file: !3, line: 171, column: 1)
!13056 = distinct !DILexicalBlock(scope: !13057, file: !3, line: 171, column: 1)
!13057 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 171, column: 1)
!13058 = !DILocalVariable(name: "stat", arg: 1, scope: !13047, file: !3, line: 171, type: !5419)
!13059 = !DILocation(line: 171, column: 1, scope: !13047)
!13060 = !DILocalVariable(name: "buf", arg: 2, scope: !13047, file: !3, line: 171, type: !338)
!13061 = !DILocalVariable(name: "flags", scope: !13047, file: !3, line: 171, type: !388)
!13062 = !DILocalVariable(name: "len", scope: !13047, file: !3, line: 171, type: !369)
!13063 = !DILocation(line: 171, column: 1, scope: !13057)
!13064 = !DILocalVariable(name: "__dummy", scope: !13065, file: !3, line: 171, type: !388)
!13065 = distinct !DILexicalBlock(scope: !13056, file: !3, line: 171, column: 1)
!13066 = !DILocation(line: 171, column: 1, scope: !13065)
!13067 = !DILocalVariable(name: "__dummy2", scope: !13065, file: !3, line: 171, type: !388)
!13068 = !DILocation(line: 171, column: 1, scope: !13056)
!13069 = !DILocation(line: 171, column: 1, scope: !13055)
!13070 = !DILocation(line: 171, column: 1, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13055, file: !3, line: 171, column: 1)
!13072 = !DILocalVariable(name: "__dummy", scope: !13073, file: !3, line: 171, type: !388)
!13073 = distinct !DILexicalBlock(scope: !13074, file: !3, line: 171, column: 1)
!13074 = distinct !DILexicalBlock(scope: !13071, file: !3, line: 171, column: 1)
!13075 = !DILocation(line: 171, column: 1, scope: !13073)
!13076 = !DILocalVariable(name: "__dummy2", scope: !13073, file: !3, line: 171, type: !388)
!13077 = !DILocation(line: 171, column: 1, scope: !13074)
!13078 = !DILocation(line: 171, column: 1, scope: !13054)
!13079 = !{i32 -2140689378}
!13080 = !DILocation(line: 171, column: 1, scope: !13053)
!13081 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13052)
!13082 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13052)
!13083 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13049)
!13084 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13049)
!13085 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13049)
!13086 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13049)
!13087 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13049)
!13088 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo0_show", scope: !3, file: !3, line: 177, type: !5234, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13089 = !DILocalVariable(name: "dev", arg: 1, scope: !13088, file: !3, line: 177, type: !3506)
!13090 = !DILocation(line: 177, column: 1, scope: !13088)
!13091 = !DILocalVariable(name: "attr", arg: 2, scope: !13088, file: !3, line: 177, type: !5236)
!13092 = !DILocalVariable(name: "buf", arg: 3, scope: !13088, file: !3, line: 177, type: !338)
!13093 = !DILocalVariable(name: "spi", scope: !13088, file: !3, line: 177, type: !4532)
!13094 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo0_show", scope: !3, file: !3, line: 177, type: !12623, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13095 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13096)
!13096 = distinct !DILocation(line: 177, column: 1, scope: !13094)
!13097 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13096)
!13098 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13099)
!13099 = distinct !DILocation(line: 177, column: 1, scope: !13100)
!13100 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 177, column: 1)
!13101 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 177, column: 1)
!13102 = distinct !DILexicalBlock(scope: !13103, file: !3, line: 177, column: 1)
!13103 = distinct !DILexicalBlock(scope: !13104, file: !3, line: 177, column: 1)
!13104 = distinct !DILexicalBlock(scope: !13094, file: !3, line: 177, column: 1)
!13105 = !DILocalVariable(name: "stat", arg: 1, scope: !13094, file: !3, line: 177, type: !5419)
!13106 = !DILocation(line: 177, column: 1, scope: !13094)
!13107 = !DILocalVariable(name: "buf", arg: 2, scope: !13094, file: !3, line: 177, type: !338)
!13108 = !DILocalVariable(name: "flags", scope: !13094, file: !3, line: 177, type: !388)
!13109 = !DILocalVariable(name: "len", scope: !13094, file: !3, line: 177, type: !369)
!13110 = !DILocation(line: 177, column: 1, scope: !13104)
!13111 = !DILocalVariable(name: "__dummy", scope: !13112, file: !3, line: 177, type: !388)
!13112 = distinct !DILexicalBlock(scope: !13103, file: !3, line: 177, column: 1)
!13113 = !DILocation(line: 177, column: 1, scope: !13112)
!13114 = !DILocalVariable(name: "__dummy2", scope: !13112, file: !3, line: 177, type: !388)
!13115 = !DILocation(line: 177, column: 1, scope: !13103)
!13116 = !DILocation(line: 177, column: 1, scope: !13102)
!13117 = !DILocation(line: 177, column: 1, scope: !13118)
!13118 = distinct !DILexicalBlock(scope: !13102, file: !3, line: 177, column: 1)
!13119 = !DILocalVariable(name: "__dummy", scope: !13120, file: !3, line: 177, type: !388)
!13120 = distinct !DILexicalBlock(scope: !13121, file: !3, line: 177, column: 1)
!13121 = distinct !DILexicalBlock(scope: !13118, file: !3, line: 177, column: 1)
!13122 = !DILocation(line: 177, column: 1, scope: !13120)
!13123 = !DILocalVariable(name: "__dummy2", scope: !13120, file: !3, line: 177, type: !388)
!13124 = !DILocation(line: 177, column: 1, scope: !13121)
!13125 = !DILocation(line: 177, column: 1, scope: !13101)
!13126 = !{i32 -2140684971}
!13127 = !DILocation(line: 177, column: 1, scope: !13100)
!13128 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13099)
!13129 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13099)
!13130 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13096)
!13131 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13096)
!13132 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13096)
!13133 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13096)
!13134 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13096)
!13135 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo1_show", scope: !3, file: !3, line: 178, type: !5234, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13136 = !DILocalVariable(name: "dev", arg: 1, scope: !13135, file: !3, line: 178, type: !3506)
!13137 = !DILocation(line: 178, column: 1, scope: !13135)
!13138 = !DILocalVariable(name: "attr", arg: 2, scope: !13135, file: !3, line: 178, type: !5236)
!13139 = !DILocalVariable(name: "buf", arg: 3, scope: !13135, file: !3, line: 178, type: !338)
!13140 = !DILocalVariable(name: "spi", scope: !13135, file: !3, line: 178, type: !4532)
!13141 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo1_show", scope: !3, file: !3, line: 178, type: !12623, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13142 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13143)
!13143 = distinct !DILocation(line: 178, column: 1, scope: !13141)
!13144 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13143)
!13145 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13146)
!13146 = distinct !DILocation(line: 178, column: 1, scope: !13147)
!13147 = distinct !DILexicalBlock(scope: !13148, file: !3, line: 178, column: 1)
!13148 = distinct !DILexicalBlock(scope: !13149, file: !3, line: 178, column: 1)
!13149 = distinct !DILexicalBlock(scope: !13150, file: !3, line: 178, column: 1)
!13150 = distinct !DILexicalBlock(scope: !13151, file: !3, line: 178, column: 1)
!13151 = distinct !DILexicalBlock(scope: !13141, file: !3, line: 178, column: 1)
!13152 = !DILocalVariable(name: "stat", arg: 1, scope: !13141, file: !3, line: 178, type: !5419)
!13153 = !DILocation(line: 178, column: 1, scope: !13141)
!13154 = !DILocalVariable(name: "buf", arg: 2, scope: !13141, file: !3, line: 178, type: !338)
!13155 = !DILocalVariable(name: "flags", scope: !13141, file: !3, line: 178, type: !388)
!13156 = !DILocalVariable(name: "len", scope: !13141, file: !3, line: 178, type: !369)
!13157 = !DILocation(line: 178, column: 1, scope: !13151)
!13158 = !DILocalVariable(name: "__dummy", scope: !13159, file: !3, line: 178, type: !388)
!13159 = distinct !DILexicalBlock(scope: !13150, file: !3, line: 178, column: 1)
!13160 = !DILocation(line: 178, column: 1, scope: !13159)
!13161 = !DILocalVariable(name: "__dummy2", scope: !13159, file: !3, line: 178, type: !388)
!13162 = !DILocation(line: 178, column: 1, scope: !13150)
!13163 = !DILocation(line: 178, column: 1, scope: !13149)
!13164 = !DILocation(line: 178, column: 1, scope: !13165)
!13165 = distinct !DILexicalBlock(scope: !13149, file: !3, line: 178, column: 1)
!13166 = !DILocalVariable(name: "__dummy", scope: !13167, file: !3, line: 178, type: !388)
!13167 = distinct !DILexicalBlock(scope: !13168, file: !3, line: 178, column: 1)
!13168 = distinct !DILexicalBlock(scope: !13165, file: !3, line: 178, column: 1)
!13169 = !DILocation(line: 178, column: 1, scope: !13167)
!13170 = !DILocalVariable(name: "__dummy2", scope: !13167, file: !3, line: 178, type: !388)
!13171 = !DILocation(line: 178, column: 1, scope: !13168)
!13172 = !DILocation(line: 178, column: 1, scope: !13148)
!13173 = !{i32 -2140680318}
!13174 = !DILocation(line: 178, column: 1, scope: !13147)
!13175 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13146)
!13176 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13146)
!13177 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13143)
!13178 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13143)
!13179 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13143)
!13180 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13143)
!13181 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13143)
!13182 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo2_show", scope: !3, file: !3, line: 179, type: !5234, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13183 = !DILocalVariable(name: "dev", arg: 1, scope: !13182, file: !3, line: 179, type: !3506)
!13184 = !DILocation(line: 179, column: 1, scope: !13182)
!13185 = !DILocalVariable(name: "attr", arg: 2, scope: !13182, file: !3, line: 179, type: !5236)
!13186 = !DILocalVariable(name: "buf", arg: 3, scope: !13182, file: !3, line: 179, type: !338)
!13187 = !DILocalVariable(name: "spi", scope: !13182, file: !3, line: 179, type: !4532)
!13188 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo2_show", scope: !3, file: !3, line: 179, type: !12623, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13189 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13190)
!13190 = distinct !DILocation(line: 179, column: 1, scope: !13188)
!13191 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13190)
!13192 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13193)
!13193 = distinct !DILocation(line: 179, column: 1, scope: !13194)
!13194 = distinct !DILexicalBlock(scope: !13195, file: !3, line: 179, column: 1)
!13195 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 179, column: 1)
!13196 = distinct !DILexicalBlock(scope: !13197, file: !3, line: 179, column: 1)
!13197 = distinct !DILexicalBlock(scope: !13198, file: !3, line: 179, column: 1)
!13198 = distinct !DILexicalBlock(scope: !13188, file: !3, line: 179, column: 1)
!13199 = !DILocalVariable(name: "stat", arg: 1, scope: !13188, file: !3, line: 179, type: !5419)
!13200 = !DILocation(line: 179, column: 1, scope: !13188)
!13201 = !DILocalVariable(name: "buf", arg: 2, scope: !13188, file: !3, line: 179, type: !338)
!13202 = !DILocalVariable(name: "flags", scope: !13188, file: !3, line: 179, type: !388)
!13203 = !DILocalVariable(name: "len", scope: !13188, file: !3, line: 179, type: !369)
!13204 = !DILocation(line: 179, column: 1, scope: !13198)
!13205 = !DILocalVariable(name: "__dummy", scope: !13206, file: !3, line: 179, type: !388)
!13206 = distinct !DILexicalBlock(scope: !13197, file: !3, line: 179, column: 1)
!13207 = !DILocation(line: 179, column: 1, scope: !13206)
!13208 = !DILocalVariable(name: "__dummy2", scope: !13206, file: !3, line: 179, type: !388)
!13209 = !DILocation(line: 179, column: 1, scope: !13197)
!13210 = !DILocation(line: 179, column: 1, scope: !13196)
!13211 = !DILocation(line: 179, column: 1, scope: !13212)
!13212 = distinct !DILexicalBlock(scope: !13196, file: !3, line: 179, column: 1)
!13213 = !DILocalVariable(name: "__dummy", scope: !13214, file: !3, line: 179, type: !388)
!13214 = distinct !DILexicalBlock(scope: !13215, file: !3, line: 179, column: 1)
!13215 = distinct !DILexicalBlock(scope: !13212, file: !3, line: 179, column: 1)
!13216 = !DILocation(line: 179, column: 1, scope: !13214)
!13217 = !DILocalVariable(name: "__dummy2", scope: !13214, file: !3, line: 179, type: !388)
!13218 = !DILocation(line: 179, column: 1, scope: !13215)
!13219 = !DILocation(line: 179, column: 1, scope: !13195)
!13220 = !{i32 -2140675665}
!13221 = !DILocation(line: 179, column: 1, scope: !13194)
!13222 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13193)
!13223 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13193)
!13224 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13190)
!13225 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13190)
!13226 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13190)
!13227 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13190)
!13228 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13190)
!13229 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo3_show", scope: !3, file: !3, line: 180, type: !5234, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13230 = !DILocalVariable(name: "dev", arg: 1, scope: !13229, file: !3, line: 180, type: !3506)
!13231 = !DILocation(line: 180, column: 1, scope: !13229)
!13232 = !DILocalVariable(name: "attr", arg: 2, scope: !13229, file: !3, line: 180, type: !5236)
!13233 = !DILocalVariable(name: "buf", arg: 3, scope: !13229, file: !3, line: 180, type: !338)
!13234 = !DILocalVariable(name: "spi", scope: !13229, file: !3, line: 180, type: !4532)
!13235 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo3_show", scope: !3, file: !3, line: 180, type: !12623, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13236 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13237)
!13237 = distinct !DILocation(line: 180, column: 1, scope: !13235)
!13238 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13237)
!13239 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13240)
!13240 = distinct !DILocation(line: 180, column: 1, scope: !13241)
!13241 = distinct !DILexicalBlock(scope: !13242, file: !3, line: 180, column: 1)
!13242 = distinct !DILexicalBlock(scope: !13243, file: !3, line: 180, column: 1)
!13243 = distinct !DILexicalBlock(scope: !13244, file: !3, line: 180, column: 1)
!13244 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 180, column: 1)
!13245 = distinct !DILexicalBlock(scope: !13235, file: !3, line: 180, column: 1)
!13246 = !DILocalVariable(name: "stat", arg: 1, scope: !13235, file: !3, line: 180, type: !5419)
!13247 = !DILocation(line: 180, column: 1, scope: !13235)
!13248 = !DILocalVariable(name: "buf", arg: 2, scope: !13235, file: !3, line: 180, type: !338)
!13249 = !DILocalVariable(name: "flags", scope: !13235, file: !3, line: 180, type: !388)
!13250 = !DILocalVariable(name: "len", scope: !13235, file: !3, line: 180, type: !369)
!13251 = !DILocation(line: 180, column: 1, scope: !13245)
!13252 = !DILocalVariable(name: "__dummy", scope: !13253, file: !3, line: 180, type: !388)
!13253 = distinct !DILexicalBlock(scope: !13244, file: !3, line: 180, column: 1)
!13254 = !DILocation(line: 180, column: 1, scope: !13253)
!13255 = !DILocalVariable(name: "__dummy2", scope: !13253, file: !3, line: 180, type: !388)
!13256 = !DILocation(line: 180, column: 1, scope: !13244)
!13257 = !DILocation(line: 180, column: 1, scope: !13243)
!13258 = !DILocation(line: 180, column: 1, scope: !13259)
!13259 = distinct !DILexicalBlock(scope: !13243, file: !3, line: 180, column: 1)
!13260 = !DILocalVariable(name: "__dummy", scope: !13261, file: !3, line: 180, type: !388)
!13261 = distinct !DILexicalBlock(scope: !13262, file: !3, line: 180, column: 1)
!13262 = distinct !DILexicalBlock(scope: !13259, file: !3, line: 180, column: 1)
!13263 = !DILocation(line: 180, column: 1, scope: !13261)
!13264 = !DILocalVariable(name: "__dummy2", scope: !13261, file: !3, line: 180, type: !388)
!13265 = !DILocation(line: 180, column: 1, scope: !13262)
!13266 = !DILocation(line: 180, column: 1, scope: !13242)
!13267 = !{i32 -2140666949}
!13268 = !DILocation(line: 180, column: 1, scope: !13241)
!13269 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13240)
!13270 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13240)
!13271 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13237)
!13272 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13237)
!13273 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13237)
!13274 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13237)
!13275 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13237)
!13276 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo4_show", scope: !3, file: !3, line: 181, type: !5234, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13277 = !DILocalVariable(name: "dev", arg: 1, scope: !13276, file: !3, line: 181, type: !3506)
!13278 = !DILocation(line: 181, column: 1, scope: !13276)
!13279 = !DILocalVariable(name: "attr", arg: 2, scope: !13276, file: !3, line: 181, type: !5236)
!13280 = !DILocalVariable(name: "buf", arg: 3, scope: !13276, file: !3, line: 181, type: !338)
!13281 = !DILocalVariable(name: "spi", scope: !13276, file: !3, line: 181, type: !4532)
!13282 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo4_show", scope: !3, file: !3, line: 181, type: !12623, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13283 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13284)
!13284 = distinct !DILocation(line: 181, column: 1, scope: !13282)
!13285 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13284)
!13286 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13287)
!13287 = distinct !DILocation(line: 181, column: 1, scope: !13288)
!13288 = distinct !DILexicalBlock(scope: !13289, file: !3, line: 181, column: 1)
!13289 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 181, column: 1)
!13290 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 181, column: 1)
!13291 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 181, column: 1)
!13292 = distinct !DILexicalBlock(scope: !13282, file: !3, line: 181, column: 1)
!13293 = !DILocalVariable(name: "stat", arg: 1, scope: !13282, file: !3, line: 181, type: !5419)
!13294 = !DILocation(line: 181, column: 1, scope: !13282)
!13295 = !DILocalVariable(name: "buf", arg: 2, scope: !13282, file: !3, line: 181, type: !338)
!13296 = !DILocalVariable(name: "flags", scope: !13282, file: !3, line: 181, type: !388)
!13297 = !DILocalVariable(name: "len", scope: !13282, file: !3, line: 181, type: !369)
!13298 = !DILocation(line: 181, column: 1, scope: !13292)
!13299 = !DILocalVariable(name: "__dummy", scope: !13300, file: !3, line: 181, type: !388)
!13300 = distinct !DILexicalBlock(scope: !13291, file: !3, line: 181, column: 1)
!13301 = !DILocation(line: 181, column: 1, scope: !13300)
!13302 = !DILocalVariable(name: "__dummy2", scope: !13300, file: !3, line: 181, type: !388)
!13303 = !DILocation(line: 181, column: 1, scope: !13291)
!13304 = !DILocation(line: 181, column: 1, scope: !13290)
!13305 = !DILocation(line: 181, column: 1, scope: !13306)
!13306 = distinct !DILexicalBlock(scope: !13290, file: !3, line: 181, column: 1)
!13307 = !DILocalVariable(name: "__dummy", scope: !13308, file: !3, line: 181, type: !388)
!13308 = distinct !DILexicalBlock(scope: !13309, file: !3, line: 181, column: 1)
!13309 = distinct !DILexicalBlock(scope: !13306, file: !3, line: 181, column: 1)
!13310 = !DILocation(line: 181, column: 1, scope: !13308)
!13311 = !DILocalVariable(name: "__dummy2", scope: !13308, file: !3, line: 181, type: !388)
!13312 = !DILocation(line: 181, column: 1, scope: !13309)
!13313 = !DILocation(line: 181, column: 1, scope: !13289)
!13314 = !{i32 -2140662290}
!13315 = !DILocation(line: 181, column: 1, scope: !13288)
!13316 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13287)
!13317 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13287)
!13318 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13284)
!13319 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13284)
!13320 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13284)
!13321 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13284)
!13322 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13284)
!13323 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo5_show", scope: !3, file: !3, line: 182, type: !5234, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13324 = !DILocalVariable(name: "dev", arg: 1, scope: !13323, file: !3, line: 182, type: !3506)
!13325 = !DILocation(line: 182, column: 1, scope: !13323)
!13326 = !DILocalVariable(name: "attr", arg: 2, scope: !13323, file: !3, line: 182, type: !5236)
!13327 = !DILocalVariable(name: "buf", arg: 3, scope: !13323, file: !3, line: 182, type: !338)
!13328 = !DILocalVariable(name: "spi", scope: !13323, file: !3, line: 182, type: !4532)
!13329 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo5_show", scope: !3, file: !3, line: 182, type: !12623, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13330 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13331)
!13331 = distinct !DILocation(line: 182, column: 1, scope: !13329)
!13332 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13331)
!13333 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13334)
!13334 = distinct !DILocation(line: 182, column: 1, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13336, file: !3, line: 182, column: 1)
!13336 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 182, column: 1)
!13337 = distinct !DILexicalBlock(scope: !13338, file: !3, line: 182, column: 1)
!13338 = distinct !DILexicalBlock(scope: !13339, file: !3, line: 182, column: 1)
!13339 = distinct !DILexicalBlock(scope: !13329, file: !3, line: 182, column: 1)
!13340 = !DILocalVariable(name: "stat", arg: 1, scope: !13329, file: !3, line: 182, type: !5419)
!13341 = !DILocation(line: 182, column: 1, scope: !13329)
!13342 = !DILocalVariable(name: "buf", arg: 2, scope: !13329, file: !3, line: 182, type: !338)
!13343 = !DILocalVariable(name: "flags", scope: !13329, file: !3, line: 182, type: !388)
!13344 = !DILocalVariable(name: "len", scope: !13329, file: !3, line: 182, type: !369)
!13345 = !DILocation(line: 182, column: 1, scope: !13339)
!13346 = !DILocalVariable(name: "__dummy", scope: !13347, file: !3, line: 182, type: !388)
!13347 = distinct !DILexicalBlock(scope: !13338, file: !3, line: 182, column: 1)
!13348 = !DILocation(line: 182, column: 1, scope: !13347)
!13349 = !DILocalVariable(name: "__dummy2", scope: !13347, file: !3, line: 182, type: !388)
!13350 = !DILocation(line: 182, column: 1, scope: !13338)
!13351 = !DILocation(line: 182, column: 1, scope: !13337)
!13352 = !DILocation(line: 182, column: 1, scope: !13353)
!13353 = distinct !DILexicalBlock(scope: !13337, file: !3, line: 182, column: 1)
!13354 = !DILocalVariable(name: "__dummy", scope: !13355, file: !3, line: 182, type: !388)
!13355 = distinct !DILexicalBlock(scope: !13356, file: !3, line: 182, column: 1)
!13356 = distinct !DILexicalBlock(scope: !13353, file: !3, line: 182, column: 1)
!13357 = !DILocation(line: 182, column: 1, scope: !13355)
!13358 = !DILocalVariable(name: "__dummy2", scope: !13355, file: !3, line: 182, type: !388)
!13359 = !DILocation(line: 182, column: 1, scope: !13356)
!13360 = !DILocation(line: 182, column: 1, scope: !13336)
!13361 = !{i32 -2140657629}
!13362 = !DILocation(line: 182, column: 1, scope: !13335)
!13363 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13334)
!13364 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13334)
!13365 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13331)
!13366 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13331)
!13367 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13331)
!13368 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13331)
!13369 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13331)
!13370 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo6_show", scope: !3, file: !3, line: 183, type: !5234, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13371 = !DILocalVariable(name: "dev", arg: 1, scope: !13370, file: !3, line: 183, type: !3506)
!13372 = !DILocation(line: 183, column: 1, scope: !13370)
!13373 = !DILocalVariable(name: "attr", arg: 2, scope: !13370, file: !3, line: 183, type: !5236)
!13374 = !DILocalVariable(name: "buf", arg: 3, scope: !13370, file: !3, line: 183, type: !338)
!13375 = !DILocalVariable(name: "spi", scope: !13370, file: !3, line: 183, type: !4532)
!13376 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo6_show", scope: !3, file: !3, line: 183, type: !12623, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13377 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13378)
!13378 = distinct !DILocation(line: 183, column: 1, scope: !13376)
!13379 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13378)
!13380 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13381)
!13381 = distinct !DILocation(line: 183, column: 1, scope: !13382)
!13382 = distinct !DILexicalBlock(scope: !13383, file: !3, line: 183, column: 1)
!13383 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 183, column: 1)
!13384 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 183, column: 1)
!13385 = distinct !DILexicalBlock(scope: !13386, file: !3, line: 183, column: 1)
!13386 = distinct !DILexicalBlock(scope: !13376, file: !3, line: 183, column: 1)
!13387 = !DILocalVariable(name: "stat", arg: 1, scope: !13376, file: !3, line: 183, type: !5419)
!13388 = !DILocation(line: 183, column: 1, scope: !13376)
!13389 = !DILocalVariable(name: "buf", arg: 2, scope: !13376, file: !3, line: 183, type: !338)
!13390 = !DILocalVariable(name: "flags", scope: !13376, file: !3, line: 183, type: !388)
!13391 = !DILocalVariable(name: "len", scope: !13376, file: !3, line: 183, type: !369)
!13392 = !DILocation(line: 183, column: 1, scope: !13386)
!13393 = !DILocalVariable(name: "__dummy", scope: !13394, file: !3, line: 183, type: !388)
!13394 = distinct !DILexicalBlock(scope: !13385, file: !3, line: 183, column: 1)
!13395 = !DILocation(line: 183, column: 1, scope: !13394)
!13396 = !DILocalVariable(name: "__dummy2", scope: !13394, file: !3, line: 183, type: !388)
!13397 = !DILocation(line: 183, column: 1, scope: !13385)
!13398 = !DILocation(line: 183, column: 1, scope: !13384)
!13399 = !DILocation(line: 183, column: 1, scope: !13400)
!13400 = distinct !DILexicalBlock(scope: !13384, file: !3, line: 183, column: 1)
!13401 = !DILocalVariable(name: "__dummy", scope: !13402, file: !3, line: 183, type: !388)
!13402 = distinct !DILexicalBlock(scope: !13403, file: !3, line: 183, column: 1)
!13403 = distinct !DILexicalBlock(scope: !13400, file: !3, line: 183, column: 1)
!13404 = !DILocation(line: 183, column: 1, scope: !13402)
!13405 = !DILocalVariable(name: "__dummy2", scope: !13402, file: !3, line: 183, type: !388)
!13406 = !DILocation(line: 183, column: 1, scope: !13403)
!13407 = !DILocation(line: 183, column: 1, scope: !13383)
!13408 = !{i32 -2140652966}
!13409 = !DILocation(line: 183, column: 1, scope: !13382)
!13410 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13381)
!13411 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13381)
!13412 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13378)
!13413 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13378)
!13414 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13378)
!13415 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13378)
!13416 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13378)
!13417 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo7_show", scope: !3, file: !3, line: 184, type: !5234, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13418 = !DILocalVariable(name: "dev", arg: 1, scope: !13417, file: !3, line: 184, type: !3506)
!13419 = !DILocation(line: 184, column: 1, scope: !13417)
!13420 = !DILocalVariable(name: "attr", arg: 2, scope: !13417, file: !3, line: 184, type: !5236)
!13421 = !DILocalVariable(name: "buf", arg: 3, scope: !13417, file: !3, line: 184, type: !338)
!13422 = !DILocalVariable(name: "spi", scope: !13417, file: !3, line: 184, type: !4532)
!13423 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo7_show", scope: !3, file: !3, line: 184, type: !12623, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13424 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13425)
!13425 = distinct !DILocation(line: 184, column: 1, scope: !13423)
!13426 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13425)
!13427 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13428)
!13428 = distinct !DILocation(line: 184, column: 1, scope: !13429)
!13429 = distinct !DILexicalBlock(scope: !13430, file: !3, line: 184, column: 1)
!13430 = distinct !DILexicalBlock(scope: !13431, file: !3, line: 184, column: 1)
!13431 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 184, column: 1)
!13432 = distinct !DILexicalBlock(scope: !13433, file: !3, line: 184, column: 1)
!13433 = distinct !DILexicalBlock(scope: !13423, file: !3, line: 184, column: 1)
!13434 = !DILocalVariable(name: "stat", arg: 1, scope: !13423, file: !3, line: 184, type: !5419)
!13435 = !DILocation(line: 184, column: 1, scope: !13423)
!13436 = !DILocalVariable(name: "buf", arg: 2, scope: !13423, file: !3, line: 184, type: !338)
!13437 = !DILocalVariable(name: "flags", scope: !13423, file: !3, line: 184, type: !388)
!13438 = !DILocalVariable(name: "len", scope: !13423, file: !3, line: 184, type: !369)
!13439 = !DILocation(line: 184, column: 1, scope: !13433)
!13440 = !DILocalVariable(name: "__dummy", scope: !13441, file: !3, line: 184, type: !388)
!13441 = distinct !DILexicalBlock(scope: !13432, file: !3, line: 184, column: 1)
!13442 = !DILocation(line: 184, column: 1, scope: !13441)
!13443 = !DILocalVariable(name: "__dummy2", scope: !13441, file: !3, line: 184, type: !388)
!13444 = !DILocation(line: 184, column: 1, scope: !13432)
!13445 = !DILocation(line: 184, column: 1, scope: !13431)
!13446 = !DILocation(line: 184, column: 1, scope: !13447)
!13447 = distinct !DILexicalBlock(scope: !13431, file: !3, line: 184, column: 1)
!13448 = !DILocalVariable(name: "__dummy", scope: !13449, file: !3, line: 184, type: !388)
!13449 = distinct !DILexicalBlock(scope: !13450, file: !3, line: 184, column: 1)
!13450 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 184, column: 1)
!13451 = !DILocation(line: 184, column: 1, scope: !13449)
!13452 = !DILocalVariable(name: "__dummy2", scope: !13449, file: !3, line: 184, type: !388)
!13453 = !DILocation(line: 184, column: 1, scope: !13450)
!13454 = !DILocation(line: 184, column: 1, scope: !13430)
!13455 = !{i32 -2140648299}
!13456 = !DILocation(line: 184, column: 1, scope: !13429)
!13457 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13428)
!13458 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13428)
!13459 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13425)
!13460 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13425)
!13461 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13425)
!13462 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13425)
!13463 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13425)
!13464 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo8_show", scope: !3, file: !3, line: 185, type: !5234, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13465 = !DILocalVariable(name: "dev", arg: 1, scope: !13464, file: !3, line: 185, type: !3506)
!13466 = !DILocation(line: 185, column: 1, scope: !13464)
!13467 = !DILocalVariable(name: "attr", arg: 2, scope: !13464, file: !3, line: 185, type: !5236)
!13468 = !DILocalVariable(name: "buf", arg: 3, scope: !13464, file: !3, line: 185, type: !338)
!13469 = !DILocalVariable(name: "spi", scope: !13464, file: !3, line: 185, type: !4532)
!13470 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo8_show", scope: !3, file: !3, line: 185, type: !12623, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13471 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13472)
!13472 = distinct !DILocation(line: 185, column: 1, scope: !13470)
!13473 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13472)
!13474 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13475)
!13475 = distinct !DILocation(line: 185, column: 1, scope: !13476)
!13476 = distinct !DILexicalBlock(scope: !13477, file: !3, line: 185, column: 1)
!13477 = distinct !DILexicalBlock(scope: !13478, file: !3, line: 185, column: 1)
!13478 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 185, column: 1)
!13479 = distinct !DILexicalBlock(scope: !13480, file: !3, line: 185, column: 1)
!13480 = distinct !DILexicalBlock(scope: !13470, file: !3, line: 185, column: 1)
!13481 = !DILocalVariable(name: "stat", arg: 1, scope: !13470, file: !3, line: 185, type: !5419)
!13482 = !DILocation(line: 185, column: 1, scope: !13470)
!13483 = !DILocalVariable(name: "buf", arg: 2, scope: !13470, file: !3, line: 185, type: !338)
!13484 = !DILocalVariable(name: "flags", scope: !13470, file: !3, line: 185, type: !388)
!13485 = !DILocalVariable(name: "len", scope: !13470, file: !3, line: 185, type: !369)
!13486 = !DILocation(line: 185, column: 1, scope: !13480)
!13487 = !DILocalVariable(name: "__dummy", scope: !13488, file: !3, line: 185, type: !388)
!13488 = distinct !DILexicalBlock(scope: !13479, file: !3, line: 185, column: 1)
!13489 = !DILocation(line: 185, column: 1, scope: !13488)
!13490 = !DILocalVariable(name: "__dummy2", scope: !13488, file: !3, line: 185, type: !388)
!13491 = !DILocation(line: 185, column: 1, scope: !13479)
!13492 = !DILocation(line: 185, column: 1, scope: !13478)
!13493 = !DILocation(line: 185, column: 1, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13478, file: !3, line: 185, column: 1)
!13495 = !DILocalVariable(name: "__dummy", scope: !13496, file: !3, line: 185, type: !388)
!13496 = distinct !DILexicalBlock(scope: !13497, file: !3, line: 185, column: 1)
!13497 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 185, column: 1)
!13498 = !DILocation(line: 185, column: 1, scope: !13496)
!13499 = !DILocalVariable(name: "__dummy2", scope: !13496, file: !3, line: 185, type: !388)
!13500 = !DILocation(line: 185, column: 1, scope: !13497)
!13501 = !DILocation(line: 185, column: 1, scope: !13477)
!13502 = !{i32 -2140643630}
!13503 = !DILocation(line: 185, column: 1, scope: !13476)
!13504 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13475)
!13505 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13475)
!13506 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13472)
!13507 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13472)
!13508 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13472)
!13509 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13472)
!13510 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13472)
!13511 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo9_show", scope: !3, file: !3, line: 186, type: !5234, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13512 = !DILocalVariable(name: "dev", arg: 1, scope: !13511, file: !3, line: 186, type: !3506)
!13513 = !DILocation(line: 186, column: 1, scope: !13511)
!13514 = !DILocalVariable(name: "attr", arg: 2, scope: !13511, file: !3, line: 186, type: !5236)
!13515 = !DILocalVariable(name: "buf", arg: 3, scope: !13511, file: !3, line: 186, type: !338)
!13516 = !DILocalVariable(name: "spi", scope: !13511, file: !3, line: 186, type: !4532)
!13517 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo9_show", scope: !3, file: !3, line: 186, type: !12623, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13518 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13519)
!13519 = distinct !DILocation(line: 186, column: 1, scope: !13517)
!13520 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13519)
!13521 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13522)
!13522 = distinct !DILocation(line: 186, column: 1, scope: !13523)
!13523 = distinct !DILexicalBlock(scope: !13524, file: !3, line: 186, column: 1)
!13524 = distinct !DILexicalBlock(scope: !13525, file: !3, line: 186, column: 1)
!13525 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 186, column: 1)
!13526 = distinct !DILexicalBlock(scope: !13527, file: !3, line: 186, column: 1)
!13527 = distinct !DILexicalBlock(scope: !13517, file: !3, line: 186, column: 1)
!13528 = !DILocalVariable(name: "stat", arg: 1, scope: !13517, file: !3, line: 186, type: !5419)
!13529 = !DILocation(line: 186, column: 1, scope: !13517)
!13530 = !DILocalVariable(name: "buf", arg: 2, scope: !13517, file: !3, line: 186, type: !338)
!13531 = !DILocalVariable(name: "flags", scope: !13517, file: !3, line: 186, type: !388)
!13532 = !DILocalVariable(name: "len", scope: !13517, file: !3, line: 186, type: !369)
!13533 = !DILocation(line: 186, column: 1, scope: !13527)
!13534 = !DILocalVariable(name: "__dummy", scope: !13535, file: !3, line: 186, type: !388)
!13535 = distinct !DILexicalBlock(scope: !13526, file: !3, line: 186, column: 1)
!13536 = !DILocation(line: 186, column: 1, scope: !13535)
!13537 = !DILocalVariable(name: "__dummy2", scope: !13535, file: !3, line: 186, type: !388)
!13538 = !DILocation(line: 186, column: 1, scope: !13526)
!13539 = !DILocation(line: 186, column: 1, scope: !13525)
!13540 = !DILocation(line: 186, column: 1, scope: !13541)
!13541 = distinct !DILexicalBlock(scope: !13525, file: !3, line: 186, column: 1)
!13542 = !DILocalVariable(name: "__dummy", scope: !13543, file: !3, line: 186, type: !388)
!13543 = distinct !DILexicalBlock(scope: !13544, file: !3, line: 186, column: 1)
!13544 = distinct !DILexicalBlock(scope: !13541, file: !3, line: 186, column: 1)
!13545 = !DILocation(line: 186, column: 1, scope: !13543)
!13546 = !DILocalVariable(name: "__dummy2", scope: !13543, file: !3, line: 186, type: !388)
!13547 = !DILocation(line: 186, column: 1, scope: !13544)
!13548 = !DILocation(line: 186, column: 1, scope: !13524)
!13549 = !{i32 -2140634898}
!13550 = !DILocation(line: 186, column: 1, scope: !13523)
!13551 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13522)
!13552 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13522)
!13553 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13519)
!13554 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13519)
!13555 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13519)
!13556 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13519)
!13557 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13519)
!13558 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo10_show", scope: !3, file: !3, line: 187, type: !5234, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13559 = !DILocalVariable(name: "dev", arg: 1, scope: !13558, file: !3, line: 187, type: !3506)
!13560 = !DILocation(line: 187, column: 1, scope: !13558)
!13561 = !DILocalVariable(name: "attr", arg: 2, scope: !13558, file: !3, line: 187, type: !5236)
!13562 = !DILocalVariable(name: "buf", arg: 3, scope: !13558, file: !3, line: 187, type: !338)
!13563 = !DILocalVariable(name: "spi", scope: !13558, file: !3, line: 187, type: !4532)
!13564 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo10_show", scope: !3, file: !3, line: 187, type: !12623, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13565 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13566)
!13566 = distinct !DILocation(line: 187, column: 1, scope: !13564)
!13567 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13566)
!13568 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13569)
!13569 = distinct !DILocation(line: 187, column: 1, scope: !13570)
!13570 = distinct !DILexicalBlock(scope: !13571, file: !3, line: 187, column: 1)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 187, column: 1)
!13572 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 187, column: 1)
!13573 = distinct !DILexicalBlock(scope: !13574, file: !3, line: 187, column: 1)
!13574 = distinct !DILexicalBlock(scope: !13564, file: !3, line: 187, column: 1)
!13575 = !DILocalVariable(name: "stat", arg: 1, scope: !13564, file: !3, line: 187, type: !5419)
!13576 = !DILocation(line: 187, column: 1, scope: !13564)
!13577 = !DILocalVariable(name: "buf", arg: 2, scope: !13564, file: !3, line: 187, type: !338)
!13578 = !DILocalVariable(name: "flags", scope: !13564, file: !3, line: 187, type: !388)
!13579 = !DILocalVariable(name: "len", scope: !13564, file: !3, line: 187, type: !369)
!13580 = !DILocation(line: 187, column: 1, scope: !13574)
!13581 = !DILocalVariable(name: "__dummy", scope: !13582, file: !3, line: 187, type: !388)
!13582 = distinct !DILexicalBlock(scope: !13573, file: !3, line: 187, column: 1)
!13583 = !DILocation(line: 187, column: 1, scope: !13582)
!13584 = !DILocalVariable(name: "__dummy2", scope: !13582, file: !3, line: 187, type: !388)
!13585 = !DILocation(line: 187, column: 1, scope: !13573)
!13586 = !DILocation(line: 187, column: 1, scope: !13572)
!13587 = !DILocation(line: 187, column: 1, scope: !13588)
!13588 = distinct !DILexicalBlock(scope: !13572, file: !3, line: 187, column: 1)
!13589 = !DILocalVariable(name: "__dummy", scope: !13590, file: !3, line: 187, type: !388)
!13590 = distinct !DILexicalBlock(scope: !13591, file: !3, line: 187, column: 1)
!13591 = distinct !DILexicalBlock(scope: !13588, file: !3, line: 187, column: 1)
!13592 = !DILocation(line: 187, column: 1, scope: !13590)
!13593 = !DILocalVariable(name: "__dummy2", scope: !13590, file: !3, line: 187, type: !388)
!13594 = !DILocation(line: 187, column: 1, scope: !13591)
!13595 = !DILocation(line: 187, column: 1, scope: !13571)
!13596 = !{i32 -2140630216}
!13597 = !DILocation(line: 187, column: 1, scope: !13570)
!13598 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13569)
!13599 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13569)
!13600 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13566)
!13601 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13566)
!13602 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13566)
!13603 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13566)
!13604 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13566)
!13605 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo11_show", scope: !3, file: !3, line: 188, type: !5234, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13606 = !DILocalVariable(name: "dev", arg: 1, scope: !13605, file: !3, line: 188, type: !3506)
!13607 = !DILocation(line: 188, column: 1, scope: !13605)
!13608 = !DILocalVariable(name: "attr", arg: 2, scope: !13605, file: !3, line: 188, type: !5236)
!13609 = !DILocalVariable(name: "buf", arg: 3, scope: !13605, file: !3, line: 188, type: !338)
!13610 = !DILocalVariable(name: "spi", scope: !13605, file: !3, line: 188, type: !4532)
!13611 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo11_show", scope: !3, file: !3, line: 188, type: !12623, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13612 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13613)
!13613 = distinct !DILocation(line: 188, column: 1, scope: !13611)
!13614 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13613)
!13615 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13616)
!13616 = distinct !DILocation(line: 188, column: 1, scope: !13617)
!13617 = distinct !DILexicalBlock(scope: !13618, file: !3, line: 188, column: 1)
!13618 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 188, column: 1)
!13619 = distinct !DILexicalBlock(scope: !13620, file: !3, line: 188, column: 1)
!13620 = distinct !DILexicalBlock(scope: !13621, file: !3, line: 188, column: 1)
!13621 = distinct !DILexicalBlock(scope: !13611, file: !3, line: 188, column: 1)
!13622 = !DILocalVariable(name: "stat", arg: 1, scope: !13611, file: !3, line: 188, type: !5419)
!13623 = !DILocation(line: 188, column: 1, scope: !13611)
!13624 = !DILocalVariable(name: "buf", arg: 2, scope: !13611, file: !3, line: 188, type: !338)
!13625 = !DILocalVariable(name: "flags", scope: !13611, file: !3, line: 188, type: !388)
!13626 = !DILocalVariable(name: "len", scope: !13611, file: !3, line: 188, type: !369)
!13627 = !DILocation(line: 188, column: 1, scope: !13621)
!13628 = !DILocalVariable(name: "__dummy", scope: !13629, file: !3, line: 188, type: !388)
!13629 = distinct !DILexicalBlock(scope: !13620, file: !3, line: 188, column: 1)
!13630 = !DILocation(line: 188, column: 1, scope: !13629)
!13631 = !DILocalVariable(name: "__dummy2", scope: !13629, file: !3, line: 188, type: !388)
!13632 = !DILocation(line: 188, column: 1, scope: !13620)
!13633 = !DILocation(line: 188, column: 1, scope: !13619)
!13634 = !DILocation(line: 188, column: 1, scope: !13635)
!13635 = distinct !DILexicalBlock(scope: !13619, file: !3, line: 188, column: 1)
!13636 = !DILocalVariable(name: "__dummy", scope: !13637, file: !3, line: 188, type: !388)
!13637 = distinct !DILexicalBlock(scope: !13638, file: !3, line: 188, column: 1)
!13638 = distinct !DILexicalBlock(scope: !13635, file: !3, line: 188, column: 1)
!13639 = !DILocation(line: 188, column: 1, scope: !13637)
!13640 = !DILocalVariable(name: "__dummy2", scope: !13637, file: !3, line: 188, type: !388)
!13641 = !DILocation(line: 188, column: 1, scope: !13638)
!13642 = !DILocation(line: 188, column: 1, scope: !13618)
!13643 = !{i32 -2140625516}
!13644 = !DILocation(line: 188, column: 1, scope: !13617)
!13645 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13616)
!13646 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13616)
!13647 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13613)
!13648 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13613)
!13649 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13613)
!13650 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13613)
!13651 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13613)
!13652 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo12_show", scope: !3, file: !3, line: 189, type: !5234, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13653 = !DILocalVariable(name: "dev", arg: 1, scope: !13652, file: !3, line: 189, type: !3506)
!13654 = !DILocation(line: 189, column: 1, scope: !13652)
!13655 = !DILocalVariable(name: "attr", arg: 2, scope: !13652, file: !3, line: 189, type: !5236)
!13656 = !DILocalVariable(name: "buf", arg: 3, scope: !13652, file: !3, line: 189, type: !338)
!13657 = !DILocalVariable(name: "spi", scope: !13652, file: !3, line: 189, type: !4532)
!13658 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo12_show", scope: !3, file: !3, line: 189, type: !12623, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13659 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13660)
!13660 = distinct !DILocation(line: 189, column: 1, scope: !13658)
!13661 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13660)
!13662 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13663)
!13663 = distinct !DILocation(line: 189, column: 1, scope: !13664)
!13664 = distinct !DILexicalBlock(scope: !13665, file: !3, line: 189, column: 1)
!13665 = distinct !DILexicalBlock(scope: !13666, file: !3, line: 189, column: 1)
!13666 = distinct !DILexicalBlock(scope: !13667, file: !3, line: 189, column: 1)
!13667 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 189, column: 1)
!13668 = distinct !DILexicalBlock(scope: !13658, file: !3, line: 189, column: 1)
!13669 = !DILocalVariable(name: "stat", arg: 1, scope: !13658, file: !3, line: 189, type: !5419)
!13670 = !DILocation(line: 189, column: 1, scope: !13658)
!13671 = !DILocalVariable(name: "buf", arg: 2, scope: !13658, file: !3, line: 189, type: !338)
!13672 = !DILocalVariable(name: "flags", scope: !13658, file: !3, line: 189, type: !388)
!13673 = !DILocalVariable(name: "len", scope: !13658, file: !3, line: 189, type: !369)
!13674 = !DILocation(line: 189, column: 1, scope: !13668)
!13675 = !DILocalVariable(name: "__dummy", scope: !13676, file: !3, line: 189, type: !388)
!13676 = distinct !DILexicalBlock(scope: !13667, file: !3, line: 189, column: 1)
!13677 = !DILocation(line: 189, column: 1, scope: !13676)
!13678 = !DILocalVariable(name: "__dummy2", scope: !13676, file: !3, line: 189, type: !388)
!13679 = !DILocation(line: 189, column: 1, scope: !13667)
!13680 = !DILocation(line: 189, column: 1, scope: !13666)
!13681 = !DILocation(line: 189, column: 1, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13666, file: !3, line: 189, column: 1)
!13683 = !DILocalVariable(name: "__dummy", scope: !13684, file: !3, line: 189, type: !388)
!13684 = distinct !DILexicalBlock(scope: !13685, file: !3, line: 189, column: 1)
!13685 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 189, column: 1)
!13686 = !DILocation(line: 189, column: 1, scope: !13684)
!13687 = !DILocalVariable(name: "__dummy2", scope: !13684, file: !3, line: 189, type: !388)
!13688 = !DILocation(line: 189, column: 1, scope: !13685)
!13689 = !DILocation(line: 189, column: 1, scope: !13665)
!13690 = !{i32 -2140620816}
!13691 = !DILocation(line: 189, column: 1, scope: !13664)
!13692 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13663)
!13693 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13663)
!13694 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13660)
!13695 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13660)
!13696 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13660)
!13697 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13660)
!13698 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13660)
!13699 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo13_show", scope: !3, file: !3, line: 190, type: !5234, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13700 = !DILocalVariable(name: "dev", arg: 1, scope: !13699, file: !3, line: 190, type: !3506)
!13701 = !DILocation(line: 190, column: 1, scope: !13699)
!13702 = !DILocalVariable(name: "attr", arg: 2, scope: !13699, file: !3, line: 190, type: !5236)
!13703 = !DILocalVariable(name: "buf", arg: 3, scope: !13699, file: !3, line: 190, type: !338)
!13704 = !DILocalVariable(name: "spi", scope: !13699, file: !3, line: 190, type: !4532)
!13705 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo13_show", scope: !3, file: !3, line: 190, type: !12623, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13706 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13707)
!13707 = distinct !DILocation(line: 190, column: 1, scope: !13705)
!13708 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13707)
!13709 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13710)
!13710 = distinct !DILocation(line: 190, column: 1, scope: !13711)
!13711 = distinct !DILexicalBlock(scope: !13712, file: !3, line: 190, column: 1)
!13712 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 190, column: 1)
!13713 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 190, column: 1)
!13714 = distinct !DILexicalBlock(scope: !13715, file: !3, line: 190, column: 1)
!13715 = distinct !DILexicalBlock(scope: !13705, file: !3, line: 190, column: 1)
!13716 = !DILocalVariable(name: "stat", arg: 1, scope: !13705, file: !3, line: 190, type: !5419)
!13717 = !DILocation(line: 190, column: 1, scope: !13705)
!13718 = !DILocalVariable(name: "buf", arg: 2, scope: !13705, file: !3, line: 190, type: !338)
!13719 = !DILocalVariable(name: "flags", scope: !13705, file: !3, line: 190, type: !388)
!13720 = !DILocalVariable(name: "len", scope: !13705, file: !3, line: 190, type: !369)
!13721 = !DILocation(line: 190, column: 1, scope: !13715)
!13722 = !DILocalVariable(name: "__dummy", scope: !13723, file: !3, line: 190, type: !388)
!13723 = distinct !DILexicalBlock(scope: !13714, file: !3, line: 190, column: 1)
!13724 = !DILocation(line: 190, column: 1, scope: !13723)
!13725 = !DILocalVariable(name: "__dummy2", scope: !13723, file: !3, line: 190, type: !388)
!13726 = !DILocation(line: 190, column: 1, scope: !13714)
!13727 = !DILocation(line: 190, column: 1, scope: !13713)
!13728 = !DILocation(line: 190, column: 1, scope: !13729)
!13729 = distinct !DILexicalBlock(scope: !13713, file: !3, line: 190, column: 1)
!13730 = !DILocalVariable(name: "__dummy", scope: !13731, file: !3, line: 190, type: !388)
!13731 = distinct !DILexicalBlock(scope: !13732, file: !3, line: 190, column: 1)
!13732 = distinct !DILexicalBlock(scope: !13729, file: !3, line: 190, column: 1)
!13733 = !DILocation(line: 190, column: 1, scope: !13731)
!13734 = !DILocalVariable(name: "__dummy2", scope: !13731, file: !3, line: 190, type: !388)
!13735 = !DILocation(line: 190, column: 1, scope: !13732)
!13736 = !DILocation(line: 190, column: 1, scope: !13712)
!13737 = !{i32 -2140616114}
!13738 = !DILocation(line: 190, column: 1, scope: !13711)
!13739 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13710)
!13740 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13710)
!13741 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13707)
!13742 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13707)
!13743 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13707)
!13744 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13707)
!13745 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13707)
!13746 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo14_show", scope: !3, file: !3, line: 191, type: !5234, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13747 = !DILocalVariable(name: "dev", arg: 1, scope: !13746, file: !3, line: 191, type: !3506)
!13748 = !DILocation(line: 191, column: 1, scope: !13746)
!13749 = !DILocalVariable(name: "attr", arg: 2, scope: !13746, file: !3, line: 191, type: !5236)
!13750 = !DILocalVariable(name: "buf", arg: 3, scope: !13746, file: !3, line: 191, type: !338)
!13751 = !DILocalVariable(name: "spi", scope: !13746, file: !3, line: 191, type: !4532)
!13752 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo14_show", scope: !3, file: !3, line: 191, type: !12623, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13753 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13754)
!13754 = distinct !DILocation(line: 191, column: 1, scope: !13752)
!13755 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13754)
!13756 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13757)
!13757 = distinct !DILocation(line: 191, column: 1, scope: !13758)
!13758 = distinct !DILexicalBlock(scope: !13759, file: !3, line: 191, column: 1)
!13759 = distinct !DILexicalBlock(scope: !13760, file: !3, line: 191, column: 1)
!13760 = distinct !DILexicalBlock(scope: !13761, file: !3, line: 191, column: 1)
!13761 = distinct !DILexicalBlock(scope: !13762, file: !3, line: 191, column: 1)
!13762 = distinct !DILexicalBlock(scope: !13752, file: !3, line: 191, column: 1)
!13763 = !DILocalVariable(name: "stat", arg: 1, scope: !13752, file: !3, line: 191, type: !5419)
!13764 = !DILocation(line: 191, column: 1, scope: !13752)
!13765 = !DILocalVariable(name: "buf", arg: 2, scope: !13752, file: !3, line: 191, type: !338)
!13766 = !DILocalVariable(name: "flags", scope: !13752, file: !3, line: 191, type: !388)
!13767 = !DILocalVariable(name: "len", scope: !13752, file: !3, line: 191, type: !369)
!13768 = !DILocation(line: 191, column: 1, scope: !13762)
!13769 = !DILocalVariable(name: "__dummy", scope: !13770, file: !3, line: 191, type: !388)
!13770 = distinct !DILexicalBlock(scope: !13761, file: !3, line: 191, column: 1)
!13771 = !DILocation(line: 191, column: 1, scope: !13770)
!13772 = !DILocalVariable(name: "__dummy2", scope: !13770, file: !3, line: 191, type: !388)
!13773 = !DILocation(line: 191, column: 1, scope: !13761)
!13774 = !DILocation(line: 191, column: 1, scope: !13760)
!13775 = !DILocation(line: 191, column: 1, scope: !13776)
!13776 = distinct !DILexicalBlock(scope: !13760, file: !3, line: 191, column: 1)
!13777 = !DILocalVariable(name: "__dummy", scope: !13778, file: !3, line: 191, type: !388)
!13778 = distinct !DILexicalBlock(scope: !13779, file: !3, line: 191, column: 1)
!13779 = distinct !DILexicalBlock(scope: !13776, file: !3, line: 191, column: 1)
!13780 = !DILocation(line: 191, column: 1, scope: !13778)
!13781 = !DILocalVariable(name: "__dummy2", scope: !13778, file: !3, line: 191, type: !388)
!13782 = !DILocation(line: 191, column: 1, scope: !13779)
!13783 = !DILocation(line: 191, column: 1, scope: !13759)
!13784 = !{i32 -2140611408}
!13785 = !DILocation(line: 191, column: 1, scope: !13758)
!13786 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13757)
!13787 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13757)
!13788 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13754)
!13789 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13754)
!13790 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13754)
!13791 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13754)
!13792 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13754)
!13793 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo15_show", scope: !3, file: !3, line: 192, type: !5234, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13794 = !DILocalVariable(name: "dev", arg: 1, scope: !13793, file: !3, line: 192, type: !3506)
!13795 = !DILocation(line: 192, column: 1, scope: !13793)
!13796 = !DILocalVariable(name: "attr", arg: 2, scope: !13793, file: !3, line: 192, type: !5236)
!13797 = !DILocalVariable(name: "buf", arg: 3, scope: !13793, file: !3, line: 192, type: !338)
!13798 = !DILocalVariable(name: "spi", scope: !13793, file: !3, line: 192, type: !4532)
!13799 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo15_show", scope: !3, file: !3, line: 192, type: !12623, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13800 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13801)
!13801 = distinct !DILocation(line: 192, column: 1, scope: !13799)
!13802 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13801)
!13803 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13804)
!13804 = distinct !DILocation(line: 192, column: 1, scope: !13805)
!13805 = distinct !DILexicalBlock(scope: !13806, file: !3, line: 192, column: 1)
!13806 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 192, column: 1)
!13807 = distinct !DILexicalBlock(scope: !13808, file: !3, line: 192, column: 1)
!13808 = distinct !DILexicalBlock(scope: !13809, file: !3, line: 192, column: 1)
!13809 = distinct !DILexicalBlock(scope: !13799, file: !3, line: 192, column: 1)
!13810 = !DILocalVariable(name: "stat", arg: 1, scope: !13799, file: !3, line: 192, type: !5419)
!13811 = !DILocation(line: 192, column: 1, scope: !13799)
!13812 = !DILocalVariable(name: "buf", arg: 2, scope: !13799, file: !3, line: 192, type: !338)
!13813 = !DILocalVariable(name: "flags", scope: !13799, file: !3, line: 192, type: !388)
!13814 = !DILocalVariable(name: "len", scope: !13799, file: !3, line: 192, type: !369)
!13815 = !DILocation(line: 192, column: 1, scope: !13809)
!13816 = !DILocalVariable(name: "__dummy", scope: !13817, file: !3, line: 192, type: !388)
!13817 = distinct !DILexicalBlock(scope: !13808, file: !3, line: 192, column: 1)
!13818 = !DILocation(line: 192, column: 1, scope: !13817)
!13819 = !DILocalVariable(name: "__dummy2", scope: !13817, file: !3, line: 192, type: !388)
!13820 = !DILocation(line: 192, column: 1, scope: !13808)
!13821 = !DILocation(line: 192, column: 1, scope: !13807)
!13822 = !DILocation(line: 192, column: 1, scope: !13823)
!13823 = distinct !DILexicalBlock(scope: !13807, file: !3, line: 192, column: 1)
!13824 = !DILocalVariable(name: "__dummy", scope: !13825, file: !3, line: 192, type: !388)
!13825 = distinct !DILexicalBlock(scope: !13826, file: !3, line: 192, column: 1)
!13826 = distinct !DILexicalBlock(scope: !13823, file: !3, line: 192, column: 1)
!13827 = !DILocation(line: 192, column: 1, scope: !13825)
!13828 = !DILocalVariable(name: "__dummy2", scope: !13825, file: !3, line: 192, type: !388)
!13829 = !DILocation(line: 192, column: 1, scope: !13826)
!13830 = !DILocation(line: 192, column: 1, scope: !13806)
!13831 = !{i32 -2140602639}
!13832 = !DILocation(line: 192, column: 1, scope: !13805)
!13833 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13804)
!13834 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13804)
!13835 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13801)
!13836 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13801)
!13837 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13801)
!13838 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13801)
!13839 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13801)
!13840 = distinct !DISubprogram(name: "spi_device_transfer_bytes_histo16_show", scope: !3, file: !3, line: 193, type: !5234, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13841 = !DILocalVariable(name: "dev", arg: 1, scope: !13840, file: !3, line: 193, type: !3506)
!13842 = !DILocation(line: 193, column: 1, scope: !13840)
!13843 = !DILocalVariable(name: "attr", arg: 2, scope: !13840, file: !3, line: 193, type: !5236)
!13844 = !DILocalVariable(name: "buf", arg: 3, scope: !13840, file: !3, line: 193, type: !338)
!13845 = !DILocalVariable(name: "spi", scope: !13840, file: !3, line: 193, type: !4532)
!13846 = distinct !DISubprogram(name: "spi_statistics_transfer_bytes_histo16_show", scope: !3, file: !3, line: 193, type: !12623, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13847 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13848)
!13848 = distinct !DILocation(line: 193, column: 1, scope: !13846)
!13849 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13848)
!13850 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13851)
!13851 = distinct !DILocation(line: 193, column: 1, scope: !13852)
!13852 = distinct !DILexicalBlock(scope: !13853, file: !3, line: 193, column: 1)
!13853 = distinct !DILexicalBlock(scope: !13854, file: !3, line: 193, column: 1)
!13854 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 193, column: 1)
!13855 = distinct !DILexicalBlock(scope: !13856, file: !3, line: 193, column: 1)
!13856 = distinct !DILexicalBlock(scope: !13846, file: !3, line: 193, column: 1)
!13857 = !DILocalVariable(name: "stat", arg: 1, scope: !13846, file: !3, line: 193, type: !5419)
!13858 = !DILocation(line: 193, column: 1, scope: !13846)
!13859 = !DILocalVariable(name: "buf", arg: 2, scope: !13846, file: !3, line: 193, type: !338)
!13860 = !DILocalVariable(name: "flags", scope: !13846, file: !3, line: 193, type: !388)
!13861 = !DILocalVariable(name: "len", scope: !13846, file: !3, line: 193, type: !369)
!13862 = !DILocation(line: 193, column: 1, scope: !13856)
!13863 = !DILocalVariable(name: "__dummy", scope: !13864, file: !3, line: 193, type: !388)
!13864 = distinct !DILexicalBlock(scope: !13855, file: !3, line: 193, column: 1)
!13865 = !DILocation(line: 193, column: 1, scope: !13864)
!13866 = !DILocalVariable(name: "__dummy2", scope: !13864, file: !3, line: 193, type: !388)
!13867 = !DILocation(line: 193, column: 1, scope: !13855)
!13868 = !DILocation(line: 193, column: 1, scope: !13854)
!13869 = !DILocation(line: 193, column: 1, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13854, file: !3, line: 193, column: 1)
!13871 = !DILocalVariable(name: "__dummy", scope: !13872, file: !3, line: 193, type: !388)
!13872 = distinct !DILexicalBlock(scope: !13873, file: !3, line: 193, column: 1)
!13873 = distinct !DILexicalBlock(scope: !13870, file: !3, line: 193, column: 1)
!13874 = !DILocation(line: 193, column: 1, scope: !13872)
!13875 = !DILocalVariable(name: "__dummy2", scope: !13872, file: !3, line: 193, type: !388)
!13876 = !DILocation(line: 193, column: 1, scope: !13873)
!13877 = !DILocation(line: 193, column: 1, scope: !13853)
!13878 = !{i32 -2140597941}
!13879 = !DILocation(line: 193, column: 1, scope: !13852)
!13880 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13851)
!13881 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13851)
!13882 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13848)
!13883 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13848)
!13884 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13848)
!13885 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13848)
!13886 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13848)
!13887 = distinct !DISubprogram(name: "spi_device_transfers_split_maxsize_show", scope: !3, file: !3, line: 195, type: !5234, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13888 = !DILocalVariable(name: "dev", arg: 1, scope: !13887, file: !3, line: 195, type: !3506)
!13889 = !DILocation(line: 195, column: 1, scope: !13887)
!13890 = !DILocalVariable(name: "attr", arg: 2, scope: !13887, file: !3, line: 195, type: !5236)
!13891 = !DILocalVariable(name: "buf", arg: 3, scope: !13887, file: !3, line: 195, type: !338)
!13892 = !DILocalVariable(name: "spi", scope: !13887, file: !3, line: 195, type: !4532)
!13893 = distinct !DISubprogram(name: "spi_statistics_transfers_split_maxsize_show", scope: !3, file: !3, line: 195, type: !12623, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13894 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !13895)
!13895 = distinct !DILocation(line: 195, column: 1, scope: !13893)
!13896 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !13895)
!13897 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !13898)
!13898 = distinct !DILocation(line: 195, column: 1, scope: !13899)
!13899 = distinct !DILexicalBlock(scope: !13900, file: !3, line: 195, column: 1)
!13900 = distinct !DILexicalBlock(scope: !13901, file: !3, line: 195, column: 1)
!13901 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 195, column: 1)
!13902 = distinct !DILexicalBlock(scope: !13903, file: !3, line: 195, column: 1)
!13903 = distinct !DILexicalBlock(scope: !13893, file: !3, line: 195, column: 1)
!13904 = !DILocalVariable(name: "stat", arg: 1, scope: !13893, file: !3, line: 195, type: !5419)
!13905 = !DILocation(line: 195, column: 1, scope: !13893)
!13906 = !DILocalVariable(name: "buf", arg: 2, scope: !13893, file: !3, line: 195, type: !338)
!13907 = !DILocalVariable(name: "flags", scope: !13893, file: !3, line: 195, type: !388)
!13908 = !DILocalVariable(name: "len", scope: !13893, file: !3, line: 195, type: !369)
!13909 = !DILocation(line: 195, column: 1, scope: !13903)
!13910 = !DILocalVariable(name: "__dummy", scope: !13911, file: !3, line: 195, type: !388)
!13911 = distinct !DILexicalBlock(scope: !13902, file: !3, line: 195, column: 1)
!13912 = !DILocation(line: 195, column: 1, scope: !13911)
!13913 = !DILocalVariable(name: "__dummy2", scope: !13911, file: !3, line: 195, type: !388)
!13914 = !DILocation(line: 195, column: 1, scope: !13902)
!13915 = !DILocation(line: 195, column: 1, scope: !13901)
!13916 = !DILocation(line: 195, column: 1, scope: !13917)
!13917 = distinct !DILexicalBlock(scope: !13901, file: !3, line: 195, column: 1)
!13918 = !DILocalVariable(name: "__dummy", scope: !13919, file: !3, line: 195, type: !388)
!13919 = distinct !DILexicalBlock(scope: !13920, file: !3, line: 195, column: 1)
!13920 = distinct !DILexicalBlock(scope: !13917, file: !3, line: 195, column: 1)
!13921 = !DILocation(line: 195, column: 1, scope: !13919)
!13922 = !DILocalVariable(name: "__dummy2", scope: !13919, file: !3, line: 195, type: !388)
!13923 = !DILocation(line: 195, column: 1, scope: !13920)
!13924 = !DILocation(line: 195, column: 1, scope: !13900)
!13925 = !{i32 -2140593206}
!13926 = !DILocation(line: 195, column: 1, scope: !13899)
!13927 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !13898)
!13928 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !13898)
!13929 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !13895)
!13930 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !13895)
!13931 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !13895)
!13932 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !13895)
!13933 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !13895)
!13934 = distinct !DISubprogram(name: "of_driver_match_device", scope: !13935, file: !13935, line: 23, type: !13936, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13935 = !DIFile(filename: "./include/linux/of_device.h", directory: "/home/lizy2001/genbc/linux")
!13936 = !DISubroutineType(types: !13937)
!13937 = !{!234, !3506, !13938}
!13938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13939, size: 64)
!13939 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3578)
!13940 = !DILocalVariable(name: "dev", arg: 1, scope: !13934, file: !13935, line: 23, type: !3506)
!13941 = !DILocation(line: 23, column: 57, scope: !13934)
!13942 = !DILocalVariable(name: "drv", arg: 2, scope: !13934, file: !13935, line: 24, type: !13938)
!13943 = !DILocation(line: 24, column: 35, scope: !13934)
!13944 = !DILocation(line: 26, column: 25, scope: !13934)
!13945 = !DILocation(line: 26, column: 30, scope: !13934)
!13946 = !DILocation(line: 26, column: 46, scope: !13934)
!13947 = !DILocation(line: 26, column: 9, scope: !13934)
!13948 = !DILocation(line: 26, column: 51, scope: !13934)
!13949 = !DILocation(line: 26, column: 2, scope: !13934)
!13950 = distinct !DISubprogram(name: "acpi_dev_name", scope: !6813, file: !6813, line: 95, type: !13951, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13951 = !DISubroutineType(types: !13952)
!13952 = !{!280, !229}
!13953 = !DILocalVariable(name: "adev", arg: 1, scope: !13950, file: !6813, line: 95, type: !229)
!13954 = !DILocation(line: 95, column: 61, scope: !13950)
!13955 = !DILocation(line: 97, column: 19, scope: !13950)
!13956 = !DILocation(line: 97, column: 25, scope: !13950)
!13957 = !DILocation(line: 97, column: 9, scope: !13950)
!13958 = !DILocation(line: 97, column: 2, scope: !13950)
!13959 = distinct !DISubprogram(name: "kobject_name", scope: !277, file: !277, line: 88, type: !13960, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13960 = !DISubroutineType(types: !13961)
!13961 = !{!280, !13962}
!13962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13963, size: 64)
!13963 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !276)
!13964 = !DILocalVariable(name: "kobj", arg: 1, scope: !13959, file: !277, line: 88, type: !13962)
!13965 = !DILocation(line: 88, column: 62, scope: !13959)
!13966 = !DILocation(line: 90, column: 9, scope: !13959)
!13967 = !DILocation(line: 90, column: 15, scope: !13959)
!13968 = !DILocation(line: 90, column: 2, scope: !13959)
!13969 = distinct !DISubprogram(name: "clear_bit", scope: !13970, file: !13970, line: 39, type: !13971, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13970 = !DIFile(filename: "./include/asm-generic/bitops/instrumented-atomic.h", directory: "/home/lizy2001/genbc/linux")
!13971 = !DISubroutineType(types: !13972)
!13972 = !{null, !373, !13973}
!13973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13974, size: 64)
!13974 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !388)
!13975 = !DILocalVariable(name: "nr", arg: 1, scope: !13976, file: !5443, line: 72, type: !373)
!13976 = distinct !DISubprogram(name: "arch_clear_bit", scope: !5443, file: !5443, line: 72, type: !13971, scopeLine: 73, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13977 = !DILocation(line: 72, column: 21, scope: !13976, inlinedAt: !13978)
!13978 = distinct !DILocation(line: 42, column: 2, scope: !13969)
!13979 = !DILocalVariable(name: "addr", arg: 2, scope: !13976, file: !5443, line: 72, type: !13973)
!13980 = !DILocation(line: 72, column: 49, scope: !13976, inlinedAt: !13978)
!13981 = !DILocalVariable(name: "v", arg: 1, scope: !13982, file: !10524, line: 84, type: !10527)
!13982 = distinct !DISubprogram(name: "instrument_atomic_write", scope: !10524, file: !10524, line: 84, type: !10525, scopeLine: 85, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!13983 = !DILocation(line: 84, column: 74, scope: !13982, inlinedAt: !13984)
!13984 = distinct !DILocation(line: 41, column: 2, scope: !13969)
!13985 = !DILocalVariable(name: "size", arg: 2, scope: !13982, file: !10524, line: 84, type: !385)
!13986 = !DILocation(line: 84, column: 84, scope: !13982, inlinedAt: !13984)
!13987 = !DILocalVariable(name: "nr", arg: 1, scope: !13969, file: !13970, line: 39, type: !373)
!13988 = !DILocation(line: 39, column: 35, scope: !13969)
!13989 = !DILocalVariable(name: "addr", arg: 2, scope: !13969, file: !13970, line: 39, type: !13973)
!13990 = !DILocation(line: 39, column: 63, scope: !13969)
!13991 = !DILocation(line: 41, column: 26, scope: !13969)
!13992 = !DILocation(line: 41, column: 33, scope: !13969)
!13993 = !DILocation(line: 41, column: 31, scope: !13969)
!13994 = !DILocation(line: 86, column: 20, scope: !13982, inlinedAt: !13984)
!13995 = !DILocation(line: 86, column: 23, scope: !13982, inlinedAt: !13984)
!13996 = !DILocation(line: 86, column: 2, scope: !13982, inlinedAt: !13984)
!13997 = !DILocation(line: 87, column: 2, scope: !13982, inlinedAt: !13984)
!13998 = !DILocation(line: 42, column: 17, scope: !13969)
!13999 = !DILocation(line: 42, column: 21, scope: !13969)
!14000 = !DILocation(line: 74, column: 27, scope: !14001, inlinedAt: !13978)
!14001 = distinct !DILexicalBlock(scope: !13976, file: !5443, line: 74, column: 6)
!14002 = !DILocation(line: 74, column: 6, scope: !14001, inlinedAt: !13978)
!14003 = !DILocation(line: 74, column: 6, scope: !13976, inlinedAt: !13978)
!14004 = !DILocation(line: 76, column: 6, scope: !14005, inlinedAt: !13978)
!14005 = distinct !DILexicalBlock(scope: !14001, file: !5443, line: 74, column: 32)
!14006 = !DILocation(line: 77, column: 13, scope: !14005, inlinedAt: !13978)
!14007 = !DILocation(line: 77, column: 12, scope: !14005, inlinedAt: !13978)
!14008 = !DILocation(line: 75, column: 3, scope: !14005, inlinedAt: !13978)
!14009 = !{i32 -2147096741}
!14010 = !DILocation(line: 78, column: 2, scope: !14005, inlinedAt: !13978)
!14011 = !DILocation(line: 80, column: 8, scope: !14012, inlinedAt: !13978)
!14012 = distinct !DILexicalBlock(scope: !14001, file: !5443, line: 78, column: 9)
!14013 = !DILocation(line: 80, column: 32, scope: !14012, inlinedAt: !13978)
!14014 = !DILocation(line: 79, column: 3, scope: !14012, inlinedAt: !13978)
!14015 = !{i32 -2147096609}
!14016 = !DILocation(line: 43, column: 1, scope: !13969)
!14017 = distinct !DISubprogram(name: "kasan_check_write", scope: !14018, file: !14018, line: 38, type: !14019, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14018 = !DIFile(filename: "./include/linux/kasan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14019 = !DISubroutineType(types: !14020)
!14020 = !{!261, !10527, !7}
!14021 = !DILocalVariable(name: "p", arg: 1, scope: !14017, file: !14018, line: 38, type: !10527)
!14022 = !DILocation(line: 38, column: 59, scope: !14017)
!14023 = !DILocalVariable(name: "size", arg: 2, scope: !14017, file: !14018, line: 38, type: !7)
!14024 = !DILocation(line: 38, column: 75, scope: !14017)
!14025 = !DILocation(line: 40, column: 2, scope: !14017)
!14026 = distinct !DISubprogram(name: "kcsan_check_access", scope: !14027, file: !14027, line: 178, type: !14028, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14027 = !DIFile(filename: "./include/linux/kcsan-checks.h", directory: "/home/lizy2001/genbc/linux")
!14028 = !DISubroutineType(types: !14029)
!14029 = !{null, !10527, !385, !234}
!14030 = !DILocalVariable(name: "ptr", arg: 1, scope: !14026, file: !14027, line: 178, type: !10527)
!14031 = !DILocation(line: 178, column: 60, scope: !14026)
!14032 = !DILocalVariable(name: "size", arg: 2, scope: !14026, file: !14027, line: 178, type: !385)
!14033 = !DILocation(line: 178, column: 72, scope: !14026)
!14034 = !DILocalVariable(name: "type", arg: 3, scope: !14026, file: !14027, line: 179, type: !234)
!14035 = !DILocation(line: 179, column: 15, scope: !14026)
!14036 = !DILocation(line: 179, column: 23, scope: !14026)
!14037 = distinct !DISubprogram(name: "kmalloc_array", scope: !219, file: !219, line: 584, type: !6919, scopeLine: 585, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14038 = !DILocation(line: 445, column: 72, scope: !5941, inlinedAt: !14039)
!14039 = distinct !DILocation(line: 552, column: 10, scope: !5946, inlinedAt: !14040)
!14040 = distinct !DILocation(line: 591, column: 10, scope: !14041)
!14041 = distinct !DILexicalBlock(scope: !14037, file: !219, line: 590, column: 6)
!14042 = !DILocation(line: 446, column: 9, scope: !5941, inlinedAt: !14039)
!14043 = !DILocation(line: 446, column: 23, scope: !5941, inlinedAt: !14039)
!14044 = !DILocation(line: 448, column: 8, scope: !5941, inlinedAt: !14039)
!14045 = !DILocation(line: 318, column: 67, scope: !5957, inlinedAt: !14046)
!14046 = distinct !DILocation(line: 553, column: 20, scope: !5946, inlinedAt: !14040)
!14047 = !DILocation(line: 346, column: 58, scope: !5963, inlinedAt: !14048)
!14048 = distinct !DILocation(line: 547, column: 11, scope: !5946, inlinedAt: !14040)
!14049 = !DILocation(line: 472, column: 28, scope: !5969, inlinedAt: !14050)
!14050 = distinct !DILocation(line: 481, column: 9, scope: !5974, inlinedAt: !14051)
!14051 = distinct !DILocation(line: 545, column: 11, scope: !5976, inlinedAt: !14040)
!14052 = !DILocation(line: 472, column: 40, scope: !5969, inlinedAt: !14050)
!14053 = !DILocation(line: 472, column: 60, scope: !5969, inlinedAt: !14050)
!14054 = !DILocation(line: 478, column: 51, scope: !5974, inlinedAt: !14051)
!14055 = !DILocation(line: 478, column: 63, scope: !5974, inlinedAt: !14051)
!14056 = !DILocation(line: 480, column: 15, scope: !5974, inlinedAt: !14051)
!14057 = !DILocation(line: 538, column: 45, scope: !5948, inlinedAt: !14040)
!14058 = !DILocation(line: 538, column: 57, scope: !5948, inlinedAt: !14040)
!14059 = !DILocation(line: 542, column: 16, scope: !5946, inlinedAt: !14040)
!14060 = !DILocalVariable(name: "n", arg: 1, scope: !14037, file: !219, line: 584, type: !385)
!14061 = !DILocation(line: 584, column: 42, scope: !14037)
!14062 = !DILocalVariable(name: "size", arg: 2, scope: !14037, file: !219, line: 584, type: !385)
!14063 = !DILocation(line: 584, column: 52, scope: !14037)
!14064 = !DILocalVariable(name: "flags", arg: 3, scope: !14037, file: !219, line: 584, type: !226)
!14065 = !DILocation(line: 584, column: 64, scope: !14037)
!14066 = !DILocalVariable(name: "bytes", scope: !14037, file: !219, line: 586, type: !385)
!14067 = !DILocation(line: 586, column: 9, scope: !14037)
!14068 = !DILocalVariable(name: "__a", scope: !14069, file: !219, line: 588, type: !385)
!14069 = distinct !DILexicalBlock(scope: !14070, file: !219, line: 588, column: 6)
!14070 = distinct !DILexicalBlock(scope: !14037, file: !219, line: 588, column: 6)
!14071 = !DILocation(line: 588, column: 6, scope: !14069)
!14072 = !DILocalVariable(name: "__b", scope: !14069, file: !219, line: 588, type: !385)
!14073 = !DILocalVariable(name: "__d", scope: !14069, file: !219, line: 588, type: !4953)
!14074 = !DILocation(line: 588, column: 6, scope: !14070)
!14075 = !DILocation(line: 588, column: 6, scope: !14037)
!14076 = !DILocation(line: 589, column: 3, scope: !14070)
!14077 = !DILocation(line: 590, column: 27, scope: !14041)
!14078 = !DILocation(line: 590, column: 6, scope: !14041)
!14079 = !DILocation(line: 590, column: 30, scope: !14041)
!14080 = !DILocation(line: 590, column: 54, scope: !14041)
!14081 = !DILocation(line: 590, column: 33, scope: !14041)
!14082 = !DILocation(line: 590, column: 6, scope: !14037)
!14083 = !DILocation(line: 591, column: 18, scope: !14041)
!14084 = !DILocation(line: 591, column: 25, scope: !14041)
!14085 = !DILocation(line: 540, column: 27, scope: !5947, inlinedAt: !14040)
!14086 = !DILocation(line: 540, column: 6, scope: !5947, inlinedAt: !14040)
!14087 = !DILocation(line: 540, column: 6, scope: !5948, inlinedAt: !14040)
!14088 = !DILocation(line: 544, column: 7, scope: !5976, inlinedAt: !14040)
!14089 = !DILocation(line: 544, column: 12, scope: !5976, inlinedAt: !14040)
!14090 = !DILocation(line: 544, column: 7, scope: !5946, inlinedAt: !14040)
!14091 = !DILocation(line: 545, column: 25, scope: !5976, inlinedAt: !14040)
!14092 = !DILocation(line: 545, column: 31, scope: !5976, inlinedAt: !14040)
!14093 = !DILocation(line: 480, column: 33, scope: !5974, inlinedAt: !14051)
!14094 = !DILocation(line: 480, column: 23, scope: !5974, inlinedAt: !14051)
!14095 = !DILocation(line: 481, column: 29, scope: !5974, inlinedAt: !14051)
!14096 = !DILocation(line: 481, column: 35, scope: !5974, inlinedAt: !14051)
!14097 = !DILocation(line: 481, column: 42, scope: !5974, inlinedAt: !14051)
!14098 = !DILocation(line: 474, column: 23, scope: !5969, inlinedAt: !14050)
!14099 = !DILocation(line: 474, column: 29, scope: !5969, inlinedAt: !14050)
!14100 = !DILocation(line: 474, column: 36, scope: !5969, inlinedAt: !14050)
!14101 = !DILocation(line: 474, column: 9, scope: !5969, inlinedAt: !14050)
!14102 = !DILocation(line: 545, column: 4, scope: !5976, inlinedAt: !14040)
!14103 = !DILocation(line: 547, column: 25, scope: !5946, inlinedAt: !14040)
!14104 = !DILocation(line: 348, column: 7, scope: !6020, inlinedAt: !14048)
!14105 = !DILocation(line: 348, column: 6, scope: !5963, inlinedAt: !14048)
!14106 = !DILocation(line: 349, column: 3, scope: !6020, inlinedAt: !14048)
!14107 = !DILocation(line: 351, column: 6, scope: !6024, inlinedAt: !14048)
!14108 = !DILocation(line: 351, column: 11, scope: !6024, inlinedAt: !14048)
!14109 = !DILocation(line: 351, column: 6, scope: !5963, inlinedAt: !14048)
!14110 = !DILocation(line: 352, column: 3, scope: !6024, inlinedAt: !14048)
!14111 = !DILocation(line: 354, column: 32, scope: !6029, inlinedAt: !14048)
!14112 = !DILocation(line: 354, column: 37, scope: !6029, inlinedAt: !14048)
!14113 = !DILocation(line: 354, column: 42, scope: !6029, inlinedAt: !14048)
!14114 = !DILocation(line: 354, column: 45, scope: !6029, inlinedAt: !14048)
!14115 = !DILocation(line: 354, column: 50, scope: !6029, inlinedAt: !14048)
!14116 = !DILocation(line: 354, column: 6, scope: !5963, inlinedAt: !14048)
!14117 = !DILocation(line: 355, column: 3, scope: !6029, inlinedAt: !14048)
!14118 = !DILocation(line: 356, column: 32, scope: !6037, inlinedAt: !14048)
!14119 = !DILocation(line: 356, column: 37, scope: !6037, inlinedAt: !14048)
!14120 = !DILocation(line: 356, column: 43, scope: !6037, inlinedAt: !14048)
!14121 = !DILocation(line: 356, column: 46, scope: !6037, inlinedAt: !14048)
!14122 = !DILocation(line: 356, column: 51, scope: !6037, inlinedAt: !14048)
!14123 = !DILocation(line: 356, column: 6, scope: !5963, inlinedAt: !14048)
!14124 = !DILocation(line: 357, column: 3, scope: !6037, inlinedAt: !14048)
!14125 = !DILocation(line: 358, column: 6, scope: !6045, inlinedAt: !14048)
!14126 = !DILocation(line: 358, column: 11, scope: !6045, inlinedAt: !14048)
!14127 = !DILocation(line: 358, column: 6, scope: !5963, inlinedAt: !14048)
!14128 = !DILocation(line: 358, column: 26, scope: !6045, inlinedAt: !14048)
!14129 = !DILocation(line: 359, column: 6, scope: !6050, inlinedAt: !14048)
!14130 = !DILocation(line: 359, column: 11, scope: !6050, inlinedAt: !14048)
!14131 = !DILocation(line: 359, column: 6, scope: !5963, inlinedAt: !14048)
!14132 = !DILocation(line: 359, column: 26, scope: !6050, inlinedAt: !14048)
!14133 = !DILocation(line: 360, column: 6, scope: !6055, inlinedAt: !14048)
!14134 = !DILocation(line: 360, column: 11, scope: !6055, inlinedAt: !14048)
!14135 = !DILocation(line: 360, column: 6, scope: !5963, inlinedAt: !14048)
!14136 = !DILocation(line: 360, column: 26, scope: !6055, inlinedAt: !14048)
!14137 = !DILocation(line: 361, column: 6, scope: !6060, inlinedAt: !14048)
!14138 = !DILocation(line: 361, column: 11, scope: !6060, inlinedAt: !14048)
!14139 = !DILocation(line: 361, column: 6, scope: !5963, inlinedAt: !14048)
!14140 = !DILocation(line: 361, column: 26, scope: !6060, inlinedAt: !14048)
!14141 = !DILocation(line: 362, column: 6, scope: !6065, inlinedAt: !14048)
!14142 = !DILocation(line: 362, column: 11, scope: !6065, inlinedAt: !14048)
!14143 = !DILocation(line: 362, column: 6, scope: !5963, inlinedAt: !14048)
!14144 = !DILocation(line: 362, column: 26, scope: !6065, inlinedAt: !14048)
!14145 = !DILocation(line: 363, column: 6, scope: !6070, inlinedAt: !14048)
!14146 = !DILocation(line: 363, column: 11, scope: !6070, inlinedAt: !14048)
!14147 = !DILocation(line: 363, column: 6, scope: !5963, inlinedAt: !14048)
!14148 = !DILocation(line: 363, column: 26, scope: !6070, inlinedAt: !14048)
!14149 = !DILocation(line: 364, column: 6, scope: !6075, inlinedAt: !14048)
!14150 = !DILocation(line: 364, column: 11, scope: !6075, inlinedAt: !14048)
!14151 = !DILocation(line: 364, column: 6, scope: !5963, inlinedAt: !14048)
!14152 = !DILocation(line: 364, column: 26, scope: !6075, inlinedAt: !14048)
!14153 = !DILocation(line: 365, column: 6, scope: !6080, inlinedAt: !14048)
!14154 = !DILocation(line: 365, column: 11, scope: !6080, inlinedAt: !14048)
!14155 = !DILocation(line: 365, column: 6, scope: !5963, inlinedAt: !14048)
!14156 = !DILocation(line: 365, column: 26, scope: !6080, inlinedAt: !14048)
!14157 = !DILocation(line: 366, column: 6, scope: !6085, inlinedAt: !14048)
!14158 = !DILocation(line: 366, column: 11, scope: !6085, inlinedAt: !14048)
!14159 = !DILocation(line: 366, column: 6, scope: !5963, inlinedAt: !14048)
!14160 = !DILocation(line: 366, column: 26, scope: !6085, inlinedAt: !14048)
!14161 = !DILocation(line: 367, column: 6, scope: !6090, inlinedAt: !14048)
!14162 = !DILocation(line: 367, column: 11, scope: !6090, inlinedAt: !14048)
!14163 = !DILocation(line: 367, column: 6, scope: !5963, inlinedAt: !14048)
!14164 = !DILocation(line: 367, column: 26, scope: !6090, inlinedAt: !14048)
!14165 = !DILocation(line: 368, column: 6, scope: !6095, inlinedAt: !14048)
!14166 = !DILocation(line: 368, column: 11, scope: !6095, inlinedAt: !14048)
!14167 = !DILocation(line: 368, column: 6, scope: !5963, inlinedAt: !14048)
!14168 = !DILocation(line: 368, column: 26, scope: !6095, inlinedAt: !14048)
!14169 = !DILocation(line: 369, column: 6, scope: !6100, inlinedAt: !14048)
!14170 = !DILocation(line: 369, column: 11, scope: !6100, inlinedAt: !14048)
!14171 = !DILocation(line: 369, column: 6, scope: !5963, inlinedAt: !14048)
!14172 = !DILocation(line: 369, column: 26, scope: !6100, inlinedAt: !14048)
!14173 = !DILocation(line: 370, column: 6, scope: !6105, inlinedAt: !14048)
!14174 = !DILocation(line: 370, column: 11, scope: !6105, inlinedAt: !14048)
!14175 = !DILocation(line: 370, column: 6, scope: !5963, inlinedAt: !14048)
!14176 = !DILocation(line: 370, column: 26, scope: !6105, inlinedAt: !14048)
!14177 = !DILocation(line: 371, column: 6, scope: !6110, inlinedAt: !14048)
!14178 = !DILocation(line: 371, column: 11, scope: !6110, inlinedAt: !14048)
!14179 = !DILocation(line: 371, column: 6, scope: !5963, inlinedAt: !14048)
!14180 = !DILocation(line: 371, column: 26, scope: !6110, inlinedAt: !14048)
!14181 = !DILocation(line: 372, column: 6, scope: !6115, inlinedAt: !14048)
!14182 = !DILocation(line: 372, column: 11, scope: !6115, inlinedAt: !14048)
!14183 = !DILocation(line: 372, column: 6, scope: !5963, inlinedAt: !14048)
!14184 = !DILocation(line: 372, column: 26, scope: !6115, inlinedAt: !14048)
!14185 = !DILocation(line: 373, column: 6, scope: !6120, inlinedAt: !14048)
!14186 = !DILocation(line: 373, column: 11, scope: !6120, inlinedAt: !14048)
!14187 = !DILocation(line: 373, column: 6, scope: !5963, inlinedAt: !14048)
!14188 = !DILocation(line: 373, column: 26, scope: !6120, inlinedAt: !14048)
!14189 = !DILocation(line: 374, column: 6, scope: !6125, inlinedAt: !14048)
!14190 = !DILocation(line: 374, column: 11, scope: !6125, inlinedAt: !14048)
!14191 = !DILocation(line: 374, column: 6, scope: !5963, inlinedAt: !14048)
!14192 = !DILocation(line: 374, column: 26, scope: !6125, inlinedAt: !14048)
!14193 = !DILocation(line: 375, column: 6, scope: !6130, inlinedAt: !14048)
!14194 = !DILocation(line: 375, column: 11, scope: !6130, inlinedAt: !14048)
!14195 = !DILocation(line: 375, column: 6, scope: !5963, inlinedAt: !14048)
!14196 = !DILocation(line: 375, column: 27, scope: !6130, inlinedAt: !14048)
!14197 = !DILocation(line: 376, column: 6, scope: !6135, inlinedAt: !14048)
!14198 = !DILocation(line: 376, column: 11, scope: !6135, inlinedAt: !14048)
!14199 = !DILocation(line: 376, column: 6, scope: !5963, inlinedAt: !14048)
!14200 = !DILocation(line: 376, column: 32, scope: !6135, inlinedAt: !14048)
!14201 = !DILocation(line: 377, column: 6, scope: !6140, inlinedAt: !14048)
!14202 = !DILocation(line: 377, column: 11, scope: !6140, inlinedAt: !14048)
!14203 = !DILocation(line: 377, column: 6, scope: !5963, inlinedAt: !14048)
!14204 = !DILocation(line: 377, column: 32, scope: !6140, inlinedAt: !14048)
!14205 = !DILocation(line: 378, column: 6, scope: !6145, inlinedAt: !14048)
!14206 = !DILocation(line: 378, column: 11, scope: !6145, inlinedAt: !14048)
!14207 = !DILocation(line: 378, column: 6, scope: !5963, inlinedAt: !14048)
!14208 = !DILocation(line: 378, column: 32, scope: !6145, inlinedAt: !14048)
!14209 = !DILocation(line: 379, column: 6, scope: !6150, inlinedAt: !14048)
!14210 = !DILocation(line: 379, column: 11, scope: !6150, inlinedAt: !14048)
!14211 = !DILocation(line: 379, column: 6, scope: !5963, inlinedAt: !14048)
!14212 = !DILocation(line: 379, column: 33, scope: !6150, inlinedAt: !14048)
!14213 = !DILocation(line: 380, column: 6, scope: !6155, inlinedAt: !14048)
!14214 = !DILocation(line: 380, column: 11, scope: !6155, inlinedAt: !14048)
!14215 = !DILocation(line: 380, column: 6, scope: !5963, inlinedAt: !14048)
!14216 = !DILocation(line: 380, column: 33, scope: !6155, inlinedAt: !14048)
!14217 = !DILocation(line: 381, column: 6, scope: !6160, inlinedAt: !14048)
!14218 = !DILocation(line: 381, column: 11, scope: !6160, inlinedAt: !14048)
!14219 = !DILocation(line: 381, column: 6, scope: !5963, inlinedAt: !14048)
!14220 = !DILocation(line: 381, column: 33, scope: !6160, inlinedAt: !14048)
!14221 = !DILocation(line: 382, column: 2, scope: !6165, inlinedAt: !14048)
!14222 = !DILocation(line: 382, column: 2, scope: !6169, inlinedAt: !14048)
!14223 = !DILocation(line: 382, column: 2, scope: !6170, inlinedAt: !14048)
!14224 = !DILocation(line: 386, column: 1, scope: !5963, inlinedAt: !14048)
!14225 = !DILocation(line: 547, column: 9, scope: !5946, inlinedAt: !14040)
!14226 = !DILocation(line: 549, column: 8, scope: !6176, inlinedAt: !14040)
!14227 = !DILocation(line: 549, column: 7, scope: !5946, inlinedAt: !14040)
!14228 = !DILocation(line: 550, column: 4, scope: !6176, inlinedAt: !14040)
!14229 = !DILocation(line: 553, column: 33, scope: !5946, inlinedAt: !14040)
!14230 = !DILocation(line: 325, column: 6, scope: !6181, inlinedAt: !14046)
!14231 = !DILocation(line: 325, column: 6, scope: !5957, inlinedAt: !14046)
!14232 = !DILocation(line: 326, column: 3, scope: !6181, inlinedAt: !14046)
!14233 = !DILocation(line: 332, column: 9, scope: !5957, inlinedAt: !14046)
!14234 = !DILocation(line: 332, column: 15, scope: !5957, inlinedAt: !14046)
!14235 = !DILocation(line: 332, column: 2, scope: !5957, inlinedAt: !14046)
!14236 = !DILocation(line: 336, column: 1, scope: !5957, inlinedAt: !14046)
!14237 = !DILocation(line: 553, column: 5, scope: !5946, inlinedAt: !14040)
!14238 = !DILocation(line: 553, column: 41, scope: !5946, inlinedAt: !14040)
!14239 = !DILocation(line: 554, column: 5, scope: !5946, inlinedAt: !14040)
!14240 = !DILocation(line: 554, column: 12, scope: !5946, inlinedAt: !14040)
!14241 = !DILocation(line: 448, column: 31, scope: !5941, inlinedAt: !14039)
!14242 = !DILocation(line: 448, column: 34, scope: !5941, inlinedAt: !14039)
!14243 = !DILocation(line: 448, column: 14, scope: !5941, inlinedAt: !14039)
!14244 = !DILocation(line: 450, column: 22, scope: !5941, inlinedAt: !14039)
!14245 = !DILocation(line: 450, column: 25, scope: !5941, inlinedAt: !14039)
!14246 = !DILocation(line: 450, column: 30, scope: !5941, inlinedAt: !14039)
!14247 = !DILocation(line: 450, column: 36, scope: !5941, inlinedAt: !14039)
!14248 = !DILocation(line: 450, column: 8, scope: !5941, inlinedAt: !14039)
!14249 = !DILocation(line: 450, column: 6, scope: !5941, inlinedAt: !14039)
!14250 = !DILocation(line: 451, column: 9, scope: !5941, inlinedAt: !14039)
!14251 = !DILocation(line: 552, column: 3, scope: !5946, inlinedAt: !14040)
!14252 = !DILocation(line: 557, column: 19, scope: !5948, inlinedAt: !14040)
!14253 = !DILocation(line: 557, column: 25, scope: !5948, inlinedAt: !14040)
!14254 = !DILocation(line: 557, column: 9, scope: !5948, inlinedAt: !14040)
!14255 = !DILocation(line: 557, column: 2, scope: !5948, inlinedAt: !14040)
!14256 = !DILocation(line: 558, column: 1, scope: !5948, inlinedAt: !14040)
!14257 = !DILocation(line: 591, column: 3, scope: !14041)
!14258 = !DILocation(line: 592, column: 19, scope: !14037)
!14259 = !DILocation(line: 592, column: 26, scope: !14037)
!14260 = !DILocation(line: 592, column: 9, scope: !14037)
!14261 = !DILocation(line: 592, column: 2, scope: !14037)
!14262 = !DILocation(line: 593, column: 1, scope: !14037)
!14263 = distinct !DISubprogram(name: "__must_check_overflow", scope: !10083, file: !10083, line: 52, type: !14264, scopeLine: 53, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14264 = !DISubroutineType(types: !14265)
!14265 = !{!261, !261}
!14266 = !DILocalVariable(name: "overflow", arg: 1, scope: !14263, file: !10083, line: 52, type: !261)
!14267 = !DILocation(line: 52, column: 60, scope: !14263)
!14268 = !DILocation(line: 54, column: 9, scope: !14263)
!14269 = !DILocation(line: 54, column: 2, scope: !14263)
!14270 = distinct !DISubprogram(name: "__list_add", scope: !6950, file: !6950, line: 63, type: !14271, scopeLine: 66, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14271 = !DISubroutineType(types: !14272)
!14272 = !{null, !287, !287, !287}
!14273 = !DILocalVariable(name: "new", arg: 1, scope: !14270, file: !6950, line: 63, type: !287)
!14274 = !DILocation(line: 63, column: 49, scope: !14270)
!14275 = !DILocalVariable(name: "prev", arg: 2, scope: !14270, file: !6950, line: 64, type: !287)
!14276 = !DILocation(line: 64, column: 28, scope: !14270)
!14277 = !DILocalVariable(name: "next", arg: 3, scope: !14270, file: !6950, line: 65, type: !287)
!14278 = !DILocation(line: 65, column: 28, scope: !14270)
!14279 = !DILocation(line: 67, column: 24, scope: !14280)
!14280 = distinct !DILexicalBlock(scope: !14270, file: !6950, line: 67, column: 6)
!14281 = !DILocation(line: 67, column: 29, scope: !14280)
!14282 = !DILocation(line: 67, column: 35, scope: !14280)
!14283 = !DILocation(line: 67, column: 7, scope: !14280)
!14284 = !DILocation(line: 67, column: 6, scope: !14270)
!14285 = !DILocation(line: 68, column: 3, scope: !14280)
!14286 = !DILocation(line: 70, column: 15, scope: !14270)
!14287 = !DILocation(line: 70, column: 2, scope: !14270)
!14288 = !DILocation(line: 70, column: 8, scope: !14270)
!14289 = !DILocation(line: 70, column: 13, scope: !14270)
!14290 = !DILocation(line: 71, column: 14, scope: !14270)
!14291 = !DILocation(line: 71, column: 2, scope: !14270)
!14292 = !DILocation(line: 71, column: 7, scope: !14270)
!14293 = !DILocation(line: 71, column: 12, scope: !14270)
!14294 = !DILocation(line: 72, column: 14, scope: !14270)
!14295 = !DILocation(line: 72, column: 2, scope: !14270)
!14296 = !DILocation(line: 72, column: 7, scope: !14270)
!14297 = !DILocation(line: 72, column: 12, scope: !14270)
!14298 = !DILocation(line: 73, column: 2, scope: !14270)
!14299 = !DILocation(line: 73, column: 2, scope: !14300)
!14300 = distinct !DILexicalBlock(scope: !14270, file: !6950, line: 73, column: 2)
!14301 = !DILocation(line: 73, column: 2, scope: !14302)
!14302 = distinct !DILexicalBlock(scope: !14300, file: !6950, line: 73, column: 2)
!14303 = !DILocation(line: 73, column: 2, scope: !14304)
!14304 = distinct !DILexicalBlock(scope: !14300, file: !6950, line: 73, column: 2)
!14305 = !DILocation(line: 74, column: 1, scope: !14270)
!14306 = distinct !DISubprogram(name: "__list_add_valid", scope: !6950, file: !6950, line: 45, type: !14307, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14307 = !DISubroutineType(types: !14308)
!14308 = !{!261, !287, !287, !287}
!14309 = !DILocalVariable(name: "new", arg: 1, scope: !14306, file: !6950, line: 45, type: !287)
!14310 = !DILocation(line: 45, column: 55, scope: !14306)
!14311 = !DILocalVariable(name: "prev", arg: 2, scope: !14306, file: !6950, line: 46, type: !287)
!14312 = !DILocation(line: 46, column: 23, scope: !14306)
!14313 = !DILocalVariable(name: "next", arg: 3, scope: !14306, file: !6950, line: 47, type: !287)
!14314 = !DILocation(line: 47, column: 23, scope: !14306)
!14315 = !DILocation(line: 49, column: 2, scope: !14306)
!14316 = distinct !DISubprogram(name: "__phys_addr_nodebug", scope: !14317, file: !14317, line: 18, type: !8939, scopeLine: 19, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14317 = !DIFile(filename: "./arch/x86/include/asm/page_64.h", directory: "/home/lizy2001/genbc/linux")
!14318 = !DILocalVariable(name: "x", arg: 1, scope: !14316, file: !14317, line: 18, type: !388)
!14319 = !DILocation(line: 18, column: 63, scope: !14316)
!14320 = !DILocalVariable(name: "y", scope: !14316, file: !14317, line: 20, type: !388)
!14321 = !DILocation(line: 20, column: 16, scope: !14316)
!14322 = !DILocation(line: 20, column: 20, scope: !14316)
!14323 = !DILocation(line: 20, column: 22, scope: !14316)
!14324 = !DILocation(line: 23, column: 6, scope: !14316)
!14325 = !DILocation(line: 23, column: 12, scope: !14316)
!14326 = !DILocation(line: 23, column: 16, scope: !14316)
!14327 = !DILocation(line: 23, column: 14, scope: !14316)
!14328 = !DILocation(line: 23, column: 11, scope: !14316)
!14329 = !DILocation(line: 23, column: 21, scope: !14316)
!14330 = !DILocation(line: 23, column: 55, scope: !14316)
!14331 = !DILocation(line: 23, column: 53, scope: !14316)
!14332 = !DILocation(line: 23, column: 8, scope: !14316)
!14333 = !DILocation(line: 23, column: 4, scope: !14316)
!14334 = !DILocation(line: 25, column: 9, scope: !14316)
!14335 = !DILocation(line: 25, column: 2, scope: !14316)
!14336 = distinct !DISubprogram(name: "sg_assign_page", scope: !4626, file: !4626, line: 87, type: !14337, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14337 = !DISubroutineType(types: !14338)
!14338 = !{null, !4629, !835}
!14339 = !DILocalVariable(name: "sg", arg: 1, scope: !14336, file: !4626, line: 87, type: !4629)
!14340 = !DILocation(line: 87, column: 55, scope: !14336)
!14341 = !DILocalVariable(name: "page", arg: 2, scope: !14336, file: !4626, line: 87, type: !835)
!14342 = !DILocation(line: 87, column: 72, scope: !14336)
!14343 = !DILocalVariable(name: "page_link", scope: !14336, file: !4626, line: 89, type: !388)
!14344 = !DILocation(line: 89, column: 16, scope: !14336)
!14345 = !DILocation(line: 89, column: 28, scope: !14336)
!14346 = !DILocation(line: 89, column: 32, scope: !14336)
!14347 = !DILocation(line: 89, column: 42, scope: !14336)
!14348 = !DILocation(line: 95, column: 2, scope: !14336)
!14349 = !DILocation(line: 95, column: 2, scope: !14350)
!14350 = distinct !DILexicalBlock(scope: !14351, file: !4626, line: 95, column: 2)
!14351 = distinct !DILexicalBlock(scope: !14336, file: !4626, line: 95, column: 2)
!14352 = !DILocation(line: 95, column: 2, scope: !14351)
!14353 = !DILocation(line: 95, column: 2, scope: !14354)
!14354 = distinct !DILexicalBlock(scope: !14350, file: !4626, line: 95, column: 2)
!14355 = !DILocation(line: 95, column: 2, scope: !14356)
!14356 = distinct !DILexicalBlock(scope: !14354, file: !4626, line: 95, column: 2)
!14357 = !DILocation(line: 95, column: 2, scope: !14358)
!14358 = distinct !DILexicalBlock(scope: !14354, file: !4626, line: 95, column: 2)
!14359 = !{i32 -2142222905, i32 -2142222876, i32 -2142222830, i32 -2142222772, i32 -2142222718, i32 -2142222664, i32 -2142222609, i32 -2142222578}
!14360 = !DILocation(line: 95, column: 2, scope: !14361)
!14361 = distinct !DILexicalBlock(scope: !14362, file: !4626, line: 95, column: 2)
!14362 = distinct !DILexicalBlock(scope: !14354, file: !4626, line: 95, column: 2)
!14363 = !{i32 -2142222129, i32 -2142222122, i32 -2142222068, i32 -2142222037, i32 -2142222007}
!14364 = !DILocation(line: 95, column: 2, scope: !14362)
!14365 = !DILocation(line: 99, column: 18, scope: !14336)
!14366 = !DILocation(line: 99, column: 46, scope: !14336)
!14367 = !DILocation(line: 99, column: 30, scope: !14336)
!14368 = !DILocation(line: 99, column: 28, scope: !14336)
!14369 = !DILocation(line: 99, column: 2, scope: !14336)
!14370 = !DILocation(line: 99, column: 6, scope: !14336)
!14371 = !DILocation(line: 99, column: 16, scope: !14336)
!14372 = !DILocation(line: 100, column: 1, scope: !14336)
!14373 = distinct !DISubprogram(name: "__spi_unmap_msg", scope: !3, file: !3, line: 980, type: !4707, scopeLine: 981, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14374 = !DILocalVariable(name: "ctlr", arg: 1, scope: !14373, file: !3, line: 980, type: !4512)
!14375 = !DILocation(line: 980, column: 51, scope: !14373)
!14376 = !DILocalVariable(name: "msg", arg: 2, scope: !14373, file: !3, line: 980, type: !4594)
!14377 = !DILocation(line: 980, column: 77, scope: !14373)
!14378 = !DILocalVariable(name: "xfer", scope: !14373, file: !3, line: 982, type: !4616)
!14379 = !DILocation(line: 982, column: 23, scope: !14373)
!14380 = !DILocalVariable(name: "tx_dev", scope: !14373, file: !3, line: 983, type: !3506)
!14381 = !DILocation(line: 983, column: 17, scope: !14373)
!14382 = !DILocalVariable(name: "rx_dev", scope: !14373, file: !3, line: 983, type: !3506)
!14383 = !DILocation(line: 983, column: 26, scope: !14373)
!14384 = !DILocation(line: 985, column: 7, scope: !14385)
!14385 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 985, column: 6)
!14386 = !DILocation(line: 985, column: 13, scope: !14385)
!14387 = !DILocation(line: 985, column: 28, scope: !14385)
!14388 = !DILocation(line: 985, column: 32, scope: !14385)
!14389 = !DILocation(line: 985, column: 38, scope: !14385)
!14390 = !DILocation(line: 985, column: 6, scope: !14373)
!14391 = !DILocation(line: 986, column: 3, scope: !14385)
!14392 = !DILocation(line: 988, column: 6, scope: !14393)
!14393 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 988, column: 6)
!14394 = !DILocation(line: 988, column: 12, scope: !14393)
!14395 = !DILocation(line: 988, column: 6, scope: !14373)
!14396 = !DILocation(line: 989, column: 12, scope: !14393)
!14397 = !DILocation(line: 989, column: 18, scope: !14393)
!14398 = !DILocation(line: 989, column: 26, scope: !14393)
!14399 = !DILocation(line: 989, column: 34, scope: !14393)
!14400 = !DILocation(line: 989, column: 10, scope: !14393)
!14401 = !DILocation(line: 989, column: 3, scope: !14393)
!14402 = !DILocation(line: 991, column: 12, scope: !14393)
!14403 = !DILocation(line: 991, column: 18, scope: !14393)
!14404 = !DILocation(line: 991, column: 22, scope: !14393)
!14405 = !DILocation(line: 991, column: 10, scope: !14393)
!14406 = !DILocation(line: 993, column: 6, scope: !14407)
!14407 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 993, column: 6)
!14408 = !DILocation(line: 993, column: 12, scope: !14407)
!14409 = !DILocation(line: 993, column: 6, scope: !14373)
!14410 = !DILocation(line: 994, column: 12, scope: !14407)
!14411 = !DILocation(line: 994, column: 18, scope: !14407)
!14412 = !DILocation(line: 994, column: 26, scope: !14407)
!14413 = !DILocation(line: 994, column: 34, scope: !14407)
!14414 = !DILocation(line: 994, column: 10, scope: !14407)
!14415 = !DILocation(line: 994, column: 3, scope: !14407)
!14416 = !DILocation(line: 996, column: 12, scope: !14407)
!14417 = !DILocation(line: 996, column: 18, scope: !14407)
!14418 = !DILocation(line: 996, column: 22, scope: !14407)
!14419 = !DILocation(line: 996, column: 10, scope: !14407)
!14420 = !DILocalVariable(name: "__mptr", scope: !14421, file: !3, line: 998, type: !228)
!14421 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 998, column: 2)
!14422 = distinct !DILexicalBlock(scope: !14373, file: !3, line: 998, column: 2)
!14423 = !DILocation(line: 998, column: 2, scope: !14421)
!14424 = !DILocation(line: 998, column: 2, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14421, file: !3, line: 998, column: 2)
!14426 = !DILocation(line: 998, column: 2, scope: !14422)
!14427 = !DILocation(line: 998, column: 2, scope: !14428)
!14428 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 998, column: 2)
!14429 = !DILocation(line: 999, column: 8, scope: !14430)
!14430 = distinct !DILexicalBlock(scope: !14431, file: !3, line: 999, column: 7)
!14431 = distinct !DILexicalBlock(scope: !14428, file: !3, line: 998, column: 60)
!14432 = !DILocation(line: 999, column: 14, scope: !14430)
!14433 = !DILocation(line: 999, column: 22, scope: !14430)
!14434 = !DILocation(line: 999, column: 28, scope: !14430)
!14435 = !DILocation(line: 999, column: 33, scope: !14430)
!14436 = !DILocation(line: 999, column: 38, scope: !14430)
!14437 = !DILocation(line: 999, column: 7, scope: !14431)
!14438 = !DILocation(line: 1000, column: 4, scope: !14430)
!14439 = !DILocation(line: 1002, column: 17, scope: !14431)
!14440 = !DILocation(line: 1002, column: 23, scope: !14431)
!14441 = !DILocation(line: 1002, column: 32, scope: !14431)
!14442 = !DILocation(line: 1002, column: 38, scope: !14431)
!14443 = !DILocation(line: 1002, column: 3, scope: !14431)
!14444 = !DILocation(line: 1003, column: 17, scope: !14431)
!14445 = !DILocation(line: 1003, column: 23, scope: !14431)
!14446 = !DILocation(line: 1003, column: 32, scope: !14431)
!14447 = !DILocation(line: 1003, column: 38, scope: !14431)
!14448 = !DILocation(line: 1003, column: 3, scope: !14431)
!14449 = !DILocation(line: 1004, column: 2, scope: !14431)
!14450 = !DILocalVariable(name: "__mptr", scope: !14451, file: !3, line: 998, type: !228)
!14451 = distinct !DILexicalBlock(scope: !14428, file: !3, line: 998, column: 2)
!14452 = !DILocation(line: 998, column: 2, scope: !14451)
!14453 = !DILocation(line: 998, column: 2, scope: !14454)
!14454 = distinct !DILexicalBlock(scope: !14451, file: !3, line: 998, column: 2)
!14455 = distinct !{!14455, !14426, !14456}
!14456 = !DILocation(line: 1004, column: 2, scope: !14422)
!14457 = !DILocation(line: 1006, column: 2, scope: !14373)
!14458 = !DILocation(line: 1006, column: 8, scope: !14373)
!14459 = !DILocation(line: 1006, column: 23, scope: !14373)
!14460 = !DILocation(line: 1008, column: 2, scope: !14373)
!14461 = !DILocation(line: 1009, column: 1, scope: !14373)
!14462 = distinct !DISubprogram(name: "__spi_queued_transfer", scope: !3, file: !3, line: 1830, type: !14463, scopeLine: 1833, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14463 = !DISubroutineType(types: !14464)
!14464 = !{!234, !4532, !4594, !261}
!14465 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !14466)
!14466 = distinct !DILocation(line: 1840, column: 3, scope: !14467)
!14467 = distinct !DILexicalBlock(scope: !14468, file: !3, line: 1839, column: 22)
!14468 = distinct !DILexicalBlock(scope: !14462, file: !3, line: 1839, column: 6)
!14469 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !14466)
!14470 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !14471)
!14471 = distinct !DILocation(line: 1850, column: 2, scope: !14462)
!14472 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !14471)
!14473 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !14474)
!14474 = distinct !DILocation(line: 1837, column: 2, scope: !14475)
!14475 = distinct !DILexicalBlock(scope: !14476, file: !3, line: 1837, column: 2)
!14476 = distinct !DILexicalBlock(scope: !14477, file: !3, line: 1837, column: 2)
!14477 = distinct !DILexicalBlock(scope: !14478, file: !3, line: 1837, column: 2)
!14478 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 1837, column: 2)
!14479 = distinct !DILexicalBlock(scope: !14462, file: !3, line: 1837, column: 2)
!14480 = !DILocalVariable(name: "spi", arg: 1, scope: !14462, file: !3, line: 1830, type: !4532)
!14481 = !DILocation(line: 1830, column: 53, scope: !14462)
!14482 = !DILocalVariable(name: "msg", arg: 2, scope: !14462, file: !3, line: 1831, type: !4594)
!14483 = !DILocation(line: 1831, column: 26, scope: !14462)
!14484 = !DILocalVariable(name: "need_pump", arg: 3, scope: !14462, file: !3, line: 1832, type: !261)
!14485 = !DILocation(line: 1832, column: 11, scope: !14462)
!14486 = !DILocalVariable(name: "ctlr", scope: !14462, file: !3, line: 1834, type: !4512)
!14487 = !DILocation(line: 1834, column: 25, scope: !14462)
!14488 = !DILocation(line: 1834, column: 32, scope: !14462)
!14489 = !DILocation(line: 1834, column: 37, scope: !14462)
!14490 = !DILocalVariable(name: "flags", scope: !14462, file: !3, line: 1835, type: !388)
!14491 = !DILocation(line: 1835, column: 16, scope: !14462)
!14492 = !DILocation(line: 1837, column: 2, scope: !14462)
!14493 = !DILocation(line: 1837, column: 2, scope: !14479)
!14494 = !DILocalVariable(name: "__dummy", scope: !14495, file: !3, line: 1837, type: !388)
!14495 = distinct !DILexicalBlock(scope: !14478, file: !3, line: 1837, column: 2)
!14496 = !DILocation(line: 1837, column: 2, scope: !14495)
!14497 = !DILocalVariable(name: "__dummy2", scope: !14495, file: !3, line: 1837, type: !388)
!14498 = !DILocation(line: 1837, column: 2, scope: !14478)
!14499 = !DILocation(line: 1837, column: 2, scope: !14477)
!14500 = !DILocation(line: 1837, column: 2, scope: !14501)
!14501 = distinct !DILexicalBlock(scope: !14477, file: !3, line: 1837, column: 2)
!14502 = !DILocalVariable(name: "__dummy", scope: !14503, file: !3, line: 1837, type: !388)
!14503 = distinct !DILexicalBlock(scope: !14504, file: !3, line: 1837, column: 2)
!14504 = distinct !DILexicalBlock(scope: !14501, file: !3, line: 1837, column: 2)
!14505 = !DILocation(line: 1837, column: 2, scope: !14503)
!14506 = !DILocalVariable(name: "__dummy2", scope: !14503, file: !3, line: 1837, type: !388)
!14507 = !DILocation(line: 1837, column: 2, scope: !14504)
!14508 = !DILocation(line: 1837, column: 2, scope: !14476)
!14509 = !{i32 -2140472525}
!14510 = !DILocation(line: 1837, column: 2, scope: !14475)
!14511 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !14474)
!14512 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !14474)
!14513 = !DILocation(line: 1839, column: 7, scope: !14468)
!14514 = !DILocation(line: 1839, column: 13, scope: !14468)
!14515 = !DILocation(line: 1839, column: 6, scope: !14462)
!14516 = !DILocation(line: 1840, column: 27, scope: !14467)
!14517 = !DILocation(line: 1840, column: 33, scope: !14467)
!14518 = !DILocation(line: 1840, column: 45, scope: !14467)
!14519 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !14466)
!14520 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !14466)
!14521 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !14466)
!14522 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !14466)
!14523 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !14466)
!14524 = !DILocation(line: 1841, column: 3, scope: !14467)
!14525 = !DILocation(line: 1843, column: 2, scope: !14462)
!14526 = !DILocation(line: 1843, column: 7, scope: !14462)
!14527 = !DILocation(line: 1843, column: 21, scope: !14462)
!14528 = !DILocation(line: 1844, column: 2, scope: !14462)
!14529 = !DILocation(line: 1844, column: 7, scope: !14462)
!14530 = !DILocation(line: 1844, column: 14, scope: !14462)
!14531 = !DILocation(line: 1846, column: 17, scope: !14462)
!14532 = !DILocation(line: 1846, column: 22, scope: !14462)
!14533 = !DILocation(line: 1846, column: 30, scope: !14462)
!14534 = !DILocation(line: 1846, column: 36, scope: !14462)
!14535 = !DILocation(line: 1846, column: 2, scope: !14462)
!14536 = !DILocation(line: 1847, column: 7, scope: !14537)
!14537 = distinct !DILexicalBlock(scope: !14462, file: !3, line: 1847, column: 6)
!14538 = !DILocation(line: 1847, column: 13, scope: !14537)
!14539 = !DILocation(line: 1847, column: 18, scope: !14537)
!14540 = !DILocation(line: 1847, column: 21, scope: !14537)
!14541 = !DILocation(line: 1847, column: 6, scope: !14462)
!14542 = !DILocation(line: 1848, column: 22, scope: !14537)
!14543 = !DILocation(line: 1848, column: 28, scope: !14537)
!14544 = !DILocation(line: 1848, column: 38, scope: !14537)
!14545 = !DILocation(line: 1848, column: 44, scope: !14537)
!14546 = !DILocation(line: 1848, column: 3, scope: !14537)
!14547 = !DILocation(line: 1850, column: 26, scope: !14462)
!14548 = !DILocation(line: 1850, column: 32, scope: !14462)
!14549 = !DILocation(line: 1850, column: 44, scope: !14462)
!14550 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !14471)
!14551 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !14471)
!14552 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !14471)
!14553 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !14471)
!14554 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !14471)
!14555 = !DILocation(line: 1851, column: 2, scope: !14462)
!14556 = !DILocation(line: 1852, column: 1, scope: !14462)
!14557 = distinct !DISubprogram(name: "spi_idle_runtime_pm", scope: !3, file: !3, line: 1347, type: !6210, scopeLine: 1348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14558 = !DILocalVariable(name: "ctlr", arg: 1, scope: !14557, file: !3, line: 1347, type: !4512)
!14559 = !DILocation(line: 1347, column: 56, scope: !14557)
!14560 = !DILocation(line: 1349, column: 6, scope: !14561)
!14561 = distinct !DILexicalBlock(scope: !14557, file: !3, line: 1349, column: 6)
!14562 = !DILocation(line: 1349, column: 12, scope: !14561)
!14563 = !DILocation(line: 1349, column: 6, scope: !14557)
!14564 = !DILocation(line: 1350, column: 29, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14561, file: !3, line: 1349, column: 29)
!14566 = !DILocation(line: 1350, column: 35, scope: !14565)
!14567 = !DILocation(line: 1350, column: 39, scope: !14565)
!14568 = !DILocation(line: 1350, column: 3, scope: !14565)
!14569 = !DILocation(line: 1351, column: 30, scope: !14565)
!14570 = !DILocation(line: 1351, column: 36, scope: !14565)
!14571 = !DILocation(line: 1351, column: 40, scope: !14565)
!14572 = !DILocation(line: 1351, column: 3, scope: !14565)
!14573 = !DILocation(line: 1352, column: 2, scope: !14565)
!14574 = !DILocation(line: 1353, column: 1, scope: !14557)
!14575 = distinct !DISubprogram(name: "trace_spi_controller_idle", scope: !7906, file: !7906, line: 29, type: !6210, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14576 = !DILocalVariable(name: "controller", arg: 1, scope: !14575, file: !7906, line: 29, type: !4512)
!14577 = !DILocation(line: 29, column: 1, scope: !14575)
!14578 = distinct !DISubprogram(name: "list_del_init", scope: !6950, file: !6950, line: 202, type: !8905, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14579 = !DILocalVariable(name: "entry", arg: 1, scope: !14578, file: !6950, line: 202, type: !287)
!14580 = !DILocation(line: 202, column: 52, scope: !14578)
!14581 = !DILocation(line: 204, column: 19, scope: !14578)
!14582 = !DILocation(line: 204, column: 2, scope: !14578)
!14583 = !DILocation(line: 205, column: 17, scope: !14578)
!14584 = !DILocation(line: 205, column: 2, scope: !14578)
!14585 = !DILocation(line: 206, column: 1, scope: !14578)
!14586 = distinct !DISubprogram(name: "trace_spi_controller_busy", scope: !7906, file: !7906, line: 37, type: !6210, scopeLine: 37, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14587 = !DILocalVariable(name: "controller", arg: 1, scope: !14586, file: !7906, line: 37, type: !4512)
!14588 = !DILocation(line: 37, column: 1, scope: !14586)
!14589 = distinct !DISubprogram(name: "pm_runtime_put", scope: !8434, file: !8434, line: 417, type: !3538, scopeLine: 418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14590 = !DILocalVariable(name: "dev", arg: 1, scope: !14589, file: !8434, line: 417, type: !3506)
!14591 = !DILocation(line: 417, column: 49, scope: !14589)
!14592 = !DILocation(line: 419, column: 27, scope: !14589)
!14593 = !DILocation(line: 419, column: 9, scope: !14589)
!14594 = !DILocation(line: 419, column: 2, scope: !14589)
!14595 = distinct !DISubprogram(name: "trace_spi_message_start", scope: !7906, file: !7906, line: 76, type: !7907, scopeLine: 76, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14596 = !DILocalVariable(name: "msg", arg: 1, scope: !14595, file: !7906, line: 76, type: !4594)
!14597 = !DILocation(line: 76, column: 1, scope: !14595)
!14598 = distinct !DISubprogram(name: "spi_map_msg", scope: !3, file: !3, line: 1043, type: !4707, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14599 = !DILocalVariable(name: "ctlr", arg: 1, scope: !14598, file: !3, line: 1043, type: !4512)
!14600 = !DILocation(line: 1043, column: 47, scope: !14598)
!14601 = !DILocalVariable(name: "msg", arg: 2, scope: !14598, file: !3, line: 1043, type: !4594)
!14602 = !DILocation(line: 1043, column: 73, scope: !14598)
!14603 = !DILocalVariable(name: "xfer", scope: !14598, file: !3, line: 1045, type: !4616)
!14604 = !DILocation(line: 1045, column: 23, scope: !14598)
!14605 = !DILocalVariable(name: "tmp", scope: !14598, file: !3, line: 1046, type: !228)
!14606 = !DILocation(line: 1046, column: 8, scope: !14598)
!14607 = !DILocalVariable(name: "max_tx", scope: !14598, file: !3, line: 1047, type: !7)
!14608 = !DILocation(line: 1047, column: 15, scope: !14598)
!14609 = !DILocalVariable(name: "max_rx", scope: !14598, file: !3, line: 1047, type: !7)
!14610 = !DILocation(line: 1047, column: 23, scope: !14598)
!14611 = !DILocation(line: 1049, column: 7, scope: !14612)
!14612 = distinct !DILexicalBlock(scope: !14598, file: !3, line: 1049, column: 6)
!14613 = !DILocation(line: 1049, column: 13, scope: !14612)
!14614 = !DILocation(line: 1049, column: 19, scope: !14612)
!14615 = !DILocation(line: 1050, column: 3, scope: !14612)
!14616 = !DILocation(line: 1050, column: 8, scope: !14612)
!14617 = !DILocation(line: 1050, column: 13, scope: !14612)
!14618 = !DILocation(line: 1050, column: 18, scope: !14612)
!14619 = !DILocation(line: 1050, column: 23, scope: !14612)
!14620 = !DILocation(line: 1049, column: 6, scope: !14598)
!14621 = !DILocation(line: 1051, column: 10, scope: !14622)
!14622 = distinct !DILexicalBlock(scope: !14612, file: !3, line: 1050, column: 37)
!14623 = !DILocation(line: 1052, column: 10, scope: !14622)
!14624 = !DILocalVariable(name: "__mptr", scope: !14625, file: !3, line: 1054, type: !228)
!14625 = distinct !DILexicalBlock(scope: !14626, file: !3, line: 1054, column: 3)
!14626 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 1054, column: 3)
!14627 = !DILocation(line: 1054, column: 3, scope: !14625)
!14628 = !DILocation(line: 1054, column: 3, scope: !14629)
!14629 = distinct !DILexicalBlock(scope: !14625, file: !3, line: 1054, column: 3)
!14630 = !DILocation(line: 1054, column: 3, scope: !14626)
!14631 = !DILocation(line: 1054, column: 3, scope: !14632)
!14632 = distinct !DILexicalBlock(scope: !14626, file: !3, line: 1054, column: 3)
!14633 = !DILocation(line: 1055, column: 9, scope: !14634)
!14634 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 1055, column: 8)
!14635 = distinct !DILexicalBlock(scope: !14632, file: !3, line: 1054, column: 61)
!14636 = !DILocation(line: 1055, column: 15, scope: !14634)
!14637 = !DILocation(line: 1055, column: 21, scope: !14634)
!14638 = !DILocation(line: 1055, column: 47, scope: !14634)
!14639 = !DILocation(line: 1056, column: 9, scope: !14634)
!14640 = !DILocation(line: 1056, column: 15, scope: !14634)
!14641 = !DILocation(line: 1055, column: 8, scope: !14635)
!14642 = !DILocalVariable(name: "__UNIQUE_ID___x316", scope: !14643, file: !3, line: 1057, type: !7)
!14643 = distinct !DILexicalBlock(scope: !14634, file: !3, line: 1057, column: 14)
!14644 = !DILocation(line: 1057, column: 14, scope: !14643)
!14645 = !DILocalVariable(name: "__UNIQUE_ID___y317", scope: !14643, file: !3, line: 1057, type: !7)
!14646 = !DILocation(line: 1057, column: 12, scope: !14634)
!14647 = !DILocation(line: 1057, column: 5, scope: !14634)
!14648 = !DILocation(line: 1058, column: 9, scope: !14649)
!14649 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 1058, column: 8)
!14650 = !DILocation(line: 1058, column: 15, scope: !14649)
!14651 = !DILocation(line: 1058, column: 21, scope: !14649)
!14652 = !DILocation(line: 1058, column: 47, scope: !14649)
!14653 = !DILocation(line: 1059, column: 9, scope: !14649)
!14654 = !DILocation(line: 1059, column: 15, scope: !14649)
!14655 = !DILocation(line: 1058, column: 8, scope: !14635)
!14656 = !DILocalVariable(name: "__UNIQUE_ID___x318", scope: !14657, file: !3, line: 1060, type: !7)
!14657 = distinct !DILexicalBlock(scope: !14649, file: !3, line: 1060, column: 14)
!14658 = !DILocation(line: 1060, column: 14, scope: !14657)
!14659 = !DILocalVariable(name: "__UNIQUE_ID___y319", scope: !14657, file: !3, line: 1060, type: !7)
!14660 = !DILocation(line: 1060, column: 12, scope: !14649)
!14661 = !DILocation(line: 1060, column: 5, scope: !14649)
!14662 = !DILocation(line: 1061, column: 3, scope: !14635)
!14663 = !DILocalVariable(name: "__mptr", scope: !14664, file: !3, line: 1054, type: !228)
!14664 = distinct !DILexicalBlock(scope: !14632, file: !3, line: 1054, column: 3)
!14665 = !DILocation(line: 1054, column: 3, scope: !14664)
!14666 = !DILocation(line: 1054, column: 3, scope: !14667)
!14667 = distinct !DILexicalBlock(scope: !14664, file: !3, line: 1054, column: 3)
!14668 = distinct !{!14668, !14630, !14669}
!14669 = !DILocation(line: 1061, column: 3, scope: !14626)
!14670 = !DILocation(line: 1063, column: 7, scope: !14671)
!14671 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 1063, column: 7)
!14672 = !DILocation(line: 1063, column: 7, scope: !14622)
!14673 = !DILocation(line: 1064, column: 19, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14671, file: !3, line: 1063, column: 15)
!14675 = !DILocation(line: 1064, column: 25, scope: !14674)
!14676 = !DILocation(line: 1064, column: 35, scope: !14674)
!14677 = !DILocation(line: 1064, column: 10, scope: !14674)
!14678 = !DILocation(line: 1064, column: 8, scope: !14674)
!14679 = !DILocation(line: 1066, column: 9, scope: !14680)
!14680 = distinct !DILexicalBlock(scope: !14674, file: !3, line: 1066, column: 8)
!14681 = !DILocation(line: 1066, column: 8, scope: !14674)
!14682 = !DILocation(line: 1067, column: 5, scope: !14680)
!14683 = !DILocation(line: 1068, column: 21, scope: !14674)
!14684 = !DILocation(line: 1068, column: 4, scope: !14674)
!14685 = !DILocation(line: 1068, column: 10, scope: !14674)
!14686 = !DILocation(line: 1068, column: 19, scope: !14674)
!14687 = !DILocation(line: 1069, column: 11, scope: !14674)
!14688 = !DILocation(line: 1069, column: 19, scope: !14674)
!14689 = !DILocation(line: 1069, column: 4, scope: !14674)
!14690 = !DILocation(line: 1070, column: 3, scope: !14674)
!14691 = !DILocation(line: 1072, column: 7, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 1072, column: 7)
!14693 = !DILocation(line: 1072, column: 7, scope: !14622)
!14694 = !DILocation(line: 1073, column: 19, scope: !14695)
!14695 = distinct !DILexicalBlock(scope: !14692, file: !3, line: 1072, column: 15)
!14696 = !DILocation(line: 1073, column: 25, scope: !14695)
!14697 = !DILocation(line: 1073, column: 35, scope: !14695)
!14698 = !DILocation(line: 1073, column: 10, scope: !14695)
!14699 = !DILocation(line: 1073, column: 8, scope: !14695)
!14700 = !DILocation(line: 1075, column: 9, scope: !14701)
!14701 = distinct !DILexicalBlock(scope: !14695, file: !3, line: 1075, column: 8)
!14702 = !DILocation(line: 1075, column: 8, scope: !14695)
!14703 = !DILocation(line: 1076, column: 5, scope: !14701)
!14704 = !DILocation(line: 1077, column: 21, scope: !14695)
!14705 = !DILocation(line: 1077, column: 4, scope: !14695)
!14706 = !DILocation(line: 1077, column: 10, scope: !14695)
!14707 = !DILocation(line: 1077, column: 19, scope: !14695)
!14708 = !DILocation(line: 1078, column: 3, scope: !14695)
!14709 = !DILocation(line: 1080, column: 7, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14622, file: !3, line: 1080, column: 7)
!14711 = !DILocation(line: 1080, column: 14, scope: !14710)
!14712 = !DILocation(line: 1080, column: 17, scope: !14710)
!14713 = !DILocation(line: 1080, column: 7, scope: !14622)
!14714 = !DILocalVariable(name: "__mptr", scope: !14715, file: !3, line: 1081, type: !228)
!14715 = distinct !DILexicalBlock(scope: !14716, file: !3, line: 1081, column: 4)
!14716 = distinct !DILexicalBlock(scope: !14717, file: !3, line: 1081, column: 4)
!14717 = distinct !DILexicalBlock(scope: !14710, file: !3, line: 1080, column: 25)
!14718 = !DILocation(line: 1081, column: 4, scope: !14715)
!14719 = !DILocation(line: 1081, column: 4, scope: !14720)
!14720 = distinct !DILexicalBlock(scope: !14715, file: !3, line: 1081, column: 4)
!14721 = !DILocation(line: 1081, column: 4, scope: !14716)
!14722 = !DILocation(line: 1081, column: 4, scope: !14723)
!14723 = distinct !DILexicalBlock(scope: !14716, file: !3, line: 1081, column: 4)
!14724 = !DILocation(line: 1083, column: 10, scope: !14725)
!14725 = distinct !DILexicalBlock(scope: !14726, file: !3, line: 1083, column: 9)
!14726 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 1082, column: 25)
!14727 = !DILocation(line: 1083, column: 16, scope: !14725)
!14728 = !DILocation(line: 1083, column: 9, scope: !14726)
!14729 = !DILocation(line: 1084, column: 6, scope: !14725)
!14730 = !DILocation(line: 1085, column: 10, scope: !14731)
!14731 = distinct !DILexicalBlock(scope: !14726, file: !3, line: 1085, column: 9)
!14732 = !DILocation(line: 1085, column: 16, scope: !14731)
!14733 = !DILocation(line: 1085, column: 9, scope: !14726)
!14734 = !DILocation(line: 1086, column: 21, scope: !14731)
!14735 = !DILocation(line: 1086, column: 27, scope: !14731)
!14736 = !DILocation(line: 1086, column: 6, scope: !14731)
!14737 = !DILocation(line: 1086, column: 12, scope: !14731)
!14738 = !DILocation(line: 1086, column: 19, scope: !14731)
!14739 = !DILocation(line: 1087, column: 10, scope: !14740)
!14740 = distinct !DILexicalBlock(scope: !14726, file: !3, line: 1087, column: 9)
!14741 = !DILocation(line: 1087, column: 16, scope: !14740)
!14742 = !DILocation(line: 1087, column: 9, scope: !14726)
!14743 = !DILocation(line: 1088, column: 21, scope: !14740)
!14744 = !DILocation(line: 1088, column: 27, scope: !14740)
!14745 = !DILocation(line: 1088, column: 6, scope: !14740)
!14746 = !DILocation(line: 1088, column: 12, scope: !14740)
!14747 = !DILocation(line: 1088, column: 19, scope: !14740)
!14748 = !DILocation(line: 1089, column: 4, scope: !14726)
!14749 = !DILocalVariable(name: "__mptr", scope: !14750, file: !3, line: 1081, type: !228)
!14750 = distinct !DILexicalBlock(scope: !14723, file: !3, line: 1081, column: 4)
!14751 = !DILocation(line: 1081, column: 4, scope: !14750)
!14752 = !DILocation(line: 1081, column: 4, scope: !14753)
!14753 = distinct !DILexicalBlock(scope: !14750, file: !3, line: 1081, column: 4)
!14754 = distinct !{!14754, !14721, !14755}
!14755 = !DILocation(line: 1089, column: 4, scope: !14716)
!14756 = !DILocation(line: 1090, column: 3, scope: !14717)
!14757 = !DILocation(line: 1091, column: 2, scope: !14622)
!14758 = !DILocation(line: 1093, column: 23, scope: !14598)
!14759 = !DILocation(line: 1093, column: 29, scope: !14598)
!14760 = !DILocation(line: 1093, column: 9, scope: !14598)
!14761 = !DILocation(line: 1093, column: 2, scope: !14598)
!14762 = !DILocation(line: 1094, column: 1, scope: !14598)
!14763 = distinct !DISubprogram(name: "___might_sleep", scope: !14764, file: !14764, line: 248, type: !14765, scopeLine: 249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14764 = !DIFile(filename: "./include/linux/kernel.h", directory: "/home/lizy2001/genbc/linux")
!14765 = !DISubroutineType(types: !14766)
!14766 = !{null, !280, !234, !234}
!14767 = !DILocalVariable(name: "file", arg: 1, scope: !14763, file: !14764, line: 248, type: !280)
!14768 = !DILocation(line: 248, column: 49, scope: !14763)
!14769 = !DILocalVariable(name: "line", arg: 2, scope: !14763, file: !14764, line: 248, type: !234)
!14770 = !DILocation(line: 248, column: 59, scope: !14763)
!14771 = !DILocalVariable(name: "preempt_offset", arg: 3, scope: !14763, file: !14764, line: 249, type: !234)
!14772 = !DILocation(line: 249, column: 12, scope: !14763)
!14773 = !DILocation(line: 249, column: 30, scope: !14763)
!14774 = distinct !DISubprogram(name: "__list_del_entry", scope: !6950, file: !6950, line: 130, type: !8905, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14775 = !DILocalVariable(name: "entry", arg: 1, scope: !14774, file: !6950, line: 130, type: !287)
!14776 = !DILocation(line: 130, column: 55, scope: !14774)
!14777 = !DILocation(line: 132, column: 30, scope: !14778)
!14778 = distinct !DILexicalBlock(scope: !14774, file: !6950, line: 132, column: 6)
!14779 = !DILocation(line: 132, column: 7, scope: !14778)
!14780 = !DILocation(line: 132, column: 6, scope: !14774)
!14781 = !DILocation(line: 133, column: 3, scope: !14778)
!14782 = !DILocation(line: 135, column: 13, scope: !14774)
!14783 = !DILocation(line: 135, column: 20, scope: !14774)
!14784 = !DILocation(line: 135, column: 26, scope: !14774)
!14785 = !DILocation(line: 135, column: 33, scope: !14774)
!14786 = !DILocation(line: 135, column: 2, scope: !14774)
!14787 = !DILocation(line: 136, column: 1, scope: !14774)
!14788 = distinct !DISubprogram(name: "__list_del_entry_valid", scope: !6950, file: !6950, line: 51, type: !14789, scopeLine: 52, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14789 = !DISubroutineType(types: !14790)
!14790 = !{!261, !287}
!14791 = !DILocalVariable(name: "entry", arg: 1, scope: !14788, file: !6950, line: 51, type: !287)
!14792 = !DILocation(line: 51, column: 61, scope: !14788)
!14793 = !DILocation(line: 53, column: 2, scope: !14788)
!14794 = distinct !DISubprogram(name: "__list_del", scope: !6950, file: !6950, line: 110, type: !6951, scopeLine: 111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14795 = !DILocalVariable(name: "prev", arg: 1, scope: !14794, file: !6950, line: 110, type: !287)
!14796 = !DILocation(line: 110, column: 50, scope: !14794)
!14797 = !DILocalVariable(name: "next", arg: 2, scope: !14794, file: !6950, line: 110, type: !287)
!14798 = !DILocation(line: 110, column: 75, scope: !14794)
!14799 = !DILocation(line: 112, column: 15, scope: !14794)
!14800 = !DILocation(line: 112, column: 2, scope: !14794)
!14801 = !DILocation(line: 112, column: 8, scope: !14794)
!14802 = !DILocation(line: 112, column: 13, scope: !14794)
!14803 = !DILocation(line: 113, column: 2, scope: !14794)
!14804 = !DILocation(line: 113, column: 2, scope: !14805)
!14805 = distinct !DILexicalBlock(scope: !14794, file: !6950, line: 113, column: 2)
!14806 = !DILocation(line: 113, column: 2, scope: !14807)
!14807 = distinct !DILexicalBlock(scope: !14805, file: !6950, line: 113, column: 2)
!14808 = !DILocation(line: 113, column: 2, scope: !14809)
!14809 = distinct !DILexicalBlock(scope: !14805, file: !6950, line: 113, column: 2)
!14810 = !DILocation(line: 114, column: 1, scope: !14794)
!14811 = distinct !DISubprogram(name: "__spi_map_msg", scope: !3, file: !3, line: 932, type: !4707, scopeLine: 933, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14812 = !DILocalVariable(name: "ctlr", arg: 1, scope: !14811, file: !3, line: 932, type: !4512)
!14813 = !DILocation(line: 932, column: 49, scope: !14811)
!14814 = !DILocalVariable(name: "msg", arg: 2, scope: !14811, file: !3, line: 932, type: !4594)
!14815 = !DILocation(line: 932, column: 75, scope: !14811)
!14816 = !DILocalVariable(name: "tx_dev", scope: !14811, file: !3, line: 934, type: !3506)
!14817 = !DILocation(line: 934, column: 17, scope: !14811)
!14818 = !DILocalVariable(name: "rx_dev", scope: !14811, file: !3, line: 934, type: !3506)
!14819 = !DILocation(line: 934, column: 26, scope: !14811)
!14820 = !DILocalVariable(name: "xfer", scope: !14811, file: !3, line: 935, type: !4616)
!14821 = !DILocation(line: 935, column: 23, scope: !14811)
!14822 = !DILocalVariable(name: "ret", scope: !14811, file: !3, line: 936, type: !234)
!14823 = !DILocation(line: 936, column: 6, scope: !14811)
!14824 = !DILocation(line: 938, column: 7, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 938, column: 6)
!14826 = !DILocation(line: 938, column: 13, scope: !14825)
!14827 = !DILocation(line: 938, column: 6, scope: !14811)
!14828 = !DILocation(line: 939, column: 3, scope: !14825)
!14829 = !DILocation(line: 941, column: 6, scope: !14830)
!14830 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 941, column: 6)
!14831 = !DILocation(line: 941, column: 12, scope: !14830)
!14832 = !DILocation(line: 941, column: 6, scope: !14811)
!14833 = !DILocation(line: 942, column: 12, scope: !14830)
!14834 = !DILocation(line: 942, column: 18, scope: !14830)
!14835 = !DILocation(line: 942, column: 26, scope: !14830)
!14836 = !DILocation(line: 942, column: 34, scope: !14830)
!14837 = !DILocation(line: 942, column: 10, scope: !14830)
!14838 = !DILocation(line: 942, column: 3, scope: !14830)
!14839 = !DILocation(line: 944, column: 12, scope: !14830)
!14840 = !DILocation(line: 944, column: 18, scope: !14830)
!14841 = !DILocation(line: 944, column: 22, scope: !14830)
!14842 = !DILocation(line: 944, column: 10, scope: !14830)
!14843 = !DILocation(line: 946, column: 6, scope: !14844)
!14844 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 946, column: 6)
!14845 = !DILocation(line: 946, column: 12, scope: !14844)
!14846 = !DILocation(line: 946, column: 6, scope: !14811)
!14847 = !DILocation(line: 947, column: 12, scope: !14844)
!14848 = !DILocation(line: 947, column: 18, scope: !14844)
!14849 = !DILocation(line: 947, column: 26, scope: !14844)
!14850 = !DILocation(line: 947, column: 34, scope: !14844)
!14851 = !DILocation(line: 947, column: 10, scope: !14844)
!14852 = !DILocation(line: 947, column: 3, scope: !14844)
!14853 = !DILocation(line: 949, column: 12, scope: !14844)
!14854 = !DILocation(line: 949, column: 18, scope: !14844)
!14855 = !DILocation(line: 949, column: 22, scope: !14844)
!14856 = !DILocation(line: 949, column: 10, scope: !14844)
!14857 = !DILocalVariable(name: "__mptr", scope: !14858, file: !3, line: 951, type: !228)
!14858 = distinct !DILexicalBlock(scope: !14859, file: !3, line: 951, column: 2)
!14859 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 951, column: 2)
!14860 = !DILocation(line: 951, column: 2, scope: !14858)
!14861 = !DILocation(line: 951, column: 2, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14858, file: !3, line: 951, column: 2)
!14863 = !DILocation(line: 951, column: 2, scope: !14859)
!14864 = !DILocation(line: 951, column: 2, scope: !14865)
!14865 = distinct !DILexicalBlock(scope: !14859, file: !3, line: 951, column: 2)
!14866 = !DILocation(line: 952, column: 8, scope: !14867)
!14867 = distinct !DILexicalBlock(scope: !14868, file: !3, line: 952, column: 7)
!14868 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 951, column: 60)
!14869 = !DILocation(line: 952, column: 14, scope: !14867)
!14870 = !DILocation(line: 952, column: 22, scope: !14867)
!14871 = !DILocation(line: 952, column: 28, scope: !14867)
!14872 = !DILocation(line: 952, column: 33, scope: !14867)
!14873 = !DILocation(line: 952, column: 38, scope: !14867)
!14874 = !DILocation(line: 952, column: 7, scope: !14868)
!14875 = !DILocation(line: 953, column: 4, scope: !14867)
!14876 = !DILocation(line: 955, column: 7, scope: !14877)
!14877 = distinct !DILexicalBlock(scope: !14868, file: !3, line: 955, column: 7)
!14878 = !DILocation(line: 955, column: 13, scope: !14877)
!14879 = !DILocation(line: 955, column: 20, scope: !14877)
!14880 = !DILocation(line: 955, column: 7, scope: !14868)
!14881 = !DILocation(line: 956, column: 22, scope: !14882)
!14882 = distinct !DILexicalBlock(scope: !14877, file: !3, line: 955, column: 29)
!14883 = !DILocation(line: 956, column: 28, scope: !14882)
!14884 = !DILocation(line: 956, column: 37, scope: !14882)
!14885 = !DILocation(line: 956, column: 43, scope: !14882)
!14886 = !DILocation(line: 957, column: 16, scope: !14882)
!14887 = !DILocation(line: 957, column: 22, scope: !14882)
!14888 = !DILocation(line: 957, column: 30, scope: !14882)
!14889 = !DILocation(line: 957, column: 36, scope: !14882)
!14890 = !DILocation(line: 956, column: 10, scope: !14882)
!14891 = !DILocation(line: 956, column: 8, scope: !14882)
!14892 = !DILocation(line: 959, column: 8, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14882, file: !3, line: 959, column: 8)
!14894 = !DILocation(line: 959, column: 12, scope: !14893)
!14895 = !DILocation(line: 959, column: 8, scope: !14882)
!14896 = !DILocation(line: 960, column: 12, scope: !14893)
!14897 = !DILocation(line: 960, column: 5, scope: !14893)
!14898 = !DILocation(line: 961, column: 3, scope: !14882)
!14899 = !DILocation(line: 963, column: 7, scope: !14900)
!14900 = distinct !DILexicalBlock(scope: !14868, file: !3, line: 963, column: 7)
!14901 = !DILocation(line: 963, column: 13, scope: !14900)
!14902 = !DILocation(line: 963, column: 20, scope: !14900)
!14903 = !DILocation(line: 963, column: 7, scope: !14868)
!14904 = !DILocation(line: 964, column: 22, scope: !14905)
!14905 = distinct !DILexicalBlock(scope: !14900, file: !3, line: 963, column: 29)
!14906 = !DILocation(line: 964, column: 28, scope: !14905)
!14907 = !DILocation(line: 964, column: 37, scope: !14905)
!14908 = !DILocation(line: 964, column: 43, scope: !14905)
!14909 = !DILocation(line: 965, column: 8, scope: !14905)
!14910 = !DILocation(line: 965, column: 14, scope: !14905)
!14911 = !DILocation(line: 965, column: 22, scope: !14905)
!14912 = !DILocation(line: 965, column: 28, scope: !14905)
!14913 = !DILocation(line: 964, column: 10, scope: !14905)
!14914 = !DILocation(line: 964, column: 8, scope: !14905)
!14915 = !DILocation(line: 967, column: 8, scope: !14916)
!14916 = distinct !DILexicalBlock(scope: !14905, file: !3, line: 967, column: 8)
!14917 = !DILocation(line: 967, column: 12, scope: !14916)
!14918 = !DILocation(line: 967, column: 8, scope: !14905)
!14919 = !DILocation(line: 968, column: 19, scope: !14920)
!14920 = distinct !DILexicalBlock(scope: !14916, file: !3, line: 967, column: 18)
!14921 = !DILocation(line: 968, column: 25, scope: !14920)
!14922 = !DILocation(line: 968, column: 34, scope: !14920)
!14923 = !DILocation(line: 968, column: 40, scope: !14920)
!14924 = !DILocation(line: 968, column: 5, scope: !14920)
!14925 = !DILocation(line: 970, column: 12, scope: !14920)
!14926 = !DILocation(line: 970, column: 5, scope: !14920)
!14927 = !DILocation(line: 972, column: 3, scope: !14905)
!14928 = !DILocation(line: 973, column: 2, scope: !14868)
!14929 = !DILocalVariable(name: "__mptr", scope: !14930, file: !3, line: 951, type: !228)
!14930 = distinct !DILexicalBlock(scope: !14865, file: !3, line: 951, column: 2)
!14931 = !DILocation(line: 951, column: 2, scope: !14930)
!14932 = !DILocation(line: 951, column: 2, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14930, file: !3, line: 951, column: 2)
!14934 = distinct !{!14934, !14863, !14935}
!14935 = !DILocation(line: 973, column: 2, scope: !14859)
!14936 = !DILocation(line: 975, column: 2, scope: !14811)
!14937 = !DILocation(line: 975, column: 8, scope: !14811)
!14938 = !DILocation(line: 975, column: 23, scope: !14811)
!14939 = !DILocation(line: 977, column: 2, scope: !14811)
!14940 = !DILocation(line: 978, column: 1, scope: !14811)
!14941 = distinct !DISubprogram(name: "spi_controller_release", scope: !3, file: !3, line: 2276, type: !3529, scopeLine: 2277, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14942 = !DILocalVariable(name: "dev", arg: 1, scope: !14941, file: !3, line: 2276, type: !3506)
!14943 = !DILocation(line: 2276, column: 51, scope: !14941)
!14944 = !DILocalVariable(name: "ctlr", scope: !14941, file: !3, line: 2278, type: !4512)
!14945 = !DILocation(line: 2278, column: 25, scope: !14941)
!14946 = !DILocalVariable(name: "__mptr", scope: !14947, file: !3, line: 2280, type: !228)
!14947 = distinct !DILexicalBlock(scope: !14941, file: !3, line: 2280, column: 9)
!14948 = !DILocation(line: 2280, column: 9, scope: !14947)
!14949 = !DILocation(line: 2280, column: 9, scope: !14950)
!14950 = distinct !DILexicalBlock(scope: !14947, file: !3, line: 2280, column: 9)
!14951 = !DILocation(line: 2280, column: 7, scope: !14941)
!14952 = !DILocation(line: 2281, column: 8, scope: !14941)
!14953 = !DILocation(line: 2281, column: 2, scope: !14941)
!14954 = !DILocation(line: 2282, column: 1, scope: !14941)
!14955 = distinct !DISubprogram(name: "spi_controller_messages_show", scope: !3, file: !3, line: 160, type: !5234, scopeLine: 160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14956 = !DILocalVariable(name: "dev", arg: 1, scope: !14955, file: !3, line: 160, type: !3506)
!14957 = !DILocation(line: 160, column: 1, scope: !14955)
!14958 = !DILocalVariable(name: "attr", arg: 2, scope: !14955, file: !3, line: 160, type: !5236)
!14959 = !DILocalVariable(name: "buf", arg: 3, scope: !14955, file: !3, line: 160, type: !338)
!14960 = !DILocalVariable(name: "ctlr", scope: !14955, file: !3, line: 160, type: !4512)
!14961 = !DILocalVariable(name: "__mptr", scope: !14962, file: !3, line: 160, type: !228)
!14962 = distinct !DILexicalBlock(scope: !14955, file: !3, line: 160, column: 1)
!14963 = !DILocation(line: 160, column: 1, scope: !14962)
!14964 = !DILocation(line: 160, column: 1, scope: !14965)
!14965 = distinct !DILexicalBlock(scope: !14962, file: !3, line: 160, column: 1)
!14966 = distinct !DISubprogram(name: "spi_controller_transfers_show", scope: !3, file: !3, line: 161, type: !5234, scopeLine: 161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14967 = !DILocalVariable(name: "dev", arg: 1, scope: !14966, file: !3, line: 161, type: !3506)
!14968 = !DILocation(line: 161, column: 1, scope: !14966)
!14969 = !DILocalVariable(name: "attr", arg: 2, scope: !14966, file: !3, line: 161, type: !5236)
!14970 = !DILocalVariable(name: "buf", arg: 3, scope: !14966, file: !3, line: 161, type: !338)
!14971 = !DILocalVariable(name: "ctlr", scope: !14966, file: !3, line: 161, type: !4512)
!14972 = !DILocalVariable(name: "__mptr", scope: !14973, file: !3, line: 161, type: !228)
!14973 = distinct !DILexicalBlock(scope: !14966, file: !3, line: 161, column: 1)
!14974 = !DILocation(line: 161, column: 1, scope: !14973)
!14975 = !DILocation(line: 161, column: 1, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14973, file: !3, line: 161, column: 1)
!14977 = distinct !DISubprogram(name: "spi_controller_errors_show", scope: !3, file: !3, line: 162, type: !5234, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14978 = !DILocalVariable(name: "dev", arg: 1, scope: !14977, file: !3, line: 162, type: !3506)
!14979 = !DILocation(line: 162, column: 1, scope: !14977)
!14980 = !DILocalVariable(name: "attr", arg: 2, scope: !14977, file: !3, line: 162, type: !5236)
!14981 = !DILocalVariable(name: "buf", arg: 3, scope: !14977, file: !3, line: 162, type: !338)
!14982 = !DILocalVariable(name: "ctlr", scope: !14977, file: !3, line: 162, type: !4512)
!14983 = !DILocalVariable(name: "__mptr", scope: !14984, file: !3, line: 162, type: !228)
!14984 = distinct !DILexicalBlock(scope: !14977, file: !3, line: 162, column: 1)
!14985 = !DILocation(line: 162, column: 1, scope: !14984)
!14986 = !DILocation(line: 162, column: 1, scope: !14987)
!14987 = distinct !DILexicalBlock(scope: !14984, file: !3, line: 162, column: 1)
!14988 = distinct !DISubprogram(name: "spi_controller_timedout_show", scope: !3, file: !3, line: 163, type: !5234, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!14989 = !DILocalVariable(name: "dev", arg: 1, scope: !14988, file: !3, line: 163, type: !3506)
!14990 = !DILocation(line: 163, column: 1, scope: !14988)
!14991 = !DILocalVariable(name: "attr", arg: 2, scope: !14988, file: !3, line: 163, type: !5236)
!14992 = !DILocalVariable(name: "buf", arg: 3, scope: !14988, file: !3, line: 163, type: !338)
!14993 = !DILocalVariable(name: "ctlr", scope: !14988, file: !3, line: 163, type: !4512)
!14994 = !DILocalVariable(name: "__mptr", scope: !14995, file: !3, line: 163, type: !228)
!14995 = distinct !DILexicalBlock(scope: !14988, file: !3, line: 163, column: 1)
!14996 = !DILocation(line: 163, column: 1, scope: !14995)
!14997 = !DILocation(line: 163, column: 1, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14995, file: !3, line: 163, column: 1)
!14999 = distinct !DISubprogram(name: "spi_controller_spi_sync_show", scope: !3, file: !3, line: 165, type: !5234, scopeLine: 165, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15000 = !DILocalVariable(name: "dev", arg: 1, scope: !14999, file: !3, line: 165, type: !3506)
!15001 = !DILocation(line: 165, column: 1, scope: !14999)
!15002 = !DILocalVariable(name: "attr", arg: 2, scope: !14999, file: !3, line: 165, type: !5236)
!15003 = !DILocalVariable(name: "buf", arg: 3, scope: !14999, file: !3, line: 165, type: !338)
!15004 = !DILocalVariable(name: "ctlr", scope: !14999, file: !3, line: 165, type: !4512)
!15005 = !DILocalVariable(name: "__mptr", scope: !15006, file: !3, line: 165, type: !228)
!15006 = distinct !DILexicalBlock(scope: !14999, file: !3, line: 165, column: 1)
!15007 = !DILocation(line: 165, column: 1, scope: !15006)
!15008 = !DILocation(line: 165, column: 1, scope: !15009)
!15009 = distinct !DILexicalBlock(scope: !15006, file: !3, line: 165, column: 1)
!15010 = distinct !DISubprogram(name: "spi_controller_spi_sync_immediate_show", scope: !3, file: !3, line: 166, type: !5234, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15011 = !DILocalVariable(name: "dev", arg: 1, scope: !15010, file: !3, line: 166, type: !3506)
!15012 = !DILocation(line: 166, column: 1, scope: !15010)
!15013 = !DILocalVariable(name: "attr", arg: 2, scope: !15010, file: !3, line: 166, type: !5236)
!15014 = !DILocalVariable(name: "buf", arg: 3, scope: !15010, file: !3, line: 166, type: !338)
!15015 = !DILocalVariable(name: "ctlr", scope: !15010, file: !3, line: 166, type: !4512)
!15016 = !DILocalVariable(name: "__mptr", scope: !15017, file: !3, line: 166, type: !228)
!15017 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 166, column: 1)
!15018 = !DILocation(line: 166, column: 1, scope: !15017)
!15019 = !DILocation(line: 166, column: 1, scope: !15020)
!15020 = distinct !DILexicalBlock(scope: !15017, file: !3, line: 166, column: 1)
!15021 = distinct !DISubprogram(name: "spi_controller_spi_async_show", scope: !3, file: !3, line: 167, type: !5234, scopeLine: 167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15022 = !DILocalVariable(name: "dev", arg: 1, scope: !15021, file: !3, line: 167, type: !3506)
!15023 = !DILocation(line: 167, column: 1, scope: !15021)
!15024 = !DILocalVariable(name: "attr", arg: 2, scope: !15021, file: !3, line: 167, type: !5236)
!15025 = !DILocalVariable(name: "buf", arg: 3, scope: !15021, file: !3, line: 167, type: !338)
!15026 = !DILocalVariable(name: "ctlr", scope: !15021, file: !3, line: 167, type: !4512)
!15027 = !DILocalVariable(name: "__mptr", scope: !15028, file: !3, line: 167, type: !228)
!15028 = distinct !DILexicalBlock(scope: !15021, file: !3, line: 167, column: 1)
!15029 = !DILocation(line: 167, column: 1, scope: !15028)
!15030 = !DILocation(line: 167, column: 1, scope: !15031)
!15031 = distinct !DILexicalBlock(scope: !15028, file: !3, line: 167, column: 1)
!15032 = distinct !DISubprogram(name: "spi_controller_bytes_show", scope: !3, file: !3, line: 169, type: !5234, scopeLine: 169, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15033 = !DILocalVariable(name: "dev", arg: 1, scope: !15032, file: !3, line: 169, type: !3506)
!15034 = !DILocation(line: 169, column: 1, scope: !15032)
!15035 = !DILocalVariable(name: "attr", arg: 2, scope: !15032, file: !3, line: 169, type: !5236)
!15036 = !DILocalVariable(name: "buf", arg: 3, scope: !15032, file: !3, line: 169, type: !338)
!15037 = !DILocalVariable(name: "ctlr", scope: !15032, file: !3, line: 169, type: !4512)
!15038 = !DILocalVariable(name: "__mptr", scope: !15039, file: !3, line: 169, type: !228)
!15039 = distinct !DILexicalBlock(scope: !15032, file: !3, line: 169, column: 1)
!15040 = !DILocation(line: 169, column: 1, scope: !15039)
!15041 = !DILocation(line: 169, column: 1, scope: !15042)
!15042 = distinct !DILexicalBlock(scope: !15039, file: !3, line: 169, column: 1)
!15043 = distinct !DISubprogram(name: "spi_controller_bytes_rx_show", scope: !3, file: !3, line: 170, type: !5234, scopeLine: 170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15044 = !DILocalVariable(name: "dev", arg: 1, scope: !15043, file: !3, line: 170, type: !3506)
!15045 = !DILocation(line: 170, column: 1, scope: !15043)
!15046 = !DILocalVariable(name: "attr", arg: 2, scope: !15043, file: !3, line: 170, type: !5236)
!15047 = !DILocalVariable(name: "buf", arg: 3, scope: !15043, file: !3, line: 170, type: !338)
!15048 = !DILocalVariable(name: "ctlr", scope: !15043, file: !3, line: 170, type: !4512)
!15049 = !DILocalVariable(name: "__mptr", scope: !15050, file: !3, line: 170, type: !228)
!15050 = distinct !DILexicalBlock(scope: !15043, file: !3, line: 170, column: 1)
!15051 = !DILocation(line: 170, column: 1, scope: !15050)
!15052 = !DILocation(line: 170, column: 1, scope: !15053)
!15053 = distinct !DILexicalBlock(scope: !15050, file: !3, line: 170, column: 1)
!15054 = distinct !DISubprogram(name: "spi_controller_bytes_tx_show", scope: !3, file: !3, line: 171, type: !5234, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15055 = !DILocalVariable(name: "dev", arg: 1, scope: !15054, file: !3, line: 171, type: !3506)
!15056 = !DILocation(line: 171, column: 1, scope: !15054)
!15057 = !DILocalVariable(name: "attr", arg: 2, scope: !15054, file: !3, line: 171, type: !5236)
!15058 = !DILocalVariable(name: "buf", arg: 3, scope: !15054, file: !3, line: 171, type: !338)
!15059 = !DILocalVariable(name: "ctlr", scope: !15054, file: !3, line: 171, type: !4512)
!15060 = !DILocalVariable(name: "__mptr", scope: !15061, file: !3, line: 171, type: !228)
!15061 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 171, column: 1)
!15062 = !DILocation(line: 171, column: 1, scope: !15061)
!15063 = !DILocation(line: 171, column: 1, scope: !15064)
!15064 = distinct !DILexicalBlock(scope: !15061, file: !3, line: 171, column: 1)
!15065 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo0_show", scope: !3, file: !3, line: 177, type: !5234, scopeLine: 177, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15066 = !DILocalVariable(name: "dev", arg: 1, scope: !15065, file: !3, line: 177, type: !3506)
!15067 = !DILocation(line: 177, column: 1, scope: !15065)
!15068 = !DILocalVariable(name: "attr", arg: 2, scope: !15065, file: !3, line: 177, type: !5236)
!15069 = !DILocalVariable(name: "buf", arg: 3, scope: !15065, file: !3, line: 177, type: !338)
!15070 = !DILocalVariable(name: "ctlr", scope: !15065, file: !3, line: 177, type: !4512)
!15071 = !DILocalVariable(name: "__mptr", scope: !15072, file: !3, line: 177, type: !228)
!15072 = distinct !DILexicalBlock(scope: !15065, file: !3, line: 177, column: 1)
!15073 = !DILocation(line: 177, column: 1, scope: !15072)
!15074 = !DILocation(line: 177, column: 1, scope: !15075)
!15075 = distinct !DILexicalBlock(scope: !15072, file: !3, line: 177, column: 1)
!15076 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo1_show", scope: !3, file: !3, line: 178, type: !5234, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15077 = !DILocalVariable(name: "dev", arg: 1, scope: !15076, file: !3, line: 178, type: !3506)
!15078 = !DILocation(line: 178, column: 1, scope: !15076)
!15079 = !DILocalVariable(name: "attr", arg: 2, scope: !15076, file: !3, line: 178, type: !5236)
!15080 = !DILocalVariable(name: "buf", arg: 3, scope: !15076, file: !3, line: 178, type: !338)
!15081 = !DILocalVariable(name: "ctlr", scope: !15076, file: !3, line: 178, type: !4512)
!15082 = !DILocalVariable(name: "__mptr", scope: !15083, file: !3, line: 178, type: !228)
!15083 = distinct !DILexicalBlock(scope: !15076, file: !3, line: 178, column: 1)
!15084 = !DILocation(line: 178, column: 1, scope: !15083)
!15085 = !DILocation(line: 178, column: 1, scope: !15086)
!15086 = distinct !DILexicalBlock(scope: !15083, file: !3, line: 178, column: 1)
!15087 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo2_show", scope: !3, file: !3, line: 179, type: !5234, scopeLine: 179, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15088 = !DILocalVariable(name: "dev", arg: 1, scope: !15087, file: !3, line: 179, type: !3506)
!15089 = !DILocation(line: 179, column: 1, scope: !15087)
!15090 = !DILocalVariable(name: "attr", arg: 2, scope: !15087, file: !3, line: 179, type: !5236)
!15091 = !DILocalVariable(name: "buf", arg: 3, scope: !15087, file: !3, line: 179, type: !338)
!15092 = !DILocalVariable(name: "ctlr", scope: !15087, file: !3, line: 179, type: !4512)
!15093 = !DILocalVariable(name: "__mptr", scope: !15094, file: !3, line: 179, type: !228)
!15094 = distinct !DILexicalBlock(scope: !15087, file: !3, line: 179, column: 1)
!15095 = !DILocation(line: 179, column: 1, scope: !15094)
!15096 = !DILocation(line: 179, column: 1, scope: !15097)
!15097 = distinct !DILexicalBlock(scope: !15094, file: !3, line: 179, column: 1)
!15098 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo3_show", scope: !3, file: !3, line: 180, type: !5234, scopeLine: 180, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15099 = !DILocalVariable(name: "dev", arg: 1, scope: !15098, file: !3, line: 180, type: !3506)
!15100 = !DILocation(line: 180, column: 1, scope: !15098)
!15101 = !DILocalVariable(name: "attr", arg: 2, scope: !15098, file: !3, line: 180, type: !5236)
!15102 = !DILocalVariable(name: "buf", arg: 3, scope: !15098, file: !3, line: 180, type: !338)
!15103 = !DILocalVariable(name: "ctlr", scope: !15098, file: !3, line: 180, type: !4512)
!15104 = !DILocalVariable(name: "__mptr", scope: !15105, file: !3, line: 180, type: !228)
!15105 = distinct !DILexicalBlock(scope: !15098, file: !3, line: 180, column: 1)
!15106 = !DILocation(line: 180, column: 1, scope: !15105)
!15107 = !DILocation(line: 180, column: 1, scope: !15108)
!15108 = distinct !DILexicalBlock(scope: !15105, file: !3, line: 180, column: 1)
!15109 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo4_show", scope: !3, file: !3, line: 181, type: !5234, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15110 = !DILocalVariable(name: "dev", arg: 1, scope: !15109, file: !3, line: 181, type: !3506)
!15111 = !DILocation(line: 181, column: 1, scope: !15109)
!15112 = !DILocalVariable(name: "attr", arg: 2, scope: !15109, file: !3, line: 181, type: !5236)
!15113 = !DILocalVariable(name: "buf", arg: 3, scope: !15109, file: !3, line: 181, type: !338)
!15114 = !DILocalVariable(name: "ctlr", scope: !15109, file: !3, line: 181, type: !4512)
!15115 = !DILocalVariable(name: "__mptr", scope: !15116, file: !3, line: 181, type: !228)
!15116 = distinct !DILexicalBlock(scope: !15109, file: !3, line: 181, column: 1)
!15117 = !DILocation(line: 181, column: 1, scope: !15116)
!15118 = !DILocation(line: 181, column: 1, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15116, file: !3, line: 181, column: 1)
!15120 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo5_show", scope: !3, file: !3, line: 182, type: !5234, scopeLine: 182, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15121 = !DILocalVariable(name: "dev", arg: 1, scope: !15120, file: !3, line: 182, type: !3506)
!15122 = !DILocation(line: 182, column: 1, scope: !15120)
!15123 = !DILocalVariable(name: "attr", arg: 2, scope: !15120, file: !3, line: 182, type: !5236)
!15124 = !DILocalVariable(name: "buf", arg: 3, scope: !15120, file: !3, line: 182, type: !338)
!15125 = !DILocalVariable(name: "ctlr", scope: !15120, file: !3, line: 182, type: !4512)
!15126 = !DILocalVariable(name: "__mptr", scope: !15127, file: !3, line: 182, type: !228)
!15127 = distinct !DILexicalBlock(scope: !15120, file: !3, line: 182, column: 1)
!15128 = !DILocation(line: 182, column: 1, scope: !15127)
!15129 = !DILocation(line: 182, column: 1, scope: !15130)
!15130 = distinct !DILexicalBlock(scope: !15127, file: !3, line: 182, column: 1)
!15131 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo6_show", scope: !3, file: !3, line: 183, type: !5234, scopeLine: 183, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15132 = !DILocalVariable(name: "dev", arg: 1, scope: !15131, file: !3, line: 183, type: !3506)
!15133 = !DILocation(line: 183, column: 1, scope: !15131)
!15134 = !DILocalVariable(name: "attr", arg: 2, scope: !15131, file: !3, line: 183, type: !5236)
!15135 = !DILocalVariable(name: "buf", arg: 3, scope: !15131, file: !3, line: 183, type: !338)
!15136 = !DILocalVariable(name: "ctlr", scope: !15131, file: !3, line: 183, type: !4512)
!15137 = !DILocalVariable(name: "__mptr", scope: !15138, file: !3, line: 183, type: !228)
!15138 = distinct !DILexicalBlock(scope: !15131, file: !3, line: 183, column: 1)
!15139 = !DILocation(line: 183, column: 1, scope: !15138)
!15140 = !DILocation(line: 183, column: 1, scope: !15141)
!15141 = distinct !DILexicalBlock(scope: !15138, file: !3, line: 183, column: 1)
!15142 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo7_show", scope: !3, file: !3, line: 184, type: !5234, scopeLine: 184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15143 = !DILocalVariable(name: "dev", arg: 1, scope: !15142, file: !3, line: 184, type: !3506)
!15144 = !DILocation(line: 184, column: 1, scope: !15142)
!15145 = !DILocalVariable(name: "attr", arg: 2, scope: !15142, file: !3, line: 184, type: !5236)
!15146 = !DILocalVariable(name: "buf", arg: 3, scope: !15142, file: !3, line: 184, type: !338)
!15147 = !DILocalVariable(name: "ctlr", scope: !15142, file: !3, line: 184, type: !4512)
!15148 = !DILocalVariable(name: "__mptr", scope: !15149, file: !3, line: 184, type: !228)
!15149 = distinct !DILexicalBlock(scope: !15142, file: !3, line: 184, column: 1)
!15150 = !DILocation(line: 184, column: 1, scope: !15149)
!15151 = !DILocation(line: 184, column: 1, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15149, file: !3, line: 184, column: 1)
!15153 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo8_show", scope: !3, file: !3, line: 185, type: !5234, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15154 = !DILocalVariable(name: "dev", arg: 1, scope: !15153, file: !3, line: 185, type: !3506)
!15155 = !DILocation(line: 185, column: 1, scope: !15153)
!15156 = !DILocalVariable(name: "attr", arg: 2, scope: !15153, file: !3, line: 185, type: !5236)
!15157 = !DILocalVariable(name: "buf", arg: 3, scope: !15153, file: !3, line: 185, type: !338)
!15158 = !DILocalVariable(name: "ctlr", scope: !15153, file: !3, line: 185, type: !4512)
!15159 = !DILocalVariable(name: "__mptr", scope: !15160, file: !3, line: 185, type: !228)
!15160 = distinct !DILexicalBlock(scope: !15153, file: !3, line: 185, column: 1)
!15161 = !DILocation(line: 185, column: 1, scope: !15160)
!15162 = !DILocation(line: 185, column: 1, scope: !15163)
!15163 = distinct !DILexicalBlock(scope: !15160, file: !3, line: 185, column: 1)
!15164 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo9_show", scope: !3, file: !3, line: 186, type: !5234, scopeLine: 186, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15165 = !DILocalVariable(name: "dev", arg: 1, scope: !15164, file: !3, line: 186, type: !3506)
!15166 = !DILocation(line: 186, column: 1, scope: !15164)
!15167 = !DILocalVariable(name: "attr", arg: 2, scope: !15164, file: !3, line: 186, type: !5236)
!15168 = !DILocalVariable(name: "buf", arg: 3, scope: !15164, file: !3, line: 186, type: !338)
!15169 = !DILocalVariable(name: "ctlr", scope: !15164, file: !3, line: 186, type: !4512)
!15170 = !DILocalVariable(name: "__mptr", scope: !15171, file: !3, line: 186, type: !228)
!15171 = distinct !DILexicalBlock(scope: !15164, file: !3, line: 186, column: 1)
!15172 = !DILocation(line: 186, column: 1, scope: !15171)
!15173 = !DILocation(line: 186, column: 1, scope: !15174)
!15174 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 186, column: 1)
!15175 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo10_show", scope: !3, file: !3, line: 187, type: !5234, scopeLine: 187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15176 = !DILocalVariable(name: "dev", arg: 1, scope: !15175, file: !3, line: 187, type: !3506)
!15177 = !DILocation(line: 187, column: 1, scope: !15175)
!15178 = !DILocalVariable(name: "attr", arg: 2, scope: !15175, file: !3, line: 187, type: !5236)
!15179 = !DILocalVariable(name: "buf", arg: 3, scope: !15175, file: !3, line: 187, type: !338)
!15180 = !DILocalVariable(name: "ctlr", scope: !15175, file: !3, line: 187, type: !4512)
!15181 = !DILocalVariable(name: "__mptr", scope: !15182, file: !3, line: 187, type: !228)
!15182 = distinct !DILexicalBlock(scope: !15175, file: !3, line: 187, column: 1)
!15183 = !DILocation(line: 187, column: 1, scope: !15182)
!15184 = !DILocation(line: 187, column: 1, scope: !15185)
!15185 = distinct !DILexicalBlock(scope: !15182, file: !3, line: 187, column: 1)
!15186 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo11_show", scope: !3, file: !3, line: 188, type: !5234, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15187 = !DILocalVariable(name: "dev", arg: 1, scope: !15186, file: !3, line: 188, type: !3506)
!15188 = !DILocation(line: 188, column: 1, scope: !15186)
!15189 = !DILocalVariable(name: "attr", arg: 2, scope: !15186, file: !3, line: 188, type: !5236)
!15190 = !DILocalVariable(name: "buf", arg: 3, scope: !15186, file: !3, line: 188, type: !338)
!15191 = !DILocalVariable(name: "ctlr", scope: !15186, file: !3, line: 188, type: !4512)
!15192 = !DILocalVariable(name: "__mptr", scope: !15193, file: !3, line: 188, type: !228)
!15193 = distinct !DILexicalBlock(scope: !15186, file: !3, line: 188, column: 1)
!15194 = !DILocation(line: 188, column: 1, scope: !15193)
!15195 = !DILocation(line: 188, column: 1, scope: !15196)
!15196 = distinct !DILexicalBlock(scope: !15193, file: !3, line: 188, column: 1)
!15197 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo12_show", scope: !3, file: !3, line: 189, type: !5234, scopeLine: 189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15198 = !DILocalVariable(name: "dev", arg: 1, scope: !15197, file: !3, line: 189, type: !3506)
!15199 = !DILocation(line: 189, column: 1, scope: !15197)
!15200 = !DILocalVariable(name: "attr", arg: 2, scope: !15197, file: !3, line: 189, type: !5236)
!15201 = !DILocalVariable(name: "buf", arg: 3, scope: !15197, file: !3, line: 189, type: !338)
!15202 = !DILocalVariable(name: "ctlr", scope: !15197, file: !3, line: 189, type: !4512)
!15203 = !DILocalVariable(name: "__mptr", scope: !15204, file: !3, line: 189, type: !228)
!15204 = distinct !DILexicalBlock(scope: !15197, file: !3, line: 189, column: 1)
!15205 = !DILocation(line: 189, column: 1, scope: !15204)
!15206 = !DILocation(line: 189, column: 1, scope: !15207)
!15207 = distinct !DILexicalBlock(scope: !15204, file: !3, line: 189, column: 1)
!15208 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo13_show", scope: !3, file: !3, line: 190, type: !5234, scopeLine: 190, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15209 = !DILocalVariable(name: "dev", arg: 1, scope: !15208, file: !3, line: 190, type: !3506)
!15210 = !DILocation(line: 190, column: 1, scope: !15208)
!15211 = !DILocalVariable(name: "attr", arg: 2, scope: !15208, file: !3, line: 190, type: !5236)
!15212 = !DILocalVariable(name: "buf", arg: 3, scope: !15208, file: !3, line: 190, type: !338)
!15213 = !DILocalVariable(name: "ctlr", scope: !15208, file: !3, line: 190, type: !4512)
!15214 = !DILocalVariable(name: "__mptr", scope: !15215, file: !3, line: 190, type: !228)
!15215 = distinct !DILexicalBlock(scope: !15208, file: !3, line: 190, column: 1)
!15216 = !DILocation(line: 190, column: 1, scope: !15215)
!15217 = !DILocation(line: 190, column: 1, scope: !15218)
!15218 = distinct !DILexicalBlock(scope: !15215, file: !3, line: 190, column: 1)
!15219 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo14_show", scope: !3, file: !3, line: 191, type: !5234, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15220 = !DILocalVariable(name: "dev", arg: 1, scope: !15219, file: !3, line: 191, type: !3506)
!15221 = !DILocation(line: 191, column: 1, scope: !15219)
!15222 = !DILocalVariable(name: "attr", arg: 2, scope: !15219, file: !3, line: 191, type: !5236)
!15223 = !DILocalVariable(name: "buf", arg: 3, scope: !15219, file: !3, line: 191, type: !338)
!15224 = !DILocalVariable(name: "ctlr", scope: !15219, file: !3, line: 191, type: !4512)
!15225 = !DILocalVariable(name: "__mptr", scope: !15226, file: !3, line: 191, type: !228)
!15226 = distinct !DILexicalBlock(scope: !15219, file: !3, line: 191, column: 1)
!15227 = !DILocation(line: 191, column: 1, scope: !15226)
!15228 = !DILocation(line: 191, column: 1, scope: !15229)
!15229 = distinct !DILexicalBlock(scope: !15226, file: !3, line: 191, column: 1)
!15230 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo15_show", scope: !3, file: !3, line: 192, type: !5234, scopeLine: 192, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15231 = !DILocalVariable(name: "dev", arg: 1, scope: !15230, file: !3, line: 192, type: !3506)
!15232 = !DILocation(line: 192, column: 1, scope: !15230)
!15233 = !DILocalVariable(name: "attr", arg: 2, scope: !15230, file: !3, line: 192, type: !5236)
!15234 = !DILocalVariable(name: "buf", arg: 3, scope: !15230, file: !3, line: 192, type: !338)
!15235 = !DILocalVariable(name: "ctlr", scope: !15230, file: !3, line: 192, type: !4512)
!15236 = !DILocalVariable(name: "__mptr", scope: !15237, file: !3, line: 192, type: !228)
!15237 = distinct !DILexicalBlock(scope: !15230, file: !3, line: 192, column: 1)
!15238 = !DILocation(line: 192, column: 1, scope: !15237)
!15239 = !DILocation(line: 192, column: 1, scope: !15240)
!15240 = distinct !DILexicalBlock(scope: !15237, file: !3, line: 192, column: 1)
!15241 = distinct !DISubprogram(name: "spi_controller_transfer_bytes_histo16_show", scope: !3, file: !3, line: 193, type: !5234, scopeLine: 193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15242 = !DILocalVariable(name: "dev", arg: 1, scope: !15241, file: !3, line: 193, type: !3506)
!15243 = !DILocation(line: 193, column: 1, scope: !15241)
!15244 = !DILocalVariable(name: "attr", arg: 2, scope: !15241, file: !3, line: 193, type: !5236)
!15245 = !DILocalVariable(name: "buf", arg: 3, scope: !15241, file: !3, line: 193, type: !338)
!15246 = !DILocalVariable(name: "ctlr", scope: !15241, file: !3, line: 193, type: !4512)
!15247 = !DILocalVariable(name: "__mptr", scope: !15248, file: !3, line: 193, type: !228)
!15248 = distinct !DILexicalBlock(scope: !15241, file: !3, line: 193, column: 1)
!15249 = !DILocation(line: 193, column: 1, scope: !15248)
!15250 = !DILocation(line: 193, column: 1, scope: !15251)
!15251 = distinct !DILexicalBlock(scope: !15248, file: !3, line: 193, column: 1)
!15252 = distinct !DISubprogram(name: "spi_controller_transfers_split_maxsize_show", scope: !3, file: !3, line: 195, type: !5234, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15253 = !DILocalVariable(name: "dev", arg: 1, scope: !15252, file: !3, line: 195, type: !3506)
!15254 = !DILocation(line: 195, column: 1, scope: !15252)
!15255 = !DILocalVariable(name: "attr", arg: 2, scope: !15252, file: !3, line: 195, type: !5236)
!15256 = !DILocalVariable(name: "buf", arg: 3, scope: !15252, file: !3, line: 195, type: !338)
!15257 = !DILocalVariable(name: "ctlr", scope: !15252, file: !3, line: 195, type: !4512)
!15258 = !DILocalVariable(name: "__mptr", scope: !15259, file: !3, line: 195, type: !228)
!15259 = distinct !DILexicalBlock(scope: !15252, file: !3, line: 195, column: 1)
!15260 = !DILocation(line: 195, column: 1, scope: !15259)
!15261 = !DILocation(line: 195, column: 1, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15259, file: !3, line: 195, column: 1)
!15263 = distinct !DISubprogram(name: "dev_set_drvdata", scope: !73, file: !73, line: 660, type: !5108, scopeLine: 661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15264 = !DILocalVariable(name: "dev", arg: 1, scope: !15263, file: !73, line: 660, type: !3506)
!15265 = !DILocation(line: 660, column: 51, scope: !15263)
!15266 = !DILocalVariable(name: "data", arg: 2, scope: !15263, file: !73, line: 660, type: !228)
!15267 = !DILocation(line: 660, column: 62, scope: !15263)
!15268 = !DILocation(line: 662, column: 21, scope: !15263)
!15269 = !DILocation(line: 662, column: 2, scope: !15263)
!15270 = !DILocation(line: 662, column: 7, scope: !15263)
!15271 = !DILocation(line: 662, column: 19, scope: !15263)
!15272 = !DILocation(line: 663, column: 1, scope: !15263)
!15273 = distinct !DISubprogram(name: "devm_kcalloc", scope: !73, file: !73, line: 229, type: !15274, scopeLine: 231, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15274 = !DISubroutineType(types: !15275)
!15275 = !{!228, !3506, !385, !385, !226}
!15276 = !DILocalVariable(name: "dev", arg: 1, scope: !15273, file: !73, line: 229, type: !3506)
!15277 = !DILocation(line: 229, column: 49, scope: !15273)
!15278 = !DILocalVariable(name: "n", arg: 2, scope: !15273, file: !73, line: 230, type: !385)
!15279 = !DILocation(line: 230, column: 13, scope: !15273)
!15280 = !DILocalVariable(name: "size", arg: 3, scope: !15273, file: !73, line: 230, type: !385)
!15281 = !DILocation(line: 230, column: 23, scope: !15273)
!15282 = !DILocalVariable(name: "flags", arg: 4, scope: !15273, file: !73, line: 230, type: !226)
!15283 = !DILocation(line: 230, column: 35, scope: !15273)
!15284 = !DILocation(line: 232, column: 28, scope: !15273)
!15285 = !DILocation(line: 232, column: 33, scope: !15273)
!15286 = !DILocation(line: 232, column: 36, scope: !15273)
!15287 = !DILocation(line: 232, column: 42, scope: !15273)
!15288 = !DILocation(line: 232, column: 48, scope: !15273)
!15289 = !DILocation(line: 232, column: 9, scope: !15273)
!15290 = !DILocation(line: 232, column: 2, scope: !15273)
!15291 = distinct !DISubprogram(name: "devm_kmalloc_array", scope: !73, file: !73, line: 219, type: !15274, scopeLine: 221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15292 = !DILocalVariable(name: "dev", arg: 1, scope: !15291, file: !73, line: 219, type: !3506)
!15293 = !DILocation(line: 219, column: 55, scope: !15291)
!15294 = !DILocalVariable(name: "n", arg: 2, scope: !15291, file: !73, line: 220, type: !385)
!15295 = !DILocation(line: 220, column: 19, scope: !15291)
!15296 = !DILocalVariable(name: "size", arg: 3, scope: !15291, file: !73, line: 220, type: !385)
!15297 = !DILocation(line: 220, column: 29, scope: !15291)
!15298 = !DILocalVariable(name: "flags", arg: 4, scope: !15291, file: !73, line: 220, type: !226)
!15299 = !DILocation(line: 220, column: 41, scope: !15291)
!15300 = !DILocalVariable(name: "bytes", scope: !15291, file: !73, line: 222, type: !385)
!15301 = !DILocation(line: 222, column: 9, scope: !15291)
!15302 = !DILocalVariable(name: "__a", scope: !15303, file: !73, line: 224, type: !385)
!15303 = distinct !DILexicalBlock(scope: !15304, file: !73, line: 224, column: 6)
!15304 = distinct !DILexicalBlock(scope: !15291, file: !73, line: 224, column: 6)
!15305 = !DILocation(line: 224, column: 6, scope: !15303)
!15306 = !DILocalVariable(name: "__b", scope: !15303, file: !73, line: 224, type: !385)
!15307 = !DILocalVariable(name: "__d", scope: !15303, file: !73, line: 224, type: !4953)
!15308 = !DILocation(line: 224, column: 6, scope: !15304)
!15309 = !DILocation(line: 224, column: 6, scope: !15291)
!15310 = !DILocation(line: 225, column: 3, scope: !15304)
!15311 = !DILocation(line: 227, column: 22, scope: !15291)
!15312 = !DILocation(line: 227, column: 27, scope: !15291)
!15313 = !DILocation(line: 227, column: 34, scope: !15291)
!15314 = !DILocation(line: 227, column: 9, scope: !15291)
!15315 = !DILocation(line: 227, column: 2, scope: !15291)
!15316 = !DILocation(line: 228, column: 1, scope: !15291)
!15317 = distinct !DISubprogram(name: "of_gpio_named_count", scope: !15318, file: !15318, line: 101, type: !15319, scopeLine: 102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15318 = !DIFile(filename: "./include/linux/of_gpio.h", directory: "/home/lizy2001/genbc/linux")
!15319 = !DISubroutineType(types: !15320)
!15320 = !{!234, !3803, !280}
!15321 = !DILocalVariable(name: "np", arg: 1, scope: !15317, file: !15318, line: 101, type: !3803)
!15322 = !DILocation(line: 101, column: 59, scope: !15317)
!15323 = !DILocalVariable(name: "propname", arg: 2, scope: !15317, file: !15318, line: 101, type: !280)
!15324 = !DILocation(line: 101, column: 75, scope: !15317)
!15325 = !DILocation(line: 103, column: 36, scope: !15317)
!15326 = !DILocation(line: 103, column: 40, scope: !15317)
!15327 = !DILocation(line: 103, column: 9, scope: !15317)
!15328 = !DILocation(line: 103, column: 2, scope: !15317)
!15329 = distinct !DISubprogram(name: "of_get_named_gpio", scope: !15318, file: !15318, line: 132, type: !15330, scopeLine: 134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15330 = !DISubroutineType(types: !15331)
!15331 = !{!234, !3803, !280, !234}
!15332 = !DILocalVariable(name: "np", arg: 1, scope: !15329, file: !15318, line: 132, type: !3803)
!15333 = !DILocation(line: 132, column: 57, scope: !15329)
!15334 = !DILocalVariable(name: "propname", arg: 2, scope: !15329, file: !15318, line: 133, type: !280)
!15335 = !DILocation(line: 133, column: 48, scope: !15329)
!15336 = !DILocalVariable(name: "index", arg: 3, scope: !15329, file: !15318, line: 133, type: !234)
!15337 = !DILocation(line: 133, column: 62, scope: !15329)
!15338 = !DILocation(line: 135, column: 33, scope: !15329)
!15339 = !DILocation(line: 135, column: 37, scope: !15329)
!15340 = !DILocation(line: 135, column: 47, scope: !15329)
!15341 = !DILocation(line: 135, column: 9, scope: !15329)
!15342 = !DILocation(line: 135, column: 2, scope: !15329)
!15343 = distinct !DISubprogram(name: "spi_transfer_one_message", scope: !3, file: !3, line: 1232, type: !4707, scopeLine: 1234, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15344 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !15345)
!15345 = distinct !DILocation(line: 1273, column: 5, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15347, file: !3, line: 1273, column: 5)
!15347 = distinct !DILexicalBlock(scope: !15348, file: !3, line: 1262, column: 17)
!15348 = distinct !DILexicalBlock(scope: !15349, file: !3, line: 1262, column: 8)
!15349 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 1257, column: 37)
!15350 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 1257, column: 7)
!15351 = distinct !DILexicalBlock(scope: !15352, file: !3, line: 1246, column: 60)
!15352 = distinct !DILexicalBlock(scope: !15353, file: !3, line: 1246, column: 2)
!15353 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 1246, column: 2)
!15354 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !15345)
!15355 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !15356)
!15356 = distinct !DILocation(line: 1273, column: 5, scope: !15357)
!15357 = distinct !DILexicalBlock(scope: !15358, file: !3, line: 1273, column: 5)
!15358 = distinct !DILexicalBlock(scope: !15359, file: !3, line: 1273, column: 5)
!15359 = distinct !DILexicalBlock(scope: !15360, file: !3, line: 1273, column: 5)
!15360 = distinct !DILexicalBlock(scope: !15361, file: !3, line: 1273, column: 5)
!15361 = distinct !DILexicalBlock(scope: !15346, file: !3, line: 1273, column: 5)
!15362 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !15363)
!15363 = distinct !DILocation(line: 1271, column: 5, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15347, file: !3, line: 1271, column: 5)
!15365 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !15363)
!15366 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !15367)
!15367 = distinct !DILocation(line: 1271, column: 5, scope: !15368)
!15368 = distinct !DILexicalBlock(scope: !15369, file: !3, line: 1271, column: 5)
!15369 = distinct !DILexicalBlock(scope: !15370, file: !3, line: 1271, column: 5)
!15370 = distinct !DILexicalBlock(scope: !15371, file: !3, line: 1271, column: 5)
!15371 = distinct !DILexicalBlock(scope: !15372, file: !3, line: 1271, column: 5)
!15372 = distinct !DILexicalBlock(scope: !15364, file: !3, line: 1271, column: 5)
!15373 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !15374)
!15374 = distinct !DILocation(line: 1244, column: 2, scope: !15375)
!15375 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 1244, column: 2)
!15376 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !15374)
!15377 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !15378)
!15378 = distinct !DILocation(line: 1244, column: 2, scope: !15379)
!15379 = distinct !DILexicalBlock(scope: !15380, file: !3, line: 1244, column: 2)
!15380 = distinct !DILexicalBlock(scope: !15381, file: !3, line: 1244, column: 2)
!15381 = distinct !DILexicalBlock(scope: !15382, file: !3, line: 1244, column: 2)
!15382 = distinct !DILexicalBlock(scope: !15383, file: !3, line: 1244, column: 2)
!15383 = distinct !DILexicalBlock(scope: !15375, file: !3, line: 1244, column: 2)
!15384 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !15385)
!15385 = distinct !DILocation(line: 1243, column: 2, scope: !15386)
!15386 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 1243, column: 2)
!15387 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !15385)
!15388 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !15389)
!15389 = distinct !DILocation(line: 1243, column: 2, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15391, file: !3, line: 1243, column: 2)
!15391 = distinct !DILexicalBlock(scope: !15392, file: !3, line: 1243, column: 2)
!15392 = distinct !DILexicalBlock(scope: !15393, file: !3, line: 1243, column: 2)
!15393 = distinct !DILexicalBlock(scope: !15394, file: !3, line: 1243, column: 2)
!15394 = distinct !DILexicalBlock(scope: !15386, file: !3, line: 1243, column: 2)
!15395 = !DILocalVariable(name: "ctlr", arg: 1, scope: !15343, file: !3, line: 1232, type: !4512)
!15396 = !DILocation(line: 1232, column: 60, scope: !15343)
!15397 = !DILocalVariable(name: "msg", arg: 2, scope: !15343, file: !3, line: 1233, type: !4594)
!15398 = !DILocation(line: 1233, column: 29, scope: !15343)
!15399 = !DILocalVariable(name: "xfer", scope: !15343, file: !3, line: 1235, type: !4616)
!15400 = !DILocation(line: 1235, column: 23, scope: !15343)
!15401 = !DILocalVariable(name: "keep_cs", scope: !15343, file: !3, line: 1236, type: !261)
!15402 = !DILocation(line: 1236, column: 7, scope: !15343)
!15403 = !DILocalVariable(name: "ret", scope: !15343, file: !3, line: 1237, type: !234)
!15404 = !DILocation(line: 1237, column: 6, scope: !15343)
!15405 = !DILocalVariable(name: "statm", scope: !15343, file: !3, line: 1238, type: !5419)
!15406 = !DILocation(line: 1238, column: 25, scope: !15343)
!15407 = !DILocation(line: 1238, column: 34, scope: !15343)
!15408 = !DILocation(line: 1238, column: 40, scope: !15343)
!15409 = !DILocalVariable(name: "stats", scope: !15343, file: !3, line: 1239, type: !5419)
!15410 = !DILocation(line: 1239, column: 25, scope: !15343)
!15411 = !DILocation(line: 1239, column: 34, scope: !15343)
!15412 = !DILocation(line: 1239, column: 39, scope: !15343)
!15413 = !DILocation(line: 1239, column: 44, scope: !15343)
!15414 = !DILocation(line: 1241, column: 13, scope: !15343)
!15415 = !DILocation(line: 1241, column: 18, scope: !15343)
!15416 = !DILocation(line: 1241, column: 2, scope: !15343)
!15417 = !DILocation(line: 1243, column: 2, scope: !15343)
!15418 = !DILocalVariable(name: "flags", scope: !15386, file: !3, line: 1243, type: !388)
!15419 = !DILocation(line: 1243, column: 2, scope: !15386)
!15420 = !DILocation(line: 1243, column: 2, scope: !15394)
!15421 = !DILocalVariable(name: "__dummy", scope: !15422, file: !3, line: 1243, type: !388)
!15422 = distinct !DILexicalBlock(scope: !15393, file: !3, line: 1243, column: 2)
!15423 = !DILocation(line: 1243, column: 2, scope: !15422)
!15424 = !DILocalVariable(name: "__dummy2", scope: !15422, file: !3, line: 1243, type: !388)
!15425 = !DILocation(line: 1243, column: 2, scope: !15393)
!15426 = !DILocation(line: 1243, column: 2, scope: !15392)
!15427 = !DILocation(line: 1243, column: 2, scope: !15428)
!15428 = distinct !DILexicalBlock(scope: !15392, file: !3, line: 1243, column: 2)
!15429 = !DILocalVariable(name: "__dummy", scope: !15430, file: !3, line: 1243, type: !388)
!15430 = distinct !DILexicalBlock(scope: !15431, file: !3, line: 1243, column: 2)
!15431 = distinct !DILexicalBlock(scope: !15428, file: !3, line: 1243, column: 2)
!15432 = !DILocation(line: 1243, column: 2, scope: !15430)
!15433 = !DILocalVariable(name: "__dummy2", scope: !15430, file: !3, line: 1243, type: !388)
!15434 = !DILocation(line: 1243, column: 2, scope: !15431)
!15435 = !DILocation(line: 1243, column: 2, scope: !15391)
!15436 = !{i32 -2140515093}
!15437 = !DILocation(line: 1243, column: 2, scope: !15390)
!15438 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !15389)
!15439 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !15389)
!15440 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !15385)
!15441 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !15385)
!15442 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !15385)
!15443 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !15385)
!15444 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !15385)
!15445 = !DILocation(line: 1244, column: 2, scope: !15343)
!15446 = !DILocalVariable(name: "flags", scope: !15375, file: !3, line: 1244, type: !388)
!15447 = !DILocation(line: 1244, column: 2, scope: !15375)
!15448 = !DILocation(line: 1244, column: 2, scope: !15383)
!15449 = !DILocalVariable(name: "__dummy", scope: !15450, file: !3, line: 1244, type: !388)
!15450 = distinct !DILexicalBlock(scope: !15382, file: !3, line: 1244, column: 2)
!15451 = !DILocation(line: 1244, column: 2, scope: !15450)
!15452 = !DILocalVariable(name: "__dummy2", scope: !15450, file: !3, line: 1244, type: !388)
!15453 = !DILocation(line: 1244, column: 2, scope: !15382)
!15454 = !DILocation(line: 1244, column: 2, scope: !15381)
!15455 = !DILocation(line: 1244, column: 2, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15381, file: !3, line: 1244, column: 2)
!15457 = !DILocalVariable(name: "__dummy", scope: !15458, file: !3, line: 1244, type: !388)
!15458 = distinct !DILexicalBlock(scope: !15459, file: !3, line: 1244, column: 2)
!15459 = distinct !DILexicalBlock(scope: !15456, file: !3, line: 1244, column: 2)
!15460 = !DILocation(line: 1244, column: 2, scope: !15458)
!15461 = !DILocalVariable(name: "__dummy2", scope: !15458, file: !3, line: 1244, type: !388)
!15462 = !DILocation(line: 1244, column: 2, scope: !15459)
!15463 = !DILocation(line: 1244, column: 2, scope: !15380)
!15464 = !{i32 -2140513768}
!15465 = !DILocation(line: 1244, column: 2, scope: !15379)
!15466 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !15378)
!15467 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !15378)
!15468 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !15374)
!15469 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !15374)
!15470 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !15374)
!15471 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !15374)
!15472 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !15374)
!15473 = !DILocalVariable(name: "__mptr", scope: !15474, file: !3, line: 1246, type: !228)
!15474 = distinct !DILexicalBlock(scope: !15353, file: !3, line: 1246, column: 2)
!15475 = !DILocation(line: 1246, column: 2, scope: !15474)
!15476 = !DILocation(line: 1246, column: 2, scope: !15477)
!15477 = distinct !DILexicalBlock(scope: !15474, file: !3, line: 1246, column: 2)
!15478 = !DILocation(line: 1246, column: 2, scope: !15353)
!15479 = !DILocation(line: 1246, column: 2, scope: !15352)
!15480 = !DILocation(line: 1247, column: 28, scope: !15351)
!15481 = !DILocation(line: 1247, column: 33, scope: !15351)
!15482 = !DILocation(line: 1247, column: 3, scope: !15351)
!15483 = !DILocation(line: 1249, column: 37, scope: !15351)
!15484 = !DILocation(line: 1249, column: 44, scope: !15351)
!15485 = !DILocation(line: 1249, column: 50, scope: !15351)
!15486 = !DILocation(line: 1249, column: 3, scope: !15351)
!15487 = !DILocation(line: 1250, column: 37, scope: !15351)
!15488 = !DILocation(line: 1250, column: 44, scope: !15351)
!15489 = !DILocation(line: 1250, column: 50, scope: !15351)
!15490 = !DILocation(line: 1250, column: 3, scope: !15351)
!15491 = !DILocation(line: 1252, column: 8, scope: !15492)
!15492 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 1252, column: 7)
!15493 = !DILocation(line: 1252, column: 14, scope: !15492)
!15494 = !DILocation(line: 1252, column: 7, scope: !15351)
!15495 = !DILocation(line: 1253, column: 4, scope: !15496)
!15496 = distinct !DILexicalBlock(scope: !15492, file: !3, line: 1252, column: 33)
!15497 = !DILocation(line: 1253, column: 10, scope: !15496)
!15498 = !DILocation(line: 1253, column: 27, scope: !15496)
!15499 = !DILocation(line: 1254, column: 26, scope: !15496)
!15500 = !DILocation(line: 1254, column: 32, scope: !15496)
!15501 = !DILocation(line: 1254, column: 4, scope: !15496)
!15502 = !DILocation(line: 1255, column: 3, scope: !15496)
!15503 = !DILocation(line: 1257, column: 7, scope: !15350)
!15504 = !DILocation(line: 1257, column: 13, scope: !15350)
!15505 = !DILocation(line: 1257, column: 20, scope: !15350)
!15506 = !DILocation(line: 1257, column: 23, scope: !15350)
!15507 = !DILocation(line: 1257, column: 29, scope: !15350)
!15508 = !DILocation(line: 1257, column: 7, scope: !15351)
!15509 = !DILocation(line: 1258, column: 23, scope: !15349)
!15510 = !DILocation(line: 1258, column: 29, scope: !15349)
!15511 = !DILocation(line: 1258, column: 4, scope: !15349)
!15512 = !DILabel(scope: !15349, name: "fallback_pio", file: !3, line: 1260)
!15513 = !DILocation(line: 1260, column: 1, scope: !15349)
!15514 = !DILocation(line: 1261, column: 10, scope: !15349)
!15515 = !DILocation(line: 1261, column: 16, scope: !15349)
!15516 = !DILocation(line: 1261, column: 29, scope: !15349)
!15517 = !DILocation(line: 1261, column: 35, scope: !15349)
!15518 = !DILocation(line: 1261, column: 40, scope: !15349)
!15519 = !DILocation(line: 1261, column: 45, scope: !15349)
!15520 = !DILocation(line: 1261, column: 8, scope: !15349)
!15521 = !DILocation(line: 1262, column: 8, scope: !15348)
!15522 = !DILocation(line: 1262, column: 12, scope: !15348)
!15523 = !DILocation(line: 1262, column: 8, scope: !15349)
!15524 = !DILocation(line: 1263, column: 9, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15347, file: !3, line: 1263, column: 9)
!15526 = !DILocation(line: 1263, column: 15, scope: !15525)
!15527 = !DILocation(line: 1263, column: 30, scope: !15525)
!15528 = !DILocation(line: 1264, column: 9, scope: !15525)
!15529 = !DILocation(line: 1264, column: 15, scope: !15525)
!15530 = !DILocation(line: 1264, column: 21, scope: !15525)
!15531 = !DILocation(line: 1263, column: 9, scope: !15347)
!15532 = !DILocation(line: 1265, column: 22, scope: !15533)
!15533 = distinct !DILexicalBlock(scope: !15525, file: !3, line: 1264, column: 49)
!15534 = !DILocation(line: 1265, column: 28, scope: !15533)
!15535 = !DILocation(line: 1265, column: 6, scope: !15533)
!15536 = !DILocation(line: 1266, column: 6, scope: !15533)
!15537 = !DILocation(line: 1266, column: 12, scope: !15533)
!15538 = !DILocation(line: 1266, column: 21, scope: !15533)
!15539 = !DILocation(line: 1267, column: 6, scope: !15533)
!15540 = !DILocation(line: 1267, column: 12, scope: !15533)
!15541 = !DILocation(line: 1267, column: 18, scope: !15533)
!15542 = !DILocation(line: 1268, column: 6, scope: !15533)
!15543 = !DILocation(line: 1271, column: 5, scope: !15347)
!15544 = !DILocalVariable(name: "flags", scope: !15364, file: !3, line: 1271, type: !388)
!15545 = !DILocation(line: 1271, column: 5, scope: !15364)
!15546 = !DILocation(line: 1271, column: 5, scope: !15372)
!15547 = !DILocalVariable(name: "__dummy", scope: !15548, file: !3, line: 1271, type: !388)
!15548 = distinct !DILexicalBlock(scope: !15371, file: !3, line: 1271, column: 5)
!15549 = !DILocation(line: 1271, column: 5, scope: !15548)
!15550 = !DILocalVariable(name: "__dummy2", scope: !15548, file: !3, line: 1271, type: !388)
!15551 = !DILocation(line: 1271, column: 5, scope: !15371)
!15552 = !DILocation(line: 1271, column: 5, scope: !15370)
!15553 = !DILocation(line: 1271, column: 5, scope: !15554)
!15554 = distinct !DILexicalBlock(scope: !15370, file: !3, line: 1271, column: 5)
!15555 = !DILocalVariable(name: "__dummy", scope: !15556, file: !3, line: 1271, type: !388)
!15556 = distinct !DILexicalBlock(scope: !15557, file: !3, line: 1271, column: 5)
!15557 = distinct !DILexicalBlock(scope: !15554, file: !3, line: 1271, column: 5)
!15558 = !DILocation(line: 1271, column: 5, scope: !15556)
!15559 = !DILocalVariable(name: "__dummy2", scope: !15556, file: !3, line: 1271, type: !388)
!15560 = !DILocation(line: 1271, column: 5, scope: !15557)
!15561 = !DILocation(line: 1271, column: 5, scope: !15369)
!15562 = !{i32 -2140508072}
!15563 = !DILocation(line: 1271, column: 5, scope: !15368)
!15564 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !15367)
!15565 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !15367)
!15566 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !15363)
!15567 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !15363)
!15568 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !15363)
!15569 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !15363)
!15570 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !15363)
!15571 = !DILocation(line: 1273, column: 5, scope: !15347)
!15572 = !DILocalVariable(name: "flags", scope: !15346, file: !3, line: 1273, type: !388)
!15573 = !DILocation(line: 1273, column: 5, scope: !15346)
!15574 = !DILocation(line: 1273, column: 5, scope: !15361)
!15575 = !DILocalVariable(name: "__dummy", scope: !15576, file: !3, line: 1273, type: !388)
!15576 = distinct !DILexicalBlock(scope: !15360, file: !3, line: 1273, column: 5)
!15577 = !DILocation(line: 1273, column: 5, scope: !15576)
!15578 = !DILocalVariable(name: "__dummy2", scope: !15576, file: !3, line: 1273, type: !388)
!15579 = !DILocation(line: 1273, column: 5, scope: !15360)
!15580 = !DILocation(line: 1273, column: 5, scope: !15359)
!15581 = !DILocation(line: 1273, column: 5, scope: !15582)
!15582 = distinct !DILexicalBlock(scope: !15359, file: !3, line: 1273, column: 5)
!15583 = !DILocalVariable(name: "__dummy", scope: !15584, file: !3, line: 1273, type: !388)
!15584 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 1273, column: 5)
!15585 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 1273, column: 5)
!15586 = !DILocation(line: 1273, column: 5, scope: !15584)
!15587 = !DILocalVariable(name: "__dummy2", scope: !15584, file: !3, line: 1273, type: !388)
!15588 = !DILocation(line: 1273, column: 5, scope: !15585)
!15589 = !DILocation(line: 1273, column: 5, scope: !15358)
!15590 = !{i32 -2140506751}
!15591 = !DILocation(line: 1273, column: 5, scope: !15357)
!15592 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !15356)
!15593 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !15356)
!15594 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !15345)
!15595 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !15345)
!15596 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !15345)
!15597 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !15345)
!15598 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !15345)
!15599 = !DILocation(line: 1275, column: 5, scope: !15347)
!15600 = !DILocation(line: 1277, column: 5, scope: !15347)
!15601 = !DILocation(line: 1280, column: 8, scope: !15602)
!15602 = distinct !DILexicalBlock(scope: !15349, file: !3, line: 1280, column: 8)
!15603 = !DILocation(line: 1280, column: 12, scope: !15602)
!15604 = !DILocation(line: 1280, column: 8, scope: !15349)
!15605 = !DILocation(line: 1281, column: 29, scope: !15606)
!15606 = distinct !DILexicalBlock(scope: !15602, file: !3, line: 1280, column: 17)
!15607 = !DILocation(line: 1281, column: 35, scope: !15606)
!15608 = !DILocation(line: 1281, column: 40, scope: !15606)
!15609 = !DILocation(line: 1281, column: 11, scope: !15606)
!15610 = !DILocation(line: 1281, column: 9, scope: !15606)
!15611 = !DILocation(line: 1282, column: 9, scope: !15612)
!15612 = distinct !DILexicalBlock(scope: !15606, file: !3, line: 1282, column: 9)
!15613 = !DILocation(line: 1282, column: 13, scope: !15612)
!15614 = !DILocation(line: 1282, column: 9, scope: !15606)
!15615 = !DILocation(line: 1283, column: 20, scope: !15612)
!15616 = !DILocation(line: 1283, column: 6, scope: !15612)
!15617 = !DILocation(line: 1283, column: 11, scope: !15612)
!15618 = !DILocation(line: 1283, column: 18, scope: !15612)
!15619 = !DILocation(line: 1284, column: 4, scope: !15606)
!15620 = !DILocation(line: 1285, column: 3, scope: !15349)
!15621 = !DILocation(line: 1286, column: 8, scope: !15622)
!15622 = distinct !DILexicalBlock(scope: !15623, file: !3, line: 1286, column: 8)
!15623 = distinct !DILexicalBlock(scope: !15350, file: !3, line: 1285, column: 10)
!15624 = !DILocation(line: 1286, column: 14, scope: !15622)
!15625 = !DILocation(line: 1286, column: 8, scope: !15623)
!15626 = !DILocation(line: 1287, column: 5, scope: !15622)
!15627 = !DILocation(line: 1292, column: 8, scope: !15628)
!15628 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 1292, column: 7)
!15629 = !DILocation(line: 1292, column: 14, scope: !15628)
!15630 = !DILocation(line: 1292, column: 7, scope: !15351)
!15631 = !DILocation(line: 1293, column: 27, scope: !15632)
!15632 = distinct !DILexicalBlock(scope: !15628, file: !3, line: 1292, column: 33)
!15633 = !DILocation(line: 1293, column: 33, scope: !15632)
!15634 = !DILocation(line: 1293, column: 4, scope: !15632)
!15635 = !DILocation(line: 1294, column: 30, scope: !15632)
!15636 = !DILocation(line: 1294, column: 36, scope: !15632)
!15637 = !DILocation(line: 1294, column: 4, scope: !15632)
!15638 = !DILocation(line: 1294, column: 10, scope: !15632)
!15639 = !DILocation(line: 1294, column: 28, scope: !15632)
!15640 = !DILocation(line: 1295, column: 3, scope: !15632)
!15641 = !DILocation(line: 1297, column: 27, scope: !15351)
!15642 = !DILocation(line: 1297, column: 32, scope: !15351)
!15643 = !DILocation(line: 1297, column: 3, scope: !15351)
!15644 = !DILocation(line: 1299, column: 7, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 1299, column: 7)
!15646 = !DILocation(line: 1299, column: 12, scope: !15645)
!15647 = !DILocation(line: 1299, column: 19, scope: !15645)
!15648 = !DILocation(line: 1299, column: 7, scope: !15351)
!15649 = !DILocation(line: 1300, column: 4, scope: !15645)
!15650 = !DILocation(line: 1302, column: 27, scope: !15351)
!15651 = !DILocation(line: 1302, column: 3, scope: !15351)
!15652 = !DILocation(line: 1304, column: 7, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 1304, column: 7)
!15654 = !DILocation(line: 1304, column: 13, scope: !15653)
!15655 = !DILocation(line: 1304, column: 7, scope: !15351)
!15656 = !DILocation(line: 1305, column: 22, scope: !15657)
!15657 = distinct !DILexicalBlock(scope: !15658, file: !3, line: 1305, column: 8)
!15658 = distinct !DILexicalBlock(scope: !15653, file: !3, line: 1304, column: 24)
!15659 = !DILocation(line: 1305, column: 28, scope: !15657)
!15660 = !DILocation(line: 1306, column: 8, scope: !15657)
!15661 = !DILocation(line: 1306, column: 13, scope: !15657)
!15662 = !DILocation(line: 1305, column: 8, scope: !15657)
!15663 = !DILocation(line: 1305, column: 8, scope: !15658)
!15664 = !DILocation(line: 1307, column: 13, scope: !15665)
!15665 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 1306, column: 25)
!15666 = !DILocation(line: 1308, column: 4, scope: !15665)
!15667 = !DILocation(line: 1309, column: 16, scope: !15668)
!15668 = distinct !DILexicalBlock(scope: !15657, file: !3, line: 1308, column: 11)
!15669 = !DILocation(line: 1309, column: 21, scope: !15668)
!15670 = !DILocation(line: 1309, column: 5, scope: !15668)
!15671 = !DILocation(line: 1310, column: 35, scope: !15668)
!15672 = !DILocation(line: 1310, column: 40, scope: !15668)
!15673 = !DILocation(line: 1310, column: 5, scope: !15668)
!15674 = !DILocation(line: 1311, column: 16, scope: !15668)
!15675 = !DILocation(line: 1311, column: 21, scope: !15668)
!15676 = !DILocation(line: 1311, column: 5, scope: !15668)
!15677 = !DILocation(line: 1313, column: 3, scope: !15658)
!15678 = !DILocation(line: 1315, column: 25, scope: !15351)
!15679 = !DILocation(line: 1315, column: 31, scope: !15351)
!15680 = !DILocation(line: 1315, column: 3, scope: !15351)
!15681 = !DILocation(line: 1315, column: 8, scope: !15351)
!15682 = !DILocation(line: 1315, column: 22, scope: !15351)
!15683 = !DILocation(line: 1316, column: 2, scope: !15351)
!15684 = !DILocalVariable(name: "__mptr", scope: !15685, file: !3, line: 1246, type: !228)
!15685 = distinct !DILexicalBlock(scope: !15352, file: !3, line: 1246, column: 2)
!15686 = !DILocation(line: 1246, column: 2, scope: !15685)
!15687 = !DILocation(line: 1246, column: 2, scope: !15688)
!15688 = distinct !DILexicalBlock(scope: !15685, file: !3, line: 1246, column: 2)
!15689 = distinct !{!15689, !15478, !15690}
!15690 = !DILocation(line: 1316, column: 2, scope: !15353)
!15691 = !DILabel(scope: !15343, name: "out", file: !3, line: 1318)
!15692 = !DILocation(line: 1318, column: 1, scope: !15343)
!15693 = !DILocation(line: 1319, column: 6, scope: !15694)
!15694 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 1319, column: 6)
!15695 = !DILocation(line: 1319, column: 10, scope: !15694)
!15696 = !DILocation(line: 1319, column: 15, scope: !15694)
!15697 = !DILocation(line: 1319, column: 19, scope: !15694)
!15698 = !DILocation(line: 1319, column: 6, scope: !15343)
!15699 = !DILocation(line: 1320, column: 14, scope: !15694)
!15700 = !DILocation(line: 1320, column: 19, scope: !15694)
!15701 = !DILocation(line: 1320, column: 3, scope: !15694)
!15702 = !DILocation(line: 1322, column: 6, scope: !15703)
!15703 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 1322, column: 6)
!15704 = !DILocation(line: 1322, column: 11, scope: !15703)
!15705 = !DILocation(line: 1322, column: 18, scope: !15703)
!15706 = !DILocation(line: 1322, column: 6, scope: !15343)
!15707 = !DILocation(line: 1323, column: 17, scope: !15703)
!15708 = !DILocation(line: 1323, column: 3, scope: !15703)
!15709 = !DILocation(line: 1323, column: 8, scope: !15703)
!15710 = !DILocation(line: 1323, column: 15, scope: !15703)
!15711 = !DILocation(line: 1325, column: 6, scope: !15712)
!15712 = distinct !DILexicalBlock(scope: !15343, file: !3, line: 1325, column: 6)
!15713 = !DILocation(line: 1325, column: 11, scope: !15712)
!15714 = !DILocation(line: 1325, column: 18, scope: !15712)
!15715 = !DILocation(line: 1325, column: 21, scope: !15712)
!15716 = !DILocation(line: 1325, column: 27, scope: !15712)
!15717 = !DILocation(line: 1325, column: 6, scope: !15343)
!15718 = !DILocation(line: 1326, column: 3, scope: !15712)
!15719 = !DILocation(line: 1326, column: 9, scope: !15712)
!15720 = !DILocation(line: 1326, column: 20, scope: !15712)
!15721 = !DILocation(line: 1326, column: 26, scope: !15712)
!15722 = !DILocation(line: 1328, column: 31, scope: !15343)
!15723 = !DILocation(line: 1328, column: 2, scope: !15343)
!15724 = !DILocation(line: 1330, column: 9, scope: !15343)
!15725 = !DILocation(line: 1330, column: 2, scope: !15343)
!15726 = distinct !DISubprogram(name: "spi_init_queue", scope: !3, file: !3, line: 1642, type: !4703, scopeLine: 1643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15727 = !DILocalVariable(name: "ctlr", arg: 1, scope: !15726, file: !3, line: 1642, type: !4512)
!15728 = !DILocation(line: 1642, column: 50, scope: !15726)
!15729 = !DILocation(line: 1644, column: 2, scope: !15726)
!15730 = !DILocation(line: 1644, column: 8, scope: !15726)
!15731 = !DILocation(line: 1644, column: 16, scope: !15726)
!15732 = !DILocation(line: 1645, column: 2, scope: !15726)
!15733 = !DILocation(line: 1645, column: 8, scope: !15726)
!15734 = !DILocation(line: 1645, column: 13, scope: !15726)
!15735 = !DILocation(line: 1647, column: 53, scope: !15726)
!15736 = !DILocation(line: 1647, column: 59, scope: !15726)
!15737 = !DILocation(line: 1647, column: 43, scope: !15726)
!15738 = !DILocation(line: 1647, column: 18, scope: !15726)
!15739 = !DILocation(line: 1647, column: 2, scope: !15726)
!15740 = !DILocation(line: 1647, column: 8, scope: !15726)
!15741 = !DILocation(line: 1647, column: 16, scope: !15726)
!15742 = !DILocation(line: 1648, column: 13, scope: !15743)
!15743 = distinct !DILexicalBlock(scope: !15726, file: !3, line: 1648, column: 6)
!15744 = !DILocation(line: 1648, column: 19, scope: !15743)
!15745 = !DILocation(line: 1648, column: 6, scope: !15743)
!15746 = !DILocation(line: 1648, column: 6, scope: !15726)
!15747 = !DILocation(line: 1649, column: 3, scope: !15748)
!15748 = distinct !DILexicalBlock(scope: !15743, file: !3, line: 1648, column: 29)
!15749 = !DILocation(line: 1650, column: 18, scope: !15748)
!15750 = !DILocation(line: 1650, column: 24, scope: !15748)
!15751 = !DILocation(line: 1650, column: 10, scope: !15748)
!15752 = !DILocation(line: 1650, column: 3, scope: !15748)
!15753 = !DILocation(line: 1653, column: 2, scope: !15726)
!15754 = !DILocation(line: 1653, column: 2, scope: !15755)
!15755 = distinct !DILexicalBlock(scope: !15726, file: !3, line: 1653, column: 2)
!15756 = !DILocation(line: 1662, column: 6, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15726, file: !3, line: 1662, column: 6)
!15758 = !DILocation(line: 1662, column: 12, scope: !15757)
!15759 = !DILocation(line: 1662, column: 6, scope: !15726)
!15760 = !DILocation(line: 1663, column: 21, scope: !15757)
!15761 = !DILocation(line: 1663, column: 3, scope: !15757)
!15762 = !DILocation(line: 1665, column: 2, scope: !15726)
!15763 = !DILocation(line: 1666, column: 1, scope: !15726)
!15764 = distinct !DISubprogram(name: "trace_spi_transfer_start", scope: !7906, file: !7906, line: 163, type: !5389, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15765 = !DILocalVariable(name: "msg", arg: 1, scope: !15764, file: !7906, line: 163, type: !4594)
!15766 = !DILocation(line: 163, column: 1, scope: !15764)
!15767 = !DILocalVariable(name: "xfer", arg: 2, scope: !15764, file: !7906, line: 163, type: !4616)
!15768 = distinct !DISubprogram(name: "reinit_completion", scope: !1644, file: !1644, line: 98, type: !5384, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15769 = !DILocalVariable(name: "x", arg: 1, scope: !15768, file: !1644, line: 98, type: !1642)
!15770 = !DILocation(line: 98, column: 57, scope: !15768)
!15771 = !DILocation(line: 100, column: 2, scope: !15768)
!15772 = !DILocation(line: 100, column: 5, scope: !15768)
!15773 = !DILocation(line: 100, column: 10, scope: !15768)
!15774 = !DILocation(line: 101, column: 1, scope: !15768)
!15775 = distinct !DISubprogram(name: "spi_transfer_wait", scope: !3, file: !3, line: 1096, type: !15776, scopeLine: 1099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15776 = !DISubroutineType(types: !15777)
!15777 = !{!234, !4512, !4594, !4616}
!15778 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !15779)
!15779 = distinct !DILocation(line: 1122, column: 4, scope: !15780)
!15780 = distinct !DILexicalBlock(scope: !15781, file: !3, line: 1122, column: 4)
!15781 = distinct !DILexicalBlock(scope: !15782, file: !3, line: 1120, column: 16)
!15782 = distinct !DILexicalBlock(scope: !15783, file: !3, line: 1120, column: 7)
!15783 = distinct !DILexicalBlock(scope: !15784, file: !3, line: 1109, column: 9)
!15784 = distinct !DILexicalBlock(scope: !15775, file: !3, line: 1104, column: 6)
!15785 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !15779)
!15786 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !15787)
!15787 = distinct !DILocation(line: 1122, column: 4, scope: !15788)
!15788 = distinct !DILexicalBlock(scope: !15789, file: !3, line: 1122, column: 4)
!15789 = distinct !DILexicalBlock(scope: !15790, file: !3, line: 1122, column: 4)
!15790 = distinct !DILexicalBlock(scope: !15791, file: !3, line: 1122, column: 4)
!15791 = distinct !DILexicalBlock(scope: !15792, file: !3, line: 1122, column: 4)
!15792 = distinct !DILexicalBlock(scope: !15780, file: !3, line: 1122, column: 4)
!15793 = !DILocation(line: 407, column: 64, scope: !5421, inlinedAt: !15794)
!15794 = distinct !DILocation(line: 1121, column: 4, scope: !15795)
!15795 = distinct !DILexicalBlock(scope: !15781, file: !3, line: 1121, column: 4)
!15796 = !DILocation(line: 407, column: 84, scope: !5421, inlinedAt: !15794)
!15797 = !DILocation(line: 327, column: 67, scope: !5430, inlinedAt: !15798)
!15798 = distinct !DILocation(line: 1121, column: 4, scope: !15799)
!15799 = distinct !DILexicalBlock(scope: !15800, file: !3, line: 1121, column: 4)
!15800 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 1121, column: 4)
!15801 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 1121, column: 4)
!15802 = distinct !DILexicalBlock(scope: !15803, file: !3, line: 1121, column: 4)
!15803 = distinct !DILexicalBlock(scope: !15795, file: !3, line: 1121, column: 4)
!15804 = !DILocalVariable(name: "m", arg: 1, scope: !15805, file: !15806, line: 363, type: !2965)
!15805 = distinct !DISubprogram(name: "msecs_to_jiffies", scope: !15806, file: !15806, line: 363, type: !15807, scopeLine: 364, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15806 = !DIFile(filename: "./include/linux/jiffies.h", directory: "/home/lizy2001/genbc/linux")
!15807 = !DISubroutineType(types: !15808)
!15808 = !{!388, !2965}
!15809 = !DILocation(line: 363, column: 74, scope: !15805, inlinedAt: !15810)
!15810 = distinct !DILocation(line: 1118, column: 8, scope: !15783)
!15811 = !DILocalVariable(name: "ctlr", arg: 1, scope: !15775, file: !3, line: 1096, type: !4512)
!15812 = !DILocation(line: 1096, column: 53, scope: !15775)
!15813 = !DILocalVariable(name: "msg", arg: 2, scope: !15775, file: !3, line: 1097, type: !4594)
!15814 = !DILocation(line: 1097, column: 29, scope: !15775)
!15815 = !DILocalVariable(name: "xfer", arg: 3, scope: !15775, file: !3, line: 1098, type: !4616)
!15816 = !DILocation(line: 1098, column: 30, scope: !15775)
!15817 = !DILocalVariable(name: "statm", scope: !15775, file: !3, line: 1100, type: !5419)
!15818 = !DILocation(line: 1100, column: 25, scope: !15775)
!15819 = !DILocation(line: 1100, column: 34, scope: !15775)
!15820 = !DILocation(line: 1100, column: 40, scope: !15775)
!15821 = !DILocalVariable(name: "stats", scope: !15775, file: !3, line: 1101, type: !5419)
!15822 = !DILocation(line: 1101, column: 25, scope: !15775)
!15823 = !DILocation(line: 1101, column: 34, scope: !15775)
!15824 = !DILocation(line: 1101, column: 39, scope: !15775)
!15825 = !DILocation(line: 1101, column: 44, scope: !15775)
!15826 = !DILocalVariable(name: "ms", scope: !15775, file: !3, line: 1102, type: !487)
!15827 = !DILocation(line: 1102, column: 21, scope: !15775)
!15828 = !DILocation(line: 1104, column: 30, scope: !15784)
!15829 = !DILocation(line: 1104, column: 6, scope: !15784)
!15830 = !DILocation(line: 1104, column: 6, scope: !15775)
!15831 = !DILocation(line: 1105, column: 42, scope: !15832)
!15832 = distinct !DILexicalBlock(scope: !15833, file: !3, line: 1105, column: 7)
!15833 = distinct !DILexicalBlock(scope: !15784, file: !3, line: 1104, column: 37)
!15834 = !DILocation(line: 1105, column: 48, scope: !15832)
!15835 = !DILocation(line: 1105, column: 7, scope: !15832)
!15836 = !DILocation(line: 1105, column: 7, scope: !15833)
!15837 = !DILocation(line: 1107, column: 4, scope: !15838)
!15838 = distinct !DILexicalBlock(scope: !15832, file: !3, line: 1105, column: 66)
!15839 = !DILocation(line: 1109, column: 2, scope: !15833)
!15840 = !DILocation(line: 1110, column: 23, scope: !15783)
!15841 = !DILocation(line: 1110, column: 29, scope: !15783)
!15842 = !DILocation(line: 1110, column: 21, scope: !15783)
!15843 = !DILocation(line: 1110, column: 6, scope: !15783)
!15844 = !DILocalVariable(name: "__base", scope: !15845, file: !3, line: 1111, type: !621)
!15845 = distinct !DILexicalBlock(scope: !15783, file: !3, line: 1111, column: 3)
!15846 = !DILocation(line: 1111, column: 3, scope: !15845)
!15847 = !DILocalVariable(name: "__rem", scope: !15845, file: !3, line: 1111, type: !621)
!15848 = !DILocation(line: 1112, column: 9, scope: !15783)
!15849 = !DILocation(line: 1112, column: 12, scope: !15783)
!15850 = !DILocation(line: 1112, column: 6, scope: !15783)
!15851 = !DILocation(line: 1114, column: 7, scope: !15852)
!15852 = distinct !DILexicalBlock(scope: !15783, file: !3, line: 1114, column: 7)
!15853 = !DILocation(line: 1114, column: 10, scope: !15852)
!15854 = !DILocation(line: 1114, column: 7, scope: !15783)
!15855 = !DILocation(line: 1115, column: 7, scope: !15852)
!15856 = !DILocation(line: 1115, column: 4, scope: !15852)
!15857 = !DILocation(line: 1117, column: 37, scope: !15783)
!15858 = !DILocation(line: 1117, column: 43, scope: !15783)
!15859 = !DILocation(line: 1118, column: 25, scope: !15783)
!15860 = !DILocation(line: 365, column: 27, scope: !15861, inlinedAt: !15810)
!15861 = distinct !DILexicalBlock(scope: !15805, file: !15806, line: 365, column: 6)
!15862 = !DILocation(line: 365, column: 6, scope: !15861, inlinedAt: !15810)
!15863 = !DILocation(line: 365, column: 6, scope: !15805, inlinedAt: !15810)
!15864 = !DILocation(line: 366, column: 12, scope: !15865, inlinedAt: !15810)
!15865 = distinct !DILexicalBlock(scope: !15866, file: !15806, line: 366, column: 7)
!15866 = distinct !DILexicalBlock(scope: !15861, file: !15806, line: 365, column: 31)
!15867 = !DILocation(line: 366, column: 14, scope: !15865, inlinedAt: !15810)
!15868 = !DILocation(line: 366, column: 7, scope: !15866, inlinedAt: !15810)
!15869 = !DILocation(line: 367, column: 4, scope: !15865, inlinedAt: !15810)
!15870 = !DILocation(line: 368, column: 28, scope: !15866, inlinedAt: !15810)
!15871 = !DILocation(line: 368, column: 10, scope: !15866, inlinedAt: !15810)
!15872 = !DILocation(line: 368, column: 3, scope: !15866, inlinedAt: !15810)
!15873 = !DILocation(line: 370, column: 29, scope: !15874, inlinedAt: !15810)
!15874 = distinct !DILexicalBlock(scope: !15861, file: !15806, line: 369, column: 9)
!15875 = !DILocation(line: 370, column: 10, scope: !15874, inlinedAt: !15810)
!15876 = !DILocation(line: 370, column: 3, scope: !15874, inlinedAt: !15810)
!15877 = !DILocation(line: 372, column: 1, scope: !15805, inlinedAt: !15810)
!15878 = !DILocation(line: 1117, column: 8, scope: !15783)
!15879 = !DILocation(line: 1117, column: 6, scope: !15783)
!15880 = !DILocation(line: 1120, column: 7, scope: !15782)
!15881 = !DILocation(line: 1120, column: 10, scope: !15782)
!15882 = !DILocation(line: 1120, column: 7, scope: !15783)
!15883 = !DILocation(line: 1121, column: 4, scope: !15781)
!15884 = !DILocalVariable(name: "flags", scope: !15795, file: !3, line: 1121, type: !388)
!15885 = !DILocation(line: 1121, column: 4, scope: !15795)
!15886 = !DILocation(line: 1121, column: 4, scope: !15803)
!15887 = !DILocalVariable(name: "__dummy", scope: !15888, file: !3, line: 1121, type: !388)
!15888 = distinct !DILexicalBlock(scope: !15802, file: !3, line: 1121, column: 4)
!15889 = !DILocation(line: 1121, column: 4, scope: !15888)
!15890 = !DILocalVariable(name: "__dummy2", scope: !15888, file: !3, line: 1121, type: !388)
!15891 = !DILocation(line: 1121, column: 4, scope: !15802)
!15892 = !DILocation(line: 1121, column: 4, scope: !15801)
!15893 = !DILocation(line: 1121, column: 4, scope: !15894)
!15894 = distinct !DILexicalBlock(scope: !15801, file: !3, line: 1121, column: 4)
!15895 = !DILocalVariable(name: "__dummy", scope: !15896, file: !3, line: 1121, type: !388)
!15896 = distinct !DILexicalBlock(scope: !15897, file: !3, line: 1121, column: 4)
!15897 = distinct !DILexicalBlock(scope: !15894, file: !3, line: 1121, column: 4)
!15898 = !DILocation(line: 1121, column: 4, scope: !15896)
!15899 = !DILocalVariable(name: "__dummy2", scope: !15896, file: !3, line: 1121, type: !388)
!15900 = !DILocation(line: 1121, column: 4, scope: !15897)
!15901 = !DILocation(line: 1121, column: 4, scope: !15800)
!15902 = !{i32 -2140519445}
!15903 = !DILocation(line: 1121, column: 4, scope: !15799)
!15904 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !15798)
!15905 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !15798)
!15906 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !15794)
!15907 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !15794)
!15908 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !15794)
!15909 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !15794)
!15910 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !15794)
!15911 = !DILocation(line: 1122, column: 4, scope: !15781)
!15912 = !DILocalVariable(name: "flags", scope: !15780, file: !3, line: 1122, type: !388)
!15913 = !DILocation(line: 1122, column: 4, scope: !15780)
!15914 = !DILocation(line: 1122, column: 4, scope: !15792)
!15915 = !DILocalVariable(name: "__dummy", scope: !15916, file: !3, line: 1122, type: !388)
!15916 = distinct !DILexicalBlock(scope: !15791, file: !3, line: 1122, column: 4)
!15917 = !DILocation(line: 1122, column: 4, scope: !15916)
!15918 = !DILocalVariable(name: "__dummy2", scope: !15916, file: !3, line: 1122, type: !388)
!15919 = !DILocation(line: 1122, column: 4, scope: !15791)
!15920 = !DILocation(line: 1122, column: 4, scope: !15790)
!15921 = !DILocation(line: 1122, column: 4, scope: !15922)
!15922 = distinct !DILexicalBlock(scope: !15790, file: !3, line: 1122, column: 4)
!15923 = !DILocalVariable(name: "__dummy", scope: !15924, file: !3, line: 1122, type: !388)
!15924 = distinct !DILexicalBlock(scope: !15925, file: !3, line: 1122, column: 4)
!15925 = distinct !DILexicalBlock(scope: !15922, file: !3, line: 1122, column: 4)
!15926 = !DILocation(line: 1122, column: 4, scope: !15924)
!15927 = !DILocalVariable(name: "__dummy2", scope: !15924, file: !3, line: 1122, type: !388)
!15928 = !DILocation(line: 1122, column: 4, scope: !15925)
!15929 = !DILocation(line: 1122, column: 4, scope: !15789)
!15930 = !{i32 -2140518120}
!15931 = !DILocation(line: 1122, column: 4, scope: !15788)
!15932 = !DILocation(line: 329, column: 10, scope: !5430, inlinedAt: !15787)
!15933 = !DILocation(line: 329, column: 16, scope: !5430, inlinedAt: !15787)
!15934 = !DILocation(line: 409, column: 2, scope: !5545, inlinedAt: !15779)
!15935 = !DILocation(line: 409, column: 2, scope: !5550, inlinedAt: !15779)
!15936 = !DILocation(line: 409, column: 2, scope: !5551, inlinedAt: !15779)
!15937 = !DILocation(line: 409, column: 2, scope: !5558, inlinedAt: !15779)
!15938 = !DILocation(line: 409, column: 2, scope: !5561, inlinedAt: !15779)
!15939 = !DILocation(line: 1123, column: 4, scope: !15781)
!15940 = !DILocation(line: 1125, column: 4, scope: !15781)
!15941 = !DILocation(line: 1129, column: 2, scope: !15775)
!15942 = !DILocation(line: 1130, column: 1, scope: !15775)
!15943 = distinct !DISubprogram(name: "trace_spi_transfer_stop", scope: !7906, file: !7906, line: 171, type: !5389, scopeLine: 171, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15944 = !DILocalVariable(name: "msg", arg: 1, scope: !15943, file: !7906, line: 171, type: !4594)
!15945 = !DILocation(line: 171, column: 1, scope: !15943)
!15946 = !DILocalVariable(name: "xfer", arg: 2, scope: !15943, file: !7906, line: 171, type: !4616)
!15947 = distinct !DISubprogram(name: "spi_transfer_delay_exec", scope: !4514, file: !4514, line: 1060, type: !15948, scopeLine: 1061, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15948 = !DISubroutineType(types: !15949)
!15949 = !{!234, !4616}
!15950 = !DILocalVariable(name: "t", arg: 1, scope: !15947, file: !4514, line: 1060, type: !4616)
!15951 = !DILocation(line: 1060, column: 46, scope: !15947)
!15952 = !DILocalVariable(name: "d", scope: !15947, file: !4514, line: 1062, type: !4553)
!15953 = !DILocation(line: 1062, column: 19, scope: !15947)
!15954 = !DILocation(line: 1064, column: 6, scope: !15955)
!15955 = distinct !DILexicalBlock(scope: !15947, file: !4514, line: 1064, column: 6)
!15956 = !DILocation(line: 1064, column: 9, scope: !15955)
!15957 = !DILocation(line: 1064, column: 6, scope: !15947)
!15958 = !DILocation(line: 1065, column: 13, scope: !15959)
!15959 = distinct !DILexicalBlock(scope: !15955, file: !4514, line: 1064, column: 22)
!15960 = !DILocation(line: 1065, column: 16, scope: !15959)
!15961 = !DILocation(line: 1065, column: 5, scope: !15959)
!15962 = !DILocation(line: 1065, column: 11, scope: !15959)
!15963 = !DILocation(line: 1066, column: 5, scope: !15959)
!15964 = !DILocation(line: 1066, column: 10, scope: !15959)
!15965 = !DILocation(line: 1067, column: 10, scope: !15959)
!15966 = !DILocation(line: 1067, column: 3, scope: !15959)
!15967 = !DILocation(line: 1070, column: 25, scope: !15947)
!15968 = !DILocation(line: 1070, column: 28, scope: !15947)
!15969 = !DILocation(line: 1070, column: 35, scope: !15947)
!15970 = !DILocation(line: 1070, column: 9, scope: !15947)
!15971 = !DILocation(line: 1070, column: 2, scope: !15947)
!15972 = !DILocation(line: 1071, column: 1, scope: !15947)
!15973 = distinct !DISubprogram(name: "list_is_last", scope: !6950, file: !6950, line: 270, type: !15974, scopeLine: 272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!15974 = !DISubroutineType(types: !15975)
!15975 = !{!234, !9823, !9823}
!15976 = !DILocalVariable(name: "list", arg: 1, scope: !15973, file: !6950, line: 270, type: !9823)
!15977 = !DILocation(line: 270, column: 56, scope: !15973)
!15978 = !DILocalVariable(name: "head", arg: 2, scope: !15973, file: !6950, line: 271, type: !9823)
!15979 = !DILocation(line: 271, column: 29, scope: !15973)
!15980 = !DILocation(line: 273, column: 9, scope: !15973)
!15981 = !DILocation(line: 273, column: 15, scope: !15973)
!15982 = !DILocation(line: 273, column: 23, scope: !15973)
!15983 = !DILocation(line: 273, column: 20, scope: !15973)
!15984 = !DILocation(line: 273, column: 2, scope: !15973)
!15985 = !DILocalVariable(name: "msg", arg: 1, scope: !5388, file: !3, line: 1202, type: !4594)
!15986 = !DILocation(line: 1202, column: 63, scope: !5388)
!15987 = !DILocalVariable(name: "xfer", arg: 2, scope: !5388, file: !3, line: 1203, type: !4616)
!15988 = !DILocation(line: 1203, column: 29, scope: !5388)
!15989 = !DILocalVariable(name: "delay", scope: !5388, file: !3, line: 1205, type: !479)
!15990 = !DILocation(line: 1205, column: 6, scope: !5388)
!15991 = !DILocation(line: 1205, column: 14, scope: !5388)
!15992 = !DILocation(line: 1205, column: 20, scope: !5388)
!15993 = !DILocation(line: 1205, column: 36, scope: !5388)
!15994 = !DILocalVariable(name: "unit", scope: !5388, file: !3, line: 1206, type: !479)
!15995 = !DILocation(line: 1206, column: 6, scope: !5388)
!15996 = !DILocation(line: 1206, column: 13, scope: !5388)
!15997 = !DILocation(line: 1206, column: 19, scope: !5388)
!15998 = !DILocation(line: 1206, column: 35, scope: !5388)
!15999 = !DILocalVariable(name: "ret", scope: !5388, file: !3, line: 1207, type: !234)
!16000 = !DILocation(line: 1207, column: 6, scope: !5388)
!16001 = !DILocation(line: 1210, column: 7, scope: !16002)
!16002 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1210, column: 6)
!16003 = !DILocation(line: 1210, column: 6, scope: !5388)
!16004 = !DILocation(line: 1211, column: 7, scope: !16005)
!16005 = distinct !DILexicalBlock(scope: !16006, file: !3, line: 1211, column: 7)
!16006 = distinct !DILexicalBlock(scope: !16002, file: !3, line: 1210, column: 14)
!16007 = !DILocation(line: 1211, column: 12, scope: !16005)
!16008 = !DILocation(line: 1211, column: 7, scope: !16006)
!16009 = !DILocation(line: 1212, column: 4, scope: !16005)
!16010 = !DILocation(line: 1213, column: 3, scope: !16006)
!16011 = !DILocation(line: 1216, column: 24, scope: !5388)
!16012 = !DILocation(line: 1216, column: 30, scope: !5388)
!16013 = !DILocation(line: 1216, column: 47, scope: !5388)
!16014 = !DILocation(line: 1216, column: 8, scope: !5388)
!16015 = !DILocation(line: 1216, column: 6, scope: !5388)
!16016 = !DILocation(line: 1217, column: 6, scope: !16017)
!16017 = distinct !DILexicalBlock(scope: !5388, file: !3, line: 1217, column: 6)
!16018 = !DILocation(line: 1217, column: 6, scope: !5388)
!16019 = !DILocation(line: 1218, column: 3, scope: !16020)
!16020 = distinct !DILexicalBlock(scope: !16017, file: !3, line: 1217, column: 11)
!16021 = !DILocation(line: 1218, column: 3, scope: !16022)
!16022 = distinct !DILexicalBlock(scope: !16023, file: !3, line: 1218, column: 3)
!16023 = distinct !DILexicalBlock(scope: !16020, file: !3, line: 1218, column: 3)
!16024 = !DILocation(line: 1218, column: 3, scope: !16023)
!16025 = !DILocation(line: 1218, column: 3, scope: !16026)
!16026 = distinct !DILexicalBlock(scope: !16022, file: !3, line: 1218, column: 3)
!16027 = !DILocation(line: 1221, column: 3, scope: !16020)
!16028 = !DILocation(line: 1222, column: 2, scope: !16020)
!16029 = !DILocation(line: 1223, column: 1, scope: !5388)
!16030 = distinct !DISubprogram(name: "_msecs_to_jiffies", scope: !15806, file: !15806, line: 308, type: !15807, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16031 = !DILocalVariable(name: "m", arg: 1, scope: !16030, file: !15806, line: 308, type: !2965)
!16032 = !DILocation(line: 308, column: 66, scope: !16030)
!16033 = !DILocation(line: 310, column: 10, scope: !16030)
!16034 = !DILocation(line: 310, column: 12, scope: !16030)
!16035 = !DILocation(line: 310, column: 34, scope: !16030)
!16036 = !DILocation(line: 310, column: 39, scope: !16030)
!16037 = !DILocation(line: 310, column: 2, scope: !16030)
!16038 = distinct !DISubprogram(name: "spi_pump_messages", scope: !3, file: !3, line: 1527, type: !4681, scopeLine: 1528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16039 = !DILocalVariable(name: "work", arg: 1, scope: !16038, file: !3, line: 1527, type: !4674)
!16040 = !DILocation(line: 1527, column: 52, scope: !16038)
!16041 = !DILocalVariable(name: "ctlr", scope: !16038, file: !3, line: 1529, type: !4512)
!16042 = !DILocation(line: 1529, column: 25, scope: !16038)
!16043 = !DILocalVariable(name: "__mptr", scope: !16044, file: !3, line: 1530, type: !228)
!16044 = distinct !DILexicalBlock(scope: !16038, file: !3, line: 1530, column: 3)
!16045 = !DILocation(line: 1530, column: 3, scope: !16044)
!16046 = !DILocation(line: 1530, column: 3, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16044, file: !3, line: 1530, column: 3)
!16048 = !DILocation(line: 1532, column: 22, scope: !16038)
!16049 = !DILocation(line: 1532, column: 2, scope: !16038)
!16050 = !DILocation(line: 1533, column: 1, scope: !16038)
!16051 = distinct !DISubprogram(name: "of_node_test_and_set_flag", scope: !3805, file: !3805, line: 193, type: !16052, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16052 = !DISubroutineType(types: !16053)
!16053 = !{!234, !3803, !388}
!16054 = !DILocalVariable(name: "n", arg: 1, scope: !16051, file: !3805, line: 193, type: !3803)
!16055 = !DILocation(line: 193, column: 65, scope: !16051)
!16056 = !DILocalVariable(name: "flag", arg: 2, scope: !16051, file: !3805, line: 194, type: !388)
!16057 = !DILocation(line: 194, column: 24, scope: !16051)
!16058 = !DILocation(line: 196, column: 26, scope: !16051)
!16059 = !DILocation(line: 196, column: 33, scope: !16051)
!16060 = !DILocation(line: 196, column: 36, scope: !16051)
!16061 = !DILocation(line: 196, column: 9, scope: !16051)
!16062 = !DILocation(line: 196, column: 2, scope: !16051)
!16063 = distinct !DISubprogram(name: "of_register_spi_device", scope: !3, file: !3, line: 2001, type: !16064, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16064 = !DISubroutineType(types: !16065)
!16065 = !{!4532, !4512, !3803}
!16066 = !DILocalVariable(name: "ctlr", arg: 1, scope: !16063, file: !3, line: 2001, type: !4512)
!16067 = !DILocation(line: 2001, column: 47, scope: !16063)
!16068 = !DILocalVariable(name: "nc", arg: 2, scope: !16063, file: !3, line: 2001, type: !3803)
!16069 = !DILocation(line: 2001, column: 73, scope: !16063)
!16070 = !DILocalVariable(name: "spi", scope: !16063, file: !3, line: 2003, type: !4532)
!16071 = !DILocation(line: 2003, column: 21, scope: !16063)
!16072 = !DILocalVariable(name: "rc", scope: !16063, file: !3, line: 2004, type: !234)
!16073 = !DILocation(line: 2004, column: 6, scope: !16063)
!16074 = !DILocation(line: 2007, column: 25, scope: !16063)
!16075 = !DILocation(line: 2007, column: 8, scope: !16063)
!16076 = !DILocation(line: 2007, column: 6, scope: !16063)
!16077 = !DILocation(line: 2008, column: 7, scope: !16078)
!16078 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 2008, column: 6)
!16079 = !DILocation(line: 2008, column: 6, scope: !16063)
!16080 = !DILocation(line: 2009, column: 3, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16078, file: !3, line: 2008, column: 12)
!16082 = !DILocation(line: 2010, column: 6, scope: !16081)
!16083 = !DILocation(line: 2011, column: 3, scope: !16081)
!16084 = !DILocation(line: 2015, column: 24, scope: !16063)
!16085 = !DILocation(line: 2015, column: 28, scope: !16063)
!16086 = !DILocation(line: 2015, column: 33, scope: !16063)
!16087 = !DILocation(line: 2015, column: 7, scope: !16063)
!16088 = !DILocation(line: 2015, column: 5, scope: !16063)
!16089 = !DILocation(line: 2017, column: 6, scope: !16090)
!16090 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 2017, column: 6)
!16091 = !DILocation(line: 2017, column: 9, scope: !16090)
!16092 = !DILocation(line: 2017, column: 6, scope: !16063)
!16093 = !DILocation(line: 2018, column: 3, scope: !16094)
!16094 = distinct !DILexicalBlock(scope: !16090, file: !3, line: 2017, column: 14)
!16095 = !DILocation(line: 2019, column: 3, scope: !16094)
!16096 = !DILocation(line: 2022, column: 23, scope: !16063)
!16097 = !DILocation(line: 2022, column: 29, scope: !16063)
!16098 = !DILocation(line: 2022, column: 34, scope: !16063)
!16099 = !DILocation(line: 2022, column: 7, scope: !16063)
!16100 = !DILocation(line: 2022, column: 5, scope: !16063)
!16101 = !DILocation(line: 2023, column: 6, scope: !16102)
!16102 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 2023, column: 6)
!16103 = !DILocation(line: 2023, column: 6, scope: !16063)
!16104 = !DILocation(line: 2024, column: 3, scope: !16102)
!16105 = !DILocation(line: 2027, column: 14, scope: !16063)
!16106 = !DILocation(line: 2027, column: 2, scope: !16063)
!16107 = !DILocation(line: 2028, column: 21, scope: !16063)
!16108 = !DILocation(line: 2028, column: 2, scope: !16063)
!16109 = !DILocation(line: 2028, column: 7, scope: !16063)
!16110 = !DILocation(line: 2028, column: 11, scope: !16063)
!16111 = !DILocation(line: 2028, column: 19, scope: !16063)
!16112 = !DILocation(line: 2031, column: 22, scope: !16063)
!16113 = !DILocation(line: 2031, column: 7, scope: !16063)
!16114 = !DILocation(line: 2031, column: 5, scope: !16063)
!16115 = !DILocation(line: 2032, column: 6, scope: !16116)
!16116 = distinct !DILexicalBlock(scope: !16063, file: !3, line: 2032, column: 6)
!16117 = !DILocation(line: 2032, column: 6, scope: !16063)
!16118 = !DILocation(line: 2033, column: 3, scope: !16119)
!16119 = distinct !DILexicalBlock(scope: !16116, file: !3, line: 2032, column: 10)
!16120 = !DILocation(line: 2034, column: 3, scope: !16119)
!16121 = !DILocation(line: 2037, column: 9, scope: !16063)
!16122 = !DILocation(line: 2037, column: 2, scope: !16063)
!16123 = !DILabel(scope: !16063, name: "err_of_node_put", file: !3, line: 2039)
!16124 = !DILocation(line: 2039, column: 1, scope: !16063)
!16125 = !DILocation(line: 2040, column: 14, scope: !16063)
!16126 = !DILocation(line: 2040, column: 2, scope: !16063)
!16127 = !DILabel(scope: !16063, name: "err_out", file: !3, line: 2041)
!16128 = !DILocation(line: 2041, column: 1, scope: !16063)
!16129 = !DILocation(line: 2042, column: 14, scope: !16063)
!16130 = !DILocation(line: 2042, column: 2, scope: !16063)
!16131 = !DILocation(line: 2043, column: 17, scope: !16063)
!16132 = !DILocation(line: 2043, column: 9, scope: !16063)
!16133 = !DILocation(line: 2043, column: 2, scope: !16063)
!16134 = !DILocation(line: 2044, column: 1, scope: !16063)
!16135 = distinct !DISubprogram(name: "test_and_set_bit", scope: !13970, file: !13970, line: 68, type: !16136, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16136 = !DISubroutineType(types: !16137)
!16137 = !{!261, !373, !13973}
!16138 = !DILocalVariable(name: "nr", arg: 1, scope: !16139, file: !5443, line: 136, type: !373)
!16139 = distinct !DISubprogram(name: "arch_test_and_set_bit", scope: !5443, file: !5443, line: 136, type: !16136, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16140 = !DILocation(line: 136, column: 28, scope: !16139, inlinedAt: !16141)
!16141 = distinct !DILocation(line: 71, column: 9, scope: !16135)
!16142 = !DILocalVariable(name: "addr", arg: 2, scope: !16139, file: !5443, line: 136, type: !13973)
!16143 = !DILocation(line: 136, column: 56, scope: !16139, inlinedAt: !16141)
!16144 = !DILocalVariable(name: "c", scope: !16145, file: !5443, line: 138, type: !261)
!16145 = distinct !DILexicalBlock(scope: !16139, file: !5443, line: 138, column: 9)
!16146 = !DILocation(line: 138, column: 9, scope: !16145, inlinedAt: !16141)
!16147 = !DILocation(line: 99, column: 79, scope: !10523, inlinedAt: !16148)
!16148 = distinct !DILocation(line: 70, column: 2, scope: !16135)
!16149 = !DILocation(line: 99, column: 89, scope: !10523, inlinedAt: !16148)
!16150 = !DILocalVariable(name: "nr", arg: 1, scope: !16135, file: !13970, line: 68, type: !373)
!16151 = !DILocation(line: 68, column: 42, scope: !16135)
!16152 = !DILocalVariable(name: "addr", arg: 2, scope: !16135, file: !13970, line: 68, type: !13973)
!16153 = !DILocation(line: 68, column: 70, scope: !16135)
!16154 = !DILocation(line: 70, column: 31, scope: !16135)
!16155 = !DILocation(line: 70, column: 38, scope: !16135)
!16156 = !DILocation(line: 70, column: 36, scope: !16135)
!16157 = !DILocation(line: 101, column: 20, scope: !10523, inlinedAt: !16148)
!16158 = !DILocation(line: 101, column: 23, scope: !10523, inlinedAt: !16148)
!16159 = !DILocation(line: 101, column: 2, scope: !10523, inlinedAt: !16148)
!16160 = !DILocation(line: 102, column: 2, scope: !10523, inlinedAt: !16148)
!16161 = !DILocation(line: 71, column: 31, scope: !16135)
!16162 = !DILocation(line: 71, column: 35, scope: !16135)
!16163 = !{i32 -2147093209, i32 -2147093113}
!16164 = !DILocation(line: 71, column: 2, scope: !16135)
!16165 = distinct !DISubprogram(name: "of_spi_parse_dt", scope: !3, file: !3, line: 1914, type: !16166, scopeLine: 1916, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16166 = !DISubroutineType(types: !16167)
!16167 = !{!234, !4512, !4532, !3803}
!16168 = !DILocalVariable(name: "ctlr", arg: 1, scope: !16165, file: !3, line: 1914, type: !4512)
!16169 = !DILocation(line: 1914, column: 51, scope: !16165)
!16170 = !DILocalVariable(name: "spi", arg: 2, scope: !16165, file: !3, line: 1914, type: !4532)
!16171 = !DILocation(line: 1914, column: 76, scope: !16165)
!16172 = !DILocalVariable(name: "nc", arg: 3, scope: !16165, file: !3, line: 1915, type: !3803)
!16173 = !DILocation(line: 1915, column: 27, scope: !16165)
!16174 = !DILocalVariable(name: "value", scope: !16165, file: !3, line: 1917, type: !479)
!16175 = !DILocation(line: 1917, column: 6, scope: !16165)
!16176 = !DILocalVariable(name: "rc", scope: !16165, file: !3, line: 1918, type: !234)
!16177 = !DILocation(line: 1918, column: 6, scope: !16165)
!16178 = !DILocation(line: 1921, column: 28, scope: !16179)
!16179 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1921, column: 6)
!16180 = !DILocation(line: 1921, column: 6, scope: !16179)
!16181 = !DILocation(line: 1921, column: 6, scope: !16165)
!16182 = !DILocation(line: 1922, column: 3, scope: !16179)
!16183 = !DILocation(line: 1922, column: 8, scope: !16179)
!16184 = !DILocation(line: 1922, column: 13, scope: !16179)
!16185 = !DILocation(line: 1923, column: 28, scope: !16186)
!16186 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1923, column: 6)
!16187 = !DILocation(line: 1923, column: 6, scope: !16186)
!16188 = !DILocation(line: 1923, column: 6, scope: !16165)
!16189 = !DILocation(line: 1924, column: 3, scope: !16186)
!16190 = !DILocation(line: 1924, column: 8, scope: !16186)
!16191 = !DILocation(line: 1924, column: 13, scope: !16186)
!16192 = !DILocation(line: 1925, column: 28, scope: !16193)
!16193 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1925, column: 6)
!16194 = !DILocation(line: 1925, column: 6, scope: !16193)
!16195 = !DILocation(line: 1925, column: 6, scope: !16165)
!16196 = !DILocation(line: 1926, column: 3, scope: !16193)
!16197 = !DILocation(line: 1926, column: 8, scope: !16193)
!16198 = !DILocation(line: 1926, column: 13, scope: !16193)
!16199 = !DILocation(line: 1927, column: 28, scope: !16200)
!16200 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1927, column: 6)
!16201 = !DILocation(line: 1927, column: 6, scope: !16200)
!16202 = !DILocation(line: 1927, column: 6, scope: !16165)
!16203 = !DILocation(line: 1928, column: 3, scope: !16200)
!16204 = !DILocation(line: 1928, column: 8, scope: !16200)
!16205 = !DILocation(line: 1928, column: 13, scope: !16200)
!16206 = !DILocation(line: 1929, column: 28, scope: !16207)
!16207 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1929, column: 6)
!16208 = !DILocation(line: 1929, column: 6, scope: !16207)
!16209 = !DILocation(line: 1929, column: 6, scope: !16165)
!16210 = !DILocation(line: 1930, column: 3, scope: !16207)
!16211 = !DILocation(line: 1930, column: 8, scope: !16207)
!16212 = !DILocation(line: 1930, column: 13, scope: !16207)
!16213 = !DILocation(line: 1933, column: 28, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1933, column: 6)
!16215 = !DILocation(line: 1933, column: 7, scope: !16214)
!16216 = !DILocation(line: 1933, column: 6, scope: !16165)
!16217 = !DILocation(line: 1934, column: 11, scope: !16218)
!16218 = distinct !DILexicalBlock(scope: !16214, file: !3, line: 1933, column: 61)
!16219 = !DILocation(line: 1934, column: 3, scope: !16218)
!16220 = !DILocation(line: 1936, column: 4, scope: !16221)
!16221 = distinct !DILexicalBlock(scope: !16218, file: !3, line: 1934, column: 18)
!16222 = !DILocation(line: 1938, column: 4, scope: !16221)
!16223 = !DILocation(line: 1938, column: 9, scope: !16221)
!16224 = !DILocation(line: 1938, column: 14, scope: !16221)
!16225 = !DILocation(line: 1939, column: 4, scope: !16221)
!16226 = !DILocation(line: 1941, column: 4, scope: !16221)
!16227 = !DILocation(line: 1941, column: 9, scope: !16221)
!16228 = !DILocation(line: 1941, column: 14, scope: !16221)
!16229 = !DILocation(line: 1942, column: 4, scope: !16221)
!16230 = !DILocation(line: 1944, column: 4, scope: !16221)
!16231 = !DILocation(line: 1944, column: 9, scope: !16221)
!16232 = !DILocation(line: 1944, column: 14, scope: !16221)
!16233 = !DILocation(line: 1945, column: 4, scope: !16221)
!16234 = !DILocation(line: 1947, column: 4, scope: !16221)
!16235 = !DILocation(line: 1950, column: 4, scope: !16221)
!16236 = !DILocation(line: 1952, column: 2, scope: !16218)
!16237 = !DILocation(line: 1954, column: 28, scope: !16238)
!16238 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1954, column: 6)
!16239 = !DILocation(line: 1954, column: 7, scope: !16238)
!16240 = !DILocation(line: 1954, column: 6, scope: !16165)
!16241 = !DILocation(line: 1955, column: 11, scope: !16242)
!16242 = distinct !DILexicalBlock(scope: !16238, file: !3, line: 1954, column: 61)
!16243 = !DILocation(line: 1955, column: 3, scope: !16242)
!16244 = !DILocation(line: 1957, column: 4, scope: !16245)
!16245 = distinct !DILexicalBlock(scope: !16242, file: !3, line: 1955, column: 18)
!16246 = !DILocation(line: 1959, column: 4, scope: !16245)
!16247 = !DILocation(line: 1959, column: 9, scope: !16245)
!16248 = !DILocation(line: 1959, column: 14, scope: !16245)
!16249 = !DILocation(line: 1960, column: 4, scope: !16245)
!16250 = !DILocation(line: 1962, column: 4, scope: !16245)
!16251 = !DILocation(line: 1962, column: 9, scope: !16245)
!16252 = !DILocation(line: 1962, column: 14, scope: !16245)
!16253 = !DILocation(line: 1963, column: 4, scope: !16245)
!16254 = !DILocation(line: 1965, column: 4, scope: !16245)
!16255 = !DILocation(line: 1965, column: 9, scope: !16245)
!16256 = !DILocation(line: 1965, column: 14, scope: !16245)
!16257 = !DILocation(line: 1966, column: 4, scope: !16245)
!16258 = !DILocation(line: 1968, column: 4, scope: !16245)
!16259 = !DILocation(line: 1971, column: 4, scope: !16245)
!16260 = !DILocation(line: 1973, column: 2, scope: !16242)
!16261 = !DILocation(line: 1975, column: 30, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1975, column: 6)
!16263 = !DILocation(line: 1975, column: 6, scope: !16262)
!16264 = !DILocation(line: 1975, column: 6, scope: !16165)
!16265 = !DILocation(line: 1976, column: 24, scope: !16266)
!16266 = distinct !DILexicalBlock(scope: !16267, file: !3, line: 1976, column: 7)
!16267 = distinct !DILexicalBlock(scope: !16262, file: !3, line: 1975, column: 37)
!16268 = !DILocation(line: 1976, column: 8, scope: !16266)
!16269 = !DILocation(line: 1976, column: 7, scope: !16267)
!16270 = !DILocation(line: 1977, column: 4, scope: !16271)
!16271 = distinct !DILexicalBlock(scope: !16266, file: !3, line: 1976, column: 38)
!16272 = !DILocation(line: 1979, column: 4, scope: !16271)
!16273 = !DILocation(line: 1981, column: 3, scope: !16267)
!16274 = !DILocation(line: 1985, column: 28, scope: !16165)
!16275 = !DILocation(line: 1985, column: 7, scope: !16165)
!16276 = !DILocation(line: 1985, column: 5, scope: !16165)
!16277 = !DILocation(line: 1986, column: 6, scope: !16278)
!16278 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1986, column: 6)
!16279 = !DILocation(line: 1986, column: 6, scope: !16165)
!16280 = !DILocation(line: 1987, column: 3, scope: !16281)
!16281 = distinct !DILexicalBlock(scope: !16278, file: !3, line: 1986, column: 10)
!16282 = !DILocation(line: 1989, column: 10, scope: !16281)
!16283 = !DILocation(line: 1989, column: 3, scope: !16281)
!16284 = !DILocation(line: 1991, column: 21, scope: !16165)
!16285 = !DILocation(line: 1991, column: 2, scope: !16165)
!16286 = !DILocation(line: 1991, column: 7, scope: !16165)
!16287 = !DILocation(line: 1991, column: 19, scope: !16165)
!16288 = !DILocation(line: 1994, column: 28, scope: !16289)
!16289 = distinct !DILexicalBlock(scope: !16165, file: !3, line: 1994, column: 6)
!16290 = !DILocation(line: 1994, column: 7, scope: !16289)
!16291 = !DILocation(line: 1994, column: 6, scope: !16165)
!16292 = !DILocation(line: 1995, column: 23, scope: !16289)
!16293 = !DILocation(line: 1995, column: 3, scope: !16289)
!16294 = !DILocation(line: 1995, column: 8, scope: !16289)
!16295 = !DILocation(line: 1995, column: 21, scope: !16289)
!16296 = !DILocation(line: 1997, column: 2, scope: !16165)
!16297 = !DILocation(line: 1998, column: 1, scope: !16165)
!16298 = distinct !DISubprogram(name: "of_node_get", scope: !3805, file: !3805, line: 125, type: !16299, scopeLine: 126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16299 = !DISubroutineType(types: !16300)
!16300 = !{!3803, !3803}
!16301 = !DILocalVariable(name: "node", arg: 1, scope: !16298, file: !3805, line: 125, type: !3803)
!16302 = !DILocation(line: 125, column: 67, scope: !16298)
!16303 = !DILocation(line: 127, column: 9, scope: !16298)
!16304 = !DILocation(line: 127, column: 2, scope: !16298)
!16305 = distinct !DISubprogram(name: "of_property_read_bool", scope: !3805, file: !3805, line: 1192, type: !16306, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16306 = !DISubroutineType(types: !16307)
!16307 = !{!261, !12176, !280}
!16308 = !DILocalVariable(name: "np", arg: 1, scope: !16305, file: !3805, line: 1192, type: !12176)
!16309 = !DILocation(line: 1192, column: 68, scope: !16305)
!16310 = !DILocalVariable(name: "propname", arg: 2, scope: !16305, file: !3805, line: 1193, type: !280)
!16311 = !DILocation(line: 1193, column: 19, scope: !16305)
!16312 = !DILocalVariable(name: "prop", scope: !16305, file: !3805, line: 1195, type: !3813)
!16313 = !DILocation(line: 1195, column: 19, scope: !16305)
!16314 = !DILocation(line: 1195, column: 43, scope: !16305)
!16315 = !DILocation(line: 1195, column: 47, scope: !16305)
!16316 = !DILocation(line: 1195, column: 26, scope: !16305)
!16317 = !DILocation(line: 1197, column: 9, scope: !16305)
!16318 = !DILocation(line: 1197, column: 2, scope: !16305)
!16319 = distinct !DISubprogram(name: "of_property_read_u32", scope: !3805, file: !3805, line: 1214, type: !16320, scopeLine: 1217, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16320 = !DISubroutineType(types: !16321)
!16321 = !{!234, !12176, !280, !1556}
!16322 = !DILocalVariable(name: "np", arg: 1, scope: !16319, file: !3805, line: 1214, type: !12176)
!16323 = !DILocation(line: 1214, column: 66, scope: !16319)
!16324 = !DILocalVariable(name: "propname", arg: 2, scope: !16319, file: !3805, line: 1215, type: !280)
!16325 = !DILocation(line: 1215, column: 24, scope: !16319)
!16326 = !DILocalVariable(name: "out_value", arg: 3, scope: !16319, file: !3805, line: 1216, type: !1556)
!16327 = !DILocation(line: 1216, column: 17, scope: !16319)
!16328 = !DILocation(line: 1218, column: 36, scope: !16319)
!16329 = !DILocation(line: 1218, column: 40, scope: !16319)
!16330 = !DILocation(line: 1218, column: 50, scope: !16319)
!16331 = !DILocation(line: 1218, column: 9, scope: !16319)
!16332 = !DILocation(line: 1218, column: 2, scope: !16319)
!16333 = distinct !DISubprogram(name: "of_property_read_u32_array", scope: !3805, file: !3805, line: 494, type: !16334, scopeLine: 497, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16334 = !DISubroutineType(types: !16335)
!16335 = !{!234, !12176, !280, !1556, !385}
!16336 = !DILocalVariable(name: "np", arg: 1, scope: !16333, file: !3805, line: 494, type: !12176)
!16337 = !DILocation(line: 494, column: 72, scope: !16333)
!16338 = !DILocalVariable(name: "propname", arg: 2, scope: !16333, file: !3805, line: 495, type: !280)
!16339 = !DILocation(line: 495, column: 23, scope: !16333)
!16340 = !DILocalVariable(name: "out_values", arg: 3, scope: !16333, file: !3805, line: 496, type: !1556)
!16341 = !DILocation(line: 496, column: 16, scope: !16333)
!16342 = !DILocalVariable(name: "sz", arg: 4, scope: !16333, file: !3805, line: 496, type: !385)
!16343 = !DILocation(line: 496, column: 35, scope: !16333)
!16344 = !DILocalVariable(name: "ret", scope: !16333, file: !3805, line: 498, type: !234)
!16345 = !DILocation(line: 498, column: 6, scope: !16333)
!16346 = !DILocation(line: 498, column: 48, scope: !16333)
!16347 = !DILocation(line: 498, column: 52, scope: !16333)
!16348 = !DILocation(line: 498, column: 62, scope: !16333)
!16349 = !DILocation(line: 499, column: 13, scope: !16333)
!16350 = !DILocation(line: 498, column: 12, scope: !16333)
!16351 = !DILocation(line: 500, column: 6, scope: !16352)
!16352 = distinct !DILexicalBlock(scope: !16333, file: !3805, line: 500, column: 6)
!16353 = !DILocation(line: 500, column: 10, scope: !16352)
!16354 = !DILocation(line: 500, column: 6, scope: !16333)
!16355 = !DILocation(line: 501, column: 3, scope: !16352)
!16356 = !DILocation(line: 503, column: 10, scope: !16352)
!16357 = !DILocation(line: 503, column: 3, scope: !16352)
!16358 = !DILocation(line: 504, column: 1, scope: !16333)
!16359 = distinct !DISubprogram(name: "acpi_device_handle", scope: !6813, file: !6813, line: 38, type: !16360, scopeLine: 39, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16360 = !DISubroutineType(types: !16361)
!16361 = !{!236, !229}
!16362 = !DILocalVariable(name: "adev", arg: 1, scope: !16359, file: !6813, line: 38, type: !229)
!16363 = !DILocation(line: 38, column: 66, scope: !16359)
!16364 = !DILocation(line: 40, column: 9, scope: !16359)
!16365 = !DILocation(line: 40, column: 16, scope: !16359)
!16366 = !DILocation(line: 40, column: 22, scope: !16359)
!16367 = !DILocation(line: 40, column: 2, scope: !16359)
!16368 = distinct !DISubprogram(name: "acpi_spi_add_device", scope: !3, file: !3, line: 2243, type: !16369, scopeLine: 2245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16369 = !DISubroutineType(types: !16370)
!16370 = !{!5197, !236, !479, !228, !928}
!16371 = !DILocalVariable(name: "handle", arg: 1, scope: !16368, file: !3, line: 2243, type: !236)
!16372 = !DILocation(line: 2243, column: 52, scope: !16368)
!16373 = !DILocalVariable(name: "level", arg: 2, scope: !16368, file: !3, line: 2243, type: !479)
!16374 = !DILocation(line: 2243, column: 64, scope: !16368)
!16375 = !DILocalVariable(name: "data", arg: 3, scope: !16368, file: !3, line: 2244, type: !228)
!16376 = !DILocation(line: 2244, column: 18, scope: !16368)
!16377 = !DILocalVariable(name: "return_value", arg: 4, scope: !16368, file: !3, line: 2244, type: !928)
!16378 = !DILocation(line: 2244, column: 31, scope: !16368)
!16379 = !DILocalVariable(name: "ctlr", scope: !16368, file: !3, line: 2246, type: !4512)
!16380 = !DILocation(line: 2246, column: 25, scope: !16368)
!16381 = !DILocation(line: 2246, column: 32, scope: !16368)
!16382 = !DILocalVariable(name: "adev", scope: !16368, file: !3, line: 2247, type: !229)
!16383 = !DILocation(line: 2247, column: 22, scope: !16368)
!16384 = !DILocation(line: 2249, column: 26, scope: !16385)
!16385 = distinct !DILexicalBlock(scope: !16368, file: !3, line: 2249, column: 6)
!16386 = !DILocation(line: 2249, column: 6, scope: !16385)
!16387 = !DILocation(line: 2249, column: 6, scope: !16368)
!16388 = !DILocation(line: 2250, column: 3, scope: !16385)
!16389 = !DILocation(line: 2252, column: 34, scope: !16368)
!16390 = !DILocation(line: 2252, column: 40, scope: !16368)
!16391 = !DILocation(line: 2252, column: 9, scope: !16368)
!16392 = !DILocation(line: 2252, column: 2, scope: !16368)
!16393 = !DILocation(line: 2253, column: 1, scope: !16368)
!16394 = distinct !DISubprogram(name: "acpi_register_spi_device", scope: !3, file: !3, line: 2174, type: !16395, scopeLine: 2176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16395 = !DISubroutineType(types: !16396)
!16396 = !{!5197, !4512, !229}
!16397 = !DILocalVariable(name: "ctlr", arg: 1, scope: !16394, file: !3, line: 2174, type: !4512)
!16398 = !DILocation(line: 2174, column: 68, scope: !16394)
!16399 = !DILocalVariable(name: "adev", arg: 2, scope: !16394, file: !3, line: 2175, type: !229)
!16400 = !DILocation(line: 2175, column: 30, scope: !16394)
!16401 = !DILocalVariable(name: "parent_handle", scope: !16394, file: !3, line: 2177, type: !236)
!16402 = !DILocation(line: 2177, column: 14, scope: !16394)
!16403 = !DILocalVariable(name: "resource_list", scope: !16394, file: !3, line: 2178, type: !284)
!16404 = !DILocation(line: 2178, column: 19, scope: !16394)
!16405 = !DILocalVariable(name: "lookup", scope: !16394, file: !3, line: 2179, type: !16406)
!16406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_spi_lookup", file: !3, line: 2077, size: 192, elements: !16407)
!16407 = !{!16408, !16409, !16410, !16411, !16412, !16413}
!16408 = !DIDerivedType(tag: DW_TAG_member, name: "ctlr", scope: !16406, file: !3, line: 2078, baseType: !4512, size: 64)
!16409 = !DIDerivedType(tag: DW_TAG_member, name: "max_speed_hz", scope: !16406, file: !3, line: 2079, baseType: !479, size: 32, offset: 64)
!16410 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !16406, file: !3, line: 2080, baseType: !479, size: 32, offset: 96)
!16411 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !16406, file: !3, line: 2081, baseType: !234, size: 32, offset: 128)
!16412 = !DIDerivedType(tag: DW_TAG_member, name: "bits_per_word", scope: !16406, file: !3, line: 2082, baseType: !1493, size: 8, offset: 160)
!16413 = !DIDerivedType(tag: DW_TAG_member, name: "chip_select", scope: !16406, file: !3, line: 2083, baseType: !1493, size: 8, offset: 168)
!16414 = !DILocation(line: 2179, column: 25, scope: !16394)
!16415 = !DILocalVariable(name: "spi", scope: !16394, file: !3, line: 2180, type: !4532)
!16416 = !DILocation(line: 2180, column: 21, scope: !16394)
!16417 = !DILocalVariable(name: "ret", scope: !16394, file: !3, line: 2181, type: !234)
!16418 = !DILocation(line: 2181, column: 6, scope: !16394)
!16419 = !DILocation(line: 2183, column: 26, scope: !16420)
!16420 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2183, column: 6)
!16421 = !DILocation(line: 2183, column: 6, scope: !16420)
!16422 = !DILocation(line: 2183, column: 32, scope: !16420)
!16423 = !DILocation(line: 2183, column: 36, scope: !16420)
!16424 = !DILocation(line: 2183, column: 42, scope: !16420)
!16425 = !DILocation(line: 2183, column: 49, scope: !16420)
!16426 = !DILocation(line: 2183, column: 57, scope: !16420)
!16427 = !DILocation(line: 2184, column: 29, scope: !16420)
!16428 = !DILocation(line: 2184, column: 6, scope: !16420)
!16429 = !DILocation(line: 2183, column: 6, scope: !16394)
!16430 = !DILocation(line: 2185, column: 3, scope: !16420)
!16431 = !DILocation(line: 2187, column: 17, scope: !16394)
!16432 = !DILocation(line: 2187, column: 9, scope: !16394)
!16433 = !DILocation(line: 2187, column: 15, scope: !16394)
!16434 = !DILocation(line: 2188, column: 9, scope: !16394)
!16435 = !DILocation(line: 2188, column: 14, scope: !16394)
!16436 = !DILocation(line: 2190, column: 2, scope: !16394)
!16437 = !DILocation(line: 2191, column: 31, scope: !16394)
!16438 = !DILocation(line: 2192, column: 33, scope: !16394)
!16439 = !DILocation(line: 2191, column: 8, scope: !16394)
!16440 = !DILocation(line: 2191, column: 6, scope: !16394)
!16441 = !DILocation(line: 2193, column: 2, scope: !16394)
!16442 = !DILocation(line: 2195, column: 6, scope: !16443)
!16443 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2195, column: 6)
!16444 = !DILocation(line: 2195, column: 10, scope: !16443)
!16445 = !DILocation(line: 2195, column: 6, scope: !16394)
!16446 = !DILocation(line: 2197, column: 3, scope: !16443)
!16447 = !DILocation(line: 2199, column: 14, scope: !16448)
!16448 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2199, column: 6)
!16449 = !DILocation(line: 2199, column: 7, scope: !16448)
!16450 = !DILocation(line: 2199, column: 27, scope: !16448)
!16451 = !DILocation(line: 2200, column: 7, scope: !16448)
!16452 = !DILocation(line: 2200, column: 67, scope: !16448)
!16453 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !16454, file: !3, line: 2201, type: !243)
!16454 = distinct !DILexicalBlock(scope: !16448, file: !3, line: 2201, column: 6)
!16455 = !DILocation(line: 2201, column: 6, scope: !16454)
!16456 = !DILocalVariable(name: "__mptr", scope: !16457, file: !3, line: 2201, type: !228)
!16457 = distinct !DILexicalBlock(scope: !16454, file: !3, line: 2201, column: 6)
!16458 = !DILocation(line: 2201, column: 6, scope: !16457)
!16459 = !DILocation(line: 2201, column: 6, scope: !16460)
!16460 = distinct !DILexicalBlock(scope: !16457, file: !3, line: 2201, column: 6)
!16461 = !DILocation(line: 2201, column: 6, scope: !16448)
!16462 = !DILocation(line: 2201, column: 39, scope: !16448)
!16463 = !DILocation(line: 2201, column: 36, scope: !16448)
!16464 = !DILocation(line: 2199, column: 6, scope: !16394)
!16465 = !DILocation(line: 2203, column: 35, scope: !16466)
!16466 = distinct !DILexicalBlock(scope: !16448, file: !3, line: 2201, column: 54)
!16467 = !DILocation(line: 2203, column: 3, scope: !16466)
!16468 = !DILocation(line: 2204, column: 2, scope: !16466)
!16469 = !DILocation(line: 2206, column: 14, scope: !16470)
!16470 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2206, column: 6)
!16471 = !DILocation(line: 2206, column: 7, scope: !16470)
!16472 = !DILocation(line: 2206, column: 6, scope: !16394)
!16473 = !DILocation(line: 2207, column: 3, scope: !16470)
!16474 = !DILocation(line: 2209, column: 25, scope: !16394)
!16475 = !DILocation(line: 2209, column: 8, scope: !16394)
!16476 = !DILocation(line: 2209, column: 6, scope: !16394)
!16477 = !DILocation(line: 2210, column: 7, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2210, column: 6)
!16479 = !DILocation(line: 2210, column: 6, scope: !16394)
!16480 = !DILocation(line: 2211, column: 3, scope: !16481)
!16481 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 2210, column: 12)
!16482 = !DILocation(line: 2213, column: 3, scope: !16481)
!16483 = !DILocation(line: 2217, column: 2, scope: !16394)
!16484 = !DILocation(line: 2218, column: 29, scope: !16394)
!16485 = !DILocation(line: 2218, column: 2, scope: !16394)
!16486 = !DILocation(line: 2218, column: 7, scope: !16394)
!16487 = !DILocation(line: 2218, column: 20, scope: !16394)
!16488 = !DILocation(line: 2219, column: 23, scope: !16394)
!16489 = !DILocation(line: 2219, column: 2, scope: !16394)
!16490 = !DILocation(line: 2219, column: 7, scope: !16394)
!16491 = !DILocation(line: 2219, column: 13, scope: !16394)
!16492 = !DILocation(line: 2220, column: 21, scope: !16394)
!16493 = !DILocation(line: 2220, column: 2, scope: !16394)
!16494 = !DILocation(line: 2220, column: 7, scope: !16394)
!16495 = !DILocation(line: 2220, column: 12, scope: !16394)
!16496 = !DILocation(line: 2221, column: 30, scope: !16394)
!16497 = !DILocation(line: 2221, column: 2, scope: !16394)
!16498 = !DILocation(line: 2221, column: 7, scope: !16394)
!16499 = !DILocation(line: 2221, column: 21, scope: !16394)
!16500 = !DILocation(line: 2222, column: 28, scope: !16394)
!16501 = !DILocation(line: 2222, column: 2, scope: !16394)
!16502 = !DILocation(line: 2222, column: 7, scope: !16394)
!16503 = !DILocation(line: 2222, column: 19, scope: !16394)
!16504 = !DILocation(line: 2224, column: 20, scope: !16394)
!16505 = !DILocation(line: 2224, column: 42, scope: !16394)
!16506 = !DILocation(line: 2224, column: 26, scope: !16394)
!16507 = !DILocation(line: 2224, column: 49, scope: !16394)
!16508 = !DILocation(line: 2224, column: 54, scope: !16394)
!16509 = !DILocation(line: 2224, column: 2, scope: !16394)
!16510 = !DILocation(line: 2227, column: 6, scope: !16511)
!16511 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2227, column: 6)
!16512 = !DILocation(line: 2227, column: 11, scope: !16511)
!16513 = !DILocation(line: 2227, column: 15, scope: !16511)
!16514 = !DILocation(line: 2227, column: 6, scope: !16394)
!16515 = !DILocation(line: 2228, column: 36, scope: !16511)
!16516 = !DILocation(line: 2228, column: 14, scope: !16511)
!16517 = !DILocation(line: 2228, column: 3, scope: !16511)
!16518 = !DILocation(line: 2228, column: 8, scope: !16511)
!16519 = !DILocation(line: 2228, column: 12, scope: !16511)
!16520 = !DILocation(line: 2230, column: 29, scope: !16394)
!16521 = !DILocation(line: 2230, column: 2, scope: !16394)
!16522 = !DILocation(line: 2232, column: 2, scope: !16394)
!16523 = !DILocation(line: 2232, column: 8, scope: !16394)
!16524 = !DILocation(line: 2232, column: 14, scope: !16394)
!16525 = !DILocation(line: 2232, column: 20, scope: !16394)
!16526 = !DILocation(line: 2232, column: 34, scope: !16394)
!16527 = !DILocation(line: 2233, column: 21, scope: !16528)
!16528 = distinct !DILexicalBlock(scope: !16394, file: !3, line: 2233, column: 6)
!16529 = !DILocation(line: 2233, column: 6, scope: !16528)
!16530 = !DILocation(line: 2233, column: 6, scope: !16394)
!16531 = !DILocation(line: 2234, column: 3, scope: !16532)
!16532 = distinct !DILexicalBlock(scope: !16528, file: !3, line: 2233, column: 27)
!16533 = !DILocation(line: 2234, column: 9, scope: !16532)
!16534 = !DILocation(line: 2234, column: 15, scope: !16532)
!16535 = !DILocation(line: 2234, column: 21, scope: !16532)
!16536 = !DILocation(line: 2234, column: 35, scope: !16532)
!16537 = !DILocation(line: 2235, column: 3, scope: !16532)
!16538 = !DILocation(line: 2237, column: 15, scope: !16532)
!16539 = !DILocation(line: 2237, column: 3, scope: !16532)
!16540 = !DILocation(line: 2238, column: 2, scope: !16532)
!16541 = !DILocation(line: 2240, column: 2, scope: !16394)
!16542 = !DILocation(line: 2241, column: 1, scope: !16394)
!16543 = distinct !DISubprogram(name: "acpi_device_enumerated", scope: !231, file: !231, line: 541, type: !16544, scopeLine: 542, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16544 = !DISubroutineType(types: !16545)
!16545 = !{!261, !229}
!16546 = !DILocalVariable(name: "adev", arg: 1, scope: !16543, file: !231, line: 541, type: !229)
!16547 = !DILocation(line: 541, column: 63, scope: !16543)
!16548 = !DILocation(line: 543, column: 9, scope: !16543)
!16549 = !DILocation(line: 543, column: 14, scope: !16543)
!16550 = !DILocation(line: 543, column: 17, scope: !16543)
!16551 = !DILocation(line: 543, column: 23, scope: !16543)
!16552 = !DILocation(line: 543, column: 29, scope: !16543)
!16553 = !DILocation(line: 543, column: 41, scope: !16543)
!16554 = !DILocation(line: 543, column: 44, scope: !16543)
!16555 = !DILocation(line: 543, column: 50, scope: !16543)
!16556 = !DILocation(line: 543, column: 56, scope: !16543)
!16557 = !DILocation(line: 0, scope: !16543)
!16558 = !DILocation(line: 543, column: 2, scope: !16543)
!16559 = distinct !DISubprogram(name: "acpi_spi_add_resource", scope: !3, file: !3, line: 2115, type: !16560, scopeLine: 2116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!16560 = !DISubroutineType(types: !16561)
!16561 = !{!234, !16562, !228}
!16562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16563, size: 64)
!16563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource", file: !16564, line: 651, size: 544, elements: !16565)
!16564 = !DIFile(filename: "./include/acpi/acrestyp.h", directory: "/home/lizy2001/genbc/linux")
!16565 = !{!16566, !16567, !16568}
!16566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16563, file: !16564, line: 652, baseType: !479, size: 32)
!16567 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !16563, file: !16564, line: 653, baseType: !479, size: 32, offset: 32)
!16568 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !16563, file: !16564, line: 654, baseType: !16569, size: 480, offset: 64)
!16569 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_data", file: !16564, line: 614, size: 480, elements: !16570)
!16570 = !{!16571, !16582, !16590, !16596, !16604, !16609, !16615, !16620, !16628, !16632, !16640, !16648, !16654, !16694, !16712, !16730, !16742, !16754, !16762, !16782, !16798, !16818, !16840, !16853, !16865, !16878, !16892, !16903, !16915}
!16571 = !DIDerivedType(tag: DW_TAG_member, name: "irq", scope: !16569, file: !16564, line: 615, baseType: !16572, size: 56)
!16572 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_irq", file: !16564, line: 138, size: 56, elements: !16573)
!16573 = !{!16574, !16575, !16576, !16577, !16578, !16579, !16580}
!16574 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !16572, file: !16564, line: 139, baseType: !1493, size: 8)
!16575 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !16572, file: !16564, line: 140, baseType: !1493, size: 8, offset: 8)
!16576 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !16572, file: !16564, line: 141, baseType: !1493, size: 8, offset: 16)
!16577 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !16572, file: !16564, line: 142, baseType: !1493, size: 8, offset: 24)
!16578 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !16572, file: !16564, line: 143, baseType: !1493, size: 8, offset: 32)
!16579 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !16572, file: !16564, line: 144, baseType: !1493, size: 8, offset: 40)
!16580 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !16572, file: !16564, line: 145, baseType: !16581, size: 8, offset: 48)
!16581 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 8, elements: !1512)
!16582 = !DIDerivedType(tag: DW_TAG_member, name: "dma", scope: !16569, file: !16564, line: 616, baseType: !16583, size: 40)
!16583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_dma", file: !16564, line: 148, size: 40, elements: !16584)
!16584 = !{!16585, !16586, !16587, !16588, !16589}
!16585 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16583, file: !16564, line: 149, baseType: !1493, size: 8)
!16586 = !DIDerivedType(tag: DW_TAG_member, name: "bus_master", scope: !16583, file: !16564, line: 150, baseType: !1493, size: 8, offset: 8)
!16587 = !DIDerivedType(tag: DW_TAG_member, name: "transfer", scope: !16583, file: !16564, line: 151, baseType: !1493, size: 8, offset: 16)
!16588 = !DIDerivedType(tag: DW_TAG_member, name: "channel_count", scope: !16583, file: !16564, line: 152, baseType: !1493, size: 8, offset: 24)
!16589 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !16583, file: !16564, line: 153, baseType: !16581, size: 8, offset: 32)
!16590 = !DIDerivedType(tag: DW_TAG_member, name: "start_dpf", scope: !16569, file: !16564, line: 617, baseType: !16591, size: 24)
!16591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_start_dependent", file: !16564, line: 156, size: 24, elements: !16592)
!16592 = !{!16593, !16594, !16595}
!16593 = !DIDerivedType(tag: DW_TAG_member, name: "descriptor_length", scope: !16591, file: !16564, line: 157, baseType: !1493, size: 8)
!16594 = !DIDerivedType(tag: DW_TAG_member, name: "compatibility_priority", scope: !16591, file: !16564, line: 158, baseType: !1493, size: 8, offset: 8)
!16595 = !DIDerivedType(tag: DW_TAG_member, name: "performance_robustness", scope: !16591, file: !16564, line: 159, baseType: !1493, size: 8, offset: 16)
!16596 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !16569, file: !16564, line: 618, baseType: !16597, size: 56)
!16597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_io", file: !16564, line: 167, size: 56, elements: !16598)
!16598 = !{!16599, !16600, !16601, !16602, !16603}
!16599 = !DIDerivedType(tag: DW_TAG_member, name: "io_decode", scope: !16597, file: !16564, line: 168, baseType: !1493, size: 8)
!16600 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !16597, file: !16564, line: 169, baseType: !1493, size: 8, offset: 8)
!16601 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16597, file: !16564, line: 170, baseType: !1493, size: 8, offset: 16)
!16602 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !16597, file: !16564, line: 171, baseType: !966, size: 16, offset: 24)
!16603 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !16597, file: !16564, line: 172, baseType: !966, size: 16, offset: 40)
!16604 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_io", scope: !16569, file: !16564, line: 619, baseType: !16605, size: 24)
!16605 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_io", file: !16564, line: 175, size: 24, elements: !16606)
!16606 = !{!16607, !16608}
!16607 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16605, file: !16564, line: 176, baseType: !966, size: 16)
!16608 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16605, file: !16564, line: 177, baseType: !1493, size: 8, offset: 16)
!16609 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_dma", scope: !16569, file: !16564, line: 620, baseType: !16610, size: 40)
!16610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_dma", file: !16564, line: 180, size: 40, elements: !16611)
!16611 = !{!16612, !16613, !16614}
!16612 = !DIDerivedType(tag: DW_TAG_member, name: "request_lines", scope: !16610, file: !16564, line: 181, baseType: !966, size: 16)
!16613 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !16610, file: !16564, line: 182, baseType: !966, size: 16, offset: 16)
!16614 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !16610, file: !16564, line: 183, baseType: !1493, size: 8, offset: 32)
!16615 = !DIDerivedType(tag: DW_TAG_member, name: "vendor", scope: !16569, file: !16564, line: 621, baseType: !16616, size: 24)
!16616 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor", file: !16564, line: 195, size: 24, elements: !16617)
!16617 = !{!16618, !16619}
!16618 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !16616, file: !16564, line: 196, baseType: !966, size: 16)
!16619 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !16616, file: !16564, line: 197, baseType: !16581, size: 8, offset: 16)
!16620 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_typed", scope: !16569, file: !16564, line: 622, baseType: !16621, size: 160)
!16621 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_vendor_typed", file: !16564, line: 202, size: 160, elements: !16622)
!16622 = !{!16623, !16624, !16625, !16627}
!16623 = !DIDerivedType(tag: DW_TAG_member, name: "byte_length", scope: !16621, file: !16564, line: 203, baseType: !966, size: 16)
!16624 = !DIDerivedType(tag: DW_TAG_member, name: "uuid_subtype", scope: !16621, file: !16564, line: 204, baseType: !1493, size: 8, offset: 16)
!16625 = !DIDerivedType(tag: DW_TAG_member, name: "uuid", scope: !16621, file: !16564, line: 205, baseType: !16626, size: 128, offset: 24)
!16626 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1493, size: 128, elements: !1876)
!16627 = !DIDerivedType(tag: DW_TAG_member, name: "byte_data", scope: !16621, file: !16564, line: 206, baseType: !16581, size: 8, offset: 152)
!16628 = !DIDerivedType(tag: DW_TAG_member, name: "end_tag", scope: !16569, file: !16564, line: 623, baseType: !16629, size: 8)
!16629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_end_tag", file: !16564, line: 209, size: 8, elements: !16630)
!16630 = !{!16631}
!16631 = !DIDerivedType(tag: DW_TAG_member, name: "checksum", scope: !16629, file: !16564, line: 210, baseType: !1493, size: 8)
!16632 = !DIDerivedType(tag: DW_TAG_member, name: "memory24", scope: !16569, file: !16564, line: 624, baseType: !16633, size: 72)
!16633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory24", file: !16564, line: 213, size: 72, elements: !16634)
!16634 = !{!16635, !16636, !16637, !16638, !16639}
!16635 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !16633, file: !16564, line: 214, baseType: !1493, size: 8)
!16636 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !16633, file: !16564, line: 215, baseType: !966, size: 16, offset: 8)
!16637 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !16633, file: !16564, line: 216, baseType: !966, size: 16, offset: 24)
!16638 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !16633, file: !16564, line: 217, baseType: !966, size: 16, offset: 40)
!16639 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16633, file: !16564, line: 218, baseType: !966, size: 16, offset: 56)
!16640 = !DIDerivedType(tag: DW_TAG_member, name: "memory32", scope: !16569, file: !16564, line: 625, baseType: !16641, size: 136)
!16641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_memory32", file: !16564, line: 221, size: 136, elements: !16642)
!16642 = !{!16643, !16644, !16645, !16646, !16647}
!16643 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !16641, file: !16564, line: 222, baseType: !1493, size: 8)
!16644 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !16641, file: !16564, line: 223, baseType: !479, size: 32, offset: 8)
!16645 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !16641, file: !16564, line: 224, baseType: !479, size: 32, offset: 40)
!16646 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !16641, file: !16564, line: 225, baseType: !479, size: 32, offset: 72)
!16647 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16641, file: !16564, line: 226, baseType: !479, size: 32, offset: 104)
!16648 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_memory32", scope: !16569, file: !16564, line: 626, baseType: !16649, size: 72)
!16649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_fixed_memory32", file: !16564, line: 229, size: 72, elements: !16650)
!16650 = !{!16651, !16652, !16653}
!16651 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !16649, file: !16564, line: 230, baseType: !1493, size: 8)
!16652 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16649, file: !16564, line: 231, baseType: !479, size: 32, offset: 8)
!16653 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16649, file: !16564, line: 232, baseType: !479, size: 32, offset: 40)
!16654 = !DIDerivedType(tag: DW_TAG_member, name: "address16", scope: !16569, file: !16564, line: 627, baseType: !16655, size: 240)
!16655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address16", file: !16564, line: 306, size: 240, elements: !16656)
!16656 = !{!16657, !16658, !16659, !16660, !16661, !16662, !16680, !16688}
!16657 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !16655, file: !16564, line: 307, baseType: !1493, size: 8)
!16658 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16655, file: !16564, line: 307, baseType: !1493, size: 8, offset: 8)
!16659 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !16655, file: !16564, line: 307, baseType: !1493, size: 8, offset: 16)
!16660 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !16655, file: !16564, line: 307, baseType: !1493, size: 8, offset: 24)
!16661 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !16655, file: !16564, line: 307, baseType: !1493, size: 8, offset: 32)
!16662 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !16655, file: !16564, line: 307, baseType: !16663, size: 32, offset: 40)
!16663 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "acpi_resource_attribute", file: !16564, line: 249, size: 32, elements: !16664)
!16664 = !{!16665, !16672, !16679}
!16665 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !16663, file: !16564, line: 250, baseType: !16666, size: 32)
!16666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_memory_attribute", file: !16564, line: 235, size: 32, elements: !16667)
!16667 = !{!16668, !16669, !16670, !16671}
!16668 = !DIDerivedType(tag: DW_TAG_member, name: "write_protect", scope: !16666, file: !16564, line: 236, baseType: !1493, size: 8)
!16669 = !DIDerivedType(tag: DW_TAG_member, name: "caching", scope: !16666, file: !16564, line: 237, baseType: !1493, size: 8, offset: 8)
!16670 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !16666, file: !16564, line: 238, baseType: !1493, size: 8, offset: 16)
!16671 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !16666, file: !16564, line: 239, baseType: !1493, size: 8, offset: 24)
!16672 = !DIDerivedType(tag: DW_TAG_member, name: "io", scope: !16663, file: !16564, line: 251, baseType: !16673, size: 32)
!16673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_io_attribute", file: !16564, line: 242, size: 32, elements: !16674)
!16674 = !{!16675, !16676, !16677, !16678}
!16675 = !DIDerivedType(tag: DW_TAG_member, name: "range_type", scope: !16673, file: !16564, line: 243, baseType: !1493, size: 8)
!16676 = !DIDerivedType(tag: DW_TAG_member, name: "translation", scope: !16673, file: !16564, line: 244, baseType: !1493, size: 8, offset: 8)
!16677 = !DIDerivedType(tag: DW_TAG_member, name: "translation_type", scope: !16673, file: !16564, line: 245, baseType: !1493, size: 8, offset: 16)
!16678 = !DIDerivedType(tag: DW_TAG_member, name: "reserved1", scope: !16673, file: !16564, line: 246, baseType: !1493, size: 8, offset: 24)
!16679 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !16663, file: !16564, line: 255, baseType: !1493, size: 8)
!16680 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16655, file: !16564, line: 307, baseType: !16681, size: 80, offset: 72)
!16681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address16_attribute", file: !16564, line: 279, size: 80, elements: !16682)
!16682 = !{!16683, !16684, !16685, !16686, !16687}
!16683 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !16681, file: !16564, line: 280, baseType: !966, size: 16)
!16684 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !16681, file: !16564, line: 281, baseType: !966, size: 16, offset: 16)
!16685 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !16681, file: !16564, line: 282, baseType: !966, size: 16, offset: 32)
!16686 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !16681, file: !16564, line: 283, baseType: !966, size: 16, offset: 48)
!16687 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16681, file: !16564, line: 284, baseType: !966, size: 16, offset: 64)
!16688 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16655, file: !16564, line: 308, baseType: !16689, size: 88, offset: 152)
!16689 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_source", file: !16564, line: 263, size: 88, elements: !16690)
!16690 = !{!16691, !16692, !16693}
!16691 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !16689, file: !16564, line: 264, baseType: !1493, size: 8)
!16692 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !16689, file: !16564, line: 265, baseType: !966, size: 16, offset: 8)
!16693 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !16689, file: !16564, line: 266, baseType: !338, size: 64, offset: 24)
!16694 = !DIDerivedType(tag: DW_TAG_member, name: "address32", scope: !16569, file: !16564, line: 628, baseType: !16695, size: 320)
!16695 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address32", file: !16564, line: 311, size: 320, elements: !16696)
!16696 = !{!16697, !16698, !16699, !16700, !16701, !16702, !16703, !16711}
!16697 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !16695, file: !16564, line: 312, baseType: !1493, size: 8)
!16698 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16695, file: !16564, line: 312, baseType: !1493, size: 8, offset: 8)
!16699 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !16695, file: !16564, line: 312, baseType: !1493, size: 8, offset: 16)
!16700 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !16695, file: !16564, line: 312, baseType: !1493, size: 8, offset: 24)
!16701 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !16695, file: !16564, line: 312, baseType: !1493, size: 8, offset: 32)
!16702 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !16695, file: !16564, line: 312, baseType: !16663, size: 32, offset: 40)
!16703 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16695, file: !16564, line: 312, baseType: !16704, size: 160, offset: 72)
!16704 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address32_attribute", file: !16564, line: 287, size: 160, elements: !16705)
!16705 = !{!16706, !16707, !16708, !16709, !16710}
!16706 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !16704, file: !16564, line: 288, baseType: !479, size: 32)
!16707 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !16704, file: !16564, line: 289, baseType: !479, size: 32, offset: 32)
!16708 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !16704, file: !16564, line: 290, baseType: !479, size: 32, offset: 64)
!16709 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !16704, file: !16564, line: 291, baseType: !479, size: 32, offset: 96)
!16710 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16704, file: !16564, line: 292, baseType: !479, size: 32, offset: 128)
!16711 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16695, file: !16564, line: 313, baseType: !16689, size: 88, offset: 232)
!16712 = !DIDerivedType(tag: DW_TAG_member, name: "address64", scope: !16569, file: !16564, line: 629, baseType: !16713, size: 480)
!16713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address64", file: !16564, line: 316, size: 480, elements: !16714)
!16714 = !{!16715, !16716, !16717, !16718, !16719, !16720, !16721, !16729}
!16715 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !16713, file: !16564, line: 317, baseType: !1493, size: 8)
!16716 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16713, file: !16564, line: 317, baseType: !1493, size: 8, offset: 8)
!16717 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !16713, file: !16564, line: 317, baseType: !1493, size: 8, offset: 16)
!16718 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !16713, file: !16564, line: 317, baseType: !1493, size: 8, offset: 24)
!16719 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !16713, file: !16564, line: 317, baseType: !1493, size: 8, offset: 32)
!16720 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !16713, file: !16564, line: 317, baseType: !16663, size: 32, offset: 40)
!16721 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16713, file: !16564, line: 317, baseType: !16722, size: 320, offset: 72)
!16722 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_address64_attribute", file: !16564, line: 295, size: 320, elements: !16723)
!16723 = !{!16724, !16725, !16726, !16727, !16728}
!16724 = !DIDerivedType(tag: DW_TAG_member, name: "granularity", scope: !16722, file: !16564, line: 296, baseType: !485, size: 64)
!16725 = !DIDerivedType(tag: DW_TAG_member, name: "minimum", scope: !16722, file: !16564, line: 297, baseType: !485, size: 64, offset: 64)
!16726 = !DIDerivedType(tag: DW_TAG_member, name: "maximum", scope: !16722, file: !16564, line: 298, baseType: !485, size: 64, offset: 128)
!16727 = !DIDerivedType(tag: DW_TAG_member, name: "translation_offset", scope: !16722, file: !16564, line: 299, baseType: !485, size: 64, offset: 192)
!16728 = !DIDerivedType(tag: DW_TAG_member, name: "address_length", scope: !16722, file: !16564, line: 300, baseType: !485, size: 64, offset: 256)
!16729 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16713, file: !16564, line: 318, baseType: !16689, size: 88, offset: 392)
!16730 = !DIDerivedType(tag: DW_TAG_member, name: "ext_address64", scope: !16569, file: !16564, line: 630, baseType: !16731, size: 464)
!16731 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_address64", file: !16564, line: 321, size: 464, elements: !16732)
!16732 = !{!16733, !16734, !16735, !16736, !16737, !16738, !16739, !16740, !16741}
!16733 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !16731, file: !16564, line: 322, baseType: !1493, size: 8)
!16734 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16731, file: !16564, line: 322, baseType: !1493, size: 8, offset: 8)
!16735 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !16731, file: !16564, line: 322, baseType: !1493, size: 8, offset: 16)
!16736 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !16731, file: !16564, line: 322, baseType: !1493, size: 8, offset: 24)
!16737 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !16731, file: !16564, line: 322, baseType: !1493, size: 8, offset: 32)
!16738 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !16731, file: !16564, line: 322, baseType: !16663, size: 32, offset: 40)
!16739 = !DIDerivedType(tag: DW_TAG_member, name: "revision_ID", scope: !16731, file: !16564, line: 322, baseType: !1493, size: 8, offset: 72)
!16740 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16731, file: !16564, line: 323, baseType: !16722, size: 320, offset: 80)
!16741 = !DIDerivedType(tag: DW_TAG_member, name: "type_specific", scope: !16731, file: !16564, line: 324, baseType: !485, size: 64, offset: 400)
!16742 = !DIDerivedType(tag: DW_TAG_member, name: "extended_irq", scope: !16569, file: !16564, line: 631, baseType: !16743, size: 168)
!16743 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_extended_irq", file: !16564, line: 327, size: 168, elements: !16744)
!16744 = !{!16745, !16746, !16747, !16748, !16749, !16750, !16751, !16752}
!16745 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16743, file: !16564, line: 328, baseType: !1493, size: 8)
!16746 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !16743, file: !16564, line: 329, baseType: !1493, size: 8, offset: 8)
!16747 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !16743, file: !16564, line: 330, baseType: !1493, size: 8, offset: 16)
!16748 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !16743, file: !16564, line: 331, baseType: !1493, size: 8, offset: 24)
!16749 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !16743, file: !16564, line: 332, baseType: !1493, size: 8, offset: 32)
!16750 = !DIDerivedType(tag: DW_TAG_member, name: "interrupt_count", scope: !16743, file: !16564, line: 333, baseType: !1493, size: 8, offset: 40)
!16751 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16743, file: !16564, line: 334, baseType: !16689, size: 88, offset: 48)
!16752 = !DIDerivedType(tag: DW_TAG_member, name: "interrupts", scope: !16743, file: !16564, line: 335, baseType: !16753, size: 32, offset: 136)
!16753 = !DICompositeType(tag: DW_TAG_array_type, baseType: !479, size: 32, elements: !1512)
!16754 = !DIDerivedType(tag: DW_TAG_member, name: "generic_reg", scope: !16569, file: !16564, line: 632, baseType: !16755, size: 96)
!16755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_generic_register", file: !16564, line: 338, size: 96, elements: !16756)
!16756 = !{!16757, !16758, !16759, !16760, !16761}
!16757 = !DIDerivedType(tag: DW_TAG_member, name: "space_id", scope: !16755, file: !16564, line: 339, baseType: !1493, size: 8)
!16758 = !DIDerivedType(tag: DW_TAG_member, name: "bit_width", scope: !16755, file: !16564, line: 340, baseType: !1493, size: 8, offset: 8)
!16759 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !16755, file: !16564, line: 341, baseType: !1493, size: 8, offset: 16)
!16760 = !DIDerivedType(tag: DW_TAG_member, name: "access_size", scope: !16755, file: !16564, line: 342, baseType: !1493, size: 8, offset: 24)
!16761 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16755, file: !16564, line: 343, baseType: !485, size: 64, offset: 32)
!16762 = !DIDerivedType(tag: DW_TAG_member, name: "gpio", scope: !16569, file: !16564, line: 633, baseType: !16763, size: 352)
!16763 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_gpio", file: !16564, line: 346, size: 352, elements: !16764)
!16764 = !{!16765, !16766, !16767, !16768, !16769, !16770, !16771, !16772, !16773, !16774, !16775, !16776, !16777, !16778, !16779, !16781}
!16765 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16763, file: !16564, line: 347, baseType: !1493, size: 8)
!16766 = !DIDerivedType(tag: DW_TAG_member, name: "connection_type", scope: !16763, file: !16564, line: 348, baseType: !1493, size: 8, offset: 8)
!16767 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16763, file: !16564, line: 349, baseType: !1493, size: 8, offset: 16)
!16768 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !16763, file: !16564, line: 350, baseType: !1493, size: 8, offset: 24)
!16769 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !16763, file: !16564, line: 351, baseType: !1493, size: 8, offset: 32)
!16770 = !DIDerivedType(tag: DW_TAG_member, name: "wake_capable", scope: !16763, file: !16564, line: 352, baseType: !1493, size: 8, offset: 40)
!16771 = !DIDerivedType(tag: DW_TAG_member, name: "io_restriction", scope: !16763, file: !16564, line: 353, baseType: !1493, size: 8, offset: 48)
!16772 = !DIDerivedType(tag: DW_TAG_member, name: "triggering", scope: !16763, file: !16564, line: 354, baseType: !1493, size: 8, offset: 56)
!16773 = !DIDerivedType(tag: DW_TAG_member, name: "polarity", scope: !16763, file: !16564, line: 355, baseType: !1493, size: 8, offset: 64)
!16774 = !DIDerivedType(tag: DW_TAG_member, name: "drive_strength", scope: !16763, file: !16564, line: 356, baseType: !966, size: 16, offset: 72)
!16775 = !DIDerivedType(tag: DW_TAG_member, name: "debounce_timeout", scope: !16763, file: !16564, line: 357, baseType: !966, size: 16, offset: 88)
!16776 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !16763, file: !16564, line: 358, baseType: !966, size: 16, offset: 104)
!16777 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16763, file: !16564, line: 359, baseType: !966, size: 16, offset: 120)
!16778 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16763, file: !16564, line: 360, baseType: !16689, size: 88, offset: 136)
!16779 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !16763, file: !16564, line: 361, baseType: !16780, size: 64, offset: 224)
!16780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!16781 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16763, file: !16564, line: 362, baseType: !4307, size: 64, offset: 288)
!16782 = !DIDerivedType(tag: DW_TAG_member, name: "i2c_serial_bus", scope: !16569, file: !16564, line: 634, baseType: !16783, size: 288)
!16783 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_i2c_serialbus", file: !16564, line: 412, size: 288, elements: !16784)
!16784 = !{!16785, !16786, !16787, !16788, !16789, !16790, !16791, !16792, !16793, !16794, !16795, !16796, !16797}
!16785 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16783, file: !16564, line: 413, baseType: !1493, size: 8)
!16786 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16783, file: !16564, line: 413, baseType: !1493, size: 8, offset: 8)
!16787 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16783, file: !16564, line: 413, baseType: !1493, size: 8, offset: 16)
!16788 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !16783, file: !16564, line: 413, baseType: !1493, size: 8, offset: 24)
!16789 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !16783, file: !16564, line: 413, baseType: !1493, size: 8, offset: 32)
!16790 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !16783, file: !16564, line: 413, baseType: !1493, size: 8, offset: 40)
!16791 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !16783, file: !16564, line: 413, baseType: !966, size: 16, offset: 48)
!16792 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16783, file: !16564, line: 413, baseType: !966, size: 16, offset: 64)
!16793 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16783, file: !16564, line: 413, baseType: !16689, size: 88, offset: 80)
!16794 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16783, file: !16564, line: 413, baseType: !4307, size: 64, offset: 168)
!16795 = !DIDerivedType(tag: DW_TAG_member, name: "access_mode", scope: !16783, file: !16564, line: 413, baseType: !1493, size: 8, offset: 232)
!16796 = !DIDerivedType(tag: DW_TAG_member, name: "slave_address", scope: !16783, file: !16564, line: 414, baseType: !966, size: 16, offset: 240)
!16797 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !16783, file: !16564, line: 415, baseType: !479, size: 32, offset: 256)
!16798 = !DIDerivedType(tag: DW_TAG_member, name: "spi_serial_bus", scope: !16569, file: !16564, line: 635, baseType: !16799, size: 320)
!16799 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_spi_serialbus", file: !16564, line: 423, size: 320, elements: !16800)
!16800 = !{!16801, !16802, !16803, !16804, !16805, !16806, !16807, !16808, !16809, !16810, !16811, !16812, !16813, !16814, !16815, !16816, !16817}
!16801 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16799, file: !16564, line: 424, baseType: !1493, size: 8)
!16802 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16799, file: !16564, line: 424, baseType: !1493, size: 8, offset: 8)
!16803 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16799, file: !16564, line: 424, baseType: !1493, size: 8, offset: 16)
!16804 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !16799, file: !16564, line: 424, baseType: !1493, size: 8, offset: 24)
!16805 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !16799, file: !16564, line: 424, baseType: !1493, size: 8, offset: 32)
!16806 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !16799, file: !16564, line: 424, baseType: !1493, size: 8, offset: 40)
!16807 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !16799, file: !16564, line: 424, baseType: !966, size: 16, offset: 48)
!16808 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16799, file: !16564, line: 424, baseType: !966, size: 16, offset: 64)
!16809 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16799, file: !16564, line: 424, baseType: !16689, size: 88, offset: 80)
!16810 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16799, file: !16564, line: 424, baseType: !4307, size: 64, offset: 168)
!16811 = !DIDerivedType(tag: DW_TAG_member, name: "wire_mode", scope: !16799, file: !16564, line: 424, baseType: !1493, size: 8, offset: 232)
!16812 = !DIDerivedType(tag: DW_TAG_member, name: "device_polarity", scope: !16799, file: !16564, line: 425, baseType: !1493, size: 8, offset: 240)
!16813 = !DIDerivedType(tag: DW_TAG_member, name: "data_bit_length", scope: !16799, file: !16564, line: 426, baseType: !1493, size: 8, offset: 248)
!16814 = !DIDerivedType(tag: DW_TAG_member, name: "clock_phase", scope: !16799, file: !16564, line: 427, baseType: !1493, size: 8, offset: 256)
!16815 = !DIDerivedType(tag: DW_TAG_member, name: "clock_polarity", scope: !16799, file: !16564, line: 428, baseType: !1493, size: 8, offset: 264)
!16816 = !DIDerivedType(tag: DW_TAG_member, name: "device_selection", scope: !16799, file: !16564, line: 429, baseType: !966, size: 16, offset: 272)
!16817 = !DIDerivedType(tag: DW_TAG_member, name: "connection_speed", scope: !16799, file: !16564, line: 430, baseType: !479, size: 32, offset: 288)
!16818 = !DIDerivedType(tag: DW_TAG_member, name: "uart_serial_bus", scope: !16569, file: !16564, line: 636, baseType: !16819, size: 344)
!16819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_uart_serialbus", file: !16564, line: 453, size: 344, elements: !16820)
!16820 = !{!16821, !16822, !16823, !16824, !16825, !16826, !16827, !16828, !16829, !16830, !16831, !16832, !16833, !16834, !16835, !16836, !16837, !16838, !16839}
!16821 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16819, file: !16564, line: 454, baseType: !1493, size: 8)
!16822 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16819, file: !16564, line: 454, baseType: !1493, size: 8, offset: 8)
!16823 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16819, file: !16564, line: 454, baseType: !1493, size: 8, offset: 16)
!16824 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !16819, file: !16564, line: 454, baseType: !1493, size: 8, offset: 24)
!16825 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !16819, file: !16564, line: 454, baseType: !1493, size: 8, offset: 32)
!16826 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !16819, file: !16564, line: 454, baseType: !1493, size: 8, offset: 40)
!16827 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !16819, file: !16564, line: 454, baseType: !966, size: 16, offset: 48)
!16828 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16819, file: !16564, line: 454, baseType: !966, size: 16, offset: 64)
!16829 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16819, file: !16564, line: 454, baseType: !16689, size: 88, offset: 80)
!16830 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16819, file: !16564, line: 454, baseType: !4307, size: 64, offset: 168)
!16831 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !16819, file: !16564, line: 454, baseType: !1493, size: 8, offset: 232)
!16832 = !DIDerivedType(tag: DW_TAG_member, name: "data_bits", scope: !16819, file: !16564, line: 455, baseType: !1493, size: 8, offset: 240)
!16833 = !DIDerivedType(tag: DW_TAG_member, name: "stop_bits", scope: !16819, file: !16564, line: 456, baseType: !1493, size: 8, offset: 248)
!16834 = !DIDerivedType(tag: DW_TAG_member, name: "flow_control", scope: !16819, file: !16564, line: 457, baseType: !1493, size: 8, offset: 256)
!16835 = !DIDerivedType(tag: DW_TAG_member, name: "parity", scope: !16819, file: !16564, line: 458, baseType: !1493, size: 8, offset: 264)
!16836 = !DIDerivedType(tag: DW_TAG_member, name: "lines_enabled", scope: !16819, file: !16564, line: 459, baseType: !1493, size: 8, offset: 272)
!16837 = !DIDerivedType(tag: DW_TAG_member, name: "rx_fifo_size", scope: !16819, file: !16564, line: 460, baseType: !966, size: 16, offset: 280)
!16838 = !DIDerivedType(tag: DW_TAG_member, name: "tx_fifo_size", scope: !16819, file: !16564, line: 461, baseType: !966, size: 16, offset: 296)
!16839 = !DIDerivedType(tag: DW_TAG_member, name: "default_baud_rate", scope: !16819, file: !16564, line: 462, baseType: !479, size: 32, offset: 312)
!16840 = !DIDerivedType(tag: DW_TAG_member, name: "common_serial_bus", scope: !16569, file: !16564, line: 637, baseType: !16841, size: 232)
!16841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_common_serialbus", file: !16564, line: 398, size: 232, elements: !16842)
!16842 = !{!16843, !16844, !16845, !16846, !16847, !16848, !16849, !16850, !16851, !16852}
!16843 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16841, file: !16564, line: 399, baseType: !1493, size: 8)
!16844 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !16841, file: !16564, line: 399, baseType: !1493, size: 8, offset: 8)
!16845 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16841, file: !16564, line: 399, baseType: !1493, size: 8, offset: 16)
!16846 = !DIDerivedType(tag: DW_TAG_member, name: "slave_mode", scope: !16841, file: !16564, line: 399, baseType: !1493, size: 8, offset: 24)
!16847 = !DIDerivedType(tag: DW_TAG_member, name: "connection_sharing", scope: !16841, file: !16564, line: 399, baseType: !1493, size: 8, offset: 32)
!16848 = !DIDerivedType(tag: DW_TAG_member, name: "type_revision_id", scope: !16841, file: !16564, line: 399, baseType: !1493, size: 8, offset: 40)
!16849 = !DIDerivedType(tag: DW_TAG_member, name: "type_data_length", scope: !16841, file: !16564, line: 399, baseType: !966, size: 16, offset: 48)
!16850 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16841, file: !16564, line: 399, baseType: !966, size: 16, offset: 64)
!16851 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16841, file: !16564, line: 399, baseType: !16689, size: 88, offset: 80)
!16852 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16841, file: !16564, line: 399, baseType: !4307, size: 64, offset: 168)
!16853 = !DIDerivedType(tag: DW_TAG_member, name: "pin_function", scope: !16569, file: !16564, line: 638, baseType: !16854, size: 288)
!16854 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_function", file: !16564, line: 508, size: 288, elements: !16855)
!16855 = !{!16856, !16857, !16858, !16859, !16860, !16861, !16862, !16863, !16864}
!16856 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16854, file: !16564, line: 509, baseType: !1493, size: 8)
!16857 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !16854, file: !16564, line: 510, baseType: !1493, size: 8, offset: 8)
!16858 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !16854, file: !16564, line: 511, baseType: !1493, size: 8, offset: 16)
!16859 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !16854, file: !16564, line: 512, baseType: !966, size: 16, offset: 24)
!16860 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !16854, file: !16564, line: 513, baseType: !966, size: 16, offset: 40)
!16861 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16854, file: !16564, line: 514, baseType: !966, size: 16, offset: 56)
!16862 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16854, file: !16564, line: 515, baseType: !16689, size: 88, offset: 72)
!16863 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !16854, file: !16564, line: 516, baseType: !16780, size: 64, offset: 160)
!16864 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16854, file: !16564, line: 517, baseType: !4307, size: 64, offset: 224)
!16865 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config", scope: !16569, file: !16564, line: 639, baseType: !16866, size: 312)
!16866 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_config", file: !16564, line: 520, size: 312, elements: !16867)
!16867 = !{!16868, !16869, !16870, !16871, !16872, !16873, !16874, !16875, !16876, !16877}
!16868 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16866, file: !16564, line: 521, baseType: !1493, size: 8)
!16869 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16866, file: !16564, line: 522, baseType: !1493, size: 8, offset: 8)
!16870 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !16866, file: !16564, line: 523, baseType: !1493, size: 8, offset: 16)
!16871 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !16866, file: !16564, line: 524, baseType: !1493, size: 8, offset: 24)
!16872 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !16866, file: !16564, line: 525, baseType: !479, size: 32, offset: 32)
!16873 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !16866, file: !16564, line: 526, baseType: !966, size: 16, offset: 64)
!16874 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16866, file: !16564, line: 527, baseType: !966, size: 16, offset: 80)
!16875 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16866, file: !16564, line: 528, baseType: !16689, size: 88, offset: 96)
!16876 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !16866, file: !16564, line: 529, baseType: !16780, size: 64, offset: 184)
!16877 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16866, file: !16564, line: 530, baseType: !4307, size: 64, offset: 248)
!16878 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group", scope: !16569, file: !16564, line: 640, baseType: !16879, size: 256)
!16879 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group", file: !16564, line: 550, size: 256, elements: !16880)
!16880 = !{!16881, !16882, !16883, !16884, !16885, !16886, !16891}
!16881 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16879, file: !16564, line: 551, baseType: !1493, size: 8)
!16882 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16879, file: !16564, line: 552, baseType: !1493, size: 8, offset: 8)
!16883 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table_length", scope: !16879, file: !16564, line: 553, baseType: !966, size: 16, offset: 16)
!16884 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16879, file: !16564, line: 554, baseType: !966, size: 16, offset: 32)
!16885 = !DIDerivedType(tag: DW_TAG_member, name: "pin_table", scope: !16879, file: !16564, line: 555, baseType: !16780, size: 64, offset: 48)
!16886 = !DIDerivedType(tag: DW_TAG_member, name: "resource_label", scope: !16879, file: !16564, line: 556, baseType: !16887, size: 80, offset: 112)
!16887 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_label", file: !16564, line: 258, size: 80, elements: !16888)
!16888 = !{!16889, !16890}
!16889 = !DIDerivedType(tag: DW_TAG_member, name: "string_length", scope: !16887, file: !16564, line: 259, baseType: !966, size: 16)
!16890 = !DIDerivedType(tag: DW_TAG_member, name: "string_ptr", scope: !16887, file: !16564, line: 260, baseType: !338, size: 64, offset: 16)
!16891 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16879, file: !16564, line: 557, baseType: !4307, size: 64, offset: 192)
!16892 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_function", scope: !16569, file: !16564, line: 641, baseType: !16893, size: 288)
!16893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_function", file: !16564, line: 560, size: 288, elements: !16894)
!16894 = !{!16895, !16896, !16897, !16898, !16899, !16900, !16901, !16902}
!16895 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16893, file: !16564, line: 561, baseType: !1493, size: 8)
!16896 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16893, file: !16564, line: 562, baseType: !1493, size: 8, offset: 8)
!16897 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !16893, file: !16564, line: 563, baseType: !1493, size: 8, offset: 16)
!16898 = !DIDerivedType(tag: DW_TAG_member, name: "function_number", scope: !16893, file: !16564, line: 564, baseType: !966, size: 16, offset: 24)
!16899 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16893, file: !16564, line: 565, baseType: !966, size: 16, offset: 40)
!16900 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16893, file: !16564, line: 566, baseType: !16689, size: 88, offset: 56)
!16901 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !16893, file: !16564, line: 567, baseType: !16887, size: 80, offset: 144)
!16902 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16893, file: !16564, line: 568, baseType: !4307, size: 64, offset: 224)
!16903 = !DIDerivedType(tag: DW_TAG_member, name: "pin_group_config", scope: !16569, file: !16564, line: 642, baseType: !16904, size: 312)
!16904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_pin_group_config", file: !16564, line: 571, size: 312, elements: !16905)
!16905 = !{!16906, !16907, !16908, !16909, !16910, !16911, !16912, !16913, !16914}
!16906 = !DIDerivedType(tag: DW_TAG_member, name: "revision_id", scope: !16904, file: !16564, line: 572, baseType: !1493, size: 8)
!16907 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16904, file: !16564, line: 573, baseType: !1493, size: 8, offset: 8)
!16908 = !DIDerivedType(tag: DW_TAG_member, name: "shareable", scope: !16904, file: !16564, line: 574, baseType: !1493, size: 8, offset: 16)
!16909 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_type", scope: !16904, file: !16564, line: 575, baseType: !1493, size: 8, offset: 24)
!16910 = !DIDerivedType(tag: DW_TAG_member, name: "pin_config_value", scope: !16904, file: !16564, line: 576, baseType: !479, size: 32, offset: 32)
!16911 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_length", scope: !16904, file: !16564, line: 577, baseType: !966, size: 16, offset: 64)
!16912 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source", scope: !16904, file: !16564, line: 578, baseType: !16689, size: 88, offset: 80)
!16913 = !DIDerivedType(tag: DW_TAG_member, name: "resource_source_label", scope: !16904, file: !16564, line: 579, baseType: !16887, size: 80, offset: 168)
!16914 = !DIDerivedType(tag: DW_TAG_member, name: "vendor_data", scope: !16904, file: !16564, line: 580, baseType: !4307, size: 64, offset: 248)
!16915 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !16569, file: !16564, line: 646, baseType: !16916, size: 72)
!16916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "acpi_resource_address", file: !16564, line: 303, size: 72, elements: !16917)
!16917 = !{!16918, !16919, !16920, !16921, !16922, !16923}
!16918 = !DIDerivedType(tag: DW_TAG_member, name: "resource_type", scope: !16916, file: !16564, line: 304, baseType: !1493, size: 8)
!16919 = !DIDerivedType(tag: DW_TAG_member, name: "producer_consumer", scope: !16916, file: !16564, line: 304, baseType: !1493, size: 8, offset: 8)
!16920 = !DIDerivedType(tag: DW_TAG_member, name: "decode", scope: !16916, file: !16564, line: 304, baseType: !1493, size: 8, offset: 16)
!16921 = !DIDerivedType(tag: DW_TAG_member, name: "min_address_fixed", scope: !16916, file: !16564, line: 304, baseType: !1493, size: 8, offset: 24)
!16922 = !DIDerivedType(tag: DW_TAG_member, name: "max_address_fixed", scope: !16916, file: !16564, line: 304, baseType: !1493, size: 8, offset: 32)
!16923 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !16916, file: !16564, line: 304, baseType: !16663, size: 32, offset: 40)
!16924 = !DILocalVariable(name: "ares", arg: 1, scope: !16559, file: !3, line: 2115, type: !16562)
!16925 = !DILocation(line: 2115, column: 56, scope: !16559)
!16926 = !DILocalVariable(name: "data", arg: 2, scope: !16559, file: !3, line: 2115, type: !228)
!16927 = !DILocation(line: 2115, column: 68, scope: !16559)
!16928 = !DILocalVariable(name: "lookup", scope: !16559, file: !3, line: 2117, type: !16929)
!16929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16406, size: 64)
!16930 = !DILocation(line: 2117, column: 26, scope: !16559)
!16931 = !DILocation(line: 2117, column: 35, scope: !16559)
!16932 = !DILocalVariable(name: "ctlr", scope: !16559, file: !3, line: 2118, type: !4512)
!16933 = !DILocation(line: 2118, column: 25, scope: !16559)
!16934 = !DILocation(line: 2118, column: 32, scope: !16559)
!16935 = !DILocation(line: 2118, column: 40, scope: !16559)
!16936 = !DILocation(line: 2120, column: 6, scope: !16937)
!16937 = distinct !DILexicalBlock(scope: !16559, file: !3, line: 2120, column: 6)
!16938 = !DILocation(line: 2120, column: 12, scope: !16937)
!16939 = !DILocation(line: 2120, column: 17, scope: !16937)
!16940 = !DILocation(line: 2120, column: 6, scope: !16559)
!16941 = !DILocalVariable(name: "sb", scope: !16942, file: !3, line: 2121, type: !16943)
!16942 = distinct !DILexicalBlock(scope: !16937, file: !3, line: 2120, column: 51)
!16943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16799, size: 64)
!16944 = !DILocation(line: 2121, column: 39, scope: !16942)
!16945 = !DILocalVariable(name: "parent_handle", scope: !16942, file: !3, line: 2122, type: !236)
!16946 = !DILocation(line: 2122, column: 15, scope: !16942)
!16947 = !DILocalVariable(name: "status", scope: !16942, file: !3, line: 2123, type: !5197)
!16948 = !DILocation(line: 2123, column: 15, scope: !16942)
!16949 = !DILocation(line: 2125, column: 9, scope: !16942)
!16950 = !DILocation(line: 2125, column: 15, scope: !16942)
!16951 = !DILocation(line: 2125, column: 20, scope: !16942)
!16952 = !DILocation(line: 2125, column: 6, scope: !16942)
!16953 = !DILocation(line: 2126, column: 7, scope: !16954)
!16954 = distinct !DILexicalBlock(scope: !16942, file: !3, line: 2126, column: 7)
!16955 = !DILocation(line: 2126, column: 11, scope: !16954)
!16956 = !DILocation(line: 2126, column: 16, scope: !16954)
!16957 = !DILocation(line: 2126, column: 7, scope: !16942)
!16958 = !DILocation(line: 2129, column: 8, scope: !16959)
!16959 = distinct !DILexicalBlock(scope: !16954, file: !3, line: 2126, column: 50)
!16960 = !DILocation(line: 2129, column: 12, scope: !16959)
!16961 = !DILocation(line: 2129, column: 28, scope: !16959)
!16962 = !DILocation(line: 2128, column: 13, scope: !16959)
!16963 = !DILocation(line: 2128, column: 11, scope: !16959)
!16964 = !DILocation(line: 2132, column: 8, scope: !16965)
!16965 = distinct !DILexicalBlock(scope: !16959, file: !3, line: 2132, column: 8)
!16966 = !DILocation(line: 2132, column: 29, scope: !16965)
!16967 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !16968, file: !3, line: 2133, type: !243)
!16968 = distinct !DILexicalBlock(scope: !16965, file: !3, line: 2133, column: 8)
!16969 = !DILocation(line: 2133, column: 8, scope: !16968)
!16970 = !DILocalVariable(name: "__mptr", scope: !16971, file: !3, line: 2133, type: !228)
!16971 = distinct !DILexicalBlock(scope: !16968, file: !3, line: 2133, column: 8)
!16972 = !DILocation(line: 2133, column: 8, scope: !16971)
!16973 = !DILocation(line: 2133, column: 8, scope: !16974)
!16974 = distinct !DILexicalBlock(scope: !16971, file: !3, line: 2133, column: 8)
!16975 = !DILocation(line: 2133, column: 8, scope: !16965)
!16976 = !DILocation(line: 2133, column: 41, scope: !16965)
!16977 = !DILocation(line: 2133, column: 38, scope: !16965)
!16978 = !DILocation(line: 2132, column: 8, scope: !16959)
!16979 = !DILocation(line: 2134, column: 5, scope: !16965)
!16980 = !DILocation(line: 2143, column: 8, scope: !16981)
!16981 = distinct !DILexicalBlock(scope: !16959, file: !3, line: 2143, column: 8)
!16982 = !DILocation(line: 2143, column: 14, scope: !16981)
!16983 = !DILocation(line: 2143, column: 8, scope: !16959)
!16984 = !DILocalVariable(name: "cs", scope: !16985, file: !3, line: 2144, type: !234)
!16985 = distinct !DILexicalBlock(scope: !16981, file: !3, line: 2143, column: 31)
!16986 = !DILocation(line: 2144, column: 9, scope: !16985)
!16987 = !DILocation(line: 2144, column: 14, scope: !16985)
!16988 = !DILocation(line: 2144, column: 20, scope: !16985)
!16989 = !DILocation(line: 2144, column: 36, scope: !16985)
!16990 = !DILocation(line: 2145, column: 7, scope: !16985)
!16991 = !DILocation(line: 2145, column: 11, scope: !16985)
!16992 = !DILocation(line: 2146, column: 9, scope: !16993)
!16993 = distinct !DILexicalBlock(scope: !16985, file: !3, line: 2146, column: 9)
!16994 = !DILocation(line: 2146, column: 12, scope: !16993)
!16995 = !DILocation(line: 2146, column: 9, scope: !16985)
!16996 = !DILocation(line: 2147, column: 13, scope: !16993)
!16997 = !DILocation(line: 2147, column: 6, scope: !16993)
!16998 = !DILocation(line: 2148, column: 27, scope: !16985)
!16999 = !DILocation(line: 2148, column: 5, scope: !16985)
!17000 = !DILocation(line: 2148, column: 13, scope: !16985)
!17001 = !DILocation(line: 2148, column: 25, scope: !16985)
!17002 = !DILocation(line: 2149, column: 4, scope: !16985)
!17003 = !DILocation(line: 2150, column: 27, scope: !17004)
!17004 = distinct !DILexicalBlock(scope: !16981, file: !3, line: 2149, column: 11)
!17005 = !DILocation(line: 2150, column: 31, scope: !17004)
!17006 = !DILocation(line: 2150, column: 5, scope: !17004)
!17007 = !DILocation(line: 2150, column: 13, scope: !17004)
!17008 = !DILocation(line: 2150, column: 25, scope: !17004)
!17009 = !DILocation(line: 2153, column: 27, scope: !16959)
!17010 = !DILocation(line: 2153, column: 31, scope: !16959)
!17011 = !DILocation(line: 2153, column: 4, scope: !16959)
!17012 = !DILocation(line: 2153, column: 12, scope: !16959)
!17013 = !DILocation(line: 2153, column: 25, scope: !16959)
!17014 = !DILocation(line: 2154, column: 28, scope: !16959)
!17015 = !DILocation(line: 2154, column: 32, scope: !16959)
!17016 = !DILocation(line: 2154, column: 4, scope: !16959)
!17017 = !DILocation(line: 2154, column: 12, scope: !16959)
!17018 = !DILocation(line: 2154, column: 26, scope: !16959)
!17019 = !DILocation(line: 2156, column: 8, scope: !17020)
!17020 = distinct !DILexicalBlock(scope: !16959, file: !3, line: 2156, column: 8)
!17021 = !DILocation(line: 2156, column: 12, scope: !17020)
!17022 = !DILocation(line: 2156, column: 24, scope: !17020)
!17023 = !DILocation(line: 2156, column: 8, scope: !16959)
!17024 = !DILocation(line: 2157, column: 5, scope: !17020)
!17025 = !DILocation(line: 2157, column: 13, scope: !17020)
!17026 = !DILocation(line: 2157, column: 18, scope: !17020)
!17027 = !DILocation(line: 2158, column: 8, scope: !17028)
!17028 = distinct !DILexicalBlock(scope: !16959, file: !3, line: 2158, column: 8)
!17029 = !DILocation(line: 2158, column: 12, scope: !17028)
!17030 = !DILocation(line: 2158, column: 27, scope: !17028)
!17031 = !DILocation(line: 2158, column: 8, scope: !16959)
!17032 = !DILocation(line: 2159, column: 5, scope: !17028)
!17033 = !DILocation(line: 2159, column: 13, scope: !17028)
!17034 = !DILocation(line: 2159, column: 18, scope: !17028)
!17035 = !DILocation(line: 2160, column: 8, scope: !17036)
!17036 = distinct !DILexicalBlock(scope: !16959, file: !3, line: 2160, column: 8)
!17037 = !DILocation(line: 2160, column: 12, scope: !17036)
!17038 = !DILocation(line: 2160, column: 28, scope: !17036)
!17039 = !DILocation(line: 2160, column: 8, scope: !16959)
!17040 = !DILocation(line: 2161, column: 5, scope: !17036)
!17041 = !DILocation(line: 2161, column: 13, scope: !17036)
!17042 = !DILocation(line: 2161, column: 18, scope: !17036)
!17043 = !DILocation(line: 2162, column: 3, scope: !16959)
!17044 = !DILocation(line: 2163, column: 2, scope: !16942)
!17045 = !DILocation(line: 2163, column: 13, scope: !17046)
!17046 = distinct !DILexicalBlock(scope: !16937, file: !3, line: 2163, column: 13)
!17047 = !DILocation(line: 2163, column: 21, scope: !17046)
!17048 = !DILocation(line: 2163, column: 25, scope: !17046)
!17049 = !DILocation(line: 2163, column: 13, scope: !16937)
!17050 = !DILocalVariable(name: "r", scope: !17051, file: !3, line: 2164, type: !17052)
!17051 = distinct !DILexicalBlock(scope: !17046, file: !3, line: 2163, column: 30)
!17052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "resource", file: !17053, line: 20, size: 512, elements: !17054)
!17053 = !DIFile(filename: "./include/linux/ioport.h", directory: "/home/lizy2001/genbc/linux")
!17054 = !{!17055, !17057, !17058, !17059, !17060, !17061, !17063, !17064}
!17055 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !17052, file: !17053, line: 21, baseType: !17056, size: 64)
!17056 = !DIDerivedType(tag: DW_TAG_typedef, name: "resource_size_t", file: !227, line: 158, baseType: !2265)
!17057 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !17052, file: !17053, line: 22, baseType: !17056, size: 64, offset: 64)
!17058 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !17052, file: !17053, line: 23, baseType: !280, size: 64, offset: 128)
!17059 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !17052, file: !17053, line: 24, baseType: !388, size: 64, offset: 192)
!17060 = !DIDerivedType(tag: DW_TAG_member, name: "desc", scope: !17052, file: !17053, line: 25, baseType: !388, size: 64, offset: 256)
!17061 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !17052, file: !17053, line: 26, baseType: !17062, size: 64, offset: 320)
!17062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17052, size: 64)
!17063 = !DIDerivedType(tag: DW_TAG_member, name: "sibling", scope: !17052, file: !17053, line: 26, baseType: !17062, size: 64, offset: 384)
!17064 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !17052, file: !17053, line: 26, baseType: !17062, size: 64, offset: 448)
!17065 = !DILocation(line: 2164, column: 19, scope: !17051)
!17066 = !DILocation(line: 2166, column: 35, scope: !17067)
!17067 = distinct !DILexicalBlock(scope: !17051, file: !3, line: 2166, column: 7)
!17068 = !DILocation(line: 2166, column: 7, scope: !17067)
!17069 = !DILocation(line: 2166, column: 7, scope: !17051)
!17070 = !DILocation(line: 2167, column: 20, scope: !17067)
!17071 = !DILocation(line: 2167, column: 18, scope: !17067)
!17072 = !DILocation(line: 2167, column: 4, scope: !17067)
!17073 = !DILocation(line: 2167, column: 12, scope: !17067)
!17074 = !DILocation(line: 2167, column: 16, scope: !17067)
!17075 = !DILocation(line: 2168, column: 2, scope: !17051)
!17076 = !DILocation(line: 2171, column: 2, scope: !16559)
!17077 = !DILocation(line: 2172, column: 1, scope: !16559)
!17078 = distinct !DISubprogram(name: "acpi_spi_parse_apple_properties", scope: !3, file: !3, line: 2086, type: !17079, scopeLine: 2088, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17079 = !DISubroutineType(types: !17080)
!17080 = !{null, !229, !16929}
!17081 = !DILocalVariable(name: "dev", arg: 1, scope: !17078, file: !3, line: 2086, type: !229)
!17082 = !DILocation(line: 2086, column: 65, scope: !17078)
!17083 = !DILocalVariable(name: "lookup", arg: 2, scope: !17078, file: !3, line: 2087, type: !16929)
!17084 = !DILocation(line: 2087, column: 34, scope: !17078)
!17085 = !DILocalVariable(name: "obj", scope: !17078, file: !3, line: 2089, type: !4416)
!17086 = !DILocation(line: 2089, column: 27, scope: !17078)
!17087 = !DILocation(line: 2091, column: 7, scope: !17088)
!17088 = distinct !DILexicalBlock(scope: !17078, file: !3, line: 2091, column: 6)
!17089 = !DILocation(line: 2091, column: 6, scope: !17078)
!17090 = !DILocation(line: 2092, column: 3, scope: !17088)
!17091 = !DILocation(line: 2094, column: 29, scope: !17092)
!17092 = distinct !DILexicalBlock(scope: !17078, file: !3, line: 2094, column: 6)
!17093 = !DILocation(line: 2094, column: 7, scope: !17092)
!17094 = !DILocation(line: 2095, column: 6, scope: !17092)
!17095 = !DILocation(line: 2095, column: 9, scope: !17092)
!17096 = !DILocation(line: 2095, column: 14, scope: !17092)
!17097 = !DILocation(line: 2095, column: 21, scope: !17092)
!17098 = !DILocation(line: 2095, column: 28, scope: !17092)
!17099 = !DILocation(line: 2094, column: 6, scope: !17078)
!17100 = !DILocation(line: 2096, column: 50, scope: !17092)
!17101 = !DILocation(line: 2096, column: 55, scope: !17092)
!17102 = !DILocation(line: 2096, column: 62, scope: !17092)
!17103 = !DILocation(line: 2096, column: 42, scope: !17092)
!17104 = !DILocation(line: 2096, column: 40, scope: !17092)
!17105 = !DILocation(line: 2096, column: 27, scope: !17092)
!17106 = !DILocation(line: 2096, column: 3, scope: !17092)
!17107 = !DILocation(line: 2096, column: 11, scope: !17092)
!17108 = !DILocation(line: 2096, column: 25, scope: !17092)
!17109 = !DILocation(line: 2098, column: 29, scope: !17110)
!17110 = distinct !DILexicalBlock(scope: !17078, file: !3, line: 2098, column: 6)
!17111 = !DILocation(line: 2098, column: 7, scope: !17110)
!17112 = !DILocation(line: 2099, column: 6, scope: !17110)
!17113 = !DILocation(line: 2099, column: 9, scope: !17110)
!17114 = !DILocation(line: 2099, column: 14, scope: !17110)
!17115 = !DILocation(line: 2099, column: 21, scope: !17110)
!17116 = !DILocation(line: 2099, column: 28, scope: !17110)
!17117 = !DILocation(line: 2098, column: 6, scope: !17078)
!17118 = !DILocation(line: 2100, column: 35, scope: !17110)
!17119 = !DILocation(line: 2100, column: 40, scope: !17110)
!17120 = !DILocation(line: 2100, column: 47, scope: !17110)
!17121 = !DILocation(line: 2100, column: 27, scope: !17110)
!17122 = !DILocation(line: 2100, column: 3, scope: !17110)
!17123 = !DILocation(line: 2100, column: 11, scope: !17110)
!17124 = !DILocation(line: 2100, column: 25, scope: !17110)
!17125 = !DILocation(line: 2102, column: 29, scope: !17126)
!17126 = distinct !DILexicalBlock(scope: !17078, file: !3, line: 2102, column: 6)
!17127 = !DILocation(line: 2102, column: 7, scope: !17126)
!17128 = !DILocation(line: 2103, column: 6, scope: !17126)
!17129 = !DILocation(line: 2103, column: 9, scope: !17126)
!17130 = !DILocation(line: 2103, column: 14, scope: !17126)
!17131 = !DILocation(line: 2103, column: 21, scope: !17126)
!17132 = !DILocation(line: 2103, column: 28, scope: !17126)
!17133 = !DILocation(line: 2103, column: 33, scope: !17126)
!17134 = !DILocation(line: 2103, column: 45, scope: !17126)
!17135 = !DILocation(line: 2103, column: 50, scope: !17126)
!17136 = !DILocation(line: 2103, column: 57, scope: !17126)
!17137 = !DILocation(line: 2103, column: 37, scope: !17126)
!17138 = !DILocation(line: 2102, column: 6, scope: !17078)
!17139 = !DILocation(line: 2104, column: 3, scope: !17126)
!17140 = !DILocation(line: 2104, column: 11, scope: !17126)
!17141 = !DILocation(line: 2104, column: 16, scope: !17126)
!17142 = !DILocation(line: 2106, column: 29, scope: !17143)
!17143 = distinct !DILexicalBlock(scope: !17078, file: !3, line: 2106, column: 6)
!17144 = !DILocation(line: 2106, column: 7, scope: !17143)
!17145 = !DILocation(line: 2107, column: 6, scope: !17143)
!17146 = !DILocation(line: 2107, column: 9, scope: !17143)
!17147 = !DILocation(line: 2107, column: 14, scope: !17143)
!17148 = !DILocation(line: 2107, column: 21, scope: !17143)
!17149 = !DILocation(line: 2107, column: 28, scope: !17143)
!17150 = !DILocation(line: 2107, column: 33, scope: !17143)
!17151 = !DILocation(line: 2107, column: 45, scope: !17143)
!17152 = !DILocation(line: 2107, column: 50, scope: !17143)
!17153 = !DILocation(line: 2107, column: 57, scope: !17143)
!17154 = !DILocation(line: 2107, column: 37, scope: !17143)
!17155 = !DILocation(line: 2106, column: 6, scope: !17078)
!17156 = !DILocation(line: 2108, column: 3, scope: !17143)
!17157 = !DILocation(line: 2108, column: 11, scope: !17143)
!17158 = !DILocation(line: 2108, column: 16, scope: !17143)
!17159 = !DILocation(line: 2110, column: 29, scope: !17160)
!17160 = distinct !DILexicalBlock(scope: !17078, file: !3, line: 2110, column: 6)
!17161 = !DILocation(line: 2110, column: 7, scope: !17160)
!17162 = !DILocation(line: 2111, column: 6, scope: !17160)
!17163 = !DILocation(line: 2111, column: 9, scope: !17160)
!17164 = !DILocation(line: 2111, column: 14, scope: !17160)
!17165 = !DILocation(line: 2111, column: 21, scope: !17160)
!17166 = !DILocation(line: 2111, column: 28, scope: !17160)
!17167 = !DILocation(line: 2111, column: 33, scope: !17160)
!17168 = !DILocation(line: 2111, column: 45, scope: !17160)
!17169 = !DILocation(line: 2111, column: 50, scope: !17160)
!17170 = !DILocation(line: 2111, column: 57, scope: !17160)
!17171 = !DILocation(line: 2111, column: 37, scope: !17160)
!17172 = !DILocation(line: 2110, column: 6, scope: !17078)
!17173 = !DILocation(line: 2112, column: 3, scope: !17160)
!17174 = !DILocation(line: 2112, column: 11, scope: !17160)
!17175 = !DILocation(line: 2112, column: 16, scope: !17160)
!17176 = !DILocation(line: 2113, column: 1, scope: !17078)
!17177 = distinct !DISubprogram(name: "acpi_fwnode_handle", scope: !231, file: !231, line: 438, type: !17178, scopeLine: 439, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17178 = !DISubroutineType(types: !17179)
!17179 = !{!243, !229}
!17180 = !DILocalVariable(name: "adev", arg: 1, scope: !17177, file: !231, line: 438, type: !229)
!17181 = !DILocation(line: 438, column: 76, scope: !17177)
!17182 = !DILocation(line: 440, column: 10, scope: !17177)
!17183 = !DILocation(line: 440, column: 16, scope: !17177)
!17184 = !DILocation(line: 440, column: 2, scope: !17177)
!17185 = distinct !DISubprogram(name: "acpi_device_set_enumerated", scope: !6813, file: !6813, line: 664, type: !4438, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17186 = !DILocalVariable(name: "adev", arg: 1, scope: !17185, file: !6813, line: 664, type: !229)
!17187 = !DILocation(line: 664, column: 67, scope: !17185)
!17188 = !DILocation(line: 666, column: 2, scope: !17185)
!17189 = !DILocation(line: 666, column: 8, scope: !17185)
!17190 = !DILocation(line: 666, column: 14, scope: !17185)
!17191 = !DILocation(line: 666, column: 22, scope: !17185)
!17192 = !DILocation(line: 667, column: 1, scope: !17185)
!17193 = distinct !DISubprogram(name: "__list_splice", scope: !6950, file: !6950, line: 433, type: !17194, scopeLine: 436, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17194 = !DISubroutineType(types: !17195)
!17195 = !{null, !9823, !287, !287}
!17196 = !DILocalVariable(name: "list", arg: 1, scope: !17193, file: !6950, line: 433, type: !9823)
!17197 = !DILocation(line: 433, column: 58, scope: !17193)
!17198 = !DILocalVariable(name: "prev", arg: 2, scope: !17193, file: !6950, line: 434, type: !287)
!17199 = !DILocation(line: 434, column: 24, scope: !17193)
!17200 = !DILocalVariable(name: "next", arg: 3, scope: !17193, file: !6950, line: 435, type: !287)
!17201 = !DILocation(line: 435, column: 24, scope: !17193)
!17202 = !DILocalVariable(name: "first", scope: !17193, file: !6950, line: 437, type: !287)
!17203 = !DILocation(line: 437, column: 20, scope: !17193)
!17204 = !DILocation(line: 437, column: 28, scope: !17193)
!17205 = !DILocation(line: 437, column: 34, scope: !17193)
!17206 = !DILocalVariable(name: "last", scope: !17193, file: !6950, line: 438, type: !287)
!17207 = !DILocation(line: 438, column: 20, scope: !17193)
!17208 = !DILocation(line: 438, column: 27, scope: !17193)
!17209 = !DILocation(line: 438, column: 33, scope: !17193)
!17210 = !DILocation(line: 440, column: 16, scope: !17193)
!17211 = !DILocation(line: 440, column: 2, scope: !17193)
!17212 = !DILocation(line: 440, column: 9, scope: !17193)
!17213 = !DILocation(line: 440, column: 14, scope: !17193)
!17214 = !DILocation(line: 441, column: 15, scope: !17193)
!17215 = !DILocation(line: 441, column: 2, scope: !17193)
!17216 = !DILocation(line: 441, column: 8, scope: !17193)
!17217 = !DILocation(line: 441, column: 13, scope: !17193)
!17218 = !DILocation(line: 443, column: 15, scope: !17193)
!17219 = !DILocation(line: 443, column: 2, scope: !17193)
!17220 = !DILocation(line: 443, column: 8, scope: !17193)
!17221 = !DILocation(line: 443, column: 13, scope: !17193)
!17222 = !DILocation(line: 444, column: 15, scope: !17193)
!17223 = !DILocation(line: 444, column: 2, scope: !17193)
!17224 = !DILocation(line: 444, column: 8, scope: !17193)
!17225 = !DILocation(line: 444, column: 13, scope: !17193)
!17226 = !DILocation(line: 445, column: 1, scope: !17193)
!17227 = distinct !DISubprogram(name: "gpio_set_value_cansleep", scope: !10423, file: !10423, line: 86, type: !17228, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17228 = !DISubroutineType(types: !17229)
!17229 = !{null, !7, !234}
!17230 = !DILocalVariable(name: "gpio", arg: 1, scope: !17227, file: !10423, line: 86, type: !7)
!17231 = !DILocation(line: 86, column: 53, scope: !17227)
!17232 = !DILocalVariable(name: "value", arg: 2, scope: !17227, file: !10423, line: 86, type: !234)
!17233 = !DILocation(line: 86, column: 63, scope: !17227)
!17234 = !DILocation(line: 88, column: 51, scope: !17227)
!17235 = !DILocation(line: 88, column: 38, scope: !17227)
!17236 = !DILocation(line: 88, column: 58, scope: !17227)
!17237 = !DILocation(line: 88, column: 9, scope: !17227)
!17238 = !DILocation(line: 88, column: 2, scope: !17227)
!17239 = distinct !DISubprogram(name: "_spi_xfer_word_delay_update", scope: !3, file: !3, line: 3473, type: !17240, scopeLine: 3475, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17240 = !DISubroutineType(types: !17241)
!17241 = !{!234, !4616, !4532}
!17242 = !DILocalVariable(name: "xfer", arg: 1, scope: !17239, file: !3, line: 3473, type: !4616)
!17243 = !DILocation(line: 3473, column: 61, scope: !17239)
!17244 = !DILocalVariable(name: "spi", arg: 2, scope: !17239, file: !3, line: 3474, type: !4532)
!17245 = !DILocation(line: 3474, column: 31, scope: !17239)
!17246 = !DILocalVariable(name: "delay1", scope: !17239, file: !3, line: 3476, type: !234)
!17247 = !DILocation(line: 3476, column: 6, scope: !17239)
!17248 = !DILocalVariable(name: "delay2", scope: !17239, file: !3, line: 3476, type: !234)
!17249 = !DILocation(line: 3476, column: 14, scope: !17239)
!17250 = !DILocation(line: 3478, column: 28, scope: !17239)
!17251 = !DILocation(line: 3478, column: 34, scope: !17239)
!17252 = !DILocation(line: 3478, column: 46, scope: !17239)
!17253 = !DILocation(line: 3478, column: 11, scope: !17239)
!17254 = !DILocation(line: 3478, column: 9, scope: !17239)
!17255 = !DILocation(line: 3479, column: 6, scope: !17256)
!17256 = distinct !DILexicalBlock(scope: !17239, file: !3, line: 3479, column: 6)
!17257 = !DILocation(line: 3479, column: 13, scope: !17256)
!17258 = !DILocation(line: 3479, column: 6, scope: !17239)
!17259 = !DILocation(line: 3480, column: 10, scope: !17256)
!17260 = !DILocation(line: 3480, column: 3, scope: !17256)
!17261 = !DILocation(line: 3482, column: 28, scope: !17239)
!17262 = !DILocation(line: 3482, column: 33, scope: !17239)
!17263 = !DILocation(line: 3482, column: 45, scope: !17239)
!17264 = !DILocation(line: 3482, column: 11, scope: !17239)
!17265 = !DILocation(line: 3482, column: 9, scope: !17239)
!17266 = !DILocation(line: 3483, column: 6, scope: !17267)
!17267 = distinct !DILexicalBlock(scope: !17239, file: !3, line: 3483, column: 6)
!17268 = !DILocation(line: 3483, column: 13, scope: !17267)
!17269 = !DILocation(line: 3483, column: 6, scope: !17239)
!17270 = !DILocation(line: 3484, column: 10, scope: !17267)
!17271 = !DILocation(line: 3484, column: 3, scope: !17267)
!17272 = !DILocation(line: 3486, column: 6, scope: !17273)
!17273 = distinct !DILexicalBlock(scope: !17239, file: !3, line: 3486, column: 6)
!17274 = !DILocation(line: 3486, column: 15, scope: !17273)
!17275 = !DILocation(line: 3486, column: 13, scope: !17273)
!17276 = !DILocation(line: 3486, column: 6, scope: !17239)
!17277 = !DILocation(line: 3487, column: 11, scope: !17273)
!17278 = !DILocation(line: 3487, column: 17, scope: !17273)
!17279 = !DILocation(line: 3487, column: 3, scope: !17273)
!17280 = !DILocation(line: 3487, column: 30, scope: !17273)
!17281 = !DILocation(line: 3487, column: 35, scope: !17273)
!17282 = !DILocation(line: 3490, column: 2, scope: !17239)
!17283 = !DILocation(line: 3491, column: 1, scope: !17239)
!17284 = distinct !DISubprogram(name: "trace_spi_message_submit", scope: !7906, file: !7906, line: 68, type: !7907, scopeLine: 68, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17285 = !DILocalVariable(name: "msg", arg: 1, scope: !17284, file: !7906, line: 68, type: !4594)
!17286 = !DILocation(line: 68, column: 1, scope: !17284)
!17287 = distinct !DISubprogram(name: "spi_complete", scope: !3, file: !3, line: 3779, type: !533, scopeLine: 3780, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17288 = !DILocalVariable(name: "arg", arg: 1, scope: !17287, file: !3, line: 3779, type: !228)
!17289 = !DILocation(line: 3779, column: 32, scope: !17287)
!17290 = !DILocation(line: 3781, column: 11, scope: !17287)
!17291 = !DILocation(line: 3781, column: 2, scope: !17287)
!17292 = !DILocation(line: 3782, column: 1, scope: !17287)
!17293 = distinct !DISubprogram(name: "get_order", scope: !17294, file: !17294, line: 29, type: !17295, scopeLine: 30, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17294 = !DIFile(filename: "./include/asm-generic/getorder.h", directory: "/home/lizy2001/genbc/linux")
!17295 = !DISubroutineType(types: !17296)
!17296 = !{!234, !388}
!17297 = !DILocalVariable(name: "x", arg: 1, scope: !17298, file: !5443, line: 366, type: !486)
!17298 = distinct !DISubprogram(name: "fls64", scope: !5443, file: !5443, line: 366, type: !17299, scopeLine: 367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17299 = !DISubroutineType(types: !17300)
!17300 = !{!234, !486}
!17301 = !DILocation(line: 366, column: 40, scope: !17298, inlinedAt: !17302)
!17302 = distinct !DILocation(line: 46, column: 9, scope: !17293)
!17303 = !DILocalVariable(name: "bitpos", scope: !17298, file: !5443, line: 368, type: !234)
!17304 = !DILocation(line: 368, column: 6, scope: !17298, inlinedAt: !17302)
!17305 = !DILocalVariable(name: "size", arg: 1, scope: !17293, file: !17294, line: 29, type: !388)
!17306 = !DILocation(line: 29, column: 63, scope: !17293)
!17307 = !DILocation(line: 31, column: 27, scope: !17308)
!17308 = distinct !DILexicalBlock(scope: !17293, file: !17294, line: 31, column: 6)
!17309 = !DILocation(line: 31, column: 6, scope: !17308)
!17310 = !DILocation(line: 31, column: 6, scope: !17293)
!17311 = !DILocation(line: 32, column: 8, scope: !17312)
!17312 = distinct !DILexicalBlock(scope: !17313, file: !17294, line: 32, column: 7)
!17313 = distinct !DILexicalBlock(scope: !17308, file: !17294, line: 31, column: 34)
!17314 = !DILocation(line: 32, column: 7, scope: !17313)
!17315 = !DILocation(line: 33, column: 4, scope: !17312)
!17316 = !DILocation(line: 35, column: 7, scope: !17317)
!17317 = distinct !DILexicalBlock(scope: !17313, file: !17294, line: 35, column: 7)
!17318 = !DILocation(line: 35, column: 12, scope: !17317)
!17319 = !DILocation(line: 35, column: 7, scope: !17313)
!17320 = !DILocation(line: 36, column: 4, scope: !17317)
!17321 = !DILocation(line: 38, column: 10, scope: !17313)
!17322 = !DILocation(line: 38, column: 28, scope: !17313)
!17323 = !DILocation(line: 38, column: 41, scope: !17313)
!17324 = !DILocation(line: 38, column: 3, scope: !17313)
!17325 = !DILocation(line: 41, column: 6, scope: !17293)
!17326 = !DILocation(line: 42, column: 7, scope: !17293)
!17327 = !DILocation(line: 46, column: 15, scope: !17293)
!17328 = !DILocation(line: 374, column: 2, scope: !17298, inlinedAt: !17302)
!17329 = !DILocation(line: 376, column: 14, scope: !17298, inlinedAt: !17302)
!17330 = !{i32 354526}
!17331 = !DILocation(line: 377, column: 9, scope: !17298, inlinedAt: !17302)
!17332 = !DILocation(line: 377, column: 16, scope: !17298, inlinedAt: !17302)
!17333 = !DILocation(line: 46, column: 2, scope: !17293)
!17334 = !DILocation(line: 48, column: 1, scope: !17293)
!17335 = distinct !DISubprogram(name: "__ilog2_u64", scope: !17336, file: !17336, line: 30, type: !17337, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17336 = !DIFile(filename: "./include/linux/log2.h", directory: "/home/lizy2001/genbc/linux")
!17337 = !DISubroutineType(types: !17338)
!17338 = !{!234, !485}
!17339 = !DILocation(line: 366, column: 40, scope: !17298, inlinedAt: !17340)
!17340 = distinct !DILocation(line: 32, column: 9, scope: !17335)
!17341 = !DILocation(line: 368, column: 6, scope: !17298, inlinedAt: !17340)
!17342 = !DILocalVariable(name: "n", arg: 1, scope: !17335, file: !17336, line: 30, type: !485)
!17343 = !DILocation(line: 30, column: 21, scope: !17335)
!17344 = !DILocation(line: 32, column: 15, scope: !17335)
!17345 = !DILocation(line: 374, column: 2, scope: !17298, inlinedAt: !17340)
!17346 = !DILocation(line: 376, column: 14, scope: !17298, inlinedAt: !17340)
!17347 = !DILocation(line: 377, column: 9, scope: !17298, inlinedAt: !17340)
!17348 = !DILocation(line: 377, column: 16, scope: !17298, inlinedAt: !17340)
!17349 = !DILocation(line: 32, column: 18, scope: !17335)
!17350 = !DILocation(line: 32, column: 2, scope: !17335)
!17351 = distinct !DISubprogram(name: "kasan_kmalloc", scope: !17352, file: !17352, line: 137, type: !17353, scopeLine: 139, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17352 = !DIFile(filename: "./include/linux/kasan.h", directory: "/home/lizy2001/genbc/linux")
!17353 = !DISubroutineType(types: !17354)
!17354 = !{!228, !1082, !269, !385, !226}
!17355 = !DILocalVariable(name: "s", arg: 1, scope: !17351, file: !17352, line: 137, type: !1082)
!17356 = !DILocation(line: 137, column: 54, scope: !17351)
!17357 = !DILocalVariable(name: "object", arg: 2, scope: !17351, file: !17352, line: 137, type: !269)
!17358 = !DILocation(line: 137, column: 69, scope: !17351)
!17359 = !DILocalVariable(name: "size", arg: 3, scope: !17351, file: !17352, line: 138, type: !385)
!17360 = !DILocation(line: 138, column: 12, scope: !17351)
!17361 = !DILocalVariable(name: "flags", arg: 4, scope: !17351, file: !17352, line: 138, type: !226)
!17362 = !DILocation(line: 138, column: 24, scope: !17351)
!17363 = !DILocation(line: 140, column: 17, scope: !17351)
!17364 = !DILocation(line: 140, column: 2, scope: !17351)
!17365 = distinct !DISubprogram(name: "spi_message_init_no_memset", scope: !4514, file: !4514, line: 1035, type: !7907, scopeLine: 1036, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17366 = !DILocalVariable(name: "m", arg: 1, scope: !17365, file: !4514, line: 1035, type: !4594)
!17367 = !DILocation(line: 1035, column: 67, scope: !17365)
!17368 = !DILocation(line: 1037, column: 18, scope: !17365)
!17369 = !DILocation(line: 1037, column: 21, scope: !17365)
!17370 = !DILocation(line: 1037, column: 2, scope: !17365)
!17371 = !DILocation(line: 1038, column: 18, scope: !17365)
!17372 = !DILocation(line: 1038, column: 21, scope: !17365)
!17373 = !DILocation(line: 1038, column: 2, scope: !17365)
!17374 = !DILocation(line: 1039, column: 1, scope: !17365)
!17375 = distinct !DISubprogram(name: "acpi_spi_notify", scope: !3, file: !3, line: 4141, type: !5404, scopeLine: 4143, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17376 = !DILocalVariable(name: "nb", arg: 1, scope: !17375, file: !3, line: 4141, type: !5406)
!17377 = !DILocation(line: 4141, column: 51, scope: !17375)
!17378 = !DILocalVariable(name: "value", arg: 2, scope: !17375, file: !3, line: 4141, type: !388)
!17379 = !DILocation(line: 4141, column: 69, scope: !17375)
!17380 = !DILocalVariable(name: "arg", arg: 3, scope: !17375, file: !3, line: 4142, type: !228)
!17381 = !DILocation(line: 4142, column: 13, scope: !17375)
!17382 = !DILocalVariable(name: "adev", scope: !17375, file: !3, line: 4144, type: !229)
!17383 = !DILocation(line: 4144, column: 22, scope: !17375)
!17384 = !DILocation(line: 4144, column: 29, scope: !17375)
!17385 = !DILocalVariable(name: "ctlr", scope: !17375, file: !3, line: 4145, type: !4512)
!17386 = !DILocation(line: 4145, column: 25, scope: !17375)
!17387 = !DILocalVariable(name: "spi", scope: !17375, file: !3, line: 4146, type: !4532)
!17388 = !DILocation(line: 4146, column: 21, scope: !17375)
!17389 = !DILocation(line: 4148, column: 10, scope: !17375)
!17390 = !DILocation(line: 4148, column: 2, scope: !17375)
!17391 = !DILocation(line: 4150, column: 43, scope: !17392)
!17392 = distinct !DILexicalBlock(scope: !17375, file: !3, line: 4148, column: 17)
!17393 = !DILocation(line: 4150, column: 49, scope: !17392)
!17394 = !DILocation(line: 4150, column: 10, scope: !17392)
!17395 = !DILocation(line: 4150, column: 8, scope: !17392)
!17396 = !DILocation(line: 4151, column: 8, scope: !17397)
!17397 = distinct !DILexicalBlock(scope: !17392, file: !3, line: 4151, column: 7)
!17398 = !DILocation(line: 4151, column: 7, scope: !17392)
!17399 = !DILocation(line: 4152, column: 4, scope: !17397)
!17400 = !DILocation(line: 4154, column: 28, scope: !17392)
!17401 = !DILocation(line: 4154, column: 34, scope: !17392)
!17402 = !DILocation(line: 4154, column: 3, scope: !17392)
!17403 = !DILocation(line: 4155, column: 15, scope: !17392)
!17404 = !DILocation(line: 4155, column: 21, scope: !17392)
!17405 = !DILocation(line: 4155, column: 3, scope: !17392)
!17406 = !DILocation(line: 4156, column: 3, scope: !17392)
!17407 = !DILocation(line: 4158, column: 31, scope: !17408)
!17408 = distinct !DILexicalBlock(scope: !17392, file: !3, line: 4158, column: 7)
!17409 = !DILocation(line: 4158, column: 8, scope: !17408)
!17410 = !DILocation(line: 4158, column: 7, scope: !17392)
!17411 = !DILocation(line: 4159, column: 4, scope: !17408)
!17412 = !DILocation(line: 4161, column: 38, scope: !17392)
!17413 = !DILocation(line: 4161, column: 9, scope: !17392)
!17414 = !DILocation(line: 4161, column: 7, scope: !17392)
!17415 = !DILocation(line: 4162, column: 8, scope: !17416)
!17416 = distinct !DILexicalBlock(scope: !17392, file: !3, line: 4162, column: 7)
!17417 = !DILocation(line: 4162, column: 7, scope: !17392)
!17418 = !DILocation(line: 4163, column: 4, scope: !17416)
!17419 = !DILocation(line: 4165, column: 25, scope: !17392)
!17420 = !DILocation(line: 4165, column: 3, scope: !17392)
!17421 = !DILocation(line: 4166, column: 15, scope: !17392)
!17422 = !DILocation(line: 4166, column: 20, scope: !17392)
!17423 = !DILocation(line: 4166, column: 3, scope: !17392)
!17424 = !DILocation(line: 4167, column: 3, scope: !17392)
!17425 = !DILocation(line: 4170, column: 2, scope: !17375)
!17426 = distinct !DISubprogram(name: "acpi_spi_find_controller_by_adev", scope: !3, file: !3, line: 4118, type: !17427, scopeLine: 4119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17427 = !DISubroutineType(types: !17428)
!17428 = !{!4512, !229}
!17429 = !DILocalVariable(name: "adev", arg: 1, scope: !17426, file: !3, line: 4118, type: !229)
!17430 = !DILocation(line: 4118, column: 84, scope: !17426)
!17431 = !DILocalVariable(name: "dev", scope: !17426, file: !3, line: 4120, type: !3506)
!17432 = !DILocation(line: 4120, column: 17, scope: !17426)
!17433 = !DILocation(line: 4122, column: 51, scope: !17426)
!17434 = !DILocation(line: 4122, column: 8, scope: !17426)
!17435 = !DILocation(line: 4122, column: 6, scope: !17426)
!17436 = !DILocation(line: 4124, column: 7, scope: !17437)
!17437 = distinct !DILexicalBlock(scope: !17426, file: !3, line: 4124, column: 6)
!17438 = !DILocation(line: 4124, column: 11, scope: !17437)
!17439 = !DILocation(line: 4124, column: 6, scope: !17426)
!17440 = !DILocation(line: 4125, column: 51, scope: !17437)
!17441 = !DILocation(line: 4125, column: 9, scope: !17437)
!17442 = !DILocation(line: 4125, column: 7, scope: !17437)
!17443 = !DILocation(line: 4125, column: 3, scope: !17437)
!17444 = !DILocation(line: 4127, column: 7, scope: !17445)
!17445 = distinct !DILexicalBlock(scope: !17426, file: !3, line: 4127, column: 6)
!17446 = !DILocation(line: 4127, column: 6, scope: !17426)
!17447 = !DILocation(line: 4128, column: 3, scope: !17445)
!17448 = !DILocalVariable(name: "__mptr", scope: !17449, file: !3, line: 4130, type: !228)
!17449 = distinct !DILexicalBlock(scope: !17426, file: !3, line: 4130, column: 9)
!17450 = !DILocation(line: 4130, column: 9, scope: !17449)
!17451 = !DILocation(line: 4130, column: 9, scope: !17452)
!17452 = distinct !DILexicalBlock(scope: !17449, file: !3, line: 4130, column: 9)
!17453 = !DILocation(line: 4130, column: 2, scope: !17426)
!17454 = !DILocation(line: 4131, column: 1, scope: !17426)
!17455 = distinct !DISubprogram(name: "acpi_spi_find_device_by_adev", scope: !3, file: !3, line: 4133, type: !17456, scopeLine: 4134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17456 = !DISubroutineType(types: !17457)
!17457 = !{!4532, !229}
!17458 = !DILocalVariable(name: "adev", arg: 1, scope: !17455, file: !3, line: 4133, type: !229)
!17459 = !DILocation(line: 4133, column: 76, scope: !17455)
!17460 = !DILocalVariable(name: "dev", scope: !17455, file: !3, line: 4135, type: !3506)
!17461 = !DILocation(line: 4135, column: 17, scope: !17455)
!17462 = !DILocation(line: 4137, column: 51, scope: !17455)
!17463 = !DILocation(line: 4137, column: 8, scope: !17455)
!17464 = !DILocation(line: 4137, column: 6, scope: !17455)
!17465 = !DILocation(line: 4138, column: 23, scope: !17455)
!17466 = !DILocation(line: 4138, column: 9, scope: !17455)
!17467 = !DILocation(line: 4138, column: 2, scope: !17455)
!17468 = distinct !DISubprogram(name: "spi_acpi_controller_match", scope: !3, file: !3, line: 4113, type: !9728, scopeLine: 4114, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17469 = !DILocalVariable(name: "dev", arg: 1, scope: !17468, file: !3, line: 4113, type: !3506)
!17470 = !DILocation(line: 4113, column: 53, scope: !17468)
!17471 = !DILocalVariable(name: "data", arg: 2, scope: !17468, file: !3, line: 4113, type: !269)
!17472 = !DILocation(line: 4113, column: 70, scope: !17468)
!17473 = !DILocalVariable(name: "__to_acpi_device_node_fwnode", scope: !17474, file: !3, line: 4115, type: !243)
!17474 = distinct !DILexicalBlock(scope: !17468, file: !3, line: 4115, column: 9)
!17475 = !DILocation(line: 4115, column: 9, scope: !17474)
!17476 = !DILocalVariable(name: "__mptr", scope: !17477, file: !3, line: 4115, type: !228)
!17477 = distinct !DILexicalBlock(scope: !17474, file: !3, line: 4115, column: 9)
!17478 = !DILocation(line: 4115, column: 9, scope: !17477)
!17479 = !DILocation(line: 4115, column: 9, scope: !17480)
!17480 = distinct !DILexicalBlock(scope: !17477, file: !3, line: 4115, column: 9)
!17481 = !DILocation(line: 4115, column: 40, scope: !17468)
!17482 = !DILocation(line: 4115, column: 37, scope: !17468)
!17483 = !DILocation(line: 4115, column: 2, scope: !17468)
!17484 = distinct !DISubprogram(name: "bus_find_device_by_acpi_dev", scope: !3565, file: !3565, line: 237, type: !17485, scopeLine: 238, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !311)
!17485 = !DISubroutineType(types: !17486)
!17486 = !{!3506, !3563, !17487}
!17487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17488, size: 64)
!17488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !230)
!17489 = !DILocalVariable(name: "bus", arg: 1, scope: !17484, file: !3565, line: 237, type: !3563)
!17490 = !DILocation(line: 237, column: 46, scope: !17484)
!17491 = !DILocalVariable(name: "adev", arg: 2, scope: !17484, file: !3565, line: 237, type: !17487)
!17492 = !DILocation(line: 237, column: 77, scope: !17484)
!17493 = !DILocation(line: 239, column: 25, scope: !17484)
!17494 = !DILocation(line: 239, column: 36, scope: !17484)
!17495 = !DILocation(line: 239, column: 9, scope: !17484)
!17496 = !DILocation(line: 239, column: 2, scope: !17484)
